; ModuleID = '/llk/IR/kernel/events/core.c_pt.bc'
source_filename = "../kernel/events/core.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_disable\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_disable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_enable\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_enable:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_addr_filters_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_addr_filters_sync\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_addr_filters_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_refresh:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_refresh\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_refresh:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_release_kernel:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_release_kernel\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_release_kernel:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_read_value:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_read_value\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_read_value:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_pause:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_pause\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_pause:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_period:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_period\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_period:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_update_userpage:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_update_userpage\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_update_userpage:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_swevent_get_recursion_context:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_swevent_get_recursion_context\22\09\09\09\09\09"
module asm "__kstrtabns_perf_swevent_get_recursion_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_trace_run_bpf_submit:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_trace_run_bpf_submit\22\09\09\09\09\09"
module asm "__kstrtabns_perf_trace_run_bpf_submit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_tp_event:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_tp_event\22\09\09\09\09\09"
module asm "__kstrtabns_perf_tp_event:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_pmu_register:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_pmu_register\22\09\09\09\09\09"
module asm "__kstrtabns_perf_pmu_register:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_pmu_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_pmu_unregister\22\09\09\09\09\09"
module asm "__kstrtabns_perf_pmu_unregister:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_create_kernel_counter:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_create_kernel_counter\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_create_kernel_counter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_pmu_migrate_context:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_pmu_migrate_context\22\09\09\09\09\09"
module asm "__kstrtabns_perf_pmu_migrate_context:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_sysfs_show:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_sysfs_show\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_sysfs_show:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.irq_work = type { %struct.__call_single_node, ptr, %struct.rcuwait }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.1 }
%struct.llist_node = type { ptr }
%union.anon.1 = type { i32 }
%struct.rcuwait = type { ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.list_head = type { ptr, ptr }
%struct.perf_callchain_entry = type { i64, [0 x i64] }
%struct.proc_ns_operations = type { ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr }
%struct.swevent_htable = type { ptr, %struct.mutex, i32, [4 x i32] }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.cpumask = type { [1 x i32] }
%struct.srcu_struct = type { [1 x %struct.srcu_node], [2 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.hlist_node = type { ptr, ptr }
%struct.lockdep_map = type {}
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type {}
%struct.pmu = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, %struct.atomic_t, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.static_call_key = type { ptr }
%struct.pt_regs = type { [18 x i32] }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.pmu_event_list = type { %struct.raw_spinlock, %struct.list_head }
%struct.cpu_topology = type { i32, i32, i32, i32, i32, %struct.cpumask, %struct.cpumask, %struct.cpumask, %struct.cpumask }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.atomic64_t = type { i64 }
%struct.match_token = type { i32, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.vm_operations_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.perf_event = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, i64, %struct.list_head, %struct.hlist_node, %struct.list_head, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.local64_t, %struct.atomic64_t, i64, i64, i64, %struct.perf_event_attr, i16, i16, i16, %struct.hw_perf_event, ptr, %struct.atomic_t, %struct.atomic64_t, %struct.atomic64_t, %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.list_head, ptr, %struct.mutex, %struct.atomic_t, ptr, %struct.list_head, i32, i32, %struct.wait_queue_head, ptr, i32, i32, i32, i32, %struct.irq_work, %struct.atomic_t, %struct.perf_addr_filters_head, ptr, i32, ptr, ptr, %struct.callback_head, ptr, i64, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.local64_t = type { %struct.atomic64_t }
%struct.perf_event_attr = type { i32, i32, i64, %union.anon.157, i64, i64, i64, %union.anon.158, i32, %union.anon.159, %union.anon.160, i64, i64, i32, i32, i64, i32, i16, i16, i32, i32, i64 }
%union.anon.157 = type { i64 }
%union.anon.158 = type { i32 }
%union.anon.159 = type { i64 }
%union.anon.160 = type { i64 }
%struct.hw_perf_event = type { %union.anon.161, ptr, ptr, i32, i32, %struct.local64_t, i64, %union.anon.168, i64, i64, i64, i64 }
%union.anon.161 = type { %struct.anon.162 }
%struct.anon.162 = type { i64, i64, i32, i32, i32, i32, i32, i32, %struct.hw_perf_event_extra, %struct.hw_perf_event_extra }
%struct.hw_perf_event_extra = type { i64, i32, i32, i32 }
%union.anon.168 = type { %struct.anon.169 }
%struct.anon.169 = type { i64, %struct.local64_t }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.perf_addr_filters_head = type { %struct.list_head, %struct.raw_spinlock, i32 }
%struct.callback_head = type { ptr, ptr }
%struct.perf_event_context = type { ptr, %struct.raw_spinlock, %struct.mutex, %struct.list_head, %struct.perf_event_groups, %struct.perf_event_groups, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, i32, %struct.refcount_struct, ptr, i64, i64, i64, ptr, i64, i64, i32, ptr, %struct.callback_head }
%struct.perf_event_groups = type { %struct.rb_root, i64 }
%struct.rb_root = type { ptr }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.perf_cpu_context = type { %struct.perf_event_context, ptr, i32, i32, %struct.raw_spinlock, %struct.hrtimer, i64, i32, %struct.list_head, i32, i32, i32, ptr, [2 x ptr] }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.perf_switch_event = type { ptr, ptr, %struct.anon.195 }
%struct.anon.195 = type { %struct.perf_event_header, i32, i32 }
%struct.perf_event_header = type { i32, i16, i16 }
%struct.task_struct = type { %struct.thread_info, i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, [36 x i8], %struct.sched_statistics, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i8, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.153, ptr, %struct.page_frag, i32, i32, i32, i64, i64, i32, i32, ptr, %struct.kmap_ctrl, i32, ptr, %struct.refcount_struct, %struct.thread_struct, [16 x i8] }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, [56 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [8 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.sched_statistics = type {}
%struct.sched_info = type {}
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.131 }
%union.anon.131 = type { %struct.anon.132 }
%struct.anon.132 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.task_io_accounting = type {}
%struct.tlbflush_unmap_batch = type {}
%union.anon.153 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.kmap_ctrl = type { i32, [16 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.perf_buffer = type { %struct.refcount_struct, %struct.callback_head, %struct.work_struct, i32, i32, i32, i32, %struct.atomic_t, %struct.local_t, i32, %struct.local_t, %struct.local_t, %struct.local_t, i32, i32, %struct.spinlock, %struct.list_head, %struct.atomic_t, i32, ptr, i32, i32, i32, i32, i32, i32, %struct.atomic_t, i32, ptr, %struct.refcount_struct, i32, ptr, ptr, ptr, [0 x ptr] }
%struct.local_t = type { %struct.atomic_t }
%struct.perf_event_mmap_page = type { i32, i32, i32, i32, i64, i64, i64, %union.anon.148, i16, i16, i32, i64, i64, i32, i32, i64, i64, [928 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }
%union.anon.148 = type { i64 }
%struct.perf_sample_data = type { i64, ptr, ptr, i64, %union.perf_sample_weight, i64, %union.perf_mem_data_src, i64, i64, %struct.anon.174, i64, i64, i64, %struct.anon.175, ptr, i64, %struct.perf_regs, %struct.perf_regs, i64, i64, i64, i64, i64 }
%union.perf_sample_weight = type { i64 }
%union.perf_mem_data_src = type { i64 }
%struct.anon.174 = type { i32, i32 }
%struct.anon.175 = type { i32, i32 }
%struct.perf_regs = type { i64, ptr }
%struct.anon.181 = type { i32, i32 }
%struct.perf_output_handle = type { ptr, ptr, i32, i32, i64, %union.anon.150, i32 }
%union.anon.150 = type { ptr }
%struct.perf_raw_record = type { %struct.perf_raw_frag, i32 }
%struct.perf_raw_frag = type { %union.anon.171, ptr, ptr, i32 }
%union.anon.171 = type { ptr }
%struct.perf_branch_stack = type { i64, i64, [0 x %struct.perf_branch_entry] }
%struct.perf_branch_entry = type { i64, i64, i64 }
%struct.page = type { i32, %union.anon.6, %union.anon.130, %struct.atomic_t }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.130 = type { %struct.atomic_t }
%struct.remote_function_call = type { ptr, ptr, ptr, i32 }
%struct.stop_event_data = type { ptr, i32 }
%struct.perf_addr_filter = type { %struct.list_head, %struct.path, i32, i32, i32 }
%struct.path = type { ptr, ptr }
%struct.perf_addr_filter_range = type { i32, i32 }
%struct.perf_task_event = type { ptr, ptr, %struct.anon.194 }
%struct.anon.194 = type { %struct.perf_event_header, i32, i32, i32, i32, i64 }
%struct.perf_namespaces_event = type { ptr, %struct.anon.183 }
%struct.anon.183 = type { %struct.perf_event_header, i32, i32, i64, [7 x %struct.perf_ns_link_info] }
%struct.perf_ns_link_info = type { i64, i64 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.13, %struct.list_head, %struct.list_head, %union.anon.14 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.9, ptr }
%union.anon.9 = type { i64 }
%struct.lockref = type { %union.anon.11 }
%union.anon.11 = type { i64 }
%union.anon.13 = type { %struct.list_head }
%union.anon.14 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.177, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.178, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.179, ptr, %struct.address_space, %struct.list_head, %union.anon.180, i32, i32, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.177 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%union.anon.178 = type { %struct.callback_head }
%union.anon.179 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.180 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [56 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [40 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr }
%struct.perf_comm_event = type { ptr, ptr, i32, %struct.anon.182 }
%struct.anon.182 = type { %struct.perf_event_header, i32, i32 }
%struct.perf_mmap_event = type { ptr, ptr, i32, i32, i32, i64, i64, i32, i32, [20 x i8], i32, %struct.anon.184 }
%struct.anon.184 = type { %struct.perf_event_header, i32, i32, i64, i64, i64 }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.2, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type {}
%struct.file = type { %union.anon.8, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, i32, i32 }
%union.anon.8 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.anon = type { ptr, %struct.rb_root, i64, ptr, i32, i32, i32, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i32, i32, i32, i32, %struct.atomic64_t, i32, i32, i32, i32, %struct.seqcount, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [42 x i32], %struct.mm_rss_stat, ptr, %struct.mm_context_t, i32, %struct.spinlock, ptr, ptr, ptr, %struct.atomic_t, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.mm_rss_stat = type { [4 x %struct.atomic_t] }
%struct.mm_context_t = type { %struct.atomic64_t, i32, i32, i32 }
%struct.uprobes_state = type { ptr }
%struct.perf_aux_event = type { %struct.perf_event_header, i64, i64, i64 }
%struct.anon.185 = type { %struct.perf_event_header, i64 }
%struct.perf_ksymbol_event = type { ptr, i32, %struct.anon.186 }
%struct.anon.186 = type { %struct.perf_event_header, i64, i32, i16, i16 }
%struct.perf_bpf_event = type { ptr, %struct.anon.187 }
%struct.anon.187 = type { %struct.perf_event_header, i16, i16, i32, [8 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.111 }
%union.anon.111 = type { %struct.anon.112 }
%struct.anon.112 = type { %struct.anon.113, [0 x %struct.sock_filter] }
%struct.anon.113 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.110 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.110 = type { %struct.work_struct }
%struct.perf_text_poke_event = type { ptr, ptr, i32, i16, i16, %struct.anon.188 }
%struct.anon.188 = type { %struct.perf_event_header, i64 }
%struct.perf_aux_event.189 = type { %struct.perf_event_header, i64 }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.32, %struct.trace_event, ptr, ptr, %union.anon.33, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.32 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%union.anon.33 = type { ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.25 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.25 = type { %struct.callback_head }
%struct.wait_bit_queue_entry = type { %struct.wait_bit_key, %struct.wait_queue_entry }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.perf_pmu_events_attr = type { %struct.device_attribute, i64, ptr }
%struct.event_function_struct = type { ptr, ptr, ptr }
%struct.hrtimer_clock_base = type { ptr, i32, i32, %struct.seqcount_raw_spinlock, ptr, %struct.timerqueue_head, ptr, i64 }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.perf_aux_event.191 = type { %struct.perf_event_header, i32, i32 }
%struct.anon.190 = type { %struct.perf_event_header, i64, i64, i64 }
%struct.perf_read_event = type { %struct.perf_event_header, i32, i32 }
%struct.perf_read_data = type { ptr, i8, i32 }
%struct.substring_t = type { ptr, ptr }
%struct.user_struct = type { %struct.refcount_struct, %struct.percpu_counter, i32, %struct.atomic_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic_t, %struct.ratelimit_state }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.vm_fault = type { %struct.anon.4, i32, ptr, ptr, %union.anon.5, ptr, ptr, ptr, ptr, ptr }
%struct.anon.4 = type { ptr, i32, i32, i32 }
%union.anon.5 = type { i32 }
%struct.swevent_hlist = type { [256 x %struct.hlist_head], %struct.callback_head }

@perf_sched_events = dso_local global %struct.static_key_false zeroinitializer, align 4
@sysctl_perf_event_paranoid = dso_local local_unnamed_addr global i32 2, section ".data..read_mostly", align 4
@sysctl_perf_event_mlock = dso_local local_unnamed_addr global i32 516, section ".data..read_mostly", align 4
@sysctl_perf_event_sample_rate = dso_local local_unnamed_addr global i32 100000, section ".data..read_mostly", align 4
@sysctl_perf_cpu_time_max_percent = dso_local local_unnamed_addr global i32 25, section ".data..read_mostly", align 4
@max_samples_per_tick = internal global i32 1000, section ".data..read_mostly", align 4
@perf_sample_period_ns = internal unnamed_addr global i32 10000, section ".data..read_mostly", align 4
@.str = private unnamed_addr constant [70 x i8] c"\014perf: Dynamic interrupt throttling disabled, can hang your system!\0A\00", align 1
@perf_sample_allowed_ns = internal global i32 2500, section ".data..read_mostly", align 4
@running_sample_length = internal global i64 0, section ".data..percpu", align 8
@__report_avg = internal unnamed_addr global i64 0, align 8
@__report_allowed = internal unnamed_addr global i64 0, align 8
@perf_duration_work = internal global %struct.irq_work { %struct.__call_single_node zeroinitializer, ptr @perf_duration_warn, %struct.rcuwait zeroinitializer }, align 4
@__kstrtab_perf_event_disable = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_disable = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_disable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_disable to i32), ptr @__kstrtab_perf_event_disable, ptr @__kstrtabns_perf_event_disable }, section "___ksymtab_gpl+perf_event_disable", align 4
@__kstrtab_perf_event_enable = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_enable = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_enable = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_enable to i32), ptr @__kstrtab_perf_event_enable, ptr @__kstrtabns_perf_event_enable }, section "___ksymtab_gpl+perf_event_enable", align 4
@__kstrtab_perf_event_addr_filters_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_addr_filters_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_addr_filters_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_addr_filters_sync to i32), ptr @__kstrtab_perf_event_addr_filters_sync, ptr @__kstrtabns_perf_event_addr_filters_sync }, section "___ksymtab_gpl+perf_event_addr_filters_sync", align 4
@__kstrtab_perf_event_refresh = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_refresh = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_refresh = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_refresh to i32), ptr @__kstrtab_perf_event_refresh, ptr @__kstrtabns_perf_event_refresh }, section "___ksymtab_gpl+perf_event_refresh", align 4
@perf_sched_cb_usages = internal global i32 0, section ".data..percpu", align 4
@sched_cb_list = internal global %struct.list_head zeroinitializer, section ".data..percpu", align 4
@nr_switch_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@perf_cgroup_events = internal global %struct.atomic_t zeroinitializer, section ".data..percpu", align 4
@active_ctx_list = internal global %struct.list_head zeroinitializer, section ".data..percpu", align 4
@perf_throttled_seq = internal global i64 0, section ".data..percpu", align 8
@perf_throttled_count = internal global i32 0, section ".data..percpu", align 4
@perf_event_release_kernel.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"kernel/events/core.c\00", align 1
@perf_event_release_kernel.__already_done.7 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_perf_event_release_kernel = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_release_kernel = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_release_kernel = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_release_kernel to i32), ptr @__kstrtab_perf_event_release_kernel, ptr @__kstrtabns_perf_event_release_kernel }, section "___ksymtab_gpl+perf_event_release_kernel", align 4
@__kstrtab_perf_event_read_value = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_read_value = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_read_value = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_read_value to i32), ptr @__kstrtab_perf_event_read_value, ptr @__kstrtabns_perf_event_read_value }, section "___ksymtab_gpl+perf_event_read_value", align 4
@perf_event_pause.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_perf_event_pause = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_pause = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_pause = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_pause to i32), ptr @__kstrtab_perf_event_pause, ptr @__kstrtabns_perf_event_pause }, section "___ksymtab_gpl+perf_event_pause", align 4
@__kstrtab_perf_event_period = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_period = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_period = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_period to i32), ptr @__kstrtab_perf_event_period, ptr @__kstrtabns_perf_event_period }, section "___ksymtab_gpl+perf_event_period", align 4
@__kstrtab_perf_event_update_userpage = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_update_userpage = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_update_userpage = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_update_userpage to i32), ptr @__kstrtab_perf_event_update_userpage, ptr @__kstrtabns_perf_event_update_userpage }, section "___ksymtab_gpl+perf_event_update_userpage", align 4
@ring_buffer_put.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__empty_callchain = internal global %struct.perf_callchain_entry zeroinitializer, align 8
@perf_prepare_sample.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_prepare_sample.__already_done.8 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nr_comm_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@nr_namespaces_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@mntns_operations = external dso_local constant %struct.proc_ns_operations, align 4
@cgroupns_operations = external dso_local constant %struct.proc_ns_operations, align 4
@nr_mmap_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@nr_ksymbol_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@perf_event_ksymbol.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"%s: Invalid KSYMBOL type 0x%x\0A\00", align 1
@__func__.perf_event_ksymbol = private unnamed_addr constant [19 x i8] c"perf_event_ksymbol\00", align 1
@nr_bpf_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@nr_text_poke_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@swevent_htable = internal global %struct.swevent_htable zeroinitializer, section ".data..percpu", align 4
@__kstrtab_perf_swevent_get_recursion_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_swevent_get_recursion_context = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_swevent_get_recursion_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_swevent_get_recursion_context to i32), ptr @__kstrtab_perf_swevent_get_recursion_context, ptr @__kstrtabns_perf_swevent_get_recursion_context }, section "___ksymtab_gpl+perf_swevent_get_recursion_context", align 4
@___perf_sw_event.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_perf_trace_run_bpf_submit = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_trace_run_bpf_submit = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_trace_run_bpf_submit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_trace_run_bpf_submit to i32), ptr @__kstrtab_perf_trace_run_bpf_submit, ptr @__kstrtabns_perf_trace_run_bpf_submit }, section "___ksymtab_gpl+perf_trace_run_bpf_submit", align 4
@__kstrtab_perf_tp_event = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_tp_event = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_tp_event = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_tp_event to i32), ptr @__kstrtab_perf_tp_event, ptr @__kstrtabns_perf_tp_event }, section "___ksymtab_gpl+perf_tp_event", align 4
@.str.10 = private unnamed_addr constant [16 x i8] c"nr_addr_filters\00", align 1
@dev_attr_nr_addr_filters = dso_local global %struct.device_attribute { %struct.attribute { ptr @.str.10, i16 292 }, ptr @nr_addr_filters_show, ptr null }, align 4
@pmus_lock = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @pmus_lock, i64 12), ptr getelementptr (i8, ptr @pmus_lock, i64 12) } }, align 4
@pmu_idr = internal global %struct.idr zeroinitializer, align 4
@pmu_bus_running = internal unnamed_addr global i1 false, align 4
@perf_pmu_register.hw_context_taken = internal unnamed_addr global i1 false, align 4
@perf_pmu_register.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [16 x i32], align 4
@perf_online_mask = internal global [1 x %struct.cpumask] zeroinitializer, align 4
@pmus = internal global %struct.list_head { ptr @pmus, ptr @pmus }, align 4
@__kstrtab_perf_pmu_register = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_pmu_register = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_pmu_register = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_pmu_register to i32), ptr @__kstrtab_perf_pmu_register, ptr @__kstrtabns_perf_pmu_register }, section "___ksymtab_gpl+perf_pmu_register", align 4
@pmus_srcu = internal global %struct.srcu_struct zeroinitializer, align 4
@__kstrtab_perf_pmu_unregister = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_pmu_unregister = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_pmu_unregister = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_pmu_unregister to i32), ptr @__kstrtab_perf_pmu_unregister, ptr @__kstrtabns_perf_pmu_unregister }, section "___ksymtab_gpl+perf_pmu_unregister", align 4
@perf_event_create_kernel_counter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_perf_event_create_kernel_counter = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_create_kernel_counter = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_create_kernel_counter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_create_kernel_counter to i32), ptr @__kstrtab_perf_event_create_kernel_counter, ptr @__kstrtabns_perf_event_create_kernel_counter }, section "___ksymtab_gpl+perf_event_create_kernel_counter", align 4
@__kstrtab_perf_pmu_migrate_context = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_pmu_migrate_context = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_pmu_migrate_context = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_pmu_migrate_context to i32), ptr @__kstrtab_perf_pmu_migrate_context, ptr @__kstrtabns_perf_pmu_migrate_context }, section "___ksymtab_gpl+perf_pmu_migrate_context", align 4
@perf_event_delayed_put.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_fops = internal constant %struct.file_operations { ptr null, ptr @no_llseek, ptr @perf_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @perf_poll, ptr @perf_ioctl, ptr null, ptr @perf_mmap, i32 0, ptr null, ptr null, ptr @perf_release, ptr null, ptr @perf_fasync, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@perf_event_init_task.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"&child->perf_event_mutex\00", align 1
@perf_swevent = internal global %struct.pmu { %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 2, ptr null, ptr null, %struct.atomic_t zeroinitializer, i32 1, i32 0, i32 0, ptr null, ptr null, ptr @perf_swevent_init, ptr null, ptr null, ptr @perf_swevent_add, ptr @perf_swevent_del, ptr @perf_swevent_start, ptr @perf_swevent_stop, ptr @perf_swevent_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@.str.12 = private unnamed_addr constant [9 x i8] c"software\00", align 1
@perf_cpu_clock = internal global %struct.pmu { %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 2, ptr null, ptr null, %struct.atomic_t zeroinitializer, i32 1, i32 0, i32 0, ptr null, ptr null, ptr @cpu_clock_event_init, ptr null, ptr null, ptr @cpu_clock_event_add, ptr @cpu_clock_event_del, ptr @cpu_clock_event_start, ptr @cpu_clock_event_stop, ptr @cpu_clock_event_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@perf_task_clock = internal global %struct.pmu { %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 2, ptr null, ptr null, %struct.atomic_t zeroinitializer, i32 1, i32 0, i32 0, ptr null, ptr null, ptr @task_clock_event_init, ptr null, ptr null, ptr @task_clock_event_add, ptr @task_clock_event_del, ptr @task_clock_event_start, ptr @task_clock_event_stop, ptr @task_clock_event_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@perf_reboot_notifier = internal global %struct.notifier_block { ptr @perf_reboot, ptr null, i32 -2147483648 }, align 4
@.str.13 = private unnamed_addr constant [45 x i8] c"hw_breakpoint initialization failed with: %d\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"perf_event\00", align 1
@perf_event_cache = internal unnamed_addr global ptr null, align 4
@.str.15 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@__kstrtab_perf_event_sysfs_show = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_sysfs_show = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_sysfs_show = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_sysfs_show to i32), ptr @__kstrtab_perf_event_sysfs_show, ptr @__kstrtabns_perf_event_sysfs_show }, section "___ksymtab_gpl+perf_event_sysfs_show", align 4
@__initcall__kmod_core__537_13528_perf_event_sysfs_init6 = internal global ptr @perf_event_sysfs_init, section ".initcall6.init", align 4
@__SCK__perf_snapshot_branch_stack = dso_local local_unnamed_addr global %struct.static_call_key { ptr @__static_call_return0 }, align 4
@__perf_regs = dso_local local_unnamed_addr global [4 x %struct.pt_regs] zeroinitializer, section ".data..percpu", align 4
@perf_swevent_enabled = dso_local global [12 x %struct.static_key] zeroinitializer, align 4
@perf_duration_warn._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock zeroinitializer, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, align 4
@__func__.perf_duration_warn = private unnamed_addr constant [19 x i8] c"perf_duration_warn\00", align 1
@.str.16 = private unnamed_addr constant [97 x i8] c"\016perf: interrupt took too long (%lld > %lld), lowering kernel.perf_event_max_sample_rate to %d\0A\00", align 1
@event_function_local.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_function_local.__already_done.17 = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_function_local.__already_done.18 = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_sched_out.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_function.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_function.__already_done.19 = internal unnamed_addr global i1 false, section ".data.once", align 1
@event_function.__already_done.20 = internal unnamed_addr global i1 false, section ".data.once", align 1
@task_ctx_sched_out.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@ctx_sched_out.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@ctx_sched_out.__already_done.21 = internal unnamed_addr global i1 false, section ".data.once", align 1
@ctx_sched_out.__already_done.22 = internal unnamed_addr global i1 false, section ".data.once", align 1
@ctx_sched_in.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@min_heap_pop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"include/linux/min_heap.h\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"Popping an empty heap\00", align 1
@event_sched_in.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__perf_event_enable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__perf_pmu_sched_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__perf_remove_from_context.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_group_detach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_child_detach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@list_del_event.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_event_groups_delete.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nr_build_id_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@nr_cgroup_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@nr_task_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@perf_sched_count = internal global %struct.atomic_t zeroinitializer, align 4
@perf_sched_work = internal global %struct.delayed_work { %struct.work_struct { %struct.atomic_t { i32 -32 }, %struct.list_head { ptr getelementptr (i8, ptr @perf_sched_work, i64 4), ptr getelementptr (i8, ptr @perf_sched_work, i64 4) }, ptr @perf_sched_delayed }, %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @delayed_work_timer_fn, i32 2097152 }, ptr null, i32 0 }, align 4
@nr_freq_events = internal global %struct.atomic_t zeroinitializer, section ".data..read_mostly", align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@perf_sched_mutex = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @perf_sched_mutex, i64 12), ptr getelementptr (i8, ptr @perf_sched_mutex, i64 12) } }, align 4
@static_key_initialized = external dso_local local_unnamed_addr global i8, align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"include/linux/jump_label.h\00", align 1
@.str.26 = private unnamed_addr constant [61 x i8] c"%s(): static key '%pS' used before call to jump_label_init()\00", align 1
@__func__.static_key_disable = private unnamed_addr constant [19 x i8] c"static_key_disable\00", align 1
@static_key_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@pmu_sb_events = internal global %struct.pmu_event_list zeroinitializer, section ".data..percpu", align 4
@ring_buffer_attach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@ring_buffer_attach.__already_done.27 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.28 = private unnamed_addr constant [40 x i8] c"unexpected event refcount: %ld; ptr=%p\0A\00", align 1
@cpu_topology = external dso_local local_unnamed_addr global [16 x %struct.cpu_topology], align 4
@perf_event_for_each_child.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_aux_sample_output.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_aux_sample_output.__already_done.29 = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_aux_sample_output.__already_done.30 = internal unnamed_addr global i1 false, section ".data.once", align 1
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@perf_prepare_sample_aux.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_prepare_sample_aux.__already_done.31 = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_event_remove_on_exec.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_lock_task_context.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"//enomem\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"//toolong\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"[heap]\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"[stack]\00", align 1
@.str.36 = private unnamed_addr constant [7 x i8] c"//anon\00", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@perf_tracepoint = internal global %struct.pmu { %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, i32 0, ptr null, ptr null, %struct.atomic_t zeroinitializer, i32 1, i32 0, i32 0, ptr null, ptr null, ptr @perf_tp_event_init, ptr null, ptr null, ptr @perf_trace_add, ptr @perf_trace_del, ptr @perf_swevent_start, ptr @perf_swevent_stop, ptr @perf_swevent_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@perf_uprobe = internal global %struct.pmu { %struct.list_head zeroinitializer, ptr null, ptr null, ptr @uprobe_attr_groups, ptr null, ptr null, i32 0, i32 0, ptr null, ptr null, %struct.atomic_t zeroinitializer, i32 1, i32 0, i32 0, ptr null, ptr null, ptr @perf_uprobe_event_init, ptr null, ptr null, ptr @perf_trace_add, ptr @perf_trace_del, ptr @perf_swevent_start, ptr @perf_swevent_stop, ptr @perf_swevent_read, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@uprobe_attr_groups = internal global [2 x ptr] [ptr @uprobe_format_group, ptr null], align 4
@uprobe_format_group = internal global %struct.attribute_group { ptr @.str.37, ptr null, ptr null, ptr @uprobe_attrs, ptr null }, align 4
@.str.37 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@uprobe_attrs = internal global [3 x ptr] [ptr @format_attr_retprobe, ptr @format_attr_ref_ctr_offset, ptr null], align 4
@format_attr_retprobe = internal global %struct.device_attribute { %struct.attribute { ptr @.str.38, i16 292 }, ptr @retprobe_show, ptr null }, align 4
@format_attr_ref_ctr_offset = internal global %struct.device_attribute { %struct.attribute { ptr @.str.40, i16 292 }, ptr @ref_ctr_offset_show, ptr null }, align 4
@.str.38 = private unnamed_addr constant [9 x i8] c"retprobe\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"config:0\0A\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"ref_ctr_offset\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c"config:32-63\0A\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@pmu_bus = internal global %struct.bus_type { ptr @.str.44, ptr null, ptr null, ptr null, ptr @pmu_dev_groups, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer, i8 0 }, align 4
@.str.44 = private unnamed_addr constant [13 x i8] c"event_source\00", align 1
@pmu_dev_groups = internal global [2 x ptr] [ptr @pmu_dev_group, ptr null], align 4
@pmu_dev_group = internal constant %struct.attribute_group { ptr null, ptr null, ptr null, ptr @pmu_dev_attrs, ptr null }, align 4
@pmu_dev_attrs = internal global [3 x ptr] [ptr @dev_attr_type, ptr @dev_attr_perf_event_mux_interval_ms, ptr null], align 4
@dev_attr_type = internal global %struct.device_attribute { %struct.attribute { ptr @.str.45, i16 292 }, ptr @type_show, ptr null }, align 4
@dev_attr_perf_event_mux_interval_ms = internal global %struct.device_attribute { %struct.attribute { ptr @.str.46, i16 420 }, ptr @perf_event_mux_interval_ms_show, ptr @perf_event_mux_interval_ms_store }, align 4
@.str.45 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"perf_event_mux_interval_ms\00", align 1
@mux_interval_mutex = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @mux_interval_mutex, i64 12), ptr getelementptr (i8, ptr @mux_interval_mutex, i64 12) } }, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@__perf_event_init_context.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.47 = private unnamed_addr constant [12 x i8] c"&ctx->mutex\00", align 1
@nop_txn_flags = internal global i32 0, section ".data..percpu", align 4
@.str.48 = private unnamed_addr constant [13 x i8] c"[perf_event]\00", align 1
@__do_sys_perf_event_open.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@sysctl_perf_event_max_stack = external dso_local local_unnamed_addr global i32, align 4
@perf_event_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"&event->child_mutex\00", align 1
@perf_event_alloc.__key.52 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"&event->waitq\00", align 1
@perf_event_alloc.__key.54 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.55 = private unnamed_addr constant [19 x i8] c"&event->mmap_mutex\00", align 1
@perf_event_id = internal global %struct.atomic64_t zeroinitializer, align 8
@perf_sigtrap.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@srcu_read_unlock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"include/linux/srcu.h\00", align 1
@__func__.static_key_enable = private unnamed_addr constant [18 x i8] c"static_key_enable\00", align 1
@static_key_enable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_install_in_context.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_install_in_context.__already_done.57 = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_install_in_context.__already_done.58 = internal unnamed_addr global i1 false, section ".data.once", align 1
@list_add_event.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_group_attach.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__perf_install_in_context.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_event_exit_task_context.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_free_event.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__perf_read.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_event_set_addr_filter.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c" ,\0A\00", align 1
@perf_event_parse_addr_filter.actions = internal unnamed_addr constant [3 x i32] [i32 2, i32 1, i32 0], align 4
@if_tokens = internal constant [8 x %struct.match_token] [%struct.match_token { i32 0, ptr @.str.60 }, %struct.match_token { i32 1, ptr @.str.61 }, %struct.match_token { i32 2, ptr @.str.62 }, %struct.match_token { i32 3, ptr @.str.63 }, %struct.match_token { i32 4, ptr @.str.64 }, %struct.match_token { i32 5, ptr @.str.65 }, %struct.match_token { i32 6, ptr @.str.66 }, %struct.match_token { i32 -1, ptr null }], align 4
@.str.60 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"%u/%u@%s\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"%u/%u\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"%u@%s\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@__tracepoint_mmap_lock_start_locking = external dso_local global %struct.tracepoint, align 4
@__tracepoint_mmap_lock_acquire_returned = external dso_local global %struct.tracepoint, align 4
@__tracepoint_mmap_lock_released = external dso_local global %struct.tracepoint, align 4
@perf_event_modify_attr.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_mmap.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_mmap_vmops = internal constant %struct.vm_operations_struct { ptr @perf_mmap_open, ptr @perf_mmap_close, ptr null, ptr null, ptr null, ptr @perf_mmap_fault, ptr null, ptr null, ptr null, ptr @perf_mmap_fault, ptr null, ptr null, ptr null, ptr null }, align 4
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@perf_mmap_close.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@perf_event_init_all_cpus.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.67 = private unnamed_addr constant [21 x i8] c"&swhash->hlist_mutex\00", align 1
@__func__.static_key_slow_inc = private unnamed_addr constant [20 x i8] c"static_key_slow_inc\00", align 1
@__func__.static_key_slow_dec = private unnamed_addr constant [20 x i8] c"static_key_slow_dec\00", align 1
@perf_swevent_add.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__irq_regs = external dso_local global ptr, section ".data..percpu", align 4
@.str.68 = private unnamed_addr constant [11 x i8] c"tracepoint\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"uprobe\00", align 1
@.str.70 = private unnamed_addr constant [39 x i8] c"Failed to register pmu: %s, reason %d\0A\00", align 1
@llvm.compiler.used = appending global [18 x ptr] [ptr @__initcall__kmod_core__537_13528_perf_event_sysfs_init6, ptr @__ksymtab_perf_event_addr_filters_sync, ptr @__ksymtab_perf_event_create_kernel_counter, ptr @__ksymtab_perf_event_disable, ptr @__ksymtab_perf_event_enable, ptr @__ksymtab_perf_event_pause, ptr @__ksymtab_perf_event_period, ptr @__ksymtab_perf_event_read_value, ptr @__ksymtab_perf_event_refresh, ptr @__ksymtab_perf_event_release_kernel, ptr @__ksymtab_perf_event_sysfs_show, ptr @__ksymtab_perf_event_update_userpage, ptr @__ksymtab_perf_pmu_migrate_context, ptr @__ksymtab_perf_pmu_register, ptr @__ksymtab_perf_pmu_unregister, ptr @__ksymtab_perf_swevent_get_recursion_context, ptr @__ksymtab_perf_tp_event, ptr @__ksymtab_perf_trace_run_bpf_submit], section "llvm.metadata"

@sys_perf_event_open = dso_local alias i32 (ptr, i32, i32, i32, i32), ptr @__se_sys_perf_event_open

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_proc_update_handler(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #0 {
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i32 @proc_dointvec_minmax(ptr noundef %0, i32 noundef 0, ptr noundef %2, ptr noundef %3, ptr noundef %4) #27
  br label %32

9:                                                ; preds = %5
  %10 = load i32, ptr @sysctl_perf_cpu_time_max_percent, align 4
  switch i32 %10, label %11 [
    i32 100, label %32
    i32 0, label %32
  ]

11:                                               ; preds = %9
  %12 = tail call i32 @proc_dointvec_minmax(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #27
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %11
  %15 = load i32, ptr @sysctl_perf_event_sample_rate, align 4
  %16 = add i32 %15, 99
  %17 = sdiv i32 %16, 100
  store i32 %17, ptr @max_samples_per_tick, align 4
  %18 = sdiv i32 1000000000, %15
  store i32 %18, ptr @perf_sample_period_ns, align 4
  %19 = sext i32 %18 to i64
  %20 = load i32, ptr @sysctl_perf_cpu_time_max_percent, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %19
  %23 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %22, i32 0) #28, !srcloc !9
  %24 = extractvalue { i64, i32 } %23, 0
  %25 = extractvalue { i64, i32 } %23, 1
  %26 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %22, i64 %24, i32 %25) #28, !srcloc !10
  %27 = extractvalue { i64, i32 } %26, 0
  %28 = lshr i64 %27, 6
  %29 = icmp ult i64 %27, 64
  %30 = trunc i64 %28 to i32
  %31 = select i1 %29, i32 1, i32 %30
  store volatile i32 %31, ptr @perf_sample_allowed_ns, align 4
  br label %32

32:                                               ; preds = %14, %11, %9, %9, %7
  %33 = phi i32 [ 0, %14 ], [ -22, %9 ], [ -22, %9 ], [ %12, %11 ], [ %8, %7 ]
  ret i32 %33
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_dointvec_minmax(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_cpu_time_max_percent_handler(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #0 {
  %6 = tail call i32 @proc_dointvec_minmax(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #27
  %7 = icmp eq i32 %6, 0
  %8 = icmp ne i32 %1, 0
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %30

10:                                               ; preds = %5
  %11 = load i32, ptr @sysctl_perf_cpu_time_max_percent, align 4
  switch i32 %11, label %14 [
    i32 100, label %12
    i32 0, label %12
  ]

12:                                               ; preds = %10, %10
  %13 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str) #29
  br label %28

14:                                               ; preds = %10
  %15 = load i32, ptr @perf_sample_period_ns, align 4
  %16 = sext i32 %15 to i64
  %17 = sext i32 %11 to i64
  %18 = mul nsw i64 %16, %17
  %19 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %18, i32 0) #28, !srcloc !9
  %20 = extractvalue { i64, i32 } %19, 0
  %21 = extractvalue { i64, i32 } %19, 1
  %22 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %18, i64 %20, i32 %21) #28, !srcloc !10
  %23 = extractvalue { i64, i32 } %22, 0
  %24 = lshr i64 %23, 6
  %25 = icmp ult i64 %23, 64
  %26 = trunc i64 %24 to i32
  %27 = select i1 %25, i32 1, i32 %26
  br label %28

28:                                               ; preds = %14, %12
  %29 = phi i32 [ 0, %12 ], [ %27, %14 ]
  store volatile i32 %29, ptr @perf_sample_allowed_ns, align 4
  br label %30

30:                                               ; preds = %28, %5
  %31 = phi i32 [ %6, %5 ], [ 0, %28 ]
  ret i32 %31
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_sample_event_took(i64 noundef %0) local_unnamed_addr #0 {
  %2 = load volatile i32, ptr @perf_sample_allowed_ns, align 4
  %3 = sext i32 %2 to i64
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %32, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #19, !srcloc !11
  %9 = add i32 %8, ptrtoint (ptr @running_sample_length to i32)
  %10 = inttoptr i32 %9 to ptr
  %11 = load i64, ptr %10, align 8
  %12 = lshr i64 %11, 7
  %13 = sub i64 %11, %12
  %14 = add i64 %13, %0
  store i64 %14, ptr %10, align 8
  %15 = lshr i64 %14, 7
  %16 = icmp ugt i64 %15, %3
  br i1 %16, label %17, label %32

17:                                               ; preds = %5
  store i64 %15, ptr @__report_avg, align 8
  store i64 %3, ptr @__report_allowed, align 8
  %18 = lshr i64 %14, 9
  %19 = add nuw nsw i64 %15, %18
  %20 = load i32, ptr @sysctl_perf_cpu_time_max_percent, align 4
  %21 = mul i32 %20, 100000
  %22 = zext i32 %21 to i64
  %23 = icmp ult i64 %19, %22
  %24 = trunc i64 %19 to i32
  br i1 %23, label %25, label %27

25:                                               ; preds = %17
  %26 = udiv i32 %21, %24
  br label %27

27:                                               ; preds = %25, %17
  %28 = phi i32 [ %26, %25 ], [ 1, %17 ]
  store volatile i32 %24, ptr @perf_sample_allowed_ns, align 4
  store volatile i32 %28, ptr @max_samples_per_tick, align 4
  %29 = mul i32 %28, 100
  store i32 %29, ptr @sysctl_perf_event_sample_rate, align 4
  %30 = sdiv i32 1000000000, %29
  store i32 %30, ptr @perf_sample_period_ns, align 4
  %31 = tail call zeroext i1 @irq_work_queue(ptr noundef nonnull @perf_duration_work) #27
  br label %32

32:                                               ; preds = %27, %5, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @irq_work_queue(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define weak dso_local void @perf_event_print_debug() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_pmu_disable(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to ptr
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, 1
  store i32 %11, ptr %9, align 4
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 15
  %15 = load ptr, ptr %14, align 4
  tail call void %15(ptr noundef %0) #27
  br label %16

16:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_pmu_enable(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to ptr
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, -1
  store i32 %11, ptr %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 14
  %15 = load ptr, ptr %14, align 4
  tail call void %15(ptr noundef %0) #27
  br label %16

16:                                               ; preds = %13, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_disable_local(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.pmu, ptr %4, i32 0, i32 9
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #19, !srcloc !11
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 18
  %14 = load volatile ptr, ptr %13, align 4
  %15 = ptrtoint ptr %14 to i32
  switch i32 %15, label %18 [
    i32 0, label %16
    i32 -1, label %95
  ]

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 1
  br label %23

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %19) #27
  %20 = icmp eq ptr %3, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 1
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi ptr [ %17, %16 ], [ %22, %21 ]
  %25 = phi i1 [ true, %16 ], [ false, %21 ]
  %26 = phi ptr [ %17, %16 ], [ %19, %21 ]
  %27 = phi ptr [ null, %16 ], [ %3, %21 ]
  tail call void @_raw_spin_lock(ptr noundef %24) #27
  br label %28

28:                                               ; preds = %23, %18
  %29 = phi i1 [ true, %18 ], [ %25, %23 ]
  %30 = phi ptr [ %19, %18 ], [ %26, %23 ]
  %31 = phi ptr [ null, %18 ], [ %27, %23 ]
  %32 = load ptr, ptr %13, align 4
  %33 = ptrtoint ptr %32 to i32
  switch i32 %33, label %34 [
    i32 -1, label %87
    i32 0, label %55
  ]

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 12
  %36 = load i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %61, label %38

38:                                               ; preds = %34
  %39 = tail call ptr @llvm.thread.pointer() #27
  %40 = icmp ne ptr %32, %39
  %41 = load i1, ptr @event_function_local.__already_done, align 1
  %42 = xor i1 %41, true
  %43 = select i1 %40, i1 %42, i1 false
  br i1 %43, label %44, label %45, !prof !12

44:                                               ; preds = %38
  store i1 true, ptr @event_function_local.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 342, i32 noundef 9, ptr noundef null) #27
  br label %45

45:                                               ; preds = %44, %38
  br i1 %40, label %87, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct.perf_cpu_context, ptr %12, i32 0, i32 1
  %48 = load ptr, ptr %47, align 8
  %49 = icmp ne ptr %48, %3
  %50 = load i1, ptr @event_function_local.__already_done.17, align 1
  %51 = xor i1 %50, true
  %52 = select i1 %49, i1 %51, i1 false
  br i1 %52, label %53, label %54, !prof !12

53:                                               ; preds = %46
  store i1 true, ptr @event_function_local.__already_done.17, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 345, i32 noundef 9, ptr noundef null) #27
  br label %54

54:                                               ; preds = %53, %46
  br i1 %49, label %87, label %61

55:                                               ; preds = %28
  %56 = icmp ne ptr %3, %12
  %57 = load i1, ptr @event_function_local.__already_done.18, align 1
  %58 = xor i1 %57, true
  %59 = select i1 %56, i1 %58, i1 false
  br i1 %59, label %60, label %61, !prof !12

60:                                               ; preds = %55
  store i1 true, ptr @event_function_local.__already_done.18, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 349, i32 noundef 9, ptr noundef null) #27
  br label %61

61:                                               ; preds = %60, %55, %54, %34
  %62 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %63 = load i32, ptr %62, align 8
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %87, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 12
  %67 = load i32, ptr %66, align 4
  %68 = and i32 %67, 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %65
  %71 = tail call i64 @sched_clock() #27
  %72 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 20
  %73 = load i64, ptr %72, align 8
  %74 = sub i64 %71, %73
  %75 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 19
  %76 = load i64, ptr %75, align 8
  %77 = add i64 %74, %76
  store i64 %77, ptr %75, align 8
  store i64 %71, ptr %72, align 8
  %78 = sub i64 %77, %71
  %79 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 21
  store volatile i64 %78, ptr %79, align 8
  br label %80

80:                                               ; preds = %70, %65
  %81 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, %0
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  tail call fastcc void @group_sched_out(ptr noundef %0, ptr noundef %12, ptr noundef %3) #27
  br label %86

85:                                               ; preds = %80
  tail call fastcc void @event_sched_out(ptr noundef %0, ptr noundef %12, ptr noundef %3) #27
  br label %86

86:                                               ; preds = %85, %84
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef -1) #27
  br label %87

87:                                               ; preds = %86, %61, %54, %45, %28
  br i1 %29, label %92, label %88

88:                                               ; preds = %87
  %89 = getelementptr inbounds %struct.perf_event_context, ptr %31, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %90 = load i16, ptr %89, align 4
  %91 = add i16 %90, 1
  store i16 %91, ptr %89, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %92

92:                                               ; preds = %88, %87
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %93 = load i16, ptr %30, align 4
  %94 = add i16 %93, 1
  store i16 %94, ptr %30, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %95

95:                                               ; preds = %92, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_event_disable(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr nocapture noundef readnone %3) #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %6 = load i32, ptr %5, align 8
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 12
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = tail call i64 @sched_clock() #27
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 20
  %16 = load i64, ptr %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 19
  %19 = load i64, ptr %18, align 8
  %20 = add i64 %17, %19
  store i64 %20, ptr %18, align 8
  store i64 %14, ptr %15, align 8
  %21 = sub i64 %20, %14
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 21
  store volatile i64 %21, ptr %22, align 8
  br label %23

23:                                               ; preds = %13, %8
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %27, label %28

27:                                               ; preds = %23
  tail call fastcc void @group_sched_out(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  br label %29

28:                                               ; preds = %23
  tail call fastcc void @event_sched_out(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  br label %29

29:                                               ; preds = %28, %27
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef -1)
  br label %30

30:                                               ; preds = %29, %4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_disable(ptr noundef %0) #0 {
  %2 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %7 = load i32, ptr %6, align 8
  %8 = icmp slt i32 %7, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %9 = load i16, ptr %5, align 4
  %10 = add i16 %9, 1
  store i16 %10, ptr %5, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %8, label %12, label %11

11:                                               ; preds = %1
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_disable, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %1
  %13 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %13) #27
  tail call fastcc void @put_ctx(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @_perf_event_disable(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %6 = load i32, ptr %5, align 8
  %7 = icmp slt i32 %6, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %8 = load i16, ptr %4, align 4
  %9 = add i16 %8, 1
  store i16 %9, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %7, label %11, label %10

10:                                               ; preds = %1
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_disable, ptr noundef null)
  br label %11

11:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_disable_inatomic(ptr noundef %0) local_unnamed_addr #0 {
  %2 = tail call ptr @llvm.thread.pointer() #27
  %3 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %4 = load i32, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 47
  store volatile i32 %4, ptr %5, align 8
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 49
  %7 = tail call zeroext i1 @irq_work_queue(ptr noundef %6) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_pmu_resched(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %3 = load ptr, ptr %2, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %12) #27
  %13 = icmp eq ptr %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call fastcc void @ctx_resched(ptr noundef %9, ptr noundef null, i32 noundef 11)
  br label %19

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %16) #27
  tail call fastcc void @ctx_resched(ptr noundef %9, ptr noundef nonnull %11, i32 noundef 11)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %17 = load i16, ptr %16, align 4
  %18 = add i16 %17, 1
  store i16 %18, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %19

19:                                               ; preds = %15, %14
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %20 = load i16, ptr %12, align 4
  %21 = add i16 %20, 1
  store i16 %21, ptr %12, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ctx_resched(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = and i32 %2, 8
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = and i32 %6, 1
  %8 = or i32 %7, %2
  %9 = and i32 %8, 3
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds %struct.pmu, ptr %10, i32 0, i32 8
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #19, !srcloc !11
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = load i32, ptr %18, align 4
  %20 = add i32 %19, 1
  store i32 %20, ptr %18, align 4
  %21 = icmp eq i32 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.pmu, ptr %10, i32 0, i32 15
  %24 = load ptr, ptr %23, align 4
  tail call void %24(ptr noundef %10) #27
  br label %25

25:                                               ; preds = %22, %3
  %26 = icmp eq ptr %1, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = icmp eq ptr %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = icmp ne ptr %29, %1
  %33 = load i1, ptr @task_ctx_sched_out.__already_done, align 1
  %34 = xor i1 %33, true
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %37, !prof !12

36:                                               ; preds = %31
  store i1 true, ptr @task_ctx_sched_out.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2726, i32 noundef 9, ptr noundef null) #27
  br label %37

37:                                               ; preds = %36, %31
  br i1 %32, label %39, label %38

38:                                               ; preds = %37
  tail call fastcc void @ctx_sched_out(ptr noundef nonnull %1, ptr noundef %0, i32 noundef %8) #27
  br label %39

39:                                               ; preds = %38, %37, %27, %25
  br i1 %5, label %40, label %43

40:                                               ; preds = %39
  %41 = and i32 %2, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %40, %39
  %44 = phi i32 [ %9, %39 ], [ 1, %40 ]
  tail call fastcc void @ctx_sched_out(ptr noundef %0, ptr noundef %0, i32 noundef %44) #27
  br label %45

45:                                               ; preds = %43, %40
  tail call fastcc void @ctx_sched_in(ptr noundef %0, ptr noundef %0, i32 noundef 2) #27
  br i1 %26, label %47, label %46

46:                                               ; preds = %45
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %1, ptr noundef %0, i32 noundef 2) #27
  tail call fastcc void @ctx_sched_in(ptr noundef %0, ptr noundef %0, i32 noundef 1) #27
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %1, ptr noundef %0, i32 noundef 1) #27
  br label %48

47:                                               ; preds = %45
  tail call fastcc void @ctx_sched_in(ptr noundef %0, ptr noundef %0, i32 noundef 1) #27
  br label %48

48:                                               ; preds = %47, %46
  %49 = load ptr, ptr %0, align 8
  %50 = getelementptr inbounds %struct.pmu, ptr %49, i32 0, i32 8
  %51 = load ptr, ptr %50, align 4
  %52 = ptrtoint ptr %51 to i32
  %53 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %54 = inttoptr i32 %53 to ptr
  %55 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %54) #19, !srcloc !11
  %56 = add i32 %55, %52
  %57 = inttoptr i32 %56 to ptr
  %58 = load i32, ptr %57, align 4
  %59 = add i32 %58, -1
  store i32 %59, ptr %57, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %48
  %62 = getelementptr inbounds %struct.pmu, ptr %49, i32 0, i32 14
  %63 = load ptr, ptr %62, align 4
  tail call void %63(ptr noundef %49) #27
  br label %64

64:                                               ; preds = %61, %48
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_enable(ptr noundef %0) #0 {
  %2 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %7 = load i32, ptr %6, align 8
  %8 = icmp ult i32 %7, -2
  br i1 %8, label %9, label %12

9:                                                ; preds = %19, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %10 = load i16, ptr %5, align 4
  %11 = add i16 %10, 1
  store i16 %11, ptr %5, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %27

12:                                               ; preds = %1
  %13 = icmp eq i32 %7, -2
  br i1 %13, label %14, label %24

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, %0
  br i1 %22, label %9, label %23

23:                                               ; preds = %19, %14
  store i32 -1, ptr %6, align 8
  br label %24

24:                                               ; preds = %23, %12
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %25 = load i16, ptr %5, align 4
  %26 = add i16 %25, 1
  store i16 %26, ptr %5, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_enable, ptr noundef null) #27
  br label %27

27:                                               ; preds = %24, %9
  %28 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %28) #27
  tail call fastcc void @put_ctx(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @_perf_event_enable(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %4) #27
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %6 = load i32, ptr %5, align 8
  %7 = icmp ult i32 %6, -2
  br i1 %7, label %8, label %11

8:                                                ; preds = %18, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %9 = load i16, ptr %4, align 4
  %10 = add i16 %9, 1
  store i16 %10, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %26

11:                                               ; preds = %1
  %12 = icmp eq i32 %6, -2
  br i1 %12, label %13, label %23

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %0
  br i1 %21, label %8, label %22

22:                                               ; preds = %18, %13
  store i32 -1, ptr %5, align 8
  br label %23

23:                                               ; preds = %22, %11
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %24 = load i16, ptr %4, align 4
  %25 = add i16 %24, 1
  store i16 %25, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_enable, ptr noundef null)
  br label %26

26:                                               ; preds = %23, %8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_addr_filters_sync(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 13
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %26, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr %0, ptr %9
  %12 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 51, i32 1
  tail call void @_raw_spin_lock(ptr noundef %12) #27
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 53
  %14 = load i32, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 3
  %16 = load i32, ptr %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %7
  %19 = load ptr, ptr %2, align 8
  %20 = getelementptr inbounds %struct.pmu, ptr %19, i32 0, i32 35
  %21 = load ptr, ptr %20, align 4
  tail call void %21(ptr noundef %0) #27
  %22 = load i32, ptr %13, align 8
  store i32 %22, ptr %15, align 8
  br label %23

23:                                               ; preds = %18, %7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %24 = load i16, ptr %12, align 4
  %25 = add i16 %24, 1
  store i16 %25, ptr %12, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %26

26:                                               ; preds = %23, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_refresh(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %4 = tail call fastcc i32 @_perf_event_refresh(ptr noundef %0, i32 noundef %1)
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %5) #27
  tail call fastcc void @put_ctx(ptr noundef %3) #27
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @_perf_event_refresh(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 2
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %9 = load i64, ptr %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %38, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 50
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %12) #27, !srcloc !19
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %12, ptr %12, i32 %1, ptr elementtype(i32) %12) #27, !srcloc !20
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %16) #27
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %18 = load i32, ptr %17, align 8
  %19 = icmp ult i32 %18, -2
  br i1 %19, label %20, label %23

20:                                               ; preds = %30, %11
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %21 = load i16, ptr %16, align 4
  %22 = add i16 %21, 1
  store i16 %22, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %38

23:                                               ; preds = %11
  %24 = icmp eq i32 %18, -2
  br i1 %24, label %25, label %35

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, %0
  br i1 %33, label %20, label %34

34:                                               ; preds = %30, %25
  store i32 -1, ptr %17, align 8
  br label %35

35:                                               ; preds = %34, %23
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %36 = load i16, ptr %16, align 4
  %37 = add i16 %36, 1
  store i16 %37, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_enable, ptr noundef null) #27
  br label %38

38:                                               ; preds = %35, %20, %7, %2
  %39 = phi i32 [ -22, %7 ], [ -22, %2 ], [ 0, %20 ], [ 0, %35 ]
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_sched_cb_dec(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %3 = load ptr, ptr %2, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #19, !srcloc !11
  %14 = add i32 %13, ptrtoint (ptr @perf_sched_cb_usages to i32)
  %15 = inttoptr i32 %14 to ptr
  %16 = load i32, ptr %15, align 4
  %17 = add i32 %16, -1
  store i32 %17, ptr %15, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #27, !srcloc !22
  %18 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 9
  %19 = load i32, ptr %18, align 4
  %20 = add i32 %19, -1
  store i32 %20, ptr %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 8
  %24 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 8, i32 1
  %25 = load ptr, ptr %24, align 4
  %26 = load ptr, ptr %23, align 4
  %27 = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  store ptr %25, ptr %27, align 4
  store volatile ptr %26, ptr %25, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %23, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %24, align 4
  br label %28

28:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_sched_cb_inc(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %3 = load ptr, ptr %2, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, %4
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 9
  %11 = load i32, ptr %10, align 4
  %12 = add i32 %11, 1
  store i32 %12, ptr %10, align 4
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 8
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #19, !srcloc !11
  %19 = add i32 %18, ptrtoint (ptr @sched_cb_list to i32)
  %20 = inttoptr i32 %19 to ptr
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  store ptr %15, ptr %22, align 4
  store ptr %21, ptr %15, align 4
  %23 = getelementptr inbounds %struct.perf_cpu_context, ptr %9, i32 0, i32 8, i32 1
  store ptr %20, ptr %23, align 4
  store volatile ptr %15, ptr %20, align 4
  br label %24

24:                                               ; preds = %14, %1
  %25 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #19, !srcloc !11
  %29 = add i32 %28, ptrtoint (ptr @perf_sched_cb_usages to i32)
  %30 = inttoptr i32 %29 to ptr
  %31 = load i32, ptr %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, ptr %30, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %25) #27, !srcloc !22
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__perf_event_task_sched_out(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.perf_switch_event, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %5 = inttoptr i32 %4 to ptr
  %6 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %5) #19, !srcloc !11
  %7 = add i32 %6, ptrtoint (ptr @perf_sched_cb_usages to i32)
  %8 = inttoptr i32 %7 to ptr
  %9 = load i32, ptr %8, align 4
  %10 = icmp eq i32 %9, 0
  %11 = icmp eq ptr %0, %1
  %12 = or i1 %11, %10
  br i1 %12, label %33, label %13

13:                                               ; preds = %2
  %14 = add i32 %6, ptrtoint (ptr @sched_cb_list to i32)
  %15 = inttoptr i32 %14 to ptr
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %15
  br i1 %17, label %33, label %18

18:                                               ; preds = %25, %13
  %19 = phi ptr [ %26, %25 ], [ %16, %13 ]
  %20 = getelementptr i8, ptr %19, i32 -76
  %21 = load ptr, ptr %20, align 8
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr i8, ptr %19, i32 -276
  tail call fastcc void @__perf_pmu_sched_task(ptr noundef %24, i1 noundef zeroext false) #27
  br label %25

25:                                               ; preds = %23, %18
  %26 = load ptr, ptr %19, align 4
  %27 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %28 = inttoptr i32 %27 to ptr
  %29 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %28) #19, !srcloc !11
  %30 = add i32 %29, ptrtoint (ptr @sched_cb_list to i32)
  %31 = inttoptr i32 %30 to ptr
  %32 = icmp eq ptr %26, %31
  br i1 %32, label %33, label %18

33:                                               ; preds = %25, %13, %2
  %34 = load volatile i32, ptr @nr_switch_events, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %33
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #27
  store ptr %0, ptr %3, align 4
  %37 = getelementptr inbounds i8, ptr %3, i32 4
  store ptr %1, ptr %37, align 4
  %38 = getelementptr inbounds i8, ptr %3, i32 8
  store i32 0, ptr %38, align 4
  %39 = getelementptr inbounds i8, ptr %3, i32 12
  store i16 8192, ptr %39, align 4
  %40 = getelementptr inbounds i8, ptr %3, i32 14
  store i16 0, ptr %40, align 2
  %41 = getelementptr inbounds i8, ptr %3, i32 16
  store i32 0, ptr %41, align 4
  %42 = getelementptr inbounds i8, ptr %3, i32 20
  store i32 0, ptr %42, align 4
  %43 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 13
  %44 = load i32, ptr %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %36
  store i16 24576, ptr %39, align 4
  br label %47

47:                                               ; preds = %46, %36
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_switch_output, ptr noundef nonnull %3, ptr noundef null) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #27
  br label %48

48:                                               ; preds = %47, %33
  br label %49

49:                                               ; preds = %319, %48
  %50 = phi i32 [ %320, %319 ], [ 0, %48 ]
  %51 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 %50
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %319, label %54, !prof !23

54:                                               ; preds = %49
  %55 = load ptr, ptr %52, align 8
  %56 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 9
  %57 = load ptr, ptr %56, align 4
  %58 = ptrtoint ptr %57 to i32
  %59 = call i32 @llvm.read_register.i32(metadata !0) #27
  %60 = inttoptr i32 %59 to ptr
  %61 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %60) #19, !srcloc !11
  %62 = add i32 %61, %58
  %63 = inttoptr i32 %62 to ptr
  %64 = getelementptr inbounds %struct.perf_cpu_context, ptr %63, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8
  %66 = icmp eq ptr %65, null
  br i1 %66, label %319, label %67

67:                                               ; preds = %54
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %68 = getelementptr %struct.task_struct, ptr %1, i32 0, i32 130, i32 %50
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %259, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 22
  %73 = load volatile ptr, ptr %72, align 8
  %74 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 22
  %75 = load volatile ptr, ptr %74, align 8
  %76 = icmp ne ptr %73, null
  %77 = icmp ne ptr %75, null
  %78 = select i1 %76, i1 true, i1 %77
  br i1 %78, label %79, label %259

79:                                               ; preds = %71
  %80 = icmp eq ptr %75, %52
  %81 = icmp eq ptr %69, %73
  %82 = select i1 %80, i1 true, i1 %81
  %83 = icmp eq ptr %75, %73
  %84 = select i1 %82, i1 true, i1 %83
  br i1 %84, label %85, label %259

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %86) #27
  %87 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %87) #27
  %88 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 25
  %89 = load i32, ptr %88, align 8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %260

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 25
  %93 = load i32, ptr %92, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %260

95:                                               ; preds = %91
  %96 = load ptr, ptr %74, align 8
  %97 = icmp eq ptr %96, %52
  br i1 %97, label %98, label %104

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 24
  %100 = load i64, ptr %99, align 8
  %101 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 23
  %102 = load i64, ptr %101, align 8
  %103 = icmp eq i64 %100, %102
  br i1 %103, label %123, label %104

104:                                              ; preds = %98, %95
  %105 = load ptr, ptr %72, align 8
  %106 = icmp eq ptr %105, %69
  br i1 %106, label %107, label %113

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 23
  %109 = load i64, ptr %108, align 8
  %110 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 24
  %111 = load i64, ptr %110, align 8
  %112 = icmp eq i64 %109, %111
  br i1 %112, label %123, label %113

113:                                              ; preds = %107, %104
  %114 = icmp ne ptr %105, null
  %115 = icmp eq ptr %105, %96
  %116 = select i1 %114, i1 %115, i1 false
  br i1 %116, label %117, label %260

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 23
  %119 = load i64, ptr %118, align 8
  %120 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 23
  %121 = load i64, ptr %120, align 8
  %122 = icmp eq i64 %119, %121
  br i1 %122, label %123, label %260

123:                                              ; preds = %117, %107, %98
  %124 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 18
  store volatile ptr %1, ptr %124, align 4
  %125 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 18
  store volatile ptr %0, ptr %125, align 4
  %126 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 8
  %127 = load ptr, ptr %126, align 4
  %128 = ptrtoint ptr %127 to i32
  %129 = call i32 @llvm.read_register.i32(metadata !0) #27
  %130 = inttoptr i32 %129 to ptr
  %131 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %130) #19, !srcloc !11
  %132 = add i32 %131, %128
  %133 = inttoptr i32 %132 to ptr
  %134 = load i32, ptr %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, ptr %133, align 4
  %136 = icmp eq i32 %134, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %123
  %138 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 15
  %139 = load ptr, ptr %138, align 4
  call void %139(ptr noundef %55) #27
  br label %140

140:                                              ; preds = %137, %123
  %141 = getelementptr inbounds %struct.perf_cpu_context, ptr %63, i32 0, i32 9
  %142 = load i32, ptr %141, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 28
  %146 = load ptr, ptr %145, align 4
  %147 = icmp eq ptr %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %144
  call void %146(ptr noundef nonnull %52, i1 noundef zeroext false) #27
  br label %149

149:                                              ; preds = %148, %144, %140
  %150 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 30
  %151 = load ptr, ptr %150, align 4
  %152 = icmp eq ptr %151, null
  br i1 %152, label %154, label %153

153:                                              ; preds = %149
  call void %151(ptr noundef nonnull %52, ptr noundef nonnull %69) #27
  br label %159

154:                                              ; preds = %149
  %155 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 26
  %156 = load ptr, ptr %155, align 4
  %157 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 26
  %158 = load ptr, ptr %157, align 4
  store ptr %158, ptr %155, align 4
  store ptr %156, ptr %157, align 4
  br label %159

159:                                              ; preds = %154, %153
  %160 = load ptr, ptr %126, align 4
  %161 = ptrtoint ptr %160 to i32
  %162 = call i32 @llvm.read_register.i32(metadata !0) #27
  %163 = inttoptr i32 %162 to ptr
  %164 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %163) #19, !srcloc !11
  %165 = add i32 %164, %161
  %166 = inttoptr i32 %165 to ptr
  %167 = load i32, ptr %166, align 4
  %168 = add i32 %167, -1
  store i32 %168, ptr %166, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %159
  %171 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 14
  %172 = load ptr, ptr %171, align 4
  call void %172(ptr noundef %55) #27
  br label %173

173:                                              ; preds = %170, %159
  store volatile ptr %69, ptr %51, align 4
  store volatile ptr %52, ptr %68, align 4
  %174 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 13
  %175 = load i32, ptr %174, align 8
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %260, label %177

177:                                              ; preds = %173
  %178 = call i64 @sched_clock() #27
  %179 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 20
  %180 = load i64, ptr %179, align 8
  %181 = sub i64 %178, %180
  %182 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 19
  %183 = load i64, ptr %182, align 8
  %184 = add i64 %181, %183
  store i64 %184, ptr %182, align 8
  store i64 %178, ptr %179, align 8
  %185 = sub i64 %184, %178
  %186 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 21
  store volatile i64 %185, ptr %186, align 8
  %187 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 6
  %188 = getelementptr inbounds %struct.perf_event_context, ptr %69, i32 0, i32 6
  %189 = load ptr, ptr %187, align 8
  %190 = load ptr, ptr %188, align 8
  %191 = icmp ne ptr %189, %187
  %192 = icmp ne ptr %190, %188
  %193 = select i1 %191, i1 %192, i1 false
  br i1 %193, label %194, label %260

194:                                              ; preds = %253, %177
  %195 = phi ptr [ %255, %253 ], [ %190, %177 ]
  %196 = phi ptr [ %254, %253 ], [ %189, %177 ]
  %197 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 21, i32 6
  %198 = load i64, ptr %197, align 8
  %199 = and i64 %198, 2048
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %253, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 14
  %203 = load i32, ptr %202, align 8
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %210

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 12
  %207 = load ptr, ptr %206, align 8
  %208 = getelementptr inbounds %struct.pmu, ptr %207, i32 0, i32 23
  %209 = load ptr, ptr %208, align 4
  call void %209(ptr noundef %196) #27
  br label %210

210:                                              ; preds = %205, %201
  %211 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 26
  %212 = load ptr, ptr %211, align 8
  %213 = icmp eq ptr %212, null
  br i1 %213, label %217, label %214, !prof !12

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct.perf_event_context, ptr %212, i32 0, i32 19
  %216 = load i64, ptr %215, align 8
  br label %217

217:                                              ; preds = %214, %210
  %218 = phi i64 [ %216, %214 ], [ 0, %210 ]
  %219 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 11
  %220 = load ptr, ptr %219, align 4
  %221 = getelementptr inbounds %struct.perf_event, ptr %220, i32 0, i32 14
  %222 = load i32, ptr %221, align 8
  %223 = icmp slt i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %217
  %225 = load i32, ptr %202, align 8
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %222, %217 ]
  %228 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 19
  %229 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 18
  %230 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 20
  %231 = load i64, ptr %230, align 8
  %232 = sub i64 %218, %231
  %233 = load i64, ptr %229, align 8
  %234 = icmp slt i32 %227, 0
  %235 = select i1 %234, i64 0, i64 %232
  %236 = add i64 %235, %233
  store i64 %236, ptr %229, align 8
  %237 = load i64, ptr %228, align 8
  %238 = icmp sgt i32 %227, 0
  %239 = select i1 %238, i64 %232, i64 0
  %240 = add i64 %237, %239
  store i64 %240, ptr %228, align 8
  store i64 %218, ptr %230, align 8
  %241 = getelementptr inbounds %struct.perf_event, ptr %195, i32 0, i32 16
  %242 = call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %241, ptr elementtype(i64) %241) #27, !srcloc !25
  %243 = getelementptr inbounds %struct.perf_event, ptr %196, i32 0, i32 16
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %243) #27, !srcloc !19
  %244 = call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %243, ptr %243, i64 %242, ptr elementtype(i64) %243) #27, !srcloc !27
  %245 = extractvalue { i64, i32 } %244, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %241) #27, !srcloc !19
  %246 = call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %241, ptr %241, i64 %245) #27, !srcloc !29
  %247 = load i64, ptr %229, align 8
  %248 = getelementptr inbounds %struct.perf_event, ptr %195, i32 0, i32 18
  %249 = load i64, ptr %248, align 8
  store i64 %249, ptr %229, align 8
  store i64 %247, ptr %248, align 8
  %250 = load i64, ptr %228, align 8
  %251 = getelementptr inbounds %struct.perf_event, ptr %195, i32 0, i32 19
  %252 = load i64, ptr %251, align 8
  store i64 %252, ptr %228, align 8
  store i64 %250, ptr %251, align 8
  call void @perf_event_update_userpage(ptr noundef %196) #27
  call void @perf_event_update_userpage(ptr noundef %195) #27
  br label %253

253:                                              ; preds = %226, %194
  %254 = load ptr, ptr %196, align 8
  %255 = load ptr, ptr %195, align 8
  %256 = icmp ne ptr %254, %187
  %257 = icmp ne ptr %255, %188
  %258 = select i1 %256, i1 %257, i1 false
  br i1 %258, label %194, label %260

259:                                              ; preds = %79, %71, %67
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %266

260:                                              ; preds = %253, %177, %173, %117, %113, %91, %85
  %261 = phi i1 [ false, %173 ], [ false, %177 ], [ true, %91 ], [ true, %85 ], [ true, %117 ], [ true, %113 ], [ false, %253 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %262 = load i16, ptr %87, align 4
  %263 = add i16 %262, 1
  store i16 %263, ptr %87, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %264 = load i16, ptr %86, align 4
  %265 = add i16 %264, 1
  store i16 %265, ptr %86, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br i1 %261, label %266, label %319

266:                                              ; preds = %260, %259
  %267 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %267) #27
  %268 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 8
  %269 = load ptr, ptr %268, align 4
  %270 = ptrtoint ptr %269 to i32
  %271 = call i32 @llvm.read_register.i32(metadata !0) #27
  %272 = inttoptr i32 %271 to ptr
  %273 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %272) #19, !srcloc !11
  %274 = add i32 %273, %270
  %275 = inttoptr i32 %274 to ptr
  %276 = load i32, ptr %275, align 4
  %277 = add i32 %276, 1
  store i32 %277, ptr %275, align 4
  %278 = icmp eq i32 %276, 0
  br i1 %278, label %279, label %282

279:                                              ; preds = %266
  %280 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 15
  %281 = load ptr, ptr %280, align 4
  call void %281(ptr noundef %55) #27
  br label %282

282:                                              ; preds = %279, %266
  %283 = getelementptr inbounds %struct.perf_cpu_context, ptr %63, i32 0, i32 9
  %284 = load i32, ptr %283, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %291, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 28
  %288 = load ptr, ptr %287, align 4
  %289 = icmp eq ptr %288, null
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  call void %288(ptr noundef nonnull %52, i1 noundef zeroext false) #27
  br label %291

291:                                              ; preds = %290, %286, %282
  %292 = load ptr, ptr %64, align 8
  %293 = icmp eq ptr %292, null
  br i1 %293, label %302, label %294

294:                                              ; preds = %291
  %295 = icmp ne ptr %292, %52
  %296 = load i1, ptr @task_ctx_sched_out.__already_done, align 1
  %297 = xor i1 %296, true
  %298 = select i1 %295, i1 %297, i1 false
  br i1 %298, label %299, label %300, !prof !12

299:                                              ; preds = %294
  store i1 true, ptr @task_ctx_sched_out.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2726, i32 noundef 9, ptr noundef null) #27
  br label %300

300:                                              ; preds = %299, %294
  br i1 %295, label %302, label %301

301:                                              ; preds = %300
  call fastcc void @ctx_sched_out(ptr noundef %52, ptr noundef %63, i32 noundef 3) #27
  br label %302

302:                                              ; preds = %301, %300, %291
  %303 = load ptr, ptr %268, align 4
  %304 = ptrtoint ptr %303 to i32
  %305 = call i32 @llvm.read_register.i32(metadata !0) #27
  %306 = inttoptr i32 %305 to ptr
  %307 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %306) #19, !srcloc !11
  %308 = add i32 %307, %304
  %309 = inttoptr i32 %308 to ptr
  %310 = load i32, ptr %309, align 4
  %311 = add i32 %310, -1
  store i32 %311, ptr %309, align 4
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %316

313:                                              ; preds = %302
  %314 = getelementptr inbounds %struct.pmu, ptr %55, i32 0, i32 14
  %315 = load ptr, ptr %314, align 4
  call void %315(ptr noundef %55) #27
  br label %316

316:                                              ; preds = %313, %302
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %317 = load i16, ptr %267, align 4
  %318 = add i16 %317, 1
  store i16 %318, ptr %267, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %319

319:                                              ; preds = %316, %260, %54, %49
  %320 = add nuw nsw i32 %50, 1
  %321 = icmp eq i32 %320, 2
  br i1 %321, label %322, label %49

322:                                              ; preds = %319
  %323 = call i32 @llvm.read_register.i32(metadata !0) #27
  %324 = inttoptr i32 %323 to ptr
  %325 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %324) #19, !srcloc !11
  %326 = add i32 %325, ptrtoint (ptr @perf_cgroup_events to i32)
  %327 = inttoptr i32 %326 to ptr
  %328 = load volatile i32, ptr %327, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__perf_event_task_sched_in(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.perf_switch_event, align 4
  %4 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %5 = inttoptr i32 %4 to ptr
  %6 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %5) #19, !srcloc !11
  %7 = add i32 %6, ptrtoint (ptr @perf_cgroup_events to i32)
  %8 = inttoptr i32 %7 to ptr
  %9 = load volatile i32, ptr %8, align 4
  br label %10

10:                                               ; preds = %17, %2
  %11 = phi i1 [ true, %2 ], [ false, %17 ]
  %12 = phi i32 [ 0, %2 ], [ 1, %17 ]
  %13 = getelementptr %struct.task_struct, ptr %1, i32 0, i32 130, i32 %12
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16, !prof !23

16:                                               ; preds = %10
  tail call fastcc void @perf_event_context_sched_in(ptr noundef nonnull %14)
  br label %17

17:                                               ; preds = %16, %10
  br i1 %11, label %10, label %18

18:                                               ; preds = %17
  %19 = load volatile i32, ptr @nr_switch_events, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #27
  store ptr %1, ptr %3, align 4
  %22 = getelementptr inbounds i8, ptr %3, i32 4
  store ptr %0, ptr %22, align 4
  %23 = getelementptr inbounds i8, ptr %3, i32 8
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_switch_output, ptr noundef nonnull %3, ptr noundef null) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #27
  br label %24

24:                                               ; preds = %21, %18
  %25 = call i32 @llvm.read_register.i32(metadata !0) #27
  %26 = inttoptr i32 %25 to ptr
  %27 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %26) #19, !srcloc !11
  %28 = add i32 %27, ptrtoint (ptr @perf_sched_cb_usages to i32)
  %29 = inttoptr i32 %28 to ptr
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, 0
  %32 = icmp eq ptr %0, %1
  %33 = or i1 %32, %31
  br i1 %33, label %54, label %34

34:                                               ; preds = %24
  %35 = add i32 %27, ptrtoint (ptr @sched_cb_list to i32)
  %36 = inttoptr i32 %35 to ptr
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, %36
  br i1 %38, label %54, label %39

39:                                               ; preds = %46, %34
  %40 = phi ptr [ %47, %46 ], [ %37, %34 ]
  %41 = getelementptr i8, ptr %40, i32 -76
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = getelementptr i8, ptr %40, i32 -276
  call fastcc void @__perf_pmu_sched_task(ptr noundef %45, i1 noundef zeroext true) #27
  br label %46

46:                                               ; preds = %44, %39
  %47 = load ptr, ptr %40, align 4
  %48 = call i32 @llvm.read_register.i32(metadata !0) #27
  %49 = inttoptr i32 %48 to ptr
  %50 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %49) #19, !srcloc !11
  %51 = add i32 %50, ptrtoint (ptr @sched_cb_list to i32)
  %52 = inttoptr i32 %51 to ptr
  %53 = icmp eq ptr %47, %52
  br i1 %53, label %54, label %39

54:                                               ; preds = %46, %34, %24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_event_context_sched_in(ptr noundef %0) unnamed_addr #0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %struct.pmu, ptr %2, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  %5 = ptrtoint ptr %4 to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #19, !srcloc !11
  %9 = add i32 %8, %5
  %10 = inttoptr i32 %9 to ptr
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %0, align 8
  %12 = getelementptr inbounds %struct.perf_cpu_context, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = icmp eq ptr %13, %0
  br i1 %14, label %15, label %20

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.perf_cpu_context, ptr %10, i32 0, i32 9
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %84, label %19

19:                                               ; preds = %15
  tail call fastcc void @__perf_pmu_sched_task(ptr noundef %10, i1 noundef zeroext true)
  br label %84

20:                                               ; preds = %1
  %21 = getelementptr inbounds %struct.perf_event_context, ptr %10, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %21) #27
  %22 = icmp eq ptr %0, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %24) #27
  br label %25

25:                                               ; preds = %23, %20
  %26 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 9
  %27 = load i32, ptr %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %76, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.pmu, ptr %11, i32 0, i32 8
  %31 = load ptr, ptr %30, align 4
  %32 = ptrtoint ptr %31 to i32
  %33 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %34 = inttoptr i32 %33 to ptr
  %35 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %34) #19, !srcloc !11
  %36 = add i32 %35, %32
  %37 = inttoptr i32 %36 to ptr
  %38 = load i32, ptr %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, ptr %37, align 4
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.pmu, ptr %11, i32 0, i32 15
  %43 = load ptr, ptr %42, align 4
  tail call void %43(ptr noundef %11) #27
  br label %44

44:                                               ; preds = %41, %29
  %45 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 4
  %46 = load volatile ptr, ptr %45, align 8
  %47 = icmp eq ptr %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call fastcc void @ctx_sched_out(ptr noundef %10, ptr noundef %10, i32 noundef 1) #27
  br label %49

49:                                               ; preds = %48, %44
  tail call fastcc void @ctx_sched_in(ptr noundef %10, ptr noundef %10, i32 noundef 2) #27
  br i1 %22, label %51, label %50

50:                                               ; preds = %49
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %0, ptr noundef %10, i32 noundef 2) #27
  tail call fastcc void @ctx_sched_in(ptr noundef %10, ptr noundef %10, i32 noundef 1) #27
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %0, ptr noundef %10, i32 noundef 1) #27
  br label %52

51:                                               ; preds = %49
  tail call fastcc void @ctx_sched_in(ptr noundef %10, ptr noundef %10, i32 noundef 1) #27
  br label %52

52:                                               ; preds = %51, %50
  %53 = getelementptr inbounds %struct.perf_cpu_context, ptr %10, i32 0, i32 9
  %54 = load i32, ptr %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.pmu, ptr %11, i32 0, i32 28
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = load ptr, ptr %12, align 8
  tail call void %58(ptr noundef %61, i1 noundef zeroext true) #27
  br label %62

62:                                               ; preds = %60, %56, %52
  %63 = load ptr, ptr %30, align 4
  %64 = ptrtoint ptr %63 to i32
  %65 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %66 = inttoptr i32 %65 to ptr
  %67 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %66) #19, !srcloc !11
  %68 = add i32 %67, %64
  %69 = inttoptr i32 %68 to ptr
  %70 = load i32, ptr %69, align 4
  %71 = add i32 %70, -1
  store i32 %71, ptr %69, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %62
  %74 = getelementptr inbounds %struct.pmu, ptr %11, i32 0, i32 14
  %75 = load ptr, ptr %74, align 4
  tail call void %75(ptr noundef %11) #27
  br label %76

76:                                               ; preds = %73, %62, %25
  br i1 %22, label %81, label %77

77:                                               ; preds = %76
  %78 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %79 = load i16, ptr %78, align 4
  %80 = add i16 %79, 1
  store i16 %80, ptr %78, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %81

81:                                               ; preds = %77, %76
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %82 = load i16, ptr %21, align 4
  %83 = add i16 %82, 1
  store i16 %83, ptr %21, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %84

84:                                               ; preds = %81, %19, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_task_tick() local_unnamed_addr #0 {
  %1 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %2 = inttoptr i32 %1 to ptr
  %3 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %2) #19, !srcloc !11
  %4 = add i32 %3, ptrtoint (ptr @active_ctx_list to i32)
  %5 = inttoptr i32 %4 to ptr
  %6 = add i32 %3, ptrtoint (ptr @perf_throttled_seq to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = load i64, ptr %7, align 8
  %9 = add i64 %8, 1
  store i64 %9, ptr %7, align 8
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #19, !srcloc !11
  %13 = add i32 %12, ptrtoint (ptr @perf_throttled_count to i32)
  %14 = inttoptr i32 %13 to ptr
  %15 = load i32, ptr %14, align 4
  store i32 0, ptr %14, align 4
  %16 = load ptr, ptr %5, align 4
  %17 = icmp eq ptr %16, %5
  br i1 %17, label %181, label %18

18:                                               ; preds = %179, %0
  %19 = phi ptr [ %21, %179 ], [ %16, %0 ]
  %20 = getelementptr i8, ptr %19, i32 -28
  %21 = load ptr, ptr %19, align 4
  %22 = getelementptr i8, ptr %19, i32 88
  %23 = load i32, ptr %22, align 4
  %24 = or i32 %23, %15
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %179, label %26

26:                                               ; preds = %18
  %27 = getelementptr i8, ptr %19, i32 -24
  tail call void @_raw_spin_lock(ptr noundef %27) #27
  %28 = load ptr, ptr %20, align 8
  %29 = getelementptr inbounds %struct.pmu, ptr %28, i32 0, i32 8
  %30 = load ptr, ptr %29, align 4
  %31 = ptrtoint ptr %30 to i32
  %32 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %33 = inttoptr i32 %32 to ptr
  %34 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %33) #19, !srcloc !11
  %35 = add i32 %34, %31
  %36 = inttoptr i32 %35 to ptr
  %37 = load i32, ptr %36, align 4
  %38 = add i32 %37, 1
  store i32 %38, ptr %36, align 4
  %39 = icmp eq i32 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %26
  %41 = getelementptr inbounds %struct.pmu, ptr %28, i32 0, i32 15
  %42 = load ptr, ptr %41, align 4
  tail call void %42(ptr noundef %28) #27
  br label %43

43:                                               ; preds = %40, %26
  %44 = getelementptr i8, ptr %19, i32 44
  %45 = load volatile ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, %44
  br i1 %46, label %160, label %47

47:                                               ; preds = %157, %43
  %48 = phi ptr [ %158, %157 ], [ %45, %43 ]
  %49 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 14
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %157

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 34
  %54 = load i32, ptr %53, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = tail call ptr @llvm.thread.pointer() #27
  %58 = getelementptr inbounds %struct.thread_info, ptr %57, i32 0, i32 2
  %59 = load i32, ptr %58, align 8
  %60 = icmp eq i32 %54, %59
  br i1 %60, label %61, label %157

61:                                               ; preds = %56, %52
  %62 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 12
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %struct.pmu, ptr %63, i32 0, i32 37
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = tail call i32 %65(ptr noundef %48) #27
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %157, label %70

70:                                               ; preds = %67, %61
  %71 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 11
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, %48
  br i1 %73, label %74, label %92

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 1
  br label %76

76:                                               ; preds = %89, %74
  %77 = phi ptr [ %75, %74 ], [ %78, %89 ]
  %78 = load ptr, ptr %77, align 8
  %79 = icmp eq ptr %78, %75
  br i1 %79, label %92, label %80

80:                                               ; preds = %76
  %81 = getelementptr i8, ptr %78, i32 80
  %82 = load ptr, ptr %81, align 8
  %83 = getelementptr inbounds %struct.pmu, ptr %82, i32 0, i32 37
  %84 = load ptr, ptr %83, align 4
  %85 = icmp eq ptr %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %80
  %87 = getelementptr i8, ptr %78, i32 -8
  %88 = tail call i32 %84(ptr noundef %87) #27
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ 1, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %157, label %76

92:                                               ; preds = %76, %70
  %93 = load ptr, ptr %62, align 8
  %94 = getelementptr inbounds %struct.pmu, ptr %93, i32 0, i32 8
  %95 = load ptr, ptr %94, align 4
  %96 = ptrtoint ptr %95 to i32
  %97 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %98 = inttoptr i32 %97 to ptr
  %99 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %98) #19, !srcloc !11
  %100 = add i32 %99, %96
  %101 = inttoptr i32 %100 to ptr
  %102 = load i32, ptr %101, align 4
  %103 = add i32 %102, 1
  store i32 %103, ptr %101, align 4
  %104 = icmp eq i32 %102, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %92
  %106 = getelementptr inbounds %struct.pmu, ptr %93, i32 0, i32 15
  %107 = load ptr, ptr %106, align 4
  tail call void %107(ptr noundef %93) #27
  br label %108

108:                                              ; preds = %105, %92
  %109 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 25, i32 9
  %110 = load i64, ptr %109, align 8
  %111 = icmp eq i64 %110, -1
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  store i64 0, ptr %109, align 8
  tail call fastcc void @perf_log_throttle(ptr noundef %48, i32 noundef 1) #27
  %113 = load ptr, ptr %62, align 8
  %114 = getelementptr inbounds %struct.pmu, ptr %113, i32 0, i32 21
  %115 = load ptr, ptr %114, align 4
  tail call void %115(ptr noundef %48, i32 noundef 0) #27
  br label %116

116:                                              ; preds = %112, %108
  %117 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 21, i32 6
  %118 = load i64, ptr %117, align 8
  %119 = and i64 %118, 1024
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %141, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 21, i32 3
  %123 = load i64, ptr %122, align 8
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %121
  %126 = load ptr, ptr %62, align 8
  %127 = getelementptr inbounds %struct.pmu, ptr %126, i32 0, i32 22
  %128 = load ptr, ptr %127, align 4
  tail call void %128(ptr noundef %48, i32 noundef 4) #27
  %129 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 16
  %130 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %129, ptr elementtype(i64) %129) #27, !srcloc !25
  %131 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 25, i32 11
  %132 = load i64, ptr %131, align 8
  %133 = sub i64 %130, %132
  store i64 %130, ptr %131, align 8
  %134 = icmp sgt i64 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %125
  tail call fastcc void @perf_adjust_period(ptr noundef %48, i64 noundef 10000000, i64 noundef %133, i1 noundef zeroext false) #27
  br label %136

136:                                              ; preds = %135, %125
  %137 = phi i32 [ 2, %135 ], [ 0, %125 ]
  %138 = load ptr, ptr %62, align 8
  %139 = getelementptr inbounds %struct.pmu, ptr %138, i32 0, i32 21
  %140 = load ptr, ptr %139, align 4
  tail call void %140(ptr noundef %48, i32 noundef %137) #27
  br label %141

141:                                              ; preds = %136, %121, %116
  %142 = load ptr, ptr %62, align 8
  %143 = getelementptr inbounds %struct.pmu, ptr %142, i32 0, i32 8
  %144 = load ptr, ptr %143, align 4
  %145 = ptrtoint ptr %144 to i32
  %146 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %147 = inttoptr i32 %146 to ptr
  %148 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %147) #19, !srcloc !11
  %149 = add i32 %148, %145
  %150 = inttoptr i32 %149 to ptr
  %151 = load i32, ptr %150, align 4
  %152 = add i32 %151, -1
  store i32 %152, ptr %150, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %141
  %155 = getelementptr inbounds %struct.pmu, ptr %142, i32 0, i32 14
  %156 = load ptr, ptr %155, align 4
  tail call void %156(ptr noundef %142) #27
  br label %157

157:                                              ; preds = %154, %141, %89, %67, %56, %47
  %158 = load volatile ptr, ptr %48, align 8
  %159 = icmp eq ptr %158, %44
  br i1 %159, label %160, label %47

160:                                              ; preds = %157, %43
  %161 = load ptr, ptr %20, align 8
  %162 = getelementptr inbounds %struct.pmu, ptr %161, i32 0, i32 8
  %163 = load ptr, ptr %162, align 4
  %164 = ptrtoint ptr %163 to i32
  %165 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %166 = inttoptr i32 %165 to ptr
  %167 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %166) #19, !srcloc !11
  %168 = add i32 %167, %164
  %169 = inttoptr i32 %168 to ptr
  %170 = load i32, ptr %169, align 4
  %171 = add i32 %170, -1
  store i32 %171, ptr %169, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %160
  %174 = getelementptr inbounds %struct.pmu, ptr %161, i32 0, i32 14
  %175 = load ptr, ptr %174, align 4
  tail call void %175(ptr noundef %161) #27
  br label %176

176:                                              ; preds = %173, %160
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %177 = load i16, ptr %27, align 4
  %178 = add i16 %177, 1
  store i16 %178, ptr %27, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %179

179:                                              ; preds = %176, %18
  %180 = icmp eq ptr %21, %5
  br i1 %180, label %181, label %18

181:                                              ; preds = %179, %0
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_read_local(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr noundef writeonly %2, ptr noundef writeonly %3) local_unnamed_addr #0 {
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %97

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 1
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @llvm.thread.pointer() #27
  %19 = icmp eq ptr %17, %18
  br i1 %19, label %27, label %97

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @llvm.thread.pointer() #27
  %24 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %22, %25
  br i1 %26, label %27, label %97

27:                                               ; preds = %20, %15
  %28 = and i64 %7, 4
  %29 = icmp eq i64 %28, 0
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  %31 = load i32, ptr %30, align 8
  %32 = tail call ptr @llvm.thread.pointer() #27
  br i1 %29, label %37, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %35 = load i32, ptr %34, align 8
  %36 = icmp eq i32 %31, %35
  br i1 %36, label %37, label %97

37:                                               ; preds = %33, %27
  %38 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 2
  %39 = load i32, ptr %38, align 8
  %40 = icmp eq i32 %31, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.pmu, ptr %43, i32 0, i32 23
  %45 = load ptr, ptr %44, align 4
  tail call void %45(ptr noundef %0) #27
  br label %46

46:                                               ; preds = %41, %37
  %47 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %48 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %47, ptr elementtype(i64) %47) #27, !srcloc !25
  store i64 %48, ptr %1, align 8
  %49 = icmp ne ptr %2, null
  %50 = icmp ne ptr %3, null
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %97

52:                                               ; preds = %46
  %53 = tail call i64 @sched_clock() #27
  %54 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %55 = load ptr, ptr %54, align 8
  %56 = icmp eq ptr %55, null
  br i1 %56, label %69, label %57, !prof !12

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.perf_event_context, ptr %55, i32 0, i32 12
  %59 = load volatile i32, ptr %58, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !31
  %60 = and i32 %59, 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.perf_event_context, ptr %55, i32 0, i32 19
  %64 = load i64, ptr %63, align 8
  br label %69

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.perf_event_context, ptr %55, i32 0, i32 21
  %67 = load volatile i64, ptr %66, align 8
  %68 = add i64 %67, %53
  br label %69

69:                                               ; preds = %65, %62, %52
  %70 = phi i64 [ %68, %65 ], [ %64, %62 ], [ 0, %52 ]
  %71 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %72 = load ptr, ptr %71, align 4
  %73 = getelementptr inbounds %struct.perf_event, ptr %72, i32 0, i32 14
  %74 = load i32, ptr %73, align 8
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %78 = load i32, ptr %77, align 8
  br label %79

79:                                               ; preds = %76, %69
  %80 = phi i32 [ %78, %76 ], [ %74, %69 ]
  %81 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  %82 = load i64, ptr %81, align 8
  %83 = sub i64 %70, %82
  %84 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %85 = load i64, ptr %84, align 8
  %86 = icmp sgt i32 %80, 0
  %87 = select i1 %86, i64 %83, i64 0
  %88 = add i64 %87, %85
  br i1 %49, label %89, label %95

89:                                               ; preds = %79
  %90 = icmp slt i32 %80, 0
  %91 = select i1 %90, i64 0, i64 %83
  %92 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %93 = load i64, ptr %92, align 8
  %94 = add i64 %93, %91
  store i64 %94, ptr %2, align 8
  br label %95

95:                                               ; preds = %89, %79
  br i1 %50, label %96, label %97

96:                                               ; preds = %95
  store i64 %88, ptr %3, align 8
  br label %97

97:                                               ; preds = %96, %95, %46, %33, %20, %15, %4
  %98 = phi i32 [ 0, %46 ], [ -95, %4 ], [ -22, %15 ], [ -22, %20 ], [ -16, %33 ], [ 0, %96 ], [ 0, %95 ]
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %5) #27, !srcloc !22
  ret i32 %98
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_release_kernel(ptr noundef %0) #0 {
  %2 = alloca %struct.list_head, align 8
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #27
  store ptr %2, ptr %2, align 8
  %5 = getelementptr inbounds %struct.list_head, ptr %2, i32 0, i32 1
  store ptr %2, ptr %5, align 4
  %6 = icmp eq ptr %4, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 3
  %11 = icmp ne i32 %10, 0
  %12 = load i1, ptr @perf_event_release_kernel.__already_done, align 1
  %13 = xor i1 %12, true
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %146, !prof !12

15:                                               ; preds = %7
  store i1 true, ptr @perf_event_release_kernel.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5182, i32 noundef 9, ptr noundef null) #27
  br label %146

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 36
  %18 = load volatile ptr, ptr %17, align 8
  %19 = icmp eq ptr %18, inttoptr (i32 -1 to ptr)
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  call fastcc void @perf_remove_from_owner(ptr noundef %0)
  br label %21

21:                                               ; preds = %20, %16
  %22 = call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 22
  %24 = load ptr, ptr %23, align 8
  %25 = icmp ne ptr %24, null
  %26 = load i1, ptr @perf_event_release_kernel.__already_done.7, align 1
  %27 = xor i1 %26, true
  %28 = select i1 %25, i1 %27, i1 false
  br i1 %28, label %29, label %30, !prof !12

29:                                               ; preds = %21
  store i1 true, ptr @perf_event_release_kernel.__already_done.7, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5190, i32 noundef 9, ptr noundef null) #27
  br label %30

30:                                               ; preds = %29, %21
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.perf_event_context, ptr %31, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %32) #27
  %33 = getelementptr inbounds %struct.perf_event_context, ptr %31, i32 0, i32 12
  %34 = load i32, ptr %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %30
  %37 = load ptr, ptr %31, align 8
  %38 = getelementptr inbounds %struct.pmu, ptr %37, i32 0, i32 9
  %39 = load ptr, ptr %38, align 4
  %40 = ptrtoint ptr %39 to i32
  %41 = call i32 @llvm.read_register.i32(metadata !0) #27
  %42 = inttoptr i32 %41 to ptr
  %43 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %42) #19, !srcloc !11
  %44 = add i32 %43, %40
  %45 = inttoptr i32 %44 to ptr
  call void @__perf_remove_from_context(ptr noundef %0, ptr noundef %45, ptr noundef %31, ptr noundef nonnull inttoptr (i32 1 to ptr)) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %46 = load i16, ptr %32, align 4
  %47 = add i16 %46, 1
  store i16 %47, ptr %32, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %51

48:                                               ; preds = %30
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %49 = load i16, ptr %32, align 4
  %50 = add i16 %49, 1
  store i16 %50, ptr %32, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_remove_from_context, ptr noundef nonnull inttoptr (i32 1 to ptr)) #27
  br label %51

51:                                               ; preds = %48, %36
  %52 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %52) #27
  %53 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  store i32 -4, ptr %53, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %54 = load i16, ptr %52, align 4
  %55 = add i16 %54, 1
  store i16 %55, ptr %52, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  %56 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %56) #27
  call fastcc void @put_ctx(ptr noundef %22) #27
  %57 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 30
  call void @mutex_lock(ptr noundef %57) #27
  %58 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 31
  %59 = load ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, %58
  br i1 %60, label %120, label %61

61:                                               ; preds = %51
  %62 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 27
  br label %63

63:                                               ; preds = %117, %61
  %64 = phi ptr [ %59, %61 ], [ %118, %117 ]
  %65 = getelementptr i8, ptr %64, i32 -492
  %66 = getelementptr i8, ptr %64, i32 -44
  %67 = load volatile ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.perf_event_context, ptr %67, i32 0, i32 17
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %68) #27, !srcloc !19
  %69 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %68, ptr %68, i32 1, ptr elementtype(i32) %68) #27, !srcloc !32
  %70 = extractvalue { i32, i32, i32 } %69, 0
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72, !prof !12

72:                                               ; preds = %63
  %73 = add i32 %70, 1
  %74 = or i32 %73, %70
  %75 = icmp sgt i32 %74, -1
  br i1 %75, label %78, label %76, !prof !23

76:                                               ; preds = %72, %63
  %77 = phi i32 [ 2, %63 ], [ 1, %72 ]
  call void @refcount_warn_saturate(ptr noundef %68, i32 noundef %77) #27
  br label %78

78:                                               ; preds = %76, %72
  call void @mutex_unlock(ptr noundef %57) #27
  %79 = getelementptr inbounds %struct.perf_event_context, ptr %67, i32 0, i32 2
  call void @mutex_lock(ptr noundef %79) #27
  call void @mutex_lock(ptr noundef %57) #27
  %80 = load volatile ptr, ptr %58, align 4
  %81 = icmp eq ptr %80, %58
  %82 = getelementptr i8, ptr %80, i32 -492
  %83 = select i1 %81, ptr null, ptr %82
  %84 = icmp eq ptr %83, %65
  br i1 %84, label %85, label %117

85:                                               ; preds = %78
  %86 = load ptr, ptr %66, align 8
  %87 = getelementptr inbounds %struct.perf_event_context, ptr %86, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %87) #27
  %88 = getelementptr inbounds %struct.perf_event_context, ptr %86, i32 0, i32 12
  %89 = load i32, ptr %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %85
  %92 = load ptr, ptr %86, align 8
  %93 = getelementptr inbounds %struct.pmu, ptr %92, i32 0, i32 9
  %94 = load ptr, ptr %93, align 4
  %95 = ptrtoint ptr %94 to i32
  %96 = call i32 @llvm.read_register.i32(metadata !0) #27
  %97 = inttoptr i32 %96 to ptr
  %98 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %97) #19, !srcloc !11
  %99 = add i32 %98, %95
  %100 = inttoptr i32 %99 to ptr
  call void @__perf_remove_from_context(ptr noundef %65, ptr noundef %100, ptr noundef %86, ptr noundef nonnull inttoptr (i32 1 to ptr)) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %101 = load i16, ptr %87, align 4
  %102 = add i16 %101, 1
  store i16 %102, ptr %87, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %106

103:                                              ; preds = %85
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %104 = load i16, ptr %87, align 4
  %105 = add i16 %104, 1
  store i16 %105, ptr %87, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  call fastcc void @event_function_call(ptr noundef %65, ptr noundef nonnull @__perf_remove_from_context, ptr noundef nonnull inttoptr (i32 1 to ptr)) #27
  br label %106

106:                                              ; preds = %103, %91
  %107 = getelementptr inbounds %struct.list_head, ptr %64, i32 0, i32 1
  %108 = load ptr, ptr %107, align 4
  %109 = load ptr, ptr %64, align 4
  %110 = getelementptr inbounds %struct.list_head, ptr %109, i32 0, i32 1
  store ptr %108, ptr %110, align 4
  store volatile ptr %109, ptr %108, align 4
  %111 = load ptr, ptr %2, align 8
  %112 = getelementptr inbounds %struct.list_head, ptr %111, i32 0, i32 1
  store ptr %64, ptr %112, align 4
  store ptr %111, ptr %64, align 4
  store ptr %2, ptr %107, align 4
  store volatile ptr %64, ptr %2, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %62) #27, !srcloc !19
  %113 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %62, ptr %62, i32 1, ptr elementtype(i32) %62) #27, !srcloc !34
  %114 = extractvalue { i32, i32 } %113, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %106
  call fastcc void @_free_event(ptr noundef %0) #27
  br label %117

117:                                              ; preds = %116, %106, %78
  call void @mutex_unlock(ptr noundef %57) #27
  call void @mutex_unlock(ptr noundef %79) #27
  call fastcc void @put_ctx(ptr noundef %67)
  call void @mutex_lock(ptr noundef %57) #27
  %118 = load ptr, ptr %58, align 4
  %119 = icmp eq ptr %118, %58
  br i1 %119, label %120, label %63

120:                                              ; preds = %117, %51
  call void @mutex_unlock(ptr noundef %57) #27
  %121 = load ptr, ptr %2, align 8
  %122 = icmp eq ptr %121, %2
  br i1 %122, label %146, label %123

123:                                              ; preds = %144, %120
  %124 = phi ptr [ %125, %144 ], [ %121, %120 ]
  %125 = load ptr, ptr %124, align 4
  %126 = getelementptr i8, ptr %124, i32 -44
  %127 = load ptr, ptr %126, align 8
  %128 = getelementptr inbounds %struct.list_head, ptr %124, i32 0, i32 1
  %129 = load ptr, ptr %128, align 4
  %130 = getelementptr inbounds %struct.list_head, ptr %125, i32 0, i32 1
  store ptr %129, ptr %130, align 4
  store volatile ptr %125, ptr %129, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %124, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %128, align 4
  %131 = getelementptr i8, ptr %124, i32 -40
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %131) #27, !srcloc !19
  br label %132

132:                                              ; preds = %132, %123
  %133 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %131, ptr %131, i32 1, i32 0, ptr elementtype(i32) %131) #27, !srcloc !37
  %134 = extractvalue { i32, i32 } %133, 0
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %132

136:                                              ; preds = %132
  %137 = getelementptr i8, ptr %124, i32 -492
  %138 = getelementptr inbounds %struct.perf_event_context, ptr %127, i32 0, i32 17
  %139 = extractvalue { i32, i32 } %133, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %143, label %141, !prof !23

141:                                              ; preds = %136
  %142 = load volatile i32, ptr %131, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %142, ptr noundef %137) #27
  br label %144

143:                                              ; preds = %136
  call fastcc void @_free_event(ptr noundef %137) #27
  br label %144

144:                                              ; preds = %143, %141
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !39
  call void @wake_up_var(ptr noundef %138) #27
  %145 = icmp eq ptr %125, %2
  br i1 %145, label %146, label %123

146:                                              ; preds = %144, %120, %15, %7
  %147 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %147) #27, !srcloc !19
  %148 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %147, ptr %147, i32 1, ptr elementtype(i32) %147) #27, !srcloc !34
  %149 = extractvalue { i32, i32 } %148, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %146
  call fastcc void @_free_event(ptr noundef %0) #27
  br label %152

152:                                              ; preds = %151, %146
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #27
  ret i32 0
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_remove_from_owner(ptr noundef %0) unnamed_addr #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 36
  %3 = load volatile ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  %7 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %6, ptr %6, i32 1, ptr elementtype(i32) %6) #27, !srcloc !32
  %8 = extractvalue { i32, i32, i32 } %7, 0
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %14, label %10, !prof !12

10:                                               ; preds = %5
  %11 = add i32 %8, 1
  %12 = or i32 %11, %8
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %16, label %14, !prof !23

14:                                               ; preds = %10, %5
  %15 = phi i32 [ 2, %5 ], [ 1, %10 ]
  tail call void @refcount_warn_saturate(ptr noundef %6, i32 noundef %15) #27
  br label %16

16:                                               ; preds = %14, %10
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %17 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 131
  tail call void @mutex_lock(ptr noundef %17) #27
  %18 = load ptr, ptr %2, align 8
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 35
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 35, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = load ptr, ptr %21, align 4
  %25 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  store ptr %23, ptr %25, align 4
  store volatile ptr %24, ptr %23, align 4
  store volatile ptr %21, ptr %21, align 4
  store ptr %21, ptr %22, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !40
  store volatile ptr null, ptr %2, align 8
  br label %26

26:                                               ; preds = %20, %16
  tail call void @mutex_unlock(ptr noundef %17) #27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %6, ptr %6, i32 1, ptr elementtype(i32) %6) #27, !srcloc !42
  %28 = extractvalue { i32, i32, i32 } %27, 0
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = icmp sgt i32 %28, 0
  br i1 %31, label %35, label %32, !prof !23

32:                                               ; preds = %30
  tail call void @refcount_warn_saturate(ptr noundef %6, i32 noundef 3) #27
  br label %35

33:                                               ; preds = %26
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  tail call void @__put_task_struct(ptr noundef nonnull %3) #27
  br label %35

34:                                               ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %35

35:                                               ; preds = %34, %33, %32, %30
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @put_ctx(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 17
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #27, !srcloc !19
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #27, !srcloc !42
  %4 = extractvalue { i32, i32, i32 } %3, 0
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = icmp sgt i32 %4, 0
  br i1 %7, label %29, label %8, !prof !23

8:                                                ; preds = %6
  tail call void @refcount_warn_saturate(ptr noundef %2, i32 noundef 3) #27
  br label %29

9:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %10 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 22
  %11 = load ptr, ptr %10, align 8
  %12 = icmp eq ptr %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call fastcc void @put_ctx(ptr noundef nonnull %11)
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %16 = load ptr, ptr %15, align 4
  %17 = ptrtoint ptr %16 to i32
  switch i32 %17, label %18 [
    i32 0, label %27
    i32 -1, label %27
  ]

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %19) #27, !srcloc !19
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %19, ptr %19, i32 1, ptr elementtype(i32) %19) #27, !srcloc !42
  %21 = extractvalue { i32, i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = icmp sgt i32 %21, 0
  br i1 %24, label %27, label %25, !prof !23

25:                                               ; preds = %23
  tail call void @refcount_warn_saturate(ptr noundef %19, i32 noundef 3) #27
  br label %27

26:                                               ; preds = %18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  tail call void @__put_task_struct(ptr noundef %16) #27
  br label %27

27:                                               ; preds = %26, %25, %23, %14, %14
  %28 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 27
  tail call void @call_rcu(ptr noundef %28, ptr noundef nonnull @free_ctx) #27
  br label %29

29:                                               ; preds = %27, %8, %6
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_var(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @perf_event_read_value(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) #0 {
  %4 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %5 = tail call fastcc i64 @__perf_event_read_value(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %6) #27
  tail call fastcc void @put_ctx(ptr noundef %4) #27
  ret i64 %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i64 @__perf_event_read_value(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2) unnamed_addr #0 {
  store i64 0, ptr %1, align 8
  store i64 0, ptr %2, align 8
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %4) #27
  %5 = tail call fastcc i32 @perf_event_read(ptr noundef %0, i1 noundef zeroext false)
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %7 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %6, ptr elementtype(i64) %6) #27, !srcloc !25
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 17
  %9 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %8, ptr elementtype(i64) %8) #27, !srcloc !25
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %12 = load i64, ptr %11, align 8
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 28
  %14 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %13, ptr elementtype(i64) %13) #27, !srcloc !25
  %15 = add i64 %14, %12
  %16 = load i64, ptr %1, align 8
  %17 = add i64 %15, %16
  store i64 %17, ptr %1, align 8
  %18 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %19 = load i64, ptr %18, align 8
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 29
  %21 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %20, ptr elementtype(i64) %20) #27, !srcloc !25
  %22 = add i64 %21, %19
  %23 = load i64, ptr %2, align 8
  %24 = add i64 %22, %23
  store i64 %24, ptr %2, align 8
  %25 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 31
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, %25
  br i1 %27, label %49, label %28

28:                                               ; preds = %28, %3
  %29 = phi ptr [ %47, %28 ], [ %26, %3 ]
  %30 = phi i64 [ %38, %28 ], [ %10, %3 ]
  %31 = getelementptr i8, ptr %29, i32 -492
  %32 = tail call fastcc i32 @perf_event_read(ptr noundef %31, i1 noundef zeroext false)
  %33 = getelementptr i8, ptr %29, i32 -388
  %34 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %33, ptr elementtype(i64) %33) #27, !srcloc !25
  %35 = getelementptr i8, ptr %29, i32 -380
  %36 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %35, ptr elementtype(i64) %35) #27, !srcloc !25
  %37 = add i64 %34, %30
  %38 = add i64 %37, %36
  %39 = getelementptr i8, ptr %29, i32 -372
  %40 = load i64, ptr %39, align 8
  %41 = load i64, ptr %1, align 8
  %42 = add i64 %41, %40
  store i64 %42, ptr %1, align 8
  %43 = getelementptr i8, ptr %29, i32 -364
  %44 = load i64, ptr %43, align 8
  %45 = load i64, ptr %2, align 8
  %46 = add i64 %45, %44
  store i64 %46, ptr %2, align 8
  %47 = load ptr, ptr %29, align 4
  %48 = icmp eq ptr %47, %25
  br i1 %48, label %49, label %28

49:                                               ; preds = %28, %3
  %50 = phi i64 [ %10, %3 ], [ %38, %28 ]
  tail call void @mutex_unlock(ptr noundef %4) #27
  ret i64 %50
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @perf_event_pause(ptr noundef %0, i1 noundef zeroext %1) #0 {
  %3 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 2
  %7 = icmp ne i64 %6, 0
  %8 = load i1, ptr @perf_event_pause.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !12

11:                                               ; preds = %2
  store i1 true, ptr @perf_event_pause.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5544, i32 noundef 9, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %2
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %14, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %15) #27
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %17 = load i32, ptr %16, align 8
  %18 = icmp slt i32 %17, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %19 = load i16, ptr %15, align 4
  %20 = add i16 %19, 1
  store i16 %20, ptr %15, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %18, label %22, label %21

21:                                               ; preds = %12
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_disable, ptr noundef null) #27
  br label %22

22:                                               ; preds = %21, %12
  %23 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %24 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %23, ptr elementtype(i64) %23) #27, !srcloc !25
  br i1 %1, label %25, label %27

25:                                               ; preds = %22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %23) #27, !srcloc !19
  %26 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %23, ptr %23, i64 0) #27, !srcloc !29
  br label %27

27:                                               ; preds = %25, %22
  %28 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %28) #27
  tail call fastcc void @put_ctx(ptr noundef %3) #27
  ret i64 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_period(ptr noundef %0, i64 noundef %1) #0 {
  %3 = alloca i64, align 8
  %4 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) #27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  store i64 %1, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %6 = load i64, ptr %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = icmp eq i64 %1, 0
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 1024
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = load i32, ptr @sysctl_perf_event_sample_rate, align 4
  %17 = sext i32 %16 to i64
  %18 = icmp ult i64 %17, %1
  br i1 %18, label %33, label %19

19:                                               ; preds = %15, %10
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.pmu, ptr %21, i32 0, i32 38
  %23 = load ptr, ptr %22, align 4
  %24 = tail call i32 %23(ptr noundef %0, i64 noundef %1) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %19
  %27 = load i64, ptr %11, align 8
  %28 = and i64 %27, 1024
  %29 = icmp ne i64 %28, 0
  %30 = icmp sgt i64 %1, -1
  %31 = or i1 %30, %29
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_period, ptr noundef nonnull %3) #27
  br label %33

33:                                               ; preds = %32, %26, %19, %15, %2
  %34 = phi i32 [ 0, %32 ], [ -22, %2 ], [ -22, %15 ], [ -22, %19 ], [ -22, %26 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %35 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %35) #27
  call fastcc void @put_ctx(ptr noundef %4) #27
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_task_enable() local_unnamed_addr #0 {
  %1 = tail call ptr @llvm.thread.pointer() #27
  %2 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 131
  tail call void @mutex_lock(ptr noundef %2) #27
  %3 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 132
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %82, label %6

6:                                                ; preds = %78, %0
  %7 = phi ptr [ %80, %78 ], [ %4, %0 ]
  %8 = getelementptr i8, ptr %7, i32 -512
  %9 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %8) #27
  %10 = getelementptr i8, ptr %7, i32 -64
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 22
  %13 = load ptr, ptr %12, align 8
  %14 = icmp ne ptr %13, null
  %15 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %19, !prof !12

18:                                               ; preds = %6
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %19

19:                                               ; preds = %18, %6
  %20 = getelementptr i8, ptr %7, i32 -40
  tail call void @mutex_lock(ptr noundef %20) #27
  %21 = load ptr, ptr %10, align 8
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %21, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %22) #27
  %23 = getelementptr i8, ptr %7, i32 -416
  %24 = load i32, ptr %23, align 8
  %25 = icmp ult i32 %24, -2
  br i1 %25, label %26, label %29

26:                                               ; preds = %36, %19
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %27 = load i16, ptr %22, align 4
  %28 = add i16 %27, 1
  store i16 %28, ptr %22, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %44

29:                                               ; preds = %19
  %30 = icmp eq i32 %24, -2
  br i1 %30, label %31, label %41

31:                                               ; preds = %29
  %32 = getelementptr i8, ptr %7, i32 -436
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr i8, ptr %7, i32 -428
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, %8
  br i1 %39, label %26, label %40

40:                                               ; preds = %36, %31
  store i32 -1, ptr %23, align 8
  br label %41

41:                                               ; preds = %40, %29
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %42 = load i16, ptr %22, align 4
  %43 = add i16 %42, 1
  store i16 %43, ptr %22, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %8, ptr noundef nonnull @__perf_event_enable, ptr noundef null) #27
  br label %44

44:                                               ; preds = %41, %26
  %45 = getelementptr i8, ptr %7, i32 -20
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %78, label %48

48:                                               ; preds = %75, %44
  %49 = phi ptr [ %76, %75 ], [ %46, %44 ]
  %50 = getelementptr i8, ptr %49, i32 -492
  %51 = getelementptr i8, ptr %49, i32 -44
  %52 = load ptr, ptr %51, align 8
  %53 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %53) #27
  %54 = getelementptr i8, ptr %49, i32 -396
  %55 = load i32, ptr %54, align 8
  %56 = icmp ult i32 %55, -2
  br i1 %56, label %57, label %60

57:                                               ; preds = %67, %48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %58 = load i16, ptr %53, align 4
  %59 = add i16 %58, 1
  store i16 %59, ptr %53, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %75

60:                                               ; preds = %48
  %61 = icmp eq i32 %55, -2
  br i1 %61, label %62, label %72

62:                                               ; preds = %60
  %63 = getelementptr i8, ptr %49, i32 -416
  %64 = load i32, ptr %63, align 4
  %65 = and i32 %64, 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr i8, ptr %49, i32 -408
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, %50
  br i1 %70, label %57, label %71

71:                                               ; preds = %67, %62
  store i32 -1, ptr %54, align 8
  br label %72

72:                                               ; preds = %71, %60
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %73 = load i16, ptr %53, align 4
  %74 = add i16 %73, 1
  store i16 %74, ptr %53, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %50, ptr noundef nonnull @__perf_event_enable, ptr noundef null) #27
  br label %75

75:                                               ; preds = %72, %57
  %76 = load ptr, ptr %49, align 4
  %77 = icmp eq ptr %76, %45
  br i1 %77, label %78, label %48

78:                                               ; preds = %75, %44
  tail call void @mutex_unlock(ptr noundef %20) #27
  %79 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %79) #27
  tail call fastcc void @put_ctx(ptr noundef %9) #27
  %80 = load ptr, ptr %7, align 8
  %81 = icmp eq ptr %80, %3
  br i1 %81, label %82, label %6

82:                                               ; preds = %78, %0
  tail call void @mutex_unlock(ptr noundef %2) #27
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_task_disable() local_unnamed_addr #0 {
  %1 = tail call ptr @llvm.thread.pointer() #27
  %2 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 131
  tail call void @mutex_lock(ptr noundef %2) #27
  %3 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 132
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %52, label %6

6:                                                ; preds = %48, %0
  %7 = phi ptr [ %50, %48 ], [ %4, %0 ]
  %8 = getelementptr i8, ptr %7, i32 -512
  %9 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %8) #27
  %10 = getelementptr i8, ptr %7, i32 -64
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 22
  %13 = load ptr, ptr %12, align 8
  %14 = icmp ne ptr %13, null
  %15 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %19, !prof !12

18:                                               ; preds = %6
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %19

19:                                               ; preds = %18, %6
  %20 = getelementptr i8, ptr %7, i32 -40
  tail call void @mutex_lock(ptr noundef %20) #27
  %21 = load ptr, ptr %10, align 8
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %21, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %22) #27
  %23 = getelementptr i8, ptr %7, i32 -416
  %24 = load i32, ptr %23, align 8
  %25 = icmp slt i32 %24, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %26 = load i16, ptr %22, align 4
  %27 = add i16 %26, 1
  store i16 %27, ptr %22, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %25, label %29, label %28

28:                                               ; preds = %19
  tail call fastcc void @event_function_call(ptr noundef %8, ptr noundef nonnull @__perf_event_disable, ptr noundef null) #27
  br label %29

29:                                               ; preds = %28, %19
  %30 = getelementptr i8, ptr %7, i32 -20
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, %30
  br i1 %32, label %48, label %33

33:                                               ; preds = %45, %29
  %34 = phi ptr [ %46, %45 ], [ %31, %29 ]
  %35 = getelementptr i8, ptr %34, i32 -44
  %36 = load ptr, ptr %35, align 8
  %37 = getelementptr inbounds %struct.perf_event_context, ptr %36, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %37) #27
  %38 = getelementptr i8, ptr %34, i32 -396
  %39 = load i32, ptr %38, align 8
  %40 = icmp slt i32 %39, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %41 = load i16, ptr %37, align 4
  %42 = add i16 %41, 1
  store i16 %42, ptr %37, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %40, label %45, label %43

43:                                               ; preds = %33
  %44 = getelementptr i8, ptr %34, i32 -492
  tail call fastcc void @event_function_call(ptr noundef %44, ptr noundef nonnull @__perf_event_disable, ptr noundef null) #27
  br label %45

45:                                               ; preds = %43, %33
  %46 = load ptr, ptr %34, align 4
  %47 = icmp eq ptr %46, %30
  br i1 %47, label %48, label %33

48:                                               ; preds = %45, %29
  tail call void @mutex_unlock(ptr noundef %20) #27
  %49 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %49) #27
  tail call fastcc void @put_ctx(ptr noundef %9) #27
  %50 = load ptr, ptr %7, align 8
  %51 = icmp eq ptr %50, %3
  br i1 %51, label %52, label %6

52:                                               ; preds = %48, %0
  tail call void @mutex_unlock(ptr noundef %2) #27
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define weak dso_local void @arch_perf_update_userpage(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_update_userpage(ptr noundef %0) #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 39
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %93, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @sched_clock() #27
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %22, label %10, !prof !12

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 12
  %12 = load volatile i32, ptr %11, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !31
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 19
  %17 = load i64, ptr %16, align 8
  br label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 21
  %20 = load volatile i64, ptr %19, align 8
  %21 = add i64 %20, %6
  br label %22

22:                                               ; preds = %18, %15, %5
  %23 = phi i64 [ %21, %18 ], [ %17, %15 ], [ 0, %5 ]
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 14
  %27 = load i32, ptr %26, align 8
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %31 = load i32, ptr %30, align 8
  br label %32

32:                                               ; preds = %29, %22
  %33 = phi i32 [ %31, %29 ], [ %27, %22 ]
  %34 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  %35 = load i64, ptr %34, align 8
  %36 = sub i64 %23, %35
  %37 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %38 = load i64, ptr %37, align 8
  %39 = icmp slt i32 %33, 0
  %40 = select i1 %39, i64 0, i64 %36
  %41 = add i64 %40, %38
  %42 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %43 = load i64, ptr %42, align 8
  %44 = icmp sgt i32 %33, 0
  %45 = select i1 %44, i64 %36, i64 0
  %46 = add i64 %43, %45
  %47 = getelementptr inbounds %struct.perf_buffer, ptr %3, i32 0, i32 33
  %48 = load ptr, ptr %47, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !44
  %49 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %48, i32 0, i32 2
  %50 = load i32, ptr %49, align 8
  %51 = add i32 %50, 1
  store i32 %51, ptr %49, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !45
  %52 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 4
  %53 = load i32, ptr %52, align 4
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %32
  %57 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %58 = load i32, ptr %57, align 8
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %62 = load ptr, ptr %61, align 8
  %63 = getelementptr inbounds %struct.pmu, ptr %62, i32 0, i32 27
  %64 = load ptr, ptr %63, align 4
  %65 = tail call i32 %64(ptr noundef %0) #27
  br label %66

66:                                               ; preds = %60, %56, %32
  %67 = phi i32 [ %65, %60 ], [ 0, %32 ], [ 0, %56 ]
  %68 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %48, i32 0, i32 3
  store i32 %67, ptr %68, align 4
  %69 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %70 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %69, ptr elementtype(i64) %69) #27, !srcloc !25
  %71 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 17
  %72 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %71, ptr elementtype(i64) %71) #27, !srcloc !25
  %73 = add i64 %72, %70
  %74 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %48, i32 0, i32 4
  store i64 %73, ptr %74, align 8
  %75 = load i32, ptr %68, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %66
  %78 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  %79 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %78, ptr elementtype(i64) %78) #27, !srcloc !25
  %80 = load i64, ptr %74, align 8
  %81 = sub i64 %80, %79
  store i64 %81, ptr %74, align 8
  br label %82

82:                                               ; preds = %77, %66
  %83 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 28
  %84 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %83, ptr elementtype(i64) %83) #27, !srcloc !25
  %85 = add i64 %41, %84
  %86 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %48, i32 0, i32 5
  store i64 %85, ptr %86, align 8
  %87 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 29
  %88 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %87, ptr elementtype(i64) %87) #27, !srcloc !25
  %89 = add i64 %46, %88
  %90 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %48, i32 0, i32 6
  store i64 %89, ptr %90, align 8
  tail call void @arch_perf_update_userpage(ptr noundef %0, ptr noundef %48, i64 noundef %6)
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !46
  %91 = load i32, ptr %49, align 8
  %92 = add i32 %91, 1
  store i32 %92, ptr %49, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !47
  br label %93

93:                                               ; preds = %82, %1
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @ring_buffer_get(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  %5 = select i1 %4, ptr %0, ptr %3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %6 = getelementptr inbounds %struct.perf_event, ptr %5, i32 0, i32 39
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %1
  %10 = load volatile i32, ptr %7, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %22, %9
  %13 = phi i32 [ %20, %22 ], [ %10, %9 ]
  %14 = add i32 %13, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %7) #27, !srcloc !19
  br label %15

15:                                               ; preds = %15, %12
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) %7, ptr nonnull %7, i32 %13, i32 %14, ptr nonnull elementtype(i32) %7) #27, !srcloc !37
  %17 = extractvalue { i32, i32 } %16, 0
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %15

19:                                               ; preds = %15
  %20 = extractvalue { i32, i32 } %16, 1
  %21 = icmp eq i32 %20, %13
  br i1 %21, label %24, label %22, !prof !23

22:                                               ; preds = %19
  %23 = icmp eq i32 %20, 0
  br i1 %23, label %24, label %12

24:                                               ; preds = %22, %19, %9
  %25 = phi i32 [ 0, %9 ], [ 0, %22 ], [ %13, %19 ]
  %26 = add i32 %25, 1
  %27 = or i32 %26, %25
  %28 = icmp sgt i32 %27, -1
  br i1 %28, label %30, label %29, !prof !23

29:                                               ; preds = %24
  tail call void @refcount_warn_saturate(ptr noundef nonnull %7, i32 noundef 0) #27
  br label %30

30:                                               ; preds = %29, %24
  %31 = icmp eq i32 %25, 0
  %32 = select i1 %31, ptr null, ptr %7
  br label %33

33:                                               ; preds = %30, %1
  %34 = phi ptr [ null, %1 ], [ %32, %30 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret ptr %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ring_buffer_put(ptr noundef %0) local_unnamed_addr #0 {
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #27, !srcloc !19
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #27, !srcloc !42
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %18, label %7, !prof !23

7:                                                ; preds = %5
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef 3) #27
  br label %18

8:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %9 = getelementptr inbounds %struct.perf_buffer, ptr %0, i32 0, i32 16
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp ne ptr %10, %9
  %12 = load i1, ptr @ring_buffer_put.__already_done, align 1
  %13 = xor i1 %12, true
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %16, !prof !12

15:                                               ; preds = %8
  store i1 true, ptr @ring_buffer_put.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6105, i32 noundef 9, ptr noundef null) #27
  br label %16

16:                                               ; preds = %15, %8
  %17 = getelementptr inbounds %struct.perf_buffer, ptr %0, i32 0, i32 1
  tail call void @call_rcu(ptr noundef %17, ptr noundef nonnull @rb_free_rcu) #27
  br label %18

18:                                               ; preds = %16, %7, %5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @rb_free_rcu(ptr noundef %0) #5 {
  %2 = getelementptr i8, ptr %0, i32 -4
  tail call void @rb_free(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_wakeup(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  %5 = select i1 %4, ptr %0, ptr %3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %6 = getelementptr inbounds %struct.perf_event, ptr %5, i32 0, i32 39
  %7 = load volatile ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.perf_buffer, ptr %7, i32 0, i32 16
  %11 = load volatile ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, %10
  br i1 %12, label %18, label %13

13:                                               ; preds = %13, %9
  %14 = phi ptr [ %16, %13 ], [ %11, %9 ]
  %15 = getelementptr i8, ptr %14, i32 16
  tail call void @__wake_up(ptr noundef %15, i32 noundef 3, i32 noundef 0, ptr noundef null) #27
  %16 = load volatile ptr, ptr %14, align 4
  %17 = icmp eq ptr %16, %10
  br i1 %17, label %18, label %13

18:                                               ; preds = %13, %9, %1
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 46
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr %2, align 4
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr %0, ptr %23
  %26 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 44
  tail call void @kill_fasync(ptr noundef %26, i32 noundef 29, i32 noundef %20) #27
  store i32 0, ptr %19, align 4
  br label %27

27:                                               ; preds = %22, %18
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kill_fasync(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_header__init_id(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readonly %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 262144
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call fastcc void @__perf_event_header__init_id(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  br label %9

9:                                                ; preds = %8, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__perf_event_header__init_id(ptr nocapture noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 4
  %5 = load i64, ptr %4, align 8
  %6 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 7
  store i64 %5, ptr %6, align 16
  %7 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 23
  %8 = load i16, ptr %7, align 2
  %9 = getelementptr inbounds %struct.perf_event_header, ptr %0, i32 0, i32 2
  %10 = load i16, ptr %9, align 2
  %11 = add i16 %10, %8
  store i16 %11, ptr %9, align 2
  %12 = and i64 %5, 2
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %3
  %15 = tail call ptr @llvm.thread.pointer() #27
  %16 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 32
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  %19 = select i1 %18, ptr %2, ptr %17
  %20 = getelementptr inbounds %struct.perf_event, ptr %19, i32 0, i32 57
  %21 = load ptr, ptr %20, align 4
  %22 = tail call i32 @__task_pid_nr_ns(ptr noundef %15, i32 noundef 1, ptr noundef %21) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 62
  %26 = load ptr, ptr %25, align 64
  %27 = icmp eq ptr %26, null
  %28 = sext i1 %27 to i32
  br label %29

29:                                               ; preds = %24, %14
  %30 = phi i32 [ %22, %14 ], [ %28, %24 ]
  %31 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 9
  store i32 %30, ptr %31, align 64
  %32 = load ptr, ptr %16, align 4
  %33 = icmp eq ptr %32, null
  %34 = select i1 %33, ptr %2, ptr %32
  %35 = getelementptr inbounds %struct.perf_event, ptr %34, i32 0, i32 57
  %36 = load ptr, ptr %35, align 4
  %37 = tail call i32 @__task_pid_nr_ns(ptr noundef %15, i32 noundef 0, ptr noundef %36) #27
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 62
  %41 = load ptr, ptr %40, align 64
  %42 = icmp eq ptr %41, null
  %43 = sext i1 %42 to i32
  br label %44

44:                                               ; preds = %39, %29
  %45 = phi i32 [ %37, %29 ], [ %43, %39 ]
  %46 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 9, i32 1
  store i32 %45, ptr %46, align 4
  br label %47

47:                                               ; preds = %44, %3
  %48 = and i64 %5, 4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 59
  %52 = load ptr, ptr %51, align 8
  %53 = tail call i64 %52() #27
  %54 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 10
  store i64 %53, ptr %54, align 8
  br label %55

55:                                               ; preds = %50, %47
  %56 = and i64 %5, 65600
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 32
  %60 = load ptr, ptr %59, align 4
  %61 = icmp eq ptr %60, null
  %62 = select i1 %61, ptr %2, ptr %60
  %63 = getelementptr inbounds %struct.perf_event, ptr %62, i32 0, i32 58
  %64 = load i64, ptr %63, align 8
  %65 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 11
  store i64 %64, ptr %65, align 16
  br label %66

66:                                               ; preds = %58, %55
  %67 = and i64 %5, 512
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 58
  %71 = load i64, ptr %70, align 8
  %72 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 12
  store i64 %71, ptr %72, align 8
  br label %73

73:                                               ; preds = %69, %66
  %74 = and i64 %5, 128
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = tail call ptr @llvm.thread.pointer() #27
  %78 = getelementptr inbounds %struct.thread_info, ptr %77, i32 0, i32 2
  %79 = load i32, ptr %78, align 8
  %80 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 13
  store i32 %79, ptr %80, align 32
  %81 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 13, i32 1
  store i32 0, ptr %81, align 4
  br label %82

82:                                               ; preds = %76, %73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event__output_id_sample(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %5 = load i64, ptr %4, align 8
  %6 = and i64 %5, 262144
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 7
  %10 = load i64, ptr %9, align 16
  %11 = and i64 %10, 2
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 9
  %15 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %14, i32 noundef 8) #27
  br label %16

16:                                               ; preds = %13, %8
  %17 = and i64 %10, 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 10
  %21 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %20, i32 noundef 8) #27
  br label %22

22:                                               ; preds = %19, %16
  %23 = and i64 %10, 64
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 11
  %27 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %26, i32 noundef 8) #27
  br label %28

28:                                               ; preds = %25, %22
  %29 = and i64 %10, 512
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 12
  %33 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %32, i32 noundef 8) #27
  br label %34

34:                                               ; preds = %31, %28
  %35 = and i64 %10, 128
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 13
  %39 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %38, i32 noundef 8) #27
  br label %40

40:                                               ; preds = %37, %34
  %41 = and i64 %10, 65536
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 11
  %45 = tail call i32 @perf_output_copy(ptr noundef %1, ptr noundef %44, i32 noundef 8) #27
  br label %46

46:                                               ; preds = %43, %40, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_output_sample(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = alloca [2 x i32], align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca [2 x i32], align 8
  %12 = alloca i64, align 8
  %13 = alloca %struct.anon.181, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 7
  %18 = load i64, ptr %17, align 16
  %19 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %1, i32 noundef 8) #27
  %20 = and i64 %18, 65536
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 11
  %24 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %23, i32 noundef 8) #27
  br label %25

25:                                               ; preds = %22, %4
  %26 = and i64 %18, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 8
  %30 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %29, i32 noundef 8) #27
  br label %31

31:                                               ; preds = %28, %25
  %32 = and i64 %18, 2
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 9
  %36 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %35, i32 noundef 8) #27
  br label %37

37:                                               ; preds = %34, %31
  %38 = and i64 %18, 4
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 10
  %42 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %41, i32 noundef 8) #27
  br label %43

43:                                               ; preds = %40, %37
  %44 = and i64 %18, 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %43
  %47 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %2, i32 noundef 8) #27
  br label %48

48:                                               ; preds = %46, %43
  %49 = and i64 %18, 64
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 11
  %53 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %52, i32 noundef 8) #27
  br label %54

54:                                               ; preds = %51, %48
  %55 = and i64 %18, 512
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 12
  %59 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %58, i32 noundef 8) #27
  br label %60

60:                                               ; preds = %57, %54
  %61 = and i64 %18, 128
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 13
  %65 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %64, i32 noundef 8) #27
  br label %66

66:                                               ; preds = %63, %60
  %67 = and i64 %18, 256
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 3
  %71 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %70, i32 noundef 8) #27
  br label %72

72:                                               ; preds = %69, %66
  %73 = and i64 %18, 16
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  tail call fastcc void @perf_output_read(ptr noundef %0, ptr noundef %3)
  br label %76

76:                                               ; preds = %75, %72
  %77 = and i64 %18, 32
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %122, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 14
  %81 = load ptr, ptr %80, align 8
  %82 = load i64, ptr %81, align 8
  %83 = trunc i64 %82 to i32
  %84 = shl i32 %83, 3
  %85 = add i32 %84, 8
  %86 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 3
  %87 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 5
  %88 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %89 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 6
  %90 = load i32, ptr %86, align 4
  %91 = load ptr, ptr %87, align 8
  br label %92

92:                                               ; preds = %118, %79
  %93 = phi ptr [ %91, %79 ], [ %119, %118 ]
  %94 = phi i32 [ %90, %79 ], [ %120, %118 ]
  %95 = phi i32 [ %85, %79 ], [ %98, %118 ]
  %96 = phi ptr [ %81, %79 ], [ %101, %118 ]
  %97 = tail call i32 @llvm.umin.i32(i32 %94, i32 %95) #27
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %93, ptr align 1 %96, i32 %97, i1 false) #27
  %98 = sub i32 %95, %97
  %99 = load ptr, ptr %87, align 8
  %100 = getelementptr i8, ptr %99, i32 %97
  store ptr %100, ptr %87, align 8
  %101 = getelementptr i8, ptr %96, i32 %97
  %102 = load i32, ptr %86, align 4
  %103 = sub i32 %102, %97
  store i32 %103, ptr %86, align 4
  %104 = icmp eq i32 %102, %97
  br i1 %104, label %105, label %118

105:                                              ; preds = %92
  %106 = load ptr, ptr %88, align 4
  %107 = load i32, ptr %89, align 4
  %108 = add i32 %107, 1
  store i32 %108, ptr %89, align 4
  %109 = getelementptr inbounds %struct.perf_buffer, ptr %106, i32 0, i32 4
  %110 = load i32, ptr %109, align 4
  %111 = add i32 %110, -1
  %112 = and i32 %111, %108
  store i32 %112, ptr %89, align 4
  %113 = getelementptr %struct.perf_buffer, ptr %106, i32 0, i32 34, i32 %112
  %114 = load ptr, ptr %113, align 4
  store ptr %114, ptr %87, align 8
  %115 = getelementptr inbounds %struct.perf_buffer, ptr %106, i32 0, i32 3
  %116 = load i32, ptr %115, align 4
  %117 = shl i32 4096, %116
  store i32 %117, ptr %86, align 4
  br label %118

118:                                              ; preds = %105, %92
  %119 = phi ptr [ %100, %92 ], [ %114, %105 ]
  %120 = phi i32 [ %103, %92 ], [ %117, %105 ]
  %121 = icmp eq i32 %98, 0
  br i1 %121, label %122, label %92

122:                                              ; preds = %118, %76
  %123 = and i64 %18, 1024
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %247, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 1
  %127 = load ptr, ptr %126, align 8
  %128 = icmp eq ptr %127, null
  br i1 %128, label %245, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.perf_raw_record, ptr %127, i32 0, i32 1
  %131 = tail call i32 @perf_output_copy(ptr noundef %0, ptr noundef %130, i32 noundef 4) #27
  %132 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 3
  %133 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 5
  %134 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %135 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 6
  br label %136

136:                                              ; preds = %215, %129
  %137 = phi ptr [ %127, %129 ], [ %216, %215 ]
  %138 = getelementptr inbounds %struct.perf_raw_frag, ptr %137, i32 0, i32 1
  %139 = load ptr, ptr %138, align 1
  %140 = icmp eq ptr %139, null
  %141 = getelementptr inbounds %struct.perf_raw_frag, ptr %137, i32 0, i32 2
  %142 = load ptr, ptr %141, align 1
  %143 = getelementptr inbounds %struct.perf_raw_frag, ptr %137, i32 0, i32 3
  %144 = load i32, ptr %143, align 1
  %145 = load i32, ptr %132, align 4
  %146 = load ptr, ptr %133, align 8
  br i1 %140, label %180, label %147

147:                                              ; preds = %174, %136
  %148 = phi ptr [ %175, %174 ], [ %146, %136 ]
  %149 = phi i32 [ %176, %174 ], [ %145, %136 ]
  %150 = phi i32 [ %155, %174 ], [ %144, %136 ]
  %151 = tail call i32 @llvm.umin.i32(i32 %149, i32 %150) #27
  %152 = sub i32 %144, %150
  %153 = tail call i32 %139(ptr noundef %148, ptr noundef %142, i32 noundef %152, i32 noundef %151) #27
  %154 = sub i32 %151, %153
  %155 = sub i32 %150, %154
  %156 = load ptr, ptr %133, align 8
  %157 = getelementptr i8, ptr %156, i32 %154
  store ptr %157, ptr %133, align 8
  %158 = load i32, ptr %132, align 4
  %159 = sub i32 %158, %154
  store i32 %159, ptr %132, align 4
  %160 = icmp eq i32 %158, %154
  br i1 %160, label %161, label %174

161:                                              ; preds = %147
  %162 = load ptr, ptr %134, align 4
  %163 = load i32, ptr %135, align 4
  %164 = add i32 %163, 1
  store i32 %164, ptr %135, align 4
  %165 = getelementptr inbounds %struct.perf_buffer, ptr %162, i32 0, i32 4
  %166 = load i32, ptr %165, align 4
  %167 = add i32 %166, -1
  %168 = and i32 %167, %164
  store i32 %168, ptr %135, align 4
  %169 = getelementptr %struct.perf_buffer, ptr %162, i32 0, i32 34, i32 %168
  %170 = load ptr, ptr %169, align 4
  store ptr %170, ptr %133, align 8
  %171 = getelementptr inbounds %struct.perf_buffer, ptr %162, i32 0, i32 3
  %172 = load i32, ptr %171, align 4
  %173 = shl i32 4096, %172
  store i32 %173, ptr %132, align 4
  br label %174

174:                                              ; preds = %161, %147
  %175 = phi ptr [ %157, %147 ], [ %170, %161 ]
  %176 = phi i32 [ %159, %147 ], [ %173, %161 ]
  %177 = icmp ne i32 %155, 0
  %178 = icmp eq i32 %153, 0
  %179 = select i1 %177, i1 %178, i1 false
  br i1 %179, label %147, label %210

180:                                              ; preds = %206, %136
  %181 = phi ptr [ %207, %206 ], [ %146, %136 ]
  %182 = phi i32 [ %208, %206 ], [ %145, %136 ]
  %183 = phi i32 [ %186, %206 ], [ %144, %136 ]
  %184 = phi ptr [ %189, %206 ], [ %142, %136 ]
  %185 = tail call i32 @llvm.umin.i32(i32 %182, i32 %183) #27
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 1 %181, ptr align 1 %184, i32 %185, i1 false) #27
  %186 = sub i32 %183, %185
  %187 = load ptr, ptr %133, align 8
  %188 = getelementptr i8, ptr %187, i32 %185
  store ptr %188, ptr %133, align 8
  %189 = getelementptr i8, ptr %184, i32 %185
  %190 = load i32, ptr %132, align 4
  %191 = sub i32 %190, %185
  store i32 %191, ptr %132, align 4
  %192 = icmp eq i32 %190, %185
  br i1 %192, label %193, label %206

193:                                              ; preds = %180
  %194 = load ptr, ptr %134, align 4
  %195 = load i32, ptr %135, align 4
  %196 = add i32 %195, 1
  store i32 %196, ptr %135, align 4
  %197 = getelementptr inbounds %struct.perf_buffer, ptr %194, i32 0, i32 4
  %198 = load i32, ptr %197, align 4
  %199 = add i32 %198, -1
  %200 = and i32 %199, %196
  store i32 %200, ptr %135, align 4
  %201 = getelementptr %struct.perf_buffer, ptr %194, i32 0, i32 34, i32 %200
  %202 = load ptr, ptr %201, align 4
  store ptr %202, ptr %133, align 8
  %203 = getelementptr inbounds %struct.perf_buffer, ptr %194, i32 0, i32 3
  %204 = load i32, ptr %203, align 4
  %205 = shl i32 4096, %204
  store i32 %205, ptr %132, align 4
  br label %206

206:                                              ; preds = %193, %180
  %207 = phi ptr [ %188, %180 ], [ %202, %193 ]
  %208 = phi i32 [ %191, %180 ], [ %205, %193 ]
  %209 = icmp eq i32 %186, 0
  br i1 %209, label %210, label %180

210:                                              ; preds = %206, %174
  %211 = phi ptr [ %207, %206 ], [ %175, %174 ]
  %212 = phi i32 [ %208, %206 ], [ %176, %174 ]
  %213 = load i32, ptr %137, align 1
  %214 = icmp ult i32 %213, 8
  br i1 %214, label %217, label %215

215:                                              ; preds = %210
  %216 = inttoptr i32 %213 to ptr
  br label %136

217:                                              ; preds = %210
  %218 = icmp eq i32 %213, 0
  br i1 %218, label %247, label %219

219:                                              ; preds = %241, %217
  %220 = phi ptr [ %242, %241 ], [ %211, %217 ]
  %221 = phi i32 [ %243, %241 ], [ %212, %217 ]
  %222 = phi i32 [ %224, %241 ], [ %213, %217 ]
  %223 = tail call i32 @llvm.umin.i32(i32 %221, i32 %222) #27
  %224 = sub i32 %222, %223
  %225 = getelementptr i8, ptr %220, i32 %223
  store ptr %225, ptr %133, align 8
  %226 = sub i32 %221, %223
  store i32 %226, ptr %132, align 4
  %227 = icmp ugt i32 %221, %222
  br i1 %227, label %241, label %228

228:                                              ; preds = %219
  %229 = load ptr, ptr %134, align 4
  %230 = load i32, ptr %135, align 4
  %231 = add i32 %230, 1
  store i32 %231, ptr %135, align 4
  %232 = getelementptr inbounds %struct.perf_buffer, ptr %229, i32 0, i32 4
  %233 = load i32, ptr %232, align 4
  %234 = add i32 %233, -1
  %235 = and i32 %234, %231
  store i32 %235, ptr %135, align 4
  %236 = getelementptr %struct.perf_buffer, ptr %229, i32 0, i32 34, i32 %235
  %237 = load ptr, ptr %236, align 4
  store ptr %237, ptr %133, align 8
  %238 = getelementptr inbounds %struct.perf_buffer, ptr %229, i32 0, i32 3
  %239 = load i32, ptr %238, align 4
  %240 = shl i32 4096, %239
  store i32 %240, ptr %132, align 4
  br label %241

241:                                              ; preds = %228, %219
  %242 = phi ptr [ %225, %219 ], [ %237, %228 ]
  %243 = phi i32 [ %226, %219 ], [ %240, %228 ]
  %244 = icmp eq i32 %224, 0
  br i1 %244, label %247, label %219

245:                                              ; preds = %125
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #27
  store i64 4, ptr %13, align 8
  %246 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %13, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #27
  br label %247

247:                                              ; preds = %245, %241, %217, %122
  %248 = and i64 %18, 2048
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %273, label %250

250:                                              ; preds = %247
  %251 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 2
  %252 = load ptr, ptr %251, align 4
  %253 = icmp eq ptr %252, null
  br i1 %253, label %271, label %254

254:                                              ; preds = %250
  %255 = load i64, ptr %252, align 8
  %256 = trunc i64 %255 to i32
  %257 = mul i32 %256, 24
  %258 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %252, i32 noundef 8) #27
  %259 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 11
  %260 = load i64, ptr %259, align 8
  %261 = and i64 %260, 131072
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %267, label %263

263:                                              ; preds = %254
  %264 = load ptr, ptr %251, align 4
  %265 = getelementptr inbounds %struct.perf_branch_stack, ptr %264, i32 0, i32 1
  %266 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %265, i32 noundef 8) #27
  br label %267

267:                                              ; preds = %263, %254
  %268 = load ptr, ptr %251, align 4
  %269 = getelementptr inbounds %struct.perf_branch_stack, ptr %268, i32 0, i32 2
  %270 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %269, i32 noundef %257) #27
  br label %273

271:                                              ; preds = %250
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #27
  store i64 0, ptr %14, align 8
  %272 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %14, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #27
  br label %273

273:                                              ; preds = %271, %267, %247
  %274 = and i64 %18, 4096
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %302, label %276

276:                                              ; preds = %273
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #27
  %277 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 16
  %278 = load i64, ptr %277, align 8
  store i64 %278, ptr %15, align 8
  %279 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %15, i32 noundef 8) #27
  %280 = load i64, ptr %15, align 8
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %301, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 12
  %284 = load i64, ptr %283, align 8
  %285 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 16, i32 1
  %286 = load ptr, ptr %285, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #27
  %287 = trunc i64 %284 to i32
  store i32 %287, ptr %11, align 8
  %288 = lshr i64 %284, 32
  %289 = trunc i64 %288 to i32
  %290 = getelementptr inbounds i32, ptr %11, i32 1
  store i32 %289, ptr %290, align 4
  %291 = call i32 @_find_next_bit_le(ptr noundef nonnull %11, i32 noundef 64, i32 noundef 0) #27
  %292 = icmp ult i32 %291, 64
  br i1 %292, label %293, label %300

293:                                              ; preds = %293, %282
  %294 = phi i32 [ %298, %293 ], [ %291, %282 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #27
  store i64 0, ptr %12, align 8, !annotation !48
  %295 = call i64 @perf_reg_value(ptr noundef %286, i32 noundef %294) #27
  store i64 %295, ptr %12, align 8
  %296 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %12, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #27
  %297 = add nuw nsw i32 %294, 1
  %298 = call i32 @_find_next_bit_le(ptr noundef nonnull %11, i32 noundef 64, i32 noundef %297) #27
  %299 = icmp ult i32 %298, 64
  br i1 %299, label %293, label %300

300:                                              ; preds = %293, %282
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #27
  br label %301

301:                                              ; preds = %300, %276
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #27
  br label %302

302:                                              ; preds = %301, %273
  %303 = and i64 %18, 8192
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %377, label %305

305:                                              ; preds = %302
  %306 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 18
  %307 = load i64, ptr %306, align 8
  %308 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 16, i32 1
  %309 = load ptr, ptr %308, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  store i64 %307, ptr %8, align 8
  %310 = icmp eq ptr %309, null
  br i1 %310, label %311, label %313

311:                                              ; preds = %305
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #27
  store i64 0, ptr %9, align 8
  %312 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %9, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #27
  br label %376

313:                                              ; preds = %305
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #27
  store i64 0, ptr %10, align 8, !annotation !48
  %314 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %8, i32 noundef 8) #27
  %315 = getelementptr [18 x i32], ptr %309, i32 0, i32 13
  %316 = load i32, ptr %315, align 4
  %317 = inttoptr i32 %316 to ptr
  %318 = load i64, ptr %8, align 8
  %319 = trunc i64 %318 to i32
  %320 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 3
  %321 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 5
  %322 = tail call ptr @llvm.thread.pointer() #27
  %323 = getelementptr inbounds %struct.task_struct, ptr %322, i32 0, i32 149
  %324 = getelementptr inbounds %struct.thread_info, ptr %322, i32 0, i32 3
  %325 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %326 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 6
  %327 = load i32, ptr %320, align 4
  %328 = load ptr, ptr %321, align 8
  br label %329

329:                                              ; preds = %364, %313
  %330 = phi ptr [ %328, %313 ], [ %365, %364 ]
  %331 = phi i32 [ %327, %313 ], [ %366, %364 ]
  %332 = phi i32 [ %319, %313 ], [ %344, %364 ]
  %333 = phi ptr [ %317, %313 ], [ %347, %364 ]
  %334 = call i32 @llvm.umin.i32(i32 %331, i32 %332) #27
  %335 = load i32, ptr %323, align 8
  %336 = add i32 %335, 1
  store i32 %336, ptr %323, align 8
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !49
  %337 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %324) #19, !srcloc !50
  %338 = and i32 %337, -13
  %339 = or i32 %338, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %339) #27, !srcloc !51
  call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %340 = call i32 @arm_copy_from_user(ptr noundef %330, ptr noundef %333, i32 noundef %334) #27
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %337) #27, !srcloc !51
  call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !53
  %341 = load i32, ptr %323, align 8
  %342 = add i32 %341, -1
  store i32 %342, ptr %323, align 8
  %343 = sub i32 %334, %340
  %344 = sub i32 %332, %343
  %345 = load ptr, ptr %321, align 8
  %346 = getelementptr i8, ptr %345, i32 %343
  store ptr %346, ptr %321, align 8
  %347 = getelementptr i8, ptr %333, i32 %343
  %348 = load i32, ptr %320, align 4
  %349 = sub i32 %348, %343
  store i32 %349, ptr %320, align 4
  %350 = icmp eq i32 %348, %343
  br i1 %350, label %351, label %364

351:                                              ; preds = %329
  %352 = load ptr, ptr %325, align 4
  %353 = load i32, ptr %326, align 4
  %354 = add i32 %353, 1
  store i32 %354, ptr %326, align 4
  %355 = getelementptr inbounds %struct.perf_buffer, ptr %352, i32 0, i32 4
  %356 = load i32, ptr %355, align 4
  %357 = add i32 %356, -1
  %358 = and i32 %357, %354
  store i32 %358, ptr %326, align 4
  %359 = getelementptr %struct.perf_buffer, ptr %352, i32 0, i32 34, i32 %358
  %360 = load ptr, ptr %359, align 4
  store ptr %360, ptr %321, align 8
  %361 = getelementptr inbounds %struct.perf_buffer, ptr %352, i32 0, i32 3
  %362 = load i32, ptr %361, align 4
  %363 = shl i32 4096, %362
  store i32 %363, ptr %320, align 4
  br label %364

364:                                              ; preds = %351, %329
  %365 = phi ptr [ %346, %329 ], [ %360, %351 ]
  %366 = phi i32 [ %349, %329 ], [ %363, %351 ]
  %367 = icmp ne i32 %344, 0
  %368 = icmp eq i32 %340, 0
  %369 = select i1 %367, i1 %368, i1 false
  br i1 %369, label %329, label %370

370:                                              ; preds = %364
  %371 = load i64, ptr %8, align 8
  %372 = zext i32 %344 to i64
  %373 = sub i64 %371, %372
  store i64 %373, ptr %10, align 8
  %374 = call i32 @perf_output_skip(ptr noundef %0, i32 noundef %344) #27
  %375 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %10, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #27
  br label %376

376:                                              ; preds = %370, %311
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %377

377:                                              ; preds = %376, %302
  %378 = and i64 %18, 16793600
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 4
  %382 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %381, i32 noundef 8) #27
  br label %383

383:                                              ; preds = %380, %377
  %384 = and i64 %18, 32768
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %389, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 6
  %388 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %387, i32 noundef 8) #27
  br label %389

389:                                              ; preds = %386, %383
  %390 = and i64 %18, 131072
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %395, label %392

392:                                              ; preds = %389
  %393 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 5
  %394 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %393, i32 noundef 8) #27
  br label %395

395:                                              ; preds = %392, %389
  %396 = and i64 %18, 262144
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %424, label %398

398:                                              ; preds = %395
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #27
  %399 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 17
  %400 = load i64, ptr %399, align 8
  store i64 %400, ptr %16, align 8
  %401 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %16, i32 noundef 8) #27
  %402 = load i64, ptr %16, align 8
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %423, label %404

404:                                              ; preds = %398
  %405 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 15
  %406 = load i64, ptr %405, align 8
  %407 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 17, i32 1
  %408 = load ptr, ptr %407, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  %409 = trunc i64 %406 to i32
  store i32 %409, ptr %6, align 8
  %410 = lshr i64 %406, 32
  %411 = trunc i64 %410 to i32
  %412 = getelementptr inbounds i32, ptr %6, i32 1
  store i32 %411, ptr %412, align 4
  %413 = call i32 @_find_next_bit_le(ptr noundef nonnull %6, i32 noundef 64, i32 noundef 0) #27
  %414 = icmp ult i32 %413, 64
  br i1 %414, label %415, label %422

415:                                              ; preds = %415, %404
  %416 = phi i32 [ %420, %415 ], [ %413, %404 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 0, ptr %7, align 8, !annotation !48
  %417 = call i64 @perf_reg_value(ptr noundef %408, i32 noundef %416) #27
  store i64 %417, ptr %7, align 8
  %418 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %7, i32 noundef 8) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  %419 = add nuw nsw i32 %416, 1
  %420 = call i32 @_find_next_bit_le(ptr noundef nonnull %6, i32 noundef 64, i32 noundef %419) #27
  %421 = icmp ult i32 %420, 64
  br i1 %421, label %415, label %422

422:                                              ; preds = %415, %404
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  br label %423

423:                                              ; preds = %422, %398
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #27
  br label %424

424:                                              ; preds = %423, %395
  %425 = and i64 %18, 524288
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %430, label %427

427:                                              ; preds = %424
  %428 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 19
  %429 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %428, i32 noundef 8) #27
  br label %430

430:                                              ; preds = %427, %424
  %431 = and i64 %18, 2097152
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %436, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 20
  %435 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %434, i32 noundef 8) #27
  br label %436

436:                                              ; preds = %433, %430
  %437 = and i64 %18, 4194304
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %442, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 21
  %441 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %440, i32 noundef 8) #27
  br label %442

442:                                              ; preds = %439, %436
  %443 = and i64 %18, 8388608
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %448, label %445

445:                                              ; preds = %442
  %446 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 22
  %447 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %446, i32 noundef 8) #27
  br label %448

448:                                              ; preds = %445, %442
  %449 = and i64 %18, 1048576
  %450 = icmp eq i64 %449, 0
  br i1 %450, label %542, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 15
  %453 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef %452, i32 noundef 8) #27
  %454 = load i64, ptr %452, align 16
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %542, label %456

456:                                              ; preds = %451
  %457 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 54
  %458 = load ptr, ptr %457, align 4
  %459 = icmp eq ptr %458, null
  br i1 %459, label %460, label %463

460:                                              ; preds = %456
  %461 = load i1, ptr @perf_aux_sample_output.__already_done, align 1
  br i1 %461, label %542, label %462, !prof !23

462:                                              ; preds = %460
  store i1 true, ptr @perf_aux_sample_output.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6860, i32 noundef 9, ptr noundef null) #27
  br label %542

463:                                              ; preds = %456
  %464 = getelementptr inbounds %struct.perf_event, ptr %458, i32 0, i32 32
  %465 = load ptr, ptr %464, align 4
  %466 = icmp eq ptr %465, null
  %467 = select i1 %466, ptr %458, ptr %465
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %468 = getelementptr inbounds %struct.perf_event, ptr %467, i32 0, i32 39
  %469 = load volatile ptr, ptr %468, align 4
  %470 = icmp eq ptr %469, null
  br i1 %470, label %494, label %471

471:                                              ; preds = %463
  %472 = load volatile i32, ptr %469, align 4
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %486, label %474

474:                                              ; preds = %484, %471
  %475 = phi i32 [ %482, %484 ], [ %472, %471 ]
  %476 = add i32 %475, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %469) #27, !srcloc !19
  br label %477

477:                                              ; preds = %477, %474
  %478 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) %469, ptr nonnull %469, i32 %475, i32 %476, ptr nonnull elementtype(i32) %469) #27, !srcloc !37
  %479 = extractvalue { i32, i32 } %478, 0
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %477

481:                                              ; preds = %477
  %482 = extractvalue { i32, i32 } %478, 1
  %483 = icmp eq i32 %482, %475
  br i1 %483, label %486, label %484, !prof !23

484:                                              ; preds = %481
  %485 = icmp eq i32 %482, 0
  br i1 %485, label %486, label %474

486:                                              ; preds = %484, %481, %471
  %487 = phi i32 [ 0, %471 ], [ 0, %484 ], [ %475, %481 ]
  %488 = add i32 %487, 1
  %489 = or i32 %488, %487
  %490 = icmp sgt i32 %489, -1
  br i1 %490, label %492, label %491, !prof !23

491:                                              ; preds = %486
  call void @refcount_warn_saturate(ptr noundef nonnull %469, i32 noundef 0) #27
  br label %492

492:                                              ; preds = %491, %486
  %493 = icmp eq i32 %487, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %492, %463
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %542

495:                                              ; preds = %492
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %496 = load i64, ptr %452, align 16
  %497 = trunc i64 %496 to i32
  %498 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  %499 = getelementptr inbounds %struct.perf_buffer, ptr %469, i32 0, i32 30
  store volatile i32 1, ptr %499, align 4
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !54
  %500 = getelementptr inbounds %struct.perf_event, ptr %458, i32 0, i32 12
  %501 = load ptr, ptr %500, align 8
  %502 = getelementptr inbounds %struct.pmu, ptr %501, i32 0, i32 33
  %503 = load ptr, ptr %502, align 4
  %504 = call i32 %503(ptr noundef nonnull %458, ptr noundef %0, i32 noundef %497) #27
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !55
  store volatile i32 0, ptr %499, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %498) #27, !srcloc !22
  %505 = icmp slt i32 %504, 0
  %506 = load i1, ptr @perf_aux_sample_output.__already_done.29, align 1
  %507 = xor i1 %506, true
  %508 = select i1 %505, i1 %507, i1 false
  br i1 %508, label %509, label %510, !prof !12

509:                                              ; preds = %495
  store i1 true, ptr @perf_aux_sample_output.__already_done.29, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6875, i32 noundef 9, ptr noundef null) #27
  br label %510

510:                                              ; preds = %509, %495
  br i1 %505, label %525, label %511

511:                                              ; preds = %510
  %512 = load i64, ptr %452, align 16
  %513 = trunc i64 %512 to i32
  %514 = sub i32 %513, %504
  %515 = icmp ugt i32 %514, 7
  %516 = load i1, ptr @perf_aux_sample_output.__already_done.30, align 1
  %517 = xor i1 %516, true
  %518 = select i1 %515, i1 %517, i1 false
  br i1 %518, label %519, label %520, !prof !12

519:                                              ; preds = %511
  store i1 true, ptr @perf_aux_sample_output.__already_done.30, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6883, i32 noundef 9, ptr noundef null) #27
  br label %520

520:                                              ; preds = %519, %511
  %521 = select i1 %515, i32 8, i32 %514
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %525, label %523

523:                                              ; preds = %520
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8
  %524 = call i32 @perf_output_copy(ptr noundef %0, ptr noundef nonnull %5, i32 noundef %521) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  br label %525

525:                                              ; preds = %523, %520, %510
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %469) #27, !srcloc !19
  %526 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %469, ptr nonnull %469, i32 1, ptr nonnull elementtype(i32) %469) #27, !srcloc !42
  %527 = extractvalue { i32, i32, i32 } %526, 0
  %528 = icmp eq i32 %527, 1
  br i1 %528, label %532, label %529

529:                                              ; preds = %525
  %530 = icmp sgt i32 %527, 0
  br i1 %530, label %542, label %531, !prof !23

531:                                              ; preds = %529
  call void @refcount_warn_saturate(ptr noundef nonnull %469, i32 noundef 3) #27
  br label %542

532:                                              ; preds = %525
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %533 = getelementptr inbounds %struct.perf_buffer, ptr %469, i32 0, i32 16
  %534 = load volatile ptr, ptr %533, align 4
  %535 = icmp ne ptr %534, %533
  %536 = load i1, ptr @ring_buffer_put.__already_done, align 1
  %537 = xor i1 %536, true
  %538 = select i1 %535, i1 %537, i1 false
  br i1 %538, label %539, label %540, !prof !12

539:                                              ; preds = %532
  store i1 true, ptr @ring_buffer_put.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6105, i32 noundef 9, ptr noundef null) #27
  br label %540

540:                                              ; preds = %539, %532
  %541 = getelementptr inbounds %struct.perf_buffer, ptr %469, i32 0, i32 1
  call void @call_rcu(ptr noundef %541, ptr noundef nonnull @rb_free_rcu) #27
  br label %542

542:                                              ; preds = %540, %531, %529, %494, %462, %460, %451, %448
  %543 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 6
  %544 = load i64, ptr %543, align 8
  %545 = and i64 %544, 16384
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %562

547:                                              ; preds = %542
  %548 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 7
  %549 = load i32, ptr %548, align 8
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %562, label %551

551:                                              ; preds = %547
  %552 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %553 = load ptr, ptr %552, align 4
  %554 = getelementptr inbounds %struct.perf_buffer, ptr %553, i32 0, i32 10
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !56
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %554) #27, !srcloc !19
  %555 = call { i32, i32 } asm sideeffect "@ atomic_add_return\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %554, ptr %554, i32 1, ptr elementtype(i32) %554) #27, !srcloc !57
  %556 = extractvalue { i32, i32 } %555, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !58
  %557 = icmp slt i32 %556, %549
  br i1 %557, label %562, label %558

558:                                              ; preds = %551
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %554) #27, !srcloc !19
  %559 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %554, ptr %554, i32 %549, ptr elementtype(i32) %554) #27, !srcloc !59
  %560 = getelementptr inbounds %struct.perf_buffer, ptr %553, i32 0, i32 11
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %560) #27, !srcloc !19
  %561 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %560, ptr %560, i32 1, ptr elementtype(i32) %560) #27, !srcloc !20
  br label %562

562:                                              ; preds = %558, %551, %547, %542
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_output_copy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_output_read(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca [4 x i64], align 8
  %4 = alloca [5 x i64], align 8
  %5 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 21, i32 5
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @sched_clock() #27
  %11 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 26
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %26, label %14, !prof !12

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 12
  %16 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !31
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 19
  %21 = load i64, ptr %20, align 8
  br label %26

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 21
  %24 = load volatile i64, ptr %23, align 8
  %25 = add i64 %24, %10
  br label %26

26:                                               ; preds = %22, %19, %9
  %27 = phi i64 [ %25, %22 ], [ %21, %19 ], [ 0, %9 ]
  %28 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 11
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.perf_event, ptr %29, i32 0, i32 14
  %31 = load i32, ptr %30, align 8
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 14
  %35 = load i32, ptr %34, align 8
  br label %36

36:                                               ; preds = %33, %26
  %37 = phi i32 [ %35, %33 ], [ %31, %26 ]
  %38 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 20
  %39 = load i64, ptr %38, align 8
  %40 = sub i64 %27, %39
  %41 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 18
  %42 = load i64, ptr %41, align 8
  %43 = icmp slt i32 %37, 0
  %44 = select i1 %43, i64 0, i64 %40
  %45 = add i64 %44, %42
  %46 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 19
  %47 = load i64, ptr %46, align 8
  %48 = icmp sgt i32 %37, 0
  %49 = select i1 %48, i64 %40, i64 0
  %50 = add i64 %47, %49
  %51 = load i64, ptr %5, align 8
  br label %52

52:                                               ; preds = %36, %2
  %53 = phi i64 [ %6, %2 ], [ %51, %36 ]
  %54 = phi i64 [ 0, %2 ], [ %45, %36 ]
  %55 = phi i64 [ 0, %2 ], [ %50, %36 ]
  %56 = and i64 %53, 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %218, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 11
  %60 = load ptr, ptr %59, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %4) #27
  %61 = getelementptr inbounds i8, ptr %4, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(40) %61, i8 0, i32 32, i1 false) #27, !annotation !48
  %62 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 8
  %63 = load i32, ptr %62, align 8
  %64 = add i32 %63, 1
  %65 = sext i32 %64 to i64
  store i64 %65, ptr %4, align 8
  %66 = and i64 %53, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %58
  store i64 %54, ptr %61, align 8
  br label %69

69:                                               ; preds = %68, %58
  %70 = phi i32 [ 2, %68 ], [ 1, %58 ]
  %71 = and i64 %53, 2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = add nuw nsw i32 %70, 1
  %75 = getelementptr [5 x i64], ptr %4, i32 0, i32 %70
  store i64 %55, ptr %75, align 8
  br label %76

76:                                               ; preds = %73, %69
  %77 = phi i32 [ %74, %73 ], [ %70, %69 ]
  %78 = icmp eq ptr %60, %1
  br i1 %78, label %88, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 14
  %81 = load i32, ptr %80, align 8
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 12
  %85 = load ptr, ptr %84, align 8
  %86 = getelementptr inbounds %struct.pmu, ptr %85, i32 0, i32 23
  %87 = load ptr, ptr %86, align 4
  tail call void %87(ptr noundef %60) #27
  br label %88

88:                                               ; preds = %83, %79, %76
  %89 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 16
  %90 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %89, ptr elementtype(i64) %89) #27, !srcloc !25
  %91 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 17
  %92 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %91, ptr elementtype(i64) %91) #27, !srcloc !25
  %93 = add i64 %92, %90
  %94 = add nuw nsw i32 %77, 1
  %95 = getelementptr [5 x i64], ptr %4, i32 0, i32 %77
  store i64 %93, ptr %95, align 8
  %96 = and i64 %53, 4
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %107, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 32
  %100 = load ptr, ptr %99, align 4
  %101 = icmp eq ptr %100, null
  %102 = select i1 %101, ptr %60, ptr %100
  %103 = getelementptr inbounds %struct.perf_event, ptr %102, i32 0, i32 58
  %104 = load i64, ptr %103, align 8
  %105 = add nuw nsw i32 %77, 2
  %106 = getelementptr [5 x i64], ptr %4, i32 0, i32 %94
  store i64 %104, ptr %106, align 8
  br label %107

107:                                              ; preds = %98, %88
  %108 = phi i32 [ %105, %98 ], [ %94, %88 ]
  %109 = shl nuw nsw i32 %108, 3
  %110 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 3
  %111 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 5
  %112 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %113 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 6
  %114 = load i32, ptr %110, align 4
  %115 = load ptr, ptr %111, align 8
  br label %116

116:                                              ; preds = %142, %107
  %117 = phi ptr [ %115, %107 ], [ %143, %142 ]
  %118 = phi i32 [ %114, %107 ], [ %144, %142 ]
  %119 = phi i32 [ %109, %107 ], [ %122, %142 ]
  %120 = phi ptr [ %4, %107 ], [ %125, %142 ]
  %121 = tail call i32 @llvm.umin.i32(i32 %118, i32 %119) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %117, ptr align 1 %120, i32 %121, i1 false) #27
  %122 = sub i32 %119, %121
  %123 = load ptr, ptr %111, align 8
  %124 = getelementptr i8, ptr %123, i32 %121
  store ptr %124, ptr %111, align 8
  %125 = getelementptr i8, ptr %120, i32 %121
  %126 = load i32, ptr %110, align 4
  %127 = sub i32 %126, %121
  store i32 %127, ptr %110, align 4
  %128 = icmp eq i32 %126, %121
  br i1 %128, label %129, label %142

129:                                              ; preds = %116
  %130 = load ptr, ptr %112, align 4
  %131 = load i32, ptr %113, align 4
  %132 = add i32 %131, 1
  store i32 %132, ptr %113, align 4
  %133 = getelementptr inbounds %struct.perf_buffer, ptr %130, i32 0, i32 4
  %134 = load i32, ptr %133, align 4
  %135 = add i32 %134, -1
  %136 = and i32 %135, %132
  store i32 %136, ptr %113, align 4
  %137 = getelementptr %struct.perf_buffer, ptr %130, i32 0, i32 34, i32 %136
  %138 = load ptr, ptr %137, align 4
  store ptr %138, ptr %111, align 8
  %139 = getelementptr inbounds %struct.perf_buffer, ptr %130, i32 0, i32 3
  %140 = load i32, ptr %139, align 4
  %141 = shl i32 4096, %140
  store i32 %141, ptr %110, align 4
  br label %142

142:                                              ; preds = %129, %116
  %143 = phi ptr [ %124, %116 ], [ %138, %129 ]
  %144 = phi i32 [ %127, %116 ], [ %141, %129 ]
  %145 = icmp eq i32 %122, 0
  br i1 %145, label %146, label %116

146:                                              ; preds = %142
  %147 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 11
  %148 = load ptr, ptr %147, align 4
  %149 = icmp eq ptr %148, %60
  br i1 %149, label %150, label %217

150:                                              ; preds = %146
  %151 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 1
  %152 = load ptr, ptr %151, align 8
  %153 = icmp eq ptr %152, %151
  br i1 %153, label %217, label %157

154:                                              ; preds = %213
  %155 = load ptr, ptr %158, align 8
  %156 = icmp eq ptr %155, %151
  br i1 %156, label %217, label %157

157:                                              ; preds = %154, %150
  %158 = phi ptr [ %155, %154 ], [ %152, %150 ]
  %159 = getelementptr i8, ptr %158, i32 -8
  %160 = icmp eq ptr %159, %1
  br i1 %160, label %170, label %161

161:                                              ; preds = %157
  %162 = getelementptr i8, ptr %158, i32 88
  %163 = load i32, ptr %162, align 8
  %164 = icmp eq i32 %163, 1
  br i1 %164, label %165, label %170

165:                                              ; preds = %161
  %166 = getelementptr i8, ptr %158, i32 80
  %167 = load ptr, ptr %166, align 8
  %168 = getelementptr inbounds %struct.pmu, ptr %167, i32 0, i32 23
  %169 = load ptr, ptr %168, align 4
  tail call void %169(ptr noundef %159) #27
  br label %170

170:                                              ; preds = %165, %161, %157
  %171 = getelementptr i8, ptr %158, i32 96
  %172 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %171, ptr elementtype(i64) %171) #27, !srcloc !25
  %173 = getelementptr i8, ptr %158, i32 104
  %174 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %173, ptr elementtype(i64) %173) #27, !srcloc !25
  %175 = add i64 %174, %172
  store i64 %175, ptr %4, align 8
  br i1 %97, label %183, label %176

176:                                              ; preds = %170
  %177 = getelementptr i8, ptr %158, i32 492
  %178 = load ptr, ptr %177, align 4
  %179 = icmp eq ptr %178, null
  %180 = select i1 %179, ptr %159, ptr %178
  %181 = getelementptr inbounds %struct.perf_event, ptr %180, i32 0, i32 58
  %182 = load i64, ptr %181, align 8
  store i64 %182, ptr %61, align 8
  br label %183

183:                                              ; preds = %176, %170
  %184 = phi i32 [ 16, %176 ], [ 8, %170 ]
  %185 = load i32, ptr %110, align 4
  %186 = load ptr, ptr %111, align 8
  br label %187

187:                                              ; preds = %213, %183
  %188 = phi ptr [ %186, %183 ], [ %214, %213 ]
  %189 = phi i32 [ %185, %183 ], [ %215, %213 ]
  %190 = phi i32 [ %184, %183 ], [ %193, %213 ]
  %191 = phi ptr [ %4, %183 ], [ %196, %213 ]
  %192 = tail call i32 @llvm.umin.i32(i32 %189, i32 %190) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %188, ptr align 1 %191, i32 %192, i1 false) #27
  %193 = sub i32 %190, %192
  %194 = load ptr, ptr %111, align 8
  %195 = getelementptr i8, ptr %194, i32 %192
  store ptr %195, ptr %111, align 8
  %196 = getelementptr i8, ptr %191, i32 %192
  %197 = load i32, ptr %110, align 4
  %198 = sub i32 %197, %192
  store i32 %198, ptr %110, align 4
  %199 = icmp eq i32 %197, %192
  br i1 %199, label %200, label %213

200:                                              ; preds = %187
  %201 = load ptr, ptr %112, align 4
  %202 = load i32, ptr %113, align 4
  %203 = add i32 %202, 1
  store i32 %203, ptr %113, align 4
  %204 = getelementptr inbounds %struct.perf_buffer, ptr %201, i32 0, i32 4
  %205 = load i32, ptr %204, align 4
  %206 = add i32 %205, -1
  %207 = and i32 %206, %203
  store i32 %207, ptr %113, align 4
  %208 = getelementptr %struct.perf_buffer, ptr %201, i32 0, i32 34, i32 %207
  %209 = load ptr, ptr %208, align 4
  store ptr %209, ptr %111, align 8
  %210 = getelementptr inbounds %struct.perf_buffer, ptr %201, i32 0, i32 3
  %211 = load i32, ptr %210, align 4
  %212 = shl i32 4096, %211
  store i32 %212, ptr %110, align 4
  br label %213

213:                                              ; preds = %200, %187
  %214 = phi ptr [ %195, %187 ], [ %209, %200 ]
  %215 = phi i32 [ %198, %187 ], [ %212, %200 ]
  %216 = icmp eq i32 %193, 0
  br i1 %216, label %154, label %187

217:                                              ; preds = %154, %150, %146
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %4) #27
  br label %294

218:                                              ; preds = %52
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  %219 = getelementptr inbounds i8, ptr %3, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %219, i8 0, i32 24, i1 false) #27, !annotation !48
  %220 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 16
  %221 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %220, ptr elementtype(i64) %220) #27, !srcloc !25
  %222 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 17
  %223 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %222, ptr elementtype(i64) %222) #27, !srcloc !25
  %224 = add i64 %223, %221
  store i64 %224, ptr %3, align 8
  %225 = and i64 %53, 1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %218
  %228 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 28
  %229 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %228, ptr elementtype(i64) %228) #27, !srcloc !25
  %230 = add i64 %229, %54
  store i64 %230, ptr %219, align 8
  br label %231

231:                                              ; preds = %227, %218
  %232 = phi i32 [ 2, %227 ], [ 1, %218 ]
  %233 = and i64 %53, 2
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %241, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 29
  %237 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %236, ptr elementtype(i64) %236) #27, !srcloc !25
  %238 = add i64 %237, %55
  %239 = add nuw nsw i32 %232, 1
  %240 = getelementptr [4 x i64], ptr %3, i32 0, i32 %232
  store i64 %238, ptr %240, align 8
  br label %241

241:                                              ; preds = %235, %231
  %242 = phi i32 [ %239, %235 ], [ %232, %231 ]
  %243 = and i64 %53, 4
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %254, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 32
  %247 = load ptr, ptr %246, align 4
  %248 = icmp eq ptr %247, null
  %249 = select i1 %248, ptr %1, ptr %247
  %250 = getelementptr inbounds %struct.perf_event, ptr %249, i32 0, i32 58
  %251 = load i64, ptr %250, align 8
  %252 = add nuw nsw i32 %242, 1
  %253 = getelementptr [4 x i64], ptr %3, i32 0, i32 %242
  store i64 %251, ptr %253, align 8
  br label %254

254:                                              ; preds = %245, %241
  %255 = phi i32 [ %252, %245 ], [ %242, %241 ]
  %256 = shl nuw nsw i32 %255, 3
  %257 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 3
  %258 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 5
  %259 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 1
  %260 = getelementptr inbounds %struct.perf_output_handle, ptr %0, i32 0, i32 6
  %261 = load i32, ptr %257, align 4
  %262 = load ptr, ptr %258, align 8
  br label %263

263:                                              ; preds = %289, %254
  %264 = phi ptr [ %262, %254 ], [ %290, %289 ]
  %265 = phi i32 [ %261, %254 ], [ %291, %289 ]
  %266 = phi i32 [ %256, %254 ], [ %269, %289 ]
  %267 = phi ptr [ %3, %254 ], [ %272, %289 ]
  %268 = tail call i32 @llvm.umin.i32(i32 %265, i32 %266) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %264, ptr align 1 %267, i32 %268, i1 false) #27
  %269 = sub i32 %266, %268
  %270 = load ptr, ptr %258, align 8
  %271 = getelementptr i8, ptr %270, i32 %268
  store ptr %271, ptr %258, align 8
  %272 = getelementptr i8, ptr %267, i32 %268
  %273 = load i32, ptr %257, align 4
  %274 = sub i32 %273, %268
  store i32 %274, ptr %257, align 4
  %275 = icmp eq i32 %273, %268
  br i1 %275, label %276, label %289

276:                                              ; preds = %263
  %277 = load ptr, ptr %259, align 4
  %278 = load i32, ptr %260, align 4
  %279 = add i32 %278, 1
  store i32 %279, ptr %260, align 4
  %280 = getelementptr inbounds %struct.perf_buffer, ptr %277, i32 0, i32 4
  %281 = load i32, ptr %280, align 4
  %282 = add i32 %281, -1
  %283 = and i32 %282, %279
  store i32 %283, ptr %260, align 4
  %284 = getelementptr %struct.perf_buffer, ptr %277, i32 0, i32 34, i32 %283
  %285 = load ptr, ptr %284, align 4
  store ptr %285, ptr %258, align 8
  %286 = getelementptr inbounds %struct.perf_buffer, ptr %277, i32 0, i32 3
  %287 = load i32, ptr %286, align 4
  %288 = shl i32 4096, %287
  store i32 %288, ptr %257, align 4
  br label %289

289:                                              ; preds = %276, %263
  %290 = phi ptr [ %271, %263 ], [ %285, %276 ]
  %291 = phi i32 [ %274, %263 ], [ %288, %276 ]
  %292 = icmp eq i32 %269, 0
  br i1 %292, label %293, label %263

293:                                              ; preds = %289
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  br label %294

294:                                              ; preds = %293, %217
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #6

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @perf_callchain(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %4 = load i64, ptr %3, align 8
  %5 = and i64 %4, 2097152
  %6 = icmp eq i64 %5, 0
  %7 = and i64 %4, 4194304
  %8 = icmp eq i64 %7, 0
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %10, i32 0, i32 18
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = tail call ptr @llvm.thread.pointer() #27
  %16 = icmp ne ptr %12, %15
  br label %17

17:                                               ; preds = %14, %2
  %18 = phi i1 [ false, %2 ], [ %16, %14 ]
  %19 = and i64 %4, 6291456
  %20 = icmp eq i64 %19, 6291456
  br i1 %20, label %28, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 17
  %23 = load i16, ptr %22, align 4
  %24 = zext i16 %23 to i32
  %25 = tail call ptr @get_perf_callchain(ptr noundef %1, i32 noundef 0, i1 noundef zeroext %6, i1 noundef zeroext %8, i32 noundef %24, i1 noundef zeroext %18, i1 noundef zeroext true) #27
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr @__empty_callchain, ptr %25
  br label %28

28:                                               ; preds = %21, %17
  %29 = phi ptr [ %27, %21 ], [ @__empty_callchain, %17 ]
  ret ptr %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_perf_callchain(ptr noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext, i32 noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_prepare_sample(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) local_unnamed_addr #0 {
  %5 = alloca ptr, align 4
  %6 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 4
  %7 = load i64, ptr %6, align 8
  store i32 9, ptr %0, align 4
  %8 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 22
  %9 = load i16, ptr %8, align 8
  %10 = add i16 %9, 8
  %11 = getelementptr inbounds %struct.perf_event_header, ptr %0, i32 0, i32 2
  store i16 %10, ptr %11, align 2
  %12 = getelementptr inbounds %struct.perf_event_header, ptr %0, i32 0, i32 1
  store i16 0, ptr %12, align 4
  %13 = tail call i32 @perf_misc_flags(ptr noundef %3) #27
  %14 = load i16, ptr %12, align 4
  %15 = trunc i32 %13 to i16
  %16 = or i16 %14, %15
  store i16 %16, ptr %12, align 4
  tail call fastcc void @__perf_event_header__init_id(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  %17 = and i64 %7, 8388609
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %4
  %20 = tail call i32 @perf_instruction_pointer(ptr noundef %3) #27
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 8
  store i64 %21, ptr %22, align 8
  br label %23

23:                                               ; preds = %19, %4
  %24 = and i64 %7, 32
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %68, label %26

26:                                               ; preds = %23
  %27 = icmp sgt i64 %7, -1
  br i1 %27, label %31, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 14
  %30 = load ptr, ptr %29, align 8
  br label %60

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 6
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 2097152
  %35 = icmp eq i64 %34, 0
  %36 = and i64 %33, 4194304
  %37 = icmp eq i64 %36, 0
  %38 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 26
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.perf_event_context, ptr %39, i32 0, i32 18
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %31
  %44 = tail call ptr @llvm.thread.pointer() #27
  %45 = icmp ne ptr %41, %44
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi i1 [ false, %31 ], [ %45, %43 ]
  %48 = and i64 %33, 6291456
  %49 = icmp eq i64 %48, 6291456
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 17
  %52 = load i16, ptr %51, align 4
  %53 = zext i16 %52 to i32
  %54 = tail call ptr @get_perf_callchain(ptr noundef %3, i32 noundef 0, i1 noundef zeroext %35, i1 noundef zeroext %37, i32 noundef %53, i1 noundef zeroext %47, i1 noundef zeroext true) #27
  %55 = icmp eq ptr %54, null
  %56 = select i1 %55, ptr @__empty_callchain, ptr %54
  br label %57

57:                                               ; preds = %50, %46
  %58 = phi ptr [ %56, %50 ], [ @__empty_callchain, %46 ]
  %59 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 14
  store ptr %58, ptr %59, align 8
  br label %60

60:                                               ; preds = %57, %28
  %61 = phi ptr [ %30, %28 ], [ %58, %57 ]
  %62 = load i64, ptr %61, align 8
  %63 = trunc i64 %62 to i16
  %64 = shl i16 %63, 3
  %65 = load i16, ptr %11, align 2
  %66 = add i16 %65, 8
  %67 = add i16 %66, %64
  store i16 %67, ptr %11, align 2
  br label %68

68:                                               ; preds = %60, %23
  %69 = and i64 %7, 1024
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 1
  %73 = load ptr, ptr %72, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %100, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.perf_raw_frag, ptr %73, i32 0, i32 3
  %77 = load i32, ptr %76, align 1
  %78 = load i32, ptr %73, align 1
  %79 = icmp ult i32 %78, 8
  br i1 %79, label %91, label %80

80:                                               ; preds = %80, %75
  %81 = phi i32 [ %87, %80 ], [ %78, %75 ]
  %82 = phi i32 [ %86, %80 ], [ %77, %75 ]
  %83 = inttoptr i32 %81 to ptr
  %84 = getelementptr inbounds %struct.perf_raw_frag, ptr %83, i32 0, i32 3
  %85 = load i32, ptr %84, align 1
  %86 = add i32 %85, %82
  %87 = load i32, ptr %83, align 1
  %88 = icmp ult i32 %87, 8
  br i1 %88, label %89, label %80

89:                                               ; preds = %80
  %90 = inttoptr i32 %81 to ptr
  br label %91

91:                                               ; preds = %89, %75
  %92 = phi ptr [ %73, %75 ], [ %90, %89 ]
  %93 = phi i32 [ %77, %75 ], [ %86, %89 ]
  %94 = add i32 %93, 3
  %95 = or i32 %94, 7
  %96 = add i32 %95, 1
  %97 = add nsw i32 %95, -3
  %98 = getelementptr inbounds %struct.perf_raw_record, ptr %73, i32 0, i32 1
  store i32 %97, ptr %98, align 4
  %99 = sub i32 %97, %93
  store i32 %99, ptr %92, align 1
  br label %100

100:                                              ; preds = %91, %71
  %101 = phi i32 [ %96, %91 ], [ 8, %71 ]
  %102 = load i16, ptr %11, align 2
  %103 = trunc i32 %101 to i16
  %104 = add i16 %102, %103
  store i16 %104, ptr %11, align 2
  br label %105

105:                                              ; preds = %100, %68
  %106 = and i64 %7, 2048
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %126, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 2
  %110 = load ptr, ptr %109, align 4
  %111 = icmp eq ptr %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 11
  %114 = load i64, ptr %113, align 8
  %115 = and i64 %114, 131072
  %116 = icmp eq i64 %115, 0
  %117 = load i64, ptr %110, align 8
  %118 = mul i64 %117, 24
  %119 = select i1 %116, i64 8, i64 16
  %120 = add i64 %119, %118
  %121 = trunc i64 %120 to i16
  br label %122

122:                                              ; preds = %112, %108
  %123 = phi i16 [ %121, %112 ], [ 8, %108 ]
  %124 = load i16, ptr %11, align 2
  %125 = add i16 %124, %123
  store i16 %125, ptr %11, align 2
  br label %126

126:                                              ; preds = %122, %105
  %127 = and i64 %7, 12288
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %147, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 16
  %131 = getelementptr [18 x i32], ptr %3, i32 0, i32 16
  %132 = load i32, ptr %131, align 4
  %133 = and i32 %132, 15
  %134 = icmp eq i32 %133, 0
  %135 = tail call ptr @llvm.thread.pointer() #27
  br i1 %134, label %136, label %139

136:                                              ; preds = %129
  %137 = tail call i64 @perf_reg_abi(ptr noundef %135) #27
  store i64 %137, ptr %130, align 8
  %138 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 16, i32 1
  store ptr %3, ptr %138, align 8
  br label %147

139:                                              ; preds = %129
  %140 = getelementptr inbounds %struct.task_struct, ptr %135, i32 0, i32 4
  %141 = load i32, ptr %140, align 4
  %142 = and i32 %141, 2097152
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  tail call void @perf_get_regs_user(ptr noundef %130, ptr noundef %3) #27
  br label %147

145:                                              ; preds = %139
  store i64 0, ptr %130, align 8
  %146 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 16, i32 1
  store ptr null, ptr %146, align 8
  br label %147

147:                                              ; preds = %145, %144, %136, %126
  %148 = and i64 %7, 4096
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %165, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 16, i32 1
  %152 = load ptr, ptr %151, align 8
  %153 = icmp eq ptr %152, null
  br i1 %153, label %161, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 12
  %156 = load i64, ptr %155, align 8
  %157 = tail call i32 @__sw_hweight64(i64 noundef %156) #27
  %158 = trunc i32 %157 to i16
  %159 = shl i16 %158, 3
  %160 = add i16 %159, 8
  br label %161

161:                                              ; preds = %154, %150
  %162 = phi i16 [ %160, %154 ], [ 8, %150 ]
  %163 = load i16, ptr %11, align 2
  %164 = add i16 %163, %162
  store i16 %164, ptr %11, align 2
  br label %165

165:                                              ; preds = %161, %147
  %166 = and i64 %7, 8192
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %202, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 16, i32 1
  %170 = load ptr, ptr %169, align 8
  %171 = icmp eq ptr %170, null
  br i1 %171, label %194, label %172

172:                                              ; preds = %168
  %173 = load i16, ptr %11, align 2
  %174 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 13
  %175 = load i32, ptr %174, align 8
  %176 = getelementptr [18 x i32], ptr %170, i32 0, i32 13
  %177 = load i32, ptr %176, align 4
  %178 = add i32 %177, 1090519040
  %179 = icmp ult i32 %178, 1090519041
  %180 = sub i32 -1090519040, %177
  %181 = tail call i32 @llvm.umin.i32(i32 %180, i32 65535) #27
  %182 = select i1 %179, i32 0, i32 %181
  %183 = and i32 %175, 65535
  %184 = tail call i32 @llvm.umin.i32(i32 %183, i32 %182) #27
  %185 = trunc i32 %184 to i16
  %186 = sub i16 -17, %173
  %187 = icmp ult i16 %186, %185
  %188 = sub i16 -26, %173
  %189 = or i16 %188, 7
  %190 = add i16 %189, 1
  %191 = select i1 %187, i16 %190, i16 %185
  %192 = icmp eq i16 %191, 0
  %193 = add i16 %191, 16
  br i1 %192, label %194, label %195

194:                                              ; preds = %172, %168
  br label %195

195:                                              ; preds = %194, %172
  %196 = phi i16 [ 0, %194 ], [ %191, %172 ]
  %197 = phi i16 [ 8, %194 ], [ %193, %172 ]
  %198 = zext i16 %196 to i64
  %199 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 18
  store i64 %198, ptr %199, align 8
  %200 = load i16, ptr %11, align 2
  %201 = add i16 %200, %197
  store i16 %201, ptr %11, align 2
  br label %202

202:                                              ; preds = %195, %165
  %203 = and i64 %7, 262144
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %223, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 17
  %207 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 17, i32 1
  store ptr %3, ptr %207, align 8
  %208 = tail call ptr @llvm.thread.pointer() #27
  %209 = tail call i64 @perf_reg_abi(ptr noundef %208) #27
  store i64 %209, ptr %206, align 8
  %210 = load ptr, ptr %207, align 8
  %211 = icmp eq ptr %210, null
  br i1 %211, label %219, label %212

212:                                              ; preds = %205
  %213 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 15
  %214 = load i64, ptr %213, align 8
  %215 = tail call i32 @__sw_hweight64(i64 noundef %214) #27
  %216 = trunc i32 %215 to i16
  %217 = shl i16 %216, 3
  %218 = add i16 %217, 8
  br label %219

219:                                              ; preds = %212, %205
  %220 = phi i16 [ %218, %212 ], [ 8, %205 ]
  %221 = load i16, ptr %11, align 2
  %222 = add i16 %221, %220
  store i16 %222, ptr %11, align 2
  br label %223

223:                                              ; preds = %219, %202
  %224 = and i64 %7, 524288
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %303, label %226

226:                                              ; preds = %223
  %227 = load i64, ptr %1, align 64
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %300, label %229

229:                                              ; preds = %226
  %230 = icmp ugt i64 %227, 3204448255
  br i1 %230, label %231, label %257

231:                                              ; preds = %229
  %232 = trunc i64 %227 to i32
  %233 = icmp ugt i32 %232, -1073741825
  %234 = load ptr, ptr @high_memory, align 4
  %235 = ptrtoint ptr %234 to i32
  %236 = icmp ult i32 %232, %235
  %237 = select i1 %233, i1 %236, i1 false
  br i1 %237, label %238, label %300

238:                                              ; preds = %231
  %239 = add nsw i32 %232, 1073741824
  %240 = lshr i32 %239, 12
  %241 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %242 = add i32 %241, %240
  %243 = tail call i32 @pfn_valid(i32 noundef %242) #27
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %300, label %245

245:                                              ; preds = %238
  %246 = load ptr, ptr @high_memory, align 4
  %247 = ptrtoint ptr %246 to i32
  %248 = add i32 %247, 8388608
  %249 = and i32 %248, -8388608
  %250 = zext i32 %249 to i64
  %251 = icmp uge i64 %227, %250
  %252 = icmp ult i64 %227, 4286578688
  %253 = and i1 %252, %251
  br i1 %253, label %300, label %254

254:                                              ; preds = %245
  %255 = tail call i32 asm "@ __pv_stub\0A1:\09add\09$0, $1, $2\0A2:\09add\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 %232, i32 -2130706432, i32 8454144) #28, !srcloc !60
  %256 = zext i32 %255 to i64
  br label %300

257:                                              ; preds = %229
  %258 = tail call ptr @llvm.thread.pointer() #27
  %259 = getelementptr inbounds %struct.task_struct, ptr %258, i32 0, i32 37
  %260 = load ptr, ptr %259, align 4
  %261 = icmp eq ptr %260, null
  br i1 %261, label %300, label %262

262:                                              ; preds = %257
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store ptr null, ptr %5, align 4, !annotation !48
  %263 = getelementptr inbounds %struct.task_struct, ptr %258, i32 0, i32 149
  %264 = load i32, ptr %263, align 8
  %265 = add i32 %264, 1
  store i32 %265, ptr %263, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !49
  %266 = trunc i64 %227 to i32
  %267 = call i32 @get_user_pages_fast_only(i32 noundef %266, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %5) #27
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %296

269:                                              ; preds = %262
  %270 = load ptr, ptr %5, align 4
  %271 = load ptr, ptr @mem_map, align 4
  %272 = ptrtoint ptr %270 to i32
  %273 = ptrtoint ptr %271 to i32
  %274 = sub i32 %272, %273
  %275 = lshr exact i32 %274, 5
  %276 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %277 = add i32 %275, %276
  %278 = shl i32 %277, 12
  %279 = zext i32 %278 to i64
  %280 = and i64 %227, 4095
  %281 = or i64 %280, %279
  %282 = getelementptr inbounds %struct.page, ptr %270, i32 0, i32 1
  %283 = load volatile i32, ptr %282, align 4
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %288, label %286, !prof !23

286:                                              ; preds = %269
  %287 = add i32 %283, -1
  br label %288

288:                                              ; preds = %286, %269
  %289 = phi i32 [ %287, %286 ], [ %272, %269 ]
  %290 = inttoptr i32 %289 to ptr
  %291 = getelementptr inbounds %struct.page, ptr %290, i32 0, i32 3
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %291) #27, !srcloc !19
  %292 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %291, ptr %291, i32 1, ptr elementtype(i32) %291) #27, !srcloc !34
  %293 = extractvalue { i32, i32 } %292, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %288
  call void @__put_page(ptr noundef %290) #27
  br label %296

296:                                              ; preds = %295, %288, %262
  %297 = phi i64 [ 0, %262 ], [ %281, %288 ], [ %281, %295 ]
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !53
  %298 = load i32, ptr %263, align 8
  %299 = add i32 %298, -1
  store i32 %299, ptr %263, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  br label %300

300:                                              ; preds = %296, %257, %254, %245, %238, %231, %226
  %301 = phi i64 [ 0, %226 ], [ 0, %245 ], [ %256, %254 ], [ 0, %238 ], [ 0, %231 ], [ %297, %296 ], [ 0, %257 ]
  %302 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 19
  store i64 %301, ptr %302, align 32
  br label %303

303:                                              ; preds = %300, %223
  %304 = and i64 %7, 4194304
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %303
  %307 = load i64, ptr %1, align 64
  %308 = trunc i64 %307 to i32
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %311) #27, !srcloc !22
  br label %312

312:                                              ; preds = %310, %306
  %313 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 21
  store i64 0, ptr %313, align 16
  br label %314

314:                                              ; preds = %312, %303
  %315 = and i64 %7, 8388608
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %326, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 8
  %319 = load i64, ptr %318, align 8
  %320 = trunc i64 %319 to i32
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %324, label %322

322:                                              ; preds = %317
  %323 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %323) #27, !srcloc !22
  br label %324

324:                                              ; preds = %322, %317
  %325 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 22
  store i64 0, ptr %325, align 8
  br label %326

326:                                              ; preds = %324, %314
  %327 = and i64 %7, 1048576
  %328 = icmp eq i64 %327, 0
  %329 = load i16, ptr %11, align 2
  br i1 %328, label %439, label %330

330:                                              ; preds = %326
  %331 = add i16 %329, 8
  store i16 %331, ptr %11, align 2
  %332 = sub i16 -9, %329
  %333 = zext i16 %332 to i32
  %334 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 21, i32 19
  %335 = load i32, ptr %334, align 8
  %336 = call i32 @llvm.umin.i32(i32 %335, i32 %333)
  %337 = and i32 %336, 65528
  %338 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 54
  %339 = load ptr, ptr %338, align 4
  %340 = getelementptr inbounds %struct.perf_sample_data, ptr %1, i32 0, i32 15
  store i64 0, ptr %340, align 16
  %341 = icmp eq ptr %339, null
  br i1 %341, label %423, label %342

342:                                              ; preds = %330
  %343 = getelementptr inbounds %struct.perf_event, ptr %339, i32 0, i32 14
  %344 = load volatile i32, ptr %343, align 8
  %345 = icmp ne i32 %344, 1
  %346 = load i1, ptr @perf_prepare_sample_aux.__already_done, align 1
  %347 = xor i1 %346, true
  %348 = select i1 %345, i1 %347, i1 false
  br i1 %348, label %349, label %350, !prof !12

349:                                              ; preds = %342
  store i1 true, ptr @perf_prepare_sample_aux.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6791, i32 noundef 9, ptr noundef null) #27
  br label %350

350:                                              ; preds = %349, %342
  br i1 %345, label %423, label %351

351:                                              ; preds = %350
  %352 = getelementptr inbounds %struct.perf_event, ptr %339, i32 0, i32 33
  %353 = load volatile i32, ptr %352, align 8
  %354 = tail call ptr @llvm.thread.pointer() #27
  %355 = getelementptr inbounds %struct.thread_info, ptr %354, i32 0, i32 2
  %356 = load i32, ptr %355, align 8
  %357 = icmp ne i32 %353, %356
  %358 = load i1, ptr @perf_prepare_sample_aux.__already_done.31, align 1
  %359 = xor i1 %358, true
  %360 = select i1 %357, i1 %359, i1 false
  br i1 %360, label %361, label %362, !prof !12

361:                                              ; preds = %351
  store i1 true, ptr @perf_prepare_sample_aux.__already_done.31, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6794, i32 noundef 9, ptr noundef null) #27
  br label %362

362:                                              ; preds = %361, %351
  br i1 %357, label %423, label %363

363:                                              ; preds = %362
  %364 = getelementptr inbounds %struct.perf_event, ptr %339, i32 0, i32 32
  %365 = load ptr, ptr %364, align 4
  %366 = icmp eq ptr %365, null
  %367 = select i1 %366, ptr %339, ptr %365
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %368 = getelementptr inbounds %struct.perf_event, ptr %367, i32 0, i32 39
  %369 = load volatile ptr, ptr %368, align 4
  %370 = icmp eq ptr %369, null
  br i1 %370, label %394, label %371

371:                                              ; preds = %363
  %372 = load volatile i32, ptr %369, align 4
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %386, label %374

374:                                              ; preds = %384, %371
  %375 = phi i32 [ %382, %384 ], [ %372, %371 ]
  %376 = add i32 %375, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %369) #27, !srcloc !19
  br label %377

377:                                              ; preds = %377, %374
  %378 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) %369, ptr nonnull %369, i32 %375, i32 %376, ptr nonnull elementtype(i32) %369) #27, !srcloc !37
  %379 = extractvalue { i32, i32 } %378, 0
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %377

381:                                              ; preds = %377
  %382 = extractvalue { i32, i32 } %378, 1
  %383 = icmp eq i32 %382, %375
  br i1 %383, label %386, label %384, !prof !23

384:                                              ; preds = %381
  %385 = icmp eq i32 %382, 0
  br i1 %385, label %386, label %374

386:                                              ; preds = %384, %381, %371
  %387 = phi i32 [ 0, %371 ], [ 0, %384 ], [ %375, %381 ]
  %388 = add i32 %387, 1
  %389 = or i32 %388, %387
  %390 = icmp sgt i32 %389, -1
  br i1 %390, label %392, label %391, !prof !23

391:                                              ; preds = %386
  call void @refcount_warn_saturate(ptr noundef nonnull %369, i32 noundef 0) #27
  br label %392

392:                                              ; preds = %391, %386
  %393 = icmp eq i32 %387, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %392, %363
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %423

395:                                              ; preds = %392
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %396 = getelementptr inbounds %struct.perf_buffer, ptr %369, i32 0, i32 30
  %397 = load volatile i32, ptr %396, align 4
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %405

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.perf_buffer, ptr %369, i32 0, i32 24
  %401 = load i32, ptr %400, align 4
  %402 = shl i32 %401, 12
  %403 = call i32 @llvm.umin.i32(i32 %402, i32 %337) #27
  %404 = zext i32 %403 to i64
  br label %405

405:                                              ; preds = %399, %395
  %406 = phi i64 [ %404, %399 ], [ 0, %395 ]
  store i64 %406, ptr %340, align 16
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %369) #27, !srcloc !19
  %407 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %369, ptr nonnull %369, i32 1, ptr nonnull elementtype(i32) %369) #27, !srcloc !42
  %408 = extractvalue { i32, i32, i32 } %407, 0
  %409 = icmp eq i32 %408, 1
  br i1 %409, label %413, label %410

410:                                              ; preds = %405
  %411 = icmp sgt i32 %408, 0
  br i1 %411, label %423, label %412, !prof !23

412:                                              ; preds = %410
  call void @refcount_warn_saturate(ptr noundef nonnull %369, i32 noundef 3) #27
  br label %423

413:                                              ; preds = %405
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %414 = getelementptr inbounds %struct.perf_buffer, ptr %369, i32 0, i32 16
  %415 = load volatile ptr, ptr %414, align 4
  %416 = icmp ne ptr %415, %414
  %417 = load i1, ptr @ring_buffer_put.__already_done, align 1
  %418 = xor i1 %417, true
  %419 = select i1 %416, i1 %418, i1 false
  br i1 %419, label %420, label %421, !prof !12

420:                                              ; preds = %413
  store i1 true, ptr @ring_buffer_put.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6105, i32 noundef 9, ptr noundef null) #27
  br label %421

421:                                              ; preds = %420, %413
  %422 = getelementptr inbounds %struct.perf_buffer, ptr %369, i32 0, i32 1
  call void @call_rcu(ptr noundef %422, ptr noundef nonnull @rb_free_rcu) #27
  br label %423

423:                                              ; preds = %421, %412, %410, %394, %362, %350, %330
  %424 = load i64, ptr %340, align 16
  %425 = and i64 %424, 4294967295
  %426 = load i16, ptr %11, align 2
  %427 = zext i16 %426 to i64
  %428 = add nuw nsw i64 %425, %427
  %429 = icmp ugt i64 %428, 65535
  %430 = load i1, ptr @perf_prepare_sample.__already_done, align 1
  %431 = xor i1 %430, true
  %432 = select i1 %429, i1 %431, i1 false
  br i1 %432, label %433, label %435, !prof !12

433:                                              ; preds = %423
  store i1 true, ptr @perf_prepare_sample.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 7555, i32 noundef 9, ptr noundef null) #27
  %434 = load i16, ptr %11, align 2
  br label %435

435:                                              ; preds = %433, %423
  %436 = phi i16 [ %434, %433 ], [ %426, %423 ]
  %437 = trunc i64 %424 to i16
  %438 = add i16 %436, %437
  store i16 %438, ptr %11, align 2
  br label %439

439:                                              ; preds = %435, %326
  %440 = phi i16 [ %438, %435 ], [ %329, %326 ]
  %441 = and i16 %440, 7
  %442 = icmp ne i16 %441, 0
  %443 = load i1, ptr @perf_prepare_sample.__already_done.8, align 1
  %444 = xor i1 %443, true
  %445 = select i1 %442, i1 %444, i1 false
  br i1 %445, label %446, label %447, !prof !12

446:                                              ; preds = %439
  store i1 true, ptr @perf_prepare_sample.__already_done.8, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 7566, i32 noundef 9, ptr noundef null) #27
  br label %447

447:                                              ; preds = %446, %439
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_misc_flags(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_instruction_pointer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_output_forward(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca %struct.perf_output_handle, align 8
  %5 = alloca %struct.perf_event_header, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i32 32, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !48
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  call void @perf_prepare_sample(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0, ptr noundef %2) #27
  %6 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = zext i16 %7 to i32
  %9 = call i32 @perf_output_begin_forward(ptr noundef nonnull %4, ptr noundef %1, ptr noundef %0, i32 noundef %8) #27, !callees !61
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @perf_output_sample(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0) #27
  call void @perf_output_end(ptr noundef nonnull %4) #27
  br label %12

12:                                               ; preds = %11, %3
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_output_begin_forward(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_output_backward(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca %struct.perf_output_handle, align 8
  %5 = alloca %struct.perf_event_header, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i32 32, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !48
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  call void @perf_prepare_sample(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0, ptr noundef %2) #27
  %6 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = zext i16 %7 to i32
  %9 = call i32 @perf_output_begin_backward(ptr noundef nonnull %4, ptr noundef %1, ptr noundef %0, i32 noundef %8) #27, !callees !61
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @perf_output_sample(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0) #27
  call void @perf_output_end(ptr noundef nonnull %4) #27
  br label %12

12:                                               ; preds = %11, %3
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_output_begin_backward(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_output(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = alloca %struct.perf_output_handle, align 8
  %5 = alloca %struct.perf_event_header, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i32 32, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !48
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  call void @perf_prepare_sample(ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0, ptr noundef %2) #27
  %6 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = zext i16 %7 to i32
  %9 = call i32 @perf_output_begin(ptr noundef nonnull %4, ptr noundef %1, ptr noundef %0, i32 noundef %8) #27, !callees !61
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @perf_output_sample(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %1, ptr noundef %0) #27
  call void @perf_output_end(ptr noundef nonnull %4) #27
  br label %12

12:                                               ; preds = %11, %3
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #27
  ret i32 %9
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_output_begin(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_exec() local_unnamed_addr #0 {
  %1 = alloca %struct.remote_function_call, align 4
  %2 = alloca %struct.stop_event_data, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.list_head, align 8
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %6 = getelementptr inbounds %struct.stop_event_data, ptr %2, i32 0, i32 1
  %7 = getelementptr inbounds %struct.remote_function_call, ptr %1, i32 0, i32 1
  %8 = getelementptr inbounds %struct.remote_function_call, ptr %1, i32 0, i32 2
  %9 = getelementptr inbounds %struct.remote_function_call, ptr %1, i32 0, i32 3
  br label %10

10:                                               ; preds = %223, %0
  %11 = phi i32 [ 0, %0 ], [ %224, %223 ]
  %12 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  %13 = tail call ptr @llvm.thread.pointer() #27
  %14 = getelementptr %struct.task_struct, ptr %13, i32 0, i32 130, i32 %11
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %82, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 9
  %19 = load i32, ptr %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %82, label %21

21:                                               ; preds = %17
  %22 = load ptr, ptr %15, align 8
  %23 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 9
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = call i32 @llvm.read_register.i32(metadata !0) #27
  %27 = inttoptr i32 %26 to ptr
  %28 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #19, !srcloc !11
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = getelementptr inbounds %struct.perf_event_context, ptr %30, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %31) #27
  %32 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 1
  call void @_raw_spin_lock(ptr noundef %32) #27
  call fastcc void @ctx_sched_out(ptr noundef nonnull %15, ptr noundef %30, i32 noundef 4) #27
  %33 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 6
  %34 = load ptr, ptr %33, align 8
  %35 = icmp eq ptr %34, %33
  br i1 %35, label %81, label %36

36:                                               ; preds = %50, %21
  %37 = phi ptr [ %68, %50 ], [ %34, %21 ]
  %38 = phi i32 [ %67, %50 ], [ 0, %21 ]
  %39 = phi i32 [ %52, %50 ], [ 0, %21 ]
  %40 = getelementptr inbounds %struct.perf_event, ptr %37, i32 0, i32 21, i32 6
  %41 = load i64, ptr %40, align 8
  %42 = and i64 %41, 4096
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %36
  %45 = and i64 %41, -4097
  store i64 %45, ptr %40, align 8
  %46 = getelementptr inbounds %struct.perf_event, ptr %37, i32 0, i32 14
  %47 = load i32, ptr %46, align 8
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  call fastcc void @perf_event_set_state(ptr noundef %37, i32 noundef 0) #27
  br label %50

50:                                               ; preds = %49, %44, %36
  %51 = phi i32 [ 1, %49 ], [ 0, %36 ], [ 0, %44 ]
  %52 = or i32 %51, %39
  %53 = getelementptr inbounds %struct.perf_event, ptr %37, i32 0, i32 26
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %struct.perf_event, ptr %37, i32 0, i32 11
  %56 = load ptr, ptr %55, align 4
  %57 = getelementptr inbounds %struct.perf_event, ptr %56, i32 0, i32 21, i32 6
  %58 = load i64, ptr %57, align 8
  %59 = and i64 %58, 4
  %60 = icmp eq i64 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = getelementptr inbounds %struct.perf_event_context, ptr %54, i32 0, i32 18
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  %65 = or i32 %61, 8
  %66 = select i1 %64, i32 %65, i32 %61
  %67 = or i32 %66, %38
  %68 = load ptr, ptr %37, align 8
  %69 = icmp eq ptr %68, %33
  br i1 %69, label %70, label %36

70:                                               ; preds = %50
  %71 = icmp eq i32 %52, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 22
  %74 = load ptr, ptr %73, align 8
  %75 = icmp eq ptr %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  store ptr null, ptr %73, align 8
  br label %77

77:                                               ; preds = %76, %72
  %78 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 24
  %79 = load i64, ptr %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, ptr %78, align 8
  call fastcc void @ctx_resched(ptr noundef %30, ptr noundef nonnull %15, i32 noundef %67) #27
  br label %83

81:                                               ; preds = %70, %21
  call fastcc void @ctx_sched_in(ptr noundef nonnull %15, ptr noundef %30, i32 noundef 4) #27
  br label %83

82:                                               ; preds = %17, %10
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #27, !srcloc !22
  br label %91

83:                                               ; preds = %81, %77
  %84 = phi ptr [ %74, %77 ], [ null, %81 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %85 = load i16, ptr %32, align 4
  %86 = add i16 %85, 1
  store i16 %86, ptr %32, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %87 = load i16, ptr %31, align 4
  %88 = add i16 %87, 1
  store i16 %88, ptr %31, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #27, !srcloc !22
  %89 = icmp eq ptr %84, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %83
  call fastcc void @put_ctx(ptr noundef nonnull %84) #27
  br label %91

91:                                               ; preds = %90, %83, %82
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store ptr %4, ptr %4, align 8
  store ptr %4, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4, !annotation !48
  %92 = call fastcc ptr @perf_lock_task_context(ptr noundef %13, i32 noundef %11, ptr noundef nonnull %3) #27
  %93 = icmp eq ptr %92, null
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  br label %158

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 25
  %97 = load i32, ptr %96, align 8
  %98 = add i32 %97, 1
  store i32 %98, ptr %96, align 8
  %99 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 1
  %100 = load i32, ptr %3, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %99, i32 noundef %100) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %101 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 2
  call void @mutex_lock(ptr noundef %101) #27
  %102 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 18
  %103 = load ptr, ptr %102, align 4
  %104 = icmp ne ptr %103, %13
  %105 = load i1, ptr @perf_event_remove_on_exec.__already_done, align 1
  %106 = xor i1 %105, true
  %107 = select i1 %104, i1 %106, i1 false
  br i1 %107, label %108, label %109, !prof !12

108:                                              ; preds = %95
  store i1 true, ptr @perf_event_remove_on_exec.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 4375, i32 noundef 9, ptr noundef null) #27
  br label %109

109:                                              ; preds = %108, %95
  br i1 %104, label %154, label %110

110:                                              ; preds = %109
  %111 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 6
  %112 = load ptr, ptr %111, align 8
  %113 = icmp eq ptr %112, %111
  br i1 %113, label %114, label %132

114:                                              ; preds = %110
  %115 = call i32 @_raw_spin_lock_irqsave(ptr noundef %99) #27
  br label %149

116:                                              ; preds = %132, %128
  %117 = phi ptr [ %118, %128 ], [ %133, %132 ]
  %118 = load ptr, ptr %117, align 8
  %119 = getelementptr inbounds %struct.perf_event, ptr %117, i32 0, i32 21, i32 6
  %120 = load i64, ptr %119, align 8
  %121 = and i64 %120, 68719476736
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %116
  %124 = getelementptr inbounds %struct.perf_event, ptr %117, i32 0, i32 36
  %125 = load volatile ptr, ptr %124, align 8
  %126 = icmp eq ptr %125, inttoptr (i32 -1 to ptr)
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  call fastcc void @perf_remove_from_owner(ptr noundef %117) #27
  br label %130

128:                                              ; preds = %116
  %129 = icmp eq ptr %118, %111
  br i1 %129, label %137, label %116

130:                                              ; preds = %127, %123
  call fastcc void @perf_event_exit_event(ptr noundef %117, ptr noundef nonnull %92) #27
  %131 = icmp eq ptr %118, %111
  br i1 %131, label %135, label %132

132:                                              ; preds = %130, %110
  %133 = phi ptr [ %118, %130 ], [ %112, %110 ]
  %134 = phi i1 [ true, %130 ], [ false, %110 ]
  br label %116

135:                                              ; preds = %130
  %136 = call i32 @_raw_spin_lock_irqsave(ptr noundef %99) #27
  br label %139

137:                                              ; preds = %128
  %138 = call i32 @_raw_spin_lock_irqsave(ptr noundef %99) #27
  br i1 %134, label %139, label %149

139:                                              ; preds = %137, %135
  %140 = phi i32 [ %136, %135 ], [ %138, %137 ]
  %141 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 22
  %142 = load ptr, ptr %141, align 8
  %143 = icmp eq ptr %142, null
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  store ptr null, ptr %141, align 8
  br label %145

145:                                              ; preds = %144, %139
  %146 = getelementptr inbounds %struct.perf_event_context, ptr %92, i32 0, i32 24
  %147 = load i64, ptr %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, ptr %146, align 8
  br label %149

149:                                              ; preds = %145, %137, %114
  %150 = phi i32 [ %140, %145 ], [ %138, %137 ], [ %115, %114 ]
  %151 = phi ptr [ %142, %145 ], [ null, %137 ], [ null, %114 ]
  %152 = load i32, ptr %96, align 8
  %153 = add i32 %152, -1
  store i32 %153, ptr %96, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %99, i32 noundef %150) #27
  br label %154

154:                                              ; preds = %149, %109
  %155 = phi ptr [ null, %109 ], [ %151, %149 ]
  call void @mutex_unlock(ptr noundef %101) #27
  call fastcc void @put_ctx(ptr noundef nonnull %92) #27
  %156 = icmp eq ptr %155, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %154
  call fastcc void @put_ctx(ptr noundef nonnull %155) #27
  br label %158

158:                                              ; preds = %157, %154, %94
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %159 = load volatile ptr, ptr %14, align 4
  %160 = icmp eq ptr %159, null
  br i1 %160, label %223, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.perf_event_context, ptr %159, i32 0, i32 6
  %163 = load volatile ptr, ptr %162, align 8
  %164 = icmp eq ptr %163, %162
  br i1 %164, label %223, label %165

165:                                              ; preds = %220, %161
  %166 = phi ptr [ %221, %220 ], [ %163, %161 ]
  %167 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 32
  %168 = load ptr, ptr %167, align 4
  %169 = icmp eq ptr %168, null
  %170 = select i1 %169, ptr %166, ptr %168
  %171 = getelementptr inbounds %struct.perf_event, ptr %170, i32 0, i32 51
  %172 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 12
  %173 = load ptr, ptr %172, align 8
  %174 = getelementptr inbounds %struct.pmu, ptr %173, i32 0, i32 13
  %175 = load i32, ptr %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %220, label %177

177:                                              ; preds = %165
  %178 = getelementptr inbounds %struct.perf_event, ptr %170, i32 0, i32 51, i32 1
  %179 = call i32 @_raw_spin_lock_irqsave(ptr noundef %178) #27
  %180 = load ptr, ptr %171, align 4
  %181 = icmp eq ptr %180, %171
  br i1 %181, label %219, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 52
  br label %184

184:                                              ; preds = %197, %182
  %185 = phi ptr [ %180, %182 ], [ %200, %197 ]
  %186 = phi i32 [ 0, %182 ], [ %198, %197 ]
  %187 = phi i32 [ 0, %182 ], [ %199, %197 ]
  %188 = getelementptr inbounds %struct.perf_addr_filter, ptr %185, i32 0, i32 1, i32 1
  %189 = load ptr, ptr %188, align 4
  %190 = icmp eq ptr %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %184
  %192 = load ptr, ptr %183, align 4
  %193 = getelementptr %struct.perf_addr_filter_range, ptr %192, i32 %187
  store i32 0, ptr %193, align 4
  %194 = load ptr, ptr %183, align 4
  %195 = getelementptr %struct.perf_addr_filter_range, ptr %194, i32 %187, i32 1
  store i32 0, ptr %195, align 4
  %196 = add i32 %186, 1
  br label %197

197:                                              ; preds = %191, %184
  %198 = phi i32 [ %196, %191 ], [ %186, %184 ]
  %199 = add i32 %187, 1
  %200 = load ptr, ptr %185, align 4
  %201 = icmp eq ptr %200, %171
  br i1 %201, label %202, label %184

202:                                              ; preds = %197
  %203 = icmp eq i32 %198, 0
  br i1 %203, label %219, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 53
  %206 = load i32, ptr %205, align 8
  %207 = add i32 %206, 1
  store i32 %207, ptr %205, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %178, i32 noundef %179) #27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #27
  store ptr %166, ptr %2, align 8
  store i32 1, ptr %6, align 4
  %208 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 14
  %209 = getelementptr inbounds %struct.perf_event, ptr %166, i32 0, i32 33
  br label %210

210:                                              ; preds = %213, %204
  %211 = load volatile i32, ptr %208, align 8
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !62
  %214 = load volatile i32, ptr %209, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %1) #27
  store i32 0, ptr %1, align 4
  store ptr @__perf_event_stop, ptr %7, align 4
  store ptr %2, ptr %8, align 4
  store i32 -6, ptr %9, align 4
  %215 = call i32 @smp_call_function_single(i32 noundef %214, ptr noundef nonnull @remote_function, ptr noundef nonnull %1, i32 noundef 1) #27
  %216 = load i32, ptr %9, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %1) #27
  %217 = icmp eq i32 %216, -11
  br i1 %217, label %210, label %218

218:                                              ; preds = %213, %210
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #27
  br label %220

219:                                              ; preds = %202, %177
  call void @_raw_spin_unlock_irqrestore(ptr noundef %178, i32 noundef %179) #27
  br label %220

220:                                              ; preds = %219, %218, %165
  %221 = load volatile ptr, ptr %166, align 8
  %222 = icmp eq ptr %221, %162
  br i1 %222, label %223, label %165

223:                                              ; preds = %220, %161, %158
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %224 = add nuw nsw i32 %11, 1
  %225 = icmp eq i32 %224, 2
  br i1 %225, label %226, label %10

226:                                              ; preds = %223
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_fork(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca %struct.perf_task_event, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2) #27
  %3 = load volatile i32, ptr @nr_comm_events, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = load volatile i32, ptr @nr_mmap_events, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %5
  %9 = load volatile i32, ptr @nr_task_events, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %8, %5, %1
  %12 = getelementptr inbounds i8, ptr %2, i32 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %12, i8 0, i64 24, i1 false) #27
  store ptr %0, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i32 4
  store ptr null, ptr %13, align 4
  %14 = getelementptr inbounds i8, ptr %2, i32 8
  store i32 7, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %2, i32 12
  store i16 0, ptr %15, align 4
  %16 = getelementptr inbounds i8, ptr %2, i32 14
  store i16 32, ptr %16, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_task_output, ptr noundef nonnull %2, ptr noundef null) #27
  br label %17

17:                                               ; preds = %11, %8
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2) #27
  call void @perf_event_namespaces(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_namespaces(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca %struct.path, align 8
  %3 = alloca %struct.path, align 8
  %4 = alloca %struct.perf_namespaces_event, align 8
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %4) #27
  %5 = load volatile i32, ptr @nr_namespaces_events, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %65, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, ptr %4, i32 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(112) %8, i8 0, i64 112, i1 false)
  store ptr %0, ptr %4, align 8
  %9 = getelementptr inbounds i8, ptr %4, i32 4
  store i32 0, ptr %9, align 4
  %10 = getelementptr inbounds i8, ptr %4, i32 8
  store i32 16, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %4, i32 12
  store i16 0, ptr %11, align 4
  %12 = getelementptr inbounds i8, ptr %4, i32 14
  store i16 136, ptr %12, align 2
  %13 = getelementptr inbounds i8, ptr %4, i32 16
  store i64 0, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %4, i32 24
  store i64 7, ptr %14, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store i64 0, ptr %3, align 8, !annotation !48
  %15 = call i32 @ns_get_path(ptr noundef nonnull %3, ptr noundef %0, ptr noundef nonnull @mntns_operations) #27
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %39

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.perf_namespaces_event, ptr %4, i32 0, i32 1, i32 4, i32 5
  %19 = getelementptr inbounds %struct.path, ptr %3, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.dentry, ptr %20, i32 0, i32 5
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %22, i32 0, i32 8
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.super_block, ptr %24, i32 0, i32 1
  %26 = load i32, ptr %25, align 8
  %27 = and i32 %26, 255
  %28 = lshr i32 %26, 12
  %29 = and i32 %28, 1048320
  %30 = or i32 %29, %27
  %31 = shl i32 %26, 12
  %32 = and i32 %31, -1048576
  %33 = or i32 %30, %32
  %34 = zext i32 %33 to i64
  store i64 %34, ptr %18, align 8
  %35 = getelementptr inbounds %struct.inode, ptr %22, i32 0, i32 10
  %36 = load i32, ptr %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.perf_namespaces_event, ptr %4, i32 0, i32 1, i32 4, i32 5, i32 1
  store i64 %37, ptr %38, align 8
  call void @path_put(ptr noundef nonnull %3) #27
  br label %39

39:                                               ; preds = %17, %7
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #27
  store i64 0, ptr %2, align 8, !annotation !48
  %40 = call i32 @ns_get_path(ptr noundef nonnull %2, ptr noundef %0, ptr noundef nonnull @cgroupns_operations) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %64

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.perf_namespaces_event, ptr %4, i32 0, i32 1, i32 4, i32 6
  %44 = getelementptr inbounds %struct.path, ptr %2, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.dentry, ptr %45, i32 0, i32 5
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.inode, ptr %47, i32 0, i32 8
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.super_block, ptr %49, i32 0, i32 1
  %51 = load i32, ptr %50, align 8
  %52 = and i32 %51, 255
  %53 = lshr i32 %51, 12
  %54 = and i32 %53, 1048320
  %55 = or i32 %54, %52
  %56 = shl i32 %51, 12
  %57 = and i32 %56, -1048576
  %58 = or i32 %55, %57
  %59 = zext i32 %58 to i64
  store i64 %59, ptr %43, align 8
  %60 = getelementptr inbounds %struct.inode, ptr %47, i32 0, i32 10
  %61 = load i32, ptr %60, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %struct.perf_namespaces_event, ptr %4, i32 0, i32 1, i32 4, i32 6, i32 1
  store i64 %62, ptr %63, align 8
  call void @path_put(ptr noundef nonnull %2) #27
  br label %64

64:                                               ; preds = %42, %39
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #27
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_namespaces_output, ptr noundef nonnull %4, ptr noundef null)
  br label %65

65:                                               ; preds = %64, %1
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_comm(ptr noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 {
  %3 = alloca [16 x i8], align 1
  %4 = alloca %struct.perf_comm_event, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %4) #27
  %5 = load volatile i32, ptr @nr_comm_events, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = select i1 %1, i16 8192, i16 0
  store ptr %0, ptr %4, align 4
  %9 = getelementptr inbounds i8, ptr %4, i32 4
  %10 = getelementptr inbounds i8, ptr %4, i32 8
  %11 = getelementptr inbounds i8, ptr %4, i32 12
  store i32 3, ptr %11, align 4
  %12 = getelementptr inbounds i8, ptr %4, i32 16
  store i16 %8, ptr %12, align 4
  %13 = getelementptr inbounds i8, ptr %4, i32 18
  %14 = getelementptr inbounds i8, ptr %4, i32 20
  store i32 0, ptr %14, align 4
  %15 = getelementptr inbounds i8, ptr %4, i32 24
  store i32 0, ptr %15, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #27
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %3, i8 0, i64 16, i1 false) #27
  %16 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 85
  %17 = call i32 @strlcpy(ptr noundef nonnull %3, ptr noundef %16, i32 noundef 16) #27
  %18 = call i32 @strlen(ptr noundef nonnull %3) #27
  %19 = add i32 %18, 8
  %20 = and i32 %19, -8
  store ptr %3, ptr %9, align 4
  store i32 %20, ptr %10, align 4
  %21 = trunc i32 %20 to i16
  %22 = add i16 %21, 16
  store i16 %22, ptr %13, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_comm_output, ptr noundef nonnull %4, ptr noundef null) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  br label %23

23:                                               ; preds = %7, %2
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %4) #27
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_iterate_sb(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !63
  %4 = icmp eq ptr %2, null
  br i1 %4, label %58, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 6
  %7 = load volatile ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, %6
  br i1 %8, label %233, label %9

9:                                                ; preds = %55, %5
  %10 = phi ptr [ %56, %55 ], [ %7, %5 ]
  %11 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 14
  %12 = load i32, ptr %11, align 8
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 34
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = tail call ptr @llvm.thread.pointer() #27
  %20 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %21 = load i32, ptr %20, align 8
  %22 = icmp eq i32 %16, %21
  br i1 %22, label %23, label %55

23:                                               ; preds = %18, %14
  %24 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 12
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.pmu, ptr %25, i32 0, i32 37
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = tail call i32 %27(ptr noundef %10) #27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %55, label %32

32:                                               ; preds = %29, %23
  %33 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 11
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, %10
  br i1 %35, label %36, label %54

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 1
  br label %38

38:                                               ; preds = %51, %36
  %39 = phi ptr [ %37, %36 ], [ %40, %51 ]
  %40 = load ptr, ptr %39, align 8
  %41 = icmp eq ptr %40, %37
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr i8, ptr %40, i32 80
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %struct.pmu, ptr %44, i32 0, i32 37
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %42
  %49 = getelementptr i8, ptr %40, i32 -8
  %50 = tail call i32 %46(ptr noundef %49) #27
  br label %51

51:                                               ; preds = %48, %42
  %52 = phi i32 [ %50, %48 ], [ 1, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %38

54:                                               ; preds = %38, %32
  tail call void %0(ptr noundef %10, ptr noundef %1) #27
  br label %55

55:                                               ; preds = %54, %51, %29, %18, %9
  %56 = load volatile ptr, ptr %10, align 8
  %57 = icmp eq ptr %56, %6
  br i1 %57, label %233, label %9

58:                                               ; preds = %3
  %59 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %60 = inttoptr i32 %59 to ptr
  %61 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %60) #19, !srcloc !11
  %62 = add i32 %61, ptrtoint (ptr @pmu_sb_events to i32)
  %63 = inttoptr i32 %62 to ptr
  %64 = getelementptr inbounds %struct.pmu_event_list, ptr %63, i32 0, i32 1
  %65 = load volatile ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, %64
  br i1 %66, label %121, label %67

67:                                               ; preds = %118, %58
  %68 = phi ptr [ %119, %118 ], [ %65, %58 ]
  %69 = getelementptr i8, ptr %68, i32 -692
  %70 = getelementptr i8, ptr %68, i32 -244
  %71 = load volatile ptr, ptr %70, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !64
  %72 = icmp eq ptr %71, null
  br i1 %72, label %118, label %73

73:                                               ; preds = %67
  %74 = getelementptr i8, ptr %68, i32 -596
  %75 = load i32, ptr %74, align 8
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %118, label %77

77:                                               ; preds = %73
  %78 = getelementptr i8, ptr %68, i32 -184
  %79 = load i32, ptr %78, align 4
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = tail call ptr @llvm.thread.pointer() #27
  %83 = getelementptr inbounds %struct.thread_info, ptr %82, i32 0, i32 2
  %84 = load i32, ptr %83, align 8
  %85 = icmp eq i32 %79, %84
  br i1 %85, label %86, label %118

86:                                               ; preds = %81, %77
  %87 = getelementptr i8, ptr %68, i32 -604
  %88 = load ptr, ptr %87, align 8
  %89 = getelementptr inbounds %struct.pmu, ptr %88, i32 0, i32 37
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %86
  %93 = tail call i32 %90(ptr noundef %69) #27
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %118, label %95

95:                                               ; preds = %92, %86
  %96 = getelementptr i8, ptr %68, i32 -608
  %97 = load ptr, ptr %96, align 4
  %98 = icmp eq ptr %97, %69
  br i1 %98, label %99, label %117

99:                                               ; preds = %95
  %100 = getelementptr i8, ptr %68, i32 -684
  br label %101

101:                                              ; preds = %114, %99
  %102 = phi ptr [ %100, %99 ], [ %103, %114 ]
  %103 = load ptr, ptr %102, align 8
  %104 = icmp eq ptr %103, %100
  br i1 %104, label %117, label %105

105:                                              ; preds = %101
  %106 = getelementptr i8, ptr %103, i32 80
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds %struct.pmu, ptr %107, i32 0, i32 37
  %109 = load ptr, ptr %108, align 4
  %110 = icmp eq ptr %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = getelementptr i8, ptr %103, i32 -8
  %113 = tail call i32 %109(ptr noundef %112) #27
  br label %114

114:                                              ; preds = %111, %105
  %115 = phi i32 [ %113, %111 ], [ 1, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %101

117:                                              ; preds = %101, %95
  tail call void %0(ptr noundef %69, ptr noundef %1) #27
  br label %118

118:                                              ; preds = %117, %114, %92, %81, %73, %67
  %119 = load volatile ptr, ptr %68, align 4
  %120 = icmp eq ptr %119, %64
  br i1 %120, label %121, label %67

121:                                              ; preds = %118, %58
  %122 = tail call ptr @llvm.thread.pointer() #27
  %123 = getelementptr inbounds %struct.thread_info, ptr %122, i32 0, i32 2
  %124 = getelementptr %struct.task_struct, ptr %122, i32 0, i32 130, i32 0
  %125 = load volatile ptr, ptr %124, align 4
  %126 = icmp eq ptr %125, null
  br i1 %126, label %178, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %struct.perf_event_context, ptr %125, i32 0, i32 6
  %129 = load volatile ptr, ptr %128, align 8
  %130 = icmp eq ptr %129, %128
  br i1 %130, label %178, label %131

131:                                              ; preds = %175, %127
  %132 = phi ptr [ %176, %175 ], [ %129, %127 ]
  %133 = getelementptr inbounds %struct.perf_event, ptr %132, i32 0, i32 14
  %134 = load i32, ptr %133, align 8
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %175, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.perf_event, ptr %132, i32 0, i32 34
  %138 = load i32, ptr %137, align 4
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = load i32, ptr %123, align 8
  %142 = icmp eq i32 %138, %141
  br i1 %142, label %143, label %175

143:                                              ; preds = %140, %136
  %144 = getelementptr inbounds %struct.perf_event, ptr %132, i32 0, i32 12
  %145 = load ptr, ptr %144, align 8
  %146 = getelementptr inbounds %struct.pmu, ptr %145, i32 0, i32 37
  %147 = load ptr, ptr %146, align 4
  %148 = icmp eq ptr %147, null
  br i1 %148, label %152, label %149

149:                                              ; preds = %143
  %150 = tail call i32 %147(ptr noundef %132) #27
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %175, label %152

152:                                              ; preds = %149, %143
  %153 = getelementptr inbounds %struct.perf_event, ptr %132, i32 0, i32 11
  %154 = load ptr, ptr %153, align 4
  %155 = icmp eq ptr %154, %132
  br i1 %155, label %156, label %174

156:                                              ; preds = %152
  %157 = getelementptr inbounds %struct.perf_event, ptr %132, i32 0, i32 1
  br label %158

158:                                              ; preds = %171, %156
  %159 = phi ptr [ %157, %156 ], [ %160, %171 ]
  %160 = load ptr, ptr %159, align 8
  %161 = icmp eq ptr %160, %157
  br i1 %161, label %174, label %162

162:                                              ; preds = %158
  %163 = getelementptr i8, ptr %160, i32 80
  %164 = load ptr, ptr %163, align 8
  %165 = getelementptr inbounds %struct.pmu, ptr %164, i32 0, i32 37
  %166 = load ptr, ptr %165, align 4
  %167 = icmp eq ptr %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = getelementptr i8, ptr %160, i32 -8
  %170 = tail call i32 %166(ptr noundef %169) #27
  br label %171

171:                                              ; preds = %168, %162
  %172 = phi i32 [ %170, %168 ], [ 1, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %175, label %158

174:                                              ; preds = %158, %152
  tail call void %0(ptr noundef %132, ptr noundef %1) #27
  br label %175

175:                                              ; preds = %174, %171, %149, %140, %131
  %176 = load volatile ptr, ptr %132, align 8
  %177 = icmp eq ptr %176, %128
  br i1 %177, label %178, label %131

178:                                              ; preds = %175, %127, %121
  %179 = getelementptr %struct.task_struct, ptr %122, i32 0, i32 130, i32 1
  %180 = load volatile ptr, ptr %179, align 4
  %181 = icmp eq ptr %180, null
  br i1 %181, label %233, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %struct.perf_event_context, ptr %180, i32 0, i32 6
  %184 = load volatile ptr, ptr %183, align 8
  %185 = icmp eq ptr %184, %183
  br i1 %185, label %233, label %186

186:                                              ; preds = %230, %182
  %187 = phi ptr [ %231, %230 ], [ %184, %182 ]
  %188 = getelementptr inbounds %struct.perf_event, ptr %187, i32 0, i32 14
  %189 = load i32, ptr %188, align 8
  %190 = icmp slt i32 %189, 0
  br i1 %190, label %230, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.perf_event, ptr %187, i32 0, i32 34
  %193 = load i32, ptr %192, align 4
  %194 = icmp eq i32 %193, -1
  br i1 %194, label %198, label %195

195:                                              ; preds = %191
  %196 = load i32, ptr %123, align 8
  %197 = icmp eq i32 %193, %196
  br i1 %197, label %198, label %230

198:                                              ; preds = %195, %191
  %199 = getelementptr inbounds %struct.perf_event, ptr %187, i32 0, i32 12
  %200 = load ptr, ptr %199, align 8
  %201 = getelementptr inbounds %struct.pmu, ptr %200, i32 0, i32 37
  %202 = load ptr, ptr %201, align 4
  %203 = icmp eq ptr %202, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %198
  %205 = tail call i32 %202(ptr noundef %187) #27
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %230, label %207

207:                                              ; preds = %204, %198
  %208 = getelementptr inbounds %struct.perf_event, ptr %187, i32 0, i32 11
  %209 = load ptr, ptr %208, align 4
  %210 = icmp eq ptr %209, %187
  br i1 %210, label %211, label %229

211:                                              ; preds = %207
  %212 = getelementptr inbounds %struct.perf_event, ptr %187, i32 0, i32 1
  br label %213

213:                                              ; preds = %226, %211
  %214 = phi ptr [ %212, %211 ], [ %215, %226 ]
  %215 = load ptr, ptr %214, align 8
  %216 = icmp eq ptr %215, %212
  br i1 %216, label %229, label %217

217:                                              ; preds = %213
  %218 = getelementptr i8, ptr %215, i32 80
  %219 = load ptr, ptr %218, align 8
  %220 = getelementptr inbounds %struct.pmu, ptr %219, i32 0, i32 37
  %221 = load ptr, ptr %220, align 4
  %222 = icmp eq ptr %221, null
  br i1 %222, label %226, label %223

223:                                              ; preds = %217
  %224 = getelementptr i8, ptr %215, i32 -8
  %225 = tail call i32 %221(ptr noundef %224) #27
  br label %226

226:                                              ; preds = %223, %217
  %227 = phi i32 [ %225, %223 ], [ 1, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %230, label %213

229:                                              ; preds = %213, %207
  tail call void %0(ptr noundef %187, ptr noundef %1) #27
  br label %230

230:                                              ; preds = %229, %226, %204, %195, %186
  %231 = load volatile ptr, ptr %187, align 8
  %232 = icmp eq ptr %231, %183
  br i1 %232, label %233, label %186

233:                                              ; preds = %230, %182, %178, %55, %5
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !65
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_namespaces_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = getelementptr inbounds %struct.perf_namespaces_event, ptr %1, i32 0, i32 1
  %6 = getelementptr inbounds %struct.perf_namespaces_event, ptr %1, i32 0, i32 1, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 268435456
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %58, label %12

12:                                               ; preds = %2
  %13 = and i64 %9, 262144
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  call fastcc void @__perf_event_header__init_id(ptr noundef %5, ptr noundef nonnull %4, ptr noundef %0) #27
  %16 = load i16, ptr %6, align 2
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i16 [ %7, %12 ], [ %16, %15 ]
  %19 = zext i16 %18 to i32
  %20 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %19) #27
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %57

22:                                               ; preds = %17
  %23 = load ptr, ptr %1, align 8
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr %0, ptr %25
  %28 = getelementptr inbounds %struct.perf_event, ptr %27, i32 0, i32 57
  %29 = load ptr, ptr %28, align 4
  %30 = call i32 @__task_pid_nr_ns(ptr noundef %23, i32 noundef 1, ptr noundef %29) #27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 62
  %34 = load ptr, ptr %33, align 64
  %35 = icmp eq ptr %34, null
  %36 = sext i1 %35 to i32
  br label %37

37:                                               ; preds = %32, %22
  %38 = phi i32 [ %30, %22 ], [ %36, %32 ]
  %39 = getelementptr inbounds %struct.perf_namespaces_event, ptr %1, i32 0, i32 1, i32 1
  store i32 %38, ptr %39, align 8
  %40 = load ptr, ptr %1, align 8
  %41 = load ptr, ptr %24, align 4
  %42 = icmp eq ptr %41, null
  %43 = select i1 %42, ptr %0, ptr %41
  %44 = getelementptr inbounds %struct.perf_event, ptr %43, i32 0, i32 57
  %45 = load ptr, ptr %44, align 4
  %46 = call i32 @__task_pid_nr_ns(ptr noundef %40, i32 noundef 0, ptr noundef %45) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %37
  %49 = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 62
  %50 = load ptr, ptr %49, align 64
  %51 = icmp eq ptr %50, null
  %52 = sext i1 %51 to i32
  br label %53

53:                                               ; preds = %48, %37
  %54 = phi i32 [ %46, %37 ], [ %52, %48 ]
  %55 = getelementptr inbounds %struct.perf_namespaces_event, ptr %1, i32 0, i32 1, i32 2
  store i32 %54, ptr %55, align 4
  %56 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %5, i32 noundef 136) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %57

57:                                               ; preds = %53, %17
  store i16 %7, ptr %6, align 2
  br label %58

58:                                               ; preds = %57, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_mmap(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca %struct.remote_function_call, align 4
  %4 = alloca %struct.stop_event_data, align 8
  %5 = alloca %struct.perf_mmap_event, align 8
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %5) #27
  %6 = getelementptr inbounds i8, ptr %5, i32 16
  store i64 0, ptr %6, align 8, !annotation !48
  %7 = load volatile i32, ptr @nr_mmap_events, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %275, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds i8, ptr %5, i32 48
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(20) %10, i8 0, i32 20, i1 false)
  %11 = load i32, ptr %0, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 1
  %14 = load i32, ptr %13, align 4
  %15 = sub i32 %14, %11
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 13
  %18 = load i32, ptr %17, align 4
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 12
  store ptr %0, ptr %5, align 8
  %21 = getelementptr inbounds i8, ptr %5, i32 4
  %22 = getelementptr inbounds i8, ptr %5, i32 8
  %23 = getelementptr inbounds i8, ptr %5, i32 12
  %24 = getelementptr inbounds i8, ptr %5, i32 16
  %25 = getelementptr inbounds i8, ptr %5, i32 24
  %26 = getelementptr inbounds i8, ptr %5, i32 32
  %27 = getelementptr inbounds i8, ptr %5, i32 40
  %28 = getelementptr inbounds i8, ptr %5, i32 44
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(16) %21, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(24) %25, i8 0, i64 24, i1 false)
  %29 = getelementptr inbounds i8, ptr %5, i32 68
  store i32 0, ptr %29, align 4
  %30 = getelementptr inbounds i8, ptr %5, i32 72
  store i32 1, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %5, i32 76
  store i16 2, ptr %31, align 4
  %32 = getelementptr inbounds i8, ptr %5, i32 78
  store i16 0, ptr %32, align 2
  %33 = getelementptr inbounds i8, ptr %5, i32 80
  store i32 0, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %5, i32 84
  store i32 0, ptr %34, align 4
  %35 = getelementptr inbounds i8, ptr %5, i32 88
  store i64 %12, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %5, i32 96
  store i64 %16, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %5, i32 104
  store i64 %20, ptr %37, align 8
  %38 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 8
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %163, label %42

42:                                               ; preds = %9
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %43 = tail call ptr @llvm.thread.pointer() #27
  %44 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 14
  %45 = getelementptr inbounds %struct.stop_event_data, ptr %4, i32 0, i32 1
  %46 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 1
  %47 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 2
  %48 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 3
  br label %49

49:                                               ; preds = %156, %42
  %50 = phi i32 [ 0, %42 ], [ %157, %156 ]
  %51 = getelementptr %struct.task_struct, ptr %43, i32 0, i32 130, i32 %50
  %52 = load volatile ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %156, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.perf_event_context, ptr %52, i32 0, i32 6
  %56 = load volatile ptr, ptr %55, align 8
  %57 = icmp eq ptr %56, %55
  br i1 %57, label %156, label %58

58:                                               ; preds = %153, %54
  %59 = phi ptr [ %154, %153 ], [ %56, %54 ]
  %60 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 32
  %61 = load ptr, ptr %60, align 4
  %62 = icmp eq ptr %61, null
  %63 = select i1 %62, ptr %59, ptr %61
  %64 = getelementptr inbounds %struct.perf_event, ptr %63, i32 0, i32 51
  %65 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 12
  %66 = load ptr, ptr %65, align 8
  %67 = getelementptr inbounds %struct.pmu, ptr %66, i32 0, i32 13
  %68 = load i32, ptr %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %153, label %70

70:                                               ; preds = %58
  %71 = load ptr, ptr %44, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %153, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.perf_event, ptr %63, i32 0, i32 51, i32 1
  %75 = call i32 @_raw_spin_lock_irqsave(ptr noundef %74) #27
  %76 = load ptr, ptr %64, align 4
  %77 = icmp eq ptr %76, %64
  br i1 %77, label %152, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 52
  br label %80

80:                                               ; preds = %130, %78
  %81 = phi ptr [ %76, %78 ], [ %133, %130 ]
  %82 = phi i32 [ 0, %78 ], [ %131, %130 ]
  %83 = phi i32 [ 0, %78 ], [ %132, %130 ]
  %84 = load ptr, ptr %79, align 4
  %85 = getelementptr %struct.perf_addr_filter_range, ptr %84, i32 %83
  %86 = load i32, ptr %13, align 4
  %87 = load i32, ptr %0, align 4
  %88 = sub i32 %86, %87
  %89 = load i32, ptr %17, align 4
  %90 = shl i32 %89, 12
  %91 = getelementptr inbounds %struct.perf_addr_filter, ptr %81, i32 0, i32 1, i32 1
  %92 = load ptr, ptr %91, align 4
  %93 = icmp eq ptr %92, null
  br i1 %93, label %130, label %94

94:                                               ; preds = %80
  %95 = load ptr, ptr %44, align 4
  %96 = getelementptr inbounds %struct.dentry, ptr %92, i32 0, i32 5
  %97 = load ptr, ptr %96, align 8
  %98 = getelementptr inbounds %struct.file, ptr %95, i32 0, i32 2
  %99 = load ptr, ptr %98, align 8
  %100 = icmp eq ptr %97, %99
  br i1 %100, label %101, label %130

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.perf_addr_filter, ptr %81, i32 0, i32 2
  %103 = load i32, ptr %102, align 4
  %104 = add i32 %90, %88
  %105 = icmp ugt i32 %103, %104
  br i1 %105, label %130, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.perf_addr_filter, ptr %81, i32 0, i32 3
  %108 = load i32, ptr %107, align 4
  %109 = add i32 %108, %103
  %110 = icmp ult i32 %109, %90
  br i1 %110, label %130, label %111

111:                                              ; preds = %106
  %112 = icmp ult i32 %103, %90
  br i1 %112, label %113, label %119

113:                                              ; preds = %111
  store i32 %87, ptr %85, align 4
  %114 = load i32, ptr %107, align 4
  %115 = load i32, ptr %102, align 4
  %116 = sub i32 %114, %90
  %117 = add i32 %116, %115
  %118 = call i32 @llvm.umin.i32(i32 %88, i32 %117) #27
  br label %126

119:                                              ; preds = %111
  %120 = sub i32 %87, %90
  %121 = add i32 %103, %120
  store i32 %121, ptr %85, align 4
  %122 = load i32, ptr %13, align 4
  %123 = sub i32 %122, %121
  %124 = load i32, ptr %107, align 4
  %125 = call i32 @llvm.umin.i32(i32 %123, i32 %124) #27
  br label %126

126:                                              ; preds = %119, %113
  %127 = phi i32 [ %118, %113 ], [ %125, %119 ]
  %128 = getelementptr %struct.perf_addr_filter_range, ptr %84, i32 %83, i32 1
  store i32 %127, ptr %128, align 4
  %129 = add i32 %82, 1
  br label %130

130:                                              ; preds = %126, %106, %101, %94, %80
  %131 = phi i32 [ %129, %126 ], [ %82, %106 ], [ %82, %80 ], [ %82, %94 ], [ %82, %101 ]
  %132 = add i32 %83, 1
  %133 = load ptr, ptr %81, align 4
  %134 = icmp eq ptr %133, %64
  br i1 %134, label %135, label %80

135:                                              ; preds = %130
  %136 = icmp eq i32 %131, 0
  br i1 %136, label %152, label %137

137:                                              ; preds = %135
  %138 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 53
  %139 = load i32, ptr %138, align 8
  %140 = add i32 %139, 1
  store i32 %140, ptr %138, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %74, i32 noundef %75) #27
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store ptr %59, ptr %4, align 8
  store i32 1, ptr %45, align 4
  %141 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 14
  %142 = getelementptr inbounds %struct.perf_event, ptr %59, i32 0, i32 33
  br label %143

143:                                              ; preds = %146, %137
  %144 = load volatile i32, ptr %141, align 8
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %151

146:                                              ; preds = %143
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !62
  %147 = load volatile i32, ptr %142, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4
  store ptr @__perf_event_stop, ptr %46, align 4
  store ptr %4, ptr %47, align 4
  store i32 -6, ptr %48, align 4
  %148 = call i32 @smp_call_function_single(i32 noundef %147, ptr noundef nonnull @remote_function, ptr noundef nonnull %3, i32 noundef 1) #27
  %149 = load i32, ptr %48, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  %150 = icmp eq i32 %149, -11
  br i1 %150, label %143, label %151

151:                                              ; preds = %146, %143
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  br label %153

152:                                              ; preds = %135, %73
  call void @_raw_spin_unlock_irqrestore(ptr noundef %74, i32 noundef %75) #27
  br label %153

153:                                              ; preds = %152, %151, %70, %58
  %154 = load volatile ptr, ptr %59, align 8
  %155 = icmp eq ptr %154, %55
  br i1 %155, label %156, label %58

156:                                              ; preds = %153, %54, %49
  %157 = add nuw nsw i32 %50, 1
  %158 = icmp eq i32 %157, 2
  br i1 %158, label %159, label %49

159:                                              ; preds = %156
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %160 = load ptr, ptr %5, align 8
  %161 = getelementptr inbounds %struct.vm_area_struct, ptr %160, i32 0, i32 8
  %162 = load i32, ptr %161, align 4
  br label %163

163:                                              ; preds = %159, %9
  %164 = phi i32 [ %39, %9 ], [ %162, %159 ]
  %165 = phi ptr [ %0, %9 ], [ %160, %159 ]
  %166 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 14
  %167 = load ptr, ptr %166, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %2, i8 0, i32 16, i1 false) #27, !annotation !48
  %168 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 8
  %169 = and i32 %164, 7
  %170 = and i32 %164, 128
  %171 = icmp eq i32 %170, 0
  %172 = select i1 %171, i32 2, i32 1
  %173 = and i32 %164, 8192
  %174 = or i32 %172, %173
  %175 = icmp eq ptr %167, null
  br i1 %175, label %199, label %176

176:                                              ; preds = %163
  %177 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %178 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %177, i32 noundef 3264, i32 noundef 4096) #30
  %179 = icmp eq ptr %178, null
  br i1 %179, label %235, label %180

180:                                              ; preds = %176
  %181 = call ptr @file_path(ptr noundef nonnull %167, ptr noundef nonnull %178, i32 noundef 4088) #27
  %182 = icmp ugt ptr %181, inttoptr (i32 -4096 to ptr)
  br i1 %182, label %235, label %183

183:                                              ; preds = %180
  %184 = load ptr, ptr %166, align 4
  %185 = getelementptr inbounds %struct.file, ptr %184, i32 0, i32 2
  %186 = load ptr, ptr %185, align 8
  %187 = getelementptr inbounds %struct.inode, ptr %186, i32 0, i32 8
  %188 = load ptr, ptr %187, align 4
  %189 = getelementptr inbounds %struct.super_block, ptr %188, i32 0, i32 1
  %190 = load i32, ptr %189, align 8
  %191 = getelementptr inbounds %struct.inode, ptr %186, i32 0, i32 10
  %192 = load i32, ptr %191, align 4
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %struct.inode, ptr %186, i32 0, i32 44
  %195 = load i32, ptr %194, align 8
  %196 = zext i32 %195 to i64
  %197 = lshr i32 %190, 20
  %198 = and i32 %190, 1048575
  br label %239

199:                                              ; preds = %163
  %200 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 12
  %201 = load ptr, ptr %200, align 4
  %202 = icmp eq ptr %201, null
  br i1 %202, label %210, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.vm_operations_struct, ptr %201, i32 0, i32 12
  %205 = load ptr, ptr %204, align 4
  %206 = icmp eq ptr %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %203
  %208 = call ptr %205(ptr noundef %165) #27
  %209 = icmp eq ptr %208, null
  br i1 %209, label %210, label %235

210:                                              ; preds = %207, %203, %199
  %211 = call ptr @arch_vma_name(ptr noundef %165) #27
  %212 = icmp eq ptr %211, null
  br i1 %212, label %213, label %235

213:                                              ; preds = %210
  %214 = load i32, ptr %165, align 4
  %215 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 6
  %216 = load ptr, ptr %215, align 4
  %217 = getelementptr inbounds %struct.anon, ptr %216, i32 0, i32 32
  %218 = load i32, ptr %217, align 8
  %219 = icmp ugt i32 %214, %218
  br i1 %219, label %226, label %220

220:                                              ; preds = %213
  %221 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 1
  %222 = load i32, ptr %221, align 4
  %223 = getelementptr inbounds %struct.anon, ptr %216, i32 0, i32 33
  %224 = load i32, ptr %223, align 4
  %225 = icmp ult i32 %222, %224
  br i1 %225, label %226, label %235

226:                                              ; preds = %220, %213
  %227 = getelementptr inbounds %struct.anon, ptr %216, i32 0, i32 34
  %228 = load i32, ptr %227, align 8
  %229 = icmp ugt i32 %214, %228
  br i1 %229, label %234, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %struct.vm_area_struct, ptr %165, i32 0, i32 1
  %232 = load i32, ptr %231, align 4
  %233 = icmp ult i32 %232, %228
  br i1 %233, label %234, label %235

234:                                              ; preds = %230, %226
  br label %235

235:                                              ; preds = %234, %230, %220, %210, %207, %180, %176
  %236 = phi ptr [ null, %207 ], [ null, %210 ], [ null, %234 ], [ null, %220 ], [ null, %230 ], [ null, %176 ], [ %178, %180 ]
  %237 = phi ptr [ %208, %207 ], [ %211, %210 ], [ @.str.36, %234 ], [ @.str.34, %220 ], [ @.str.35, %230 ], [ @.str.32, %176 ], [ @.str.33, %180 ]
  %238 = call i32 @strlcpy(ptr noundef nonnull %2, ptr noundef nonnull %237, i32 noundef 16) #27
  br label %239

239:                                              ; preds = %235, %183
  %240 = phi i32 [ %197, %183 ], [ 0, %235 ]
  %241 = phi i32 [ %198, %183 ], [ 0, %235 ]
  %242 = phi i64 [ %193, %183 ], [ 0, %235 ]
  %243 = phi i64 [ %196, %183 ], [ 0, %235 ]
  %244 = phi ptr [ %178, %183 ], [ %236, %235 ]
  %245 = phi ptr [ %181, %183 ], [ %2, %235 ]
  %246 = call i32 @strlen(ptr noundef %245) #27
  %247 = add i32 %246, 1
  %248 = and i32 %247, 7
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %258, label %250

250:                                              ; preds = %239
  %251 = getelementptr i8, ptr %245, i32 %247
  %252 = sub i32 6, %246
  %253 = and i32 %252, 7
  %254 = add nuw nsw i32 %253, 1
  call void @llvm.memset.p0.i32(ptr noundef align 1 %251, i8 0, i32 %254, i1 false) #27
  %255 = add i32 %253, %246
  %256 = add i32 %255, 1
  %257 = add i32 %255, 2
  br label %258

258:                                              ; preds = %250, %239
  %259 = phi i32 [ %246, %239 ], [ %256, %250 ]
  %260 = phi i32 [ %247, %239 ], [ %257, %250 ]
  store ptr %245, ptr %21, align 4
  store i32 %260, ptr %22, align 8
  store i32 %240, ptr %23, align 4
  store i32 %241, ptr %24, align 8
  store i64 %242, ptr %25, align 8
  store i64 %243, ptr %26, align 8
  store i32 %169, ptr %27, align 8
  store i32 %174, ptr %28, align 4
  %261 = load i32, ptr %168, align 4
  %262 = and i32 %261, 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %258
  %265 = load i16, ptr %31, align 4
  %266 = or i16 %265, 8192
  store i16 %266, ptr %31, align 4
  br label %267

267:                                              ; preds = %264, %258
  %268 = trunc i32 %259 to i16
  %269 = add i16 %268, 41
  store i16 %269, ptr %32, align 2
  %270 = load volatile i32, ptr @nr_build_id_events, align 4
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %267
  %273 = call i32 @build_id_parse(ptr noundef %165, ptr noundef %10, ptr noundef %29) #27
  br label %274

274:                                              ; preds = %272, %267
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_mmap_output, ptr noundef nonnull %5, ptr noundef null) #27
  call void @kfree(ptr noundef %244) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #27
  br label %275

275:                                              ; preds = %274, %1
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_aux_event(ptr noundef %0, i32 noundef %1, i32 noundef %2, i64 noundef %3) local_unnamed_addr #0 {
  %5 = alloca %struct.perf_output_handle, align 8
  %6 = alloca %struct.perf_sample_data, align 64
  %7 = alloca %struct.perf_aux_event, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %5, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %6, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #27
  store i32 11, ptr %7, align 8
  %8 = getelementptr inbounds %struct.perf_event_header, ptr %7, i32 0, i32 1
  store i16 0, ptr %8, align 4
  %9 = getelementptr inbounds %struct.perf_event_header, ptr %7, i32 0, i32 2
  store i16 32, ptr %9, align 2
  %10 = getelementptr inbounds %struct.perf_aux_event, ptr %7, i32 0, i32 1
  %11 = zext i32 %1 to i64
  store i64 %11, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_aux_event, ptr %7, i32 0, i32 2
  %13 = zext i32 %2 to i64
  store i64 %13, ptr %12, align 8
  %14 = getelementptr inbounds %struct.perf_aux_event, ptr %7, i32 0, i32 3
  store i64 %3, ptr %14, align 8
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, 262144
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %7, ptr noundef nonnull %6, ptr noundef %0) #27
  %20 = load i16, ptr %9, align 2
  %21 = zext i16 %20 to i32
  br label %22

22:                                               ; preds = %19, %4
  %23 = phi i32 [ 32, %4 ], [ %21, %19 ]
  %24 = call i32 @perf_output_begin(ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef %0, i32 noundef %23) #27
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = call i32 @perf_output_copy(ptr noundef nonnull %5, ptr noundef nonnull %7, i32 noundef 32) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @perf_output_end(ptr noundef nonnull %5) #27
  br label %28

28:                                               ; preds = %26, %22
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_output_end(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_log_lost_samples(ptr noundef %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  %5 = alloca %struct.anon.185, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #27
  store i32 13, ptr %5, align 8
  %6 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 1
  store i16 0, ptr %6, align 4
  %7 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  store i16 16, ptr %7, align 2
  %8 = getelementptr inbounds %struct.anon.185, ptr %5, i32 0, i32 1
  store i64 %1, ptr %8, align 8
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %10 = load i64, ptr %9, align 8
  %11 = and i64 %10, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef %0) #27
  %14 = load i16, ptr %7, align 2
  %15 = zext i16 %14 to i32
  br label %16

16:                                               ; preds = %13, %2
  %17 = phi i32 [ 16, %2 ], [ %15, %13 ]
  %18 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef nonnull %5, i32 noundef 16) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %22

22:                                               ; preds = %20, %16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_ksymbol(i16 noundef zeroext %0, i64 noundef %1, i32 noundef %2, i1 noundef zeroext %3, ptr noundef %4) local_unnamed_addr #0 {
  %6 = alloca %struct.perf_ksymbol_event, align 8
  %7 = alloca [128 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #27
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %7) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(128) %7, i8 0, i32 128, i1 false), !annotation !48
  %8 = load volatile i32, ptr @nr_ksymbol_events, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %45, label %10

10:                                               ; preds = %5
  %11 = zext i16 %0 to i32
  %12 = add i16 %0, -3
  %13 = icmp ult i16 %12, -2
  br i1 %13, label %42, label %14

14:                                               ; preds = %10
  %15 = call i32 @strlcpy(ptr noundef nonnull %7, ptr noundef %4, i32 noundef 128) #27
  %16 = call i32 @strlen(ptr noundef nonnull %7)
  %17 = add i32 %16, 1
  %18 = and i32 %17, 7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  %21 = getelementptr i8, ptr %7, i32 %17
  %22 = sub i32 6, %16
  %23 = and i32 %22, 7
  %24 = add nuw nsw i32 %23, 1
  call void @llvm.memset.p0.i32(ptr noundef align 1 %21, i8 0, i32 %24, i1 false)
  %25 = add i32 %16, %23
  %26 = add i32 %25, 1
  %27 = add i32 %25, 2
  br label %28

28:                                               ; preds = %20, %14
  %29 = phi i32 [ %16, %14 ], [ %26, %20 ]
  %30 = phi i32 [ %17, %14 ], [ %27, %20 ]
  %31 = zext i1 %3 to i16
  %32 = trunc i32 %29 to i16
  %33 = add i16 %32, 25
  store ptr %7, ptr %6, align 8
  %34 = getelementptr inbounds i8, ptr %6, i32 4
  store i32 %30, ptr %34, align 4
  %35 = getelementptr inbounds i8, ptr %6, i32 8
  store i32 17, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %6, i32 12
  store i16 0, ptr %36, align 4
  %37 = getelementptr inbounds i8, ptr %6, i32 14
  store i16 %33, ptr %37, align 2
  %38 = getelementptr inbounds i8, ptr %6, i32 16
  store i64 %1, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %6, i32 24
  store i32 %2, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %6, i32 28
  store i16 %0, ptr %40, align 4
  %41 = getelementptr inbounds i8, ptr %6, i32 30
  store i16 %31, ptr %41, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_ksymbol_output, ptr noundef nonnull %6, ptr noundef null)
  br label %45

42:                                               ; preds = %10
  %43 = load i1, ptr @perf_event_ksymbol.__already_done, align 1
  br i1 %43, label %45, label %44, !prof !23

44:                                               ; preds = %42
  store i1 true, ptr @perf_event_ksymbol.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 8963, i32 noundef 9, ptr noundef nonnull @.str.9, ptr noundef nonnull @__func__.perf_event_ksymbol, i32 noundef %11) #27
  br label %45

45:                                               ; preds = %44, %42, %28, %5
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #27
  ret void
}

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_ksymbol_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 536870912
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %62, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.perf_ksymbol_event, ptr %1, i32 0, i32 2
  %11 = and i64 %6, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  call fastcc void @__perf_event_header__init_id(ptr noundef %10, ptr noundef nonnull %4, ptr noundef %0) #27
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %struct.perf_ksymbol_event, ptr %1, i32 0, i32 2, i32 0, i32 2
  %16 = load i16, ptr %15, align 2
  %17 = zext i16 %16 to i32
  %18 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %17) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %62

20:                                               ; preds = %14
  %21 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %10, i32 noundef 24) #27
  %22 = load ptr, ptr %1, align 8
  %23 = getelementptr inbounds %struct.perf_ksymbol_event, ptr %1, i32 0, i32 1
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 3
  %26 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 5
  %27 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 1
  %28 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 6
  %29 = load i32, ptr %25, align 4
  %30 = load ptr, ptr %26, align 8
  br label %31

31:                                               ; preds = %57, %20
  %32 = phi ptr [ %30, %20 ], [ %58, %57 ]
  %33 = phi i32 [ %29, %20 ], [ %59, %57 ]
  %34 = phi i32 [ %24, %20 ], [ %37, %57 ]
  %35 = phi ptr [ %22, %20 ], [ %40, %57 ]
  %36 = call i32 @llvm.umin.i32(i32 %33, i32 %34) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %32, ptr align 1 %35, i32 %36, i1 false) #27
  %37 = sub i32 %34, %36
  %38 = load ptr, ptr %26, align 8
  %39 = getelementptr i8, ptr %38, i32 %36
  store ptr %39, ptr %26, align 8
  %40 = getelementptr i8, ptr %35, i32 %36
  %41 = load i32, ptr %25, align 4
  %42 = sub i32 %41, %36
  store i32 %42, ptr %25, align 4
  %43 = icmp eq i32 %41, %36
  br i1 %43, label %44, label %57

44:                                               ; preds = %31
  %45 = load ptr, ptr %27, align 4
  %46 = load i32, ptr %28, align 4
  %47 = add i32 %46, 1
  %48 = getelementptr inbounds %struct.perf_buffer, ptr %45, i32 0, i32 4
  %49 = load i32, ptr %48, align 4
  %50 = add i32 %49, -1
  %51 = and i32 %50, %47
  store i32 %51, ptr %28, align 4
  %52 = getelementptr %struct.perf_buffer, ptr %45, i32 0, i32 34, i32 %51
  %53 = load ptr, ptr %52, align 4
  store ptr %53, ptr %26, align 8
  %54 = getelementptr inbounds %struct.perf_buffer, ptr %45, i32 0, i32 3
  %55 = load i32, ptr %54, align 4
  %56 = shl i32 4096, %55
  store i32 %56, ptr %25, align 4
  br label %57

57:                                               ; preds = %44, %31
  %58 = phi ptr [ %39, %31 ], [ %53, %44 ]
  %59 = phi i32 [ %42, %31 ], [ %56, %44 ]
  %60 = icmp eq i32 %37, 0
  br i1 %60, label %61, label %31

61:                                               ; preds = %57
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %62

62:                                               ; preds = %61, %14, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_bpf_event(ptr noundef %0, i32 noundef %1, i16 noundef zeroext %2) local_unnamed_addr #0 {
  %4 = alloca %struct.perf_ksymbol_event, align 8
  %5 = alloca [128 x i8], align 1
  %6 = alloca %struct.perf_ksymbol_event, align 8
  %7 = alloca [128 x i8], align 1
  %8 = alloca %struct.perf_bpf_event, align 4
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %8) #27
  %9 = add i32 %1, -3
  %10 = icmp ult i32 %9, -2
  br i1 %10, label %130, label %11

11:                                               ; preds = %3
  %12 = load volatile i32, ptr @nr_ksymbol_events, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %112, label %14

14:                                               ; preds = %11
  %15 = icmp eq i32 %1, 2
  %16 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 10
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.bpf_prog_aux, ptr %17, i32 0, i32 8
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %14
  %22 = zext i1 %15 to i16
  %23 = getelementptr inbounds i8, ptr %4, i32 4
  %24 = getelementptr inbounds i8, ptr %4, i32 8
  %25 = getelementptr inbounds i8, ptr %4, i32 12
  %26 = getelementptr inbounds i8, ptr %4, i32 14
  %27 = getelementptr inbounds i8, ptr %4, i32 16
  %28 = getelementptr inbounds i8, ptr %4, i32 24
  %29 = getelementptr inbounds i8, ptr %4, i32 28
  %30 = getelementptr inbounds i8, ptr %4, i32 30
  br label %70

31:                                               ; preds = %14
  %32 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 9
  %33 = load ptr, ptr %32, align 4
  %34 = ptrtoint ptr %33 to i32
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 5
  %37 = load i32, ptr %36, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #27
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %7) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(128) %7, i8 0, i32 128, i1 false) #27, !annotation !48
  %38 = load volatile i32, ptr @nr_ksymbol_events, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %69, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.bpf_prog_aux, ptr %17, i32 0, i32 36, i32 2
  %42 = call i32 @strlcpy(ptr noundef nonnull %7, ptr noundef %41, i32 noundef 128) #27
  %43 = call i32 @strlen(ptr noundef nonnull %7) #27
  %44 = add i32 %43, 1
  %45 = and i32 %44, 7
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = getelementptr i8, ptr %7, i32 %44
  %49 = sub i32 6, %43
  %50 = and i32 %49, 7
  %51 = add nuw nsw i32 %50, 1
  call void @llvm.memset.p0.i32(ptr noundef align 1 %48, i8 0, i32 %51, i1 false) #27
  %52 = add i32 %50, %43
  %53 = add i32 %52, 1
  %54 = add i32 %52, 2
  br label %55

55:                                               ; preds = %47, %40
  %56 = phi i32 [ %43, %40 ], [ %53, %47 ]
  %57 = phi i32 [ %44, %40 ], [ %54, %47 ]
  %58 = zext i1 %15 to i16
  %59 = trunc i32 %56 to i16
  %60 = add i16 %59, 25
  store ptr %7, ptr %6, align 8
  %61 = getelementptr inbounds i8, ptr %6, i32 4
  store i32 %57, ptr %61, align 4
  %62 = getelementptr inbounds i8, ptr %6, i32 8
  store i32 17, ptr %62, align 8
  %63 = getelementptr inbounds i8, ptr %6, i32 12
  store i16 0, ptr %63, align 4
  %64 = getelementptr inbounds i8, ptr %6, i32 14
  store i16 %60, ptr %64, align 2
  %65 = getelementptr inbounds i8, ptr %6, i32 16
  store i64 %35, ptr %65, align 8
  %66 = getelementptr inbounds i8, ptr %6, i32 24
  store i32 %37, ptr %66, align 8
  %67 = getelementptr inbounds i8, ptr %6, i32 28
  store i16 1, ptr %67, align 4
  %68 = getelementptr inbounds i8, ptr %6, i32 30
  store i16 %58, ptr %68, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_ksymbol_output, ptr noundef nonnull %6, ptr noundef null) #27
  br label %69

69:                                               ; preds = %55, %31
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #27
  br label %112

70:                                               ; preds = %106, %21
  %71 = phi ptr [ %17, %21 ], [ %107, %106 ]
  %72 = phi i32 [ 0, %21 ], [ %108, %106 ]
  %73 = getelementptr inbounds %struct.bpf_prog_aux, ptr %71, i32 0, i32 30
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr ptr, ptr %74, i32 %72
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr inbounds %struct.bpf_prog, ptr %76, i32 0, i32 9
  %78 = load ptr, ptr %77, align 4
  %79 = ptrtoint ptr %78 to i32
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %struct.bpf_prog, ptr %76, i32 0, i32 5
  %82 = load i32, ptr %81, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #27
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(128) %5, i8 0, i32 128, i1 false) #27, !annotation !48
  %83 = load volatile i32, ptr @nr_ksymbol_events, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %106, label %85

85:                                               ; preds = %70
  %86 = getelementptr inbounds %struct.bpf_prog_aux, ptr %71, i32 0, i32 36, i32 2
  %87 = call i32 @strlcpy(ptr noundef nonnull %5, ptr noundef %86, i32 noundef 128) #27
  %88 = call i32 @strlen(ptr noundef nonnull %5) #27
  %89 = add i32 %88, 1
  %90 = and i32 %89, 7
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %85
  %93 = getelementptr i8, ptr %5, i32 %89
  %94 = sub i32 6, %88
  %95 = and i32 %94, 7
  %96 = add nuw nsw i32 %95, 1
  call void @llvm.memset.p0.i32(ptr noundef align 1 %93, i8 0, i32 %96, i1 false) #27
  %97 = add i32 %95, %88
  %98 = add i32 %97, 1
  %99 = add i32 %97, 2
  br label %100

100:                                              ; preds = %92, %85
  %101 = phi i32 [ %88, %85 ], [ %98, %92 ]
  %102 = phi i32 [ %89, %85 ], [ %99, %92 ]
  %103 = trunc i32 %101 to i16
  %104 = add i16 %103, 25
  store ptr %5, ptr %4, align 8
  store i32 %102, ptr %23, align 4
  store i32 17, ptr %24, align 8
  store i16 0, ptr %25, align 4
  store i16 %104, ptr %26, align 2
  store i64 %80, ptr %27, align 8
  store i32 %82, ptr %28, align 8
  store i16 1, ptr %29, align 4
  store i16 %22, ptr %30, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_ksymbol_output, ptr noundef nonnull %4, ptr noundef null) #27
  %105 = load ptr, ptr %16, align 4
  br label %106

106:                                              ; preds = %100, %70
  %107 = phi ptr [ %71, %70 ], [ %105, %100 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #27
  %108 = add nuw i32 %72, 1
  %109 = getelementptr inbounds %struct.bpf_prog_aux, ptr %107, i32 0, i32 8
  %110 = load i32, ptr %109, align 4
  %111 = icmp ult i32 %108, %110
  br i1 %111, label %70, label %112

112:                                              ; preds = %106, %69, %11
  %113 = load volatile i32, ptr @nr_bpf_events, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %112
  %116 = trunc i32 %1 to i16
  %117 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 10
  %118 = load ptr, ptr %117, align 4
  %119 = getelementptr inbounds %struct.bpf_prog_aux, ptr %118, i32 0, i32 7
  %120 = load i32, ptr %119, align 8
  store ptr %0, ptr %8, align 4
  %121 = getelementptr inbounds i8, ptr %8, i32 4
  store i32 18, ptr %121, align 4
  %122 = getelementptr inbounds i8, ptr %8, i32 8
  store i16 0, ptr %122, align 4
  %123 = getelementptr inbounds i8, ptr %8, i32 10
  store i16 24, ptr %123, align 2
  %124 = getelementptr inbounds i8, ptr %8, i32 12
  store i16 %116, ptr %124, align 4
  %125 = getelementptr inbounds i8, ptr %8, i32 14
  store i16 %2, ptr %125, align 2
  %126 = getelementptr inbounds i8, ptr %8, i32 16
  store i32 %120, ptr %126, align 4
  %127 = getelementptr inbounds i8, ptr %8, i32 20
  %128 = getelementptr inbounds %struct.bpf_prog, ptr %0, i32 0, i32 6
  %129 = load i64, ptr %128, align 4
  store i64 %129, ptr %127, align 4
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_bpf_output, ptr noundef nonnull %8, ptr noundef null)
  br label %130

130:                                              ; preds = %115, %112, %3
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %8) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_bpf_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 1073741824
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.perf_bpf_event, ptr %1, i32 0, i32 1
  %11 = and i64 %6, 262144
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  call fastcc void @__perf_event_header__init_id(ptr noundef %10, ptr noundef nonnull %4, ptr noundef %0) #27
  br label %14

14:                                               ; preds = %13, %9
  %15 = getelementptr inbounds %struct.perf_bpf_event, ptr %1, i32 0, i32 1, i32 0, i32 2
  %16 = load i16, ptr %15, align 2
  %17 = zext i16 %16 to i32
  %18 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef %1, ptr noundef %0, i32 noundef %17) #27
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %10, i32 noundef 24) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %22

22:                                               ; preds = %20, %14, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_text_poke(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #0 {
  %6 = alloca %struct.perf_text_poke_event, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #27
  %7 = load volatile i32, ptr @nr_text_poke_events, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = add i32 %4, %2
  %11 = add i32 %10, 11
  %12 = and i32 %11, -8
  %13 = sub i32 -4, %10
  %14 = add i32 %13, %12
  %15 = trunc i32 %2 to i16
  %16 = trunc i32 %4 to i16
  %17 = trunc i32 %12 to i16
  %18 = add i16 %17, 16
  %19 = ptrtoint ptr %0 to i32
  %20 = zext i32 %19 to i64
  store ptr %1, ptr %6, align 8
  %21 = getelementptr inbounds i8, ptr %6, i32 4
  store ptr %3, ptr %21, align 4
  %22 = getelementptr inbounds i8, ptr %6, i32 8
  store i32 %14, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %6, i32 12
  store i16 %15, ptr %23, align 4
  %24 = getelementptr inbounds i8, ptr %6, i32 14
  store i16 %16, ptr %24, align 2
  %25 = getelementptr inbounds i8, ptr %6, i32 16
  store i32 20, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %6, i32 20
  store i16 1, ptr %26, align 4
  %27 = getelementptr inbounds i8, ptr %6, i32 22
  store i16 %18, ptr %27, align 2
  %28 = getelementptr inbounds i8, ptr %6, i32 24
  store i64 %20, ptr %28, align 8
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_text_poke_output, ptr noundef nonnull %6, ptr noundef null)
  br label %29

29:                                               ; preds = %9, %5
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_text_poke_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  %5 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 8589934592
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %136, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 5
  %12 = and i64 %7, 262144
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  call fastcc void @__perf_event_header__init_id(ptr noundef %11, ptr noundef nonnull %4, ptr noundef %0) #27
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 5, i32 0, i32 2
  %17 = load i16, ptr %16, align 2
  %18 = zext i16 %17 to i32
  %19 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %18) #27
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %136

21:                                               ; preds = %15
  %22 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %11, i32 noundef 16) #27
  %23 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 3
  %24 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %23, i32 noundef 2) #27
  %25 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 4
  %26 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %25, i32 noundef 2) #27
  %27 = load ptr, ptr %1, align 8
  %28 = load i16, ptr %23, align 4
  %29 = zext i16 %28 to i32
  %30 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 3
  %31 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 5
  %32 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 1
  %33 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 6
  %34 = load i32, ptr %30, align 4
  %35 = load ptr, ptr %31, align 8
  br label %36

36:                                               ; preds = %62, %21
  %37 = phi ptr [ %35, %21 ], [ %63, %62 ]
  %38 = phi i32 [ %34, %21 ], [ %64, %62 ]
  %39 = phi i32 [ %29, %21 ], [ %42, %62 ]
  %40 = phi ptr [ %27, %21 ], [ %45, %62 ]
  %41 = call i32 @llvm.umin.i32(i32 %38, i32 %39) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %37, ptr align 1 %40, i32 %41, i1 false) #27
  %42 = sub i32 %39, %41
  %43 = load ptr, ptr %31, align 8
  %44 = getelementptr i8, ptr %43, i32 %41
  store ptr %44, ptr %31, align 8
  %45 = getelementptr i8, ptr %40, i32 %41
  %46 = load i32, ptr %30, align 4
  %47 = sub i32 %46, %41
  store i32 %47, ptr %30, align 4
  %48 = icmp eq i32 %46, %41
  br i1 %48, label %49, label %62

49:                                               ; preds = %36
  %50 = load ptr, ptr %32, align 4
  %51 = load i32, ptr %33, align 4
  %52 = add i32 %51, 1
  %53 = getelementptr inbounds %struct.perf_buffer, ptr %50, i32 0, i32 4
  %54 = load i32, ptr %53, align 4
  %55 = add i32 %54, -1
  %56 = and i32 %55, %52
  store i32 %56, ptr %33, align 4
  %57 = getelementptr %struct.perf_buffer, ptr %50, i32 0, i32 34, i32 %56
  %58 = load ptr, ptr %57, align 4
  store ptr %58, ptr %31, align 8
  %59 = getelementptr inbounds %struct.perf_buffer, ptr %50, i32 0, i32 3
  %60 = load i32, ptr %59, align 4
  %61 = shl i32 4096, %60
  store i32 %61, ptr %30, align 4
  br label %62

62:                                               ; preds = %49, %36
  %63 = phi ptr [ %44, %36 ], [ %58, %49 ]
  %64 = phi i32 [ %47, %36 ], [ %61, %49 ]
  %65 = icmp eq i32 %42, 0
  br i1 %65, label %66, label %36

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 1
  %68 = load ptr, ptr %67, align 4
  %69 = load i16, ptr %25, align 2
  %70 = zext i16 %69 to i32
  br label %71

71:                                               ; preds = %97, %66
  %72 = phi ptr [ %63, %66 ], [ %98, %97 ]
  %73 = phi i32 [ %64, %66 ], [ %99, %97 ]
  %74 = phi i32 [ %70, %66 ], [ %77, %97 ]
  %75 = phi ptr [ %68, %66 ], [ %80, %97 ]
  %76 = call i32 @llvm.umin.i32(i32 %73, i32 %74) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %72, ptr align 1 %75, i32 %76, i1 false) #27
  %77 = sub i32 %74, %76
  %78 = load ptr, ptr %31, align 8
  %79 = getelementptr i8, ptr %78, i32 %76
  store ptr %79, ptr %31, align 8
  %80 = getelementptr i8, ptr %75, i32 %76
  %81 = load i32, ptr %30, align 4
  %82 = sub i32 %81, %76
  store i32 %82, ptr %30, align 4
  %83 = icmp eq i32 %81, %76
  br i1 %83, label %84, label %97

84:                                               ; preds = %71
  %85 = load ptr, ptr %32, align 4
  %86 = load i32, ptr %33, align 4
  %87 = add i32 %86, 1
  %88 = getelementptr inbounds %struct.perf_buffer, ptr %85, i32 0, i32 4
  %89 = load i32, ptr %88, align 4
  %90 = add i32 %89, -1
  %91 = and i32 %90, %87
  store i32 %91, ptr %33, align 4
  %92 = getelementptr %struct.perf_buffer, ptr %85, i32 0, i32 34, i32 %91
  %93 = load ptr, ptr %92, align 4
  store ptr %93, ptr %31, align 8
  %94 = getelementptr inbounds %struct.perf_buffer, ptr %85, i32 0, i32 3
  %95 = load i32, ptr %94, align 4
  %96 = shl i32 4096, %95
  store i32 %96, ptr %30, align 4
  br label %97

97:                                               ; preds = %84, %71
  %98 = phi ptr [ %79, %71 ], [ %93, %84 ]
  %99 = phi i32 [ %82, %71 ], [ %96, %84 ]
  %100 = icmp eq i32 %77, 0
  br i1 %100, label %101, label %71

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.perf_text_poke_event, ptr %1, i32 0, i32 2
  %103 = load i32, ptr %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %135, label %105

105:                                              ; preds = %131, %101
  %106 = phi ptr [ %132, %131 ], [ %98, %101 ]
  %107 = phi i32 [ %133, %131 ], [ %99, %101 ]
  %108 = phi i32 [ %111, %131 ], [ %103, %101 ]
  %109 = phi ptr [ %114, %131 ], [ %5, %101 ]
  %110 = call i32 @llvm.umin.i32(i32 %107, i32 %108) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %106, ptr align 1 %109, i32 %110, i1 false) #27
  %111 = sub i32 %108, %110
  %112 = load ptr, ptr %31, align 8
  %113 = getelementptr i8, ptr %112, i32 %110
  store ptr %113, ptr %31, align 8
  %114 = getelementptr i8, ptr %109, i32 %110
  %115 = load i32, ptr %30, align 4
  %116 = sub i32 %115, %110
  store i32 %116, ptr %30, align 4
  %117 = icmp eq i32 %115, %110
  br i1 %117, label %118, label %131

118:                                              ; preds = %105
  %119 = load ptr, ptr %32, align 4
  %120 = load i32, ptr %33, align 4
  %121 = add i32 %120, 1
  %122 = getelementptr inbounds %struct.perf_buffer, ptr %119, i32 0, i32 4
  %123 = load i32, ptr %122, align 4
  %124 = add i32 %123, -1
  %125 = and i32 %124, %121
  store i32 %125, ptr %33, align 4
  %126 = getelementptr %struct.perf_buffer, ptr %119, i32 0, i32 34, i32 %125
  %127 = load ptr, ptr %126, align 4
  store ptr %127, ptr %31, align 8
  %128 = getelementptr inbounds %struct.perf_buffer, ptr %119, i32 0, i32 3
  %129 = load i32, ptr %128, align 4
  %130 = shl i32 4096, %129
  store i32 %130, ptr %30, align 4
  br label %131

131:                                              ; preds = %118, %105
  %132 = phi ptr [ %113, %105 ], [ %127, %118 ]
  %133 = phi i32 [ %116, %105 ], [ %130, %118 ]
  %134 = icmp eq i32 %111, 0
  br i1 %134, label %135, label %105

135:                                              ; preds = %131, %101
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %136

136:                                              ; preds = %135, %15, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @perf_event_itrace_started(ptr nocapture noundef %0) local_unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %3 = load i32, ptr %2, align 4
  %4 = or i32 %3, 16
  store i32 %4, ptr %2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_report_aux_output_id(ptr noundef %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  %5 = alloca %struct.perf_aux_event.189, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #27
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  %9 = select i1 %8, ptr %0, ptr %7
  store i32 21, ptr %5, align 8
  %10 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 1
  store i16 0, ptr %10, align 4
  %11 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  store i16 16, ptr %11, align 2
  %12 = getelementptr inbounds %struct.perf_aux_event.189, ptr %5, i32 0, i32 1
  store i64 %1, ptr %12, align 8
  %13 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 21, i32 6
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 262144
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef %9) #27
  %18 = load i16, ptr %11, align 2
  %19 = zext i16 %18 to i32
  br label %20

20:                                               ; preds = %17, %2
  %21 = phi i32 [ 16, %2 ], [ %19, %17 ]
  %22 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %9, i32 noundef %21) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef nonnull %5, i32 noundef 16) #27
  call void @perf_event__output_id_sample(ptr noundef %9, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %26

26:                                               ; preds = %24, %20
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_account_interrupt(ptr noundef %0) local_unnamed_addr #0 {
  %2 = tail call fastcc i32 @__perf_event_account_interrupt(ptr noundef %0, i32 noundef 1)
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__perf_event_account_interrupt(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %4 = inttoptr i32 %3 to ptr
  %5 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %4) #19, !srcloc !11
  %6 = add i32 %5, ptrtoint (ptr @perf_throttled_seq to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 8
  %10 = load i64, ptr %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  store i64 %8, ptr %9, align 8
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  store i64 1, ptr %13, align 8
  br label %31

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %16 = load i64, ptr %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, ptr %15, align 8
  %18 = icmp ne i32 %1, 0
  %19 = load i32, ptr @max_samples_per_tick, align 4
  %20 = sext i32 %19 to i64
  %21 = icmp uge i64 %17, %20
  %22 = select i1 %18, i1 %21, i1 false
  br i1 %22, label %23, label %31, !prof !12

23:                                               ; preds = %14
  %24 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %25 = inttoptr i32 %24 to ptr
  %26 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %25) #19, !srcloc !11
  %27 = add i32 %26, ptrtoint (ptr @perf_throttled_count to i32)
  %28 = inttoptr i32 %27 to ptr
  %29 = load i32, ptr %28, align 4
  %30 = add i32 %29, 1
  store i32 %30, ptr %28, align 4
  store i64 -1, ptr %15, align 8
  tail call fastcc void @perf_log_throttle(ptr noundef %0, i32 noundef 0)
  br label %31

31:                                               ; preds = %23, %14, %12
  %32 = phi i32 [ 0, %12 ], [ 1, %23 ], [ 0, %14 ]
  %33 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 1024
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = tail call i64 @sched_clock() #27
  %39 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 10
  %40 = load i64, ptr %39, align 8
  %41 = sub i64 %38, %40
  store i64 %38, ptr %39, align 8
  %42 = add i64 %41, -1
  %43 = icmp ult i64 %42, 19999999
  br i1 %43, label %44, label %47

44:                                               ; preds = %37
  %45 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  %46 = load i64, ptr %45, align 8
  tail call fastcc void @perf_adjust_period(ptr noundef %0, i64 noundef %41, i64 noundef %46, i1 noundef zeroext true)
  br label %47

47:                                               ; preds = %44, %37, %31
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_overflow(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = tail call fastcc i32 @__perf_event_overflow(ptr noundef %0, i32 noundef 1, ptr noundef %1, ptr noundef %2)
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__perf_event_overflow(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 50
  %6 = load volatile i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %8 = load i64, ptr %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %46, label %10, !prof !12

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @__perf_event_account_interrupt(ptr noundef %0, i32 noundef %1)
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 46
  store i32 1, ptr %12, align 4
  %13 = icmp eq i32 %6, 0
  br i1 %13, label %28, label %14

14:                                               ; preds = %10
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %5) #27, !srcloc !19
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %5, ptr %5, i32 1, ptr elementtype(i32) %5) #27, !srcloc !34
  %16 = extractvalue { i32, i32 } %15, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  store i32 6, ptr %12, align 4
  %19 = load i64, ptr %2, align 64
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 48
  store i32 %20, ptr %21, align 4
  %22 = tail call ptr @llvm.thread.pointer() #27
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 47
  store volatile i32 %24, ptr %25, align 8
  %26 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 49
  %27 = tail call zeroext i1 @irq_work_queue(ptr noundef %26) #27
  br label %28

28:                                               ; preds = %18, %14, %10
  %29 = phi i32 [ 1, %18 ], [ %11, %14 ], [ %11, %10 ]
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 60
  %31 = load volatile ptr, ptr %30, align 4
  tail call void %31(ptr noundef %0, ptr noundef %2, ptr noundef %3) #27
  %32 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  %35 = select i1 %34, ptr %0, ptr %33
  %36 = getelementptr inbounds %struct.perf_event, ptr %35, i32 0, i32 44
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %28
  %40 = load i32, ptr %12, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 45
  store i32 1, ptr %43, align 8
  %44 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 49
  %45 = tail call zeroext i1 @irq_work_queue(ptr noundef %44) #27
  br label %46

46:                                               ; preds = %42, %39, %28, %4
  %47 = phi i32 [ 0, %4 ], [ %29, %42 ], [ %29, %39 ], [ %29, %28 ]
  ret i32 %47
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i64 @perf_swevent_set_period(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  %3 = load i64, ptr %2, align 8
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %5 = load i64, ptr %4, align 8
  store i64 %5, ptr %2, align 8
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  br label %7

7:                                                ; preds = %19, %1
  %8 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %6, ptr elementtype(i64) %6) #27, !srcloc !25
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  %11 = add i64 %8, %3
  %12 = tail call i64 @div64_u64(i64 noundef %11, i64 noundef %3) #27
  %13 = mul i64 %12, %3
  %14 = sub i64 %8, %13
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !66
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  br label %15

15:                                               ; preds = %15, %10
  %16 = tail call { i32, i64 } asm sideeffect "@ atomic64_cmpxchg\0Aldrexd\09\09$1, ${1:H}, [$3]\0Amov\09\09$0, #0\0Ateq\09\09$1, $4\0Ateqeq\09\09${1:H}, ${4:H}\0Astrexdeq\09$0, $5, ${5:H}, [$3]", "=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i64) %6, ptr %6, i64 %8, i64 %14, ptr elementtype(i64) %6) #27, !srcloc !67
  %17 = extractvalue { i32, i64 } %16, 0
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %15

19:                                               ; preds = %15
  %20 = extractvalue { i32, i64 } %16, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !68
  %21 = icmp eq i64 %20, %8
  br i1 %21, label %22, label %7

22:                                               ; preds = %19, %7
  %23 = phi i64 [ 0, %7 ], [ %12, %19 ]
  ret i64 %23
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @div64_u64(i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_swevent_get_recursion_context() #0 {
  %1 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %2 = inttoptr i32 %1 to ptr
  %3 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %2) #19, !srcloc !11
  %4 = add i32 %3, ptrtoint (ptr @swevent_htable to i32)
  %5 = inttoptr i32 %4 to ptr
  %6 = getelementptr inbounds %struct.swevent_htable, ptr %5, i32 0, i32 3
  %7 = tail call ptr @llvm.thread.pointer() #27
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %9 = load volatile i32, ptr %8, align 4
  %10 = and i32 %9, 15728640
  %11 = icmp ne i32 %10, 0
  %12 = and i32 %9, 16711680
  %13 = icmp ne i32 %12, 0
  %14 = zext i1 %13 to i32
  %15 = zext i1 %11 to i32
  %16 = add nuw nsw i32 %15, %14
  %17 = and i32 %9, 16711936
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i32
  %20 = add nuw nsw i32 %16, %19
  %21 = getelementptr i32, ptr %6, i32 %20
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %0
  store i32 1, ptr %21, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !69
  br label %25

25:                                               ; preds = %24, %0
  %26 = phi i32 [ %20, %24 ], [ -1, %0 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_swevent_put_recursion_context(i32 noundef %0) local_unnamed_addr #0 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #19, !srcloc !11
  %5 = add i32 %4, ptrtoint (ptr @swevent_htable to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = getelementptr inbounds %struct.swevent_htable, ptr %6, i32 0, i32 3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !70
  %8 = getelementptr i32, ptr %7, i32 %0
  %9 = load i32, ptr %8, align 4
  %10 = add i32 %9, -1
  store i32 %10, ptr %8, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @___perf_sw_event(i32 noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #0 {
  %5 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %5, i8 0, i32 192, i1 false), !annotation !48
  %6 = icmp eq ptr %2, null
  %7 = load i1, ptr @___perf_sw_event.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !12

10:                                               ; preds = %4
  store i1 true, ptr @___perf_sw_event.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 9549, i32 noundef 9, ptr noundef null) #27
  br label %11

11:                                               ; preds = %10, %4
  br i1 %6, label %77, label %12

12:                                               ; preds = %11
  store i64 %3, ptr %5, align 64
  %13 = getelementptr inbounds %struct.perf_sample_data, ptr %5, i32 0, i32 1
  %14 = getelementptr inbounds %struct.perf_sample_data, ptr %5, i32 0, i32 6
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(24) %13, i8 0, i64 24, i1 false)
  store i64 84410401, ptr %14, align 8
  %15 = getelementptr inbounds %struct.perf_sample_data, ptr %5, i32 0, i32 5
  store i64 0, ptr %15, align 32
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #19, !srcloc !11
  %19 = add i32 %18, ptrtoint (ptr @swevent_htable to i32)
  %20 = inttoptr i32 %19 to ptr
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %21 = load volatile ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  %23 = xor i32 %0, 1640531527
  %24 = mul i32 %23, 1640531527
  %25 = lshr i32 %24, 24
  %26 = getelementptr [256 x %struct.hlist_head], ptr %21, i32 0, i32 %25
  %27 = icmp eq ptr %26, null
  %28 = or i1 %22, %27
  br i1 %28, label %76, label %29

29:                                               ; preds = %12
  %30 = load volatile ptr, ptr %26, align 4
  %31 = icmp eq ptr %30, null
  %32 = getelementptr i8, ptr %30, i32 -56
  %33 = icmp eq ptr %32, null
  %34 = or i1 %31, %33
  br i1 %34, label %76, label %35

35:                                               ; preds = %29
  %36 = zext i32 %0 to i64
  %37 = getelementptr [18 x i32], ptr %2, i32 0, i32 16
  br label %38

38:                                               ; preds = %69, %35
  %39 = phi ptr [ %32, %35 ], [ %73, %69 ]
  %40 = getelementptr inbounds %struct.perf_event, ptr %39, i32 0, i32 21
  %41 = load i32, ptr %40, align 8
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %69

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.perf_event, ptr %39, i32 0, i32 21, i32 2
  %45 = load i64, ptr %44, align 8
  %46 = icmp eq i64 %45, %36
  br i1 %46, label %47, label %69

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.perf_event, ptr %39, i32 0, i32 25, i32 4
  %49 = load i32, ptr %48, align 4
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.perf_event, ptr %39, i32 0, i32 21, i32 6
  %54 = load i64, ptr %53, align 8
  %55 = and i64 %54, 16
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %52
  %58 = load i32, ptr %37, align 4
  %59 = and i32 %58, 15
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %57, %52
  %62 = and i64 %54, 32
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = load i32, ptr %37, align 4
  %66 = and i32 %65, 15
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %64, %61
  call fastcc void @perf_swevent_event(ptr noundef nonnull %39, i64 noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %2) #27
  br label %69

69:                                               ; preds = %68, %64, %57, %47, %43, %38
  %70 = getelementptr inbounds %struct.perf_event, ptr %39, i32 0, i32 6
  %71 = load volatile ptr, ptr %70, align 8
  %72 = icmp eq ptr %71, null
  %73 = getelementptr i8, ptr %71, i32 -56
  %74 = icmp eq ptr %73, null
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %38

76:                                               ; preds = %69, %29, %12
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %77

77:                                               ; preds = %76, %11
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %5) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__perf_sw_event(i32 noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !71
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = add i32 %7, ptrtoint (ptr @swevent_htable to i32)
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.swevent_htable, ptr %9, i32 0, i32 3
  %11 = tail call ptr @llvm.thread.pointer() #27
  %12 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %13 = load volatile i32, ptr %12, align 4
  %14 = and i32 %13, 15728640
  %15 = icmp ne i32 %14, 0
  %16 = and i32 %13, 16711680
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = zext i1 %15 to i32
  %20 = add nuw nsw i32 %19, %18
  %21 = and i32 %13, 16711936
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i32
  %24 = add nuw nsw i32 %20, %23
  %25 = getelementptr i32, ptr %10, i32 %24
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %4
  store i32 1, ptr %25, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !69
  tail call void @___perf_sw_event(i32 noundef %0, i64 noundef %1, ptr noundef %2, i64 noundef %3)
  %29 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %30 = inttoptr i32 %29 to ptr
  %31 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %30) #19, !srcloc !11
  %32 = add i32 %31, ptrtoint (ptr @swevent_htable to i32)
  %33 = inttoptr i32 %32 to ptr
  %34 = getelementptr inbounds %struct.swevent_htable, ptr %33, i32 0, i32 3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !70
  %35 = getelementptr i32, ptr %34, i32 %24
  %36 = load i32, ptr %35, align 4
  %37 = add i32 %36, -1
  store i32 %37, ptr %35, align 4
  br label %38

38:                                               ; preds = %28, %4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !72
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_trace_run_bpf_submit(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3, i64 noundef %4, ptr noundef %5, ptr noundef %6, ptr noundef %7) #0 {
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %3, i32 0, i32 11
  %10 = load volatile ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  store ptr %5, ptr %0, align 4
  %13 = load volatile ptr, ptr %6, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %25

15:                                               ; preds = %12
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #19, !srcloc !11
  %19 = add i32 %18, ptrtoint (ptr @swevent_htable to i32)
  %20 = inttoptr i32 %19 to ptr
  %21 = getelementptr inbounds %struct.swevent_htable, ptr %20, i32 0, i32 3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !70
  %22 = getelementptr i32, ptr %21, i32 %2
  %23 = load i32, ptr %22, align 4
  %24 = add i32 %23, -1
  store i32 %24, ptr %22, align 4
  br label %29

25:                                               ; preds = %12, %8
  %26 = getelementptr inbounds %struct.trace_event_call, ptr %3, i32 0, i32 3, i32 2
  %27 = load i32, ptr %26, align 4
  %28 = trunc i32 %27 to i16
  tail call void @perf_tp_event(i16 noundef zeroext %28, i64 noundef %4, ptr noundef %0, i32 noundef %1, ptr noundef %5, ptr noundef %6, i32 noundef %2, ptr noundef %7)
  br label %29

29:                                               ; preds = %25, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_tp_event(i16 noundef zeroext %0, i64 noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6, ptr noundef %7) #0 {
  %9 = alloca %struct.perf_sample_data, align 64
  %10 = alloca %struct.perf_raw_record, align 8
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %9) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %9, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %10) #27
  %11 = getelementptr inbounds %struct.perf_raw_frag, ptr %10, i32 0, i32 2
  store i64 0, ptr %10, align 8
  store ptr %2, ptr %11, align 8
  %12 = getelementptr inbounds %struct.perf_raw_frag, ptr %10, i32 0, i32 3
  store i32 %3, ptr %12, align 4
  %13 = getelementptr inbounds %struct.perf_raw_record, ptr %10, i32 0, i32 1
  store i32 0, ptr %13, align 8
  %14 = getelementptr inbounds %struct.perf_sample_data, ptr %9, i32 0, i32 1
  %15 = getelementptr inbounds %struct.perf_sample_data, ptr %9, i32 0, i32 6
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(32) %9, i8 0, i64 32, i1 false)
  store i64 84410401, ptr %15, align 8
  %16 = getelementptr inbounds %struct.perf_sample_data, ptr %9, i32 0, i32 5
  store i64 0, ptr %16, align 32
  store ptr %10, ptr %14, align 8
  call void @perf_trace_buf_update(ptr noundef %2, i16 noundef zeroext %0) #27
  %17 = load volatile ptr, ptr %5, align 4
  %18 = icmp eq ptr %17, null
  %19 = getelementptr i8, ptr %17, i32 -56
  %20 = icmp eq ptr %19, null
  %21 = or i1 %18, %20
  br i1 %21, label %61, label %22

22:                                               ; preds = %8
  %23 = getelementptr [18 x i32], ptr %4, i32 0, i32 16
  br label %24

24:                                               ; preds = %54, %22
  %25 = phi ptr [ %19, %22 ], [ %58, %54 ]
  %26 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 25, i32 4
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %54

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 21, i32 6
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, 32
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %30
  %36 = load i32, ptr %23, align 4
  %37 = and i32 %36, 15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %35, %30
  %40 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 32
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  %43 = select i1 %42, ptr %25, ptr %41
  %44 = getelementptr inbounds %struct.perf_event, ptr %43, i32 0, i32 63
  %45 = load ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %47, !prof !23

47:                                               ; preds = %39
  %48 = load ptr, ptr %14, align 8
  %49 = getelementptr inbounds %struct.perf_raw_frag, ptr %48, i32 0, i32 2
  %50 = load ptr, ptr %49, align 4
  %51 = call i32 @filter_match_preds(ptr noundef nonnull %45, ptr noundef %50) #27
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %47, %39
  call fastcc void @perf_swevent_event(ptr noundef nonnull %25, i64 noundef %1, ptr noundef nonnull %9, ptr noundef %4)
  br label %54

54:                                               ; preds = %53, %47, %35, %24
  %55 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 6
  %56 = load volatile ptr, ptr %55, align 8
  %57 = icmp eq ptr %56, null
  %58 = getelementptr i8, ptr %56, i32 -56
  %59 = icmp eq ptr %58, null
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %24

61:                                               ; preds = %54, %8
  %62 = icmp eq ptr %7, null
  br i1 %62, label %129, label %63

63:                                               ; preds = %61
  %64 = tail call ptr @llvm.thread.pointer() #27
  %65 = icmp eq ptr %64, %7
  br i1 %65, label %129, label %66

66:                                               ; preds = %63
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %67 = getelementptr %struct.task_struct, ptr %7, i32 0, i32 130, i32 1
  %68 = load volatile ptr, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %128, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.perf_event_context, ptr %68, i32 0, i32 6
  %72 = load volatile ptr, ptr %71, align 8
  %73 = icmp eq ptr %72, %71
  br i1 %73, label %128, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.thread_info, ptr %64, i32 0, i32 2
  %76 = getelementptr [18 x i32], ptr %4, i32 0, i32 16
  br label %77

77:                                               ; preds = %125, %74
  %78 = phi ptr [ %72, %74 ], [ %126, %125 ]
  %79 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 34
  %80 = load i32, ptr %79, align 4
  %81 = load i32, ptr %75, align 8
  %82 = icmp eq i32 %80, %81
  br i1 %82, label %83, label %125

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 21
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %85, 2
  br i1 %86, label %87, label %125

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 21, i32 2
  %89 = load i64, ptr %88, align 8
  %90 = load i16, ptr %2, align 4
  %91 = zext i16 %90 to i64
  %92 = icmp eq i64 %89, %91
  br i1 %92, label %93, label %125

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 21, i32 6
  %95 = load i64, ptr %94, align 8
  %96 = and i64 %95, 137438953472
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %125

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 25, i32 4
  %100 = load i32, ptr %99, align 4
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %125

103:                                              ; preds = %98
  %104 = and i64 %95, 32
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %103
  %107 = load i32, ptr %76, align 4
  %108 = and i32 %107, 15
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %125

110:                                              ; preds = %106, %103
  %111 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 32
  %112 = load ptr, ptr %111, align 4
  %113 = icmp eq ptr %112, null
  %114 = select i1 %113, ptr %78, ptr %112
  %115 = getelementptr inbounds %struct.perf_event, ptr %114, i32 0, i32 63
  %116 = load ptr, ptr %115, align 8
  %117 = icmp eq ptr %116, null
  br i1 %117, label %124, label %118, !prof !23

118:                                              ; preds = %110
  %119 = load ptr, ptr %14, align 8
  %120 = getelementptr inbounds %struct.perf_raw_frag, ptr %119, i32 0, i32 2
  %121 = load ptr, ptr %120, align 4
  %122 = call i32 @filter_match_preds(ptr noundef nonnull %116, ptr noundef %121) #27
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %118, %110
  call fastcc void @perf_swevent_event(ptr noundef %78, i64 noundef %1, ptr noundef nonnull %9, ptr noundef %4)
  br label %125

125:                                              ; preds = %124, %118, %106, %98, %93, %87, %83, %77
  %126 = load volatile ptr, ptr %78, align 8
  %127 = icmp eq ptr %126, %71
  br i1 %127, label %128, label %77

128:                                              ; preds = %125, %70, %66
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %129

129:                                              ; preds = %128, %63, %61
  %130 = call i32 @llvm.read_register.i32(metadata !0) #27
  %131 = inttoptr i32 %130 to ptr
  %132 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %131) #19, !srcloc !11
  %133 = add i32 %132, ptrtoint (ptr @swevent_htable to i32)
  %134 = inttoptr i32 %133 to ptr
  %135 = getelementptr inbounds %struct.swevent_htable, ptr %134, i32 0, i32 3
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !70
  %136 = getelementptr i32, ptr %135, i32 %6
  %137 = load i32, ptr %136, align 4
  %138 = add i32 %137, -1
  store i32 %138, ptr %136, align 4
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %10) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %9) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_buf_update(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_swevent_event(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %5) #27, !srcloc !19
  %6 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %5, ptr %5, i64 %1, ptr elementtype(i64) %5) #27, !srcloc !73
  %7 = icmp eq ptr %3, null
  br i1 %7, label %90, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %10 = load i64, ptr %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %90, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 256
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 1024
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 3
  store i64 %1, ptr %23, align 16
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %25 = load i64, ptr %24, align 8
  %26 = icmp eq i64 %25, -1
  br i1 %26, label %90, label %88

27:                                               ; preds = %17, %12
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  %29 = load i64, ptr %28, align 8
  %30 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 3
  store i64 %29, ptr %30, align 16
  %31 = icmp eq i64 %1, 1
  br i1 %31, label %32, label %45

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %34 = load i64, ptr %33, align 8
  %35 = icmp eq i64 %34, 1
  br i1 %35, label %36, label %45

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 1024
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %43 = load i64, ptr %42, align 8
  %44 = icmp eq i64 %43, -1
  br i1 %44, label %90, label %88

45:                                               ; preds = %36, %32, %27
  %46 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !74
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %46) #27, !srcloc !19
  %47 = tail call { i64, i32 } asm sideeffect "@ atomic64_add_return\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %46, ptr %46, i64 %1, ptr elementtype(i64) %46) #27, !srcloc !75
  %48 = extractvalue { i64, i32 } %47, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !76
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %90, label %50

50:                                               ; preds = %45
  %51 = load i64, ptr %28, align 8
  %52 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %53 = load i64, ptr %52, align 8
  store i64 %53, ptr %28, align 8
  br label %54

54:                                               ; preds = %66, %50
  %55 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %46, ptr elementtype(i64) %46) #27, !srcloc !25
  %56 = icmp slt i64 %55, 0
  br i1 %56, label %90, label %57

57:                                               ; preds = %54
  %58 = add i64 %55, %51
  %59 = tail call i64 @div64_u64(i64 noundef %58, i64 noundef %51) #27
  %60 = mul i64 %59, %51
  %61 = sub i64 %55, %60
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !66
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %46) #27, !srcloc !19
  br label %62

62:                                               ; preds = %62, %57
  %63 = tail call { i32, i64 } asm sideeffect "@ atomic64_cmpxchg\0Aldrexd\09\09$1, ${1:H}, [$3]\0Amov\09\09$0, #0\0Ateq\09\09$1, $4\0Ateqeq\09\09${1:H}, ${4:H}\0Astrexdeq\09$0, $5, ${5:H}, [$3]", "=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i64) %46, ptr %46, i64 %55, i64 %61, ptr elementtype(i64) %46) #27, !srcloc !67
  %64 = extractvalue { i32, i64 } %63, 0
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %62

66:                                               ; preds = %62
  %67 = extractvalue { i32, i64 } %63, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !68
  %68 = icmp eq i64 %67, %55
  br i1 %68, label %69, label %54

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %71 = load i64, ptr %70, align 8
  %72 = icmp eq i64 %71, -1
  %73 = icmp eq i64 %59, 0
  %74 = select i1 %72, i1 true, i1 %73
  br i1 %74, label %90, label %75

75:                                               ; preds = %69
  %76 = tail call fastcc i32 @__perf_event_overflow(ptr noundef %0, i32 noundef 0, ptr noundef %2, ptr noundef nonnull %3) #27
  %77 = icmp ne i32 %76, 0
  %78 = add i64 %59, -1
  %79 = icmp eq i64 %78, 0
  %80 = select i1 %77, i1 true, i1 %79
  br i1 %80, label %90, label %81

81:                                               ; preds = %81, %75
  %82 = phi i64 [ %85, %81 ], [ %78, %75 ]
  %83 = tail call fastcc i32 @__perf_event_overflow(ptr noundef %0, i32 noundef 1, ptr noundef %2, ptr noundef nonnull %3) #27
  %84 = icmp ne i32 %83, 0
  %85 = add i64 %82, -1
  %86 = icmp eq i64 %85, 0
  %87 = select i1 %84, i1 true, i1 %86
  br i1 %87, label %90, label %81, !llvm.loop !77

88:                                               ; preds = %41, %22
  %89 = tail call fastcc i32 @__perf_event_overflow(ptr noundef %0, i32 noundef 0, ptr noundef %2, ptr noundef nonnull %3) #27
  br label %90

90:                                               ; preds = %88, %81, %75, %69, %54, %45, %41, %22, %8, %4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_set_bpf_prog(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i64 %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, @perf_tracepoint
  %7 = icmp eq ptr %5, @perf_uprobe
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %54

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 62
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_call, ptr %11, i32 0, i32 8
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  %16 = and i32 %13, 208
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %9
  %19 = and i32 %13, 192
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 2
  %23 = load i32, ptr %22, align 4
  %24 = icmp eq i32 %23, 2
  br i1 %24, label %25, label %54

25:                                               ; preds = %21, %18
  br i1 %15, label %30, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = icmp eq i32 %28, 5
  br i1 %29, label %38, label %54

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 1
  %32 = load i16, ptr %31, align 2
  %33 = and i16 %32, 128
  %34 = icmp ne i16 %33, 0
  %35 = and i32 %13, 64
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %34, i1 %36, i1 false
  br i1 %37, label %54, label %53

38:                                               ; preds = %26
  %39 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 1
  %40 = load i16, ptr %39, align 2
  %41 = and i16 %40, 128
  %42 = icmp ne i16 %41, 0
  %43 = and i32 %13, 64
  %44 = icmp eq i32 %43, 0
  %45 = select i1 %42, i1 %44, i1 false
  br i1 %45, label %54, label %46

46:                                               ; preds = %38
  %47 = tail call i32 @trace_event_get_offsets(ptr noundef %11) #27
  %48 = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 10
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.bpf_prog_aux, ptr %49, i32 0, i32 3
  %51 = load i32, ptr %50, align 8
  %52 = icmp ugt i32 %51, %47
  br i1 %52, label %54, label %53

53:                                               ; preds = %46, %30
  br label %54

54:                                               ; preds = %53, %46, %38, %30, %26, %21, %9, %3
  %55 = phi i32 [ -95, %53 ], [ -13, %46 ], [ -22, %9 ], [ -22, %26 ], [ -22, %21 ], [ -95, %3 ], [ -22, %30 ], [ -22, %38 ]
  ret i32 %55
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_get_offsets(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local void @perf_event_free_bpf_prog(ptr nocapture noundef %0) local_unnamed_addr #10 {
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_bp_event(ptr noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %3, i8 0, i32 192, i1 false), !annotation !48
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 9
  %5 = load i64, ptr %4, align 8
  store i64 %5, ptr %3, align 64
  %6 = getelementptr inbounds %struct.perf_sample_data, ptr %3, i32 0, i32 1
  %7 = getelementptr inbounds %struct.perf_sample_data, ptr %3, i32 0, i32 6
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(24) %6, i8 0, i64 24, i1 false)
  store i64 84410401, ptr %7, align 8
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %32

11:                                               ; preds = %2
  %12 = icmp eq ptr %1, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 16
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr [18 x i32], ptr %1, i32 0, i32 16
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %18, %13
  %24 = and i64 %15, 32
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = getelementptr [18 x i32], ptr %1, i32 0, i32 16
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26, %23, %11
  call fastcc void @perf_swevent_event(ptr noundef %0, i64 noundef 1, ptr noundef nonnull %3, ptr noundef %1)
  br label %32

32:                                               ; preds = %31, %26, %18, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @nr_addr_filters_show(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #11 {
  %4 = getelementptr inbounds %struct.device, ptr %0, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.pmu, ptr %5, i32 0, i32 13
  %7 = load i32, ptr %6, align 4
  %8 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %2, i32 noundef 4095, ptr noundef nonnull @.str.42, i32 noundef %7)
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_pmu_register(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  %4 = tail call noalias ptr @__alloc_percpu(i32 noundef 4, i32 noundef 4) #31
  %5 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  store ptr %4, ptr %5, align 4
  %6 = icmp eq ptr %4, null
  br i1 %6, label %170, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 6
  store i32 -1, ptr %8, align 4
  %9 = icmp ne ptr %1, null
  br i1 %9, label %10, label %28

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 5
  store ptr %1, ptr %11, align 4
  %12 = icmp eq i32 %2, 1
  br i1 %12, label %22, label %13

13:                                               ; preds = %10
  %14 = icmp sgt i32 %2, -1
  %15 = select i1 %14, i32 %2, i32 6
  %16 = tail call i32 @idr_alloc(ptr noundef nonnull @pmu_idr, ptr noundef %0, i32 noundef %15, i32 noundef 0, i32 noundef 3264) #27
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %182, label %18

18:                                               ; preds = %13
  %19 = icmp ne i32 %16, %2
  %20 = select i1 %14, i1 %19, i1 false
  br i1 %20, label %21, label %22, !prof !12

21:                                               ; preds = %18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 11180, i32 noundef 9, ptr noundef null) #27
  br label %22

22:                                               ; preds = %21, %18, %10
  %23 = phi i32 [ 1, %10 ], [ %16, %21 ], [ %16, %18 ]
  store i32 %23, ptr %8, align 4
  %24 = load i1, ptr @pmu_bus_running, align 4
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = tail call fastcc i32 @pmu_dev_alloc(ptr noundef %0)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %176

28:                                               ; preds = %25, %22, %7
  %29 = phi i32 [ %23, %25 ], [ %23, %22 ], [ %2, %7 ]
  %30 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 11
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %48

33:                                               ; preds = %28
  %34 = load i1, ptr @perf_pmu_register.hw_context_taken, align 4
  br i1 %34, label %35, label %46

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 7
  %37 = load i32, ptr %36, align 4
  %38 = and i32 %37, 64
  %39 = icmp eq i32 %38, 0
  %40 = load i1, ptr @perf_pmu_register.__already_done, align 1
  %41 = xor i1 %40, true
  %42 = select i1 %39, i1 %41, i1 false
  br i1 %42, label %43, label %44, !prof !12

43:                                               ; preds = %35
  store i1 true, ptr @perf_pmu_register.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 11202, i32 noundef 9, ptr noundef null) #27
  br label %45

44:                                               ; preds = %35
  br i1 %39, label %45, label %46

45:                                               ; preds = %44, %43
  store i32 -1, ptr %30, align 4
  br label %46

46:                                               ; preds = %45, %44, %33
  %47 = phi i32 [ 0, %33 ], [ -1, %45 ], [ 0, %44 ]
  store i1 true, ptr @perf_pmu_register.hw_context_taken, align 4
  br label %48

48:                                               ; preds = %46, %28
  %49 = phi i32 [ %47, %46 ], [ %31, %28 ]
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %55, %48
  %52 = phi ptr [ %53, %55 ], [ @pmus, %48 ]
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, @pmus
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.pmu, ptr %53, i32 0, i32 11
  %57 = load i32, ptr %56, align 4
  %58 = icmp eq i32 %57, %49
  br i1 %58, label %61, label %51

59:                                               ; preds = %51, %48
  %60 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  store ptr null, ptr %60, align 4
  br label %66

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.pmu, ptr %53, i32 0, i32 9
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  store ptr %63, ptr %64, align 4
  %65 = icmp eq ptr %63, null
  br i1 %65, label %66, label %129

66:                                               ; preds = %61, %59
  %67 = phi ptr [ %60, %59 ], [ %64, %61 ]
  %68 = tail call noalias ptr @__alloc_percpu(i32 noundef 312, i32 noundef 8) #31
  store ptr %68, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %172, label %70

70:                                               ; preds = %66
  %71 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #32
  %72 = load i32, ptr @nr_cpu_ids, align 4
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %74, label %129

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 12
  br label %76

76:                                               ; preds = %127, %74
  %77 = phi ptr [ %68, %74 ], [ %128, %127 ]
  %78 = phi i32 [ %71, %74 ], [ %124, %127 ]
  %79 = ptrtoint ptr %77 to i32
  %80 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %78
  %81 = load i32, ptr %80, align 4
  %82 = add i32 %81, %79
  %83 = inttoptr i32 %82 to ptr
  %84 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 1
  store i32 0, ptr %84, align 4
  %85 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 2
  tail call void @__mutex_init(ptr noundef %85, ptr noundef nonnull @.str.47, ptr noundef nonnull @__perf_event_init_context.__key) #27
  %86 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 3
  store volatile ptr %86, ptr %86, align 4
  %87 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 3, i32 1
  store ptr %86, ptr %87, align 4
  %88 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 4
  store ptr null, ptr %88, align 8
  %89 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 4, i32 1
  store i64 0, ptr %89, align 8
  %90 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 5
  store ptr null, ptr %90, align 8
  %91 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 5, i32 1
  store i64 0, ptr %91, align 8
  %92 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 6
  store volatile ptr %92, ptr %92, align 4
  %93 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 6, i32 1
  store ptr %92, ptr %93, align 4
  %94 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 7
  store volatile ptr %94, ptr %94, align 4
  %95 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 7, i32 1
  store ptr %94, ptr %95, align 4
  %96 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 8
  store volatile ptr %96, ptr %96, align 4
  %97 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 8, i32 1
  store ptr %96, ptr %97, align 4
  %98 = getelementptr inbounds %struct.perf_event_context, ptr %83, i32 0, i32 17
  store volatile i32 1, ptr %98, align 4
  store ptr %0, ptr %83, align 8
  %99 = lshr i32 %78, 5
  %100 = getelementptr i32, ptr @perf_online_mask, i32 %99
  %101 = load volatile i32, ptr %100, align 4
  %102 = and i32 %78, 31
  %103 = lshr i32 %101, %102
  %104 = and i32 %103, 1
  %105 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 10
  store i32 %104, ptr %105, align 8
  %106 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 5
  %107 = load i32, ptr %30, align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %120, label %109

109:                                              ; preds = %76
  %110 = load i32, ptr %75, align 4
  %111 = sext i32 %110 to i64
  %112 = icmp eq i32 %110, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %109
  store i32 10, ptr %75, align 4
  br label %114

114:                                              ; preds = %113, %109
  %115 = phi i64 [ 10, %113 ], [ %111, %109 ]
  %116 = mul nsw i64 %115, 1000000
  %117 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 6
  store i64 %116, ptr %117, align 8
  %118 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 4
  store i32 0, ptr %118, align 4
  tail call void @hrtimer_init(ptr noundef %106, i32 noundef 1, i32 noundef 10) #27
  %119 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 5, i32 2
  store ptr @perf_mux_hrtimer_handler, ptr %119, align 8
  br label %120

120:                                              ; preds = %114, %76
  %121 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 11
  store i32 2, ptr %121, align 4
  %122 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 13
  %123 = getelementptr inbounds %struct.perf_cpu_context, ptr %83, i32 0, i32 12
  store ptr %122, ptr %123, align 8
  %124 = tail call i32 @cpumask_next(i32 noundef %78, ptr noundef nonnull @__cpu_possible_mask) #32
  %125 = load i32, ptr @nr_cpu_ids, align 4
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %127, label %129

127:                                              ; preds = %120
  %128 = load ptr, ptr %67, align 4
  br label %76

129:                                              ; preds = %120, %70, %61
  %130 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 24
  %131 = load ptr, ptr %130, align 4
  %132 = icmp eq ptr %131, null
  %133 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 14
  %134 = load ptr, ptr %133, align 4
  %135 = icmp eq ptr %134, null
  br i1 %132, label %136, label %143

136:                                              ; preds = %129
  br i1 %135, label %140, label %137

137:                                              ; preds = %136
  store ptr @perf_pmu_start_txn, ptr %130, align 4
  %138 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 25
  store ptr @perf_pmu_commit_txn, ptr %138, align 4
  %139 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 26
  store ptr @perf_pmu_cancel_txn, ptr %139, align 4
  br label %147

140:                                              ; preds = %136
  store ptr @perf_pmu_nop_txn, ptr %130, align 4
  %141 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 25
  store ptr @perf_pmu_nop_int, ptr %141, align 4
  %142 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 26
  store ptr @perf_pmu_nop_void, ptr %142, align 4
  br label %144

143:                                              ; preds = %129
  br i1 %135, label %144, label %147

144:                                              ; preds = %143, %140
  %145 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 14
  store ptr @perf_pmu_nop_void, ptr %145, align 4
  %146 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 15
  store ptr @perf_pmu_nop_void, ptr %146, align 4
  br label %147

147:                                              ; preds = %144, %143, %137
  %148 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 38
  %149 = load ptr, ptr %148, align 4
  %150 = icmp eq ptr %149, null
  br i1 %150, label %151, label %152

151:                                              ; preds = %147
  store ptr @perf_event_nop_int, ptr %148, align 4
  br label %152

152:                                              ; preds = %151, %147
  %153 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 27
  %154 = load ptr, ptr %153, align 4
  %155 = icmp eq ptr %154, null
  br i1 %155, label %156, label %157

156:                                              ; preds = %152
  store ptr @perf_event_idx_default, ptr %153, align 4
  br label %157

157:                                              ; preds = %156, %152
  %158 = icmp ne i32 %29, 1
  %159 = and i1 %9, %158
  br i1 %159, label %164, label %160

160:                                              ; preds = %157
  %161 = load ptr, ptr @pmus, align 4
  store ptr %161, ptr %0, align 4
  %162 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr @pmus, ptr %162, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !79
  store volatile ptr %0, ptr @pmus, align 4
  %163 = getelementptr inbounds %struct.list_head, ptr %161, i32 0, i32 1
  br label %167

164:                                              ; preds = %157
  %165 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @pmus, i32 0, i32 1), align 4
  store ptr @pmus, ptr %0, align 4
  %166 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %165, ptr %166, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !79
  store volatile ptr %0, ptr %165, align 4
  br label %167

167:                                              ; preds = %164, %160
  %168 = phi ptr [ getelementptr inbounds (%struct.list_head, ptr @pmus, i32 0, i32 1), %164 ], [ %163, %160 ]
  store ptr %0, ptr %168, align 4
  %169 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 10
  store volatile i32 0, ptr %169, align 4
  br label %170

170:                                              ; preds = %182, %167, %3
  %171 = phi i32 [ %183, %182 ], [ 0, %167 ], [ -12, %3 ]
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  ret i32 %171

172:                                              ; preds = %66
  %173 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 2
  %174 = load ptr, ptr %173, align 4
  tail call void @device_del(ptr noundef %174) #27
  %175 = load ptr, ptr %173, align 4
  tail call void @put_device(ptr noundef %175) #27
  br label %176

176:                                              ; preds = %172, %25
  %177 = phi i32 [ %26, %25 ], [ -12, %172 ]
  %178 = load i32, ptr %8, align 4
  %179 = icmp eq i32 %178, 1
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  %181 = tail call ptr @idr_remove(ptr noundef nonnull @pmu_idr, i32 noundef %178) #27
  br label %182

182:                                              ; preds = %180, %176, %13
  %183 = phi i32 [ %16, %13 ], [ %177, %180 ], [ %177, %176 ]
  %184 = load ptr, ptr %5, align 4
  tail call void @free_percpu(ptr noundef %184) #27
  br label %170
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu(i32 noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @pmu_dev_alloc(ptr noundef %0) unnamed_addr #0 {
  %2 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %3 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 472) #30
  %4 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 2
  store ptr %3, ptr %4, align 4
  %5 = icmp eq ptr %3, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 3
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 32
  store ptr %8, ptr %9, align 8
  tail call void @device_initialize(ptr noundef nonnull %3) #27
  %10 = load ptr, ptr %4, align 4
  %11 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 5
  %12 = load ptr, ptr %11, align 4
  %13 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %10, ptr noundef nonnull @.str.43, ptr noundef %12) #27
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %46

15:                                               ; preds = %6
  %16 = load ptr, ptr %4, align 4
  %17 = getelementptr inbounds %struct.device, ptr %16, i32 0, i32 8
  store ptr %0, ptr %17, align 8
  %18 = load ptr, ptr %4, align 4
  %19 = getelementptr inbounds %struct.device, ptr %18, i32 0, i32 5
  store ptr @pmu_bus, ptr %19, align 4
  %20 = load ptr, ptr %4, align 4
  %21 = getelementptr inbounds %struct.device, ptr %20, i32 0, i32 33
  store ptr @pmu_dev_release, ptr %21, align 4
  %22 = load ptr, ptr %4, align 4
  %23 = tail call i32 @device_add(ptr noundef %22) #27
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 13
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = load ptr, ptr %4, align 4
  %31 = tail call i32 @device_create_file(ptr noundef %30, ptr noundef nonnull @dev_attr_nr_addr_filters) #27
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %43

33:                                               ; preds = %29, %25
  %34 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 4
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = load ptr, ptr %4, align 4
  %39 = tail call i32 @sysfs_update_groups(ptr noundef %38, ptr noundef nonnull %35) #27
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %46, %37, %33, %1
  %42 = phi i32 [ %47, %46 ], [ 0, %37 ], [ -12, %1 ], [ 0, %33 ]
  ret i32 %42

43:                                               ; preds = %37, %29
  %44 = phi i32 [ %31, %29 ], [ %39, %37 ]
  %45 = load ptr, ptr %4, align 4
  tail call void @device_del(ptr noundef %45) #27
  br label %46

46:                                               ; preds = %43, %15, %6
  %47 = phi i32 [ %13, %6 ], [ %23, %15 ], [ %44, %43 ]
  %48 = load ptr, ptr %4, align 4
  tail call void @put_device(ptr noundef %48) #27
  br label %41
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_pmu_start_txn(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %4 = inttoptr i32 %3 to ptr
  %5 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %4) #19, !srcloc !11
  %6 = add i32 %5, ptrtoint (ptr @nop_txn_flags to i32)
  %7 = inttoptr i32 %6 to ptr
  store i32 %1, ptr %7, align 4
  %8 = icmp ult i32 %1, 2
  br i1 %8, label %9, label %24

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #19, !srcloc !11
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, ptr %17, align 4
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 15
  %23 = load ptr, ptr %22, align 4
  tail call void %23(ptr noundef %0) #27
  br label %24

24:                                               ; preds = %21, %9, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_pmu_commit_txn(ptr noundef %0) #0 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #19, !srcloc !11
  %5 = add i32 %4, ptrtoint (ptr @nop_txn_flags to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = load i32, ptr %6, align 4
  store i32 0, ptr %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %24

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #19, !srcloc !11
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, ptr %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 14
  %23 = load ptr, ptr %22, align 4
  tail call void %23(ptr noundef %0) #27
  br label %24

24:                                               ; preds = %21, %9, %1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_pmu_cancel_txn(ptr noundef %0) #0 {
  %2 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %3 = inttoptr i32 %2 to ptr
  %4 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %3) #19, !srcloc !11
  %5 = add i32 %4, ptrtoint (ptr @nop_txn_flags to i32)
  %6 = inttoptr i32 %5 to ptr
  %7 = load i32, ptr %6, align 4
  store i32 0, ptr %6, align 4
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %24

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #19, !srcloc !11
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, ptr %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 14
  %23 = load ptr, ptr %22, align 4
  tail call void %23(ptr noundef %0) #27
  br label %24

24:                                               ; preds = %21, %9, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal void @perf_pmu_nop_txn(ptr nocapture noundef %0, i32 noundef %1) #14 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @perf_pmu_nop_int(ptr nocapture noundef readnone %0) #14 {
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal void @perf_pmu_nop_void(ptr nocapture noundef %0) #14 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @perf_event_nop_int(ptr nocapture noundef readnone %0, i64 noundef %1) #14 {
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @perf_event_idx_default(ptr nocapture noundef readnone %0) #14 {
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_pmu_unregister(ptr nocapture noundef %0) #0 {
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  %2 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 4
  %4 = load ptr, ptr %0, align 4
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  store ptr %3, ptr %5, align 4
  store volatile ptr %4, ptr %3, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %2, align 4
  tail call void @synchronize_srcu(ptr noundef nonnull @pmus_srcu) #27
  tail call void @synchronize_rcu() #27
  %6 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 8
  %7 = load ptr, ptr %6, align 4
  tail call void @free_percpu(ptr noundef %7) #27
  %8 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 6
  %9 = load i32, ptr %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %1
  %12 = tail call ptr @idr_remove(ptr noundef nonnull @pmu_idr, i32 noundef %9) #27
  br label %13

13:                                               ; preds = %11, %1
  %14 = load i1, ptr @pmu_bus_running, align 4
  br i1 %14, label %15, label %26

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 13
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 2
  %21 = load ptr, ptr %20, align 4
  tail call void @device_remove_file(ptr noundef %21, ptr noundef nonnull @dev_attr_nr_addr_filters) #27
  br label %22

22:                                               ; preds = %19, %15
  %23 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 2
  %24 = load ptr, ptr %23, align 4
  tail call void @device_del(ptr noundef %24) #27
  %25 = load ptr, ptr %23, align 4
  tail call void @put_device(ptr noundef %25) #27
  br label %26

26:                                               ; preds = %22, %13
  %27 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 11
  %28 = load i32, ptr %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %32 = load ptr, ptr %31, align 4
  tail call void @free_percpu(ptr noundef %32) #27
  br label %33

33:                                               ; preds = %30, %26
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_srcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_remove_file(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__se_sys_perf_event_open(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.perf_event_attr, align 8
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(128) %6, i8 0, i32 128, i1 false) #27, !annotation !48
  %7 = icmp ult i32 %4, 16
  br i1 %7, label %8, label %1032

8:                                                ; preds = %5
  %9 = inttoptr i32 %0 to ptr
  %10 = call fastcc i32 @perf_copy_attr(ptr noundef %9, ptr noundef nonnull %6) #27
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %1032

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.perf_event_attr, ptr %6, i32 0, i32 6
  %14 = load i64, ptr %13, align 8
  %15 = and i64 %14, 32
  %16 = icmp eq i64 %15, 0
  %17 = load i32, ptr @sysctl_perf_event_paranoid, align 4
  %18 = icmp sgt i32 %17, 1
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %24

20:                                               ; preds = %12
  %21 = call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %23, label %24, label %1032

24:                                               ; preds = %22, %20, %12
  %25 = load i64, ptr %13, align 8
  %26 = and i64 %25, 268435456
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %31, label %32, label %1032

32:                                               ; preds = %30, %28, %24
  %33 = load i64, ptr %13, align 8
  %34 = and i64 %33, 1024
  %35 = icmp eq i64 %34, 0
  %36 = getelementptr inbounds %struct.perf_event_attr, ptr %6, i32 0, i32 3
  %37 = load i64, ptr %36, align 8
  br i1 %35, label %42, label %38

38:                                               ; preds = %32
  %39 = load i32, ptr @sysctl_perf_event_sample_rate, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp ugt i64 %37, %40
  br i1 %41, label %1032, label %44

42:                                               ; preds = %32
  %43 = icmp sgt i64 %37, -1
  br i1 %43, label %44, label %1032

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %struct.perf_event_attr, ptr %6, i32 0, i32 4
  %46 = load i64, ptr %45, align 8
  %47 = and i64 %46, 524288
  %48 = icmp ne i64 %47, 0
  %49 = load i32, ptr @sysctl_perf_event_paranoid, align 4
  %50 = icmp sgt i32 %49, 1
  %51 = select i1 %48, i1 %50, i1 false
  br i1 %51, label %52, label %56

52:                                               ; preds = %44
  %53 = call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %53, label %56, label %54

54:                                               ; preds = %52
  %55 = call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %55, label %56, label %1032

56:                                               ; preds = %54, %52, %44
  %57 = and i32 %4, 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = icmp eq i32 %1, -1
  %61 = icmp eq i32 %2, -1
  %62 = or i1 %60, %61
  br i1 %62, label %1032, label %63

63:                                               ; preds = %59, %56
  %64 = and i32 %4, 8
  %65 = icmp eq i32 %64, 0
  %66 = select i1 %65, i32 2, i32 524290
  %67 = call i32 @get_unused_fd_flags(i32 noundef %66) #27
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %1032, label %69

69:                                               ; preds = %63
  %70 = icmp eq i32 %3, -1
  br i1 %70, label %94, label %71

71:                                               ; preds = %69
  %72 = call i32 @__fdget(i32 noundef %3) #27, !noalias !80
  %73 = and i32 %72, -4
  %74 = inttoptr i32 %73 to ptr
  %75 = icmp eq i32 %73, 0
  br i1 %75, label %1030, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.file, ptr %74, i32 0, i32 3
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, @perf_fops
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = and i32 %72, 1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %1030, label %83

83:                                               ; preds = %80
  call void @fput(ptr noundef nonnull %74) #27
  br label %1030

84:                                               ; preds = %76
  %85 = getelementptr inbounds %struct.file, ptr %74, i32 0, i32 15
  %86 = load ptr, ptr %85, align 8
  %87 = and i32 %4, 2
  %88 = icmp eq i32 %87, 0
  %89 = select i1 %88, ptr null, ptr %86
  %90 = and i32 %4, 1
  %91 = icmp eq i32 %90, 0
  %92 = select i1 %91, ptr %86, ptr null
  %93 = and i32 %72, 1
  br label %94

94:                                               ; preds = %84, %69
  %95 = phi i32 [ 0, %69 ], [ %93, %84 ]
  %96 = phi ptr [ null, %69 ], [ %74, %84 ]
  %97 = phi ptr [ null, %69 ], [ %89, %84 ]
  %98 = phi ptr [ null, %69 ], [ %92, %84 ]
  %99 = icmp ne i32 %1, -1
  %100 = and i1 %99, %58
  br i1 %100, label %101, label %139

101:                                              ; preds = %94
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %102 = icmp eq i32 %1, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %101
  %104 = tail call ptr @llvm.thread.pointer() #27
  br label %107

105:                                              ; preds = %101
  %106 = call ptr @find_task_by_vpid(i32 noundef %1) #27
  br label %107

107:                                              ; preds = %105, %103
  %108 = phi ptr [ %106, %105 ], [ %104, %103 ]
  %109 = icmp eq ptr %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.task_struct, ptr %108, i32 0, i32 3
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %111) #27, !srcloc !19
  %112 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %111, ptr %111, i32 1, ptr elementtype(i32) %111) #27, !srcloc !32
  %113 = extractvalue { i32, i32, i32 } %112, 0
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %119, label %115, !prof !12

115:                                              ; preds = %110
  %116 = add i32 %113, 1
  %117 = or i32 %116, %113
  %118 = icmp sgt i32 %117, -1
  br i1 %118, label %122, label %119, !prof !23

119:                                              ; preds = %115, %110
  %120 = phi i32 [ 2, %110 ], [ 1, %115 ]
  call void @refcount_warn_saturate(ptr noundef %111, i32 noundef %120) #27
  br label %122

121:                                              ; preds = %107
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %124

122:                                              ; preds = %119, %115
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %123 = icmp ugt ptr %108, inttoptr (i32 -4096 to ptr)
  br i1 %123, label %124, label %127

124:                                              ; preds = %122, %121
  %125 = phi ptr [ inttoptr (i32 -3 to ptr), %121 ], [ %108, %122 ]
  %126 = ptrtoint ptr %125 to i32
  br label %1026

127:                                              ; preds = %122
  %128 = icmp ne ptr %98, null
  br i1 %128, label %129, label %136

129:                                              ; preds = %127
  %130 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 21, i32 6
  %131 = load i64, ptr %130, align 8
  %132 = load i64, ptr %13, align 8
  %133 = xor i64 %132, %131
  %134 = and i64 %133, 2
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %1015

136:                                              ; preds = %129, %127
  %137 = call fastcc ptr @perf_event_alloc(ptr noundef nonnull %6, i32 noundef %2, ptr noundef nonnull %108, ptr noundef %98, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef -1) #27
  %138 = icmp ugt ptr %137, inttoptr (i32 -4096 to ptr)
  br i1 %138, label %146, label %148

139:                                              ; preds = %94
  %140 = icmp ne ptr %98, null
  %141 = select i1 %58, i32 -1, i32 %1
  %142 = call fastcc ptr @perf_event_alloc(ptr noundef nonnull %6, i32 noundef %2, ptr noundef null, ptr noundef %98, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef %141) #27
  %143 = icmp ugt ptr %142, inttoptr (i32 -4096 to ptr)
  br i1 %143, label %144, label %148

144:                                              ; preds = %139
  %145 = ptrtoint ptr %142 to i32
  br label %1026

146:                                              ; preds = %136
  %147 = ptrtoint ptr %137 to i32
  br label %1015

148:                                              ; preds = %139, %136
  %149 = phi ptr [ %142, %139 ], [ %137, %136 ]
  %150 = phi ptr [ null, %139 ], [ %108, %136 ]
  %151 = phi i1 [ %140, %139 ], [ %128, %136 ]
  %152 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 3
  %153 = load i64, ptr %152, align 8
  %154 = icmp eq i64 %153, 0
  %155 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 12
  %156 = load ptr, ptr %155, align 8
  br i1 %154, label %162, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %struct.pmu, ptr %156, i32 0, i32 7
  %159 = load i32, ptr %158, align 4
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %999

162:                                              ; preds = %157, %148
  %163 = load i64, ptr %13, align 8
  %164 = and i64 %163, 33554432
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %struct.perf_event_attr, ptr %6, i32 0, i32 14
  %168 = load i32, ptr %167, align 4
  switch i32 %168, label %999 [
    i32 1, label %179
    i32 4, label %169
    i32 0, label %172
    i32 7, label %170
    i32 11, label %171
  ]

169:                                              ; preds = %166
  br label %179

170:                                              ; preds = %166
  br label %172

171:                                              ; preds = %166
  br label %172

172:                                              ; preds = %171, %170, %166
  %173 = phi ptr [ @ktime_get_boottime_ns, %170 ], [ @ktime_get_clocktai_ns, %171 ], [ @ktime_get_real_ns, %166 ]
  %174 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 59
  store ptr %173, ptr %174, align 8
  %175 = getelementptr inbounds %struct.pmu, ptr %156, i32 0, i32 7
  %176 = load i32, ptr %175, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %999, label %182

179:                                              ; preds = %169, %166
  %180 = phi ptr [ @ktime_get_raw_fast_ns, %169 ], [ @ktime_get_mono_fast_ns, %166 ]
  %181 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 59
  store ptr %180, ptr %181, align 8
  br label %182

182:                                              ; preds = %179, %172, %162
  %183 = getelementptr inbounds %struct.pmu, ptr %156, i32 0, i32 11
  %184 = load i32, ptr %183, align 4
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %190

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 9
  %188 = load i32, ptr %187, align 4
  %189 = or i32 %188, 1
  store i32 %189, ptr %187, align 4
  br label %190

190:                                              ; preds = %186, %182
  br i1 %151, label %191, label %219

191:                                              ; preds = %190
  %192 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 9
  %193 = load i32, ptr %192, align 4
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 26
  %198 = load ptr, ptr %197, align 8
  %199 = load ptr, ptr %198, align 8
  %200 = getelementptr inbounds %struct.pmu, ptr %199, i32 0, i32 11
  %201 = load i32, ptr %200, align 4
  %202 = icmp eq i32 %201, 1
  %203 = select i1 %202, ptr %156, ptr %199
  br label %214

204:                                              ; preds = %191
  %205 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 9
  %206 = load i32, ptr %205, align 4
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %204
  %210 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 10
  %211 = load i32, ptr %210, align 8
  %212 = and i32 %211, 1
  %213 = icmp eq i32 %212, 0
  br label %214

214:                                              ; preds = %209, %204, %196
  %215 = phi i1 [ true, %204 ], [ %213, %209 ], [ true, %196 ]
  %216 = phi ptr [ %156, %204 ], [ %156, %209 ], [ %203, %196 ]
  %217 = call fastcc ptr @find_get_context(ptr noundef %216, ptr noundef %150, ptr noundef %149) #27
  %218 = icmp ugt ptr %217, inttoptr (i32 -4096 to ptr)
  br i1 %218, label %222, label %237

219:                                              ; preds = %190
  %220 = call fastcc ptr @find_get_context(ptr noundef %156, ptr noundef %150, ptr noundef %149) #27
  %221 = icmp ugt ptr %220, inttoptr (i32 -4096 to ptr)
  br i1 %221, label %222, label %269

222:                                              ; preds = %219, %214
  %223 = phi ptr [ %220, %219 ], [ %217, %214 ]
  %224 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %224) #27, !srcloc !19
  br label %225

225:                                              ; preds = %225, %222
  %226 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %224, ptr %224, i32 1, i32 0, ptr elementtype(i32) %224) #27, !srcloc !37
  %227 = extractvalue { i32, i32 } %226, 0
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %225

229:                                              ; preds = %225
  %230 = ptrtoint ptr %223 to i32
  %231 = extractvalue { i32, i32 } %226, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %235, label %233, !prof !23

233:                                              ; preds = %229
  %234 = load volatile i32, ptr %224, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %234, ptr noundef %149) #27
  br label %236

235:                                              ; preds = %229
  call fastcc void @_free_event(ptr noundef %149) #27
  br label %236

236:                                              ; preds = %235, %233
  br i1 %100, label %1015, label %1026

237:                                              ; preds = %214
  %238 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 11
  %239 = load ptr, ptr %238, align 4
  %240 = icmp eq ptr %239, %98
  br i1 %240, label %241, label %989

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 59
  %243 = load ptr, ptr %242, align 8
  %244 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 59
  %245 = load ptr, ptr %244, align 8
  %246 = icmp eq ptr %243, %245
  br i1 %246, label %247, label %989

247:                                              ; preds = %241
  %248 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 34
  %249 = load i32, ptr %248, align 4
  %250 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 34
  %251 = load i32, ptr %250, align 4
  %252 = icmp eq i32 %249, %251
  br i1 %252, label %253, label %989

253:                                              ; preds = %247
  %254 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 26
  %255 = load ptr, ptr %254, align 8
  %256 = getelementptr inbounds %struct.perf_event_context, ptr %255, i32 0, i32 18
  %257 = load ptr, ptr %256, align 4
  %258 = getelementptr inbounds %struct.perf_event_context, ptr %217, i32 0, i32 18
  %259 = load ptr, ptr %258, align 4
  %260 = icmp eq ptr %257, %259
  br i1 %260, label %261, label %989

261:                                              ; preds = %253
  %262 = xor i1 %215, true
  %263 = icmp eq ptr %255, %217
  %264 = select i1 %262, i1 true, i1 %263
  br i1 %264, label %265, label %989

265:                                              ; preds = %261
  %266 = load i64, ptr %13, align 8
  %267 = and i64 %266, 12
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %989

269:                                              ; preds = %265, %219
  %270 = phi i1 [ %215, %265 ], [ true, %219 ]
  %271 = phi ptr [ %217, %265 ], [ %220, %219 ]
  %272 = icmp eq ptr %97, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %269
  %274 = call fastcc i32 @perf_event_set_output(ptr noundef %149, ptr noundef nonnull %97) #27
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %989

276:                                              ; preds = %273, %269
  %277 = call ptr @anon_inode_getfile(ptr noundef nonnull @.str.48, ptr noundef nonnull @perf_fops, ptr noundef %149, i32 noundef %66) #27
  %278 = icmp ugt ptr %277, inttoptr (i32 -4096 to ptr)
  br i1 %278, label %279, label %281

279:                                              ; preds = %276
  %280 = ptrtoint ptr %277 to i32
  br label %989

281:                                              ; preds = %276
  br i1 %100, label %282, label %311

282:                                              ; preds = %281
  %283 = getelementptr inbounds %struct.task_struct, ptr %150, i32 0, i32 93
  %284 = load ptr, ptr %283, align 16
  %285 = getelementptr inbounds %struct.signal_struct, ptr %284, i32 0, i32 56
  %286 = call i32 @down_read_interruptible(ptr noundef %285) #27
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %985

288:                                              ; preds = %282
  %289 = call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %289, label %295, label %290

290:                                              ; preds = %288
  %291 = call zeroext i1 @capable(i32 noundef 21) #27
  %292 = load i64, ptr %13, align 8
  %293 = and i64 %292, 137438953472
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %307, label %299

295:                                              ; preds = %288
  %296 = load i64, ptr %13, align 8
  %297 = and i64 %296, 137438953472
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %311, label %299

299:                                              ; preds = %295, %290
  %300 = phi i1 [ true, %295 ], [ %291, %290 ]
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %301 = getelementptr inbounds %struct.task_struct, ptr %150, i32 0, i32 82
  %302 = load volatile ptr, ptr %301, align 4
  %303 = getelementptr inbounds %struct.cred, ptr %302, i32 0, i32 21
  %304 = load ptr, ptr %303, align 4
  %305 = call zeroext i1 @ns_capable(ptr noundef %304, i32 noundef 5) #27
  %306 = and i1 %300, %305
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br i1 %306, label %311, label %308

307:                                              ; preds = %290
  br i1 %291, label %311, label %308

308:                                              ; preds = %307, %299
  %309 = phi i32 [ 18, %299 ], [ 17, %307 ]
  %310 = call zeroext i1 @ptrace_may_access(ptr noundef %150, i32 noundef %309) #27
  br i1 %310, label %311, label %980

311:                                              ; preds = %308, %307, %299, %295, %281
  br i1 %270, label %435, label %312

312:                                              ; preds = %311
  %313 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 26
  %314 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  br label %315

315:                                              ; preds = %348, %312
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %316 = load volatile ptr, ptr %313, align 8
  %317 = getelementptr inbounds %struct.perf_event_context, ptr %316, i32 0, i32 17
  %318 = load volatile i32, ptr %317, align 4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %332, label %320

320:                                              ; preds = %330, %315
  %321 = phi i32 [ %328, %330 ], [ %318, %315 ]
  %322 = add i32 %321, 1
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %317) #27, !srcloc !19
  br label %323

323:                                              ; preds = %323, %320
  %324 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %317, ptr %317, i32 %321, i32 %322, ptr elementtype(i32) %317) #27, !srcloc !37
  %325 = extractvalue { i32, i32 } %324, 0
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %323

327:                                              ; preds = %323
  %328 = extractvalue { i32, i32 } %324, 1
  %329 = icmp eq i32 %328, %321
  br i1 %329, label %332, label %330, !prof !23

330:                                              ; preds = %327
  %331 = icmp eq i32 %328, 0
  br i1 %331, label %332, label %320

332:                                              ; preds = %330, %327, %315
  %333 = phi i32 [ 0, %315 ], [ %321, %327 ], [ 0, %330 ]
  %334 = add i32 %333, 1
  %335 = or i32 %334, %333
  %336 = icmp sgt i32 %335, -1
  br i1 %336, label %338, label %337, !prof !23

337:                                              ; preds = %332
  call void @refcount_warn_saturate(ptr noundef %317, i32 noundef 0) #27
  br label %338

338:                                              ; preds = %337, %332
  %339 = icmp eq i32 %333, 0
  call void asm sideeffect "", "~{memory}"() #27
  br i1 %339, label %348, label %340

340:                                              ; preds = %338
  %341 = getelementptr inbounds %struct.perf_event_context, ptr %316, i32 0, i32 2
  %342 = icmp ugt ptr %316, %271
  %343 = select i1 %342, ptr %341, ptr %314
  %344 = select i1 %342, ptr %314, ptr %341
  call void @mutex_lock(ptr noundef %344) #27
  call void @mutex_lock(ptr noundef %343) #27
  %345 = load ptr, ptr %313, align 8
  %346 = icmp eq ptr %345, %316
  br i1 %346, label %349, label %347

347:                                              ; preds = %340
  call void @mutex_unlock(ptr noundef %314) #27
  call void @mutex_unlock(ptr noundef %341) #27
  call fastcc void @put_ctx(ptr noundef %316) #27
  br label %348

348:                                              ; preds = %347, %338
  br label %315

349:                                              ; preds = %340
  %350 = getelementptr inbounds %struct.perf_event_context, ptr %316, i32 0, i32 18
  %351 = load ptr, ptr %350, align 4
  %352 = icmp eq ptr %351, inttoptr (i32 -1 to ptr)
  br i1 %352, label %973, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 10
  %355 = load i32, ptr %354, align 8
  %356 = and i32 %355, 1
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %361

358:                                              ; preds = %353
  %359 = icmp eq ptr %316, %271
  br i1 %359, label %360, label %973

360:                                              ; preds = %358
  call void @mutex_unlock(ptr noundef %314) #27
  call fastcc void @put_ctx(ptr noundef %271) #27
  br label %361

361:                                              ; preds = %360, %353
  %362 = phi i32 [ 1, %353 ], [ 0, %360 ]
  %363 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 12
  %364 = load ptr, ptr %363, align 8
  %365 = getelementptr inbounds %struct.pmu, ptr %364, i32 0, i32 7
  %366 = load i32, ptr %365, align 4
  %367 = and i32 %366, 16
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %392, label %369

369:                                              ; preds = %361
  %370 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 6
  %371 = load ptr, ptr %370, align 8
  %372 = icmp eq ptr %371, %370
  br i1 %372, label %392, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 34
  br label %375

375:                                              ; preds = %389, %373
  %376 = phi ptr [ %371, %373 ], [ %390, %389 ]
  %377 = getelementptr inbounds %struct.perf_event, ptr %376, i32 0, i32 12
  %378 = load ptr, ptr %377, align 8
  %379 = icmp eq ptr %378, %364
  br i1 %379, label %380, label %389

380:                                              ; preds = %375
  %381 = getelementptr inbounds %struct.perf_event, ptr %376, i32 0, i32 34
  %382 = load i32, ptr %381, align 4
  %383 = load i32, ptr %374, align 4
  %384 = icmp eq i32 %382, %383
  %385 = icmp eq i32 %382, -1
  %386 = or i1 %385, %384
  %387 = icmp eq i32 %383, -1
  %388 = or i1 %387, %386
  br i1 %388, label %964, label %389

389:                                              ; preds = %380, %375
  %390 = load ptr, ptr %376, align 8
  %391 = icmp eq ptr %390, %370
  br i1 %391, label %392, label %375

392:                                              ; preds = %389, %369, %361
  %393 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 11
  %394 = load ptr, ptr %393, align 4
  %395 = icmp eq ptr %394, %98
  br i1 %395, label %396, label %437

396:                                              ; preds = %392
  %397 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 1
  %398 = load ptr, ptr %397, align 8
  %399 = icmp eq ptr %398, %397
  br i1 %399, label %437, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 6
  br label %402

402:                                              ; preds = %432, %400
  %403 = phi ptr [ %398, %400 ], [ %433, %432 ]
  %404 = getelementptr i8, ptr %403, i32 80
  %405 = load ptr, ptr %404, align 8
  %406 = getelementptr inbounds %struct.pmu, ptr %405, i32 0, i32 7
  %407 = load i32, ptr %406, align 4
  %408 = and i32 %407, 16
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %432, label %410

410:                                              ; preds = %402
  %411 = load ptr, ptr %401, align 8
  %412 = icmp eq ptr %411, %401
  br i1 %412, label %432, label %413

413:                                              ; preds = %410
  %414 = getelementptr i8, ptr %403, i32 500
  br label %415

415:                                              ; preds = %429, %413
  %416 = phi ptr [ %411, %413 ], [ %430, %429 ]
  %417 = getelementptr inbounds %struct.perf_event, ptr %416, i32 0, i32 12
  %418 = load ptr, ptr %417, align 8
  %419 = icmp eq ptr %418, %405
  br i1 %419, label %420, label %429

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.perf_event, ptr %416, i32 0, i32 34
  %422 = load i32, ptr %421, align 4
  %423 = load i32, ptr %414, align 4
  %424 = icmp eq i32 %422, %423
  %425 = icmp eq i32 %422, -1
  %426 = or i1 %425, %424
  %427 = icmp eq i32 %423, -1
  %428 = or i1 %427, %426
  br i1 %428, label %964, label %429

429:                                              ; preds = %420, %415
  %430 = load ptr, ptr %416, align 8
  %431 = icmp eq ptr %430, %401
  br i1 %431, label %432, label %415

432:                                              ; preds = %429, %410, %402
  %433 = load ptr, ptr %403, align 8
  %434 = icmp eq ptr %433, %397
  br i1 %434, label %437, label %402

435:                                              ; preds = %311
  %436 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  call void @mutex_lock(ptr noundef %436) #27
  br label %437

437:                                              ; preds = %435, %432, %396, %392
  %438 = phi i32 [ %362, %392 ], [ 0, %435 ], [ %362, %396 ], [ %362, %432 ]
  %439 = phi ptr [ %316, %392 ], [ null, %435 ], [ %316, %396 ], [ %316, %432 ]
  %440 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 18
  %441 = load ptr, ptr %440, align 4
  %442 = icmp eq ptr %441, inttoptr (i32 -1 to ptr)
  br i1 %442, label %964, label %443

443:                                              ; preds = %437
  %444 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 11
  %445 = load ptr, ptr %444, align 4
  %446 = getelementptr inbounds %struct.perf_event, ptr %445, i32 0, i32 8
  %447 = load i32, ptr %446, align 8
  %448 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 5
  %449 = load i64, ptr %448, align 8
  %450 = trunc i64 %449 to i32
  %451 = shl i32 %450, 3
  %452 = and i32 %451, 8
  %453 = and i64 %449, 2
  %454 = icmp eq i64 %453, 0
  %455 = add nuw nsw i32 %452, 8
  %456 = select i1 %454, i32 %452, i32 %455
  %457 = and i64 %449, 4
  %458 = icmp eq i64 %457, 0
  %459 = select i1 %458, i32 8, i32 16
  %460 = and i64 %449, 8
  %461 = icmp eq i64 %460, 0
  %462 = add i32 %447, 2
  %463 = add nuw nsw i32 %456, 8
  %464 = select i1 %461, i32 %456, i32 %463
  %465 = select i1 %461, i32 1, i32 %462
  %466 = mul i32 %459, %465
  %467 = add i32 %464, %466
  %468 = trunc i32 %467 to i16
  %469 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 24
  store i16 %468, ptr %469, align 4
  %470 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 4
  %471 = load i64, ptr %470, align 8
  %472 = trunc i64 %471 to i16
  %473 = shl i16 %472, 3
  %474 = and i16 %473, 8
  %475 = and i64 %471, 8
  %476 = icmp eq i64 %475, 0
  %477 = add nuw nsw i16 %474, 8
  %478 = select i1 %476, i16 %474, i16 %477
  %479 = and i64 %471, 256
  %480 = icmp eq i64 %479, 0
  %481 = add nuw nsw i16 %478, 8
  %482 = select i1 %480, i16 %478, i16 %481
  %483 = and i64 %471, 16793600
  %484 = icmp eq i64 %483, 0
  %485 = add nuw nsw i16 %482, 8
  %486 = select i1 %484, i16 %482, i16 %485
  %487 = and i64 %471, 32768
  %488 = icmp eq i64 %487, 0
  %489 = add nuw nsw i16 %486, 8
  %490 = select i1 %488, i16 %486, i16 %489
  %491 = and i64 %471, 131072
  %492 = icmp eq i64 %491, 0
  %493 = add nuw nsw i16 %490, 8
  %494 = select i1 %492, i16 %490, i16 %493
  %495 = and i64 %471, 524288
  %496 = icmp eq i64 %495, 0
  %497 = add nuw nsw i16 %494, 8
  %498 = select i1 %496, i16 %494, i16 %497
  %499 = and i64 %471, 2097152
  %500 = icmp eq i64 %499, 0
  %501 = add nuw nsw i16 %498, 8
  %502 = select i1 %500, i16 %498, i16 %501
  %503 = and i64 %471, 4194304
  %504 = icmp eq i64 %503, 0
  %505 = add nuw nsw i16 %502, 8
  %506 = select i1 %504, i16 %502, i16 %505
  %507 = and i64 %471, 8388608
  %508 = icmp eq i64 %507, 0
  %509 = add nuw nsw i16 %506, 8
  %510 = select i1 %508, i16 %506, i16 %509
  %511 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 22
  store i16 %510, ptr %511, align 8
  %512 = shl i16 %472, 2
  %513 = and i16 %512, 8
  %514 = and i64 %471, 4
  %515 = icmp eq i64 %514, 0
  %516 = add nuw nsw i16 %513, 8
  %517 = select i1 %515, i16 %513, i16 %516
  %518 = and i64 %471, 65536
  %519 = icmp eq i64 %518, 0
  %520 = add nuw nsw i16 %517, 8
  %521 = select i1 %519, i16 %517, i16 %520
  %522 = and i64 %471, 64
  %523 = icmp eq i64 %522, 0
  %524 = add nuw nsw i16 %521, 8
  %525 = select i1 %523, i16 %521, i16 %524
  %526 = and i64 %471, 512
  %527 = icmp eq i64 %526, 0
  %528 = add nuw nsw i16 %525, 8
  %529 = select i1 %527, i16 %525, i16 %528
  %530 = and i64 %471, 128
  %531 = icmp eq i64 %530, 0
  %532 = add nuw nsw i16 %529, 8
  %533 = select i1 %531, i16 %529, i16 %532
  %534 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 23
  store i16 %533, ptr %534, align 2
  %535 = and i32 %467, 65535
  %536 = zext i16 %510 to i32
  %537 = zext i16 %533 to i32
  %538 = add nuw nsw i32 %535, %537
  %539 = add nuw nsw i32 %538, %536
  %540 = icmp ult i32 %539, 16376
  br i1 %540, label %541, label %964

541:                                              ; preds = %443
  br i1 %100, label %546, label %542

542:                                              ; preds = %541
  %543 = getelementptr inbounds %struct.perf_cpu_context, ptr %271, i32 0, i32 10
  %544 = load i32, ptr %543, align 8
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %969, label %546

546:                                              ; preds = %542, %541
  %547 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 6
  %548 = load i64, ptr %547, align 8
  %549 = and i64 %548, 2147483648
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %557

551:                                              ; preds = %546
  %552 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 19
  %553 = load i32, ptr %552, align 8
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %593, label %555

555:                                              ; preds = %551
  %556 = icmp eq ptr %98, null
  br i1 %556, label %964, label %580

557:                                              ; preds = %546
  %558 = icmp eq ptr %98, null
  br i1 %558, label %964, label %559

559:                                              ; preds = %557
  %560 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 21, i32 19
  %561 = load i32, ptr %560, align 8
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %964

563:                                              ; preds = %559
  %564 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 12
  %565 = load ptr, ptr %564, align 8
  %566 = getelementptr inbounds %struct.pmu, ptr %565, i32 0, i32 31
  %567 = load ptr, ptr %566, align 4
  %568 = icmp eq ptr %567, null
  br i1 %568, label %964, label %569

569:                                              ; preds = %563
  %570 = load ptr, ptr %155, align 8
  %571 = getelementptr inbounds %struct.pmu, ptr %570, i32 0, i32 36
  %572 = load ptr, ptr %571, align 4
  %573 = icmp eq ptr %572, null
  br i1 %573, label %964, label %574

574:                                              ; preds = %569
  %575 = call i32 %572(ptr noundef nonnull %98) #27
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %964, label %577

577:                                              ; preds = %574
  %578 = load i32, ptr %560, align 8
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %586, label %580

580:                                              ; preds = %577, %555
  %581 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 12
  %582 = load ptr, ptr %581, align 8
  %583 = getelementptr inbounds %struct.pmu, ptr %582, i32 0, i32 33
  %584 = load ptr, ptr %583, align 4
  %585 = icmp eq ptr %584, null
  br i1 %585, label %964, label %586

586:                                              ; preds = %580, %577
  %587 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %587) #27, !srcloc !19
  %588 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %587, ptr %587, i32 0, i32 1, ptr elementtype(i32) %587) #27, !srcloc !84
  %589 = extractvalue { i32, i32, i32 } %588, 0
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %964, label %591

591:                                              ; preds = %586
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  %592 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 54
  store ptr %98, ptr %592, align 4
  br label %593

593:                                              ; preds = %591, %551
  %594 = load ptr, ptr %155, align 8
  %595 = getelementptr inbounds %struct.pmu, ptr %594, i32 0, i32 7
  %596 = load i32, ptr %595, align 4
  %597 = and i32 %596, 16
  %598 = icmp eq i32 %597, 0
  br i1 %598, label %622, label %599

599:                                              ; preds = %593
  %600 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 6
  %601 = load ptr, ptr %600, align 8
  %602 = icmp eq ptr %601, %600
  br i1 %602, label %622, label %603

603:                                              ; preds = %599
  %604 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 34
  br label %605

605:                                              ; preds = %619, %603
  %606 = phi ptr [ %601, %603 ], [ %620, %619 ]
  %607 = getelementptr inbounds %struct.perf_event, ptr %606, i32 0, i32 12
  %608 = load ptr, ptr %607, align 8
  %609 = icmp eq ptr %608, %594
  br i1 %609, label %610, label %619

610:                                              ; preds = %605
  %611 = getelementptr inbounds %struct.perf_event, ptr %606, i32 0, i32 34
  %612 = load i32, ptr %611, align 4
  %613 = load i32, ptr %604, align 4
  %614 = icmp eq i32 %612, %613
  %615 = icmp eq i32 %612, -1
  %616 = or i1 %615, %614
  %617 = icmp eq i32 %613, -1
  %618 = or i1 %617, %616
  br i1 %618, label %964, label %619

619:                                              ; preds = %610, %605
  %620 = load ptr, ptr %606, align 8
  %621 = icmp eq ptr %620, %600
  br i1 %621, label %622, label %605

622:                                              ; preds = %619, %599, %593
  %623 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 22
  %624 = load ptr, ptr %623, align 8
  %625 = icmp ne ptr %624, null
  %626 = load i1, ptr @__do_sys_perf_event_open.__already_done, align 1
  %627 = xor i1 %626, true
  %628 = select i1 %625, i1 %627, i1 false
  br i1 %628, label %629, label %630, !prof !12

629:                                              ; preds = %622
  store i1 true, ptr @__do_sys_perf_event_open.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12447, i32 noundef 9, ptr noundef null) #27
  br label %630

630:                                              ; preds = %629, %622
  %631 = icmp eq i32 %438, 0
  br i1 %631, label %840, label %632

632:                                              ; preds = %630
  %633 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 26
  %634 = load ptr, ptr %633, align 8
  %635 = getelementptr inbounds %struct.perf_event_context, ptr %634, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %635) #27
  %636 = getelementptr inbounds %struct.perf_event_context, ptr %634, i32 0, i32 12
  %637 = load i32, ptr %636, align 4
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %651

639:                                              ; preds = %632
  %640 = load ptr, ptr %634, align 8
  %641 = getelementptr inbounds %struct.pmu, ptr %640, i32 0, i32 9
  %642 = load ptr, ptr %641, align 4
  %643 = ptrtoint ptr %642 to i32
  %644 = call i32 @llvm.read_register.i32(metadata !0) #27
  %645 = inttoptr i32 %644 to ptr
  %646 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %645) #19, !srcloc !11
  %647 = add i32 %646, %643
  %648 = inttoptr i32 %647 to ptr
  call void @__perf_remove_from_context(ptr noundef %98, ptr noundef %648, ptr noundef %634, ptr noundef null) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %649 = load i16, ptr %635, align 4
  %650 = add i16 %649, 1
  store i16 %650, ptr %635, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %654

651:                                              ; preds = %632
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %652 = load i16, ptr %635, align 4
  %653 = add i16 %652, 1
  store i16 %653, ptr %635, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  call fastcc void @event_function_call(ptr noundef %98, ptr noundef nonnull @__perf_remove_from_context, ptr noundef null) #27
  br label %654

654:                                              ; preds = %651, %639
  call fastcc void @put_ctx(ptr noundef %439) #27
  %655 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 11
  %656 = load ptr, ptr %655, align 4
  %657 = icmp eq ptr %656, %98
  br i1 %657, label %658, label %689

658:                                              ; preds = %654
  %659 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 1
  %660 = load ptr, ptr %659, align 8
  %661 = icmp eq ptr %660, %659
  br i1 %661, label %689, label %662

662:                                              ; preds = %686, %658
  %663 = phi ptr [ %687, %686 ], [ %660, %658 ]
  %664 = getelementptr i8, ptr %663, i32 -8
  %665 = getelementptr i8, ptr %663, i32 440
  %666 = load ptr, ptr %665, align 8
  %667 = getelementptr inbounds %struct.perf_event_context, ptr %666, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %667) #27
  %668 = getelementptr inbounds %struct.perf_event_context, ptr %666, i32 0, i32 12
  %669 = load i32, ptr %668, align 4
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %683

671:                                              ; preds = %662
  %672 = load ptr, ptr %666, align 8
  %673 = getelementptr inbounds %struct.pmu, ptr %672, i32 0, i32 9
  %674 = load ptr, ptr %673, align 4
  %675 = ptrtoint ptr %674 to i32
  %676 = call i32 @llvm.read_register.i32(metadata !0) #27
  %677 = inttoptr i32 %676 to ptr
  %678 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %677) #19, !srcloc !11
  %679 = add i32 %678, %675
  %680 = inttoptr i32 %679 to ptr
  call void @__perf_remove_from_context(ptr noundef %664, ptr noundef %680, ptr noundef %666, ptr noundef null) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %681 = load i16, ptr %667, align 4
  %682 = add i16 %681, 1
  store i16 %682, ptr %667, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %686

683:                                              ; preds = %662
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %684 = load i16, ptr %667, align 4
  %685 = add i16 %684, 1
  store i16 %685, ptr %667, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  call fastcc void @event_function_call(ptr noundef %664, ptr noundef nonnull @__perf_remove_from_context, ptr noundef null) #27
  br label %686

686:                                              ; preds = %683, %671
  call fastcc void @put_ctx(ptr noundef %439) #27
  %687 = load ptr, ptr %663, align 8
  %688 = icmp eq ptr %687, %659
  br i1 %688, label %689, label %662

689:                                              ; preds = %686, %658, %654
  call void @synchronize_rcu() #27
  %690 = load ptr, ptr %655, align 4
  %691 = icmp eq ptr %690, %98
  br i1 %691, label %692, label %721

692:                                              ; preds = %689
  %693 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 1
  %694 = load ptr, ptr %693, align 8
  %695 = icmp eq ptr %694, %693
  br i1 %695, label %721, label %696

696:                                              ; preds = %692
  %697 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 17
  br label %698

698:                                              ; preds = %718, %696
  %699 = phi ptr [ %719, %718 ], [ %694, %696 ]
  %700 = getelementptr i8, ptr %699, i32 -8
  %701 = getelementptr i8, ptr %699, i32 176
  %702 = load i64, ptr %701, align 8
  %703 = trunc i64 %702 to i32
  %704 = and i32 %703, 1
  %705 = sub nsw i32 0, %704
  %706 = getelementptr i8, ptr %699, i32 88
  store i32 %705, ptr %706, align 8
  %707 = getelementptr i8, ptr %699, i32 500
  %708 = load i32, ptr %707, align 4
  call fastcc void @perf_install_in_context(ptr noundef %271, ptr noundef %700, i32 noundef %708) #27
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %697) #27, !srcloc !19
  %709 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %697, ptr %697, i32 1, ptr elementtype(i32) %697) #27, !srcloc !32
  %710 = extractvalue { i32, i32, i32 } %709, 0
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %716, label %712, !prof !12

712:                                              ; preds = %698
  %713 = add i32 %710, 1
  %714 = or i32 %713, %710
  %715 = icmp sgt i32 %714, -1
  br i1 %715, label %718, label %716, !prof !23

716:                                              ; preds = %712, %698
  %717 = phi i32 [ 2, %698 ], [ 1, %712 ]
  call void @refcount_warn_saturate(ptr noundef %697, i32 noundef %717) #27
  br label %718

718:                                              ; preds = %716, %712
  %719 = load ptr, ptr %699, align 8
  %720 = icmp eq ptr %719, %693
  br i1 %720, label %721, label %698

721:                                              ; preds = %718, %692, %689
  %722 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 21, i32 6
  %723 = load i64, ptr %722, align 8
  %724 = trunc i64 %723 to i32
  %725 = and i32 %724, 1
  %726 = sub nsw i32 0, %725
  %727 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 14
  store i32 %726, ptr %727, align 8
  %728 = getelementptr inbounds %struct.perf_event, ptr %98, i32 0, i32 34
  %729 = load i32, ptr %728, align 4
  call fastcc void @perf_install_in_context(ptr noundef %271, ptr noundef %98, i32 noundef %729) #27
  %730 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 17
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %730) #27, !srcloc !19
  %731 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %730, ptr %730, i32 1, ptr elementtype(i32) %730) #27, !srcloc !32
  %732 = extractvalue { i32, i32, i32 } %731, 0
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %738, label %734, !prof !12

734:                                              ; preds = %721
  %735 = add i32 %732, 1
  %736 = or i32 %735, %732
  %737 = icmp sgt i32 %736, -1
  br i1 %737, label %740, label %738, !prof !23

738:                                              ; preds = %734, %721
  %739 = phi i32 [ 2, %721 ], [ 1, %734 ]
  call void @refcount_warn_saturate(ptr noundef %730, i32 noundef %739) #27
  br label %740

740:                                              ; preds = %738, %734
  %741 = load ptr, ptr %444, align 4
  %742 = getelementptr inbounds %struct.perf_event, ptr %741, i32 0, i32 8
  %743 = load i32, ptr %742, align 8
  %744 = load i64, ptr %448, align 8
  %745 = trunc i64 %744 to i32
  %746 = shl i32 %745, 3
  %747 = and i32 %746, 8
  %748 = and i64 %744, 2
  %749 = icmp eq i64 %748, 0
  %750 = add nuw nsw i32 %747, 8
  %751 = select i1 %749, i32 %747, i32 %750
  %752 = and i64 %744, 4
  %753 = icmp eq i64 %752, 0
  %754 = select i1 %753, i32 8, i32 16
  %755 = and i64 %744, 8
  %756 = icmp eq i64 %755, 0
  %757 = add i32 %743, 1
  %758 = add nuw nsw i32 %751, 8
  %759 = select i1 %756, i32 %751, i32 %758
  %760 = select i1 %756, i32 1, i32 %757
  %761 = mul i32 %754, %760
  %762 = add i32 %759, %761
  %763 = trunc i32 %762 to i16
  store i16 %763, ptr %469, align 4
  %764 = load i64, ptr %470, align 8
  %765 = trunc i64 %764 to i16
  %766 = shl i16 %765, 3
  %767 = and i16 %766, 8
  %768 = and i64 %764, 8
  %769 = icmp eq i64 %768, 0
  %770 = add nuw nsw i16 %767, 8
  %771 = select i1 %769, i16 %767, i16 %770
  %772 = and i64 %764, 256
  %773 = icmp eq i64 %772, 0
  %774 = add nuw nsw i16 %771, 8
  %775 = select i1 %773, i16 %771, i16 %774
  %776 = and i64 %764, 16793600
  %777 = icmp eq i64 %776, 0
  %778 = add nuw nsw i16 %775, 8
  %779 = select i1 %777, i16 %775, i16 %778
  %780 = and i64 %764, 16
  %781 = icmp eq i64 %780, 0
  %782 = select i1 %781, i16 0, i16 %763
  %783 = add i16 %779, %782
  %784 = and i64 %764, 32768
  %785 = icmp eq i64 %784, 0
  %786 = add i16 %783, 8
  %787 = select i1 %785, i16 %783, i16 %786
  %788 = and i64 %764, 131072
  %789 = icmp eq i64 %788, 0
  %790 = add i16 %787, 8
  %791 = select i1 %789, i16 %787, i16 %790
  %792 = and i64 %764, 524288
  %793 = icmp eq i64 %792, 0
  %794 = add i16 %791, 8
  %795 = select i1 %793, i16 %791, i16 %794
  %796 = and i64 %764, 2097152
  %797 = icmp eq i64 %796, 0
  %798 = add i16 %795, 8
  %799 = select i1 %797, i16 %795, i16 %798
  %800 = and i64 %764, 4194304
  %801 = icmp eq i64 %800, 0
  %802 = add i16 %799, 8
  %803 = select i1 %801, i16 %799, i16 %802
  %804 = and i64 %764, 8388608
  %805 = icmp eq i64 %804, 0
  %806 = add i16 %803, 8
  %807 = select i1 %805, i16 %803, i16 %806
  store i16 %807, ptr %511, align 8
  %808 = shl i16 %765, 2
  %809 = and i16 %808, 8
  %810 = and i64 %764, 4
  %811 = icmp eq i64 %810, 0
  %812 = add nuw nsw i16 %809, 8
  %813 = select i1 %811, i16 %809, i16 %812
  %814 = and i64 %764, 65536
  %815 = icmp eq i64 %814, 0
  %816 = add nuw nsw i16 %813, 8
  %817 = select i1 %815, i16 %813, i16 %816
  %818 = and i64 %764, 64
  %819 = icmp eq i64 %818, 0
  %820 = add nuw nsw i16 %817, 8
  %821 = select i1 %819, i16 %817, i16 %820
  %822 = and i64 %764, 512
  %823 = icmp eq i64 %822, 0
  %824 = add nuw nsw i16 %821, 8
  %825 = select i1 %823, i16 %821, i16 %824
  %826 = and i64 %764, 128
  %827 = icmp eq i64 %826, 0
  %828 = add nuw nsw i16 %825, 8
  %829 = select i1 %827, i16 %825, i16 %828
  store i16 %829, ptr %534, align 2
  %830 = tail call ptr @llvm.thread.pointer() #27
  %831 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 36
  store ptr %830, ptr %831, align 8
  %832 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 34
  %833 = load i32, ptr %832, align 4
  call fastcc void @perf_install_in_context(ptr noundef %271, ptr noundef %149, i32 noundef %833) #27
  %834 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 1
  %835 = call i32 @_raw_spin_lock_irqsave(ptr noundef %834) #27
  %836 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 25
  %837 = load i32, ptr %836, align 8
  %838 = add i32 %837, -1
  store i32 %838, ptr %836, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %834, i32 noundef %835) #27
  %839 = getelementptr inbounds %struct.perf_event_context, ptr %439, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %839) #27
  call fastcc void @put_ctx(ptr noundef %439) #27
  br label %939

840:                                              ; preds = %630
  %841 = load ptr, ptr %444, align 4
  %842 = getelementptr inbounds %struct.perf_event, ptr %841, i32 0, i32 8
  %843 = load i32, ptr %842, align 8
  %844 = load i64, ptr %448, align 8
  %845 = trunc i64 %844 to i32
  %846 = shl i32 %845, 3
  %847 = and i32 %846, 8
  %848 = and i64 %844, 2
  %849 = icmp eq i64 %848, 0
  %850 = add nuw nsw i32 %847, 8
  %851 = select i1 %849, i32 %847, i32 %850
  %852 = and i64 %844, 4
  %853 = icmp eq i64 %852, 0
  %854 = select i1 %853, i32 8, i32 16
  %855 = and i64 %844, 8
  %856 = icmp eq i64 %855, 0
  %857 = add i32 %843, 1
  %858 = add nuw nsw i32 %851, 8
  %859 = select i1 %856, i32 %851, i32 %858
  %860 = select i1 %856, i32 1, i32 %857
  %861 = mul i32 %854, %860
  %862 = add i32 %859, %861
  %863 = trunc i32 %862 to i16
  store i16 %863, ptr %469, align 4
  %864 = load i64, ptr %470, align 8
  %865 = trunc i64 %864 to i16
  %866 = shl i16 %865, 3
  %867 = and i16 %866, 8
  %868 = and i64 %864, 8
  %869 = icmp eq i64 %868, 0
  %870 = add nuw nsw i16 %867, 8
  %871 = select i1 %869, i16 %867, i16 %870
  %872 = and i64 %864, 256
  %873 = icmp eq i64 %872, 0
  %874 = add nuw nsw i16 %871, 8
  %875 = select i1 %873, i16 %871, i16 %874
  %876 = and i64 %864, 16793600
  %877 = icmp eq i64 %876, 0
  %878 = add nuw nsw i16 %875, 8
  %879 = select i1 %877, i16 %875, i16 %878
  %880 = and i64 %864, 16
  %881 = icmp eq i64 %880, 0
  %882 = select i1 %881, i16 0, i16 %863
  %883 = add i16 %879, %882
  %884 = and i64 %864, 32768
  %885 = icmp eq i64 %884, 0
  %886 = add i16 %883, 8
  %887 = select i1 %885, i16 %883, i16 %886
  %888 = and i64 %864, 131072
  %889 = icmp eq i64 %888, 0
  %890 = add i16 %887, 8
  %891 = select i1 %889, i16 %887, i16 %890
  %892 = and i64 %864, 524288
  %893 = icmp eq i64 %892, 0
  %894 = add i16 %891, 8
  %895 = select i1 %893, i16 %891, i16 %894
  %896 = and i64 %864, 2097152
  %897 = icmp eq i64 %896, 0
  %898 = add i16 %895, 8
  %899 = select i1 %897, i16 %895, i16 %898
  %900 = and i64 %864, 4194304
  %901 = icmp eq i64 %900, 0
  %902 = add i16 %899, 8
  %903 = select i1 %901, i16 %899, i16 %902
  %904 = and i64 %864, 8388608
  %905 = icmp eq i64 %904, 0
  %906 = add i16 %903, 8
  %907 = select i1 %905, i16 %903, i16 %906
  store i16 %907, ptr %511, align 8
  %908 = shl i16 %865, 2
  %909 = and i16 %908, 8
  %910 = and i64 %864, 4
  %911 = icmp eq i64 %910, 0
  %912 = add nuw nsw i16 %909, 8
  %913 = select i1 %911, i16 %909, i16 %912
  %914 = and i64 %864, 65536
  %915 = icmp eq i64 %914, 0
  %916 = add nuw nsw i16 %913, 8
  %917 = select i1 %915, i16 %913, i16 %916
  %918 = and i64 %864, 64
  %919 = icmp eq i64 %918, 0
  %920 = add nuw nsw i16 %917, 8
  %921 = select i1 %919, i16 %917, i16 %920
  %922 = and i64 %864, 512
  %923 = icmp eq i64 %922, 0
  %924 = add nuw nsw i16 %921, 8
  %925 = select i1 %923, i16 %921, i16 %924
  %926 = and i64 %864, 128
  %927 = icmp eq i64 %926, 0
  %928 = add nuw nsw i16 %925, 8
  %929 = select i1 %927, i16 %925, i16 %928
  store i16 %929, ptr %534, align 2
  %930 = tail call ptr @llvm.thread.pointer() #27
  %931 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 36
  store ptr %930, ptr %931, align 8
  %932 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 34
  %933 = load i32, ptr %932, align 4
  call fastcc void @perf_install_in_context(ptr noundef %271, ptr noundef %149, i32 noundef %933) #27
  %934 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 1
  %935 = call i32 @_raw_spin_lock_irqsave(ptr noundef %934) #27
  %936 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 25
  %937 = load i32, ptr %936, align 8
  %938 = add i32 %937, -1
  store i32 %938, ptr %936, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %934, i32 noundef %935) #27
  br label %939

939:                                              ; preds = %840, %740
  %940 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %940) #27
  br i1 %100, label %941, label %953

941:                                              ; preds = %939
  %942 = getelementptr inbounds %struct.task_struct, ptr %150, i32 0, i32 93
  %943 = load ptr, ptr %942, align 16
  %944 = getelementptr inbounds %struct.signal_struct, ptr %943, i32 0, i32 56
  call void @up_read(ptr noundef %944) #27
  %945 = getelementptr inbounds %struct.task_struct, ptr %150, i32 0, i32 3
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %945) #27, !srcloc !19
  %946 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %945, ptr %945, i32 1, ptr elementtype(i32) %945) #27, !srcloc !42
  %947 = extractvalue { i32, i32, i32 } %946, 0
  %948 = icmp eq i32 %947, 1
  br i1 %948, label %952, label %949

949:                                              ; preds = %941
  %950 = icmp sgt i32 %947, 0
  br i1 %950, label %953, label %951, !prof !23

951:                                              ; preds = %949
  call void @refcount_warn_saturate(ptr noundef %945, i32 noundef 3) #27
  br label %953

952:                                              ; preds = %941
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  call void @__put_task_struct(ptr noundef %150) #27
  br label %953

953:                                              ; preds = %952, %951, %949, %939
  %954 = tail call ptr @llvm.thread.pointer() #27
  %955 = getelementptr inbounds %struct.task_struct, ptr %954, i32 0, i32 131
  call void @mutex_lock(ptr noundef %955) #27
  %956 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 35
  %957 = getelementptr inbounds %struct.task_struct, ptr %954, i32 0, i32 132
  %958 = getelementptr inbounds %struct.task_struct, ptr %954, i32 0, i32 132, i32 1
  %959 = load ptr, ptr %958, align 4
  store ptr %956, ptr %958, align 4
  store ptr %957, ptr %956, align 4
  %960 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 35, i32 1
  store ptr %959, ptr %960, align 4
  store volatile ptr %956, ptr %959, align 4
  call void @mutex_unlock(ptr noundef %955) #27
  %961 = icmp eq i32 %95, 0
  br i1 %961, label %963, label %962

962:                                              ; preds = %953
  call void @fput(ptr noundef %96) #27
  br label %963

963:                                              ; preds = %962, %953
  call void @fd_install(i32 noundef %67, ptr noundef %277) #27
  br label %1032

964:                                              ; preds = %610, %586, %580, %574, %569, %563, %559, %557, %555, %443, %437, %420, %380
  %965 = phi i32 [ -3, %437 ], [ -7, %443 ], [ -22, %555 ], [ -22, %559 ], [ -22, %574 ], [ -22, %580 ], [ -22, %586 ], [ -22, %563 ], [ -22, %569 ], [ -22, %557 ], [ -16, %610 ], [ -16, %420 ], [ -16, %380 ]
  %966 = phi i32 [ %438, %437 ], [ %438, %443 ], [ %438, %555 ], [ %438, %559 ], [ %438, %574 ], [ %438, %580 ], [ %438, %586 ], [ %438, %563 ], [ %438, %569 ], [ %438, %557 ], [ %438, %610 ], [ %362, %420 ], [ %362, %380 ]
  %967 = phi ptr [ %439, %437 ], [ %439, %443 ], [ %439, %555 ], [ %439, %559 ], [ %439, %574 ], [ %439, %580 ], [ %439, %586 ], [ %439, %563 ], [ %439, %569 ], [ %439, %557 ], [ %439, %610 ], [ %316, %420 ], [ %316, %380 ]
  %968 = icmp eq i32 %966, 0
  br i1 %968, label %978, label %973

969:                                              ; preds = %542
  %970 = icmp eq i32 %438, 0
  br i1 %970, label %971, label %973

971:                                              ; preds = %969
  %972 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %972) #27
  br label %985

973:                                              ; preds = %969, %964, %358, %349
  %974 = phi ptr [ %967, %964 ], [ %316, %358 ], [ %316, %349 ], [ %439, %969 ]
  %975 = phi i32 [ %965, %964 ], [ -22, %358 ], [ -3, %349 ], [ -19, %969 ]
  %976 = getelementptr inbounds %struct.perf_event_context, ptr %974, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %976) #27
  call fastcc void @put_ctx(ptr noundef %974) #27
  %977 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %977) #27
  br i1 %100, label %980, label %985

978:                                              ; preds = %964
  %979 = getelementptr inbounds %struct.perf_event_context, ptr %271, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %979) #27
  br i1 %100, label %980, label %985

980:                                              ; preds = %978, %973, %308
  %981 = phi i32 [ %965, %978 ], [ -13, %308 ], [ %975, %973 ]
  %982 = getelementptr inbounds %struct.task_struct, ptr %150, i32 0, i32 93
  %983 = load ptr, ptr %982, align 16
  %984 = getelementptr inbounds %struct.signal_struct, ptr %983, i32 0, i32 56
  call void @up_read(ptr noundef %984) #27
  br label %985

985:                                              ; preds = %980, %978, %973, %971, %282
  %986 = phi i1 [ true, %282 ], [ true, %980 ], [ false, %978 ], [ false, %973 ], [ false, %971 ]
  %987 = phi i32 [ %286, %282 ], [ %981, %980 ], [ %965, %978 ], [ %975, %973 ], [ -19, %971 ]
  call void @fput(ptr noundef %277) #27
  %988 = icmp eq ptr %277, null
  br label %989

989:                                              ; preds = %985, %279, %273, %265, %261, %253, %247, %241, %237
  %990 = phi i1 [ %100, %237 ], [ %100, %241 ], [ %100, %247 ], [ %100, %253 ], [ %100, %265 ], [ %100, %273 ], [ %100, %279 ], [ %986, %985 ], [ %100, %261 ]
  %991 = phi ptr [ %217, %237 ], [ %217, %241 ], [ %217, %247 ], [ %217, %253 ], [ %217, %265 ], [ %271, %273 ], [ %271, %279 ], [ %271, %985 ], [ %217, %261 ]
  %992 = phi i32 [ -22, %237 ], [ -22, %241 ], [ -22, %247 ], [ -22, %253 ], [ -22, %265 ], [ %274, %273 ], [ %280, %279 ], [ %987, %985 ], [ -22, %261 ]
  %993 = phi i1 [ true, %237 ], [ true, %241 ], [ true, %247 ], [ true, %253 ], [ true, %265 ], [ true, %273 ], [ true, %279 ], [ %988, %985 ], [ true, %261 ]
  %994 = getelementptr inbounds %struct.perf_event_context, ptr %991, i32 0, i32 1
  %995 = call i32 @_raw_spin_lock_irqsave(ptr noundef %994) #27
  %996 = getelementptr inbounds %struct.perf_event_context, ptr %991, i32 0, i32 25
  %997 = load i32, ptr %996, align 8
  %998 = add i32 %997, -1
  store i32 %998, ptr %996, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %994, i32 noundef %995) #27
  call fastcc void @put_ctx(ptr noundef %991) #27
  br i1 %993, label %999, label %1014

999:                                              ; preds = %989, %172, %166, %157
  %1000 = phi i1 [ %990, %989 ], [ %100, %157 ], [ %100, %166 ], [ %100, %172 ]
  %1001 = phi i32 [ %992, %989 ], [ -95, %157 ], [ -22, %166 ], [ -22, %172 ]
  %1002 = getelementptr inbounds %struct.perf_event, ptr %149, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %1002) #27, !srcloc !19
  br label %1003

1003:                                             ; preds = %1003, %999
  %1004 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %1002, ptr %1002, i32 1, i32 0, ptr elementtype(i32) %1002) #27, !srcloc !37
  %1005 = extractvalue { i32, i32 } %1004, 0
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1007, label %1003

1007:                                             ; preds = %1003
  %1008 = extractvalue { i32, i32 } %1004, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %1009 = icmp eq i32 %1008, 1
  br i1 %1009, label %1012, label %1010, !prof !23

1010:                                             ; preds = %1007
  %1011 = load volatile i32, ptr %1002, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %1011, ptr noundef %149) #27
  br label %1013

1012:                                             ; preds = %1007
  call fastcc void @_free_event(ptr noundef %149) #27
  br label %1013

1013:                                             ; preds = %1012, %1010
  br i1 %1000, label %1015, label %1026

1014:                                             ; preds = %989
  br i1 %990, label %1015, label %1026

1015:                                             ; preds = %1014, %1013, %236, %146, %129
  %1016 = phi i32 [ %147, %146 ], [ %992, %1014 ], [ %1001, %1013 ], [ %230, %236 ], [ -22, %129 ]
  %1017 = phi ptr [ %108, %146 ], [ %150, %1014 ], [ %150, %1013 ], [ %150, %236 ], [ %108, %129 ]
  %1018 = getelementptr inbounds %struct.task_struct, ptr %1017, i32 0, i32 3
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %1018) #27, !srcloc !19
  %1019 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1018, ptr %1018, i32 1, ptr elementtype(i32) %1018) #27, !srcloc !42
  %1020 = extractvalue { i32, i32, i32 } %1019, 0
  %1021 = icmp eq i32 %1020, 1
  br i1 %1021, label %1025, label %1022

1022:                                             ; preds = %1015
  %1023 = icmp sgt i32 %1020, 0
  br i1 %1023, label %1026, label %1024, !prof !23

1024:                                             ; preds = %1022
  call void @refcount_warn_saturate(ptr noundef %1018, i32 noundef 3) #27
  br label %1026

1025:                                             ; preds = %1015
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  call void @__put_task_struct(ptr noundef %1017) #27
  br label %1026

1026:                                             ; preds = %1025, %1024, %1022, %1014, %1013, %236, %144, %124
  %1027 = phi i32 [ %992, %1014 ], [ %126, %124 ], [ %1001, %1013 ], [ %145, %144 ], [ %230, %236 ], [ %1016, %1022 ], [ %1016, %1024 ], [ %1016, %1025 ]
  %1028 = icmp eq i32 %95, 0
  br i1 %1028, label %1030, label %1029

1029:                                             ; preds = %1026
  call void @fput(ptr noundef %96) #27
  br label %1030

1030:                                             ; preds = %1029, %1026, %83, %80, %71
  %1031 = phi i32 [ %1027, %1026 ], [ %1027, %1029 ], [ -9, %71 ], [ -9, %80 ], [ -9, %83 ]
  call void @put_unused_fd(i32 noundef %67) #27
  br label %1032

1032:                                             ; preds = %1030, %963, %63, %59, %54, %42, %38, %30, %22, %8, %5
  %1033 = phi i32 [ %1031, %1030 ], [ %67, %963 ], [ -22, %5 ], [ %10, %8 ], [ -13, %30 ], [ -22, %38 ], [ -22, %42 ], [ -22, %59 ], [ %67, %63 ], [ -13, %22 ], [ -13, %54 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %6) #27
  ret i32 %1033
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @perf_event_create_kernel_counter(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 2147483648
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %102

10:                                               ; preds = %5
  %11 = tail call fastcc ptr @perf_event_alloc(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef null, ptr noundef null, ptr noundef %3, ptr noundef %4, i32 noundef -1)
  %12 = icmp ugt ptr %11, inttoptr (i32 -4096 to ptr)
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = ptrtoint ptr %11 to i32
  br label %99

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 36
  store ptr inttoptr (i32 -1 to ptr), ptr %16, align 8
  %17 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 12
  %18 = load ptr, ptr %17, align 8
  %19 = tail call fastcc ptr @find_get_context(ptr noundef %18, ptr noundef %2, ptr noundef %11)
  %20 = icmp ugt ptr %19, inttoptr (i32 -4096 to ptr)
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = ptrtoint ptr %19 to i32
  br label %86

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 22
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  %27 = load i1, ptr @perf_event_create_kernel_counter.__already_done, align 1
  %28 = xor i1 %27, true
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %31, !prof !12

30:                                               ; preds = %23
  store i1 true, ptr @perf_event_create_kernel_counter.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12610, i32 noundef 9, ptr noundef null) #27
  br label %31

31:                                               ; preds = %30, %23
  %32 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %32) #27
  %33 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 18
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, inttoptr (i32 -1 to ptr)
  br i1 %35, label %79, label %36

36:                                               ; preds = %31
  %37 = icmp eq ptr %2, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.perf_cpu_context, ptr %19, i32 0, i32 10
  %40 = load i32, ptr %39, align 8
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %79, label %42

42:                                               ; preds = %38, %36
  %43 = load ptr, ptr %17, align 8
  %44 = getelementptr inbounds %struct.pmu, ptr %43, i32 0, i32 7
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %45, 16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %71, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 6
  %50 = load ptr, ptr %49, align 8
  %51 = icmp eq ptr %50, %49
  br i1 %51, label %71, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 34
  br label %54

54:                                               ; preds = %68, %52
  %55 = phi ptr [ %50, %52 ], [ %69, %68 ]
  %56 = getelementptr inbounds %struct.perf_event, ptr %55, i32 0, i32 12
  %57 = load ptr, ptr %56, align 8
  %58 = icmp eq ptr %57, %43
  br i1 %58, label %59, label %68

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.perf_event, ptr %55, i32 0, i32 34
  %61 = load i32, ptr %60, align 4
  %62 = load i32, ptr %53, align 4
  %63 = icmp eq i32 %61, %62
  %64 = icmp eq i32 %61, -1
  %65 = or i1 %64, %63
  %66 = icmp eq i32 %62, -1
  %67 = or i1 %66, %65
  br i1 %67, label %79, label %68

68:                                               ; preds = %59, %54
  %69 = load ptr, ptr %55, align 8
  %70 = icmp eq ptr %69, %49
  br i1 %70, label %71, label %54

71:                                               ; preds = %68, %48, %42
  %72 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 34
  %73 = load i32, ptr %72, align 4
  tail call fastcc void @perf_install_in_context(ptr noundef %19, ptr noundef %11, i32 noundef %73)
  %74 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 1
  %75 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %74) #27
  %76 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 25
  %77 = load i32, ptr %76, align 8
  %78 = add i32 %77, -1
  store i32 %78, ptr %76, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %74, i32 noundef %75) #27
  tail call void @mutex_unlock(ptr noundef %32) #27
  br label %102

79:                                               ; preds = %59, %38, %31
  %80 = phi i32 [ -19, %38 ], [ -3, %31 ], [ -16, %59 ]
  tail call void @mutex_unlock(ptr noundef %32) #27
  %81 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 1
  %82 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %81) #27
  %83 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 25
  %84 = load i32, ptr %83, align 8
  %85 = add i32 %84, -1
  store i32 %85, ptr %83, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %81, i32 noundef %82) #27
  tail call fastcc void @put_ctx(ptr noundef %19)
  br label %86

86:                                               ; preds = %79, %21
  %87 = phi i32 [ %22, %21 ], [ %80, %79 ]
  %88 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %88) #27, !srcloc !19
  br label %89

89:                                               ; preds = %89, %86
  %90 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %88, ptr %88, i32 1, i32 0, ptr elementtype(i32) %88) #27, !srcloc !37
  %91 = extractvalue { i32, i32 } %90, 0
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %89

93:                                               ; preds = %89
  %94 = extractvalue { i32, i32 } %90, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %98, label %96, !prof !23

96:                                               ; preds = %93
  %97 = load volatile i32, ptr %88, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %97, ptr noundef %11) #27
  br label %99

98:                                               ; preds = %93
  tail call fastcc void @_free_event(ptr noundef %11) #27
  br label %99

99:                                               ; preds = %98, %96, %13
  %100 = phi i32 [ %14, %13 ], [ %87, %96 ], [ %87, %98 ]
  %101 = inttoptr i32 %100 to ptr
  br label %102

102:                                              ; preds = %99, %71, %5
  %103 = phi ptr [ %101, %99 ], [ %11, %71 ], [ inttoptr (i32 -22 to ptr), %5 ]
  ret ptr %103
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @perf_event_alloc(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef %6, i32 noundef %7) unnamed_addr #0 {
  %9 = load i32, ptr @nr_cpu_ids, align 4
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = icmp eq ptr %2, null
  %13 = icmp ne i32 %1, -1
  %14 = or i1 %13, %12
  br i1 %14, label %323, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 6
  br label %24

17:                                               ; preds = %8
  %18 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 6
  %19 = load i64, ptr %18, align 8
  %20 = and i64 %19, 137438953472
  %21 = icmp eq i64 %20, 0
  %22 = icmp ne ptr %2, null
  %23 = or i1 %22, %21
  br i1 %23, label %24, label %323

24:                                               ; preds = %17, %15
  %25 = phi i1 [ true, %15 ], [ %22, %17 ]
  %26 = phi ptr [ %16, %15 ], [ %18, %17 ]
  %27 = load ptr, ptr @perf_event_cache, align 4
  %28 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %27, i32 noundef 3520) #27
  %29 = icmp eq ptr %28, null
  br i1 %29, label %323, label %30

30:                                               ; preds = %24
  %31 = icmp eq ptr %3, null
  %32 = select i1 %31, ptr %28, ptr %3
  %33 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 30
  tail call void @__mutex_init(ptr noundef %33, ptr noundef nonnull @.str.51, ptr noundef nonnull @perf_event_alloc.__key) #27
  %34 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 31
  store volatile ptr %34, ptr %34, align 4
  %35 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 31, i32 1
  store ptr %34, ptr %35, align 8
  store volatile ptr %28, ptr %28, align 8
  %36 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %28, ptr %36, align 4
  %37 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 1
  store volatile ptr %37, ptr %37, align 8
  %38 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 1, i32 1
  store ptr %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 2
  store volatile ptr %39, ptr %39, align 8
  %40 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 2, i32 1
  store ptr %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 3
  %42 = ptrtoint ptr %41 to i32
  store i32 %42, ptr %41, align 8
  %43 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 4
  store i64 0, ptr %43, align 8
  %44 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 40
  store volatile ptr %44, ptr %44, align 8
  %45 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 40, i32 1
  store ptr %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 7
  store volatile ptr %46, ptr %46, align 8
  %47 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 7, i32 1
  store ptr %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 51
  store volatile ptr %48, ptr %48, align 4
  %49 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 51, i32 0, i32 1
  store ptr %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 6
  store ptr null, ptr %50, align 8
  %51 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 6, i32 1
  store ptr null, ptr %51, align 4
  %52 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 43
  tail call void @__init_waitqueue_head(ptr noundef %52, ptr noundef nonnull @.str.53, ptr noundef nonnull @perf_event_alloc.__key.52) #27
  %53 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 47
  store i32 -1, ptr %53, align 8
  %54 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 49
  store ptr null, ptr %54, align 8
  %55 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 49, i32 0, i32 1
  store i32 0, ptr %55, align 4
  %56 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 49, i32 1
  store ptr @perf_pending_event, ptr %56, align 8
  %57 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 49, i32 2
  store ptr null, ptr %57, align 4
  %58 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 37
  tail call void @__mutex_init(ptr noundef %58, ptr noundef nonnull @.str.55, ptr noundef nonnull @perf_event_alloc.__key.54) #27
  %59 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 51, i32 1
  store i32 0, ptr %59, align 4
  %60 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 27
  store volatile i32 1, ptr %60, align 4
  %61 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 34
  store i32 %1, ptr %61, align 4
  %62 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 21
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(128) %62, ptr noundef align 8 dereferenceable(128) %0, i32 128, i1 false)
  %63 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 11
  store ptr %32, ptr %63, align 4
  %64 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 12
  store ptr null, ptr %64, align 8
  %65 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 33
  store i32 -1, ptr %65, align 8
  %66 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 32
  store ptr %4, ptr %66, align 4
  %67 = tail call ptr @llvm.thread.pointer() #27
  %68 = tail call ptr @task_active_pid_ns(ptr noundef %67) #27
  %69 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 57
  store ptr %68, ptr %69, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !74
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @perf_event_id) #27, !srcloc !19
  %70 = tail call { i64, i32 } asm sideeffect "@ atomic64_add_return\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr nonnull elementtype(i64) @perf_event_id, ptr nonnull @perf_event_id, i64 1, ptr nonnull elementtype(i64) @perf_event_id) #27, !srcloc !75
  %71 = extractvalue { i64, i32 } %70, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !76
  %72 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 58
  store i64 %71, ptr %72, align 8
  %73 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 14
  store i32 0, ptr %73, align 8
  %74 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 21, i32 6
  %75 = load i64, ptr %74, align 8
  %76 = and i64 %75, 137438953472
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %30
  %79 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 50
  store volatile i32 1, ptr %79, align 8
  br label %80

80:                                               ; preds = %78, %30
  br i1 %25, label %81, label %95

81:                                               ; preds = %80
  %82 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 15
  store i32 4, ptr %82, align 4
  %83 = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %83) #27, !srcloc !19
  %84 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %83, ptr %83, i32 1, ptr elementtype(i32) %83) #27, !srcloc !32
  %85 = extractvalue { i32, i32, i32 } %84, 0
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87, !prof !12

87:                                               ; preds = %81
  %88 = add i32 %85, 1
  %89 = or i32 %88, %85
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %93, label %91, !prof !23

91:                                               ; preds = %87, %81
  %92 = phi i32 [ 2, %81 ], [ 1, %87 ]
  tail call void @refcount_warn_saturate(ptr noundef %83, i32 noundef %92) #27
  br label %93

93:                                               ; preds = %91, %87
  %94 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 25, i32 1
  store ptr %2, ptr %94, align 8
  br label %95

95:                                               ; preds = %93, %80
  %96 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 59
  store ptr @local_clock, ptr %96, align 8
  %97 = icmp eq ptr %4, null
  br i1 %97, label %107, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 59
  %100 = load ptr, ptr %99, align 8
  store ptr %100, ptr %96, align 8
  %101 = icmp eq ptr %5, null
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 60
  %104 = load ptr, ptr %103, align 4
  %105 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 61
  %106 = load ptr, ptr %105, align 8
  br label %107

107:                                              ; preds = %102, %95
  %108 = phi ptr [ %106, %102 ], [ %6, %95 ]
  %109 = phi ptr [ %104, %102 ], [ %5, %95 ]
  %110 = icmp eq ptr %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %107, %98
  %112 = phi ptr [ %109, %107 ], [ %5, %98 ]
  %113 = phi ptr [ %108, %107 ], [ %6, %98 ]
  %114 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 60
  store ptr %112, ptr %114, align 4
  %115 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 61
  store ptr %113, ptr %115, align 8
  %116 = load i64, ptr %74, align 8
  %117 = trunc i64 %116 to i32
  br label %129

118:                                              ; preds = %107
  %119 = load i64, ptr %74, align 8
  %120 = and i64 %119, 134217728
  %121 = icmp eq i64 %120, 0
  %122 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 60
  br i1 %121, label %126, label %123

123:                                              ; preds = %118
  store ptr @perf_event_output_backward, ptr %122, align 4
  %124 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 61
  store ptr null, ptr %124, align 8
  %125 = trunc i64 %119 to i32
  br label %129

126:                                              ; preds = %118
  store ptr @perf_event_output_forward, ptr %122, align 4
  %127 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 61
  store ptr null, ptr %127, align 8
  %128 = trunc i64 %119 to i32
  br label %129

129:                                              ; preds = %126, %123, %111
  %130 = phi i32 [ %125, %123 ], [ %128, %126 ], [ %117, %111 ]
  %131 = and i32 %130, 1
  %132 = sub nsw i32 0, %131
  store i32 %132, ptr %73, align 8
  %133 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 3
  %134 = load i64, ptr %133, align 8
  %135 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 25, i32 6
  %136 = load i64, ptr %26, align 8
  %137 = and i64 %136, 1024
  %138 = icmp eq i64 %137, 0
  %139 = icmp eq i64 %134, 0
  %140 = select i1 %138, i1 true, i1 %139
  %141 = select i1 %140, i64 %134, i64 1
  store i64 %141, ptr %135, align 8
  %142 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 25, i32 7
  store i64 %141, ptr %142, align 8
  %143 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %143) #27, !srcloc !19
  %144 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %143, ptr %143, i64 %141) #27, !srcloc !29
  %145 = load i64, ptr %26, align 8
  %146 = and i64 %145, 2
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %129
  %149 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 4
  %150 = load i64, ptr %149, align 8
  %151 = and i64 %150, 16
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %306

153:                                              ; preds = %148, %129
  %154 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 21, i32 4
  %155 = load i64, ptr %154, align 8
  %156 = and i64 %155, 2048
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %153
  %159 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 21, i32 11
  store i64 0, ptr %159, align 8
  br label %160

160:                                              ; preds = %158, %153
  %161 = tail call i32 @__srcu_read_lock(ptr noundef nonnull @pmus_srcu) #27
  %162 = load ptr, ptr %66, align 4
  %163 = icmp eq ptr %162, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.perf_event, ptr %162, i32 0, i32 12
  %166 = load ptr, ptr %165, align 8
  %167 = icmp eq ptr %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %164
  %169 = tail call fastcc i32 @perf_try_init_event(ptr noundef nonnull %166, ptr noundef nonnull %28) #27
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %214, label %171

171:                                              ; preds = %168, %164, %160
  %172 = load i32, ptr %62, align 8
  switch i32 %172, label %181 [
    i32 3, label %173
    i32 0, label %173
  ]

173:                                              ; preds = %171, %171
  %174 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 21, i32 2
  %175 = load i64, ptr %174, align 8
  %176 = lshr i64 %175, 32
  %177 = trunc i64 %176 to i32
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %173
  %180 = and i64 %175, 4294967295
  store i64 %180, ptr %174, align 8
  br label %181

181:                                              ; preds = %179, %173, %171
  %182 = phi i32 [ %177, %179 ], [ %172, %171 ], [ 4, %173 ]
  %183 = phi i1 [ true, %179 ], [ false, %171 ], [ false, %173 ]
  br label %184

184:                                              ; preds = %200, %181
  %185 = phi i32 [ %182, %181 ], [ %201, %200 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %186 = tail call ptr @idr_find(ptr noundef nonnull @pmu_idr, i32 noundef %185) #27
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %187 = icmp eq ptr %186, null
  br i1 %187, label %206, label %188

188:                                              ; preds = %184
  %189 = load i32, ptr %62, align 8
  %190 = icmp ne i32 %189, %185
  %191 = icmp ne i32 %185, 4
  %192 = and i1 %191, %190
  br i1 %192, label %193, label %198

193:                                              ; preds = %188
  %194 = getelementptr inbounds %struct.pmu, ptr %186, i32 0, i32 7
  %195 = load i32, ptr %194, align 4
  %196 = and i32 %195, 512
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %214, label %198

198:                                              ; preds = %193, %188
  %199 = tail call fastcc i32 @perf_try_init_event(ptr noundef nonnull %186, ptr noundef %28) #27
  switch i32 %199, label %204 [
    i32 -2, label %200
    i32 0, label %214
  ]

200:                                              ; preds = %198
  %201 = load i32, ptr %62, align 8
  %202 = icmp eq i32 %201, %185
  %203 = or i1 %183, %202
  br i1 %203, label %204, label %184

204:                                              ; preds = %200, %198
  %205 = inttoptr i32 %199 to ptr
  br label %214

206:                                              ; preds = %210, %184
  %207 = phi ptr [ %208, %210 ], [ @pmus, %184 ]
  %208 = load volatile ptr, ptr %207, align 4
  %209 = icmp eq ptr %208, @pmus
  br i1 %209, label %214, label %210

210:                                              ; preds = %206
  %211 = tail call fastcc i32 @perf_try_init_event(ptr noundef %208, ptr noundef %28) #27
  switch i32 %211, label %212 [
    i32 0, label %214
    i32 -2, label %206
  ]

212:                                              ; preds = %210
  %213 = inttoptr i32 %211 to ptr
  br label %214

214:                                              ; preds = %212, %210, %206, %204, %198, %193, %168
  %215 = phi ptr [ %205, %204 ], [ %213, %212 ], [ %166, %168 ], [ %208, %210 ], [ inttoptr (i32 -2 to ptr), %206 ], [ %186, %198 ], [ inttoptr (i32 -2 to ptr), %193 ]
  %216 = icmp ugt i32 %161, 1
  %217 = load i1, ptr @srcu_read_unlock.__already_done, align 1
  %218 = xor i1 %217, true
  %219 = select i1 %216, i1 %218, i1 false
  br i1 %219, label %220, label %221, !prof !12

220:                                              ; preds = %214
  store i1 true, ptr @srcu_read_unlock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.56, i32 noundef 189, i32 noundef 9, ptr noundef null) #27
  br label %221

221:                                              ; preds = %220, %214
  tail call void @__srcu_read_unlock(ptr noundef nonnull @pmus_srcu, i32 noundef %161) #27
  %222 = icmp ugt ptr %215, inttoptr (i32 -4096 to ptr)
  br i1 %222, label %223, label %225

223:                                              ; preds = %221
  %224 = ptrtoint ptr %215 to i32
  br label %306

225:                                              ; preds = %221
  %226 = getelementptr inbounds %struct.pmu, ptr %215, i32 0, i32 11
  %227 = load i32, ptr %226, align 4
  %228 = icmp eq i32 %227, -1
  %229 = icmp ne i32 %7, -1
  %230 = and i1 %229, %228
  br i1 %230, label %297, label %231

231:                                              ; preds = %225
  %232 = load i64, ptr %74, align 8
  %233 = and i64 %232, 2147483648
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.pmu, ptr %215, i32 0, i32 7
  %237 = load i32, ptr %236, align 4
  %238 = and i32 %237, 256
  %239 = icmp eq i32 %238, 0
  %240 = or i1 %229, %239
  %241 = select i1 %239, i32 -95, i32 -22
  br i1 %240, label %297, label %243

242:                                              ; preds = %231
  br i1 %229, label %297, label %243

243:                                              ; preds = %242, %235
  %244 = tail call fastcc i32 @exclusive_event_init(ptr noundef nonnull %28)
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %297

246:                                              ; preds = %243
  %247 = load ptr, ptr %64, align 8
  %248 = getelementptr inbounds %struct.pmu, ptr %247, i32 0, i32 13
  %249 = load i32, ptr %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %278, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %struct.pmu, ptr %215, i32 0, i32 13
  %253 = load i32, ptr %252, align 4
  %254 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %253, i32 8) #27
  %255 = extractvalue { i32, i1 } %254, 1
  br i1 %255, label %256, label %258, !prof !12

256:                                              ; preds = %251
  %257 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 52
  store ptr null, ptr %257, align 4
  br label %295

258:                                              ; preds = %251
  %259 = extractvalue { i32, i1 } %254, 0
  %260 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %259, i32 noundef 3520) #31
  %261 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 52
  store ptr %260, ptr %261, align 4
  %262 = icmp eq ptr %260, null
  br i1 %262, label %295, label %263

263:                                              ; preds = %258
  %264 = load ptr, ptr %66, align 4
  %265 = icmp eq ptr %264, null
  br i1 %265, label %276, label %266

266:                                              ; preds = %263
  %267 = getelementptr inbounds %struct.perf_event, ptr %264, i32 0, i32 51, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %267) #27
  %268 = load ptr, ptr %261, align 4
  %269 = load ptr, ptr %66, align 4
  %270 = getelementptr inbounds %struct.perf_event, ptr %269, i32 0, i32 52
  %271 = load ptr, ptr %270, align 4
  %272 = load i32, ptr %252, align 4
  %273 = shl i32 %272, 3
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 4 %268, ptr align 4 %271, i32 %273, i1 false)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %274 = load i16, ptr %267, align 4
  %275 = add i16 %274, 1
  store i16 %275, ptr %267, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %276

276:                                              ; preds = %266, %263
  %277 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 53
  store i32 1, ptr %277, align 8
  br label %278

278:                                              ; preds = %276, %246
  %279 = load ptr, ptr %66, align 4
  %280 = icmp eq ptr %279, null
  br i1 %280, label %281, label %291

281:                                              ; preds = %278
  %282 = load i64, ptr %154, align 8
  %283 = and i64 %282, 32
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %291, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 17
  %287 = load i16, ptr %286, align 4
  %288 = zext i16 %287 to i32
  %289 = tail call i32 @get_callchain_buffers(i32 noundef %288) #27
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %285, %281, %278
  tail call fastcc void @account_event(ptr noundef nonnull %28)
  br label %323

292:                                              ; preds = %285
  %293 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 52
  %294 = load ptr, ptr %293, align 4
  tail call void @kfree(ptr noundef %294) #27
  br label %295

295:                                              ; preds = %292, %258, %256
  %296 = phi i32 [ %289, %292 ], [ -12, %258 ], [ -12, %256 ]
  tail call fastcc void @exclusive_event_destroy(ptr noundef nonnull %28)
  br label %297

297:                                              ; preds = %295, %243, %242, %235, %225
  %298 = phi i32 [ %244, %243 ], [ %296, %295 ], [ -22, %225 ], [ %241, %235 ], [ -22, %242 ]
  %299 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 55
  %300 = load ptr, ptr %299, align 8
  %301 = icmp eq ptr %300, null
  br i1 %301, label %303, label %302

302:                                              ; preds = %297
  tail call void %300(ptr noundef nonnull %28) #27
  br label %303

303:                                              ; preds = %302, %297
  %304 = getelementptr inbounds %struct.pmu, ptr %215, i32 0, i32 1
  %305 = load ptr, ptr %304, align 4
  tail call void @module_put(ptr noundef %305) #27
  br label %306

306:                                              ; preds = %303, %223, %148
  %307 = phi i32 [ -22, %148 ], [ %224, %223 ], [ %298, %303 ]
  %308 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 25, i32 1
  %309 = load ptr, ptr %308, align 8
  %310 = icmp eq ptr %309, null
  br i1 %310, label %320, label %311

311:                                              ; preds = %306
  %312 = getelementptr inbounds %struct.task_struct, ptr %309, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %312) #27, !srcloc !19
  %313 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %312, ptr %312, i32 1, ptr elementtype(i32) %312) #27, !srcloc !42
  %314 = extractvalue { i32, i32, i32 } %313, 0
  %315 = icmp eq i32 %314, 1
  br i1 %315, label %319, label %316

316:                                              ; preds = %311
  %317 = icmp sgt i32 %314, 0
  br i1 %317, label %320, label %318, !prof !23

318:                                              ; preds = %316
  tail call void @refcount_warn_saturate(ptr noundef %312, i32 noundef 3) #27
  br label %320

319:                                              ; preds = %311
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  tail call void @__put_task_struct(ptr noundef nonnull %309) #27
  br label %320

320:                                              ; preds = %319, %318, %316, %306
  %321 = load ptr, ptr @perf_event_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %321, ptr noundef nonnull %28) #27
  %322 = inttoptr i32 %307 to ptr
  br label %323

323:                                              ; preds = %320, %291, %24, %17, %11
  %324 = phi ptr [ %322, %320 ], [ %28, %291 ], [ inttoptr (i32 -22 to ptr), %11 ], [ inttoptr (i32 -22 to ptr), %17 ], [ inttoptr (i32 -12 to ptr), %24 ]
  ret ptr %324
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @find_get_context(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 0, ptr %4, align 4, !annotation !48
  %5 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 34
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq ptr %1, null
  br i1 %7, label %8, label %39

8:                                                ; preds = %3
  %9 = load i32, ptr @sysctl_perf_event_paranoid, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = tail call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %14, label %15, label %135

15:                                               ; preds = %13, %11, %8
  %16 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %17 = load ptr, ptr %16, align 4
  %18 = ptrtoint ptr %17 to i32
  %19 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %20 = load i32, ptr %19, align 4
  %21 = add i32 %20, %18
  %22 = inttoptr i32 %21 to ptr
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %23) #27, !srcloc !19
  %24 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %23, ptr %23, i32 1, ptr elementtype(i32) %23) #27, !srcloc !32
  %25 = extractvalue { i32, i32, i32 } %24, 0
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27, !prof !12

27:                                               ; preds = %15
  %28 = add i32 %25, 1
  %29 = or i32 %28, %25
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %33, label %31, !prof !23

31:                                               ; preds = %27, %15
  %32 = phi i32 [ 2, %15 ], [ 1, %27 ]
  tail call void @refcount_warn_saturate(ptr noundef %23, i32 noundef %32) #27
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 1
  %35 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %34) #27
  %36 = getelementptr inbounds %struct.perf_event_context, ptr %22, i32 0, i32 25
  %37 = load i32, ptr %36, align 8
  %38 = add i32 %37, 1
  store i32 %38, ptr %36, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %34, i32 noundef %35) #27
  br label %135

39:                                               ; preds = %3
  %40 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 11
  %41 = load i32, ptr %40, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %132, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 15
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %45, 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 29
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %132, label %52

52:                                               ; preds = %48
  %53 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef nonnull %50, i32 noundef 3520) #27
  %54 = icmp eq ptr %53, null
  br i1 %54, label %132, label %55

55:                                               ; preds = %52, %43
  %56 = phi ptr [ %53, %52 ], [ null, %43 ]
  %57 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 131
  %58 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 4
  %59 = getelementptr %struct.task_struct, ptr %1, i32 0, i32 130, i32 %41
  br label %60

60:                                               ; preds = %116, %55
  %61 = phi ptr [ %56, %55 ], [ null, %116 ]
  %62 = call fastcc ptr @perf_lock_task_context(ptr noundef nonnull %1, i32 noundef %41, ptr noundef nonnull %4)
  %63 = icmp eq ptr %62, null
  br i1 %63, label %87, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 22
  %66 = load ptr, ptr %65, align 8
  %67 = icmp eq ptr %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %64
  store ptr null, ptr %65, align 8
  br label %69

69:                                               ; preds = %68, %64
  %70 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 24
  %71 = load i64, ptr %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, ptr %70, align 8
  %73 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 25
  %74 = load i32, ptr %73, align 8
  %75 = add i32 %74, 1
  store i32 %75, ptr %73, align 8
  %76 = icmp eq ptr %61, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 26
  %79 = load ptr, ptr %78, align 4
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store ptr %61, ptr %78, align 4
  br label %82

82:                                               ; preds = %81, %77, %69
  %83 = phi ptr [ %61, %77 ], [ null, %81 ], [ null, %69 ]
  %84 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 1
  %85 = load i32, ptr %4, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %84, i32 noundef %85) #27
  br i1 %67, label %118, label %86

86:                                               ; preds = %82
  tail call fastcc void @put_ctx(ptr noundef nonnull %66)
  br label %118

87:                                               ; preds = %60
  %88 = tail call fastcc ptr @alloc_perf_context(ptr noundef %0, ptr noundef nonnull %1)
  %89 = icmp eq ptr %88, null
  br i1 %89, label %125, label %90

90:                                               ; preds = %87
  %91 = icmp eq ptr %61, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.perf_event_context, ptr %88, i32 0, i32 26
  store ptr %61, ptr %93, align 4
  br label %94

94:                                               ; preds = %92, %90
  tail call void @mutex_lock(ptr noundef %57) #27
  %95 = load i32, ptr %58, align 4
  %96 = and i32 %95, 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %116

98:                                               ; preds = %94
  %99 = load ptr, ptr %59, align 4
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %116

101:                                              ; preds = %98
  %102 = getelementptr inbounds %struct.perf_event_context, ptr %88, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %102) #27, !srcloc !19
  %103 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %102, ptr %102, i32 1, ptr elementtype(i32) %102) #27, !srcloc !32
  %104 = extractvalue { i32, i32, i32 } %103, 0
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %110, label %106, !prof !12

106:                                              ; preds = %101
  %107 = add i32 %104, 1
  %108 = or i32 %107, %104
  %109 = icmp sgt i32 %108, -1
  br i1 %109, label %112, label %110, !prof !23

110:                                              ; preds = %106, %101
  %111 = phi i32 [ 2, %101 ], [ 1, %106 ]
  tail call void @refcount_warn_saturate(ptr noundef %102, i32 noundef %111) #27
  br label %112

112:                                              ; preds = %110, %106
  %113 = getelementptr inbounds %struct.perf_event_context, ptr %88, i32 0, i32 25
  %114 = load i32, ptr %113, align 8
  %115 = add i32 %114, 1
  store i32 %115, ptr %113, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !86
  store volatile ptr %88, ptr %59, align 4
  tail call void @mutex_unlock(ptr noundef %57) #27
  br label %135

116:                                              ; preds = %98, %94
  %117 = phi i32 [ -11, %98 ], [ -3, %94 ]
  tail call void @mutex_unlock(ptr noundef %57) #27
  tail call fastcc void @put_ctx(ptr noundef nonnull %88)
  br i1 %97, label %60, label %132

118:                                              ; preds = %86, %82
  %119 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 29
  %120 = load ptr, ptr %119, align 4
  %121 = icmp ne ptr %120, null
  %122 = icmp ne ptr %83, null
  %123 = and i1 %122, %121
  br i1 %123, label %124, label %135

124:                                              ; preds = %118
  tail call void @kmem_cache_free(ptr noundef nonnull %120, ptr noundef nonnull %83) #27
  br label %135

125:                                              ; preds = %87
  %126 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 29
  %127 = load ptr, ptr %126, align 4
  %128 = icmp ne ptr %127, null
  %129 = icmp ne ptr %61, null
  %130 = and i1 %129, %128
  br i1 %130, label %131, label %132

131:                                              ; preds = %125
  tail call void @kmem_cache_free(ptr noundef nonnull %127, ptr noundef nonnull %61) #27
  br label %132

132:                                              ; preds = %131, %125, %116, %52, %48, %39
  %133 = phi i32 [ -12, %125 ], [ -12, %131 ], [ -12, %52 ], [ -22, %39 ], [ -12, %48 ], [ %117, %116 ]
  %134 = inttoptr i32 %133 to ptr
  br label %135

135:                                              ; preds = %132, %124, %118, %112, %33, %13
  %136 = phi ptr [ %134, %132 ], [ %22, %33 ], [ %88, %112 ], [ %62, %118 ], [ %62, %124 ], [ inttoptr (i32 -13 to ptr), %13 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  ret ptr %136
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_install_in_context(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.remote_function_call, align 4
  %5 = alloca %struct.remote_function_call, align 4
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 12
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 7
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %40, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 6
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, %15
  br i1 %17, label %40, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 34
  br label %20

20:                                               ; preds = %34, %18
  %21 = phi ptr [ %16, %18 ], [ %35, %34 ]
  %22 = getelementptr inbounds %struct.perf_event, ptr %21, i32 0, i32 12
  %23 = load ptr, ptr %22, align 8
  %24 = icmp eq ptr %23, %9
  br i1 %24, label %25, label %34

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.perf_event, ptr %21, i32 0, i32 34
  %27 = load i32, ptr %26, align 4
  %28 = load i32, ptr %19, align 4
  %29 = icmp eq i32 %27, %28
  %30 = icmp eq i32 %27, -1
  %31 = or i1 %30, %29
  %32 = icmp eq i32 %28, -1
  %33 = or i1 %32, %31
  br i1 %33, label %37, label %34

34:                                               ; preds = %25, %20
  %35 = load ptr, ptr %21, align 8
  %36 = icmp eq ptr %35, %15
  br i1 %36, label %40, label %20

37:                                               ; preds = %25
  %38 = load i1, ptr @perf_install_in_context.__already_done, align 1
  br i1 %38, label %40, label %39, !prof !23

39:                                               ; preds = %37
  store i1 true, ptr @perf_install_in_context.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2887, i32 noundef 9, ptr noundef null) #27
  br label %40

40:                                               ; preds = %39, %37, %34, %14, %3
  %41 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 34
  %42 = load i32, ptr %41, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  store i32 %2, ptr %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !87
  %46 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 26
  store volatile ptr %0, ptr %46, align 8
  %47 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 11
  %48 = load ptr, ptr %47, align 4
  %49 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 14
  %50 = load i32, ptr %49, align 8
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 14
  %54 = load i32, ptr %53, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi i32 [ %54, %52 ], [ %50, %45 ]
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %58, label %72

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 9
  %60 = load i32, ptr %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %63) #27
  %64 = load ptr, ptr %6, align 4
  %65 = icmp eq ptr %64, inttoptr (i32 -1 to ptr)
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %67 = load i16, ptr %63, align 4
  %68 = add i16 %67, 1
  store i16 %68, ptr %63, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %131

69:                                               ; preds = %62
  tail call fastcc void @add_event_to_ctx(ptr noundef %1, ptr noundef %0)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %70 = load i16, ptr %63, align 4
  %71 = add i16 %70, 1
  store i16 %71, ptr %63, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %131

72:                                               ; preds = %58, %55
  %73 = icmp eq ptr %7, null
  br i1 %73, label %74, label %79

74:                                               ; preds = %72
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #27
  %75 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 1
  store i32 0, ptr %5, align 4
  store ptr @__perf_install_in_context, ptr %75, align 4
  %76 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 2
  store ptr %1, ptr %76, align 4
  %77 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 3
  store i32 -6, ptr %77, align 4
  %78 = call i32 @smp_call_function_single(i32 noundef %2, ptr noundef nonnull @remote_function, ptr noundef nonnull %5, i32 noundef 1) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #27
  br label %131

79:                                               ; preds = %72
  %80 = icmp eq ptr %7, inttoptr (i32 -1 to ptr)
  %81 = load i1, ptr @perf_install_in_context.__already_done.57, align 1
  %82 = xor i1 %81, true
  %83 = select i1 %80, i1 %82, i1 false
  br i1 %83, label %84, label %85, !prof !12

84:                                               ; preds = %79
  store i1 true, ptr @perf_install_in_context.__already_done.57, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2928, i32 noundef 9, ptr noundef null) #27
  br label %85

85:                                               ; preds = %84, %79
  br i1 %80, label %131, label %86

86:                                               ; preds = %85
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !88
  %87 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 1
  %88 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 2
  %89 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 3
  %90 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  br label %91

91:                                               ; preds = %125, %86
  %92 = phi ptr [ %7, %86 ], [ %112, %125 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #27
  store ptr %92, ptr %4, align 4
  store ptr @__perf_install_in_context, ptr %87, align 4
  store ptr %1, ptr %88, align 4
  store i32 -11, ptr %89, align 4
  %93 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 2
  %94 = load volatile i32, ptr %93, align 8
  %95 = call i32 @smp_call_function_single(i32 noundef %94, ptr noundef nonnull @remote_function, ptr noundef nonnull %4, i32 noundef 1) #27
  %96 = icmp eq i32 %95, 0
  %97 = load i32, ptr %89, align 4
  %98 = select i1 %96, i32 %97, i32 %95
  %99 = icmp eq i32 %98, -11
  br i1 %99, label %100, label %108

100:                                              ; preds = %100, %91
  %101 = call i32 @__cond_resched() #27
  %102 = load volatile i32, ptr %93, align 8
  %103 = call i32 @smp_call_function_single(i32 noundef %102, ptr noundef nonnull @remote_function, ptr noundef nonnull %4, i32 noundef 1) #27
  %104 = icmp eq i32 %103, 0
  %105 = load i32, ptr %89, align 4
  %106 = select i1 %104, i32 %105, i32 %103
  %107 = icmp eq i32 %106, -11
  br i1 %107, label %100, label %108

108:                                              ; preds = %100, %91
  %109 = phi i32 [ %98, %91 ], [ %106, %100 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #27
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %131, label %111

111:                                              ; preds = %108
  call void @_raw_spin_lock_irq(ptr noundef %90) #27
  %112 = load ptr, ptr %6, align 4
  %113 = icmp eq ptr %112, inttoptr (i32 -1 to ptr)
  %114 = load i1, ptr @perf_install_in_context.__already_done.58, align 1
  %115 = xor i1 %114, true
  %116 = select i1 %113, i1 %115, i1 false
  br i1 %116, label %117, label %118, !prof !12

117:                                              ; preds = %111
  store i1 true, ptr @perf_install_in_context.__already_done.58, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2968, i32 noundef 9, ptr noundef null) #27
  br label %118

118:                                              ; preds = %117, %111
  br i1 %113, label %119, label %122

119:                                              ; preds = %118
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %120 = load i16, ptr %90, align 4
  %121 = add i16 %120, 1
  store i16 %121, ptr %90, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %131

122:                                              ; preds = %118
  %123 = call i32 @task_curr(ptr noundef %112) #27
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %122
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %126 = load i16, ptr %90, align 4
  %127 = add i16 %126, 1
  store i16 %127, ptr %90, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %91

128:                                              ; preds = %122
  call fastcc void @add_event_to_ctx(ptr noundef %1, ptr noundef %0)
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %129 = load i16, ptr %90, align 4
  %130 = add i16 %129, 1
  store i16 %130, ptr %90, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %131

131:                                              ; preds = %128, %119, %108, %85, %74, %69, %66
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_pmu_migrate_context(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store ptr %4, ptr %4, align 8
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  store ptr %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 9
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %1
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %10, %8
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %2
  %14 = load i32, ptr %13, align 4
  %15 = add i32 %14, %8
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 2
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 2
  %19 = icmp ult ptr %16, %12
  %20 = select i1 %19, ptr %17, ptr %18
  %21 = select i1 %19, ptr %18, ptr %17
  call void @mutex_lock(ptr noundef %21) #27
  call void @mutex_lock(ptr noundef %20) #27
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 6
  %23 = load ptr, ptr %22, align 8
  %24 = icmp eq ptr %23, %22
  br i1 %24, label %55, label %25

25:                                               ; preds = %49, %3
  %26 = phi ptr [ %27, %49 ], [ %23, %3 ]
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %struct.perf_event, ptr %26, i32 0, i32 26
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.perf_event_context, ptr %29, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %30) #27
  %31 = getelementptr inbounds %struct.perf_event_context, ptr %29, i32 0, i32 12
  %32 = load i32, ptr %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %25
  %35 = load ptr, ptr %29, align 8
  %36 = getelementptr inbounds %struct.pmu, ptr %35, i32 0, i32 9
  %37 = load ptr, ptr %36, align 4
  %38 = ptrtoint ptr %37 to i32
  %39 = call i32 @llvm.read_register.i32(metadata !0) #27
  %40 = inttoptr i32 %39 to ptr
  %41 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %40) #19, !srcloc !11
  %42 = add i32 %41, %38
  %43 = inttoptr i32 %42 to ptr
  call void @__perf_remove_from_context(ptr noundef %26, ptr noundef %43, ptr noundef %29, ptr noundef null) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %44 = load i16, ptr %30, align 4
  %45 = add i16 %44, 1
  store i16 %45, ptr %30, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %49

46:                                               ; preds = %25
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %47 = load i16, ptr %30, align 4
  %48 = add i16 %47, 1
  store i16 %48, ptr %30, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  call fastcc void @event_function_call(ptr noundef %26, ptr noundef nonnull @__perf_remove_from_context, ptr noundef null) #27
  br label %49

49:                                               ; preds = %46, %34
  call fastcc void @put_ctx(ptr noundef %12)
  %50 = getelementptr inbounds %struct.perf_event, ptr %26, i32 0, i32 5
  %51 = load ptr, ptr %4, align 8
  %52 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  store ptr %50, ptr %52, align 4
  store ptr %51, ptr %50, align 4
  %53 = getelementptr inbounds %struct.perf_event, ptr %26, i32 0, i32 5, i32 1
  store ptr %4, ptr %53, align 4
  store volatile ptr %50, ptr %4, align 8
  %54 = icmp eq ptr %27, %22
  br i1 %54, label %55, label %25

55:                                               ; preds = %49, %3
  call void @synchronize_rcu() #27
  %56 = load ptr, ptr %4, align 8
  %57 = icmp eq ptr %56, %4
  br i1 %57, label %115, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 17
  br label %60

60:                                               ; preds = %85, %58
  %61 = phi ptr [ %56, %58 ], [ %63, %85 ]
  %62 = getelementptr i8, ptr %61, i32 -48
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr i8, ptr %61, i32 36
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, %62
  br i1 %66, label %85, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.list_head, ptr %61, i32 0, i32 1
  %69 = load ptr, ptr %68, align 4
  %70 = getelementptr inbounds %struct.list_head, ptr %63, i32 0, i32 1
  store ptr %69, ptr %70, align 4
  store volatile ptr %63, ptr %69, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %61, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %68, align 4
  %71 = getelementptr i8, ptr %61, i32 48
  %72 = load i32, ptr %71, align 8
  %73 = icmp sgt i32 %72, -2
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  store i32 0, ptr %71, align 8
  br label %75

75:                                               ; preds = %74, %67
  call fastcc void @perf_install_in_context(ptr noundef %16, ptr noundef %62, i32 noundef %2)
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %59) #27, !srcloc !19
  %76 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %59, ptr %59, i32 1, ptr elementtype(i32) %59) #27, !srcloc !32
  %77 = extractvalue { i32, i32, i32 } %76, 0
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %79, !prof !12

79:                                               ; preds = %75
  %80 = add i32 %77, 1
  %81 = or i32 %80, %77
  %82 = icmp sgt i32 %81, -1
  br i1 %82, label %85, label %83, !prof !23

83:                                               ; preds = %79, %75
  %84 = phi i32 [ 2, %75 ], [ 1, %79 ]
  call void @refcount_warn_saturate(ptr noundef %59, i32 noundef %84) #27
  br label %85

85:                                               ; preds = %83, %79, %60
  %86 = icmp eq ptr %63, %4
  br i1 %86, label %87, label %60

87:                                               ; preds = %85
  %88 = load ptr, ptr %4, align 8
  %89 = icmp eq ptr %88, %4
  br i1 %89, label %115, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 17
  br label %92

92:                                               ; preds = %113, %90
  %93 = phi ptr [ %88, %90 ], [ %95, %113 ]
  %94 = getelementptr i8, ptr %93, i32 -48
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds %struct.list_head, ptr %93, i32 0, i32 1
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.list_head, ptr %95, i32 0, i32 1
  store ptr %97, ptr %98, align 4
  store volatile ptr %95, ptr %97, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %93, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %96, align 4
  %99 = getelementptr i8, ptr %93, i32 48
  %100 = load i32, ptr %99, align 8
  %101 = icmp sgt i32 %100, -2
  br i1 %101, label %102, label %103

102:                                              ; preds = %92
  store i32 0, ptr %99, align 8
  br label %103

103:                                              ; preds = %102, %92
  call fastcc void @perf_install_in_context(ptr noundef %16, ptr noundef %94, i32 noundef %2)
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %91) #27, !srcloc !19
  %104 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %91, ptr %91, i32 1, ptr elementtype(i32) %91) #27, !srcloc !32
  %105 = extractvalue { i32, i32, i32 } %104, 0
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107, !prof !12

107:                                              ; preds = %103
  %108 = add i32 %105, 1
  %109 = or i32 %108, %105
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %113, label %111, !prof !23

111:                                              ; preds = %107, %103
  %112 = phi i32 [ 2, %103 ], [ 1, %107 ]
  call void @refcount_warn_saturate(ptr noundef %91, i32 noundef %112) #27
  br label %113

113:                                              ; preds = %111, %107
  %114 = icmp eq ptr %95, %4
  br i1 %114, label %115, label %92

115:                                              ; preds = %113, %87, %55
  call void @mutex_unlock(ptr noundef %18) #27
  call void @mutex_unlock(ptr noundef %17) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_exit_task(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca %struct.perf_task_event, align 8
  %3 = alloca %struct.perf_task_event, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 131
  tail call void @mutex_lock(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 132
  %7 = load ptr, ptr %6, align 64
  %8 = icmp eq ptr %7, %6
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %1
  %10 = phi ptr [ %11, %9 ], [ %7, %1 ]
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %13, ptr %14, align 4
  store volatile ptr %11, ptr %13, align 4
  store volatile ptr %10, ptr %10, align 4
  store ptr %10, ptr %12, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !89
  %15 = getelementptr i8, ptr %10, i32 8
  store volatile ptr null, ptr %15, align 8
  %16 = icmp eq ptr %11, %6
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %1
  tail call void @mutex_unlock(ptr noundef %5) #27
  %18 = tail call ptr @llvm.thread.pointer() #27
  %19 = icmp ne ptr %18, %0
  %20 = getelementptr inbounds %struct.task_struct, ptr %18, i32 0, i32 3
  %21 = getelementptr inbounds i8, ptr %3, i32 16
  %22 = getelementptr inbounds i8, ptr %3, i32 4
  %23 = getelementptr inbounds i8, ptr %3, i32 8
  %24 = getelementptr inbounds i8, ptr %3, i32 12
  %25 = getelementptr inbounds i8, ptr %3, i32 14
  %26 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  br label %27

27:                                               ; preds = %156, %17
  %28 = phi i32 [ 0, %17 ], [ %157, %156 ]
  %29 = load i1, ptr @perf_event_exit_task_context.__already_done, align 1
  %30 = xor i1 %29, true
  %31 = select i1 %19, i1 %30, i1 false
  br i1 %31, label %32, label %33, !prof !12

32:                                               ; preds = %27
  store i1 true, ptr @perf_event_exit_task_context.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12798, i32 noundef 9, ptr noundef null) #27
  br label %33

33:                                               ; preds = %32, %27
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 0, ptr %4, align 4, !annotation !48
  %34 = call fastcc ptr @perf_lock_task_context(ptr noundef %0, i32 noundef %28, ptr noundef nonnull %4) #27
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %156

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 25
  %39 = load i32, ptr %38, align 8
  %40 = add i32 %39, 1
  store i32 %40, ptr %38, align 8
  %41 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 1
  %42 = load i32, ptr %4, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %41, i32 noundef %42) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %43 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 2
  call void @mutex_lock(ptr noundef %43) #27
  call void @_raw_spin_lock_irq(ptr noundef %41) #27
  %44 = load ptr, ptr %34, align 8
  %45 = getelementptr inbounds %struct.pmu, ptr %44, i32 0, i32 9
  %46 = load ptr, ptr %45, align 4
  %47 = ptrtoint ptr %46 to i32
  %48 = call i32 @llvm.read_register.i32(metadata !0) #27
  %49 = inttoptr i32 %48 to ptr
  %50 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %49) #19, !srcloc !11
  %51 = add i32 %50, %47
  %52 = inttoptr i32 %51 to ptr
  %53 = getelementptr inbounds %struct.perf_cpu_context, ptr %52, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8
  %55 = icmp eq ptr %54, null
  br i1 %55, label %64, label %56

56:                                               ; preds = %37
  %57 = icmp ne ptr %54, %34
  %58 = load i1, ptr @task_ctx_sched_out.__already_done, align 1
  %59 = xor i1 %58, true
  %60 = select i1 %57, i1 %59, i1 false
  br i1 %60, label %61, label %62, !prof !12

61:                                               ; preds = %56
  store i1 true, ptr @task_ctx_sched_out.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2726, i32 noundef 9, ptr noundef null) #27
  br label %62

62:                                               ; preds = %61, %56
  br i1 %57, label %64, label %63

63:                                               ; preds = %62
  call fastcc void @ctx_sched_out(ptr noundef nonnull %34, ptr noundef %52, i32 noundef 3) #27
  br label %64

64:                                               ; preds = %63, %62, %37
  %65 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 %28
  store volatile ptr null, ptr %65, align 4
  call fastcc void @put_ctx(ptr noundef nonnull %34) #27
  %66 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 18
  store volatile ptr inttoptr (i32 -1 to ptr), ptr %66, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %20) #27, !srcloc !19
  %67 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 1, ptr elementtype(i32) %20) #27, !srcloc !42
  %68 = extractvalue { i32, i32, i32 } %67, 0
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %73, label %70

70:                                               ; preds = %64
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %74, label %72, !prof !23

72:                                               ; preds = %70
  call void @refcount_warn_saturate(ptr noundef %20, i32 noundef 3) #27
  br label %74

73:                                               ; preds = %64
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  call void @__put_task_struct(ptr noundef %18) #27
  br label %74

74:                                               ; preds = %73, %72, %70
  %75 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 22
  %76 = load ptr, ptr %75, align 8
  %77 = icmp eq ptr %76, null
  br i1 %77, label %79, label %78

78:                                               ; preds = %74
  store ptr null, ptr %75, align 8
  br label %79

79:                                               ; preds = %78, %74
  %80 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 24
  %81 = load i64, ptr %80, align 8
  %82 = add i64 %81, 1
  store i64 %82, ptr %80, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %83 = load i16, ptr %41, align 4
  %84 = add i16 %83, 1
  store i16 %84, ptr %41, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br i1 %77, label %86, label %85

85:                                               ; preds = %79
  call fastcc void @put_ctx(ptr noundef nonnull %76) #27
  br label %86

86:                                               ; preds = %85, %79
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %3) #27
  %87 = load volatile i32, ptr @nr_comm_events, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %95

89:                                               ; preds = %86
  %90 = load volatile i32, ptr @nr_mmap_events, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = load volatile i32, ptr @nr_task_events, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %147, label %95

95:                                               ; preds = %92, %89, %86
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %21, i8 0, i64 24, i1 false) #27
  store ptr %0, ptr %3, align 8
  store ptr %34, ptr %22, align 4
  store i32 4, ptr %23, align 8
  store i16 0, ptr %24, align 4
  store i16 32, ptr %25, align 2
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !63
  %96 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 6
  %97 = load volatile ptr, ptr %96, align 8
  %98 = icmp eq ptr %97, %96
  br i1 %98, label %146, label %99

99:                                               ; preds = %143, %95
  %100 = phi ptr [ %144, %143 ], [ %97, %95 ]
  %101 = getelementptr inbounds %struct.perf_event, ptr %100, i32 0, i32 14
  %102 = load i32, ptr %101, align 8
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %143, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.perf_event, ptr %100, i32 0, i32 34
  %106 = load i32, ptr %105, align 4
  %107 = icmp eq i32 %106, -1
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = load i32, ptr %26, align 8
  %110 = icmp eq i32 %106, %109
  br i1 %110, label %111, label %143

111:                                              ; preds = %108, %104
  %112 = getelementptr inbounds %struct.perf_event, ptr %100, i32 0, i32 12
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds %struct.pmu, ptr %113, i32 0, i32 37
  %115 = load ptr, ptr %114, align 4
  %116 = icmp eq ptr %115, null
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = call i32 %115(ptr noundef %100) #27
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %117, %111
  %121 = getelementptr inbounds %struct.perf_event, ptr %100, i32 0, i32 11
  %122 = load ptr, ptr %121, align 4
  %123 = icmp eq ptr %122, %100
  br i1 %123, label %124, label %142

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.perf_event, ptr %100, i32 0, i32 1
  br label %126

126:                                              ; preds = %139, %124
  %127 = phi ptr [ %125, %124 ], [ %128, %139 ]
  %128 = load ptr, ptr %127, align 8
  %129 = icmp eq ptr %128, %125
  br i1 %129, label %142, label %130

130:                                              ; preds = %126
  %131 = getelementptr i8, ptr %128, i32 80
  %132 = load ptr, ptr %131, align 8
  %133 = getelementptr inbounds %struct.pmu, ptr %132, i32 0, i32 37
  %134 = load ptr, ptr %133, align 4
  %135 = icmp eq ptr %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = getelementptr i8, ptr %128, i32 -8
  %138 = call i32 %134(ptr noundef %137) #27
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ 1, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %126

142:                                              ; preds = %126, %120
  call void @perf_event_task_output(ptr noundef %100, ptr noundef nonnull %3) #27
  br label %143

143:                                              ; preds = %142, %139, %117, %108, %99
  %144 = load volatile ptr, ptr %100, align 8
  %145 = icmp eq ptr %144, %96
  br i1 %145, label %146, label %99

146:                                              ; preds = %143, %95
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !65
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %147

147:                                              ; preds = %146, %92
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %3) #27
  %148 = getelementptr inbounds %struct.perf_event_context, ptr %34, i32 0, i32 6
  %149 = load ptr, ptr %148, align 8
  %150 = icmp eq ptr %149, %148
  br i1 %150, label %155, label %151

151:                                              ; preds = %151, %147
  %152 = phi ptr [ %153, %151 ], [ %149, %147 ]
  %153 = load ptr, ptr %152, align 8
  call fastcc void @perf_event_exit_event(ptr noundef %152, ptr noundef nonnull %34) #27
  %154 = icmp eq ptr %153, %148
  br i1 %154, label %155, label %151

155:                                              ; preds = %151, %147
  call void @mutex_unlock(ptr noundef %43) #27
  call fastcc void @put_ctx(ptr noundef nonnull %34) #27
  br label %156

156:                                              ; preds = %155, %36
  %157 = add nuw nsw i32 %28, 1
  %158 = icmp eq i32 %157, 2
  br i1 %158, label %159, label %27

159:                                              ; preds = %156
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2) #27
  %160 = load volatile i32, ptr @nr_comm_events, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %159
  %163 = load volatile i32, ptr @nr_mmap_events, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %162
  %166 = load volatile i32, ptr @nr_task_events, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %174, label %168

168:                                              ; preds = %165, %162, %159
  %169 = getelementptr inbounds i8, ptr %2, i32 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %169, i8 0, i64 24, i1 false) #27
  store ptr %0, ptr %2, align 8
  %170 = getelementptr inbounds i8, ptr %2, i32 4
  store ptr null, ptr %170, align 4
  %171 = getelementptr inbounds i8, ptr %2, i32 8
  store i32 4, ptr %171, align 8
  %172 = getelementptr inbounds i8, ptr %2, i32 12
  store i16 0, ptr %172, align 4
  %173 = getelementptr inbounds i8, ptr %2, i32 14
  store i16 32, ptr %173, align 2
  call fastcc void @perf_iterate_sb(ptr noundef nonnull @perf_event_task_output, ptr noundef nonnull %2, ptr noundef null) #27
  br label %174

174:                                              ; preds = %168, %165
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_free_task(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca %struct.wait_bit_queue_entry, align 4
  %3 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 3
  %4 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %2, i32 0, i32 1
  br label %5

5:                                                ; preds = %81, %1
  %6 = phi i32 [ 0, %1 ], [ %82, %81 ]
  %7 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 %6
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %81, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 2
  call void @mutex_lock(ptr noundef %11) #27
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %12) #27
  store volatile ptr null, ptr %7, align 4
  %13 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 18
  store volatile ptr inttoptr (i32 -1 to ptr), ptr %13, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #27, !srcloc !19
  %14 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 1, ptr elementtype(i32) %3) #27, !srcloc !42
  %15 = extractvalue { i32, i32, i32 } %14, 0
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = icmp sgt i32 %15, 0
  br i1 %18, label %21, label %19, !prof !23

19:                                               ; preds = %17
  call void @refcount_warn_saturate(ptr noundef %3, i32 noundef 3) #27
  br label %21

20:                                               ; preds = %10
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  call void @__put_task_struct(ptr noundef %0) #27
  br label %21

21:                                               ; preds = %20, %19, %17
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %22 = load i16, ptr %12, align 4
  %23 = add i16 %22, 1
  store i16 %23, ptr %12, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 6
  %25 = load ptr, ptr %24, align 8
  %26 = icmp eq ptr %25, %24
  br i1 %26, label %66, label %27

27:                                               ; preds = %64, %21
  %28 = phi ptr [ %29, %64 ], [ %25, %21 ]
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 32
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  %33 = load i1, ptr @perf_free_event.__already_done, align 1
  %34 = xor i1 %33, true
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %37, !prof !12

36:                                               ; preds = %27
  store i1 true, ptr @perf_free_event.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12896, i32 noundef 9, ptr noundef null) #27
  br label %37

37:                                               ; preds = %36, %27
  br i1 %32, label %64, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.perf_event, ptr %31, i32 0, i32 30
  call void @mutex_lock(ptr noundef %39) #27
  %40 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 31
  %41 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 31, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = load ptr, ptr %40, align 4
  %44 = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  store ptr %42, ptr %44, align 4
  store volatile ptr %43, ptr %42, align 4
  store volatile ptr %40, ptr %40, align 4
  store ptr %40, ptr %41, align 4
  call void @mutex_unlock(ptr noundef %39) #27
  %45 = getelementptr inbounds %struct.perf_event, ptr %31, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %45) #27, !srcloc !19
  %46 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %45, ptr %45, i32 1, ptr elementtype(i32) %45) #27, !srcloc !34
  %47 = extractvalue { i32, i32 } %46, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %38
  call fastcc void @_free_event(ptr noundef nonnull %31) #27
  br label %50

50:                                               ; preds = %49, %38
  call void @_raw_spin_lock_irq(ptr noundef %12) #27
  call fastcc void @perf_group_detach(ptr noundef %28) #27
  call fastcc void @list_del_event(ptr noundef %28, ptr noundef nonnull %8) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %51 = load i16, ptr %12, align 4
  %52 = add i16 %51, 1
  store i16 %52, ptr %12, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  %53 = getelementptr inbounds %struct.perf_event, ptr %28, i32 0, i32 27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %53) #27, !srcloc !19
  br label %54

54:                                               ; preds = %54, %50
  %55 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %53, ptr %53, i32 1, i32 0, ptr elementtype(i32) %53) #27, !srcloc !37
  %56 = extractvalue { i32, i32 } %55, 0
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %54

58:                                               ; preds = %54
  %59 = extractvalue { i32, i32 } %55, 1
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %63, label %61, !prof !23

61:                                               ; preds = %58
  %62 = load volatile i32, ptr %53, align 4
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %62, ptr noundef %28) #27
  br label %64

63:                                               ; preds = %58
  call fastcc void @_free_event(ptr noundef %28) #27
  br label %64

64:                                               ; preds = %63, %61, %37
  %65 = icmp eq ptr %29, %24
  br i1 %65, label %66, label %27

66:                                               ; preds = %64, %21
  call void @mutex_unlock(ptr noundef %11) #27
  %67 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 17
  %68 = load volatile i32, ptr %67, align 4
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %80, label %70

70:                                               ; preds = %66
  %71 = call ptr @__var_waitqueue(ptr noundef %67) #27
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %2, i8 0, i32 32, i1 false), !annotation !48
  call void @init_wait_var_entry(ptr noundef nonnull %2, ptr noundef %67, i32 noundef 0) #27
  %72 = call i32 @prepare_to_wait_event(ptr noundef %71, ptr noundef %4, i32 noundef 2) #27
  %73 = load volatile i32, ptr %67, align 4
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %79, label %75

75:                                               ; preds = %75, %70
  call void @schedule() #27
  %76 = call i32 @prepare_to_wait_event(ptr noundef %71, ptr noundef %4, i32 noundef 2) #27
  %77 = load volatile i32, ptr %67, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %70
  call void @finish_wait(ptr noundef %71, ptr noundef %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #27
  br label %80

80:                                               ; preds = %79, %66
  call fastcc void @put_ctx(ptr noundef nonnull %8)
  br label %81

81:                                               ; preds = %80, %5
  %82 = add nuw nsw i32 %6, 1
  %83 = icmp eq i32 %82, 2
  br i1 %83, label %84, label %5

84:                                               ; preds = %81
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__var_waitqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_var_entry(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @perf_event_delayed_put(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 0
  %3 = load ptr, ptr %2, align 4
  %4 = icmp ne ptr %3, null
  %5 = load i1, ptr @perf_event_delayed_put.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %10, !prof !12

8:                                                ; preds = %1
  store i1 true, ptr @perf_event_delayed_put.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12972, i32 noundef 9, ptr noundef null) #27
  %9 = load i1, ptr @perf_event_delayed_put.__already_done, align 1
  br label %10

10:                                               ; preds = %8, %1
  %11 = phi i1 [ %9, %8 ], [ %5, %1 ]
  %12 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp ne ptr %13, null
  %15 = xor i1 %11, true
  %16 = select i1 %14, i1 %15, i1 false
  br i1 %16, label %17, label %18, !prof !12

17:                                               ; preds = %10
  store i1 true, ptr @perf_event_delayed_put.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 12972, i32 noundef 9, ptr noundef null) #27
  br label %18

18:                                               ; preds = %17, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @perf_event_get(i32 noundef %0) local_unnamed_addr #0 {
  %2 = tail call ptr @fget(i32 noundef %0) #27
  %3 = icmp eq ptr %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, @perf_fops
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @fput(ptr noundef nonnull %2) #27
  br label %9

9:                                                ; preds = %8, %4, %1
  %10 = phi ptr [ inttoptr (i32 -9 to ptr), %8 ], [ %2, %4 ], [ inttoptr (i32 -9 to ptr), %1 ]
  ret ptr %10
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @perf_get_event(ptr nocapture noundef readonly %0) local_unnamed_addr #10 {
  %2 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, @perf_fops
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %7 = load ptr, ptr %6, align 8
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi ptr [ %7, %5 ], [ inttoptr (i32 -22 to ptr), %1 ]
  ret ptr %9
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define dso_local ptr @perf_event_attrs(ptr noundef readnone %0) local_unnamed_addr #14 {
  %2 = icmp eq ptr %0, null
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %4 = select i1 %2, ptr inttoptr (i32 -22 to ptr), ptr %3
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_init_task(ptr noundef %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 130
  store i64 0, ptr %5, align 4
  %6 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 131
  tail call void @__mutex_init(ptr noundef %6, ptr noundef nonnull @.str.11, ptr noundef nonnull @perf_event_init_task.__key) #27
  %7 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 132
  store volatile ptr %7, ptr %7, align 4
  %8 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 132, i32 1
  store ptr %7, ptr %8, align 4
  %9 = tail call ptr @llvm.thread.pointer() #27
  br label %10

10:                                               ; preds = %104, %2
  %11 = phi i32 [ 0, %2 ], [ %105, %104 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 1, ptr %4, align 4
  %12 = getelementptr %struct.task_struct, ptr %9, i32 0, i32 130, i32 %11
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %96, label %15, !prof !23

15:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4, !annotation !48
  %16 = call fastcc ptr @perf_lock_task_context(ptr noundef %9, i32 noundef %11, ptr noundef nonnull %3) #27
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  br label %96

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 25
  %21 = load i32, ptr %20, align 8
  %22 = add i32 %21, 1
  store i32 %22, ptr %20, align 8
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 1
  %24 = load i32, ptr %3, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %23, i32 noundef %24) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #27
  %25 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %25) #27
  %26 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 4
  %27 = tail call ptr @rb_first(ptr noundef %26) #27
  %28 = icmp eq ptr %27, null
  %29 = getelementptr i8, ptr %27, i32 -24
  %30 = icmp eq ptr %29, null
  %31 = or i1 %28, %30
  br i1 %31, label %43, label %32

32:                                               ; preds = %36, %19
  %33 = phi ptr [ %40, %36 ], [ %29, %19 ]
  %34 = call fastcc i32 @inherit_task_group(ptr noundef nonnull %33, ptr noundef nonnull %16, ptr noundef %0, i32 noundef %11, i64 noundef %1, ptr noundef nonnull %4) #27
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %97

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.perf_event, ptr %33, i32 0, i32 3
  %38 = tail call ptr @rb_next(ptr noundef %37) #27
  %39 = icmp eq ptr %38, null
  %40 = getelementptr i8, ptr %38, i32 -24
  %41 = icmp eq ptr %40, null
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %32

43:                                               ; preds = %36, %19
  %44 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %23) #27
  %45 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 15
  store i32 1, ptr %45, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %23, i32 noundef %44) #27
  %46 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 5
  %47 = tail call ptr @rb_first(ptr noundef %46) #27
  %48 = icmp eq ptr %47, null
  %49 = getelementptr i8, ptr %47, i32 -24
  %50 = icmp eq ptr %49, null
  %51 = or i1 %48, %50
  br i1 %51, label %63, label %52

52:                                               ; preds = %56, %43
  %53 = phi ptr [ %60, %56 ], [ %49, %43 ]
  %54 = call fastcc i32 @inherit_task_group(ptr noundef nonnull %53, ptr noundef nonnull %16, ptr noundef %0, i32 noundef %11, i64 noundef %1, ptr noundef nonnull %4) #27
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %97

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.perf_event, ptr %53, i32 0, i32 3
  %58 = tail call ptr @rb_next(ptr noundef %57) #27
  %59 = icmp eq ptr %58, null
  %60 = getelementptr i8, ptr %58, i32 -24
  %61 = icmp eq ptr %60, null
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %52

63:                                               ; preds = %56, %43
  %64 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %23) #27
  store i32 0, ptr %45, align 8
  %65 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 %11
  %66 = load ptr, ptr %65, align 4
  %67 = icmp ne ptr %66, null
  %68 = load i32, ptr %4, align 4
  %69 = icmp ne i32 %68, 0
  %70 = select i1 %67, i1 %69, i1 false
  br i1 %70, label %71, label %95

71:                                               ; preds = %63
  %72 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 22
  %73 = load ptr, ptr %72, align 8
  %74 = icmp eq ptr %73, null
  %75 = getelementptr inbounds %struct.perf_event_context, ptr %66, i32 0, i32 22
  br i1 %74, label %78, label %76

76:                                               ; preds = %71
  store ptr %73, ptr %75, align 8
  %77 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 23
  br label %80

78:                                               ; preds = %71
  store ptr %16, ptr %75, align 8
  %79 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 24
  br label %80

80:                                               ; preds = %78, %76
  %81 = phi ptr [ %16, %78 ], [ %73, %76 ]
  %82 = phi ptr [ %79, %78 ], [ %77, %76 ]
  %83 = load i64, ptr %82, align 8
  %84 = getelementptr inbounds %struct.perf_event_context, ptr %66, i32 0, i32 23
  store i64 %83, ptr %84, align 8
  %85 = getelementptr inbounds %struct.perf_event_context, ptr %81, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %85) #27, !srcloc !19
  %86 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %85, ptr %85, i32 1, ptr elementtype(i32) %85) #27, !srcloc !32
  %87 = extractvalue { i32, i32, i32 } %86, 0
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %93, label %89, !prof !12

89:                                               ; preds = %80
  %90 = add i32 %87, 1
  %91 = or i32 %90, %87
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %95, label %93, !prof !23

93:                                               ; preds = %89, %80
  %94 = phi i32 [ 2, %80 ], [ 1, %89 ]
  tail call void @refcount_warn_saturate(ptr noundef %85, i32 noundef %94) #27
  br label %95

95:                                               ; preds = %93, %89, %63
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %23, i32 noundef %64) #27
  br label %97

96:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %104

97:                                               ; preds = %95, %52, %32
  %98 = phi i32 [ 0, %95 ], [ %54, %52 ], [ %34, %32 ]
  tail call void @mutex_unlock(ptr noundef %25) #27
  %99 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %23) #27
  %100 = load i32, ptr %20, align 8
  %101 = add i32 %100, -1
  store i32 %101, ptr %20, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %23, i32 noundef %99) #27
  tail call fastcc void @put_ctx(ptr noundef nonnull %16) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %102 = icmp eq i32 %98, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %97
  tail call void @perf_event_free_task(ptr noundef %0)
  br label %107

104:                                              ; preds = %97, %96
  %105 = add nuw nsw i32 %11, 1
  %106 = icmp eq i32 %105, 2
  br i1 %106, label %107, label %10

107:                                              ; preds = %104, %103
  %108 = phi i32 [ %98, %103 ], [ 0, %104 ]
  ret i32 %108
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_init_cpu(i32 noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  %3 = load i32, ptr %2, align 4
  %4 = add i32 %3, ptrtoint (ptr @swevent_htable to i32)
  %5 = inttoptr i32 %4 to ptr
  %6 = getelementptr inbounds %struct.swevent_htable, ptr %5, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %6) #27
  %7 = getelementptr inbounds %struct.swevent_htable, ptr %5, i32 0, i32 2
  %8 = load i32, ptr %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = load ptr, ptr %5, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  %14 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %15 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %14, i32 noundef 3520, i32 noundef 1032) #30
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18, !prof !12

17:                                               ; preds = %13
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 13367, i32 noundef 9, ptr noundef null) #27
  br label %18

18:                                               ; preds = %17, %13
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !90
  store volatile ptr %15, ptr %5, align 4
  br label %19

19:                                               ; preds = %18, %10, %1
  tail call void @mutex_unlock(ptr noundef %6) #27
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  tail call void @_set_bit(i32 noundef %0, ptr noundef nonnull @perf_online_mask) #27
  %20 = load ptr, ptr @pmus, align 4
  %21 = icmp eq ptr %20, @pmus
  br i1 %21, label %34, label %22

22:                                               ; preds = %22, %19
  %23 = phi ptr [ %32, %22 ], [ %20, %19 ]
  %24 = getelementptr inbounds %struct.pmu, ptr %23, i32 0, i32 9
  %25 = load ptr, ptr %24, align 4
  %26 = ptrtoint ptr %25 to i32
  %27 = load i32, ptr %2, align 4
  %28 = add i32 %27, %26
  %29 = inttoptr i32 %28 to ptr
  %30 = getelementptr inbounds %struct.perf_event_context, ptr %29, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %30) #27
  %31 = getelementptr inbounds %struct.perf_cpu_context, ptr %29, i32 0, i32 10
  store i32 1, ptr %31, align 8
  tail call void @mutex_unlock(ptr noundef %30) #27
  %32 = load ptr, ptr %23, align 4
  %33 = icmp eq ptr %32, @pmus
  br i1 %33, label %34, label %22

34:                                               ; preds = %22, %19
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_exit_cpu(i32 noundef %0) local_unnamed_addr #0 {
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  %2 = load ptr, ptr @pmus, align 4
  %3 = icmp eq ptr %2, @pmus
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %0
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi ptr [ %2, %4 ], [ %17, %6 ]
  %8 = getelementptr inbounds %struct.pmu, ptr %7, i32 0, i32 9
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = load i32, ptr %5, align 4
  %12 = add i32 %11, %10
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.perf_event_context, ptr %13, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %14) #27
  %15 = tail call i32 @smp_call_function_single(i32 noundef %0, ptr noundef nonnull @__perf_event_exit_context, ptr noundef %13, i32 noundef 1) #27
  %16 = getelementptr inbounds %struct.perf_cpu_context, ptr %13, i32 0, i32 10
  store i32 0, ptr %16, align 8
  tail call void @mutex_unlock(ptr noundef %14) #27
  %17 = load ptr, ptr %7, align 4
  %18 = icmp eq ptr %17, @pmus
  br i1 %18, label %19, label %6

19:                                               ; preds = %6, %1
  tail call void @_clear_bit(i32 noundef %0, ptr noundef nonnull @perf_online_mask) #27
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define dso_local void @perf_event_init() local_unnamed_addr #15 section ".init.text" {
  store i32 0, ptr @pmu_idr, align 4
  store i32 33554436, ptr getelementptr inbounds (%struct.idr, ptr @pmu_idr, i32 0, i32 0, i32 1), align 4
  store ptr null, ptr getelementptr inbounds (%struct.idr, ptr @pmu_idr, i32 0, i32 0, i32 2), align 4
  store i32 0, ptr getelementptr inbounds (%struct.idr, ptr @pmu_idr, i32 0, i32 1), align 4
  store i32 0, ptr getelementptr inbounds (%struct.idr, ptr @pmu_idr, i32 0, i32 2), align 4
  tail call fastcc void @perf_event_init_all_cpus() #33
  %1 = tail call i32 @init_srcu_struct(ptr noundef nonnull @pmus_srcu) #27
  %2 = tail call i32 @perf_pmu_register(ptr noundef nonnull @perf_swevent, ptr noundef nonnull @.str.12, i32 noundef 1)
  %3 = tail call i32 @perf_pmu_register(ptr noundef nonnull @perf_cpu_clock, ptr noundef null, i32 noundef -1)
  %4 = tail call i32 @perf_pmu_register(ptr noundef nonnull @perf_task_clock, ptr noundef null, i32 noundef -1)
  %5 = tail call i32 @perf_pmu_register(ptr noundef nonnull @perf_tracepoint, ptr noundef nonnull @.str.68, i32 noundef 2) #27
  %6 = tail call i32 @perf_pmu_register(ptr noundef nonnull @perf_uprobe, ptr noundef nonnull @.str.69, i32 noundef -1) #27
  %7 = tail call ptr @llvm.thread.pointer() #27
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = tail call i32 @perf_event_init_cpu(i32 noundef %9)
  %11 = tail call i32 @register_reboot_notifier(ptr noundef nonnull @perf_reboot_notifier) #27
  %12 = tail call i32 @init_hw_breakpoint() #29
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !23

14:                                               ; preds = %0
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 13477, i32 noundef 9, ptr noundef nonnull @.str.13, i32 noundef %12) #27
  br label %15

15:                                               ; preds = %14, %0
  %16 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.14, i32 noundef 704, i32 noundef 8, i32 noundef 262144, ptr noundef null) #27
  store ptr %16, ptr @perf_event_cache, align 4
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @perf_event_init_all_cpus() unnamed_addr #15 section ".init.text" {
  store i32 0, ptr @perf_online_mask, align 4
  %1 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #32
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %3 = icmp ult i32 %1, %2
  br i1 %3, label %4, label %29

4:                                                ; preds = %4, %0
  %5 = phi i32 [ %26, %4 ], [ %1, %0 ]
  %6 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %5
  %7 = load i32, ptr %6, align 4
  %8 = add i32 %7, ptrtoint (ptr @swevent_htable to i32)
  %9 = inttoptr i32 %8 to ptr
  %10 = getelementptr inbounds %struct.swevent_htable, ptr %9, i32 0, i32 1
  tail call void @__mutex_init(ptr noundef %10, ptr noundef nonnull @.str.67, ptr noundef nonnull @perf_event_init_all_cpus.__key) #27
  %11 = load i32, ptr %6, align 4
  %12 = add i32 %11, ptrtoint (ptr @active_ctx_list to i32)
  %13 = inttoptr i32 %12 to ptr
  store volatile ptr %13, ptr %13, align 4
  %14 = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  store ptr %13, ptr %14, align 4
  %15 = load i32, ptr %6, align 4
  %16 = add i32 %15, ptrtoint (ptr getelementptr inbounds (%struct.pmu_event_list, ptr @pmu_sb_events, i32 0, i32 1) to i32)
  %17 = inttoptr i32 %16 to ptr
  store volatile ptr %17, ptr %17, align 4
  %18 = getelementptr inbounds %struct.list_head, ptr %17, i32 0, i32 1
  store ptr %17, ptr %18, align 4
  %19 = load i32, ptr %6, align 4
  %20 = add i32 %19, ptrtoint (ptr @pmu_sb_events to i32)
  %21 = inttoptr i32 %20 to ptr
  store i32 0, ptr %21, align 4
  %22 = load i32, ptr %6, align 4
  %23 = add i32 %22, ptrtoint (ptr @sched_cb_list to i32)
  %24 = inttoptr i32 %23 to ptr
  store volatile ptr %24, ptr %24, align 4
  %25 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  store ptr %24, ptr %25, align 4
  %26 = tail call i32 @cpumask_next(i32 noundef %5, ptr noundef nonnull @__cpu_possible_mask) #32
  %27 = load i32, ptr @nr_cpu_ids, align 4
  %28 = icmp ult i32 %26, %27
  br i1 %28, label %4, label %29

29:                                               ; preds = %4, %0
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @init_srcu_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_reboot_notifier(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @init_hw_breakpoint() local_unnamed_addr #3 section ".init.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @perf_event_sysfs_show(ptr nocapture readnone %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2) #11 {
  %4 = getelementptr inbounds %struct.perf_pmu_events_attr, ptr %1, i32 0, i32 2
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %2, ptr noundef nonnull @.str.15, ptr noundef nonnull %5)
  br label %9

9:                                                ; preds = %7, %3
  %10 = phi i32 [ %8, %7 ], [ 0, %3 ]
  ret i32 %10
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #16

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @perf_event_sysfs_init() #15 section ".init.text" {
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  %1 = tail call i32 @bus_register(ptr noundef nonnull @pmu_bus) #27
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %24

3:                                                ; preds = %0
  %4 = load ptr, ptr @pmus, align 4
  %5 = icmp eq ptr %4, @pmus
  br i1 %5, label %23, label %6

6:                                                ; preds = %20, %3
  %7 = phi ptr [ %21, %20 ], [ %4, %3 ]
  %8 = getelementptr inbounds %struct.pmu, ptr %7, i32 0, i32 5
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.pmu, ptr %7, i32 0, i32 6
  %13 = load i32, ptr %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = tail call fastcc i32 @pmu_dev_alloc(ptr noundef %7)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18, !prof !23

18:                                               ; preds = %15
  %19 = load ptr, ptr %8, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 13518, i32 noundef 9, ptr noundef nonnull @.str.70, ptr noundef %19, i32 noundef %16) #27
  br label %20

20:                                               ; preds = %18, %15, %11, %6
  %21 = load ptr, ptr %7, align 4
  %22 = icmp eq ptr %21, @pmus
  br i1 %22, label %23, label %6

23:                                               ; preds = %20, %3
  store i1 true, ptr @pmu_bus_running, align 4
  br label %24

24:                                               ; preds = %23, %0
  %25 = phi i32 [ %1, %0 ], [ 0, %23 ]
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  ret i32 %25
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal i32 @__static_call_return0() #17 {
  ret i32 0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #18

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #19

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_duration_warn(ptr nocapture noundef readnone %0) #0 {
  %2 = tail call i32 @___ratelimit(ptr noundef nonnull @perf_duration_warn._rs, ptr noundef nonnull @__func__.perf_duration_warn) #27
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = load i64, ptr @__report_avg, align 8
  %6 = load i64, ptr @__report_allowed, align 8
  %7 = load i32, ptr @sysctl_perf_event_sample_rate, align 4
  %8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.16, i64 noundef %5, i64 noundef %6, i32 noundef %7) #29
  br label %9

9:                                                ; preds = %4, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @group_sched_out(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %52

7:                                                ; preds = %3
  %8 = load ptr, ptr %2, align 8
  %9 = getelementptr inbounds %struct.pmu, ptr %8, i32 0, i32 8
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #19, !srcloc !11
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = load i32, ptr %16, align 4
  %18 = add i32 %17, 1
  store i32 %18, ptr %16, align 4
  %19 = icmp eq i32 %17, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.pmu, ptr %8, i32 0, i32 15
  %22 = load ptr, ptr %21, align 4
  tail call void %22(ptr noundef %8) #27
  br label %23

23:                                               ; preds = %20, %7
  tail call fastcc void @event_sched_out(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %27, label %36

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %29 = load ptr, ptr %28, align 8
  %30 = icmp eq ptr %29, %28
  br i1 %30, label %36, label %31

31:                                               ; preds = %31, %27
  %32 = phi ptr [ %34, %31 ], [ %29, %27 ]
  %33 = getelementptr i8, ptr %32, i32 -8
  tail call fastcc void @event_sched_out(ptr noundef %33, ptr noundef %1, ptr noundef %2)
  %34 = load ptr, ptr %32, align 8
  %35 = icmp eq ptr %34, %28
  br i1 %35, label %36, label %31

36:                                               ; preds = %31, %27, %23
  %37 = load ptr, ptr %2, align 8
  %38 = getelementptr inbounds %struct.pmu, ptr %37, i32 0, i32 8
  %39 = load ptr, ptr %38, align 4
  %40 = ptrtoint ptr %39 to i32
  %41 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %42 = inttoptr i32 %41 to ptr
  %43 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %42) #19, !srcloc !11
  %44 = add i32 %43, %40
  %45 = inttoptr i32 %44 to ptr
  %46 = load i32, ptr %45, align 4
  %47 = add i32 %46, -1
  store i32 %47, ptr %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.pmu, ptr %37, i32 0, i32 14
  %51 = load ptr, ptr %50, align 4
  tail call void %51(ptr noundef %37) #27
  br label %52

52:                                               ; preds = %49, %36, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @event_sched_out(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %5 = load ptr, ptr %4, align 8
  %6 = icmp ne ptr %5, %2
  %7 = load i1, ptr @event_sched_out.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !12

10:                                               ; preds = %3
  store i1 true, ptr @event_sched_out.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2341, i32 noundef 9, ptr noundef null) #27
  br label %11

11:                                               ; preds = %10, %3
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %13 = load i32, ptr %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %112

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 2
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = load ptr, ptr %16, align 4
  %20 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  store ptr %18, ptr %20, align 4
  store volatile ptr %19, ptr %18, align 4
  store volatile ptr %16, ptr %16, align 4
  store ptr %16, ptr %17, align 4
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 8
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #19, !srcloc !11
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = load i32, ptr %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, ptr %30, align 4
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %15
  %35 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 15
  %36 = load ptr, ptr %35, align 4
  tail call void %36(ptr noundef %22) #27
  br label %37

37:                                               ; preds = %34, %15
  %38 = load ptr, ptr %21, align 8
  %39 = getelementptr inbounds %struct.pmu, ptr %38, i32 0, i32 20
  %40 = load ptr, ptr %39, align 4
  tail call void %40(ptr noundef %0, i32 noundef 0) #27
  %41 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  store i32 -1, ptr %41, align 8
  %42 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 47
  %43 = load volatile i32, ptr %42, align 8
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  store volatile i32 -1, ptr %42, align 8
  br label %46

46:                                               ; preds = %45, %37
  %47 = phi i32 [ -1, %45 ], [ 0, %37 ]
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef %47)
  %48 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %49 = load i32, ptr %48, align 4
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 2
  %54 = load i32, ptr %53, align 4
  %55 = add i32 %54, -1
  store i32 %55, ptr %53, align 4
  br label %56

56:                                               ; preds = %52, %46
  %57 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 10
  %58 = load i32, ptr %57, align 4
  %59 = add i32 %58, -1
  store i32 %59, ptr %57, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 3
  %63 = load volatile ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, %62
  br i1 %64, label %65, label %67, !prof !12

65:                                               ; preds = %61
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1263, i32 noundef 9, ptr noundef null) #27
  %66 = load ptr, ptr %62, align 4
  br label %67

67:                                               ; preds = %65, %61
  %68 = phi ptr [ %66, %65 ], [ %63, %61 ]
  %69 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 3, i32 1
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr inbounds %struct.list_head, ptr %68, i32 0, i32 1
  store ptr %70, ptr %71, align 4
  store volatile ptr %68, ptr %70, align 4
  store volatile ptr %62, ptr %62, align 4
  store ptr %62, ptr %69, align 4
  br label %72

72:                                               ; preds = %67, %56
  %73 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %74 = load i64, ptr %73, align 8
  %75 = and i64 %74, 1024
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %79 = load i64, ptr %78, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 14
  %83 = load i32, ptr %82, align 4
  %84 = add i32 %83, -1
  store i32 %84, ptr %82, align 4
  %85 = load i64, ptr %73, align 8
  br label %86

86:                                               ; preds = %81, %77, %72
  %87 = phi i64 [ %85, %81 ], [ %74, %77 ], [ %74, %72 ]
  %88 = and i64 %87, 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 2
  %92 = load i32, ptr %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %90, %86
  %95 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 3
  store i32 0, ptr %95, align 8
  br label %96

96:                                               ; preds = %94, %90
  %97 = load ptr, ptr %21, align 8
  %98 = getelementptr inbounds %struct.pmu, ptr %97, i32 0, i32 8
  %99 = load ptr, ptr %98, align 4
  %100 = ptrtoint ptr %99 to i32
  %101 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %102 = inttoptr i32 %101 to ptr
  %103 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %102) #19, !srcloc !11
  %104 = add i32 %103, %100
  %105 = inttoptr i32 %104 to ptr
  %106 = load i32, ptr %105, align 4
  %107 = add i32 %106, -1
  store i32 %107, ptr %105, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %96
  %110 = getelementptr inbounds %struct.pmu, ptr %97, i32 0, i32 14
  %111 = load ptr, ptr %110, align 4
  tail call void %111(ptr noundef %97) #27
  br label %112

112:                                              ; preds = %109, %96, %11
  ret void
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef %1) unnamed_addr #20 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %78, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10, !prof !12

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 19
  %12 = load i64, ptr %11, align 8
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i64 [ %12, %10 ], [ 0, %6 ]
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.perf_event, ptr %16, i32 0, i32 14
  %18 = load i32, ptr %17, align 8
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 %18, i32 %4
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %23 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  %24 = load i64, ptr %23, align 8
  %25 = sub i64 %14, %24
  %26 = load i64, ptr %22, align 8
  %27 = icmp slt i32 %20, 0
  %28 = select i1 %27, i64 0, i64 %25
  %29 = add i64 %28, %26
  store i64 %29, ptr %22, align 8
  %30 = load i64, ptr %21, align 8
  %31 = icmp sgt i32 %20, 0
  %32 = select i1 %31, i64 %25, i64 0
  %33 = add i64 %30, %32
  store i64 %33, ptr %21, align 8
  store i64 %14, ptr %23, align 8
  %34 = xor i32 %4, %1
  %35 = icmp slt i32 %34, 0
  %36 = icmp eq ptr %16, %0
  %37 = select i1 %35, i1 %36, i1 false
  br i1 %37, label %38, label %77

38:                                               ; preds = %13
  %39 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  %41 = icmp eq ptr %40, %39
  br i1 %41, label %77, label %42

42:                                               ; preds = %60, %38
  %43 = phi ptr [ %75, %60 ], [ %40, %38 ]
  %44 = getelementptr i8, ptr %43, i32 440
  %45 = load ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %50, label %47, !prof !12

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.perf_event_context, ptr %45, i32 0, i32 19
  %49 = load i64, ptr %48, align 8
  br label %50

50:                                               ; preds = %47, %42
  %51 = phi i64 [ %49, %47 ], [ 0, %42 ]
  %52 = getelementptr i8, ptr %43, i32 76
  %53 = load ptr, ptr %52, align 4
  %54 = getelementptr inbounds %struct.perf_event, ptr %53, i32 0, i32 14
  %55 = load i32, ptr %54, align 8
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %50
  %58 = getelementptr i8, ptr %43, i32 88
  %59 = load i32, ptr %58, align 8
  br label %60

60:                                               ; preds = %57, %50
  %61 = phi i32 [ %59, %57 ], [ %55, %50 ]
  %62 = getelementptr i8, ptr %43, i32 120
  %63 = getelementptr i8, ptr %43, i32 112
  %64 = getelementptr i8, ptr %43, i32 128
  %65 = load i64, ptr %64, align 8
  %66 = sub i64 %51, %65
  %67 = load i64, ptr %63, align 8
  %68 = icmp slt i32 %61, 0
  %69 = select i1 %68, i64 0, i64 %66
  %70 = add i64 %69, %67
  store i64 %70, ptr %63, align 8
  %71 = load i64, ptr %62, align 8
  %72 = icmp sgt i32 %61, 0
  %73 = select i1 %72, i64 %66, i64 0
  %74 = add i64 %71, %73
  store i64 %74, ptr %62, align 8
  store i64 %51, ptr %64, align 8
  %75 = load ptr, ptr %43, align 8
  %76 = icmp eq ptr %75, %39
  br i1 %76, label %77, label %42

77:                                               ; preds = %60, %38, %13
  store volatile i32 %1, ptr %3, align 8
  br label %78

78:                                               ; preds = %77, %2
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i64 @local_clock() #5 {
  %1 = tail call i64 @sched_clock() #27
  ret i64 %1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @sched_clock() local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc void @perf_event_update_time(ptr nocapture noundef %0) unnamed_addr #21 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %8, label %5, !prof !12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 19
  %7 = load i64, ptr %6, align 8
  br label %8

8:                                                ; preds = %5, %1
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.perf_event, ptr %11, i32 0, i32 14
  %13 = load i32, ptr %12, align 8
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %17 = load i32, ptr %16, align 8
  br label %18

18:                                               ; preds = %15, %8
  %19 = phi i32 [ %17, %15 ], [ %13, %8 ]
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  %23 = load i64, ptr %22, align 8
  %24 = sub i64 %9, %23
  %25 = load i64, ptr %21, align 8
  %26 = icmp slt i32 %19, 0
  %27 = select i1 %26, i64 0, i64 %24
  %28 = add i64 %27, %25
  store i64 %28, ptr %21, align 8
  %29 = load i64, ptr %20, align 8
  %30 = icmp sgt i32 %19, 0
  %31 = select i1 %30, i64 %24, i64 0
  %32 = add i64 %29, %31
  store i64 %32, ptr %20, align 8
  store i64 %9, ptr %22, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  br label %3

3:                                                ; preds = %28, %1
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %4 = load volatile ptr, ptr %2, align 8
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 17
  %6 = load volatile i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %20, label %8

8:                                                ; preds = %18, %3
  %9 = phi i32 [ %16, %18 ], [ %6, %3 ]
  %10 = add i32 %9, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %5) #27, !srcloc !19
  br label %11

11:                                               ; preds = %11, %8
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %5, ptr %5, i32 %9, i32 %10, ptr elementtype(i32) %5) #27, !srcloc !37
  %13 = extractvalue { i32, i32 } %12, 0
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = extractvalue { i32, i32 } %12, 1
  %17 = icmp eq i32 %16, %9
  br i1 %17, label %20, label %18, !prof !23

18:                                               ; preds = %15
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %20, label %8

20:                                               ; preds = %18, %15, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %18 ], [ %9, %15 ]
  %22 = add i32 %21, 1
  %23 = or i32 %22, %21
  %24 = icmp sgt i32 %23, -1
  br i1 %24, label %26, label %25, !prof !23

25:                                               ; preds = %20
  tail call void @refcount_warn_saturate(ptr noundef %5, i32 noundef 0) #27
  br label %26

26:                                               ; preds = %25, %20
  %27 = icmp eq i32 %21, 0
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %27, label %28, label %29

28:                                               ; preds = %33, %26
  br label %3

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %30) #27
  %31 = load ptr, ptr %2, align 8
  %32 = icmp eq ptr %31, %4
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @mutex_unlock(ptr noundef %30) #27
  tail call fastcc void @put_ctx(ptr noundef %4)
  br label %28

34:                                               ; preds = %29
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @event_function_call(ptr noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.remote_function_call, align 4
  %5 = alloca %struct.remote_function_call, align 4
  %6 = alloca %struct.event_function_struct, align 4
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 18
  %10 = load volatile ptr, ptr %9, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #27
  store ptr %0, ptr %6, align 4
  %11 = getelementptr inbounds %struct.event_function_struct, ptr %6, i32 0, i32 1
  store ptr %1, ptr %11, align 4
  %12 = getelementptr inbounds %struct.event_function_struct, ptr %6, i32 0, i32 2
  store ptr %2, ptr %12, align 4
  %13 = ptrtoint ptr %10 to i32
  switch i32 %13, label %14 [
    i32 0, label %20
    i32 -1, label %62
  ]

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 1
  %16 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 2
  %17 = getelementptr inbounds %struct.remote_function_call, ptr %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 1
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 12
  br label %27

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %22 = load i32, ptr %21, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #27
  %23 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 1
  store i32 0, ptr %5, align 4
  store ptr @event_function, ptr %23, align 4
  %24 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 2
  store ptr %6, ptr %24, align 4
  %25 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 3
  store i32 -6, ptr %25, align 4
  %26 = call i32 @smp_call_function_single(i32 noundef %22, ptr noundef nonnull @remote_function, ptr noundef nonnull %5, i32 noundef 1) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #27
  br label %62

27:                                               ; preds = %56, %14
  %28 = phi ptr [ %48, %56 ], [ %10, %14 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #27
  store ptr %28, ptr %4, align 4
  store ptr @event_function, ptr %15, align 4
  store ptr %6, ptr %16, align 4
  store i32 -11, ptr %17, align 4
  %29 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 2
  %30 = load volatile i32, ptr %29, align 8
  %31 = call i32 @smp_call_function_single(i32 noundef %30, ptr noundef nonnull @remote_function, ptr noundef nonnull %4, i32 noundef 1) #27
  %32 = icmp eq i32 %31, 0
  %33 = load i32, ptr %17, align 4
  %34 = select i1 %32, i32 %33, i32 %31
  %35 = icmp eq i32 %34, -11
  br i1 %35, label %36, label %44

36:                                               ; preds = %36, %27
  %37 = call i32 @__cond_resched() #27
  %38 = load volatile i32, ptr %29, align 8
  %39 = call i32 @smp_call_function_single(i32 noundef %38, ptr noundef nonnull @remote_function, ptr noundef nonnull %4, i32 noundef 1) #27
  %40 = icmp eq i32 %39, 0
  %41 = load i32, ptr %17, align 4
  %42 = select i1 %40, i32 %41, i32 %39
  %43 = icmp eq i32 %42, -11
  br i1 %43, label %36, label %44

44:                                               ; preds = %36, %27
  %45 = phi i32 [ %34, %27 ], [ %42, %36 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %44
  call void @_raw_spin_lock_irq(ptr noundef %18) #27
  %48 = load ptr, ptr %9, align 4
  %49 = icmp eq ptr %48, inttoptr (i32 -1 to ptr)
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %51 = load i16, ptr %18, align 4
  %52 = add i16 %51, 1
  store i16 %52, ptr %18, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %62

53:                                               ; preds = %47
  %54 = load i32, ptr %19, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %57 = load i16, ptr %18, align 4
  %58 = add i16 %57, 1
  store i16 %58, ptr %18, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %27

59:                                               ; preds = %53
  call void %1(ptr noundef %0, ptr noundef null, ptr noundef %8, ptr noundef %2) #27, !callees !91
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %60 = load i16, ptr %18, align 4
  %61 = add i16 %60, 1
  store i16 %61, ptr %18, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %62

62:                                               ; preds = %59, %50, %44, %20, %3
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @event_function(ptr nocapture noundef readonly %0) #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.pmu, ptr %5, i32 0, i32 9
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #19, !srcloc !11
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.perf_cpu_context, ptr %13, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %13, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %16) #27
  %17 = icmp eq ptr %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %1
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %19) #27
  br label %20

20:                                               ; preds = %18, %1
  %21 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 18
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %20
  %25 = tail call ptr @llvm.thread.pointer() #27
  %26 = icmp eq ptr %22, %25
  br i1 %26, label %27, label %53

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 12
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = load i1, ptr @event_function.__already_done, align 1
  %32 = xor i1 %31, true
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %34, label %35, !prof !12

34:                                               ; preds = %27
  store i1 true, ptr @event_function.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 243, i32 noundef 9, ptr noundef null) #27
  br label %35

35:                                               ; preds = %34, %27
  %36 = icmp ne ptr %15, %4
  %37 = load i1, ptr @event_function.__already_done.19, align 1
  %38 = xor i1 %37, true
  %39 = select i1 %36, i1 %38, i1 false
  br i1 %39, label %45, label %48, !prof !12

40:                                               ; preds = %20
  %41 = icmp ne ptr %4, %13
  %42 = load i1, ptr @event_function.__already_done.20, align 1
  %43 = xor i1 %42, true
  %44 = select i1 %41, i1 %43, i1 false
  br i1 %44, label %45, label %48, !prof !12

45:                                               ; preds = %40, %35
  %46 = phi ptr [ @event_function.__already_done.19, %35 ], [ @event_function.__already_done.20, %40 ]
  %47 = phi i32 [ 248, %35 ], [ 250, %40 ]
  store i1 true, ptr %46, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef %47, i32 noundef 9, ptr noundef null) #27
  br label %48

48:                                               ; preds = %45, %40, %35
  %49 = getelementptr inbounds %struct.event_function_struct, ptr %0, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.event_function_struct, ptr %0, i32 0, i32 2
  %52 = load ptr, ptr %51, align 4
  tail call void %50(ptr noundef %2, ptr noundef %13, ptr noundef %4, ptr noundef %52) #27
  br label %53

53:                                               ; preds = %48, %24
  %54 = phi i32 [ 0, %48 ], [ -3, %24 ]
  br i1 %17, label %59, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %struct.perf_event_context, ptr %15, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %57 = load i16, ptr %56, align 4
  %58 = add i16 %57, 1
  store i16 %58, ptr %56, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %59

59:                                               ; preds = %55, %53
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %60 = load i16, ptr %16, align 4
  %61 = add i16 %60, 1
  store i16 %61, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  ret i32 %54
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @smp_call_function_single(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @remote_function(ptr nocapture noundef %0) #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = icmp eq ptr %2, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %6 = load volatile i32, ptr %5, align 8
  %7 = tail call ptr @llvm.thread.pointer() #27
  %8 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %6, %9
  br i1 %10, label %11, label %21

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.remote_function_call, ptr %0, i32 0, i32 3
  store i32 -3, ptr %12, align 4
  %13 = icmp eq ptr %2, %7
  br i1 %13, label %14, label %21

14:                                               ; preds = %11, %1
  %15 = getelementptr inbounds %struct.remote_function_call, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.remote_function_call, ptr %0, i32 0, i32 2
  %18 = load ptr, ptr %17, align 4
  %19 = tail call i32 %16(ptr noundef %18) #27
  %20 = getelementptr inbounds %struct.remote_function_call, ptr %0, i32 0, i32 3
  store i32 %19, ptr %20, align 4
  br label %21

21:                                               ; preds = %14, %11, %4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #22

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ctx_sched_out(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 12
  %5 = load i32, ptr %4, align 4
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 9
  %7 = load i32, ptr %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %27, !prof !23

9:                                                ; preds = %3
  %10 = icmp ne i32 %5, 0
  %11 = load i1, ptr @ctx_sched_out.__already_done, align 1
  %12 = xor i1 %11, true
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %15, !prof !12

14:                                               ; preds = %9
  store i1 true, ptr @ctx_sched_out.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3305, i32 noundef 9, ptr noundef null) #27
  br label %15

15:                                               ; preds = %14, %9
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %132, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = icmp ne ptr %21, null
  %23 = load i1, ptr @ctx_sched_out.__already_done.21, align 1
  %24 = xor i1 %23, true
  %25 = select i1 %22, i1 %24, i1 false
  br i1 %25, label %26, label %132, !prof !12

26:                                               ; preds = %19
  store i1 true, ptr @ctx_sched_out.__already_done.21, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3307, i32 noundef 9, ptr noundef null) #27
  br label %132

27:                                               ; preds = %3
  %28 = and i32 %5, 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %27
  %31 = tail call i64 @sched_clock() #27
  %32 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 20
  %33 = load i64, ptr %32, align 8
  %34 = sub i64 %31, %33
  %35 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 19
  %36 = load i64, ptr %35, align 8
  %37 = add i64 %34, %36
  store i64 %37, ptr %35, align 8
  store i64 %31, ptr %32, align 8
  %38 = sub i64 %37, %31
  %39 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 21
  store volatile i64 %38, ptr %39, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !92
  %40 = load i32, ptr %4, align 4
  br label %41

41:                                               ; preds = %30, %27
  %42 = phi i32 [ %40, %30 ], [ %5, %27 ]
  %43 = xor i32 %2, -1
  %44 = and i32 %42, %43
  %45 = and i32 %44, 3
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 0, i32 %44
  store i32 %47, ptr %4, align 4
  %48 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  %53 = load ptr, ptr %52, align 8
  %54 = icmp ne ptr %53, %0
  %55 = load i1, ptr @ctx_sched_out.__already_done.22, align 1
  %56 = xor i1 %55, true
  %57 = select i1 %54, i1 %56, i1 false
  br i1 %57, label %58, label %60, !prof !12

58:                                               ; preds = %51
  store i1 true, ptr @ctx_sched_out.__already_done.22, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3337, i32 noundef 9, ptr noundef null) #27
  %59 = load i32, ptr %4, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %47, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  store ptr null, ptr %52, align 8
  %64 = load i32, ptr %4, align 4
  br label %65

65:                                               ; preds = %63, %60, %41
  %66 = phi i32 [ %61, %60 ], [ %64, %63 ], [ %47, %41 ]
  %67 = xor i32 %66, %5
  %68 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 10
  %69 = load i32, ptr %68, align 4
  %70 = icmp eq i32 %69, 0
  %71 = and i32 %67, 3
  %72 = icmp eq i32 %71, 0
  %73 = select i1 %70, i1 true, i1 %72
  br i1 %73, label %132, label %74

74:                                               ; preds = %65
  %75 = load ptr, ptr %0, align 8
  %76 = getelementptr inbounds %struct.pmu, ptr %75, i32 0, i32 8
  %77 = load ptr, ptr %76, align 4
  %78 = ptrtoint ptr %77 to i32
  %79 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %80 = inttoptr i32 %79 to ptr
  %81 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %80) #19, !srcloc !11
  %82 = add i32 %81, %78
  %83 = inttoptr i32 %82 to ptr
  %84 = load i32, ptr %83, align 4
  %85 = add i32 %84, 1
  store i32 %85, ptr %83, align 4
  %86 = icmp eq i32 %84, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %74
  %88 = getelementptr inbounds %struct.pmu, ptr %75, i32 0, i32 15
  %89 = load ptr, ptr %88, align 4
  tail call void %89(ptr noundef %75) #27
  br label %90

90:                                               ; preds = %87, %74
  %91 = and i32 %67, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %102, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 7
  %95 = load ptr, ptr %94, align 8
  %96 = icmp eq ptr %95, %94
  br i1 %96, label %102, label %97

97:                                               ; preds = %97, %93
  %98 = phi ptr [ %100, %97 ], [ %95, %93 ]
  %99 = getelementptr i8, ptr %98, i32 -16
  %100 = load ptr, ptr %98, align 8
  tail call fastcc void @group_sched_out(ptr noundef %99, ptr noundef %1, ptr noundef %0)
  %101 = icmp eq ptr %100, %94
  br i1 %101, label %102, label %97

102:                                              ; preds = %97, %93, %90
  %103 = and i32 %67, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 8
  %107 = load ptr, ptr %106, align 8
  %108 = icmp eq ptr %107, %106
  br i1 %108, label %114, label %109

109:                                              ; preds = %109, %105
  %110 = phi ptr [ %112, %109 ], [ %107, %105 ]
  %111 = getelementptr i8, ptr %110, i32 -16
  %112 = load ptr, ptr %110, align 8
  tail call fastcc void @group_sched_out(ptr noundef %111, ptr noundef %1, ptr noundef %0)
  %113 = icmp eq ptr %112, %106
  br i1 %113, label %114, label %109

114:                                              ; preds = %109, %105
  %115 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 16
  store i32 0, ptr %115, align 4
  br label %116

116:                                              ; preds = %114, %102
  %117 = load ptr, ptr %0, align 8
  %118 = getelementptr inbounds %struct.pmu, ptr %117, i32 0, i32 8
  %119 = load ptr, ptr %118, align 4
  %120 = ptrtoint ptr %119 to i32
  %121 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %122 = inttoptr i32 %121 to ptr
  %123 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %122) #19, !srcloc !11
  %124 = add i32 %123, %120
  %125 = inttoptr i32 %124 to ptr
  %126 = load i32, ptr %125, align 4
  %127 = add i32 %126, -1
  store i32 %127, ptr %125, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %116
  %130 = getelementptr inbounds %struct.pmu, ptr %117, i32 0, i32 14
  %131 = load ptr, ptr %130, align 4
  tail call void %131(ptr noundef %117) #27
  br label %132

132:                                              ; preds = %129, %116, %65, %26, %19, %15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ctx_sched_in(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 12
  %7 = load i32, ptr %6, align 4
  %8 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 9
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %65, label %11, !prof !23

11:                                               ; preds = %3
  %12 = icmp eq i32 %7, 4
  br i1 %12, label %26, label %13

13:                                               ; preds = %11
  %14 = tail call i64 @sched_clock() #27
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 19
  %16 = load i64, ptr %15, align 8
  %17 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 20
  store i64 %14, ptr %17, align 8
  %18 = sub i64 %16, %14
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 21
  store volatile i64 %18, ptr %19, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !93
  %20 = load i32, ptr %6, align 4
  %21 = or i32 %20, %2
  %22 = or i32 %21, 4
  store i32 %22, ptr %6, align 4
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %43, label %31

26:                                               ; preds = %11
  %27 = or i32 %2, 4
  store i32 %27, ptr %6, align 4
  %28 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 18
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %43, label %35

31:                                               ; preds = %13
  %32 = icmp eq i32 %7, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  store ptr %0, ptr %34, align 8
  br label %43

35:                                               ; preds = %31, %26
  %36 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  %37 = load ptr, ptr %36, align 8
  %38 = icmp ne ptr %37, %0
  %39 = load i1, ptr @ctx_sched_in.__already_done, align 1
  %40 = xor i1 %39, true
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %42, label %43, !prof !12

42:                                               ; preds = %35
  store i1 true, ptr @ctx_sched_in.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3894, i32 noundef 9, ptr noundef null) #27
  br label %43

43:                                               ; preds = %42, %35, %33, %26, %13
  %44 = load i32, ptr %6, align 4
  %45 = xor i32 %44, %7
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 1, ptr %5, align 4
  %49 = icmp eq ptr %0, %1
  %50 = select i1 %49, ptr %1, ptr null
  %51 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 4
  %52 = tail call ptr @llvm.thread.pointer() #27
  %53 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 2
  %54 = load i32, ptr %53, align 8
  call fastcc void @visit_groups_merge(ptr noundef %50, ptr noundef %51, i32 noundef %54, ptr noundef nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  br label %55

55:                                               ; preds = %48, %43
  %56 = and i32 %45, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %55
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  store i32 1, ptr %4, align 4
  %59 = icmp eq ptr %0, %1
  %60 = select i1 %59, ptr %1, ptr null
  %61 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 5
  %62 = tail call ptr @llvm.thread.pointer() #27
  %63 = getelementptr inbounds %struct.thread_info, ptr %62, i32 0, i32 2
  %64 = load i32, ptr %63, align 8
  call fastcc void @visit_groups_merge(ptr noundef %60, ptr noundef %61, i32 noundef %64, ptr noundef nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %65

65:                                               ; preds = %58, %55, %3
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @visit_groups_merge(ptr noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef %3) unnamed_addr #23 {
  %5 = alloca [2 x ptr], align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !48
  %6 = icmp eq ptr %0, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 12
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %1, align 4
  br label %37

11:                                               ; preds = %4
  %12 = load ptr, ptr %1, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %14, %11
  %15 = phi ptr [ %29, %14 ], [ %12, %11 ]
  %16 = phi ptr [ %28, %14 ], [ null, %11 ]
  %17 = getelementptr i8, ptr %15, i32 484
  %18 = load i32, ptr %17, align 4
  %19 = icmp sgt i32 %18, -1
  %20 = icmp slt i32 %18, -1
  %21 = zext i1 %20 to i32
  %22 = select i1 %19, i32 -1, i32 %21
  %23 = icmp slt i32 %22, 1
  %24 = icmp eq i32 %22, 0
  %25 = getelementptr inbounds %struct.rb_node, ptr %15, i32 0, i32 2
  %26 = getelementptr inbounds %struct.rb_node, ptr %15, i32 0, i32 1
  %27 = select i1 %23, ptr %25, ptr %26
  %28 = select i1 %24, ptr %15, ptr %16
  %29 = load ptr, ptr %27, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %14

31:                                               ; preds = %14
  %32 = icmp eq ptr %28, null
  %33 = getelementptr i8, ptr %28, i32 -24
  %34 = icmp eq ptr %33, null
  %35 = or i1 %32, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  store ptr %33, ptr %5, align 8
  br label %37

37:                                               ; preds = %36, %31, %7
  %38 = phi ptr [ %10, %7 ], [ %12, %31 ], [ %12, %36 ]
  %39 = phi ptr [ %9, %7 ], [ %5, %31 ], [ %5, %36 ]
  %40 = phi i32 [ 0, %7 ], [ 0, %31 ], [ 1, %36 ]
  %41 = icmp eq ptr %38, null
  br i1 %41, label %67, label %42

42:                                               ; preds = %42, %37
  %43 = phi ptr [ %57, %42 ], [ %38, %37 ]
  %44 = phi ptr [ %56, %42 ], [ null, %37 ]
  %45 = getelementptr i8, ptr %43, i32 484
  %46 = load i32, ptr %45, align 4
  %47 = icmp sgt i32 %46, %2
  %48 = icmp slt i32 %46, %2
  %49 = zext i1 %48 to i32
  %50 = select i1 %47, i32 -1, i32 %49
  %51 = icmp slt i32 %50, 1
  %52 = icmp eq i32 %50, 0
  %53 = getelementptr inbounds %struct.rb_node, ptr %43, i32 0, i32 2
  %54 = getelementptr inbounds %struct.rb_node, ptr %43, i32 0, i32 1
  %55 = select i1 %51, ptr %53, ptr %54
  %56 = select i1 %52, ptr %43, ptr %44
  %57 = load ptr, ptr %55, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %42

59:                                               ; preds = %42
  %60 = icmp eq ptr %56, null
  %61 = getelementptr i8, ptr %56, i32 -24
  %62 = icmp eq ptr %61, null
  %63 = or i1 %60, %62
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr ptr, ptr %39, i32 %40
  store ptr %61, ptr %65, align 4
  %66 = add nuw nsw i32 %40, 1
  br label %67

67:                                               ; preds = %64, %59, %37, %11
  %68 = phi ptr [ %39, %64 ], [ %39, %59 ], [ %39, %37 ], [ %5, %11 ]
  %69 = phi i32 [ %66, %64 ], [ %40, %59 ], [ %40, %37 ], [ 0, %11 ]
  %70 = sdiv i32 %69, 2
  %71 = shl nuw nsw i32 %70, 1
  %72 = or i32 %71, 1
  %73 = icmp slt i32 %72, %69
  br i1 %73, label %74, label %115

74:                                               ; preds = %109, %67
  %75 = phi i32 [ %113, %109 ], [ %72, %67 ]
  %76 = phi i32 [ %112, %109 ], [ %71, %67 ]
  %77 = phi i32 [ %111, %109 ], [ %70, %67 ]
  %78 = shl i32 %75, 2
  %79 = getelementptr i8, ptr %68, i32 %78
  %80 = shl i32 %77, 2
  %81 = getelementptr i8, ptr %68, i32 %80
  %82 = load ptr, ptr %79, align 4
  %83 = load ptr, ptr %81, align 4
  %84 = getelementptr inbounds %struct.perf_event, ptr %82, i32 0, i32 4
  %85 = load i64, ptr %84, align 8
  %86 = getelementptr inbounds %struct.perf_event, ptr %83, i32 0, i32 4
  %87 = load i64, ptr %86, align 8
  %88 = icmp ult i64 %85, %87
  %89 = select i1 %88, ptr %82, ptr %83
  %90 = select i1 %88, ptr %79, ptr %81
  %91 = add i32 %76, 2
  %92 = icmp slt i32 %91, %69
  br i1 %92, label %93, label %105

93:                                               ; preds = %74
  %94 = shl i32 %91, 2
  %95 = getelementptr i8, ptr %68, i32 %94
  %96 = load ptr, ptr %95, align 4
  %97 = load ptr, ptr %90, align 4
  %98 = getelementptr inbounds %struct.perf_event, ptr %96, i32 0, i32 4
  %99 = load i64, ptr %98, align 8
  %100 = getelementptr inbounds %struct.perf_event, ptr %97, i32 0, i32 4
  %101 = load i64, ptr %100, align 8
  %102 = icmp ult i64 %99, %101
  %103 = select i1 %102, ptr %96, ptr %97
  %104 = select i1 %102, ptr %95, ptr %90
  br label %105

105:                                              ; preds = %93, %74
  %106 = phi ptr [ %89, %74 ], [ %103, %93 ]
  %107 = phi ptr [ %90, %74 ], [ %104, %93 ]
  %108 = icmp eq ptr %107, %81
  br i1 %108, label %115, label %109

109:                                              ; preds = %105
  store ptr %83, ptr %107, align 4
  store ptr %106, ptr %81, align 4
  %110 = icmp eq ptr %107, %79
  %111 = select i1 %110, i32 %75, i32 %91
  %112 = shl i32 %111, 1
  %113 = or i32 %112, 1
  %114 = icmp slt i32 %113, %69
  br i1 %114, label %74, label %115

115:                                              ; preds = %109, %105, %67
  %116 = add nsw i32 %70, -1
  %117 = icmp sgt i32 %69, 1
  br i1 %117, label %118, label %163

118:                                              ; preds = %115
  %119 = shl nuw nsw i32 %116, 1
  %120 = or i32 %119, 1
  %121 = icmp slt i32 %120, %69
  br i1 %121, label %122, label %163

122:                                              ; preds = %157, %118
  %123 = phi i32 [ %161, %157 ], [ %120, %118 ]
  %124 = phi i32 [ %160, %157 ], [ %119, %118 ]
  %125 = phi i32 [ %159, %157 ], [ %116, %118 ]
  %126 = shl i32 %123, 2
  %127 = getelementptr i8, ptr %68, i32 %126
  %128 = shl i32 %125, 2
  %129 = getelementptr i8, ptr %68, i32 %128
  %130 = load ptr, ptr %127, align 4
  %131 = load ptr, ptr %129, align 4
  %132 = getelementptr inbounds %struct.perf_event, ptr %130, i32 0, i32 4
  %133 = load i64, ptr %132, align 8
  %134 = getelementptr inbounds %struct.perf_event, ptr %131, i32 0, i32 4
  %135 = load i64, ptr %134, align 8
  %136 = icmp ult i64 %133, %135
  %137 = select i1 %136, ptr %130, ptr %131
  %138 = select i1 %136, ptr %127, ptr %129
  %139 = add i32 %124, 2
  %140 = icmp slt i32 %139, %69
  br i1 %140, label %141, label %153

141:                                              ; preds = %122
  %142 = shl i32 %139, 2
  %143 = getelementptr i8, ptr %68, i32 %142
  %144 = load ptr, ptr %143, align 4
  %145 = load ptr, ptr %138, align 4
  %146 = getelementptr inbounds %struct.perf_event, ptr %144, i32 0, i32 4
  %147 = load i64, ptr %146, align 8
  %148 = getelementptr inbounds %struct.perf_event, ptr %145, i32 0, i32 4
  %149 = load i64, ptr %148, align 8
  %150 = icmp ult i64 %147, %149
  %151 = select i1 %150, ptr %144, ptr %145
  %152 = select i1 %150, ptr %143, ptr %138
  br label %153

153:                                              ; preds = %141, %122
  %154 = phi ptr [ %137, %122 ], [ %151, %141 ]
  %155 = phi ptr [ %138, %122 ], [ %152, %141 ]
  %156 = icmp eq ptr %155, %129
  br i1 %156, label %163, label %157

157:                                              ; preds = %153
  store ptr %131, ptr %155, align 4
  store ptr %154, ptr %129, align 4
  %158 = icmp eq ptr %155, %127
  %159 = select i1 %158, i32 %123, i32 %139
  %160 = shl i32 %159, 1
  %161 = or i32 %160, 1
  %162 = icmp slt i32 %161, %69
  br i1 %162, label %122, label %163

163:                                              ; preds = %157, %153, %118, %115
  %164 = icmp eq i32 %69, 0
  br i1 %164, label %548, label %165

165:                                              ; preds = %545, %163
  %166 = phi i32 [ %546, %545 ], [ %69, %163 ]
  %167 = load ptr, ptr %68, align 4
  %168 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 26
  %169 = load ptr, ptr %168, align 8
  %170 = load ptr, ptr %169, align 8
  %171 = getelementptr inbounds %struct.pmu, ptr %170, i32 0, i32 9
  %172 = load ptr, ptr %171, align 4
  %173 = ptrtoint ptr %172 to i32
  %174 = call i32 @llvm.read_register.i32(metadata !0) #27
  %175 = inttoptr i32 %174 to ptr
  %176 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %175) #19, !srcloc !11
  %177 = add i32 %176, %173
  %178 = inttoptr i32 %177 to ptr
  %179 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 14
  %180 = load i32, ptr %179, align 8
  %181 = icmp slt i32 %180, 0
  br i1 %181, label %430, label %182

182:                                              ; preds = %165
  %183 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 34
  %184 = load i32, ptr %183, align 4
  %185 = icmp eq i32 %184, -1
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = tail call ptr @llvm.thread.pointer() #27
  %188 = getelementptr inbounds %struct.thread_info, ptr %187, i32 0, i32 2
  %189 = load i32, ptr %188, align 8
  %190 = icmp eq i32 %184, %189
  br i1 %190, label %191, label %430

191:                                              ; preds = %186, %182
  %192 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 12
  %193 = load ptr, ptr %192, align 8
  %194 = getelementptr inbounds %struct.pmu, ptr %193, i32 0, i32 37
  %195 = load ptr, ptr %194, align 4
  %196 = icmp eq ptr %195, null
  br i1 %196, label %200, label %197

197:                                              ; preds = %191
  %198 = call i32 %195(ptr noundef %167) #27
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %430, label %200

200:                                              ; preds = %197, %191
  %201 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 11
  %202 = load ptr, ptr %201, align 4
  %203 = icmp eq ptr %202, %167
  br i1 %203, label %204, label %222

204:                                              ; preds = %200
  %205 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 1
  br label %206

206:                                              ; preds = %219, %204
  %207 = phi ptr [ %205, %204 ], [ %208, %219 ]
  %208 = load ptr, ptr %207, align 8
  %209 = icmp eq ptr %208, %205
  br i1 %209, label %222, label %210

210:                                              ; preds = %206
  %211 = getelementptr i8, ptr %208, i32 80
  %212 = load ptr, ptr %211, align 8
  %213 = getelementptr inbounds %struct.pmu, ptr %212, i32 0, i32 37
  %214 = load ptr, ptr %213, align 4
  %215 = icmp eq ptr %214, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %210
  %217 = getelementptr i8, ptr %208, i32 -8
  %218 = call i32 %214(ptr noundef %217) #27
  br label %219

219:                                              ; preds = %216, %210
  %220 = phi i32 [ %218, %216 ], [ 1, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %430, label %206

222:                                              ; preds = %206, %200
  %223 = load i32, ptr %3, align 4
  %224 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 10
  %225 = load i32, ptr %224, align 8
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %250

228:                                              ; preds = %222
  %229 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 3
  %230 = load i32, ptr %229, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %313

232:                                              ; preds = %228
  %233 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 21, i32 6
  %234 = load i64, ptr %233, align 8
  %235 = and i64 %234, 8
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %232
  %238 = load ptr, ptr %168, align 8
  %239 = and i64 %234, 4
  %240 = icmp eq i64 %239, 0
  %241 = getelementptr inbounds %struct.perf_event_context, ptr %238, i32 0, i32 7
  %242 = getelementptr inbounds %struct.perf_event_context, ptr %238, i32 0, i32 8
  %243 = select i1 %240, ptr %242, ptr %241
  %244 = load volatile ptr, ptr %243, align 4
  %245 = icmp ne ptr %244, %243
  %246 = icmp eq i32 %223, 0
  %247 = select i1 %245, i1 true, i1 %246
  br i1 %247, label %313, label %250

248:                                              ; preds = %232
  %249 = icmp eq i32 %223, 0
  br i1 %249, label %313, label %250

250:                                              ; preds = %248, %237, %222
  %251 = load ptr, ptr %169, align 8
  %252 = load i32, ptr %179, align 8
  %253 = icmp eq i32 %252, -1
  br i1 %253, label %300, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %struct.pmu, ptr %251, i32 0, i32 24
  %256 = load ptr, ptr %255, align 4
  call void %256(ptr noundef %251, i32 noundef 1) #27
  %257 = call fastcc i32 @event_sched_in(ptr noundef %167, ptr noundef %178, ptr noundef %169) #27
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %297

259:                                              ; preds = %254
  %260 = load ptr, ptr %201, align 4
  %261 = icmp eq ptr %260, %167
  br i1 %261, label %262, label %272

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 1
  br label %264

264:                                              ; preds = %268, %262
  %265 = phi ptr [ %263, %262 ], [ %266, %268 ]
  %266 = load ptr, ptr %265, align 8
  %267 = icmp eq ptr %266, %263
  br i1 %267, label %272, label %268

268:                                              ; preds = %264
  %269 = getelementptr i8, ptr %266, i32 -8
  %270 = call fastcc i32 @event_sched_in(ptr noundef %269, ptr noundef %178, ptr noundef %169) #27
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %264, label %277

272:                                              ; preds = %264, %259
  %273 = getelementptr inbounds %struct.pmu, ptr %251, i32 0, i32 25
  %274 = load ptr, ptr %273, align 4
  %275 = call i32 %274(ptr noundef %251) #27
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %300, label %277

277:                                              ; preds = %272, %268
  %278 = phi ptr [ null, %272 ], [ %269, %268 ]
  %279 = load ptr, ptr %201, align 4
  %280 = icmp eq ptr %279, %167
  br i1 %280, label %281, label %296

281:                                              ; preds = %277
  %282 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 1
  %283 = load ptr, ptr %282, align 8
  %284 = getelementptr i8, ptr %283, i32 -8
  %285 = icmp eq ptr %283, %282
  %286 = icmp eq ptr %284, %278
  %287 = or i1 %285, %286
  br i1 %287, label %296, label %288

288:                                              ; preds = %288, %281
  %289 = phi ptr [ %292, %288 ], [ %284, %281 ]
  %290 = phi ptr [ %291, %288 ], [ %283, %281 ]
  call fastcc void @event_sched_out(ptr noundef %289, ptr noundef %178, ptr noundef %169) #27
  %291 = load ptr, ptr %290, align 8
  %292 = getelementptr i8, ptr %291, i32 -8
  %293 = icmp eq ptr %291, %282
  %294 = icmp eq ptr %292, %278
  %295 = or i1 %293, %294
  br i1 %295, label %296, label %288

296:                                              ; preds = %288, %281, %277
  call fastcc void @event_sched_out(ptr noundef %167, ptr noundef %178, ptr noundef %169) #27
  br label %297

297:                                              ; preds = %296, %254
  %298 = getelementptr inbounds %struct.pmu, ptr %251, i32 0, i32 26
  %299 = load ptr, ptr %298, align 4
  call void %299(ptr noundef %251) #27
  br label %313

300:                                              ; preds = %272, %250
  %301 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 2
  %302 = load ptr, ptr %168, align 8
  %303 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 21, i32 6
  %304 = load i64, ptr %303, align 8
  %305 = and i64 %304, 4
  %306 = icmp eq i64 %305, 0
  %307 = getelementptr inbounds %struct.perf_event_context, ptr %302, i32 0, i32 7
  %308 = getelementptr inbounds %struct.perf_event_context, ptr %302, i32 0, i32 8
  %309 = select i1 %306, ptr %308, ptr %307
  %310 = getelementptr inbounds %struct.list_head, ptr %309, i32 0, i32 1
  %311 = load ptr, ptr %310, align 4
  store ptr %301, ptr %310, align 4
  store ptr %309, ptr %301, align 4
  %312 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 2, i32 1
  store ptr %311, ptr %312, align 4
  store volatile ptr %301, ptr %311, align 4
  br label %313

313:                                              ; preds = %300, %297, %248, %237, %228
  %314 = load i32, ptr %179, align 8
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %430

316:                                              ; preds = %313
  store i32 0, ptr %3, align 4
  %317 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 21, i32 6
  %318 = load i64, ptr %317, align 8
  %319 = and i64 %318, 4
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %322, label %321

321:                                              ; preds = %316
  call fastcc void @perf_event_set_state(ptr noundef %167, i32 noundef -2) #27
  br label %430

322:                                              ; preds = %316
  %323 = getelementptr inbounds %struct.perf_event_context, ptr %169, i32 0, i32 16
  store i32 1, ptr %323, align 4
  %324 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 5
  %325 = load ptr, ptr %178, align 8
  %326 = getelementptr inbounds %struct.pmu, ptr %325, i32 0, i32 11
  %327 = load i32, ptr %326, align 4
  %328 = icmp eq i32 %327, 1
  br i1 %328, label %350, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 4
  %331 = call i32 @_raw_spin_lock_irqsave(ptr noundef %330) #27
  %332 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 7
  %333 = load i32, ptr %332, align 8
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %335, label %349

335:                                              ; preds = %329
  store i32 1, ptr %332, align 8
  %336 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 6
  %337 = load i64, ptr %336, align 8
  %338 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 5, i32 3
  %339 = load ptr, ptr %338, align 4
  %340 = getelementptr inbounds %struct.hrtimer_clock_base, ptr %339, i32 0, i32 6
  %341 = load ptr, ptr %340, align 4
  %342 = call i64 %341() #27
  %343 = call i64 @hrtimer_forward(ptr noundef %324, i64 noundef %342, i64 noundef %337) #27
  %344 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 5, i32 1
  %345 = load i64, ptr %344, align 8
  %346 = getelementptr inbounds %struct.perf_cpu_context, ptr %178, i32 0, i32 5, i32 0, i32 1
  %347 = load i64, ptr %346, align 8
  %348 = sub i64 %347, %345
  call void @hrtimer_start_range_ns(ptr noundef %324, i64 noundef %345, i64 noundef %348, i32 noundef 10) #27
  br label %349

349:                                              ; preds = %335, %329
  call void @_raw_spin_unlock_irqrestore(ptr noundef %330, i32 noundef %331) #27
  br label %350

350:                                              ; preds = %349, %322
  %351 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 38
  %352 = load volatile i32, ptr %351, align 4
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %430, label %354, !prof !23

354:                                              ; preds = %350
  %355 = load ptr, ptr %168, align 8
  %356 = icmp eq ptr %355, null
  br i1 %356, label %360, label %357, !prof !12

357:                                              ; preds = %354
  %358 = getelementptr inbounds %struct.perf_event_context, ptr %355, i32 0, i32 19
  %359 = load i64, ptr %358, align 8
  br label %360

360:                                              ; preds = %357, %354
  %361 = phi i64 [ %359, %357 ], [ 0, %354 ]
  %362 = load ptr, ptr %201, align 4
  %363 = getelementptr inbounds %struct.perf_event, ptr %362, i32 0, i32 14
  %364 = load i32, ptr %363, align 8
  %365 = icmp slt i32 %364, 0
  br i1 %365, label %368, label %366

366:                                              ; preds = %360
  %367 = load i32, ptr %179, align 8
  br label %368

368:                                              ; preds = %366, %360
  %369 = phi i32 [ %367, %366 ], [ %364, %360 ]
  %370 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 19
  %371 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 18
  %372 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 20
  %373 = load i64, ptr %372, align 8
  %374 = sub i64 %361, %373
  %375 = load i64, ptr %371, align 8
  %376 = icmp slt i32 %369, 0
  %377 = select i1 %376, i64 0, i64 %374
  %378 = add i64 %377, %375
  store i64 %378, ptr %371, align 8
  %379 = load i64, ptr %370, align 8
  %380 = icmp sgt i32 %369, 0
  %381 = select i1 %380, i64 %374, i64 0
  %382 = add i64 %379, %381
  store i64 %382, ptr %370, align 8
  store i64 %361, ptr %372, align 8
  call void @perf_event_update_userpage(ptr noundef %167) #27
  %383 = load ptr, ptr %201, align 4
  %384 = icmp eq ptr %383, %167
  br i1 %384, label %385, label %430

385:                                              ; preds = %368
  %386 = getelementptr inbounds %struct.perf_event, ptr %167, i32 0, i32 1
  %387 = load ptr, ptr %386, align 8
  %388 = icmp eq ptr %387, %386
  br i1 %388, label %430, label %389

389:                                              ; preds = %427, %385
  %390 = phi ptr [ %428, %427 ], [ %387, %385 ]
  %391 = getelementptr i8, ptr %390, i32 -8
  %392 = getelementptr i8, ptr %390, i32 536
  %393 = load volatile i32, ptr %392, align 4
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %427, label %395, !prof !23

395:                                              ; preds = %389
  %396 = getelementptr i8, ptr %390, i32 440
  %397 = load ptr, ptr %396, align 8
  %398 = icmp eq ptr %397, null
  br i1 %398, label %402, label %399, !prof !12

399:                                              ; preds = %395
  %400 = getelementptr inbounds %struct.perf_event_context, ptr %397, i32 0, i32 19
  %401 = load i64, ptr %400, align 8
  br label %402

402:                                              ; preds = %399, %395
  %403 = phi i64 [ %401, %399 ], [ 0, %395 ]
  %404 = getelementptr i8, ptr %390, i32 76
  %405 = load ptr, ptr %404, align 4
  %406 = getelementptr inbounds %struct.perf_event, ptr %405, i32 0, i32 14
  %407 = load i32, ptr %406, align 8
  %408 = icmp slt i32 %407, 0
  br i1 %408, label %412, label %409

409:                                              ; preds = %402
  %410 = getelementptr i8, ptr %390, i32 88
  %411 = load i32, ptr %410, align 8
  br label %412

412:                                              ; preds = %409, %402
  %413 = phi i32 [ %411, %409 ], [ %407, %402 ]
  %414 = getelementptr i8, ptr %390, i32 120
  %415 = getelementptr i8, ptr %390, i32 112
  %416 = getelementptr i8, ptr %390, i32 128
  %417 = load i64, ptr %416, align 8
  %418 = sub i64 %403, %417
  %419 = load i64, ptr %415, align 8
  %420 = icmp slt i32 %413, 0
  %421 = select i1 %420, i64 0, i64 %418
  %422 = add i64 %421, %419
  store i64 %422, ptr %415, align 8
  %423 = load i64, ptr %414, align 8
  %424 = icmp sgt i32 %413, 0
  %425 = select i1 %424, i64 %418, i64 0
  %426 = add i64 %423, %425
  store i64 %426, ptr %414, align 8
  store i64 %403, ptr %416, align 8
  call void @perf_event_update_userpage(ptr noundef %391) #27
  br label %427

427:                                              ; preds = %412, %389
  %428 = load ptr, ptr %390, align 8
  %429 = icmp eq ptr %428, %386
  br i1 %429, label %430, label %389

430:                                              ; preds = %427, %385, %368, %350, %321, %313, %219, %197, %186, %165
  %431 = load ptr, ptr %68, align 4
  %432 = getelementptr inbounds %struct.perf_event, ptr %431, i32 0, i32 34
  %433 = load i32, ptr %432, align 4
  %434 = getelementptr inbounds %struct.perf_event, ptr %431, i32 0, i32 3
  %435 = call ptr @rb_next(ptr noundef %434) #27
  %436 = icmp eq ptr %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %430
  %438 = getelementptr i8, ptr %435, i32 484
  %439 = load i32, ptr %438, align 4
  %440 = icmp eq i32 %439, %433
  %441 = select i1 %440, ptr %435, ptr null
  br label %442

442:                                              ; preds = %437, %430
  %443 = phi ptr [ null, %430 ], [ %441, %437 ]
  %444 = icmp eq ptr %443, null
  %445 = getelementptr i8, ptr %443, i32 -24
  %446 = select i1 %444, ptr null, ptr %445
  store ptr %446, ptr %68, align 4
  %447 = icmp eq ptr %446, null
  br i1 %447, label %491, label %448

448:                                              ; preds = %442
  %449 = icmp sgt i32 %166, 1
  br i1 %449, label %450, label %545

450:                                              ; preds = %485, %448
  %451 = phi i32 [ %489, %485 ], [ 1, %448 ]
  %452 = phi i32 [ %488, %485 ], [ 0, %448 ]
  %453 = phi i32 [ %487, %485 ], [ 0, %448 ]
  %454 = shl i32 %451, 2
  %455 = getelementptr i8, ptr %68, i32 %454
  %456 = shl i32 %453, 2
  %457 = getelementptr i8, ptr %68, i32 %456
  %458 = load ptr, ptr %455, align 4
  %459 = load ptr, ptr %457, align 4
  %460 = getelementptr inbounds %struct.perf_event, ptr %458, i32 0, i32 4
  %461 = load i64, ptr %460, align 8
  %462 = getelementptr inbounds %struct.perf_event, ptr %459, i32 0, i32 4
  %463 = load i64, ptr %462, align 8
  %464 = icmp ult i64 %461, %463
  %465 = select i1 %464, ptr %458, ptr %459
  %466 = select i1 %464, ptr %455, ptr %457
  %467 = add i32 %452, 2
  %468 = icmp slt i32 %467, %166
  br i1 %468, label %469, label %481

469:                                              ; preds = %450
  %470 = shl i32 %467, 2
  %471 = getelementptr i8, ptr %68, i32 %470
  %472 = load ptr, ptr %471, align 4
  %473 = load ptr, ptr %466, align 4
  %474 = getelementptr inbounds %struct.perf_event, ptr %472, i32 0, i32 4
  %475 = load i64, ptr %474, align 8
  %476 = getelementptr inbounds %struct.perf_event, ptr %473, i32 0, i32 4
  %477 = load i64, ptr %476, align 8
  %478 = icmp ult i64 %475, %477
  %479 = select i1 %478, ptr %472, ptr %473
  %480 = select i1 %478, ptr %471, ptr %466
  br label %481

481:                                              ; preds = %469, %450
  %482 = phi ptr [ %465, %450 ], [ %479, %469 ]
  %483 = phi ptr [ %466, %450 ], [ %480, %469 ]
  %484 = icmp eq ptr %483, %457
  br i1 %484, label %545, label %485

485:                                              ; preds = %481
  store ptr %459, ptr %483, align 4
  store ptr %482, ptr %457, align 4
  %486 = icmp eq ptr %483, %455
  %487 = select i1 %486, i32 %451, i32 %467
  %488 = shl i32 %487, 1
  %489 = or i32 %488, 1
  %490 = icmp slt i32 %489, %166
  br i1 %490, label %450, label %545

491:                                              ; preds = %442
  %492 = icmp slt i32 %166, 1
  %493 = load i1, ptr @min_heap_pop.__already_done, align 1
  %494 = xor i1 %493, true
  %495 = select i1 %492, i1 %494, i1 false
  br i1 %495, label %496, label %497, !prof !12

496:                                              ; preds = %491
  store i1 true, ptr @min_heap_pop.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 84, i32 noundef 9, ptr noundef nonnull @.str.24) #27
  br label %497

497:                                              ; preds = %496, %491
  br i1 %492, label %545, label %498

498:                                              ; preds = %497
  %499 = add nsw i32 %166, -1
  %500 = shl i32 %499, 2
  %501 = getelementptr i8, ptr %68, i32 %500
  %502 = load i32, ptr %501, align 1
  store i32 %502, ptr %68, align 1
  %503 = icmp ugt i32 %499, 1
  br i1 %503, label %504, label %545

504:                                              ; preds = %539, %498
  %505 = phi i32 [ %543, %539 ], [ 1, %498 ]
  %506 = phi i32 [ %542, %539 ], [ 0, %498 ]
  %507 = phi i32 [ %541, %539 ], [ 0, %498 ]
  %508 = shl i32 %505, 2
  %509 = getelementptr i8, ptr %68, i32 %508
  %510 = shl i32 %507, 2
  %511 = getelementptr i8, ptr %68, i32 %510
  %512 = load ptr, ptr %509, align 4
  %513 = load ptr, ptr %511, align 4
  %514 = getelementptr inbounds %struct.perf_event, ptr %512, i32 0, i32 4
  %515 = load i64, ptr %514, align 8
  %516 = getelementptr inbounds %struct.perf_event, ptr %513, i32 0, i32 4
  %517 = load i64, ptr %516, align 8
  %518 = icmp ult i64 %515, %517
  %519 = select i1 %518, ptr %512, ptr %513
  %520 = select i1 %518, ptr %509, ptr %511
  %521 = add i32 %506, 2
  %522 = icmp slt i32 %521, %499
  br i1 %522, label %523, label %535

523:                                              ; preds = %504
  %524 = shl i32 %521, 2
  %525 = getelementptr i8, ptr %68, i32 %524
  %526 = load ptr, ptr %525, align 4
  %527 = load ptr, ptr %520, align 4
  %528 = getelementptr inbounds %struct.perf_event, ptr %526, i32 0, i32 4
  %529 = load i64, ptr %528, align 8
  %530 = getelementptr inbounds %struct.perf_event, ptr %527, i32 0, i32 4
  %531 = load i64, ptr %530, align 8
  %532 = icmp ult i64 %529, %531
  %533 = select i1 %532, ptr %526, ptr %527
  %534 = select i1 %532, ptr %525, ptr %520
  br label %535

535:                                              ; preds = %523, %504
  %536 = phi ptr [ %519, %504 ], [ %533, %523 ]
  %537 = phi ptr [ %520, %504 ], [ %534, %523 ]
  %538 = icmp eq ptr %537, %511
  br i1 %538, label %545, label %539

539:                                              ; preds = %535
  store ptr %513, ptr %537, align 4
  store ptr %536, ptr %511, align 4
  %540 = icmp eq ptr %537, %509
  %541 = select i1 %540, i32 %505, i32 %521
  %542 = shl i32 %541, 1
  %543 = or i32 %542, 1
  %544 = icmp slt i32 %543, %499
  br i1 %544, label %504, label %545

545:                                              ; preds = %539, %535, %498, %497, %485, %481, %448
  %546 = phi i32 [ %166, %448 ], [ %166, %497 ], [ %499, %498 ], [ %499, %535 ], [ %499, %539 ], [ %166, %481 ], [ %166, %485 ]
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %548, label %165

548:                                              ; preds = %545, %163
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_mux_hrtimer_restart(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 5
  %3 = load ptr, ptr %0, align 8
  %4 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 11
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %28, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 4
  %9 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %8) #27
  %10 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 7
  %11 = load i32, ptr %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %7
  store i32 1, ptr %10, align 8
  %14 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 6
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 5, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.hrtimer_clock_base, ptr %17, i32 0, i32 6
  %19 = load ptr, ptr %18, align 4
  %20 = tail call i64 %19() #27
  %21 = tail call i64 @hrtimer_forward(ptr noundef %2, i64 noundef %20, i64 noundef %15) #27
  %22 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 5, i32 1
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 5, i32 0, i32 1
  %25 = load i64, ptr %24, align 8
  %26 = sub i64 %25, %23
  tail call void @hrtimer_start_range_ns(ptr noundef %2, i64 noundef %23, i64 noundef %26, i32 noundef 10) #27
  br label %27

27:                                               ; preds = %13, %7
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %8, i32 noundef %9) #27
  br label %28

28:                                               ; preds = %27, %1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @event_sched_in(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.perf_output_handle, align 8
  %5 = alloca %struct.perf_sample_data, align 64
  %6 = alloca %struct.perf_aux_event.191, align 4
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %8 = load ptr, ptr %7, align 8
  %9 = icmp ne ptr %8, %2
  %10 = load i1, ptr @event_sched_in.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !12

13:                                               ; preds = %3
  store i1 true, ptr @event_sched_in.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2571, i32 noundef 9, ptr noundef null) #27
  br label %14

14:                                               ; preds = %13, %3
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %16 = load i32, ptr %15, align 8
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %179, label %18

18:                                               ; preds = %14
  %19 = tail call ptr @llvm.thread.pointer() #27
  %20 = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  store volatile i32 %21, ptr %22, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #27, !srcloc !94
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef 1)
  %23 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %24 = load i64, ptr %23, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %26, label %27, !prof !12

26:                                               ; preds = %18
  tail call fastcc void @perf_log_throttle(ptr noundef %0, i32 noundef 1)
  store i64 0, ptr %23, align 8
  br label %27

27:                                               ; preds = %26, %18
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.pmu, ptr %29, i32 0, i32 8
  %31 = load ptr, ptr %30, align 4
  %32 = ptrtoint ptr %31 to i32
  %33 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %34 = inttoptr i32 %33 to ptr
  %35 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %34) #19, !srcloc !11
  %36 = add i32 %35, %32
  %37 = inttoptr i32 %36 to ptr
  %38 = load i32, ptr %37, align 4
  %39 = add i32 %38, 1
  store i32 %39, ptr %37, align 4
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %27
  %42 = getelementptr inbounds %struct.pmu, ptr %29, i32 0, i32 15
  %43 = load ptr, ptr %42, align 4
  tail call void %43(ptr noundef %29) #27
  br label %44

44:                                               ; preds = %41, %27
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %4, i8 0, i32 32, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %5, i8 0, i32 192, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #27
  %45 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  %48 = select i1 %47, ptr %0, ptr %46
  %49 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 12
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds %struct.pmu, ptr %50, i32 0, i32 7
  %52 = load i32, ptr %51, align 4
  %53 = and i32 %52, 32
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %107, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 15
  %57 = load i32, ptr %56, align 4
  %58 = and i32 %57, 16
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %107

60:                                               ; preds = %55
  store i32 12, ptr %6, align 4
  %61 = getelementptr inbounds %struct.perf_event_header, ptr %6, i32 0, i32 1
  store i16 0, ptr %61, align 4
  %62 = getelementptr inbounds %struct.perf_event_header, ptr %6, i32 0, i32 2
  store i16 16, ptr %62, align 2
  %63 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 32
  %64 = load ptr, ptr %63, align 4
  %65 = icmp eq ptr %64, null
  %66 = select i1 %65, ptr %48, ptr %64
  %67 = getelementptr inbounds %struct.perf_event, ptr %66, i32 0, i32 57
  %68 = load ptr, ptr %67, align 4
  %69 = tail call i32 @__task_pid_nr_ns(ptr noundef %19, i32 noundef 1, ptr noundef %68) #27
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %60
  %72 = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 62
  %73 = load ptr, ptr %72, align 64
  %74 = icmp eq ptr %73, null
  %75 = sext i1 %74 to i32
  br label %76

76:                                               ; preds = %71, %60
  %77 = phi i32 [ %69, %60 ], [ %75, %71 ]
  %78 = getelementptr inbounds %struct.perf_aux_event.191, ptr %6, i32 0, i32 1
  store i32 %77, ptr %78, align 4
  %79 = load ptr, ptr %63, align 4
  %80 = icmp eq ptr %79, null
  %81 = select i1 %80, ptr %48, ptr %79
  %82 = getelementptr inbounds %struct.perf_event, ptr %81, i32 0, i32 57
  %83 = load ptr, ptr %82, align 4
  %84 = tail call i32 @__task_pid_nr_ns(ptr noundef %19, i32 noundef 0, ptr noundef %83) #27
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %91

86:                                               ; preds = %76
  %87 = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 62
  %88 = load ptr, ptr %87, align 64
  %89 = icmp eq ptr %88, null
  %90 = sext i1 %89 to i32
  br label %91

91:                                               ; preds = %86, %76
  %92 = phi i32 [ %84, %76 ], [ %90, %86 ]
  %93 = getelementptr inbounds %struct.perf_aux_event.191, ptr %6, i32 0, i32 2
  store i32 %92, ptr %93, align 4
  %94 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 21, i32 6
  %95 = load i64, ptr %94, align 8
  %96 = and i64 %95, 262144
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %91
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %6, ptr noundef nonnull %5, ptr noundef %48) #27
  %99 = load i16, ptr %62, align 2
  %100 = zext i16 %99 to i32
  br label %101

101:                                              ; preds = %98, %91
  %102 = phi i32 [ 16, %91 ], [ %100, %98 ]
  %103 = call i32 @perf_output_begin(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef %48, i32 noundef %102) #27
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  %106 = call i32 @perf_output_copy(ptr noundef nonnull %4, ptr noundef nonnull %6, i32 noundef 16) #27
  call void @perf_event__output_id_sample(ptr noundef %48, ptr noundef nonnull %4, ptr noundef nonnull %5) #27
  call void @perf_output_end(ptr noundef nonnull %4) #27
  br label %107

107:                                              ; preds = %105, %101, %55, %44
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #27
  %108 = load ptr, ptr %28, align 8
  %109 = getelementptr inbounds %struct.pmu, ptr %108, i32 0, i32 19
  %110 = load ptr, ptr %109, align 4
  %111 = call i32 %110(ptr noundef %0, i32 noundef 1) #27
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %107
  call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef 0)
  store i32 -1, ptr %22, align 8
  br label %162

114:                                              ; preds = %107
  %115 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %116 = load i32, ptr %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %123

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 2
  %121 = load i32, ptr %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, ptr %120, align 4
  br label %123

123:                                              ; preds = %119, %114
  %124 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 10
  %125 = load i32, ptr %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, ptr %124, align 4
  %127 = icmp eq i32 %125, 0
  br i1 %127, label %128, label %142

128:                                              ; preds = %123
  %129 = call i32 @llvm.read_register.i32(metadata !0) #27
  %130 = inttoptr i32 %129 to ptr
  %131 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %130) #19, !srcloc !11
  %132 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 3
  %133 = load volatile ptr, ptr %132, align 4
  %134 = icmp eq ptr %133, %132
  br i1 %134, label %136, label %135, !prof !23

135:                                              ; preds = %128
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1254, i32 noundef 9, ptr noundef null) #27
  br label %136

136:                                              ; preds = %135, %128
  %137 = add i32 %131, ptrtoint (ptr @active_ctx_list to i32)
  %138 = inttoptr i32 %137 to ptr
  %139 = load ptr, ptr %138, align 4
  %140 = getelementptr inbounds %struct.list_head, ptr %139, i32 0, i32 1
  store ptr %132, ptr %140, align 4
  store ptr %139, ptr %132, align 4
  %141 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 3, i32 1
  store ptr %138, ptr %141, align 4
  store volatile ptr %132, ptr %138, align 4
  br label %142

142:                                              ; preds = %136, %123
  %143 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %144 = load i64, ptr %143, align 8
  %145 = and i64 %144, 1024
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %156, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %149 = load i64, ptr %148, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %156, label %151

151:                                              ; preds = %147
  %152 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 14
  %153 = load i32, ptr %152, align 4
  %154 = add i32 %153, 1
  store i32 %154, ptr %152, align 4
  %155 = load i64, ptr %143, align 8
  br label %156

156:                                              ; preds = %151, %147, %142
  %157 = phi i64 [ %155, %151 ], [ %144, %147 ], [ %144, %142 ]
  %158 = and i64 %157, 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 3
  store i32 1, ptr %161, align 8
  br label %162

162:                                              ; preds = %160, %156, %113
  %163 = phi i32 [ -11, %113 ], [ 0, %160 ], [ 0, %156 ]
  %164 = load ptr, ptr %28, align 8
  %165 = getelementptr inbounds %struct.pmu, ptr %164, i32 0, i32 8
  %166 = load ptr, ptr %165, align 4
  %167 = ptrtoint ptr %166 to i32
  %168 = call i32 @llvm.read_register.i32(metadata !0) #27
  %169 = inttoptr i32 %168 to ptr
  %170 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %169) #19, !srcloc !11
  %171 = add i32 %170, %167
  %172 = inttoptr i32 %171 to ptr
  %173 = load i32, ptr %172, align 4
  %174 = add i32 %173, -1
  store i32 %174, ptr %172, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %162
  %177 = getelementptr inbounds %struct.pmu, ptr %164, i32 0, i32 14
  %178 = load ptr, ptr %177, align 4
  call void %178(ptr noundef %164) #27
  br label %179

179:                                              ; preds = %176, %162, %14
  %180 = phi i32 [ 0, %14 ], [ %163, %162 ], [ %163, %176 ]
  ret i32 %180
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_log_throttle(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  %5 = alloca %struct.anon.190, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #27
  store i32 5, ptr %5, align 8
  %6 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 1
  store i16 0, ptr %6, align 4
  %7 = getelementptr inbounds %struct.perf_event_header, ptr %5, i32 0, i32 2
  store i16 32, ptr %7, align 2
  %8 = getelementptr inbounds %struct.anon.190, ptr %5, i32 0, i32 1
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 59
  %10 = load ptr, ptr %9, align 8
  %11 = tail call i64 %10() #27
  store i64 %11, ptr %8, align 8
  %12 = getelementptr inbounds %struct.anon.190, ptr %5, i32 0, i32 2
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = select i1 %15, ptr %0, ptr %14
  %17 = getelementptr inbounds %struct.perf_event, ptr %16, i32 0, i32 58
  %18 = load i64, ptr %17, align 8
  store i64 %18, ptr %12, align 8
  %19 = getelementptr inbounds %struct.anon.190, ptr %5, i32 0, i32 3
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 58
  %21 = load i64, ptr %20, align 8
  store i64 %21, ptr %19, align 8
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %2
  store i32 6, ptr %5, align 8
  br label %24

24:                                               ; preds = %23, %2
  %25 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %26 = load i64, ptr %25, align 8
  %27 = and i64 %26, 262144
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef %0) #27
  %30 = load i16, ptr %7, align 2
  %31 = zext i16 %30 to i32
  br label %32

32:                                               ; preds = %29, %24
  %33 = phi i32 [ 32, %24 ], [ %31, %29 ]
  %34 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %33) #27
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef nonnull %5, i32 noundef 32) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %38

38:                                               ; preds = %36, %32
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__task_pid_nr_ns(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @hrtimer_forward(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_event_enable(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readnone %3) #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %91

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 12
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call fastcc void @ctx_sched_out(ptr noundef %2, ptr noundef %1, i32 noundef 4)
  br label %15

15:                                               ; preds = %14, %10
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef 0)
  %16 = load i32, ptr %11, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %91, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = tail call ptr @llvm.thread.pointer() #27
  %24 = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 2
  %25 = load i32, ptr %24, align 8
  %26 = icmp eq i32 %20, %25
  br i1 %26, label %27, label %57

27:                                               ; preds = %22, %18
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr inbounds %struct.pmu, ptr %29, i32 0, i32 37
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = tail call i32 %31(ptr noundef %0) #27
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %57, label %36

36:                                               ; preds = %33, %27
  %37 = load ptr, ptr %5, align 4
  %38 = icmp eq ptr %37, %0
  br i1 %38, label %39, label %58

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  br label %41

41:                                               ; preds = %54, %39
  %42 = phi ptr [ %40, %39 ], [ %43, %54 ]
  %43 = load ptr, ptr %42, align 8
  %44 = icmp eq ptr %43, %40
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr i8, ptr %43, i32 80
  %47 = load ptr, ptr %46, align 8
  %48 = getelementptr inbounds %struct.pmu, ptr %47, i32 0, i32 37
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = getelementptr i8, ptr %43, i32 -8
  %53 = tail call i32 %49(ptr noundef %52) #27
  br label %54

54:                                               ; preds = %51, %45
  %55 = phi i32 [ %53, %51 ], [ 1, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %41

57:                                               ; preds = %54, %33, %22
  tail call fastcc void @ctx_sched_in(ptr noundef %2, ptr noundef %1, i32 noundef 4)
  br label %91

58:                                               ; preds = %41, %36
  %59 = icmp eq ptr %6, %0
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 14
  %62 = load i32, ptr %61, align 8
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call fastcc void @ctx_sched_in(ptr noundef %2, ptr noundef %1, i32 noundef 4)
  br label %91

65:                                               ; preds = %60, %58
  %66 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 18
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = icmp ne ptr %67, %2
  %73 = load i1, ptr @__perf_event_enable.__already_done, align 1
  %74 = xor i1 %73, true
  %75 = select i1 %72, i1 %74, i1 false
  br i1 %75, label %76, label %77, !prof !12

76:                                               ; preds = %71
  store i1 true, ptr @__perf_event_enable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3029, i32 noundef 9, ptr noundef null) #27
  br label %77

77:                                               ; preds = %76, %71, %65
  %78 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %79 = load ptr, ptr %78, align 8
  %80 = load ptr, ptr %5, align 4
  %81 = getelementptr inbounds %struct.perf_event, ptr %80, i32 0, i32 21, i32 6
  %82 = load i64, ptr %81, align 8
  %83 = and i64 %82, 4
  %84 = icmp eq i64 %83, 0
  %85 = select i1 %84, i32 1, i32 2
  %86 = getelementptr inbounds %struct.perf_event_context, ptr %79, i32 0, i32 18
  %87 = load ptr, ptr %86, align 4
  %88 = icmp eq ptr %87, null
  %89 = or i32 %85, 8
  %90 = select i1 %88, i32 %89, i32 %85
  tail call fastcc void @ctx_resched(ptr noundef %1, ptr noundef %67, i32 noundef %90)
  br label %91

91:                                               ; preds = %77, %64, %57, %15, %4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__perf_pmu_sched_task(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = load ptr, ptr %0, align 8
  %4 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 28
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  %7 = load i1, ptr @__perf_pmu_sched_task.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %11, !prof !12

10:                                               ; preds = %2
  store i1 true, ptr @__perf_pmu_sched_task.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3604, i32 noundef 9, ptr noundef null) #27
  br label %11

11:                                               ; preds = %10, %2
  br i1 %6, label %60, label %12

12:                                               ; preds = %11
  %13 = getelementptr inbounds %struct.perf_cpu_context, ptr %0, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %15) #27
  %16 = icmp eq ptr %14, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %14, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %18) #27
  br label %19

19:                                               ; preds = %17, %12
  %20 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %24 = inttoptr i32 %23 to ptr
  %25 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %24) #19, !srcloc !11
  %26 = add i32 %25, %22
  %27 = inttoptr i32 %26 to ptr
  %28 = load i32, ptr %27, align 4
  %29 = add i32 %28, 1
  store i32 %29, ptr %27, align 4
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 15
  %33 = load ptr, ptr %32, align 4
  tail call void %33(ptr noundef %3) #27
  br label %34

34:                                               ; preds = %31, %19
  %35 = load ptr, ptr %4, align 4
  %36 = load ptr, ptr %13, align 8
  tail call void %35(ptr noundef %36, i1 noundef zeroext %1) #27
  %37 = load ptr, ptr %20, align 4
  %38 = ptrtoint ptr %37 to i32
  %39 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %40 = inttoptr i32 %39 to ptr
  %41 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %40) #19, !srcloc !11
  %42 = add i32 %41, %38
  %43 = inttoptr i32 %42 to ptr
  %44 = load i32, ptr %43, align 4
  %45 = add i32 %44, -1
  store i32 %45, ptr %43, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %34
  %48 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 14
  %49 = load ptr, ptr %48, align 4
  tail call void %49(ptr noundef %3) #27
  br label %50

50:                                               ; preds = %47, %34
  %51 = load ptr, ptr %13, align 8
  %52 = icmp eq ptr %51, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.perf_event_context, ptr %51, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %55 = load i16, ptr %54, align 4
  %56 = add i16 %55, 1
  store i16 %56, ptr %54, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %57

57:                                               ; preds = %53, %50
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %58 = load i16, ptr %15, align 4
  %59 = add i16 %58, 1
  store i16 %59, ptr %15, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %60

60:                                               ; preds = %57, %11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_adjust_period(ptr noundef %0, i64 noundef %1, i64 noundef %2, i1 noundef zeroext %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %6 = load i64, ptr %5, align 8
  %7 = lshr i64 %2, 32
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = tail call i32 @llvm.ctlz.i32(i32 %8, i1 true) #27, !range !95
  %12 = sub nuw nsw i32 64, %11
  br label %19

13:                                               ; preds = %4
  %14 = trunc i64 %2 to i32
  %15 = icmp eq i32 %14, 0
  %16 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 false) #27, !range !95
  %17 = sub nuw nsw i32 32, %16
  %18 = select i1 %15, i32 0, i32 %17
  br label %19

19:                                               ; preds = %13, %10
  %20 = phi i32 [ %12, %10 ], [ %18, %13 ]
  %21 = lshr i64 %1, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @llvm.ctlz.i32(i32 %22, i1 true) #27, !range !95
  %26 = sub nuw nsw i32 64, %25
  br label %33

27:                                               ; preds = %19
  %28 = trunc i64 %1 to i32
  %29 = icmp eq i32 %28, 0
  %30 = tail call i32 @llvm.ctlz.i32(i32 %28, i1 false) #27, !range !95
  %31 = sub nuw nsw i32 32, %30
  %32 = select i1 %29, i32 0, i32 %31
  br label %33

33:                                               ; preds = %27, %24
  %34 = phi i32 [ %26, %24 ], [ %32, %27 ]
  %35 = lshr i64 %6, 32
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = tail call i32 @llvm.ctlz.i32(i32 %36, i1 true) #27, !range !95
  %40 = sub nuw nsw i32 64, %39
  br label %47

41:                                               ; preds = %33
  %42 = trunc i64 %6 to i32
  %43 = icmp eq i32 %42, 0
  %44 = tail call i32 @llvm.ctlz.i32(i32 %42, i1 false) #27, !range !95
  %45 = sub nuw nsw i32 32, %44
  %46 = select i1 %43, i32 0, i32 %45
  br label %47

47:                                               ; preds = %41, %38
  %48 = phi i32 [ %40, %38 ], [ %46, %41 ]
  %49 = icmp ugt i32 %20, 34
  %50 = add nuw nsw i32 %48, %34
  %51 = icmp ugt i32 %50, 64
  %52 = select i1 %49, i1 %51, i1 false
  br i1 %52, label %53, label %91

53:                                               ; preds = %81, %47
  %54 = phi i32 [ %85, %81 ], [ 30, %47 ]
  %55 = phi i32 [ %73, %81 ], [ %48, %47 ]
  %56 = phi i32 [ %72, %81 ], [ %34, %47 ]
  %57 = phi i32 [ %84, %81 ], [ %20, %47 ]
  %58 = phi i64 [ %83, %81 ], [ 1000000000, %47 ]
  %59 = phi i64 [ %71, %81 ], [ %6, %47 ]
  %60 = phi i64 [ %82, %81 ], [ %2, %47 ]
  %61 = phi i64 [ %70, %81 ], [ %1, %47 ]
  %62 = icmp sgt i32 %56, %55
  br i1 %62, label %63, label %66

63:                                               ; preds = %53
  %64 = lshr i64 %61, 1
  %65 = add nsw i32 %56, -1
  br label %69

66:                                               ; preds = %53
  %67 = lshr i64 %59, 1
  %68 = add i32 %55, -1
  br label %69

69:                                               ; preds = %66, %63
  %70 = phi i64 [ %64, %63 ], [ %61, %66 ]
  %71 = phi i64 [ %59, %63 ], [ %67, %66 ]
  %72 = phi i32 [ %65, %63 ], [ %56, %66 ]
  %73 = phi i32 [ %55, %63 ], [ %68, %66 ]
  %74 = icmp sgt i32 %54, %57
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = lshr i64 %58, 1
  %77 = add nsw i32 %54, -1
  br label %81

78:                                               ; preds = %69
  %79 = lshr i64 %60, 1
  %80 = add i32 %57, -1
  br label %81

81:                                               ; preds = %78, %75
  %82 = phi i64 [ %60, %75 ], [ %79, %78 ]
  %83 = phi i64 [ %76, %75 ], [ %58, %78 ]
  %84 = phi i32 [ %57, %75 ], [ %80, %78 ]
  %85 = phi i32 [ %77, %75 ], [ %54, %78 ]
  %86 = add i32 %85, %84
  %87 = icmp sgt i32 %86, 64
  %88 = add i32 %73, %72
  %89 = icmp sgt i32 %88, 64
  %90 = select i1 %87, i1 %89, i1 false
  br i1 %90, label %53, label %91

91:                                               ; preds = %81, %47
  %92 = phi i64 [ %1, %47 ], [ %70, %81 ]
  %93 = phi i64 [ %2, %47 ], [ %82, %81 ]
  %94 = phi i64 [ %6, %47 ], [ %71, %81 ]
  %95 = phi i64 [ 1000000000, %47 ], [ %83, %81 ]
  %96 = phi i32 [ %20, %47 ], [ %84, %81 ]
  %97 = phi i32 [ %34, %47 ], [ %72, %81 ]
  %98 = phi i32 [ %48, %47 ], [ %73, %81 ]
  %99 = phi i32 [ 30, %47 ], [ %85, %81 ]
  %100 = phi i1 [ %49, %47 ], [ %87, %81 ]
  br i1 %100, label %101, label %131

101:                                              ; preds = %91
  %102 = mul i64 %94, %92
  %103 = add i32 %99, %96
  %104 = icmp sgt i32 %103, 64
  br i1 %104, label %105, label %126

105:                                              ; preds = %118, %101
  %106 = phi i32 [ %122, %118 ], [ %99, %101 ]
  %107 = phi i32 [ %121, %118 ], [ %96, %101 ]
  %108 = phi i64 [ %123, %118 ], [ %102, %101 ]
  %109 = phi i64 [ %120, %118 ], [ %95, %101 ]
  %110 = phi i64 [ %119, %118 ], [ %93, %101 ]
  %111 = icmp sgt i32 %107, %106
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = lshr i64 %110, 1
  %114 = add nsw i32 %107, -1
  br label %118

115:                                              ; preds = %105
  %116 = lshr i64 %109, 1
  %117 = add i32 %106, -1
  br label %118

118:                                              ; preds = %115, %112
  %119 = phi i64 [ %113, %112 ], [ %110, %115 ]
  %120 = phi i64 [ %109, %112 ], [ %116, %115 ]
  %121 = phi i32 [ %114, %112 ], [ %107, %115 ]
  %122 = phi i32 [ %106, %112 ], [ %117, %115 ]
  %123 = lshr i64 %108, 1
  %124 = add i32 %122, %121
  %125 = icmp sgt i32 %124, 64
  br i1 %125, label %105, label %126

126:                                              ; preds = %118, %101
  %127 = phi i64 [ %93, %101 ], [ %119, %118 ]
  %128 = phi i64 [ %95, %101 ], [ %120, %118 ]
  %129 = phi i64 [ %102, %101 ], [ %123, %118 ]
  %130 = mul i64 %128, %127
  br label %161

131:                                              ; preds = %91
  %132 = mul i64 %95, %93
  %133 = add i32 %98, %97
  %134 = icmp sgt i32 %133, 64
  br i1 %134, label %135, label %156

135:                                              ; preds = %148, %131
  %136 = phi i32 [ %152, %148 ], [ %98, %131 ]
  %137 = phi i32 [ %151, %148 ], [ %97, %131 ]
  %138 = phi i64 [ %153, %148 ], [ %132, %131 ]
  %139 = phi i64 [ %150, %148 ], [ %94, %131 ]
  %140 = phi i64 [ %149, %148 ], [ %92, %131 ]
  %141 = icmp sgt i32 %137, %136
  br i1 %141, label %142, label %145

142:                                              ; preds = %135
  %143 = lshr i64 %140, 1
  %144 = add nsw i32 %137, -1
  br label %148

145:                                              ; preds = %135
  %146 = lshr i64 %139, 1
  %147 = add i32 %136, -1
  br label %148

148:                                              ; preds = %145, %142
  %149 = phi i64 [ %143, %142 ], [ %140, %145 ]
  %150 = phi i64 [ %139, %142 ], [ %146, %145 ]
  %151 = phi i32 [ %144, %142 ], [ %137, %145 ]
  %152 = phi i32 [ %136, %142 ], [ %147, %145 ]
  %153 = lshr i64 %138, 1
  %154 = add i32 %152, %151
  %155 = icmp sgt i32 %154, 64
  br i1 %155, label %135, label %156

156:                                              ; preds = %148, %131
  %157 = phi i64 [ %92, %131 ], [ %149, %148 ]
  %158 = phi i64 [ %94, %131 ], [ %150, %148 ]
  %159 = phi i64 [ %132, %131 ], [ %153, %148 ]
  %160 = mul i64 %158, %157
  br label %161

161:                                              ; preds = %156, %126
  %162 = phi i64 [ %129, %126 ], [ %160, %156 ]
  %163 = phi i64 [ %130, %126 ], [ %159, %156 ]
  %164 = icmp eq i64 %162, 0
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = tail call i64 @div64_u64(i64 noundef %163, i64 noundef %162) #27
  br label %167

167:                                              ; preds = %165, %161
  %168 = phi i64 [ %166, %165 ], [ %163, %161 ]
  %169 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %170 = load i64, ptr %169, align 8
  %171 = add i64 %168, 7
  %172 = sub i64 %171, %170
  %173 = sdiv i64 %172, 8
  %174 = add i64 %173, %170
  %175 = icmp eq i64 %174, 0
  %176 = select i1 %175, i64 1, i64 %174
  store i64 %176, ptr %169, align 8
  %177 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  %178 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %177, ptr elementtype(i64) %177) #27, !srcloc !25
  %179 = shl i64 %176, 3
  %180 = icmp sgt i64 %178, %179
  br i1 %180, label %181, label %193

181:                                              ; preds = %167
  br i1 %3, label %182, label %191

182:                                              ; preds = %181
  %183 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %184 = load ptr, ptr %183, align 8
  %185 = getelementptr inbounds %struct.pmu, ptr %184, i32 0, i32 22
  %186 = load ptr, ptr %185, align 4
  tail call void %186(ptr noundef %0, i32 noundef 4) #27
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %177) #27, !srcloc !19
  %187 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %177, ptr %177, i64 0) #27, !srcloc !29
  %188 = load ptr, ptr %183, align 8
  %189 = getelementptr inbounds %struct.pmu, ptr %188, i32 0, i32 21
  %190 = load ptr, ptr %189, align 4
  tail call void %190(ptr noundef %0, i32 noundef 2) #27
  br label %193

191:                                              ; preds = %181
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %177) #27, !srcloc !19
  %192 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %177, ptr %177, i64 0) #27, !srcloc !29
  br label %193

193:                                              ; preds = %191, %182, %167
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_remove_from_context(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca %struct.perf_output_handle, align 8
  %6 = alloca %struct.perf_sample_data, align 64
  %7 = alloca %struct.perf_read_event, align 4
  %8 = ptrtoint ptr %3 to i32
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 12
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @sched_clock() #27
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 20
  %16 = load i64, ptr %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 19
  %19 = load i64, ptr %18, align 8
  %20 = add i64 %17, %19
  store i64 %20, ptr %18, align 8
  store i64 %14, ptr %15, align 8
  %21 = sub i64 %20, %14
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 21
  store volatile i64 %21, ptr %22, align 8
  br label %23

23:                                               ; preds = %13, %4
  tail call fastcc void @event_sched_out(ptr noundef %0, ptr noundef %1, ptr noundef %2)
  %24 = and i32 %8, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call fastcc void @perf_group_detach(ptr noundef %0)
  br label %27

27:                                               ; preds = %26, %23
  %28 = and i32 %8, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %126, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %32 = load i32, ptr %31, align 4
  %33 = and i32 %32, 64
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %126, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %37 = load ptr, ptr %36, align 4
  %38 = and i32 %32, -65
  store i32 %38, ptr %31, align 4
  %39 = icmp eq ptr %37, null
  %40 = load i1, ptr @perf_child_detach.__already_done, align 1
  %41 = xor i1 %40, true
  %42 = select i1 %39, i1 %41, i1 false
  br i1 %42, label %43, label %44, !prof !12

43:                                               ; preds = %35
  store i1 true, ptr @perf_child_detach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2286, i32 noundef 9, ptr noundef null) #27
  br label %44

44:                                               ; preds = %43, %35
  br i1 %39, label %126, label %45

45:                                               ; preds = %44
  %46 = load ptr, ptr %36, align 4
  %47 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %48 = load i64, ptr %47, align 8
  %49 = and i64 %48, 2048
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %105, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.perf_event_context, ptr %53, i32 0, i32 18
  %55 = load ptr, ptr %54, align 4
  %56 = ptrtoint ptr %55 to i32
  switch i32 %56, label %57 [
    i32 -1, label %105
    i32 0, label %105
  ]

57:                                               ; preds = %51
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %5, i8 0, i32 32, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %6) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %6, i8 0, i32 192, i1 false) #27, !annotation !48
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #27
  store i32 8, ptr %7, align 4
  %58 = getelementptr inbounds %struct.perf_event_header, ptr %7, i32 0, i32 1
  store i16 0, ptr %58, align 4
  %59 = getelementptr inbounds %struct.perf_event_header, ptr %7, i32 0, i32 2
  %60 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 24
  %61 = load i16, ptr %60, align 4
  %62 = add i16 %61, 16
  store i16 %62, ptr %59, align 2
  %63 = getelementptr inbounds %struct.perf_read_event, ptr %7, i32 0, i32 1
  %64 = icmp eq ptr %46, null
  %65 = select i1 %64, ptr %0, ptr %46
  %66 = getelementptr inbounds %struct.perf_event, ptr %65, i32 0, i32 57
  %67 = load ptr, ptr %66, align 4
  %68 = tail call i32 @__task_pid_nr_ns(ptr noundef %55, i32 noundef 1, ptr noundef %67) #27
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %57
  %71 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 62
  %72 = load ptr, ptr %71, align 64
  %73 = icmp eq ptr %72, null
  %74 = sext i1 %73 to i32
  br label %75

75:                                               ; preds = %70, %57
  %76 = phi i32 [ %68, %57 ], [ %74, %70 ]
  store i32 %76, ptr %63, align 4
  %77 = getelementptr inbounds %struct.perf_read_event, ptr %7, i32 0, i32 2
  %78 = load ptr, ptr %36, align 4
  %79 = icmp eq ptr %78, null
  %80 = select i1 %79, ptr %0, ptr %78
  %81 = getelementptr inbounds %struct.perf_event, ptr %80, i32 0, i32 57
  %82 = load ptr, ptr %81, align 4
  %83 = tail call i32 @__task_pid_nr_ns(ptr noundef %55, i32 noundef 0, ptr noundef %82) #27
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %90

85:                                               ; preds = %75
  %86 = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 62
  %87 = load ptr, ptr %86, align 64
  %88 = icmp eq ptr %87, null
  %89 = sext i1 %88 to i32
  br label %90

90:                                               ; preds = %85, %75
  %91 = phi i32 [ %83, %75 ], [ %89, %85 ]
  store i32 %91, ptr %77, align 4
  %92 = load i64, ptr %47, align 8
  %93 = and i64 %92, 262144
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %90
  call fastcc void @__perf_event_header__init_id(ptr noundef nonnull %7, ptr noundef nonnull %6, ptr noundef %0) #27
  %96 = load i16, ptr %59, align 2
  br label %97

97:                                               ; preds = %95, %90
  %98 = phi i16 [ %62, %90 ], [ %96, %95 ]
  %99 = zext i16 %98 to i32
  %100 = call i32 @perf_output_begin(ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef %0, i32 noundef %99) #27
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = call i32 @perf_output_copy(ptr noundef nonnull %5, ptr noundef nonnull %7, i32 noundef 16) #27
  call fastcc void @perf_output_read(ptr noundef nonnull %5, ptr noundef %0) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %6) #27
  call void @perf_output_end(ptr noundef nonnull %5) #27
  br label %104

104:                                              ; preds = %102, %97
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #27
  br label %105

105:                                              ; preds = %104, %51, %51, %45
  %106 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %107 = call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %106, ptr elementtype(i64) %106) #27, !srcloc !25
  %108 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 17
  %109 = call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %108, ptr elementtype(i64) %108) #27, !srcloc !25
  %110 = add i64 %109, %107
  %111 = getelementptr inbounds %struct.perf_event, ptr %46, i32 0, i32 17
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %111) #27, !srcloc !19
  %112 = call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %111, ptr %111, i64 %110, ptr elementtype(i64) %111) #27, !srcloc !73
  %113 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %114 = load i64, ptr %113, align 8
  %115 = getelementptr inbounds %struct.perf_event, ptr %46, i32 0, i32 28
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %115) #27, !srcloc !19
  %116 = call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %115, ptr %115, i64 %114, ptr elementtype(i64) %115) #27, !srcloc !73
  %117 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %118 = load i64, ptr %117, align 8
  %119 = getelementptr inbounds %struct.perf_event, ptr %46, i32 0, i32 29
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %119) #27, !srcloc !19
  %120 = call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %119, ptr %119, i64 %118, ptr elementtype(i64) %119) #27, !srcloc !73
  %121 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 31
  %122 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 31, i32 1
  %123 = load ptr, ptr %122, align 4
  %124 = load ptr, ptr %121, align 4
  %125 = getelementptr inbounds %struct.list_head, ptr %124, i32 0, i32 1
  store ptr %123, ptr %125, align 4
  store volatile ptr %124, ptr %123, align 4
  store volatile ptr %121, ptr %121, align 4
  store ptr %121, ptr %122, align 4
  br label %126

126:                                              ; preds = %105, %44, %30, %27
  call fastcc void @list_del_event(ptr noundef %0, ptr noundef %2)
  %127 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 9
  %128 = load i32, ptr %127, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %147

130:                                              ; preds = %126
  %131 = load i32, ptr %9, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %147, label %133

133:                                              ; preds = %130
  store i32 0, ptr %9, align 4
  %134 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 16
  store i32 0, ptr %134, align 4
  %135 = getelementptr inbounds %struct.perf_event_context, ptr %2, i32 0, i32 18
  %136 = load ptr, ptr %135, align 4
  %137 = icmp eq ptr %136, null
  br i1 %137, label %147, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.perf_cpu_context, ptr %1, i32 0, i32 1
  %140 = load ptr, ptr %139, align 8
  %141 = icmp ne ptr %140, %2
  %142 = load i1, ptr @__perf_remove_from_context.__already_done, align 1
  %143 = xor i1 %142, true
  %144 = select i1 %141, i1 %143, i1 false
  br i1 %144, label %145, label %146, !prof !12

145:                                              ; preds = %138
  store i1 true, ptr @__perf_remove_from_context.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2437, i32 noundef 9, ptr noundef null) #27
  br label %146

146:                                              ; preds = %145, %138
  store ptr null, ptr %139, align 8
  br label %147

147:                                              ; preds = %146, %133, %130, %126
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_group_detach(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %342, label %9

9:                                                ; preds = %1
  %10 = and i32 %6, -3
  store i32 %10, ptr %5, align 4
  %11 = load ptr, ptr %4, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.pmu, ptr %12, i32 0, i32 9
  %14 = load ptr, ptr %13, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #19, !srcloc !11
  %19 = add i32 %18, %15
  %20 = inttoptr i32 %19 to ptr
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 54
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %9
  store ptr null, ptr %21, align 4
  %25 = getelementptr inbounds %struct.perf_event, ptr %22, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %25) #27, !srcloc !19
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %25, ptr %25, i32 1, ptr elementtype(i32) %25) #27, !srcloc !34
  %27 = extractvalue { i32, i32 } %26, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %59

29:                                               ; preds = %24
  tail call fastcc void @_free_event(ptr noundef nonnull %22) #27
  br label %59

30:                                               ; preds = %9
  %31 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 11
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, %3
  br i1 %33, label %34, label %59

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8
  %37 = icmp eq ptr %36, %35
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 27
  br label %40

40:                                               ; preds = %54, %38
  %41 = phi ptr [ %3, %38 ], [ %55, %54 ]
  %42 = phi ptr [ %36, %38 ], [ %56, %54 ]
  %43 = getelementptr i8, ptr %42, i32 -8
  %44 = getelementptr i8, ptr %42, i32 636
  %45 = load ptr, ptr %44, align 4
  %46 = icmp eq ptr %45, %0
  br i1 %46, label %47, label %54

47:                                               ; preds = %40
  store ptr null, ptr %44, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %39) #27, !srcloc !19
  %48 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %39, ptr %39, i32 1, ptr elementtype(i32) %39) #27, !srcloc !34
  %49 = extractvalue { i32, i32 } %48, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  tail call fastcc void @_free_event(ptr noundef %0) #27
  br label %52

52:                                               ; preds = %51, %47
  tail call fastcc void @event_sched_out(ptr noundef %43, ptr noundef %20, ptr noundef %11) #27
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef -2) #27
  %53 = load ptr, ptr %2, align 4
  br label %54

54:                                               ; preds = %52, %40
  %55 = phi ptr [ %41, %40 ], [ %53, %52 ]
  %56 = load ptr, ptr %42, align 8
  %57 = getelementptr inbounds %struct.perf_event, ptr %55, i32 0, i32 1
  %58 = icmp eq ptr %56, %57
  br i1 %58, label %59, label %40

59:                                               ; preds = %54, %34, %30, %29, %24
  %60 = icmp eq ptr %3, %0
  %61 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  br i1 %60, label %71, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = load ptr, ptr %61, align 4
  %66 = getelementptr inbounds %struct.list_head, ptr %65, i32 0, i32 1
  store ptr %64, ptr %66, align 4
  store volatile ptr %65, ptr %64, align 4
  store volatile ptr %61, ptr %61, align 4
  store ptr %61, ptr %63, align 4
  %67 = load ptr, ptr %2, align 4
  %68 = getelementptr inbounds %struct.perf_event, ptr %67, i32 0, i32 8
  %69 = load i32, ptr %68, align 8
  %70 = add i32 %69, -1
  store i32 %70, ptr %68, align 8
  br label %184

71:                                               ; preds = %59
  %72 = load ptr, ptr %61, align 8
  %73 = getelementptr i8, ptr %72, i32 -8
  %74 = icmp eq ptr %73, %0
  br i1 %74, label %184, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 10
  %77 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 3
  %78 = ptrtoint ptr %77 to i32
  br label %79

79:                                               ; preds = %181, %75
  %80 = phi ptr [ %73, %75 ], [ %182, %181 ]
  %81 = phi ptr [ %72, %75 ], [ %82, %181 ]
  %82 = load ptr, ptr %81, align 8
  %83 = getelementptr i8, ptr %81, i32 68
  %84 = load i32, ptr %83, align 4
  %85 = and i32 %84, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %100, label %87

87:                                               ; preds = %79
  %88 = getelementptr i8, ptr %81, i32 440
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr %89, align 8
  %91 = getelementptr inbounds %struct.pmu, ptr %90, i32 0, i32 9
  %92 = load ptr, ptr %91, align 4
  %93 = ptrtoint ptr %92 to i32
  %94 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %95 = inttoptr i32 %94 to ptr
  %96 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %95) #19, !srcloc !11
  %97 = add i32 %96, %93
  %98 = inttoptr i32 %97 to ptr
  tail call fastcc void @event_sched_out(ptr noundef %80, ptr noundef %98, ptr noundef %89) #27
  tail call fastcc void @perf_event_set_state(ptr noundef %80, i32 noundef -2) #27
  %99 = load ptr, ptr %81, align 4
  br label %100

100:                                              ; preds = %87, %79
  %101 = phi ptr [ %99, %87 ], [ %82, %79 ]
  %102 = getelementptr i8, ptr %81, i32 76
  store ptr %80, ptr %102, align 4
  %103 = getelementptr inbounds %struct.list_head, ptr %81, i32 0, i32 1
  %104 = load ptr, ptr %103, align 4
  %105 = getelementptr inbounds %struct.list_head, ptr %101, i32 0, i32 1
  store ptr %104, ptr %105, align 4
  store volatile ptr %101, ptr %104, align 4
  store volatile ptr %81, ptr %81, align 4
  store ptr %81, ptr %103, align 4
  %106 = load i32, ptr %76, align 8
  %107 = getelementptr i8, ptr %81, i32 72
  store i32 %106, ptr %107, align 8
  %108 = load i32, ptr %77, align 8
  %109 = icmp eq i32 %108, %78
  br i1 %109, label %172, label %110

110:                                              ; preds = %100
  %111 = load ptr, ptr %4, align 8
  %112 = getelementptr i8, ptr %81, i32 176
  %113 = load i64, ptr %112, align 8
  %114 = and i64 %113, 4
  %115 = icmp eq i64 %114, 0
  %116 = getelementptr inbounds %struct.perf_event_context, ptr %111, i32 0, i32 4
  %117 = getelementptr inbounds %struct.perf_event_context, ptr %111, i32 0, i32 5
  %118 = select i1 %115, ptr %117, ptr %116
  %119 = getelementptr inbounds %struct.perf_event_groups, ptr %118, i32 0, i32 1
  %120 = load i64, ptr %119, align 8
  %121 = add i64 %120, 1
  store i64 %121, ptr %119, align 8
  %122 = getelementptr i8, ptr %81, i32 32
  store i64 %121, ptr %122, align 8
  %123 = load ptr, ptr %118, align 4
  %124 = icmp eq ptr %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %110
  %126 = getelementptr i8, ptr %81, i32 500
  %127 = load i32, ptr %126, align 4
  br label %128

128:                                              ; preds = %144, %125
  %129 = phi ptr [ %123, %125 ], [ %146, %144 ]
  %130 = getelementptr i8, ptr %129, i32 484
  %131 = load i32, ptr %130, align 4
  %132 = icmp sgt i32 %131, %127
  br i1 %132, label %142, label %133

133:                                              ; preds = %128
  %134 = icmp slt i32 %131, %127
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = getelementptr inbounds %struct.rb_node, ptr %129, i32 0, i32 1
  br label %144

137:                                              ; preds = %133
  %138 = getelementptr i8, ptr %129, i32 16
  %139 = load i64, ptr %138, align 8
  %140 = icmp ugt i64 %139, %121
  %141 = getelementptr inbounds %struct.rb_node, ptr %129, i32 0, i32 1
  br i1 %140, label %142, label %144

142:                                              ; preds = %137, %128
  %143 = getelementptr inbounds %struct.rb_node, ptr %129, i32 0, i32 2
  br label %144

144:                                              ; preds = %142, %137, %135
  %145 = phi ptr [ %143, %142 ], [ %141, %137 ], [ %136, %135 ]
  %146 = load ptr, ptr %145, align 4
  %147 = icmp eq ptr %146, null
  br i1 %147, label %148, label %128

148:                                              ; preds = %144
  %149 = ptrtoint ptr %129 to i32
  br label %150

150:                                              ; preds = %148, %110
  %151 = phi ptr [ %145, %148 ], [ %118, %110 ]
  %152 = phi i32 [ %149, %148 ], [ 0, %110 ]
  %153 = getelementptr i8, ptr %81, i32 16
  store i32 %152, ptr %153, align 4
  %154 = getelementptr i8, ptr %81, i32 20
  store ptr null, ptr %154, align 4
  %155 = getelementptr i8, ptr %81, i32 24
  store ptr null, ptr %155, align 4
  store ptr %153, ptr %151, align 4
  tail call void @rb_insert_color(ptr noundef %153, ptr noundef %118) #27
  %156 = getelementptr i8, ptr %81, i32 88
  %157 = load i32, ptr %156, align 8
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %172

159:                                              ; preds = %150
  %160 = getelementptr i8, ptr %81, i32 8
  %161 = getelementptr i8, ptr %81, i32 440
  %162 = load ptr, ptr %161, align 8
  %163 = load i64, ptr %112, align 8
  %164 = and i64 %163, 4
  %165 = icmp eq i64 %164, 0
  %166 = getelementptr inbounds %struct.perf_event_context, ptr %162, i32 0, i32 7
  %167 = getelementptr inbounds %struct.perf_event_context, ptr %162, i32 0, i32 8
  %168 = select i1 %165, ptr %167, ptr %166
  %169 = getelementptr inbounds %struct.list_head, ptr %168, i32 0, i32 1
  %170 = load ptr, ptr %169, align 4
  store ptr %160, ptr %169, align 4
  store ptr %168, ptr %160, align 4
  %171 = getelementptr i8, ptr %81, i32 12
  store ptr %170, ptr %171, align 4
  store volatile ptr %160, ptr %170, align 4
  br label %172

172:                                              ; preds = %159, %150, %100
  %173 = getelementptr i8, ptr %81, i32 440
  %174 = load ptr, ptr %173, align 8
  %175 = load ptr, ptr %4, align 8
  %176 = icmp ne ptr %174, %175
  %177 = load i1, ptr @perf_group_detach.__already_done, align 1
  %178 = xor i1 %177, true
  %179 = select i1 %176, i1 %178, i1 false
  br i1 %179, label %180, label %181, !prof !12

180:                                              ; preds = %172
  store i1 true, ptr @perf_group_detach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2265, i32 noundef 9, ptr noundef null) #27
  br label %181

181:                                              ; preds = %180, %172
  %182 = getelementptr i8, ptr %82, i32 -8
  %183 = icmp eq ptr %182, %0
  br i1 %183, label %184, label %79

184:                                              ; preds = %181, %71, %62
  %185 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 11
  %186 = load ptr, ptr %185, align 4
  %187 = icmp eq ptr %186, %3
  br i1 %187, label %188, label %270

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 1
  %190 = load ptr, ptr %189, align 8
  %191 = icmp eq ptr %190, %189
  br i1 %191, label %270, label %192

192:                                              ; preds = %192, %188
  %193 = phi ptr [ %266, %192 ], [ %190, %188 ]
  %194 = getelementptr i8, ptr %193, i32 76
  %195 = load ptr, ptr %194, align 4
  %196 = getelementptr inbounds %struct.perf_event, ptr %195, i32 0, i32 8
  %197 = load i32, ptr %196, align 8
  %198 = getelementptr i8, ptr %193, i32 168
  %199 = load i64, ptr %198, align 8
  %200 = trunc i64 %199 to i32
  %201 = shl i32 %200, 3
  %202 = and i32 %201, 8
  %203 = and i64 %199, 2
  %204 = icmp eq i64 %203, 0
  %205 = add nuw nsw i32 %202, 8
  %206 = select i1 %204, i32 %202, i32 %205
  %207 = and i64 %199, 4
  %208 = icmp eq i64 %207, 0
  %209 = select i1 %208, i32 8, i32 16
  %210 = and i64 %199, 8
  %211 = icmp eq i64 %210, 0
  %212 = add i32 %197, 1
  %213 = add nuw nsw i32 %206, 8
  %214 = select i1 %211, i32 %206, i32 %213
  %215 = select i1 %211, i32 1, i32 %212
  %216 = mul i32 %209, %215
  %217 = add i32 %214, %216
  %218 = trunc i32 %217 to i16
  %219 = getelementptr i8, ptr %193, i32 268
  store i16 %218, ptr %219, align 4
  %220 = getelementptr i8, ptr %193, i32 160
  %221 = load i64, ptr %220, align 8
  %222 = trunc i64 %221 to i16
  %223 = shl i16 %222, 3
  %224 = and i16 %223, 8
  %225 = and i64 %221, 8
  %226 = icmp eq i64 %225, 0
  %227 = add nuw nsw i16 %224, 8
  %228 = select i1 %226, i16 %224, i16 %227
  %229 = and i64 %221, 256
  %230 = icmp eq i64 %229, 0
  %231 = add nuw nsw i16 %228, 8
  %232 = select i1 %230, i16 %228, i16 %231
  %233 = and i64 %221, 16793600
  %234 = icmp eq i64 %233, 0
  %235 = add nuw nsw i16 %232, 8
  %236 = select i1 %234, i16 %232, i16 %235
  %237 = and i64 %221, 16
  %238 = icmp eq i64 %237, 0
  %239 = select i1 %238, i16 0, i16 %218
  %240 = add i16 %236, %239
  %241 = and i64 %221, 32768
  %242 = icmp eq i64 %241, 0
  %243 = add i16 %240, 8
  %244 = select i1 %242, i16 %240, i16 %243
  %245 = and i64 %221, 131072
  %246 = icmp eq i64 %245, 0
  %247 = add i16 %244, 8
  %248 = select i1 %246, i16 %244, i16 %247
  %249 = and i64 %221, 524288
  %250 = icmp eq i64 %249, 0
  %251 = add i16 %248, 8
  %252 = select i1 %250, i16 %248, i16 %251
  %253 = and i64 %221, 2097152
  %254 = icmp eq i64 %253, 0
  %255 = add i16 %252, 8
  %256 = select i1 %254, i16 %252, i16 %255
  %257 = and i64 %221, 4194304
  %258 = icmp eq i64 %257, 0
  %259 = add i16 %256, 8
  %260 = select i1 %258, i16 %256, i16 %259
  %261 = and i64 %221, 8388608
  %262 = icmp eq i64 %261, 0
  %263 = add i16 %260, 8
  %264 = select i1 %262, i16 %260, i16 %263
  %265 = getelementptr i8, ptr %193, i32 264
  store i16 %264, ptr %265, align 8
  %266 = load ptr, ptr %193, align 8
  %267 = icmp eq ptr %266, %189
  br i1 %267, label %268, label %192

268:                                              ; preds = %192
  %269 = load ptr, ptr %185, align 4
  br label %270

270:                                              ; preds = %268, %188, %184
  %271 = phi ptr [ %269, %268 ], [ %3, %188 ], [ %186, %184 ]
  %272 = getelementptr inbounds %struct.perf_event, ptr %271, i32 0, i32 8
  %273 = load i32, ptr %272, align 8
  %274 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 5
  %275 = load i64, ptr %274, align 8
  %276 = trunc i64 %275 to i32
  %277 = shl i32 %276, 3
  %278 = and i32 %277, 8
  %279 = and i64 %275, 2
  %280 = icmp eq i64 %279, 0
  %281 = add nuw nsw i32 %278, 8
  %282 = select i1 %280, i32 %278, i32 %281
  %283 = and i64 %275, 4
  %284 = icmp eq i64 %283, 0
  %285 = select i1 %284, i32 8, i32 16
  %286 = and i64 %275, 8
  %287 = icmp eq i64 %286, 0
  %288 = add i32 %273, 1
  %289 = add nuw nsw i32 %282, 8
  %290 = select i1 %287, i32 %282, i32 %289
  %291 = select i1 %287, i32 1, i32 %288
  %292 = mul i32 %285, %291
  %293 = add i32 %290, %292
  %294 = trunc i32 %293 to i16
  %295 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 24
  store i16 %294, ptr %295, align 4
  %296 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 21, i32 4
  %297 = load i64, ptr %296, align 8
  %298 = trunc i64 %297 to i16
  %299 = shl i16 %298, 3
  %300 = and i16 %299, 8
  %301 = and i64 %297, 8
  %302 = icmp eq i64 %301, 0
  %303 = add nuw nsw i16 %300, 8
  %304 = select i1 %302, i16 %300, i16 %303
  %305 = and i64 %297, 256
  %306 = icmp eq i64 %305, 0
  %307 = add nuw nsw i16 %304, 8
  %308 = select i1 %306, i16 %304, i16 %307
  %309 = and i64 %297, 16793600
  %310 = icmp eq i64 %309, 0
  %311 = add nuw nsw i16 %308, 8
  %312 = select i1 %310, i16 %308, i16 %311
  %313 = and i64 %297, 16
  %314 = icmp eq i64 %313, 0
  %315 = select i1 %314, i16 0, i16 %294
  %316 = add i16 %312, %315
  %317 = and i64 %297, 32768
  %318 = icmp eq i64 %317, 0
  %319 = add i16 %316, 8
  %320 = select i1 %318, i16 %316, i16 %319
  %321 = and i64 %297, 131072
  %322 = icmp eq i64 %321, 0
  %323 = add i16 %320, 8
  %324 = select i1 %322, i16 %320, i16 %323
  %325 = and i64 %297, 524288
  %326 = icmp eq i64 %325, 0
  %327 = add i16 %324, 8
  %328 = select i1 %326, i16 %324, i16 %327
  %329 = and i64 %297, 2097152
  %330 = icmp eq i64 %329, 0
  %331 = add i16 %328, 8
  %332 = select i1 %330, i16 %328, i16 %331
  %333 = and i64 %297, 4194304
  %334 = icmp eq i64 %333, 0
  %335 = add i16 %332, 8
  %336 = select i1 %334, i16 %332, i16 %335
  %337 = and i64 %297, 8388608
  %338 = icmp eq i64 %337, 0
  %339 = add i16 %336, 8
  %340 = select i1 %338, i16 %336, i16 %339
  %341 = getelementptr inbounds %struct.perf_event, ptr %3, i32 0, i32 22
  store i16 %340, ptr %341, align 8
  br label %342

342:                                              ; preds = %270, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @list_del_event(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = icmp ne ptr %4, %1
  %6 = load i1, ptr @list_del_event.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !12

9:                                                ; preds = %2
  store i1 true, ptr @list_del_event.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2059, i32 noundef 9, ptr noundef null) #27
  br label %10

10:                                               ; preds = %9, %2
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %75, label %15

15:                                               ; preds = %10
  %16 = and i32 %12, -2
  store i32 %16, ptr %11, align 4
  %17 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 9
  %18 = load i32, ptr %17, align 8
  %19 = add i32 %18, -1
  store i32 %19, ptr %17, align 8
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 0, i32 0, i32 7
  %21 = load i32, ptr %20, align 4
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %27, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 11
  %25 = load i32, ptr %24, align 8
  %26 = add i32 %25, -1
  store i32 %26, ptr %24, align 8
  br label %27

27:                                               ; preds = %23, %15
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %29 = load i64, ptr %28, align 8
  %30 = and i64 %29, 2048
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 13
  %34 = load i32, ptr %33, align 8
  %35 = add i32 %34, -1
  store i32 %35, ptr %33, align 8
  br label %36

36:                                               ; preds = %32, %27
  %37 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  %39 = load ptr, ptr %0, align 4
  %40 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  store ptr %38, ptr %40, align 4
  store volatile ptr %39, ptr %38, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %37, align 4
  %41 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, %0
  br i1 %43, label %44, label %66

44:                                               ; preds = %36
  %45 = load i64, ptr %28, align 8
  %46 = and i64 %45, 4
  %47 = icmp eq i64 %46, 0
  %48 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 4
  %49 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 5
  %50 = select i1 %47, ptr %49, ptr %48
  %51 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 3
  %52 = load i32, ptr %51, align 8
  %53 = ptrtoint ptr %51 to i32
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %58, label %55

55:                                               ; preds = %44
  %56 = load volatile ptr, ptr %50, align 8
  %57 = icmp eq ptr %56, null
  br label %58

58:                                               ; preds = %55, %44
  %59 = phi i1 [ true, %44 ], [ %57, %55 ]
  %60 = load i1, ptr @perf_event_groups_delete.__already_done, align 1
  %61 = xor i1 %60, true
  %62 = select i1 %59, i1 %61, i1 false
  br i1 %62, label %63, label %64, !prof !12

63:                                               ; preds = %58
  store i1 true, ptr @perf_event_groups_delete.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1786, i32 noundef 9, ptr noundef null) #27
  br label %64

64:                                               ; preds = %63, %58
  tail call void @rb_erase(ptr noundef %51, ptr noundef %50) #27
  store i32 %53, ptr %51, align 8
  %65 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 4
  store i64 0, ptr %65, align 8
  br label %66

66:                                               ; preds = %64, %36
  %67 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %68 = load i32, ptr %67, align 8
  %69 = icmp sgt i32 %68, -1
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef -1)
  br label %71

71:                                               ; preds = %70, %66
  %72 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 24
  %73 = load i64, ptr %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, ptr %72, align 8
  br label %75

75:                                               ; preds = %71, %10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_insert_color(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @_free_event(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 49
  tail call void @irq_work_sync(ptr noundef %2) #27
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %127

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 36
  %10 = icmp ne i32 %9, 0
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 131328
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_mmap_events) #27, !srcloc !19
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_mmap_events, ptr nonnull @nr_mmap_events, i32 1, ptr nonnull elementtype(i32) @nr_mmap_events) #27, !srcloc !59
  %17 = load i64, ptr %11, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i64 [ %12, %6 ], [ %17, %15 ]
  %20 = and i64 %19, 17179869184
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_build_id_events) #27, !srcloc !19
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_build_id_events, ptr nonnull @nr_build_id_events, i32 1, ptr nonnull elementtype(i32) @nr_build_id_events) #27, !srcloc !59
  %24 = load i64, ptr %11, align 8
  br label %25

25:                                               ; preds = %22, %18
  %26 = phi i64 [ %24, %22 ], [ %19, %18 ]
  %27 = and i64 %26, 512
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_comm_events) #27, !srcloc !19
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_comm_events, ptr nonnull @nr_comm_events, i32 1, ptr nonnull elementtype(i32) @nr_comm_events) #27, !srcloc !59
  %31 = load i64, ptr %11, align 8
  br label %32

32:                                               ; preds = %29, %25
  %33 = phi i64 [ %31, %29 ], [ %26, %25 ]
  %34 = and i64 %33, 268435456
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_namespaces_events) #27, !srcloc !19
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_namespaces_events, ptr nonnull @nr_namespaces_events, i32 1, ptr nonnull elementtype(i32) @nr_namespaces_events) #27, !srcloc !59
  %38 = load i64, ptr %11, align 8
  br label %39

39:                                               ; preds = %36, %32
  %40 = phi i64 [ %38, %36 ], [ %33, %32 ]
  %41 = and i64 %40, 4294967296
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_cgroup_events) #27, !srcloc !19
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_cgroup_events, ptr nonnull @nr_cgroup_events, i32 1, ptr nonnull elementtype(i32) @nr_cgroup_events) #27, !srcloc !59
  %45 = load i64, ptr %11, align 8
  br label %46

46:                                               ; preds = %43, %39
  %47 = phi i64 [ %45, %43 ], [ %40, %39 ]
  %48 = and i64 %47, 8192
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_task_events) #27, !srcloc !19
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_task_events, ptr nonnull @nr_task_events, i32 1, ptr nonnull elementtype(i32) @nr_task_events) #27, !srcloc !59
  %52 = load i64, ptr %11, align 8
  br label %53

53:                                               ; preds = %50, %46
  %54 = phi i64 [ %52, %50 ], [ %47, %46 ]
  %55 = and i64 %54, 1024
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_freq_events) #27, !srcloc !19
  %58 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_freq_events, ptr nonnull @nr_freq_events, i32 1, ptr nonnull elementtype(i32) @nr_freq_events) #27, !srcloc !59
  %59 = load i64, ptr %11, align 8
  br label %60

60:                                               ; preds = %57, %53
  %61 = phi i64 [ %59, %57 ], [ %54, %53 ]
  %62 = and i64 %61, 67108864
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_switch_events) #27, !srcloc !19
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_switch_events, ptr nonnull @nr_switch_events, i32 1, ptr nonnull elementtype(i32) @nr_switch_events) #27, !srcloc !59
  %66 = load i64, ptr %11, align 8
  br label %67

67:                                               ; preds = %64, %60
  %68 = phi i64 [ %66, %64 ], [ %61, %60 ]
  %69 = phi i1 [ true, %64 ], [ %10, %60 ]
  %70 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %71 = load i64, ptr %70, align 8
  %72 = and i64 %71, 2048
  %73 = icmp ne i64 %72, 0
  %74 = select i1 %73, i1 true, i1 %69
  %75 = and i64 %68, 536870912
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %67
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_ksymbol_events) #27, !srcloc !19
  %78 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_ksymbol_events, ptr nonnull @nr_ksymbol_events, i32 1, ptr nonnull elementtype(i32) @nr_ksymbol_events) #27, !srcloc !59
  %79 = load i64, ptr %11, align 8
  br label %80

80:                                               ; preds = %77, %67
  %81 = phi i64 [ %79, %77 ], [ %68, %67 ]
  %82 = and i64 %81, 1073741824
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_bpf_events) #27, !srcloc !19
  %85 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_bpf_events, ptr nonnull @nr_bpf_events, i32 1, ptr nonnull elementtype(i32) @nr_bpf_events) #27, !srcloc !59
  %86 = load i64, ptr %11, align 8
  br label %87

87:                                               ; preds = %84, %80
  %88 = phi i64 [ %86, %84 ], [ %81, %80 ]
  %89 = and i64 %88, 8589934592
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_text_poke_events) #27, !srcloc !19
  %92 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_text_poke_events, ptr nonnull @nr_text_poke_events, i32 1, ptr nonnull elementtype(i32) @nr_text_poke_events) #27, !srcloc !59
  br label %93

93:                                               ; preds = %91, %87
  br i1 %74, label %94, label %102

94:                                               ; preds = %93
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @perf_sched_count) #27, !srcloc !19
  %95 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) @perf_sched_count, ptr nonnull @perf_sched_count, i32 1, i32 -1, ptr nonnull elementtype(i32) @perf_sched_count) #27, !srcloc !84
  %96 = extractvalue { i32, i32, i32 } %95, 0
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  br label %102

99:                                               ; preds = %94
  %100 = load ptr, ptr @system_wq, align 4
  %101 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %100, ptr noundef nonnull @perf_sched_work, i32 noundef 100) #27
  br label %102

102:                                              ; preds = %99, %98, %93
  %103 = load ptr, ptr %3, align 4
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %127

105:                                              ; preds = %102
  %106 = load i32, ptr %7, align 4
  %107 = and i32 %106, 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %127

109:                                              ; preds = %105
  %110 = load i64, ptr %11, align 8
  %111 = and i64 %110, 10292962048
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %127, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %115 = load i32, ptr %114, align 4
  %116 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %115
  %117 = load i32, ptr %116, align 4
  %118 = add i32 %117, ptrtoint (ptr @pmu_sb_events to i32)
  %119 = inttoptr i32 %118 to ptr
  tail call void @_raw_spin_lock(ptr noundef %119) #27
  %120 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 64
  %121 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 64, i32 1
  %122 = load ptr, ptr %121, align 4
  %123 = load ptr, ptr %120, align 4
  %124 = getelementptr inbounds %struct.list_head, ptr %123, i32 0, i32 1
  store ptr %122, ptr %124, align 4
  store volatile ptr %123, ptr %122, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %121, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %125 = load i16, ptr %119, align 4
  %126 = add i16 %125, 1
  store i16 %126, ptr %119, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %127

127:                                              ; preds = %113, %109, %105, %102, %1
  %128 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 39
  %129 = load ptr, ptr %128, align 4
  %130 = icmp eq ptr %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %132) #27
  tail call fastcc void @ring_buffer_attach(ptr noundef %0, ptr noundef null)
  tail call void @mutex_unlock(ptr noundef %132) #27
  br label %133

133:                                              ; preds = %131, %127
  %134 = load ptr, ptr %3, align 4
  %135 = icmp eq ptr %134, null
  br i1 %135, label %136, label %142

136:                                              ; preds = %133
  %137 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %138 = load i64, ptr %137, align 8
  %139 = and i64 %138, 32
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %136
  tail call void @put_callchain_buffers() #27
  br label %142

142:                                              ; preds = %141, %136, %133
  tail call fastcc void @perf_addr_filters_splice(ptr noundef %0, ptr noundef null)
  %143 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 52
  %144 = load ptr, ptr %143, align 4
  tail call void @kfree(ptr noundef %144) #27
  %145 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 55
  %146 = load ptr, ptr %145, align 8
  %147 = icmp eq ptr %146, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %142
  tail call void %146(ptr noundef %0) #27
  br label %149

149:                                              ; preds = %148, %142
  %150 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 1
  %151 = load ptr, ptr %150, align 8
  %152 = icmp eq ptr %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.task_struct, ptr %151, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %154) #27, !srcloc !19
  %155 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %154, ptr %154, i32 1, ptr elementtype(i32) %154) #27, !srcloc !42
  %156 = extractvalue { i32, i32, i32 } %155, 0
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %161, label %158

158:                                              ; preds = %153
  %159 = icmp sgt i32 %156, 0
  br i1 %159, label %162, label %160, !prof !23

160:                                              ; preds = %158
  tail call void @refcount_warn_saturate(ptr noundef %154, i32 noundef 3) #27
  br label %162

161:                                              ; preds = %153
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  tail call void @__put_task_struct(ptr noundef nonnull %151) #27
  br label %162

162:                                              ; preds = %161, %160, %158, %149
  %163 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %164 = load ptr, ptr %163, align 8
  %165 = icmp eq ptr %164, null
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  tail call fastcc void @put_ctx(ptr noundef nonnull %164)
  br label %167

167:                                              ; preds = %166, %162
  %168 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %169 = load ptr, ptr %168, align 8
  %170 = getelementptr inbounds %struct.pmu, ptr %169, i32 0, i32 7
  %171 = load i32, ptr %170, align 4
  %172 = and i32 %171, 16
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %184, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %176 = load i32, ptr %175, align 4
  %177 = and i32 %176, 4
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %struct.pmu, ptr %169, i32 0, i32 10
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %179) #27
  br i1 %178, label %182, label %180

180:                                              ; preds = %174
  %181 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %179, ptr %179, i32 1, ptr elementtype(i32) %179) #27, !srcloc !59
  br label %184

182:                                              ; preds = %174
  %183 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %179, ptr %179, i32 1, ptr elementtype(i32) %179) #27, !srcloc !20
  br label %184

184:                                              ; preds = %182, %180, %167
  %185 = load ptr, ptr %168, align 8
  %186 = getelementptr inbounds %struct.pmu, ptr %185, i32 0, i32 1
  %187 = load ptr, ptr %186, align 4
  tail call void @module_put(ptr noundef %187) #27
  %188 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 56
  tail call void @call_rcu(ptr noundef %188, ptr noundef nonnull @free_event_rcu) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ring_buffer_attach(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.remote_function_call, align 4
  %4 = alloca %struct.stop_event_data, align 8
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %6 = load ptr, ptr %5, align 4
  %7 = icmp ne ptr %6, null
  %8 = load i1, ptr @ring_buffer_attach.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !12

11:                                               ; preds = %2
  store i1 true, ptr @ring_buffer_attach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6011, i32 noundef 9, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %2
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 39
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 42
  %18 = load i32, ptr %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = load i1, ptr @ring_buffer_attach.__already_done.27, align 1
  %21 = xor i1 %20, true
  %22 = select i1 %19, i1 %21, i1 false
  br i1 %22, label %23, label %25, !prof !12

23:                                               ; preds = %16
  store i1 true, ptr @ring_buffer_attach.__already_done.27, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6018, i32 noundef 9, ptr noundef null) #27
  %24 = load ptr, ptr %13, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi ptr [ %24, %23 ], [ %14, %16 ]
  %27 = getelementptr inbounds %struct.perf_buffer, ptr %26, i32 0, i32 15
  %28 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %27) #27
  %29 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 40
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 40, i32 1
  %31 = load ptr, ptr %30, align 4
  %32 = load ptr, ptr %29, align 4
  %33 = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  store ptr %31, ptr %33, align 4
  store volatile ptr %32, ptr %31, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %30, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %27, i32 noundef %28) #27
  %34 = tail call i32 @get_state_synchronize_rcu() #27
  %35 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 41
  store i32 %34, ptr %35, align 8
  store i32 1, ptr %17, align 4
  br label %36

36:                                               ; preds = %25, %12
  %37 = phi ptr [ %26, %25 ], [ null, %12 ]
  %38 = icmp eq ptr %1, null
  br i1 %38, label %54, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 42
  %41 = load i32, ptr %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 41
  %45 = load i32, ptr %44, align 8
  tail call void @cond_synchronize_rcu(i32 noundef %45) #27
  store i32 0, ptr %40, align 4
  br label %46

46:                                               ; preds = %43, %39
  %47 = getelementptr inbounds %struct.perf_buffer, ptr %1, i32 0, i32 15
  %48 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %47) #27
  %49 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 40
  %50 = getelementptr inbounds %struct.perf_buffer, ptr %1, i32 0, i32 16
  %51 = load ptr, ptr %50, align 4
  store ptr %51, ptr %49, align 4
  %52 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 40, i32 1
  store ptr %50, ptr %52, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !79
  store volatile ptr %49, ptr %50, align 4
  %53 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  store ptr %49, ptr %53, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %47, i32 noundef %48) #27
  br label %54

54:                                               ; preds = %46, %36
  %55 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds %struct.pmu, ptr %56, i32 0, i32 31
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, null
  br i1 %59, label %76, label %60

60:                                               ; preds = %54
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #27
  store ptr %0, ptr %4, align 8
  %61 = getelementptr inbounds %struct.stop_event_data, ptr %4, i32 0, i32 1
  store i32 0, ptr %61, align 4
  %62 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %63 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  %64 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 1
  %65 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 2
  %66 = getelementptr inbounds %struct.remote_function_call, ptr %3, i32 0, i32 3
  br label %67

67:                                               ; preds = %70, %60
  %68 = load volatile i32, ptr %62, align 8
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %75

70:                                               ; preds = %67
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !62
  %71 = load volatile i32, ptr %63, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #27
  store i32 0, ptr %3, align 4
  store ptr @__perf_event_stop, ptr %64, align 4
  store ptr %4, ptr %65, align 4
  store i32 -6, ptr %66, align 4
  %72 = call i32 @smp_call_function_single(i32 noundef %71, ptr noundef nonnull @remote_function, ptr noundef nonnull %3, i32 noundef 1) #27
  %73 = load i32, ptr %66, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #27
  %74 = icmp eq i32 %73, -11
  br i1 %74, label %67, label %75

75:                                               ; preds = %70, %67
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #27
  br label %76

76:                                               ; preds = %75, %54
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !96
  store volatile ptr %1, ptr %13, align 4
  %77 = icmp eq ptr %37, null
  br i1 %77, label %97, label %78

78:                                               ; preds = %76
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %37) #27, !srcloc !19
  %79 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %37, ptr nonnull %37, i32 1, ptr nonnull elementtype(i32) %37) #27, !srcloc !42
  %80 = extractvalue { i32, i32, i32 } %79, 0
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = icmp sgt i32 %80, 0
  br i1 %83, label %95, label %84, !prof !23

84:                                               ; preds = %82
  call void @refcount_warn_saturate(ptr noundef nonnull %37, i32 noundef 3) #27
  br label %95

85:                                               ; preds = %78
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %86 = getelementptr inbounds %struct.perf_buffer, ptr %37, i32 0, i32 16
  %87 = load volatile ptr, ptr %86, align 4
  %88 = icmp ne ptr %87, %86
  %89 = load i1, ptr @ring_buffer_put.__already_done, align 1
  %90 = xor i1 %89, true
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %92, label %93, !prof !12

92:                                               ; preds = %85
  store i1 true, ptr @ring_buffer_put.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6105, i32 noundef 9, ptr noundef null) #27
  br label %93

93:                                               ; preds = %92, %85
  %94 = getelementptr inbounds %struct.perf_buffer, ptr %37, i32 0, i32 1
  call void @call_rcu(ptr noundef %94, ptr noundef nonnull @rb_free_rcu) #27
  br label %95

95:                                               ; preds = %93, %84, %82
  %96 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 43
  call void @__wake_up(ptr noundef %96, i32 noundef 3, i32 noundef 0, ptr noundef null) #27
  br label %97

97:                                               ; preds = %95, %76
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_callchain_buffers() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_addr_filters_splice(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.list_head, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store ptr %3, ptr %3, align 8
  %4 = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  store ptr %3, ptr %4, align 4
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.pmu, ptr %6, i32 0, i32 13
  %8 = load i32, ptr %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %48, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %48

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 51
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 51, i32 1
  %17 = call i32 @_raw_spin_lock_irqsave(ptr noundef %16) #27
  %18 = load volatile ptr, ptr %15, align 4
  %19 = icmp eq ptr %18, %15
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 51, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  store ptr %3, ptr %24, align 4
  store ptr %18, ptr %3, align 8
  store ptr %21, ptr %23, align 4
  %25 = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  store ptr %23, ptr %25, align 4
  store volatile ptr %15, ptr %15, align 4
  store ptr %15, ptr %22, align 4
  br label %26

26:                                               ; preds = %20, %14
  %27 = icmp eq ptr %1, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = load volatile ptr, ptr %1, align 4
  %30 = icmp eq ptr %29, %1
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  %34 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  store ptr %15, ptr %34, align 4
  store ptr %29, ptr %15, align 4
  store ptr %15, ptr %33, align 4
  %35 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 51, i32 0, i32 1
  store ptr %33, ptr %35, align 4
  br label %36

36:                                               ; preds = %31, %28, %26
  call void @_raw_spin_unlock_irqrestore(ptr noundef %16, i32 noundef %17) #27
  %37 = load ptr, ptr %3, align 8
  %38 = icmp eq ptr %37, %3
  br i1 %38, label %48, label %39

39:                                               ; preds = %39, %36
  %40 = phi ptr [ %41, %39 ], [ %37, %36 ]
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.perf_addr_filter, ptr %40, i32 0, i32 1
  call void @path_put(ptr noundef %42) #27
  %43 = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = load ptr, ptr %40, align 4
  %46 = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  store ptr %44, ptr %46, align 4
  store volatile ptr %45, ptr %44, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %40, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %43, align 4
  call void @kfree(ptr noundef %40) #27
  %47 = icmp eq ptr %41, %3
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %36, %10, %2
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @exclusive_event_destroy(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 10
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27
  br i1 %12, label %16, label %14

14:                                               ; preds = %8
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !59
  br label %18

16:                                               ; preds = %8
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #27, !srcloc !20
  br label %18

18:                                               ; preds = %16, %14, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @free_event_rcu(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -652
  tail call void @ftrace_profile_free_filter(ptr noundef %2) #27
  %3 = load ptr, ptr @perf_event_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %3, ptr noundef %2) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_sched_delayed(ptr nocapture noundef readnone %0) #0 {
  tail call void @mutex_lock(ptr noundef nonnull @perf_sched_mutex) #27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @perf_sched_count) #27, !srcloc !19
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @perf_sched_count, ptr nonnull @perf_sched_count, i32 1, ptr nonnull elementtype(i32) @perf_sched_count) #27, !srcloc !34
  %3 = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %20

5:                                                ; preds = %1
  %6 = load i8, ptr @static_key_initialized, align 1, !range !97
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9, !prof !12

8:                                                ; preds = %5
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 329, i32 noundef 9, ptr noundef nonnull @.str.26, ptr noundef nonnull @__func__.static_key_disable, ptr noundef nonnull @perf_sched_events) #27
  br label %9

9:                                                ; preds = %8, %5
  %10 = load volatile i32, ptr @perf_sched_events, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %19, label %12

12:                                               ; preds = %9
  %13 = load volatile i32, ptr @perf_sched_events, align 4
  %14 = icmp ne i32 %13, 0
  %15 = load i1, ptr @static_key_disable.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %20, !prof !12

18:                                               ; preds = %12
  store i1 true, ptr @static_key_disable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 332, i32 noundef 9, ptr noundef null) #27
  br label %20

19:                                               ; preds = %9
  store volatile i32 0, ptr @perf_sched_events, align 4
  br label %20

20:                                               ; preds = %19, %18, %12, %1
  tail call void @mutex_unlock(ptr noundef nonnull @perf_sched_mutex) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_state_synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cond_synchronize_rcu(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @__perf_event_stop(ptr nocapture noundef readonly %0) #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 14
  %4 = load volatile i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %25

6:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !98
  %7 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 33
  %8 = load volatile i32, ptr %7, align 8
  %9 = tail call ptr @llvm.thread.pointer() #27
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %11 = load i32, ptr %10, align 8
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 12
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.pmu, ptr %15, i32 0, i32 22
  %17 = load ptr, ptr %16, align 4
  tail call void %17(ptr noundef %2, i32 noundef 4) #27
  %18 = getelementptr inbounds %struct.stop_event_data, ptr %0, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %13
  %22 = load ptr, ptr %14, align 8
  %23 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 21
  %24 = load ptr, ptr %23, align 4
  tail call void %24(ptr noundef %2, i32 noundef 0) #27
  br label %25

25:                                               ; preds = %21, %13, %6, %1
  %26 = phi i32 [ 0, %1 ], [ -11, %6 ], [ 0, %21 ], [ 0, %13 ]
  ret i32 %26
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ftrace_profile_free_filter(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @free_ctx(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -192
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %0, i32 -4
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 29
  %7 = load ptr, ptr %6, align 4
  %8 = icmp ne ptr %7, null
  %9 = icmp ne ptr %5, null
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void @kmem_cache_free(ptr noundef nonnull %7, ptr noundef nonnull %5) #27
  br label %12

12:                                               ; preds = %11, %1
  tail call void @kfree(ptr noundef %2) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_event_read(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca %struct.perf_read_data, align 4
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %6 = load volatile i32, ptr %5, align 8
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  br label %8

8:                                                ; preds = %133, %2
  %9 = phi i32 [ %6, %2 ], [ %44, %133 ]
  switch i32 %9, label %134 [
    i32 1, label %10
    i32 0, label %40
  ]

10:                                               ; preds = %8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #27
  %11 = getelementptr inbounds i8, ptr %3, i32 4
  store i32 0, ptr %11, align 4, !annotation !48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !99
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  %13 = load volatile i32, ptr %12, align 8
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %16, label %39

16:                                               ; preds = %10
  store ptr %0, ptr %3, align 4
  %17 = getelementptr inbounds i8, ptr %3, i32 4
  store i8 %4, ptr %17, align 4
  %18 = getelementptr inbounds i8, ptr %3, i32 8
  store i32 0, ptr %18, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !100
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 10
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %16
  %24 = tail call ptr @llvm.thread.pointer() #27
  %25 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %26 = load i32, ptr %25, align 8
  %27 = getelementptr [16 x %struct.cpu_topology], ptr @cpu_topology, i32 0, i32 %13, i32 3
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr [16 x %struct.cpu_topology], ptr @cpu_topology, i32 0, i32 %26, i32 3
  %30 = load i32, ptr %29, align 4
  %31 = xor i32 %30, %28
  %32 = and i32 %31, 65535
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %23, %16
  br label %35

35:                                               ; preds = %34, %23
  %36 = phi i32 [ %13, %34 ], [ %26, %23 ]
  %37 = call i32 @smp_call_function_single(i32 noundef %36, ptr noundef nonnull @__perf_event_read, ptr noundef nonnull %3, i32 noundef 1) #27
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !101
  %38 = load i32, ptr %18, align 4
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #27
  br label %134

39:                                               ; preds = %10
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #27
  br label %134

40:                                               ; preds = %8
  %41 = load ptr, ptr %7, align 8
  %42 = getelementptr inbounds %struct.perf_event_context, ptr %41, i32 0, i32 1
  %43 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %42) #27
  %44 = load i32, ptr %5, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %133

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.perf_event_context, ptr %41, i32 0, i32 12
  %48 = load i32, ptr %47, align 4
  %49 = and i32 %48, 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = tail call i64 @sched_clock() #27
  %53 = getelementptr inbounds %struct.perf_event_context, ptr %41, i32 0, i32 20
  %54 = load i64, ptr %53, align 8
  %55 = sub i64 %52, %54
  %56 = getelementptr inbounds %struct.perf_event_context, ptr %41, i32 0, i32 19
  %57 = load i64, ptr %56, align 8
  %58 = add i64 %55, %57
  store i64 %58, ptr %56, align 8
  store i64 %52, ptr %53, align 8
  %59 = sub i64 %58, %52
  %60 = getelementptr inbounds %struct.perf_event_context, ptr %41, i32 0, i32 21
  store volatile i64 %59, ptr %60, align 8
  br label %61

61:                                               ; preds = %51, %46
  %62 = load ptr, ptr %7, align 8
  %63 = icmp eq ptr %62, null
  br i1 %63, label %67, label %64, !prof !12

64:                                               ; preds = %61
  %65 = getelementptr inbounds %struct.perf_event_context, ptr %62, i32 0, i32 19
  %66 = load i64, ptr %65, align 8
  br label %67

67:                                               ; preds = %64, %61
  %68 = phi i64 [ %66, %64 ], [ 0, %61 ]
  %69 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr inbounds %struct.perf_event, ptr %70, i32 0, i32 14
  %72 = load i32, ptr %71, align 8
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %67
  %75 = load i32, ptr %5, align 8
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %72, %67 ]
  %78 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %79 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %80 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  %81 = load i64, ptr %80, align 8
  %82 = sub i64 %68, %81
  %83 = load i64, ptr %79, align 8
  %84 = icmp slt i32 %77, 0
  %85 = select i1 %84, i64 0, i64 %82
  %86 = add i64 %85, %83
  store i64 %86, ptr %79, align 8
  %87 = load i64, ptr %78, align 8
  %88 = icmp sgt i32 %77, 0
  %89 = select i1 %88, i64 %82, i64 0
  %90 = add i64 %87, %89
  store i64 %90, ptr %78, align 8
  store i64 %68, ptr %80, align 8
  %91 = icmp eq ptr %70, %0
  %92 = select i1 %1, i1 %91, i1 false
  br i1 %92, label %93, label %132

93:                                               ; preds = %76
  %94 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %95 = load ptr, ptr %94, align 8
  %96 = icmp eq ptr %95, %94
  br i1 %96, label %132, label %97

97:                                               ; preds = %115, %93
  %98 = phi ptr [ %130, %115 ], [ %95, %93 ]
  %99 = getelementptr i8, ptr %98, i32 440
  %100 = load ptr, ptr %99, align 8
  %101 = icmp eq ptr %100, null
  br i1 %101, label %105, label %102, !prof !12

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.perf_event_context, ptr %100, i32 0, i32 19
  %104 = load i64, ptr %103, align 8
  br label %105

105:                                              ; preds = %102, %97
  %106 = phi i64 [ %104, %102 ], [ 0, %97 ]
  %107 = getelementptr i8, ptr %98, i32 76
  %108 = load ptr, ptr %107, align 4
  %109 = getelementptr inbounds %struct.perf_event, ptr %108, i32 0, i32 14
  %110 = load i32, ptr %109, align 8
  %111 = icmp slt i32 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %105
  %113 = getelementptr i8, ptr %98, i32 88
  %114 = load i32, ptr %113, align 8
  br label %115

115:                                              ; preds = %112, %105
  %116 = phi i32 [ %114, %112 ], [ %110, %105 ]
  %117 = getelementptr i8, ptr %98, i32 120
  %118 = getelementptr i8, ptr %98, i32 112
  %119 = getelementptr i8, ptr %98, i32 128
  %120 = load i64, ptr %119, align 8
  %121 = sub i64 %106, %120
  %122 = load i64, ptr %118, align 8
  %123 = icmp slt i32 %116, 0
  %124 = select i1 %123, i64 0, i64 %121
  %125 = add i64 %124, %122
  store i64 %125, ptr %118, align 8
  %126 = load i64, ptr %117, align 8
  %127 = icmp sgt i32 %116, 0
  %128 = select i1 %127, i64 %121, i64 0
  %129 = add i64 %126, %128
  store i64 %129, ptr %117, align 8
  store i64 %106, ptr %119, align 8
  %130 = load ptr, ptr %98, align 8
  %131 = icmp eq ptr %130, %94
  br i1 %131, label %132, label %97

132:                                              ; preds = %115, %93, %76
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %42, i32 noundef %43) #27
  br label %134

133:                                              ; preds = %40
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %42, i32 noundef %43) #27
  br label %8

134:                                              ; preds = %132, %39, %35, %8
  %135 = phi i32 [ 0, %39 ], [ %38, %35 ], [ 0, %132 ], [ 0, %8 ]
  ret i32 %135
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_event_read(ptr nocapture noundef %0) #0 {
  %2 = load ptr, ptr %0, align 4
  %3 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %6 = inttoptr i32 %5 to ptr
  %7 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %6) #19, !srcloc !11
  %8 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 12
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 18
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %1
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds %struct.pmu, ptr %14, i32 0, i32 9
  %16 = load ptr, ptr %15, align 4
  %17 = ptrtoint ptr %16 to i32
  %18 = add i32 %7, %17
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.perf_cpu_context, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 8
  %22 = icmp eq ptr %21, %4
  br i1 %22, label %23, label %159

23:                                               ; preds = %13, %1
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %24) #27
  %25 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 12
  %26 = load i32, ptr %25, align 4
  %27 = and i32 %26, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %23
  %30 = tail call i64 @sched_clock() #27
  %31 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 20
  %32 = load i64, ptr %31, align 8
  %33 = sub i64 %30, %32
  %34 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 19
  %35 = load i64, ptr %34, align 8
  %36 = add i64 %33, %35
  store i64 %36, ptr %34, align 8
  store i64 %30, ptr %31, align 8
  %37 = sub i64 %36, %30
  %38 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 21
  store volatile i64 %37, ptr %38, align 8
  br label %39

39:                                               ; preds = %29, %23
  %40 = load ptr, ptr %3, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %45, label %42, !prof !12

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.perf_event_context, ptr %40, i32 0, i32 19
  %44 = load i64, ptr %43, align 8
  br label %45

45:                                               ; preds = %42, %39
  %46 = phi i64 [ %44, %42 ], [ 0, %39 ]
  %47 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 11
  %48 = load ptr, ptr %47, align 4
  %49 = getelementptr inbounds %struct.perf_event, ptr %48, i32 0, i32 14
  %50 = load i32, ptr %49, align 8
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 14
  %54 = load i32, ptr %53, align 8
  br label %55

55:                                               ; preds = %52, %45
  %56 = phi i32 [ %54, %52 ], [ %50, %45 ]
  %57 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 19
  %58 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 18
  %59 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 20
  %60 = load i64, ptr %59, align 8
  %61 = sub i64 %46, %60
  %62 = load i64, ptr %58, align 8
  %63 = icmp slt i32 %56, 0
  %64 = select i1 %63, i64 0, i64 %61
  %65 = add i64 %64, %62
  store i64 %65, ptr %58, align 8
  %66 = load i64, ptr %57, align 8
  %67 = icmp sgt i32 %56, 0
  %68 = select i1 %67, i64 %61, i64 0
  %69 = add i64 %66, %68
  store i64 %69, ptr %57, align 8
  store i64 %46, ptr %59, align 8
  %70 = getelementptr inbounds %struct.perf_read_data, ptr %0, i32 0, i32 1
  %71 = load i8, ptr %70, align 4, !range !97
  %72 = icmp ne i8 %71, 0
  %73 = icmp eq ptr %48, %2
  %74 = select i1 %72, i1 %73, i1 false
  br i1 %74, label %75, label %114

75:                                               ; preds = %55
  %76 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 1
  %77 = load ptr, ptr %76, align 8
  %78 = icmp eq ptr %77, %76
  br i1 %78, label %114, label %79

79:                                               ; preds = %97, %75
  %80 = phi ptr [ %112, %97 ], [ %77, %75 ]
  %81 = getelementptr i8, ptr %80, i32 440
  %82 = load ptr, ptr %81, align 8
  %83 = icmp eq ptr %82, null
  br i1 %83, label %87, label %84, !prof !12

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.perf_event_context, ptr %82, i32 0, i32 19
  %86 = load i64, ptr %85, align 8
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi i64 [ %86, %84 ], [ 0, %79 ]
  %89 = getelementptr i8, ptr %80, i32 76
  %90 = load ptr, ptr %89, align 4
  %91 = getelementptr inbounds %struct.perf_event, ptr %90, i32 0, i32 14
  %92 = load i32, ptr %91, align 8
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = getelementptr i8, ptr %80, i32 88
  %96 = load i32, ptr %95, align 8
  br label %97

97:                                               ; preds = %94, %87
  %98 = phi i32 [ %96, %94 ], [ %92, %87 ]
  %99 = getelementptr i8, ptr %80, i32 120
  %100 = getelementptr i8, ptr %80, i32 112
  %101 = getelementptr i8, ptr %80, i32 128
  %102 = load i64, ptr %101, align 8
  %103 = sub i64 %88, %102
  %104 = load i64, ptr %100, align 8
  %105 = icmp slt i32 %98, 0
  %106 = select i1 %105, i64 0, i64 %103
  %107 = add i64 %106, %104
  store i64 %107, ptr %100, align 8
  %108 = load i64, ptr %99, align 8
  %109 = icmp sgt i32 %98, 0
  %110 = select i1 %109, i64 %103, i64 0
  %111 = add i64 %108, %110
  store i64 %111, ptr %99, align 8
  store i64 %88, ptr %101, align 8
  %112 = load ptr, ptr %80, align 8
  %113 = icmp eq ptr %112, %76
  br i1 %113, label %114, label %79

114:                                              ; preds = %97, %75, %55
  %115 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 14
  %116 = load i32, ptr %115, align 8
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %156

118:                                              ; preds = %114
  %119 = load i8, ptr %70, align 4, !range !97
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 23
  %123 = load ptr, ptr %122, align 4
  tail call void %123(ptr noundef %2) #27
  br label %153

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 24
  %126 = load ptr, ptr %125, align 4
  tail call void %126(ptr noundef %9, i32 noundef 2) #27
  %127 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 23
  %128 = load ptr, ptr %127, align 4
  tail call void %128(ptr noundef %2) #27
  %129 = load ptr, ptr %47, align 4
  %130 = icmp eq ptr %129, %2
  br i1 %130, label %131, label %149

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.perf_event, ptr %2, i32 0, i32 1
  %133 = load ptr, ptr %132, align 8
  %134 = icmp eq ptr %133, %132
  br i1 %134, label %149, label %135

135:                                              ; preds = %146, %131
  %136 = phi ptr [ %147, %146 ], [ %133, %131 ]
  %137 = getelementptr i8, ptr %136, i32 88
  %138 = load i32, ptr %137, align 8
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %146

140:                                              ; preds = %135
  %141 = getelementptr i8, ptr %136, i32 -8
  %142 = getelementptr i8, ptr %136, i32 80
  %143 = load ptr, ptr %142, align 8
  %144 = getelementptr inbounds %struct.pmu, ptr %143, i32 0, i32 23
  %145 = load ptr, ptr %144, align 4
  tail call void %145(ptr noundef %141) #27
  br label %146

146:                                              ; preds = %140, %135
  %147 = load ptr, ptr %136, align 8
  %148 = icmp eq ptr %147, %132
  br i1 %148, label %149, label %135

149:                                              ; preds = %146, %131, %124
  %150 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 25
  %151 = load ptr, ptr %150, align 4
  %152 = tail call i32 %151(ptr noundef %9) #27
  br label %153

153:                                              ; preds = %149, %121
  %154 = phi i32 [ %152, %149 ], [ 0, %121 ]
  %155 = getelementptr inbounds %struct.perf_read_data, ptr %0, i32 0, i32 2
  store i32 %154, ptr %155, align 4
  br label %156

156:                                              ; preds = %153, %114
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %157 = load i16, ptr %24, align 4
  %158 = add i16 %157, 1
  store i16 %158, ptr %24, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %159

159:                                              ; preds = %156, %13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_event_period(ptr noundef %0, ptr nocapture noundef readnone %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) #0 {
  %5 = load i64, ptr %3, align 8
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 1024
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  store i64 %5, ptr %11, align 8
  br label %12

12:                                               ; preds = %10, %4
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  store i64 %5, ptr %13, align 8
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %15 = load i32, ptr %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %63

17:                                               ; preds = %12
  %18 = load ptr, ptr %2, align 8
  %19 = getelementptr inbounds %struct.pmu, ptr %18, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = ptrtoint ptr %20 to i32
  %22 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %23 = inttoptr i32 %22 to ptr
  %24 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %23) #19, !srcloc !11
  %25 = add i32 %24, %21
  %26 = inttoptr i32 %25 to ptr
  %27 = load i32, ptr %26, align 4
  %28 = add i32 %27, 1
  store i32 %28, ptr %26, align 4
  %29 = icmp eq i32 %27, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %17
  %31 = getelementptr inbounds %struct.pmu, ptr %18, i32 0, i32 15
  %32 = load ptr, ptr %31, align 4
  tail call void %32(ptr noundef %18) #27
  br label %33

33:                                               ; preds = %30, %17
  %34 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 9
  %35 = load i64, ptr %34, align 8
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store i64 0, ptr %34, align 8
  tail call fastcc void @perf_log_throttle(ptr noundef %0, i32 noundef 1)
  br label %38

38:                                               ; preds = %37, %33
  %39 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.pmu, ptr %40, i32 0, i32 22
  %42 = load ptr, ptr %41, align 4
  tail call void %42(ptr noundef %0, i32 noundef 4) #27
  %43 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %43) #27, !srcloc !19
  %44 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %43, ptr %43, i64 0) #27, !srcloc !29
  %45 = load ptr, ptr %39, align 8
  %46 = getelementptr inbounds %struct.pmu, ptr %45, i32 0, i32 21
  %47 = load ptr, ptr %46, align 4
  tail call void %47(ptr noundef %0, i32 noundef 2) #27
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds %struct.pmu, ptr %48, i32 0, i32 8
  %50 = load ptr, ptr %49, align 4
  %51 = ptrtoint ptr %50 to i32
  %52 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %53 = inttoptr i32 %52 to ptr
  %54 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %53) #19, !srcloc !11
  %55 = add i32 %54, %51
  %56 = inttoptr i32 %55 to ptr
  %57 = load i32, ptr %56, align 4
  %58 = add i32 %57, -1
  store i32 %58, ptr %56, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %38
  %61 = getelementptr inbounds %struct.pmu, ptr %48, i32 0, i32 14
  %62 = load ptr, ptr %61, align 4
  tail call void %62(ptr noundef %48) #27
  br label %66

63:                                               ; preds = %12
  %64 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %64) #27, !srcloc !19
  %65 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %64, ptr %64, i64 0) #27, !srcloc !29
  br label %66

66:                                               ; preds = %63, %60, %38
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_le(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @perf_reg_value(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_output_skip(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @perf_reg_abi(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_get_regs_user(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight64(i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_user_pages_fast_only(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_event_exit_event(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %7) #27
  br label %8

8:                                                ; preds = %6, %2
  %9 = phi ptr [ inttoptr (i32 3 to ptr), %6 ], [ null, %2 ]
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %12) #27
  %13 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 12
  %14 = load i32, ptr %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %8
  %17 = load ptr, ptr %11, align 8
  %18 = getelementptr inbounds %struct.pmu, ptr %17, i32 0, i32 9
  %19 = load ptr, ptr %18, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %22 = inttoptr i32 %21 to ptr
  %23 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %22) #19, !srcloc !11
  %24 = add i32 %23, %20
  %25 = inttoptr i32 %24 to ptr
  tail call void @__perf_remove_from_context(ptr noundef %0, ptr noundef %25, ptr noundef %11, ptr noundef %9) #27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %26 = load i16, ptr %12, align 4
  %27 = add i16 %26, 1
  store i16 %27, ptr %12, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %31

28:                                               ; preds = %8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %29 = load i16, ptr %12, align 4
  %30 = add i16 %29, 1
  store i16 %30, ptr %12, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_remove_from_context, ptr noundef %9) #27
  br label %31

31:                                               ; preds = %28, %16
  %32 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %32) #27
  %33 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %34 = load i32, ptr %33, align 8
  %35 = icmp sgt i32 %34, -3
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  tail call fastcc void @perf_event_set_state(ptr noundef %0, i32 noundef -3)
  br label %37

37:                                               ; preds = %36, %31
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %38 = load i16, ptr %32, align 4
  %39 = add i16 %38, 1
  store i16 %39, ptr %32, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br i1 %5, label %85, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 30
  tail call void @mutex_unlock(ptr noundef %41) #27
  %42 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 32
  %43 = load ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr %4, ptr %43
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %46 = getelementptr inbounds %struct.perf_event, ptr %45, i32 0, i32 39
  %47 = load volatile ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %struct.perf_buffer, ptr %47, i32 0, i32 16
  %51 = load volatile ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, %50
  br i1 %52, label %58, label %53

53:                                               ; preds = %53, %49
  %54 = phi ptr [ %56, %53 ], [ %51, %49 ]
  %55 = getelementptr i8, ptr %54, i32 16
  tail call void @__wake_up(ptr noundef %55, i32 noundef 3, i32 noundef 0, ptr noundef null) #27
  %56 = load volatile ptr, ptr %54, align 4
  %57 = icmp eq ptr %56, %50
  br i1 %57, label %58, label %53

58:                                               ; preds = %53, %49, %40
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %59 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 46
  %60 = load i32, ptr %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %58
  %63 = load ptr, ptr %42, align 4
  %64 = icmp eq ptr %63, null
  %65 = select i1 %64, ptr %4, ptr %63
  %66 = getelementptr inbounds %struct.perf_event, ptr %65, i32 0, i32 44
  tail call void @kill_fasync(ptr noundef %66, i32 noundef 29, i32 noundef %60) #27
  store i32 0, ptr %59, align 4
  br label %67

67:                                               ; preds = %62, %58
  %68 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %68) #27, !srcloc !19
  br label %69

69:                                               ; preds = %69, %67
  %70 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %68, ptr %68, i32 1, i32 0, ptr elementtype(i32) %68) #27, !srcloc !37
  %71 = extractvalue { i32, i32 } %70, 0
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %69

73:                                               ; preds = %69
  %74 = extractvalue { i32, i32 } %70, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %78, label %76, !prof !23

76:                                               ; preds = %73
  %77 = load volatile i32, ptr %68, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %77, ptr noundef %0) #27
  br label %79

78:                                               ; preds = %73
  tail call fastcc void @_free_event(ptr noundef %0) #27
  br label %79

79:                                               ; preds = %78, %76
  %80 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %80) #27, !srcloc !19
  %81 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %80, ptr %80, i32 1, ptr elementtype(i32) %80) #27, !srcloc !34
  %82 = extractvalue { i32, i32 } %81, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %110

84:                                               ; preds = %79
  tail call fastcc void @_free_event(ptr noundef nonnull %4) #27
  br label %110

85:                                               ; preds = %37
  %86 = load ptr, ptr %3, align 4
  %87 = icmp eq ptr %86, null
  %88 = select i1 %87, ptr %0, ptr %86
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %89 = getelementptr inbounds %struct.perf_event, ptr %88, i32 0, i32 39
  %90 = load volatile ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %101, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %struct.perf_buffer, ptr %90, i32 0, i32 16
  %94 = load volatile ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, %93
  br i1 %95, label %101, label %96

96:                                               ; preds = %96, %92
  %97 = phi ptr [ %99, %96 ], [ %94, %92 ]
  %98 = getelementptr i8, ptr %97, i32 16
  tail call void @__wake_up(ptr noundef %98, i32 noundef 3, i32 noundef 0, ptr noundef null) #27
  %99 = load volatile ptr, ptr %97, align 4
  %100 = icmp eq ptr %99, %93
  br i1 %100, label %101, label %96

101:                                              ; preds = %96, %92, %85
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %102 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 46
  %103 = load i32, ptr %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = load ptr, ptr %3, align 4
  %107 = icmp eq ptr %106, null
  %108 = select i1 %107, ptr %0, ptr %106
  %109 = getelementptr inbounds %struct.perf_event, ptr %108, i32 0, i32 44
  tail call void @kill_fasync(ptr noundef %109, i32 noundef 29, i32 noundef %103) #27
  store i32 0, ptr %102, align 4
  br label %110

110:                                              ; preds = %105, %101, %84, %79
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @perf_lock_task_context(ptr noundef %0, i32 noundef %1, ptr nocapture noundef %2) unnamed_addr #0 {
  %4 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  store i32 %4, ptr %2, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %5 = getelementptr %struct.task_struct, ptr %0, i32 0, i32 130, i32 %1
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %58, label %8

8:                                                ; preds = %13, %3
  %9 = phi ptr [ %18, %13 ], [ %6, %3 ]
  %10 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %10) #27
  %11 = load volatile ptr, ptr %5, align 4
  %12 = icmp eq ptr %9, %11
  br i1 %12, label %20, label %13

13:                                               ; preds = %8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %14 = load i16, ptr %10, align 4
  %15 = add i16 %14, 1
  store i16 %15, ptr %10, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %16 = load i32, ptr %2, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %16) #27, !srcloc !22
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #27, !srcloc !21
  store i32 %17, ptr %2, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %18 = load volatile ptr, ptr %5, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %58, label %8

20:                                               ; preds = %8
  %21 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 18
  %22 = load ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, inttoptr (i32 -1 to ptr)
  br i1 %23, label %48, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.perf_event_context, ptr %9, i32 0, i32 17
  %26 = load volatile i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %38, %24
  %29 = phi i32 [ %36, %38 ], [ %26, %24 ]
  %30 = add i32 %29, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %25) #27, !srcloc !19
  br label %31

31:                                               ; preds = %31, %28
  %32 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %25, ptr %25, i32 %29, i32 %30, ptr elementtype(i32) %25) #27, !srcloc !37
  %33 = extractvalue { i32, i32 } %32, 0
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %31

35:                                               ; preds = %31
  %36 = extractvalue { i32, i32 } %32, 1
  %37 = icmp eq i32 %36, %29
  br i1 %37, label %40, label %38, !prof !23

38:                                               ; preds = %35
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %28

40:                                               ; preds = %38, %35, %24
  %41 = phi i32 [ 0, %24 ], [ 0, %38 ], [ %29, %35 ]
  %42 = add i32 %41, 1
  %43 = or i32 %42, %41
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %46, label %45, !prof !23

45:                                               ; preds = %40
  tail call void @refcount_warn_saturate(ptr noundef %25, i32 noundef 0) #27
  br label %46

46:                                               ; preds = %45, %40
  %47 = icmp eq i32 %41, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %46, %20
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %49 = load i16, ptr %10, align 4
  %50 = add i16 %49, 1
  store i16 %50, ptr %10, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %58

51:                                               ; preds = %46
  %52 = load ptr, ptr %21, align 4
  %53 = icmp ne ptr %52, %0
  %54 = load i1, ptr @perf_lock_task_context.__already_done, align 1
  %55 = xor i1 %54, true
  %56 = select i1 %53, i1 %55, i1 false
  br i1 %56, label %57, label %60, !prof !12

57:                                               ; preds = %51
  store i1 true, ptr @perf_lock_task_context.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1518, i32 noundef 9, ptr noundef null) #27
  br label %60

58:                                               ; preds = %48, %13, %3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %59 = load i32, ptr %2, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %59) #27, !srcloc !22
  br label %61

60:                                               ; preds = %57, %51
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %61

61:                                               ; preds = %60, %58
  %62 = phi ptr [ null, %58 ], [ %9, %60 ]
  ret ptr %62
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_task_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = load ptr, ptr %1, align 8
  %6 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2
  %7 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 0, i32 2
  %8 = load i16, ptr %7, align 2
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %10 = load i64, ptr %9, align 8
  %11 = and i64 %10, 8528640
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %122, label %13

13:                                               ; preds = %2
  %14 = and i64 %10, 262144
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  call fastcc void @__perf_event_header__init_id(ptr noundef %6, ptr noundef nonnull %4, ptr noundef %0) #27
  %17 = load i16, ptr %7, align 2
  br label %18

18:                                               ; preds = %16, %13
  %19 = phi i16 [ %8, %13 ], [ %17, %16 ]
  %20 = zext i16 %19 to i32
  %21 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %20) #27
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %121

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr %0, ptr %25
  %28 = getelementptr inbounds %struct.perf_event, ptr %27, i32 0, i32 57
  %29 = load ptr, ptr %28, align 4
  %30 = call i32 @__task_pid_nr_ns(ptr noundef %5, i32 noundef 1, ptr noundef %29) #27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %23
  %33 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 62
  %34 = load ptr, ptr %33, align 64
  %35 = icmp eq ptr %34, null
  %36 = sext i1 %35 to i32
  br label %37

37:                                               ; preds = %32, %23
  %38 = phi i32 [ %30, %23 ], [ %36, %32 ]
  %39 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 1
  store i32 %38, ptr %39, align 8
  %40 = load ptr, ptr %24, align 4
  %41 = icmp eq ptr %40, null
  %42 = select i1 %41, ptr %0, ptr %40
  %43 = getelementptr inbounds %struct.perf_event, ptr %42, i32 0, i32 57
  %44 = load ptr, ptr %43, align 4
  %45 = call i32 @__task_pid_nr_ns(ptr noundef %5, i32 noundef 0, ptr noundef %44) #27
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 62
  %49 = load ptr, ptr %48, align 64
  %50 = icmp eq ptr %49, null
  %51 = sext i1 %50 to i32
  br label %52

52:                                               ; preds = %47, %37
  %53 = phi i32 [ %45, %37 ], [ %51, %47 ]
  %54 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 3
  store i32 %53, ptr %54, align 8
  %55 = load i32, ptr %6, align 8
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %57, label %83

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 55
  %59 = load ptr, ptr %58, align 4
  %60 = load ptr, ptr %24, align 4
  %61 = icmp eq ptr %60, null
  %62 = select i1 %61, ptr %0, ptr %60
  %63 = getelementptr inbounds %struct.perf_event, ptr %62, i32 0, i32 57
  %64 = load ptr, ptr %63, align 4
  %65 = call i32 @__task_pid_nr_ns(ptr noundef %59, i32 noundef 1, ptr noundef %64) #27
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

67:                                               ; preds = %57
  %68 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 62
  %69 = load ptr, ptr %68, align 64
  %70 = icmp eq ptr %69, null
  %71 = sext i1 %70 to i32
  br label %72

72:                                               ; preds = %67, %57
  %73 = phi i32 [ %65, %57 ], [ %71, %67 ]
  %74 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 2
  store i32 %73, ptr %74, align 4
  %75 = load ptr, ptr %58, align 4
  %76 = load ptr, ptr %24, align 4
  %77 = icmp eq ptr %76, null
  %78 = select i1 %77, ptr %0, ptr %76
  %79 = getelementptr inbounds %struct.perf_event, ptr %78, i32 0, i32 57
  %80 = load ptr, ptr %79, align 4
  %81 = call i32 @__task_pid_nr_ns(ptr noundef %75, i32 noundef 1, ptr noundef %80) #27
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %107, label %113

83:                                               ; preds = %52
  %84 = tail call ptr @llvm.thread.pointer() #27
  %85 = load ptr, ptr %24, align 4
  %86 = icmp eq ptr %85, null
  %87 = select i1 %86, ptr %0, ptr %85
  %88 = getelementptr inbounds %struct.perf_event, ptr %87, i32 0, i32 57
  %89 = load ptr, ptr %88, align 4
  %90 = call i32 @__task_pid_nr_ns(ptr noundef %84, i32 noundef 1, ptr noundef %89) #27
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %83
  %93 = getelementptr inbounds %struct.task_struct, ptr %84, i32 0, i32 62
  %94 = load ptr, ptr %93, align 64
  %95 = icmp eq ptr %94, null
  %96 = sext i1 %95 to i32
  br label %97

97:                                               ; preds = %92, %83
  %98 = phi i32 [ %90, %83 ], [ %96, %92 ]
  %99 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 2
  store i32 %98, ptr %99, align 4
  %100 = load ptr, ptr %24, align 4
  %101 = icmp eq ptr %100, null
  %102 = select i1 %101, ptr %0, ptr %100
  %103 = getelementptr inbounds %struct.perf_event, ptr %102, i32 0, i32 57
  %104 = load ptr, ptr %103, align 4
  %105 = call i32 @__task_pid_nr_ns(ptr noundef %84, i32 noundef 0, ptr noundef %104) #27
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %113

107:                                              ; preds = %97, %72
  %108 = phi ptr [ %75, %72 ], [ %84, %97 ]
  %109 = getelementptr inbounds %struct.task_struct, ptr %108, i32 0, i32 62
  %110 = load ptr, ptr %109, align 64
  %111 = icmp eq ptr %110, null
  %112 = sext i1 %111 to i32
  br label %113

113:                                              ; preds = %107, %97, %72
  %114 = phi i32 [ %81, %72 ], [ %105, %97 ], [ %112, %107 ]
  %115 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 4
  store i32 %114, ptr %115, align 4
  %116 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 59
  %117 = load ptr, ptr %116, align 8
  %118 = call i64 %117() #27
  %119 = getelementptr inbounds %struct.perf_task_event, ptr %1, i32 0, i32 2, i32 5
  store i64 %118, ptr %119, align 8
  %120 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %6, i32 noundef 32) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %121

121:                                              ; preds = %113, %18
  store i16 %8, ptr %7, align 2
  br label %122

122:                                              ; preds = %121, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_comm_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 3
  %6 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 3, i32 0, i32 2
  %7 = load i16, ptr %6, align 2
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 512
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %99, label %12

12:                                               ; preds = %2
  %13 = and i64 %9, 262144
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  call fastcc void @__perf_event_header__init_id(ptr noundef %5, ptr noundef nonnull %4, ptr noundef %0) #27
  %16 = load i16, ptr %6, align 2
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i16 [ %7, %12 ], [ %16, %15 ]
  %19 = zext i16 %18 to i32
  %20 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %19) #27
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %98

22:                                               ; preds = %17
  %23 = load ptr, ptr %1, align 4
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  %27 = select i1 %26, ptr %0, ptr %25
  %28 = getelementptr inbounds %struct.perf_event, ptr %27, i32 0, i32 57
  %29 = load ptr, ptr %28, align 4
  %30 = call i32 @__task_pid_nr_ns(ptr noundef %23, i32 noundef 1, ptr noundef %29) #27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %22
  %33 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 62
  %34 = load ptr, ptr %33, align 64
  %35 = icmp eq ptr %34, null
  %36 = sext i1 %35 to i32
  br label %37

37:                                               ; preds = %32, %22
  %38 = phi i32 [ %30, %22 ], [ %36, %32 ]
  %39 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 3, i32 1
  store i32 %38, ptr %39, align 4
  %40 = load ptr, ptr %1, align 4
  %41 = load ptr, ptr %24, align 4
  %42 = icmp eq ptr %41, null
  %43 = select i1 %42, ptr %0, ptr %41
  %44 = getelementptr inbounds %struct.perf_event, ptr %43, i32 0, i32 57
  %45 = load ptr, ptr %44, align 4
  %46 = call i32 @__task_pid_nr_ns(ptr noundef %40, i32 noundef 0, ptr noundef %45) #27
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %37
  %49 = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 62
  %50 = load ptr, ptr %49, align 64
  %51 = icmp eq ptr %50, null
  %52 = sext i1 %51 to i32
  br label %53

53:                                               ; preds = %48, %37
  %54 = phi i32 [ %46, %37 ], [ %52, %48 ]
  %55 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 3, i32 2
  store i32 %54, ptr %55, align 4
  %56 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %5, i32 noundef 16) #27
  %57 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 1
  %58 = load ptr, ptr %57, align 4
  %59 = getelementptr inbounds %struct.perf_comm_event, ptr %1, i32 0, i32 2
  %60 = load i32, ptr %59, align 4
  %61 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 3
  %62 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 5
  %63 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 1
  %64 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 6
  %65 = load i32, ptr %61, align 4
  %66 = load ptr, ptr %62, align 8
  br label %67

67:                                               ; preds = %93, %53
  %68 = phi ptr [ %66, %53 ], [ %94, %93 ]
  %69 = phi i32 [ %65, %53 ], [ %95, %93 ]
  %70 = phi i32 [ %60, %53 ], [ %73, %93 ]
  %71 = phi ptr [ %58, %53 ], [ %76, %93 ]
  %72 = call i32 @llvm.umin.i32(i32 %69, i32 %70) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %68, ptr align 1 %71, i32 %72, i1 false) #27
  %73 = sub i32 %70, %72
  %74 = load ptr, ptr %62, align 8
  %75 = getelementptr i8, ptr %74, i32 %72
  store ptr %75, ptr %62, align 8
  %76 = getelementptr i8, ptr %71, i32 %72
  %77 = load i32, ptr %61, align 4
  %78 = sub i32 %77, %72
  store i32 %78, ptr %61, align 4
  %79 = icmp eq i32 %77, %72
  br i1 %79, label %80, label %93

80:                                               ; preds = %67
  %81 = load ptr, ptr %63, align 4
  %82 = load i32, ptr %64, align 4
  %83 = add i32 %82, 1
  %84 = getelementptr inbounds %struct.perf_buffer, ptr %81, i32 0, i32 4
  %85 = load i32, ptr %84, align 4
  %86 = add i32 %85, -1
  %87 = and i32 %86, %83
  store i32 %87, ptr %64, align 4
  %88 = getelementptr %struct.perf_buffer, ptr %81, i32 0, i32 34, i32 %87
  %89 = load ptr, ptr %88, align 4
  store ptr %89, ptr %62, align 8
  %90 = getelementptr inbounds %struct.perf_buffer, ptr %81, i32 0, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = shl i32 4096, %91
  store i32 %92, ptr %61, align 4
  br label %93

93:                                               ; preds = %80, %67
  %94 = phi ptr [ %75, %67 ], [ %89, %80 ]
  %95 = phi i32 [ %78, %67 ], [ %92, %80 ]
  %96 = icmp eq i32 %73, 0
  br i1 %96, label %97, label %67

97:                                               ; preds = %93
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %98

98:                                               ; preds = %97, %17
  store i16 %7, ptr %6, align 2
  br label %99

99:                                               ; preds = %98, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ns_get_path(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @file_path(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @arch_vma_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @build_id_parse(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_mmap_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  %5 = alloca [4 x i8], align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %6 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 11
  %7 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 11, i32 0, i32 2
  %8 = load i16, ptr %7, align 2
  %9 = load i32, ptr %6, align 8
  %10 = load ptr, ptr %1, align 8
  %11 = getelementptr inbounds %struct.vm_area_struct, ptr %10, i32 0, i32 8
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %16 = load i64, ptr %15, align 8
  br i1 %14, label %20, label %17

17:                                               ; preds = %2
  %18 = and i64 %16, 256
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %17, %2
  %21 = phi i32 [ 17, %2 ], [ 23, %17 ]
  %22 = trunc i64 %16 to i32
  %23 = shl i32 1, %21
  %24 = and i32 %23, %22
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %229, label %26

26:                                               ; preds = %20, %17
  %27 = and i64 %16, 8388608
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  store i32 10, ptr %6, align 8
  %30 = add i16 %8, 32
  store i16 %30, ptr %7, align 2
  %31 = load i64, ptr %15, align 8
  br label %32

32:                                               ; preds = %29, %26
  %33 = phi i16 [ %30, %29 ], [ %8, %26 ]
  %34 = phi i64 [ %31, %29 ], [ %16, %26 ]
  %35 = and i64 %34, 262144
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  call fastcc void @__perf_event_header__init_id(ptr noundef %6, ptr noundef nonnull %4, ptr noundef %0) #27
  %38 = load i16, ptr %7, align 2
  br label %39

39:                                               ; preds = %37, %32
  %40 = phi i16 [ %33, %32 ], [ %38, %37 ]
  %41 = zext i16 %40 to i32
  %42 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %41) #27
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %228

44:                                               ; preds = %39
  %45 = tail call ptr @llvm.thread.pointer() #27
  %46 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %47 = load ptr, ptr %46, align 4
  %48 = icmp eq ptr %47, null
  %49 = select i1 %48, ptr %0, ptr %47
  %50 = getelementptr inbounds %struct.perf_event, ptr %49, i32 0, i32 57
  %51 = load ptr, ptr %50, align 4
  %52 = call i32 @__task_pid_nr_ns(ptr noundef %45, i32 noundef 1, ptr noundef %51) #27
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %44
  %55 = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 62
  %56 = load ptr, ptr %55, align 64
  %57 = icmp eq ptr %56, null
  %58 = sext i1 %57 to i32
  br label %59

59:                                               ; preds = %54, %44
  %60 = phi i32 [ %52, %44 ], [ %58, %54 ]
  %61 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 11, i32 1
  store i32 %60, ptr %61, align 8
  %62 = load ptr, ptr %46, align 4
  %63 = icmp eq ptr %62, null
  %64 = select i1 %63, ptr %0, ptr %62
  %65 = getelementptr inbounds %struct.perf_event, ptr %64, i32 0, i32 57
  %66 = load ptr, ptr %65, align 4
  %67 = call i32 @__task_pid_nr_ns(ptr noundef %45, i32 noundef 0, ptr noundef %66) #27
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.task_struct, ptr %45, i32 0, i32 62
  %71 = load ptr, ptr %70, align 64
  %72 = icmp eq ptr %71, null
  %73 = sext i1 %72 to i32
  br label %74

74:                                               ; preds = %69, %59
  %75 = phi i32 [ %67, %59 ], [ %73, %69 ]
  %76 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 11, i32 2
  store i32 %75, ptr %76, align 4
  %77 = load i64, ptr %15, align 8
  %78 = and i64 %77, 17179869184
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %92, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 10
  %82 = load i32, ptr %81, align 4
  %83 = icmp ne i32 %82, 0
  %84 = and i64 %77, 8388608
  %85 = icmp eq i64 %84, 0
  %86 = xor i1 %83, true
  %87 = select i1 %85, i1 true, i1 %86
  br i1 %87, label %92, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 11, i32 0, i32 1
  %90 = load i16, ptr %89, align 4
  %91 = or i16 %90, 16384
  store i16 %91, ptr %89, align 4
  br label %92

92:                                               ; preds = %88, %80, %74
  %93 = phi i1 [ %83, %80 ], [ %83, %88 ], [ false, %74 ]
  %94 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %6, i32 noundef 40) #27
  %95 = load i64, ptr %15, align 8
  %96 = and i64 %95, 8388608
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %186, label %98

98:                                               ; preds = %92
  br i1 %93, label %99, label %172

99:                                               ; preds = %98
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #27
  store i32 0, ptr %5, align 4, !annotation !48
  %100 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 10
  %101 = load i32, ptr %100, align 4
  %102 = trunc i32 %101 to i8
  store i8 %102, ptr %5, align 4
  %103 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 3
  %104 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 5
  %105 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 1
  %106 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 6
  %107 = load i32, ptr %103, align 4
  %108 = load ptr, ptr %104, align 8
  br label %109

109:                                              ; preds = %135, %99
  %110 = phi ptr [ %108, %99 ], [ %136, %135 ]
  %111 = phi i32 [ %107, %99 ], [ %137, %135 ]
  %112 = phi i32 [ 4, %99 ], [ %115, %135 ]
  %113 = phi ptr [ %5, %99 ], [ %118, %135 ]
  %114 = call i32 @llvm.umin.i32(i32 %111, i32 %112) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %110, ptr align 1 %113, i32 %114, i1 false) #27
  %115 = sub i32 %112, %114
  %116 = load ptr, ptr %104, align 8
  %117 = getelementptr i8, ptr %116, i32 %114
  store ptr %117, ptr %104, align 8
  %118 = getelementptr i8, ptr %113, i32 %114
  %119 = load i32, ptr %103, align 4
  %120 = sub i32 %119, %114
  store i32 %120, ptr %103, align 4
  %121 = icmp eq i32 %119, %114
  br i1 %121, label %122, label %135

122:                                              ; preds = %109
  %123 = load ptr, ptr %105, align 4
  %124 = load i32, ptr %106, align 4
  %125 = add i32 %124, 1
  %126 = getelementptr inbounds %struct.perf_buffer, ptr %123, i32 0, i32 4
  %127 = load i32, ptr %126, align 4
  %128 = add i32 %127, -1
  %129 = and i32 %128, %125
  store i32 %129, ptr %106, align 4
  %130 = getelementptr %struct.perf_buffer, ptr %123, i32 0, i32 34, i32 %129
  %131 = load ptr, ptr %130, align 4
  store ptr %131, ptr %104, align 8
  %132 = getelementptr inbounds %struct.perf_buffer, ptr %123, i32 0, i32 3
  %133 = load i32, ptr %132, align 4
  %134 = shl i32 4096, %133
  store i32 %134, ptr %103, align 4
  br label %135

135:                                              ; preds = %122, %109
  %136 = phi ptr [ %117, %109 ], [ %131, %122 ]
  %137 = phi i32 [ %120, %109 ], [ %134, %122 ]
  %138 = icmp eq i32 %115, 0
  br i1 %138, label %139, label %109

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 9
  br label %141

141:                                              ; preds = %167, %139
  %142 = phi ptr [ %136, %139 ], [ %168, %167 ]
  %143 = phi i32 [ %137, %139 ], [ %169, %167 ]
  %144 = phi i32 [ 20, %139 ], [ %147, %167 ]
  %145 = phi ptr [ %140, %139 ], [ %150, %167 ]
  %146 = call i32 @llvm.umin.i32(i32 %143, i32 %144) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %142, ptr align 1 %145, i32 %146, i1 false) #27
  %147 = sub i32 %144, %146
  %148 = load ptr, ptr %104, align 8
  %149 = getelementptr i8, ptr %148, i32 %146
  store ptr %149, ptr %104, align 8
  %150 = getelementptr i8, ptr %145, i32 %146
  %151 = load i32, ptr %103, align 4
  %152 = sub i32 %151, %146
  store i32 %152, ptr %103, align 4
  %153 = icmp eq i32 %151, %146
  br i1 %153, label %154, label %167

154:                                              ; preds = %141
  %155 = load ptr, ptr %105, align 4
  %156 = load i32, ptr %106, align 4
  %157 = add i32 %156, 1
  %158 = getelementptr inbounds %struct.perf_buffer, ptr %155, i32 0, i32 4
  %159 = load i32, ptr %158, align 4
  %160 = add i32 %159, -1
  %161 = and i32 %160, %157
  store i32 %161, ptr %106, align 4
  %162 = getelementptr %struct.perf_buffer, ptr %155, i32 0, i32 34, i32 %161
  %163 = load ptr, ptr %162, align 4
  store ptr %163, ptr %104, align 8
  %164 = getelementptr inbounds %struct.perf_buffer, ptr %155, i32 0, i32 3
  %165 = load i32, ptr %164, align 4
  %166 = shl i32 4096, %165
  store i32 %166, ptr %103, align 4
  br label %167

167:                                              ; preds = %154, %141
  %168 = phi ptr [ %149, %141 ], [ %163, %154 ]
  %169 = phi i32 [ %152, %141 ], [ %166, %154 ]
  %170 = icmp eq i32 %147, 0
  br i1 %170, label %171, label %141

171:                                              ; preds = %167
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #27
  br label %181

172:                                              ; preds = %98
  %173 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 3
  %174 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %173, i32 noundef 4) #27
  %175 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 4
  %176 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %175, i32 noundef 4) #27
  %177 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 5
  %178 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %177, i32 noundef 8) #27
  %179 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 6
  %180 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %179, i32 noundef 8) #27
  br label %181

181:                                              ; preds = %172, %171
  %182 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 7
  %183 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %182, i32 noundef 4) #27
  %184 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 8
  %185 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %184, i32 noundef 4) #27
  br label %186

186:                                              ; preds = %181, %92
  %187 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 1
  %188 = load ptr, ptr %187, align 4
  %189 = getelementptr inbounds %struct.perf_mmap_event, ptr %1, i32 0, i32 2
  %190 = load i32, ptr %189, align 8
  %191 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 3
  %192 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 5
  %193 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 1
  %194 = getelementptr inbounds %struct.perf_output_handle, ptr %3, i32 0, i32 6
  %195 = load i32, ptr %191, align 4
  %196 = load ptr, ptr %192, align 8
  br label %197

197:                                              ; preds = %223, %186
  %198 = phi ptr [ %196, %186 ], [ %224, %223 ]
  %199 = phi i32 [ %195, %186 ], [ %225, %223 ]
  %200 = phi i32 [ %190, %186 ], [ %203, %223 ]
  %201 = phi ptr [ %188, %186 ], [ %206, %223 ]
  %202 = call i32 @llvm.umin.i32(i32 %199, i32 %200) #27
  call void @llvm.memcpy.p0.p0.i32(ptr align 1 %198, ptr align 1 %201, i32 %202, i1 false) #27
  %203 = sub i32 %200, %202
  %204 = load ptr, ptr %192, align 8
  %205 = getelementptr i8, ptr %204, i32 %202
  store ptr %205, ptr %192, align 8
  %206 = getelementptr i8, ptr %201, i32 %202
  %207 = load i32, ptr %191, align 4
  %208 = sub i32 %207, %202
  store i32 %208, ptr %191, align 4
  %209 = icmp eq i32 %207, %202
  br i1 %209, label %210, label %223

210:                                              ; preds = %197
  %211 = load ptr, ptr %193, align 4
  %212 = load i32, ptr %194, align 4
  %213 = add i32 %212, 1
  %214 = getelementptr inbounds %struct.perf_buffer, ptr %211, i32 0, i32 4
  %215 = load i32, ptr %214, align 4
  %216 = add i32 %215, -1
  %217 = and i32 %216, %213
  store i32 %217, ptr %194, align 4
  %218 = getelementptr %struct.perf_buffer, ptr %211, i32 0, i32 34, i32 %217
  %219 = load ptr, ptr %218, align 4
  store ptr %219, ptr %192, align 8
  %220 = getelementptr inbounds %struct.perf_buffer, ptr %211, i32 0, i32 3
  %221 = load i32, ptr %220, align 4
  %222 = shl i32 4096, %221
  store i32 %222, ptr %191, align 4
  br label %223

223:                                              ; preds = %210, %197
  %224 = phi ptr [ %205, %197 ], [ %219, %210 ]
  %225 = phi i32 [ %208, %197 ], [ %222, %210 ]
  %226 = icmp eq i32 %203, 0
  br i1 %226, label %227, label %197

227:                                              ; preds = %223
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %228

228:                                              ; preds = %227, %39
  store i16 %8, ptr %7, align 2
  store i32 %9, ptr %6, align 8
  br label %229

229:                                              ; preds = %228, %20
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #24

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_event_switch_output(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.perf_output_handle, align 8
  %4 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i32 32, i1 false), !annotation !48
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %4, i8 0, i32 192, i1 false), !annotation !48
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %6 = load i64, ptr %5, align 8
  %7 = and i64 %6, 67108864
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %73, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %11, i32 0, i32 18
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  %15 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2
  br i1 %14, label %18, label %16

16:                                               ; preds = %9
  store i32 14, ptr %15, align 4
  %17 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2, i32 0, i32 2
  store i16 8, ptr %17, align 2
  br label %54

18:                                               ; preds = %9
  store i32 15, ptr %15, align 4
  %19 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2, i32 0, i32 2
  store i16 16, ptr %19, align 2
  %20 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  %25 = select i1 %24, ptr %0, ptr %23
  %26 = getelementptr inbounds %struct.perf_event, ptr %25, i32 0, i32 57
  %27 = load ptr, ptr %26, align 4
  %28 = tail call i32 @__task_pid_nr_ns(ptr noundef %21, i32 noundef 1, ptr noundef %27) #27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %18
  %31 = getelementptr inbounds %struct.task_struct, ptr %21, i32 0, i32 62
  %32 = load ptr, ptr %31, align 64
  %33 = icmp eq ptr %32, null
  %34 = sext i1 %33 to i32
  br label %35

35:                                               ; preds = %30, %18
  %36 = phi i32 [ %28, %18 ], [ %34, %30 ]
  %37 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2, i32 1
  store i32 %36, ptr %37, align 4
  %38 = load ptr, ptr %20, align 4
  %39 = load ptr, ptr %22, align 4
  %40 = icmp eq ptr %39, null
  %41 = select i1 %40, ptr %0, ptr %39
  %42 = getelementptr inbounds %struct.perf_event, ptr %41, i32 0, i32 57
  %43 = load ptr, ptr %42, align 4
  %44 = tail call i32 @__task_pid_nr_ns(ptr noundef %38, i32 noundef 0, ptr noundef %43) #27
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.task_struct, ptr %38, i32 0, i32 62
  %48 = load ptr, ptr %47, align 64
  %49 = icmp eq ptr %48, null
  %50 = sext i1 %49 to i32
  br label %51

51:                                               ; preds = %46, %35
  %52 = phi i32 [ %44, %35 ], [ %50, %46 ]
  %53 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2, i32 2
  store i32 %52, ptr %53, align 4
  br label %54

54:                                               ; preds = %51, %16
  %55 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2
  %56 = load i64, ptr %5, align 8
  %57 = and i64 %56, 262144
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %54
  call fastcc void @__perf_event_header__init_id(ptr noundef %55, ptr noundef nonnull %4, ptr noundef %0) #27
  br label %60

60:                                               ; preds = %59, %54
  %61 = getelementptr inbounds %struct.perf_switch_event, ptr %1, i32 0, i32 2, i32 0, i32 2
  %62 = load i16, ptr %61, align 2
  %63 = zext i16 %62 to i32
  %64 = call i32 @perf_output_begin(ptr noundef nonnull %3, ptr noundef nonnull %4, ptr noundef %0, i32 noundef %63) #27
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

66:                                               ; preds = %60
  %67 = load ptr, ptr %10, align 8
  %68 = getelementptr inbounds %struct.perf_event_context, ptr %67, i32 0, i32 18
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  %71 = select i1 %70, i32 16, i32 8
  %72 = call i32 @perf_output_copy(ptr noundef nonnull %3, ptr noundef %55, i32 noundef %71) #27
  call void @perf_event__output_id_sample(ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %4)
  call void @perf_output_end(ptr noundef nonnull %3) #27
  br label %73

73:                                               ; preds = %66, %60, %2
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %4) #27
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filter_match_preds(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_tp_event_init(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %3 = load i32, ptr %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %7 = load i64, ptr %6, align 8
  %8 = and i64 %7, 2048
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = tail call i32 @perf_trace_init(ptr noundef %0) #27
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 55
  store ptr @tp_perf_event_destroy, ptr %14, align 8
  br label %15

15:                                               ; preds = %13, %10, %5, %1
  %16 = phi i32 [ 0, %13 ], [ -2, %1 ], [ -95, %5 ], [ %11, %10 ]
  ret i32 %16
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_trace_add(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_del(ptr noundef, i32 noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal void @perf_swevent_start(ptr nocapture noundef writeonly %0, i32 noundef %1) #25 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 4
  store i32 0, ptr %3, align 4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync)
define internal void @perf_swevent_stop(ptr nocapture noundef writeonly %0, i32 noundef %1) #25 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 4
  store i32 1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal void @perf_swevent_read(ptr nocapture noundef %0) #14 {
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_trace_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @tp_perf_event_destroy(ptr noundef %0) #0 {
  tail call void @perf_trace_destroy(ptr noundef %0) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_uprobe_event_init(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %3 = load i32, ptr %2, align 8
  %4 = load i32, ptr getelementptr inbounds (%struct.pmu, ptr @perf_uprobe, i32 0, i32 6), align 4
  %5 = icmp eq i32 %3, %4
  br i1 %5, label %6, label %26

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %7, label %10, label %8

8:                                                ; preds = %6
  %9 = tail call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %9, label %10, label %26

10:                                               ; preds = %8, %6
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %12 = load i64, ptr %11, align 8
  %13 = and i64 %12, 2048
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %26

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %17 = load i64, ptr %16, align 8
  %18 = and i64 %17, 1
  %19 = icmp ne i64 %18, 0
  %20 = lshr i64 %17, 32
  %21 = trunc i64 %20 to i32
  %22 = tail call i32 @perf_uprobe_init(ptr noundef %0, i32 noundef %21, i1 noundef zeroext %19) #27
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 55
  store ptr @perf_uprobe_destroy, ptr %25, align 8
  br label %26

26:                                               ; preds = %24, %15, %10, %8, %1
  %27 = phi i32 [ 0, %24 ], [ -2, %1 ], [ -13, %8 ], [ -95, %10 ], [ %22, %15 ]
  ret i32 %27
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @retprobe_show(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #26 {
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(10) %2, ptr noundef nonnull align 1 dereferenceable(10) @.str.39, i32 10, i1 false)
  ret i32 9
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal i32 @ref_ctr_offset_show(ptr nocapture noundef readnone %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #26 {
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(14) %2, ptr noundef nonnull align 1 dereferenceable(14) @.str.41, i32 14, i1 false)
  ret i32 13
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_uprobe_init(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_uprobe_destroy(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_initialize(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_name(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @pmu_dev_release(ptr noundef %0) #0 {
  tail call void @kfree(ptr noundef %0) #27
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_create_file(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_update_groups(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @type_show(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #11 {
  %4 = getelementptr inbounds %struct.device, ptr %0, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.pmu, ptr %5, i32 0, i32 6
  %7 = load i32, ptr %6, align 4
  %8 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %2, i32 noundef 4095, ptr noundef nonnull @.str.42, i32 noundef %7)
  ret i32 %8
}

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_event_mux_interval_ms_show(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr nocapture noundef writeonly %2) #11 {
  %4 = getelementptr inbounds %struct.device, ptr %0, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.pmu, ptr %5, i32 0, i32 12
  %7 = load i32, ptr %6, align 4
  %8 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %2, i32 noundef 4095, ptr noundef nonnull @.str.42, i32 noundef %7)
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_event_mux_interval_ms_store(ptr nocapture noundef readonly %0, ptr nocapture noundef readnone %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.remote_function_call, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.device, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #27
  store i32 0, ptr %6, align 4, !annotation !48
  %9 = call i32 @kstrtoint(ptr noundef %2, i32 noundef 0, ptr noundef nonnull %6) #27
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %45

11:                                               ; preds = %4
  %12 = load i32, ptr %6, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %45, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.pmu, ptr %8, i32 0, i32 12
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %12, %16
  br i1 %17, label %45, label %18

18:                                               ; preds = %14
  call void @mutex_lock(ptr noundef nonnull @mux_interval_mutex) #27
  %19 = load i32, ptr %6, align 4
  store i32 %19, ptr %15, align 4
  call void @cpus_read_lock() #27
  %20 = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #32
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %44

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.pmu, ptr %8, i32 0, i32 9
  %25 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 1
  %26 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 2
  %27 = getelementptr inbounds %struct.remote_function_call, ptr %5, i32 0, i32 3
  br label %28

28:                                               ; preds = %28, %23
  %29 = phi i32 [ %20, %23 ], [ %41, %28 ]
  %30 = load ptr, ptr %24, align 4
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %29
  %33 = load i32, ptr %32, align 4
  %34 = add i32 %33, %31
  %35 = inttoptr i32 %34 to ptr
  %36 = load i32, ptr %6, align 4
  %37 = mul i32 %36, 1000000
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.perf_cpu_context, ptr %35, i32 0, i32 6
  store i64 %38, ptr %39, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #27
  store i32 0, ptr %5, align 4
  store ptr @perf_mux_hrtimer_restart, ptr %25, align 4
  store ptr %35, ptr %26, align 4
  store i32 -6, ptr %27, align 4
  %40 = call i32 @smp_call_function_single(i32 noundef %29, ptr noundef nonnull @remote_function, ptr noundef nonnull %5, i32 noundef 1) #27
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #27
  %41 = call i32 @cpumask_next(i32 noundef %29, ptr noundef nonnull @__cpu_online_mask) #32
  %42 = load i32, ptr @nr_cpu_ids, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %28, label %44

44:                                               ; preds = %28, %18
  call void @cpus_read_unlock() #27
  call void @mutex_unlock(ptr noundef nonnull @mux_interval_mutex) #27
  br label %45

45:                                               ; preds = %44, %14, %11, %4
  %46 = phi i32 [ %3, %44 ], [ %9, %4 ], [ -22, %11 ], [ %3, %14 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #27
  ret i32 %46
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoint(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_lock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cpus_read_unlock() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_mux_hrtimer_handler(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -216
  %3 = getelementptr i8, ptr %0, i32 -92
  %4 = load i32, ptr %3, align 4
  %5 = getelementptr i8, ptr %0, i32 -16
  %6 = load ptr, ptr %5, align 8
  %7 = icmp ne ptr %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %6, i32 0, i32 16
  %10 = load i32, ptr %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %8, %1
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  %14 = icmp ne i32 %4, 0
  %15 = select i1 %14, i1 true, i1 %13
  br i1 %15, label %16, label %124

16:                                               ; preds = %12
  %17 = getelementptr i8, ptr %0, i32 -212
  tail call void @_raw_spin_lock(ptr noundef %17) #27
  %18 = icmp eq ptr %6, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %6, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %20) #27
  br label %21

21:                                               ; preds = %19, %16
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 8
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #19, !srcloc !11
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = load i32, ptr %30, align 4
  %32 = add i32 %31, 1
  store i32 %32, ptr %30, align 4
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.pmu, ptr %22, i32 0, i32 15
  %36 = load ptr, ptr %35, align 4
  tail call void %36(ptr noundef %22) #27
  br label %37

37:                                               ; preds = %34, %21
  br i1 %13, label %38, label %54

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.perf_event_context, ptr %6, i32 0, i32 8
  %40 = load volatile ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, %39
  %42 = getelementptr i8, ptr %40, i32 -16
  %43 = icmp eq ptr %42, null
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.perf_event_context, ptr %6, i32 0, i32 5
  %47 = tail call ptr @rb_first(ptr noundef %46) #27
  %48 = icmp eq ptr %47, null
  %49 = getelementptr i8, ptr %47, i32 -24
  %50 = select i1 %48, ptr null, ptr %49
  br label %51

51:                                               ; preds = %45, %38
  %52 = phi ptr [ %42, %38 ], [ %50, %45 ]
  %53 = getelementptr inbounds %struct.perf_event_context, ptr %6, i32 0, i32 16
  store i32 0, ptr %53, align 4
  br label %54

54:                                               ; preds = %51, %37
  %55 = phi ptr [ %52, %51 ], [ null, %37 ]
  br i1 %14, label %56, label %71

56:                                               ; preds = %54
  %57 = getelementptr i8, ptr %0, i32 -128
  %58 = load volatile ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, %57
  %60 = getelementptr i8, ptr %58, i32 -16
  %61 = icmp eq ptr %60, null
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = getelementptr i8, ptr %0, i32 -160
  %65 = tail call ptr @rb_first(ptr noundef %64) #27
  %66 = icmp eq ptr %65, null
  %67 = getelementptr i8, ptr %65, i32 -24
  %68 = select i1 %66, ptr null, ptr %67
  br label %69

69:                                               ; preds = %63, %56
  %70 = phi ptr [ %60, %56 ], [ %68, %63 ]
  store i32 0, ptr %3, align 4
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi ptr [ %70, %69 ], [ null, %54 ]
  %73 = icmp eq ptr %55, null
  %74 = xor i1 %73, true
  %75 = icmp ne ptr %72, null
  %76 = select i1 %7, i1 %75, i1 false
  %77 = select i1 %74, i1 true, i1 %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %71
  tail call fastcc void @ctx_sched_out(ptr noundef %6, ptr noundef %2, i32 noundef 1) #27
  br label %79

79:                                               ; preds = %78, %71
  %80 = icmp eq ptr %72, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %79
  tail call fastcc void @ctx_sched_out(ptr noundef %2, ptr noundef %2, i32 noundef 1) #27
  br label %82

82:                                               ; preds = %81, %79
  br i1 %73, label %84, label %83

83:                                               ; preds = %82
  tail call fastcc void @rotate_ctx(ptr noundef %6, ptr noundef nonnull %55) #27
  br label %84

84:                                               ; preds = %83, %82
  br i1 %80, label %86, label %85

85:                                               ; preds = %84
  tail call fastcc void @rotate_ctx(ptr noundef %2, ptr noundef nonnull %72) #27
  br label %86

86:                                               ; preds = %85, %84
  tail call fastcc void @ctx_sched_in(ptr noundef %2, ptr noundef %2, i32 noundef 2) #27
  br i1 %18, label %88, label %87

87:                                               ; preds = %86
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %6, ptr noundef %2, i32 noundef 2) #27
  tail call fastcc void @ctx_sched_in(ptr noundef %2, ptr noundef %2, i32 noundef 1) #27
  tail call fastcc void @ctx_sched_in(ptr noundef nonnull %6, ptr noundef %2, i32 noundef 1) #27
  br label %89

88:                                               ; preds = %86
  tail call fastcc void @ctx_sched_in(ptr noundef %2, ptr noundef %2, i32 noundef 1) #27
  br label %89

89:                                               ; preds = %88, %87
  %90 = load ptr, ptr %2, align 8
  %91 = getelementptr inbounds %struct.pmu, ptr %90, i32 0, i32 8
  %92 = load ptr, ptr %91, align 4
  %93 = ptrtoint ptr %92 to i32
  %94 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %95 = inttoptr i32 %94 to ptr
  %96 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %95) #19, !srcloc !11
  %97 = add i32 %96, %93
  %98 = inttoptr i32 %97 to ptr
  %99 = load i32, ptr %98, align 4
  %100 = add i32 %99, -1
  store i32 %100, ptr %98, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %89
  %103 = getelementptr inbounds %struct.pmu, ptr %90, i32 0, i32 14
  %104 = load ptr, ptr %103, align 4
  tail call void %104(ptr noundef %90) #27
  br label %105

105:                                              ; preds = %102, %89
  %106 = load ptr, ptr %5, align 8
  %107 = icmp eq ptr %106, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.perf_event_context, ptr %106, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %110 = load i16, ptr %109, align 4
  %111 = add i16 %110, 1
  store i16 %111, ptr %109, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %112

112:                                              ; preds = %108, %105
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %113 = load i16, ptr %17, align 4
  %114 = add i16 %113, 1
  store i16 %114, ptr %17, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  %115 = getelementptr i8, ptr %0, i32 -4
  tail call void @_raw_spin_lock(ptr noundef %115) #27
  %116 = getelementptr i8, ptr %0, i32 48
  %117 = load i64, ptr %116, align 8
  %118 = getelementptr inbounds %struct.hrtimer, ptr %0, i32 0, i32 3
  %119 = load ptr, ptr %118, align 4
  %120 = getelementptr inbounds %struct.hrtimer_clock_base, ptr %119, i32 0, i32 6
  %121 = load ptr, ptr %120, align 4
  %122 = tail call i64 %121() #27
  %123 = tail call i64 @hrtimer_forward(ptr noundef %0, i64 noundef %122, i64 noundef %117) #27
  br label %127

124:                                              ; preds = %12
  %125 = getelementptr i8, ptr %0, i32 -4
  tail call void @_raw_spin_lock(ptr noundef %125) #27
  %126 = getelementptr i8, ptr %0, i32 56
  store i32 0, ptr %126, align 8
  br label %127

127:                                              ; preds = %124, %112
  %128 = phi ptr [ %125, %124 ], [ %115, %112 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %129 = load i16, ptr %128, align 4
  %130 = add i16 %129, 1
  store i16 %130, ptr %128, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  %131 = zext i1 %15 to i32
  ret i32 %131
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @rotate_ctx(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 15
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %58

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 5
  %8 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 3
  %9 = load i32, ptr %8, align 8
  %10 = ptrtoint ptr %8 to i32
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = load volatile ptr, ptr %7, align 8
  %14 = icmp eq ptr %13, null
  br label %15

15:                                               ; preds = %12, %6
  %16 = phi i1 [ true, %6 ], [ %14, %12 ]
  %17 = load i1, ptr @perf_event_groups_delete.__already_done, align 1
  %18 = xor i1 %17, true
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %21, !prof !12

20:                                               ; preds = %15
  store i1 true, ptr @perf_event_groups_delete.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1786, i32 noundef 9, ptr noundef null) #27
  br label %21

21:                                               ; preds = %20, %15
  tail call void @rb_erase(ptr noundef %8, ptr noundef %7) #27
  store i32 %10, ptr %8, align 8
  %22 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 4
  store i64 0, ptr %22, align 8
  %23 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 5, i32 1
  %24 = load i64, ptr %23, align 8
  %25 = add i64 %24, 1
  store i64 %25, ptr %23, align 8
  store i64 %25, ptr %22, align 8
  %26 = load ptr, ptr %7, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %53, label %28

28:                                               ; preds = %21
  %29 = getelementptr %struct.perf_event, ptr %1, i32 0, i32 34
  %30 = load i32, ptr %29, align 4
  br label %31

31:                                               ; preds = %47, %28
  %32 = phi ptr [ %26, %28 ], [ %49, %47 ]
  %33 = getelementptr i8, ptr %32, i32 484
  %34 = load i32, ptr %33, align 4
  %35 = icmp sgt i32 %34, %30
  br i1 %35, label %45, label %36

36:                                               ; preds = %31
  %37 = icmp slt i32 %34, %30
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = getelementptr inbounds %struct.rb_node, ptr %32, i32 0, i32 1
  br label %47

40:                                               ; preds = %36
  %41 = getelementptr i8, ptr %32, i32 16
  %42 = load i64, ptr %41, align 8
  %43 = icmp ugt i64 %42, %25
  %44 = getelementptr inbounds %struct.rb_node, ptr %32, i32 0, i32 1
  br i1 %43, label %45, label %47

45:                                               ; preds = %40, %31
  %46 = getelementptr inbounds %struct.rb_node, ptr %32, i32 0, i32 2
  br label %47

47:                                               ; preds = %45, %40, %38
  %48 = phi ptr [ %46, %45 ], [ %44, %40 ], [ %39, %38 ]
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %31

51:                                               ; preds = %47
  %52 = ptrtoint ptr %32 to i32
  br label %53

53:                                               ; preds = %51, %21
  %54 = phi ptr [ %48, %51 ], [ %7, %21 ]
  %55 = phi i32 [ %52, %51 ], [ 0, %21 ]
  store i32 %55, ptr %8, align 4
  %56 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 3, i32 1
  store ptr null, ptr %56, align 4
  %57 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 3, i32 2
  store ptr null, ptr %57, align 4
  store ptr %8, ptr %54, align 4
  tail call void @rb_insert_color(ptr noundef %8, ptr noundef %7) #27
  br label %58

58:                                               ; preds = %53, %2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_first(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_copy_attr(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  tail call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(128) %1, i8 0, i32 128, i1 false)
  %3 = getelementptr inbounds %struct.perf_event_attr, ptr %0, i32 0, i32 1
  %4 = tail call ptr @llvm.thread.pointer() #27
  %5 = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %6 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %5) #19, !srcloc !50
  %7 = and i32 %6, -13
  %8 = or i32 %7, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %8) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %9 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %3, i32 -1090519041) #27, !srcloc !102
  %10 = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %157

12:                                               ; preds = %2
  %13 = extractvalue { i32, i32 } %9, 1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 64, i32 %13
  %16 = add i32 %15, -4097
  %17 = icmp ult i32 %16, -4033
  br i1 %17, label %152, label %18

18:                                               ; preds = %12
  %19 = tail call i32 @llvm.umin.i32(i32 %15, i32 128) #27
  %20 = icmp ult i32 %15, 128
  %21 = tail call i32 @llvm.umax.i32(i32 %15, i32 128) #27
  %22 = sub nuw nsw i32 %21, %19
  br i1 %20, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr i8, ptr %1, i32 %19
  tail call void @llvm.memset.p0.i32(ptr align 1 %24, i8 0, i32 %22, i1 false) #27
  br label %31

25:                                               ; preds = %18
  %26 = icmp eq i32 %15, 128
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr i8, ptr %0, i32 %19
  %29 = tail call i32 @check_zeroed_user(ptr noundef %28, i32 noundef %22) #27
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %45, label %31

31:                                               ; preds = %27, %25, %23
  %32 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %19, i32 -1090519040) #28, !srcloc !103
  %33 = extractvalue { i32, i32 } %32, 0
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %41, !prof !23

35:                                               ; preds = %31
  %36 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %5) #19, !srcloc !50
  %37 = and i32 %36, -13
  %38 = or i32 %37, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %38) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %39 = tail call i32 @arm_copy_from_user(ptr noundef %1, ptr noundef %0, i32 noundef %19) #27
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %36) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %49, label %41, !prof !23

41:                                               ; preds = %35, %31
  %42 = phi i32 [ %39, %35 ], [ %19, %31 ]
  %43 = sub i32 %19, %42
  %44 = getelementptr i8, ptr %1, i32 %43
  tail call void @llvm.memset.p0.i32(ptr align 1 %44, i8 0, i32 %42, i1 false) #27
  br label %157

45:                                               ; preds = %27
  %46 = icmp eq i32 %29, 0
  %47 = select i1 %46, i32 -7, i32 %29
  %48 = icmp eq i32 %47, -7
  br i1 %48, label %152, label %157

49:                                               ; preds = %35
  %50 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 1
  store i32 %15, ptr %50, align 4
  %51 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 6
  %52 = load i64, ptr %51, align 8
  %53 = icmp ult i64 %52, 274877906944
  br i1 %53, label %54, label %157

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 18
  %56 = load i16, ptr %55, align 2
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %157

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 20
  %60 = load i32, ptr %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %157

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 4
  %64 = load i64, ptr %63, align 8
  %65 = icmp ult i64 %64, 33554432
  br i1 %65, label %66, label %157

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 5
  %68 = load i64, ptr %67, align 8
  %69 = icmp ult i64 %68, 16
  br i1 %69, label %70, label %157

70:                                               ; preds = %66
  %71 = and i64 %64, 2048
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %95, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 11
  %75 = load i64, ptr %74, align 8
  %76 = add i64 %75, -262144
  %77 = icmp ult i64 %76, -262136
  br i1 %77, label %157, label %78

78:                                               ; preds = %73
  %79 = and i64 %75, 7
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %78
  %82 = lshr i64 %52, 4
  %83 = and i64 %82, 7
  %84 = xor i64 %83, 7
  %85 = or i64 %84, %75
  store i64 %85, ptr %74, align 8
  br label %86

86:                                               ; preds = %81, %78
  %87 = phi i64 [ %75, %78 ], [ %85, %81 ]
  %88 = and i64 %87, 6
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %95, label %90

90:                                               ; preds = %86
  %91 = tail call fastcc i32 @perf_allow_kernel()
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %157

93:                                               ; preds = %90
  %94 = load i64, ptr %63, align 8
  br label %95

95:                                               ; preds = %93, %86, %70
  %96 = phi i64 [ %94, %93 ], [ %64, %86 ], [ %64, %70 ]
  %97 = and i64 %96, 4096
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 12
  %101 = load i64, ptr %100, align 8
  %102 = tail call i32 @perf_reg_validate(i64 noundef %101) #27
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %157

104:                                              ; preds = %99
  %105 = load i64, ptr %63, align 8
  br label %106

106:                                              ; preds = %104, %95
  %107 = phi i64 [ %105, %104 ], [ %96, %95 ]
  %108 = and i64 %107, 8192
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 13
  %112 = load i32, ptr %111, align 8
  %113 = icmp ult i32 %112, 65535
  %114 = and i32 %112, 7
  %115 = icmp eq i32 %114, 0
  %116 = and i1 %113, %115
  br i1 %116, label %117, label %157

117:                                              ; preds = %110, %106
  %118 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 17
  %119 = load i16, ptr %118, align 4
  %120 = icmp eq i16 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = load i32, ptr @sysctl_perf_event_max_stack, align 4
  %123 = trunc i32 %122 to i16
  store i16 %123, ptr %118, align 4
  br label %124

124:                                              ; preds = %121, %117
  %125 = and i64 %107, 262144
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %struct.perf_event_attr, ptr %1, i32 0, i32 15
  %129 = load i64, ptr %128, align 8
  %130 = tail call i32 @perf_reg_validate(i64 noundef %129) #27
  %131 = load i64, ptr %63, align 8
  br label %132

132:                                              ; preds = %127, %124
  %133 = phi i64 [ %131, %127 ], [ %107, %124 ]
  %134 = phi i32 [ %130, %127 ], [ 0, %124 ]
  %135 = and i64 %133, 2097152
  %136 = icmp ne i64 %135, 0
  %137 = and i64 %133, 16793600
  %138 = icmp eq i64 %137, 16793600
  %139 = or i1 %136, %138
  br i1 %139, label %157, label %140

140:                                              ; preds = %132
  %141 = load i64, ptr %51, align 8
  %142 = and i64 %141, 34359738370
  %143 = icmp eq i64 %142, 34359738368
  %144 = and i64 %141, 68719480832
  %145 = icmp eq i64 %144, 68719480832
  %146 = or i1 %143, %145
  %147 = and i64 %141, 206158430208
  %148 = icmp eq i64 %147, 137438953472
  %149 = select i1 %146, i1 true, i1 %148
  br i1 %149, label %157, label %150

150:                                              ; preds = %152, %140
  %151 = phi i32 [ -7, %152 ], [ %134, %140 ]
  br label %157

152:                                              ; preds = %45, %12
  %153 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %5) #19, !srcloc !50
  %154 = and i32 %153, -13
  %155 = or i32 %154, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %155) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %156 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %3, i32 128, i32 -1090519041) #27, !srcloc !104
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %153) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  br label %150

157:                                              ; preds = %150, %140, %132, %110, %99, %90, %73, %66, %62, %58, %54, %49, %45, %41, %2
  %158 = phi i32 [ %151, %150 ], [ %10, %2 ], [ %47, %45 ], [ -22, %58 ], [ -22, %54 ], [ -22, %49 ], [ -22, %62 ], [ -22, %66 ], [ %102, %99 ], [ -22, %110 ], [ -22, %132 ], [ -22, %140 ], [ -14, %41 ], [ %91, %90 ], [ -22, %73 ]
  ret i32 %158
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_allow_kernel() unnamed_addr #5 {
  %1 = load i32, ptr @sysctl_perf_event_paranoid, align 4
  %2 = icmp sgt i32 %1, 1
  br i1 %2, label %3, label %7

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @capable(i32 noundef 38) #27
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @capable(i32 noundef 21) #27
  br i1 %6, label %7, label %8

7:                                                ; preds = %5, %3, %0
  br label %8

8:                                                ; preds = %7, %5
  %9 = phi i32 [ 0, %7 ], [ -13, %5 ]
  ret i32 %9
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_unused_fd_flags(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_event_set_output(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = icmp eq ptr %0, %1
  br i1 %5, label %93, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 34
  %8 = load i32, ptr %7, align 4
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %93

12:                                               ; preds = %6
  %13 = icmp eq i32 %8, -1
  br i1 %13, label %14, label %20

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 26
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %18 = load ptr, ptr %17, align 8
  %19 = icmp eq ptr %16, %18
  br i1 %19, label %20, label %93

20:                                               ; preds = %14, %12
  %21 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 59
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 59
  %24 = load ptr, ptr %23, align 8
  %25 = icmp eq ptr %22, %24
  br i1 %25, label %26, label %93

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 21, i32 6
  %28 = load i64, ptr %27, align 8
  %29 = and i64 %28, 134217728
  %30 = icmp ne i64 %29, 0
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, 134217728
  %34 = icmp ne i64 %33, 0
  %35 = xor i1 %30, %34
  br i1 %35, label %93, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.pmu, ptr %38, i32 0, i32 31
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 12
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr inbounds %struct.pmu, ptr %44, i32 0, i32 31
  %46 = load ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, null
  %48 = icmp eq ptr %38, %44
  %49 = select i1 %47, i1 true, i1 %48
  br i1 %49, label %50, label %93

50:                                               ; preds = %42, %36, %2
  %51 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %51) #27
  %52 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 38
  %53 = load volatile i32, ptr %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %91

55:                                               ; preds = %50
  br i1 %3, label %89, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 32
  %58 = load ptr, ptr %57, align 4
  %59 = icmp eq ptr %58, null
  %60 = select i1 %59, ptr %1, ptr %58
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %61 = getelementptr inbounds %struct.perf_event, ptr %60, i32 0, i32 39
  %62 = load volatile ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, null
  br i1 %63, label %87, label %64

64:                                               ; preds = %56
  %65 = load volatile i32, ptr %62, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %77, %64
  %68 = phi i32 [ %75, %77 ], [ %65, %64 ]
  %69 = add i32 %68, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %62) #27, !srcloc !19
  br label %70

70:                                               ; preds = %70, %67
  %71 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) %62, ptr nonnull %62, i32 %68, i32 %69, ptr nonnull elementtype(i32) %62) #27, !srcloc !37
  %72 = extractvalue { i32, i32 } %71, 0
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %70

74:                                               ; preds = %70
  %75 = extractvalue { i32, i32 } %71, 1
  %76 = icmp eq i32 %75, %68
  br i1 %76, label %79, label %77, !prof !23

77:                                               ; preds = %74
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %67

79:                                               ; preds = %77, %74, %64
  %80 = phi i32 [ 0, %64 ], [ %68, %74 ], [ 0, %77 ]
  %81 = add i32 %80, 1
  %82 = or i32 %81, %80
  %83 = icmp sgt i32 %82, -1
  br i1 %83, label %85, label %84, !prof !23

84:                                               ; preds = %79
  tail call void @refcount_warn_saturate(ptr noundef nonnull %62, i32 noundef 0) #27
  br label %85

85:                                               ; preds = %84, %79
  %86 = icmp eq i32 %80, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %85, %56
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %91

88:                                               ; preds = %85
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %89

89:                                               ; preds = %88, %55
  %90 = phi ptr [ %62, %88 ], [ null, %55 ]
  tail call fastcc void @ring_buffer_attach(ptr noundef %0, ptr noundef %90)
  br label %91

91:                                               ; preds = %89, %87, %50
  %92 = phi i32 [ -22, %50 ], [ 0, %89 ], [ -22, %87 ]
  tail call void @mutex_unlock(ptr noundef %51) #27
  br label %93

93:                                               ; preds = %91, %42, %26, %20, %14, %6, %4
  %94 = phi i32 [ -22, %4 ], [ -22, %6 ], [ -22, %14 ], [ -22, %20 ], [ -22, %26 ], [ %92, %91 ], [ -22, %42 ]
  ret i32 %94
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @anon_inode_getfile(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_interruptible(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fd_install(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_unused_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_reg_validate(i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @check_zeroed_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_task_by_vpid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_raw_fast_ns() #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i64 @ktime_get_real_ns() #5 {
  %1 = tail call i64 @ktime_get_with_offset(i32 noundef 0) #27
  ret i64 %1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i64 @ktime_get_boottime_ns() #5 {
  %1 = tail call i64 @ktime_get_with_offset(i32 noundef 1) #27
  ret i64 %1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i64 @ktime_get_clocktai_ns() #5 {
  %1 = tail call i64 @ktime_get_with_offset(i32 noundef 2) #27
  ret i64 %1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ns_capable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @ptrace_may_access(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_pending_event(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -600
  %3 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %4 = inttoptr i32 %3 to ptr
  %5 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %4) #19, !srcloc !11
  %6 = add i32 %5, ptrtoint (ptr @swevent_htable to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.swevent_htable, ptr %7, i32 0, i32 3
  %9 = tail call ptr @llvm.thread.pointer() #27
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %11, 15728640
  %13 = icmp ne i32 %12, 0
  %14 = and i32 %11, 16711680
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i32
  %17 = zext i1 %13 to i32
  %18 = add nuw nsw i32 %17, %16
  %19 = and i32 %11, 16711936
  %20 = icmp ne i32 %19, 0
  %21 = zext i1 %20 to i32
  %22 = add nuw nsw i32 %18, %21
  %23 = getelementptr i32, ptr %8, i32 %22
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %1
  store i32 1, ptr %23, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !69
  br label %27

27:                                               ; preds = %26, %1
  %28 = phi i32 [ %22, %26 ], [ -1, %1 ]
  %29 = getelementptr i8, ptr %0, i32 -8
  %30 = load volatile i32, ptr %29, align 8
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %34 = load i32, ptr %33, align 8
  %35 = icmp eq i32 %30, %34
  br i1 %35, label %36, label %69

36:                                               ; preds = %32
  store volatile i32 -1, ptr %29, align 8
  %37 = getelementptr i8, ptr %0, i32 -416
  %38 = load i64, ptr %37, align 8
  %39 = and i64 %38, 137438953472
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = getelementptr i8, ptr %0, i32 -152
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.perf_event_context, ptr %43, i32 0, i32 18
  %45 = load ptr, ptr %44, align 4
  %46 = icmp ne ptr %45, %9
  %47 = load i1, ptr @perf_sigtrap.__already_done, align 1
  %48 = xor i1 %47, true
  %49 = select i1 %46, i1 %48, i1 false
  br i1 %49, label %50, label %51, !prof !12

50:                                               ; preds = %41
  store i1 true, ptr @perf_sigtrap.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6527, i32 noundef 9, ptr noundef null) #27
  br label %51

51:                                               ; preds = %50, %41
  br i1 %46, label %66, label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 4
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %66

57:                                               ; preds = %52
  %58 = getelementptr i8, ptr %0, i32 -4
  %59 = load i32, ptr %58, align 4
  %60 = inttoptr i32 %59 to ptr
  %61 = getelementptr i8, ptr %0, i32 -456
  %62 = load i32, ptr %61, align 8
  %63 = getelementptr i8, ptr %0, i32 -336
  %64 = load i64, ptr %63, align 8
  %65 = tail call i32 @force_sig_perf(ptr noundef %60, i32 noundef %62, i64 noundef %64) #27
  br label %66

66:                                               ; preds = %57, %52, %51
  %67 = getelementptr i8, ptr %0, i32 16
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !105
  store volatile i32 1, ptr %67, align 4
  br label %71

68:                                               ; preds = %36
  tail call void @perf_event_disable_local(ptr noundef %2) #27
  br label %71

69:                                               ; preds = %32
  %70 = tail call zeroext i1 @irq_work_queue_on(ptr noundef %0, i32 noundef %30) #27
  br label %71

71:                                               ; preds = %69, %68, %66, %27
  %72 = getelementptr i8, ptr %0, i32 -16
  %73 = load i32, ptr %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %101, label %75

75:                                               ; preds = %71
  store i32 0, ptr %72, align 8
  %76 = getelementptr i8, ptr %0, i32 -100
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  %79 = select i1 %78, ptr %2, ptr %77
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %80 = getelementptr inbounds %struct.perf_event, ptr %79, i32 0, i32 39
  %81 = load volatile ptr, ptr %80, align 4
  %82 = icmp eq ptr %81, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %struct.perf_buffer, ptr %81, i32 0, i32 16
  %85 = load volatile ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, %84
  br i1 %86, label %92, label %87

87:                                               ; preds = %87, %83
  %88 = phi ptr [ %90, %87 ], [ %85, %83 ]
  %89 = getelementptr i8, ptr %88, i32 16
  tail call void @__wake_up(ptr noundef %89, i32 noundef 3, i32 noundef 0, ptr noundef null) #27
  %90 = load volatile ptr, ptr %88, align 4
  %91 = icmp eq ptr %90, %84
  br i1 %91, label %92, label %87

92:                                               ; preds = %87, %83, %75
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %93 = getelementptr i8, ptr %0, i32 -12
  %94 = load i32, ptr %93, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  %97 = load ptr, ptr %76, align 4
  %98 = icmp eq ptr %97, null
  %99 = select i1 %98, ptr %2, ptr %97
  %100 = getelementptr inbounds %struct.perf_event, ptr %99, i32 0, i32 44
  tail call void @kill_fasync(ptr noundef %100, i32 noundef 29, i32 noundef %94) #27
  store i32 0, ptr %93, align 4
  br label %101

101:                                              ; preds = %96, %92, %71
  %102 = icmp sgt i32 %28, -1
  br i1 %102, label %103, label %113

103:                                              ; preds = %101
  %104 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %105 = inttoptr i32 %104 to ptr
  %106 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %105) #19, !srcloc !11
  %107 = add i32 %106, ptrtoint (ptr @swevent_htable to i32)
  %108 = inttoptr i32 %107 to ptr
  %109 = getelementptr inbounds %struct.swevent_htable, ptr %108, i32 0, i32 3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !70
  %110 = getelementptr i32, ptr %109, i32 %28
  %111 = load i32, ptr %110, align 4
  %112 = add i32 %111, -1
  store i32 %112, ptr %110, align 4
  br label %113

113:                                              ; preds = %103, %101
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @task_active_pid_ns(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @exclusive_event_init(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 12
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %39, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %struct.pmu, ptr %3, i32 0, i32 10
  %14 = load volatile i32, ptr %13, align 4
  br i1 %12, label %27, label %15

15:                                               ; preds = %24, %8
  %16 = phi i32 [ %25, %24 ], [ %14, %8 ]
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %39, label %18, !prof !12

18:                                               ; preds = %15
  %19 = add nuw i32 %16, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !19
  br label %20

20:                                               ; preds = %20, %18
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %16, i32 %19, ptr elementtype(i32) %13) #27, !srcloc !37
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %26 = icmp eq i32 %25, %16
  br i1 %26, label %39, label %15, !prof !23

27:                                               ; preds = %36, %8
  %28 = phi i32 [ %37, %36 ], [ %14, %8 ]
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %39, label %30, !prof !12

30:                                               ; preds = %27
  %31 = add i32 %28, -1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #27, !srcloc !19
  br label %32

32:                                               ; preds = %32, %30
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 %28, i32 %31, ptr elementtype(i32) %13) #27, !srcloc !37
  %34 = extractvalue { i32, i32 } %33, 0
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %32

36:                                               ; preds = %32
  %37 = extractvalue { i32, i32 } %33, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %38 = icmp eq i32 %37, %28
  br i1 %38, label %39, label %27, !prof !23

39:                                               ; preds = %36, %27, %24, %15, %1
  %40 = phi i32 [ 0, %1 ], [ -16, %27 ], [ 0, %36 ], [ -16, %15 ], [ 0, %24 ]
  ret i32 %40
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_callchain_buffers(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @account_event(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %144

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 36
  %9 = icmp ne i32 %8, 0
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %11 = load i64, ptr %10, align 8
  %12 = and i64 %11, 131328
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %5
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_mmap_events) #27, !srcloc !19
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_mmap_events, ptr nonnull @nr_mmap_events, i32 1, ptr nonnull elementtype(i32) @nr_mmap_events) #27, !srcloc !20
  %16 = load i64, ptr %10, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi i64 [ %11, %5 ], [ %16, %14 ]
  %19 = and i64 %18, 17179869184
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_build_id_events) #27, !srcloc !19
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_build_id_events, ptr nonnull @nr_build_id_events, i32 1, ptr nonnull elementtype(i32) @nr_build_id_events) #27, !srcloc !20
  %23 = load i64, ptr %10, align 8
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi i64 [ %23, %21 ], [ %18, %17 ]
  %26 = and i64 %25, 512
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_comm_events) #27, !srcloc !19
  %29 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_comm_events, ptr nonnull @nr_comm_events, i32 1, ptr nonnull elementtype(i32) @nr_comm_events) #27, !srcloc !20
  %30 = load i64, ptr %10, align 8
  br label %31

31:                                               ; preds = %28, %24
  %32 = phi i64 [ %30, %28 ], [ %25, %24 ]
  %33 = and i64 %32, 268435456
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_namespaces_events) #27, !srcloc !19
  %36 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_namespaces_events, ptr nonnull @nr_namespaces_events, i32 1, ptr nonnull elementtype(i32) @nr_namespaces_events) #27, !srcloc !20
  %37 = load i64, ptr %10, align 8
  br label %38

38:                                               ; preds = %35, %31
  %39 = phi i64 [ %37, %35 ], [ %32, %31 ]
  %40 = and i64 %39, 4294967296
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_cgroup_events) #27, !srcloc !19
  %43 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_cgroup_events, ptr nonnull @nr_cgroup_events, i32 1, ptr nonnull elementtype(i32) @nr_cgroup_events) #27, !srcloc !20
  %44 = load i64, ptr %10, align 8
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i64 [ %44, %42 ], [ %39, %38 ]
  %47 = and i64 %46, 8192
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_task_events) #27, !srcloc !19
  %50 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_task_events, ptr nonnull @nr_task_events, i32 1, ptr nonnull elementtype(i32) @nr_task_events) #27, !srcloc !20
  %51 = load i64, ptr %10, align 8
  br label %52

52:                                               ; preds = %49, %45
  %53 = phi i64 [ %51, %49 ], [ %46, %45 ]
  %54 = and i64 %53, 1024
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %52
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_freq_events) #27, !srcloc !19
  %57 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_freq_events, ptr nonnull @nr_freq_events, i32 1, ptr nonnull elementtype(i32) @nr_freq_events) #27, !srcloc !20
  %58 = load i64, ptr %10, align 8
  br label %59

59:                                               ; preds = %56, %52
  %60 = phi i64 [ %58, %56 ], [ %53, %52 ]
  %61 = and i64 %60, 67108864
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_switch_events) #27, !srcloc !19
  %64 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_switch_events, ptr nonnull @nr_switch_events, i32 1, ptr nonnull elementtype(i32) @nr_switch_events) #27, !srcloc !20
  %65 = load i64, ptr %10, align 8
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi i64 [ %65, %63 ], [ %60, %59 ]
  %68 = phi i1 [ true, %63 ], [ %9, %59 ]
  %69 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %70 = load i64, ptr %69, align 8
  %71 = and i64 %70, 2048
  %72 = icmp ne i64 %71, 0
  %73 = select i1 %72, i1 true, i1 %68
  %74 = and i64 %67, 536870912
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %66
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_ksymbol_events) #27, !srcloc !19
  %77 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_ksymbol_events, ptr nonnull @nr_ksymbol_events, i32 1, ptr nonnull elementtype(i32) @nr_ksymbol_events) #27, !srcloc !20
  %78 = load i64, ptr %10, align 8
  br label %79

79:                                               ; preds = %76, %66
  %80 = phi i64 [ %78, %76 ], [ %67, %66 ]
  %81 = and i64 %80, 1073741824
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_bpf_events) #27, !srcloc !19
  %84 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_bpf_events, ptr nonnull @nr_bpf_events, i32 1, ptr nonnull elementtype(i32) @nr_bpf_events) #27, !srcloc !20
  %85 = load i64, ptr %10, align 8
  br label %86

86:                                               ; preds = %83, %79
  %87 = phi i64 [ %85, %83 ], [ %80, %79 ]
  %88 = and i64 %87, 8589934592
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @nr_text_poke_events) #27, !srcloc !19
  %91 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @nr_text_poke_events, ptr nonnull @nr_text_poke_events, i32 1, ptr nonnull elementtype(i32) @nr_text_poke_events) #27, !srcloc !20
  br label %92

92:                                               ; preds = %90, %86
  br i1 %73, label %93, label %119

93:                                               ; preds = %92
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @perf_sched_count) #27, !srcloc !19
  %94 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) @perf_sched_count, ptr nonnull @perf_sched_count, i32 0, i32 1, ptr nonnull elementtype(i32) @perf_sched_count) #27, !srcloc !84
  %95 = extractvalue { i32, i32, i32 } %94, 0
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  br label %119

98:                                               ; preds = %93
  tail call void @mutex_lock(ptr noundef nonnull @perf_sched_mutex) #27
  %99 = load volatile i32, ptr @perf_sched_count, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %98
  %102 = load i8, ptr @static_key_initialized, align 1, !range !97
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %105, !prof !12

104:                                              ; preds = %101
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 318, i32 noundef 9, ptr noundef nonnull @.str.26, ptr noundef nonnull @__func__.static_key_enable, ptr noundef nonnull @perf_sched_events) #27
  br label %105

105:                                              ; preds = %104, %101
  %106 = load volatile i32, ptr @perf_sched_events, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %115, label %108

108:                                              ; preds = %105
  %109 = load volatile i32, ptr @perf_sched_events, align 4
  %110 = icmp ne i32 %109, 1
  %111 = load i1, ptr @static_key_enable.__already_done, align 1
  %112 = xor i1 %111, true
  %113 = select i1 %110, i1 %112, i1 false
  br i1 %113, label %114, label %116, !prof !12

114:                                              ; preds = %108
  store i1 true, ptr @static_key_enable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 321, i32 noundef 9, ptr noundef null) #27
  br label %116

115:                                              ; preds = %105
  store volatile i32 1, ptr @perf_sched_events, align 4
  br label %116

116:                                              ; preds = %115, %114, %108
  tail call void @synchronize_rcu() #27
  br label %117

117:                                              ; preds = %116, %98
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull @perf_sched_count) #27, !srcloc !19
  %118 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) @perf_sched_count, ptr nonnull @perf_sched_count, i32 1, ptr nonnull elementtype(i32) @perf_sched_count) #27, !srcloc !20
  tail call void @mutex_unlock(ptr noundef nonnull @perf_sched_mutex) #27
  br label %119

119:                                              ; preds = %117, %97, %92
  %120 = load ptr, ptr %2, align 4
  %121 = icmp eq ptr %120, null
  br i1 %121, label %122, label %144

122:                                              ; preds = %119
  %123 = load i32, ptr %6, align 4
  %124 = and i32 %123, 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %144

126:                                              ; preds = %122
  %127 = load i64, ptr %10, align 8
  %128 = and i64 %127, 10292962048
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %144, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 34
  %132 = load i32, ptr %131, align 4
  %133 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %132
  %134 = load i32, ptr %133, align 4
  %135 = add i32 %134, ptrtoint (ptr @pmu_sb_events to i32)
  %136 = inttoptr i32 %135 to ptr
  tail call void @_raw_spin_lock(ptr noundef %136) #27
  %137 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 64
  %138 = getelementptr inbounds %struct.pmu_event_list, ptr %136, i32 0, i32 1
  %139 = load ptr, ptr %138, align 4
  store ptr %139, ptr %137, align 4
  %140 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 64, i32 1
  store ptr %138, ptr %140, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !79
  store volatile ptr %137, ptr %138, align 4
  %141 = getelementptr inbounds %struct.list_head, ptr %139, i32 0, i32 1
  store ptr %137, ptr %141, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %142 = load i16, ptr %136, align 4
  %143 = add i16 %142, 1
  store i16 %143, ptr %136, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %144

144:                                              ; preds = %130, %126, %122, %119, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @irq_work_queue_on(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @force_sig_perf(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_try_init_event(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = tail call zeroext i1 @try_module_get(ptr noundef %4) #27
  br i1 %5, label %6, label %47

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 11
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, %1
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 11
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %8)
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %18, !prof !12

17:                                               ; preds = %14
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/events/core.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 11346, 0\0A.popsection", ""() #27, !srcloc !106
  unreachable

18:                                               ; preds = %14, %10, %6
  %19 = phi ptr [ %15, %14 ], [ null, %10 ], [ null, %6 ]
  %20 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 12
  store ptr %0, ptr %20, align 8
  %21 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 16
  %22 = load ptr, ptr %21, align 4
  %23 = tail call i32 %22(ptr noundef %1) #27
  %24 = icmp eq ptr %19, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %26) #27
  tail call fastcc void @put_ctx(ptr noundef nonnull %19) #27
  br label %27

27:                                               ; preds = %25, %18
  %28 = icmp eq i32 %23, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.pmu, ptr %0, i32 0, i32 7
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, 128
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 21, i32 6
  %36 = load i64, ptr %35, align 8
  %37 = and i64 %36, 1573104
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.perf_event, ptr %1, i32 0, i32 55
  %41 = load ptr, ptr %40, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void %41(ptr noundef %1) #27
  br label %44

44:                                               ; preds = %43, %39, %27
  %45 = phi i32 [ %23, %27 ], [ -22, %43 ], [ -22, %39 ]
  %46 = load ptr, ptr %3, align 4
  tail call void @module_put(ptr noundef %46) #27
  br label %47

47:                                               ; preds = %44, %34, %29, %2
  %48 = phi i32 [ -19, %2 ], [ %45, %44 ], [ 0, %34 ], [ 0, %29 ]
  ret i32 %48
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__srcu_read_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__srcu_read_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #18

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @alloc_perf_context(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %4 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %3, i32 noundef 3520, i32 noundef 200) #30
  %5 = icmp eq ptr %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 1
  store i32 0, ptr %7, align 4
  %8 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 2
  tail call void @__mutex_init(ptr noundef %8, ptr noundef nonnull @.str.47, ptr noundef nonnull @__perf_event_init_context.__key) #27
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 3
  store volatile ptr %9, ptr %9, align 4
  %10 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 3, i32 1
  store ptr %9, ptr %10, align 8
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 4
  store ptr null, ptr %11, align 8
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 4, i32 1
  store i64 0, ptr %12, align 8
  %13 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 5
  store ptr null, ptr %13, align 8
  %14 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 5, i32 1
  store i64 0, ptr %14, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 6
  store volatile ptr %15, ptr %15, align 8
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 6, i32 1
  store ptr %15, ptr %16, align 4
  %17 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 7
  store volatile ptr %17, ptr %17, align 8
  %18 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 7, i32 1
  store ptr %17, ptr %18, align 4
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 8
  store volatile ptr %19, ptr %19, align 8
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 8, i32 1
  store ptr %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 17
  store volatile i32 1, ptr %21, align 8
  %22 = icmp eq ptr %1, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %6
  %24 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %24) #27, !srcloc !19
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %24, ptr %24, i32 1, ptr elementtype(i32) %24) #27, !srcloc !32
  %26 = extractvalue { i32, i32, i32 } %25, 0
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28, !prof !12

28:                                               ; preds = %23
  %29 = add i32 %26, 1
  %30 = or i32 %29, %26
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %34, label %32, !prof !23

32:                                               ; preds = %28, %23
  %33 = phi i32 [ 2, %23 ], [ 1, %28 ]
  tail call void @refcount_warn_saturate(ptr noundef %24, i32 noundef %33) #27
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 18
  store ptr %1, ptr %35, align 4
  br label %36

36:                                               ; preds = %34, %6
  store ptr %0, ptr %4, align 8
  br label %37

37:                                               ; preds = %36, %2
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @add_event_to_ctx(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 15
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 1
  %6 = icmp ne i32 %5, 0
  %7 = load i1, ptr @list_add_event.__already_done, align 1
  %8 = xor i1 %7, true
  %9 = select i1 %6, i1 %8, i1 false
  br i1 %9, label %10, label %12, !prof !12

10:                                               ; preds = %2
  store i1 true, ptr @list_add_event.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 1861, i32 noundef 9, ptr noundef null) #27
  %11 = load i32, ptr %3, align 4
  br label %12

12:                                               ; preds = %10, %2
  %13 = phi i32 [ %11, %10 ], [ %4, %2 ]
  %14 = or i32 %13, 1
  store i32 %14, ptr %3, align 4
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %21, label %18, !prof !12

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.perf_event_context, ptr %16, i32 0, i32 19
  %20 = load i64, ptr %19, align 8
  br label %21

21:                                               ; preds = %18, %12
  %22 = phi i64 [ %20, %18 ], [ 0, %12 ]
  %23 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 20
  store i64 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, %0
  br i1 %26, label %27, label %75

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 10
  store i32 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, 4
  %34 = icmp eq i64 %33, 0
  %35 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 4
  %36 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 5
  %37 = select i1 %34, ptr %36, ptr %35
  %38 = getelementptr inbounds %struct.perf_event_groups, ptr %37, i32 0, i32 1
  %39 = load i64, ptr %38, align 8
  %40 = add i64 %39, 1
  store i64 %40, ptr %38, align 8
  %41 = getelementptr %struct.perf_event, ptr %0, i32 0, i32 4
  store i64 %40, ptr %41, align 8
  %42 = load ptr, ptr %37, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %69, label %44

44:                                               ; preds = %27
  %45 = getelementptr %struct.perf_event, ptr %0, i32 0, i32 34
  %46 = load i32, ptr %45, align 4
  br label %47

47:                                               ; preds = %63, %44
  %48 = phi ptr [ %42, %44 ], [ %65, %63 ]
  %49 = getelementptr i8, ptr %48, i32 484
  %50 = load i32, ptr %49, align 4
  %51 = icmp sgt i32 %50, %46
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = icmp slt i32 %50, %46
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = getelementptr inbounds %struct.rb_node, ptr %48, i32 0, i32 1
  br label %63

56:                                               ; preds = %52
  %57 = getelementptr i8, ptr %48, i32 16
  %58 = load i64, ptr %57, align 8
  %59 = icmp ugt i64 %58, %40
  %60 = getelementptr inbounds %struct.rb_node, ptr %48, i32 0, i32 1
  br i1 %59, label %61, label %63

61:                                               ; preds = %56, %47
  %62 = getelementptr inbounds %struct.rb_node, ptr %48, i32 0, i32 2
  br label %63

63:                                               ; preds = %61, %56, %54
  %64 = phi ptr [ %62, %61 ], [ %60, %56 ], [ %55, %54 ]
  %65 = load ptr, ptr %64, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %47

67:                                               ; preds = %63
  %68 = ptrtoint ptr %48 to i32
  br label %69

69:                                               ; preds = %67, %27
  %70 = phi ptr [ %64, %67 ], [ %37, %27 ]
  %71 = phi i32 [ %68, %67 ], [ 0, %27 ]
  %72 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 3
  store i32 %71, ptr %72, align 4
  %73 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 3, i32 1
  store ptr null, ptr %73, align 4
  %74 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 3, i32 2
  store ptr null, ptr %74, align 4
  store ptr %72, ptr %70, align 4
  tail call void @rb_insert_color(ptr noundef %72, ptr noundef %37) #27
  br label %75

75:                                               ; preds = %69, %21
  %76 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 6
  %77 = load ptr, ptr %76, align 4
  store ptr %77, ptr %0, align 4
  %78 = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  store ptr %76, ptr %78, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !79
  store volatile ptr %0, ptr %76, align 4
  %79 = getelementptr inbounds %struct.list_head, ptr %77, i32 0, i32 1
  store ptr %0, ptr %79, align 4
  %80 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 9
  %81 = load i32, ptr %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, ptr %80, align 8
  %83 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 0, i32 0, i32 7
  %84 = load i32, ptr %83, align 4
  %85 = icmp sgt i32 %84, -1
  br i1 %85, label %90, label %86

86:                                               ; preds = %75
  %87 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 11
  %88 = load i32, ptr %87, align 8
  %89 = add i32 %88, 1
  store i32 %89, ptr %87, align 8
  br label %90

90:                                               ; preds = %86, %75
  %91 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %92 = load i64, ptr %91, align 8
  %93 = and i64 %92, 2048
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 13
  %97 = load i32, ptr %96, align 8
  %98 = add i32 %97, 1
  store i32 %98, ptr %96, align 8
  br label %99

99:                                               ; preds = %95, %90
  %100 = getelementptr inbounds %struct.perf_event_context, ptr %1, i32 0, i32 24
  %101 = load i64, ptr %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, ptr %100, align 8
  %103 = load ptr, ptr %24, align 4
  %104 = load i32, ptr %3, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %285

107:                                              ; preds = %99
  %108 = or i32 %104, 2
  store i32 %108, ptr %3, align 4
  %109 = icmp eq ptr %103, %0
  br i1 %109, label %285, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 26
  %112 = load ptr, ptr %111, align 8
  %113 = load ptr, ptr %15, align 8
  %114 = icmp ne ptr %112, %113
  %115 = load i1, ptr @perf_group_attach.__already_done, align 1
  %116 = xor i1 %115, true
  %117 = select i1 %114, i1 %116, i1 false
  br i1 %117, label %118, label %119, !prof !12

118:                                              ; preds = %110
  store i1 true, ptr @perf_group_attach.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2039, i32 noundef 9, ptr noundef null) #27
  br label %119

119:                                              ; preds = %118, %110
  %120 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %121 = load i32, ptr %120, align 4
  %122 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 10
  %123 = load i32, ptr %122, align 8
  %124 = and i32 %123, %121
  store i32 %124, ptr %122, align 8
  %125 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %126 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 1
  %127 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 1, i32 1
  %128 = load ptr, ptr %127, align 4
  store ptr %125, ptr %127, align 4
  store ptr %126, ptr %125, align 4
  %129 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1, i32 1
  store ptr %128, ptr %129, align 4
  store volatile ptr %125, ptr %128, align 4
  %130 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 8
  %131 = load i32, ptr %130, align 8
  %132 = add i32 %131, 1
  store i32 %132, ptr %130, align 8
  %133 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 11
  %134 = load ptr, ptr %133, align 4
  %135 = getelementptr inbounds %struct.perf_event, ptr %134, i32 0, i32 8
  %136 = load i32, ptr %135, align 8
  %137 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 21, i32 5
  %138 = load i64, ptr %137, align 8
  %139 = trunc i64 %138 to i32
  %140 = shl i32 %139, 3
  %141 = and i32 %140, 8
  %142 = and i64 %138, 2
  %143 = icmp eq i64 %142, 0
  %144 = add nuw nsw i32 %141, 8
  %145 = select i1 %143, i32 %141, i32 %144
  %146 = and i64 %138, 4
  %147 = icmp eq i64 %146, 0
  %148 = select i1 %147, i32 8, i32 16
  %149 = and i64 %138, 8
  %150 = icmp eq i64 %149, 0
  %151 = add i32 %136, 1
  %152 = add nuw nsw i32 %145, 8
  %153 = select i1 %150, i32 %145, i32 %152
  %154 = select i1 %150, i32 1, i32 %151
  %155 = mul i32 %148, %154
  %156 = add i32 %153, %155
  %157 = trunc i32 %156 to i16
  %158 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 24
  store i16 %157, ptr %158, align 4
  %159 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 21, i32 4
  %160 = load i64, ptr %159, align 8
  %161 = trunc i64 %160 to i16
  %162 = shl i16 %161, 3
  %163 = and i16 %162, 8
  %164 = and i64 %160, 8
  %165 = icmp eq i64 %164, 0
  %166 = add nuw nsw i16 %163, 8
  %167 = select i1 %165, i16 %163, i16 %166
  %168 = and i64 %160, 256
  %169 = icmp eq i64 %168, 0
  %170 = add nuw nsw i16 %167, 8
  %171 = select i1 %169, i16 %167, i16 %170
  %172 = and i64 %160, 16793600
  %173 = icmp eq i64 %172, 0
  %174 = add nuw nsw i16 %171, 8
  %175 = select i1 %173, i16 %171, i16 %174
  %176 = and i64 %160, 16
  %177 = icmp eq i64 %176, 0
  %178 = select i1 %177, i16 0, i16 %157
  %179 = add i16 %175, %178
  %180 = and i64 %160, 32768
  %181 = icmp eq i64 %180, 0
  %182 = add i16 %179, 8
  %183 = select i1 %181, i16 %179, i16 %182
  %184 = and i64 %160, 131072
  %185 = icmp eq i64 %184, 0
  %186 = add i16 %183, 8
  %187 = select i1 %185, i16 %183, i16 %186
  %188 = and i64 %160, 524288
  %189 = icmp eq i64 %188, 0
  %190 = add i16 %187, 8
  %191 = select i1 %189, i16 %187, i16 %190
  %192 = and i64 %160, 2097152
  %193 = icmp eq i64 %192, 0
  %194 = add i16 %191, 8
  %195 = select i1 %193, i16 %191, i16 %194
  %196 = and i64 %160, 4194304
  %197 = icmp eq i64 %196, 0
  %198 = add i16 %195, 8
  %199 = select i1 %197, i16 %195, i16 %198
  %200 = and i64 %160, 8388608
  %201 = icmp eq i64 %200, 0
  %202 = add i16 %199, 8
  %203 = select i1 %201, i16 %199, i16 %202
  %204 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 22
  store i16 %203, ptr %204, align 8
  %205 = icmp eq ptr %134, %103
  br i1 %205, label %206, label %285

206:                                              ; preds = %119
  %207 = load ptr, ptr %126, align 8
  %208 = icmp eq ptr %207, %126
  br i1 %208, label %285, label %209

209:                                              ; preds = %209, %206
  %210 = phi ptr [ %283, %209 ], [ %207, %206 ]
  %211 = getelementptr i8, ptr %210, i32 76
  %212 = load ptr, ptr %211, align 4
  %213 = getelementptr inbounds %struct.perf_event, ptr %212, i32 0, i32 8
  %214 = load i32, ptr %213, align 8
  %215 = getelementptr i8, ptr %210, i32 168
  %216 = load i64, ptr %215, align 8
  %217 = trunc i64 %216 to i32
  %218 = shl i32 %217, 3
  %219 = and i32 %218, 8
  %220 = and i64 %216, 2
  %221 = icmp eq i64 %220, 0
  %222 = add nuw nsw i32 %219, 8
  %223 = select i1 %221, i32 %219, i32 %222
  %224 = and i64 %216, 4
  %225 = icmp eq i64 %224, 0
  %226 = select i1 %225, i32 8, i32 16
  %227 = and i64 %216, 8
  %228 = icmp eq i64 %227, 0
  %229 = add i32 %214, 1
  %230 = add nuw nsw i32 %223, 8
  %231 = select i1 %228, i32 %223, i32 %230
  %232 = select i1 %228, i32 1, i32 %229
  %233 = mul i32 %226, %232
  %234 = add i32 %231, %233
  %235 = trunc i32 %234 to i16
  %236 = getelementptr i8, ptr %210, i32 268
  store i16 %235, ptr %236, align 4
  %237 = getelementptr i8, ptr %210, i32 160
  %238 = load i64, ptr %237, align 8
  %239 = trunc i64 %238 to i16
  %240 = shl i16 %239, 3
  %241 = and i16 %240, 8
  %242 = and i64 %238, 8
  %243 = icmp eq i64 %242, 0
  %244 = add nuw nsw i16 %241, 8
  %245 = select i1 %243, i16 %241, i16 %244
  %246 = and i64 %238, 256
  %247 = icmp eq i64 %246, 0
  %248 = add nuw nsw i16 %245, 8
  %249 = select i1 %247, i16 %245, i16 %248
  %250 = and i64 %238, 16793600
  %251 = icmp eq i64 %250, 0
  %252 = add nuw nsw i16 %249, 8
  %253 = select i1 %251, i16 %249, i16 %252
  %254 = and i64 %238, 16
  %255 = icmp eq i64 %254, 0
  %256 = select i1 %255, i16 0, i16 %235
  %257 = add i16 %253, %256
  %258 = and i64 %238, 32768
  %259 = icmp eq i64 %258, 0
  %260 = add i16 %257, 8
  %261 = select i1 %259, i16 %257, i16 %260
  %262 = and i64 %238, 131072
  %263 = icmp eq i64 %262, 0
  %264 = add i16 %261, 8
  %265 = select i1 %263, i16 %261, i16 %264
  %266 = and i64 %238, 524288
  %267 = icmp eq i64 %266, 0
  %268 = add i16 %265, 8
  %269 = select i1 %267, i16 %265, i16 %268
  %270 = and i64 %238, 2097152
  %271 = icmp eq i64 %270, 0
  %272 = add i16 %269, 8
  %273 = select i1 %271, i16 %269, i16 %272
  %274 = and i64 %238, 4194304
  %275 = icmp eq i64 %274, 0
  %276 = add i16 %273, 8
  %277 = select i1 %275, i16 %273, i16 %276
  %278 = and i64 %238, 8388608
  %279 = icmp eq i64 %278, 0
  %280 = add i16 %277, 8
  %281 = select i1 %279, i16 %277, i16 %280
  %282 = getelementptr i8, ptr %210, i32 264
  store i16 %281, ptr %282, align 8
  %283 = load ptr, ptr %210, align 8
  %284 = icmp eq ptr %283, %126
  br i1 %284, label %285, label %209

285:                                              ; preds = %209, %206, %119, %107, %99
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @__perf_install_in_context(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.pmu, ptr %4, i32 0, i32 9
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #19, !srcloc !11
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.perf_cpu_context, ptr %12, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %15) #27
  %16 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 18
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %37, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %20) #27
  %21 = load ptr, ptr %16, align 4
  %22 = tail call ptr @llvm.thread.pointer() #27
  %23 = icmp eq ptr %21, %22
  %24 = tail call i32 @task_curr(ptr noundef %21) #27
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i1 true, i1 %23
  br i1 %26, label %27, label %57

27:                                               ; preds = %19
  br i1 %23, label %28, label %56

28:                                               ; preds = %27
  %29 = load ptr, ptr %13, align 8
  %30 = icmp ne ptr %29, null
  %31 = icmp ne ptr %29, %3
  %32 = and i1 %30, %31
  %33 = load i1, ptr @__perf_install_in_context.__already_done, align 1
  %34 = xor i1 %33, true
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %41, !prof !12

36:                                               ; preds = %28
  store i1 true, ptr @__perf_install_in_context.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 2839, i32 noundef 9, ptr noundef null) #27
  br label %41

37:                                               ; preds = %1
  %38 = icmp eq ptr %14, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.perf_event_context, ptr %14, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %40) #27
  br label %41

41:                                               ; preds = %39, %37, %36, %28
  %42 = phi ptr [ %3, %28 ], [ %3, %36 ], [ null, %37 ], [ %14, %39 ]
  tail call fastcc void @ctx_sched_out(ptr noundef %3, ptr noundef %12, i32 noundef 4)
  tail call fastcc void @add_event_to_ctx(ptr noundef %0, ptr noundef %3)
  %43 = load ptr, ptr %2, align 8
  %44 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.perf_event, ptr %45, i32 0, i32 21, i32 6
  %47 = load i64, ptr %46, align 8
  %48 = and i64 %47, 4
  %49 = icmp eq i64 %48, 0
  %50 = select i1 %49, i32 1, i32 2
  %51 = getelementptr inbounds %struct.perf_event_context, ptr %43, i32 0, i32 18
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  %54 = or i32 %50, 8
  %55 = select i1 %53, i32 %54, i32 %50
  tail call fastcc void @ctx_resched(ptr noundef %12, ptr noundef %42, i32 noundef %55)
  br label %57

56:                                               ; preds = %27
  tail call fastcc void @add_event_to_ctx(ptr noundef %0, ptr noundef %3)
  br label %57

57:                                               ; preds = %56, %41, %19
  %58 = phi ptr [ %42, %41 ], [ %3, %56 ], [ %3, %19 ]
  %59 = phi i32 [ 0, %41 ], [ 0, %56 ], [ -3, %19 ]
  %60 = icmp eq ptr %58, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.perf_event_context, ptr %58, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %63 = load i16, ptr %62, align 4
  %64 = add i16 %63, 1
  store i16 %64, ptr %62, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  br label %65

65:                                               ; preds = %61, %57
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %66 = load i16, ptr %15, align 4
  %67 = add i16 %66, 1
  store i16 %67, ptr %15, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  ret i32 %59
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_curr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_task_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @no_llseek(ptr noundef, i64 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_read(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, ptr nocapture noundef readnone %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca [4 x i64], align 8
  %8 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %9 = load ptr, ptr %8, align 8
  %10 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %9) #27
  %11 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 21, i32 5
  %12 = load i64, ptr %11, align 8
  %13 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 14
  %14 = load i32, ptr %13, align 8
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %125, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 24
  %18 = load i16, ptr %17, align 4
  %19 = zext i16 %18 to i32
  %20 = icmp ugt i32 %19, %2
  br i1 %20, label %125, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 26
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.perf_event_context, ptr %23, i32 0, i32 22
  %25 = load ptr, ptr %24, align 8
  %26 = icmp ne ptr %25, null
  %27 = load i1, ptr @__perf_read.__already_done, align 1
  %28 = xor i1 %27, true
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %31, !prof !12

30:                                               ; preds = %21
  store i1 true, ptr @__perf_read.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5480, i32 noundef 9, ptr noundef null) #27
  br label %31

31:                                               ; preds = %30, %21
  %32 = and i64 %12, 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %80, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 11
  %36 = load ptr, ptr %35, align 4
  %37 = load i16, ptr %17, align 4
  %38 = zext i16 %37 to i32
  %39 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %38, i32 noundef 3520) #31
  %40 = icmp eq ptr %39, null
  br i1 %40, label %125, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.perf_event, ptr %36, i32 0, i32 8
  %43 = load i32, ptr %42, align 8
  %44 = add i32 %43, 1
  %45 = sext i32 %44 to i64
  store i64 %45, ptr %39, align 64
  %46 = getelementptr inbounds %struct.perf_event, ptr %36, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %46) #27
  %47 = tail call fastcc i32 @__perf_read_group_add(ptr noundef %36, i64 noundef %12, ptr noundef nonnull %39) #27
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %76

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.perf_event, ptr %36, i32 0, i32 31
  br label %51

51:                                               ; preds = %55, %49
  %52 = phi ptr [ %50, %49 ], [ %53, %55 ]
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, %50
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr i8, ptr %53, i32 -492
  %57 = tail call fastcc i32 @__perf_read_group_add(ptr noundef %56, i64 noundef %12, ptr noundef nonnull %39) #27
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %51, label %76

59:                                               ; preds = %51
  tail call void @mutex_unlock(ptr noundef %46) #27
  %60 = load i16, ptr %17, align 4
  %61 = zext i16 %60 to i32
  %62 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 %61, i32 -1090519040) #28, !srcloc !107
  %63 = extractvalue { i32, i32 } %62, 0
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = tail call ptr @llvm.thread.pointer() #27
  %67 = getelementptr inbounds %struct.thread_info, ptr %66, i32 0, i32 3
  %68 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %67) #19, !srcloc !50
  %69 = and i32 %68, -13
  %70 = or i32 %69, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %70) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %71 = tail call i32 @arm_copy_to_user(ptr noundef %1, ptr noundef nonnull %39, i32 noundef %61) #27
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %68) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  br label %72

72:                                               ; preds = %65, %59
  %73 = phi i32 [ %71, %65 ], [ %61, %59 ]
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, i32 %61, i32 -14
  br label %78

76:                                               ; preds = %55, %41
  %77 = phi i32 [ %47, %41 ], [ %57, %55 ]
  tail call void @mutex_unlock(ptr noundef %46) #27
  br label %78

78:                                               ; preds = %76, %72
  %79 = phi i32 [ %77, %76 ], [ %75, %72 ]
  tail call void @kfree(ptr noundef nonnull %39) #27
  br label %125

80:                                               ; preds = %31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #27
  store i64 0, ptr %5, align 8, !annotation !48
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store i64 0, ptr %6, align 8, !annotation !48
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %7) #27
  %81 = getelementptr inbounds i8, ptr %7, i32 8
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %81, i8 0, i32 24, i1 false) #27, !annotation !48
  %82 = call fastcc i64 @__perf_event_read_value(ptr noundef %9, ptr noundef nonnull %5, ptr noundef nonnull %6) #27
  store i64 %82, ptr %7, align 8
  %83 = and i64 %12, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = load i64, ptr %5, align 8
  store i64 %86, ptr %81, align 8
  br label %87

87:                                               ; preds = %85, %80
  %88 = phi i32 [ 2, %85 ], [ 1, %80 ]
  %89 = and i64 %12, 2
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = load i64, ptr %6, align 8
  %93 = add nuw nsw i32 %88, 1
  %94 = getelementptr [4 x i64], ptr %7, i32 0, i32 %88
  store i64 %92, ptr %94, align 8
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i32 [ %93, %91 ], [ %88, %87 ]
  %97 = and i64 %12, 4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %108, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.perf_event, ptr %9, i32 0, i32 32
  %101 = load ptr, ptr %100, align 4
  %102 = icmp eq ptr %101, null
  %103 = select i1 %102, ptr %9, ptr %101
  %104 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 58
  %105 = load i64, ptr %104, align 8
  %106 = add nuw nsw i32 %96, 1
  %107 = getelementptr [4 x i64], ptr %7, i32 0, i32 %96
  store i64 %105, ptr %107, align 8
  br label %108

108:                                              ; preds = %99, %95
  %109 = phi i32 [ %106, %99 ], [ %96, %95 ]
  %110 = shl nuw nsw i32 %109, 3
  %111 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 %110, i32 -1090519040) #28, !srcloc !107
  %112 = extractvalue { i32, i32 } %111, 0
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %121

114:                                              ; preds = %108
  %115 = tail call ptr @llvm.thread.pointer() #27
  %116 = getelementptr inbounds %struct.thread_info, ptr %115, i32 0, i32 3
  %117 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %116) #19, !srcloc !50
  %118 = and i32 %117, -13
  %119 = or i32 %118, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %119) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %120 = call i32 @arm_copy_to_user(ptr noundef %1, ptr noundef nonnull %7, i32 noundef %110) #27
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %117) #27, !srcloc !51
  call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  br label %121

121:                                              ; preds = %114, %108
  %122 = phi i32 [ %120, %114 ], [ %110, %108 ]
  %123 = icmp eq i32 %122, 0
  %124 = select i1 %123, i32 %110, i32 -14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %7) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #27
  br label %125

125:                                              ; preds = %121, %78, %34, %16, %4
  %126 = phi i32 [ 0, %4 ], [ -28, %16 ], [ %124, %121 ], [ %79, %78 ], [ -12, %34 ]
  %127 = getelementptr inbounds %struct.perf_event_context, ptr %10, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %127) #27
  call fastcc void @put_ctx(ptr noundef %10) #27
  ret i32 %126
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_poll(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 43
  %6 = icmp eq ptr %1, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr %1, align 4
  %9 = icmp ne ptr %8, null
  %10 = icmp ne ptr %5, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void %8(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %1) #27
  br label %13

13:                                               ; preds = %12, %7, %2
  %14 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 14
  %15 = load i32, ptr %14, align 8
  %16 = icmp sgt i32 %15, -3
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %18) #27
  %19 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 31
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, %19
  tail call void @mutex_unlock(ptr noundef %18) #27
  br i1 %21, label %33, label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %23) #27
  %24 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 39
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.perf_buffer, ptr %25, i32 0, i32 7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !108
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %28) #27, !srcloc !19
  %29 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %28) #27, !srcloc !109
  %30 = extractvalue { i32, i32 } %29, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !110
  br label %31

31:                                               ; preds = %27, %22
  %32 = phi i32 [ %30, %27 ], [ 16, %22 ]
  tail call void @mutex_unlock(ptr noundef %23) #27
  br label %33

33:                                               ; preds = %31, %17
  %34 = phi i32 [ %32, %31 ], [ 16, %17 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_ioctl(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca [3 x %struct.substring_t], align 4
  %6 = alloca %struct.list_head, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %struct.perf_event_attr, align 8
  %11 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %12 = load ptr, ptr %11, align 8
  %13 = tail call fastcc ptr @perf_event_ctx_lock_nested(ptr noundef %12) #27
  switch i32 %1, label %469 [
    i32 9216, label %389
    i32 9217, label %14
    i32 9219, label %15
    i32 9218, label %16
    i32 1074275332, label %18
    i32 -2147212281, label %69
    i32 9221, label %91
    i32 1074013190, label %121
    i32 1074013192, label %330
    i32 1074013193, label %331
    i32 -1073470454, label %344
    i32 1074013195, label %345
  ]

14:                                               ; preds = %3
  br label %389

15:                                               ; preds = %3
  br label %389

16:                                               ; preds = %3
  %17 = tail call fastcc i32 @_perf_event_refresh(ptr noundef %12, i32 noundef %2) #27
  br label %469

18:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #27
  store i64 0, ptr %8, align 8, !annotation !48
  %19 = inttoptr i32 %2 to ptr
  %20 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %19, i32 8, i32 -1090519040) #28, !srcloc !103
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31, !prof !23

23:                                               ; preds = %18
  %24 = tail call ptr @llvm.thread.pointer() #27
  %25 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %26 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %25) #19, !srcloc !50
  %27 = and i32 %26, -13
  %28 = or i32 %27, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %28) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %29 = call i32 @arm_copy_from_user(ptr noundef nonnull %8, ptr noundef %19, i32 noundef 8) #27
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %26) #27, !srcloc !51
  call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31, !prof !23

31:                                               ; preds = %23, %18
  %32 = phi i32 [ %29, %23 ], [ 8, %18 ]
  %33 = sub i32 8, %32
  %34 = getelementptr i8, ptr %8, i32 %33
  call void @llvm.memset.p0.i32(ptr align 1 %34, i8 0, i32 %32, i1 false) #27
  br label %67

35:                                               ; preds = %23
  %36 = load i64, ptr %8, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #27
  store i64 %36, ptr %7, align 8
  %37 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21, i32 3
  %38 = load i64, ptr %37, align 8
  %39 = icmp eq i64 %38, 0
  %40 = icmp eq i64 %36, 0
  %41 = or i1 %40, %39
  br i1 %41, label %65, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21, i32 6
  %44 = load i64, ptr %43, align 8
  %45 = and i64 %44, 1024
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %42
  %48 = load i32, ptr @sysctl_perf_event_sample_rate, align 4
  %49 = sext i32 %48 to i64
  %50 = icmp ugt i64 %36, %49
  br i1 %50, label %65, label %51

51:                                               ; preds = %47, %42
  %52 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 12
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.pmu, ptr %53, i32 0, i32 38
  %55 = load ptr, ptr %54, align 4
  %56 = call i32 %55(ptr noundef %12, i64 noundef %36) #27
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %51
  %59 = load i64, ptr %43, align 8
  %60 = and i64 %59, 1024
  %61 = icmp ne i64 %60, 0
  %62 = icmp sgt i64 %36, -1
  %63 = or i1 %62, %61
  br i1 %63, label %64, label %65

64:                                               ; preds = %58
  call fastcc void @event_function_call(ptr noundef %12, ptr noundef nonnull @__perf_event_period, ptr noundef nonnull %7) #27
  br label %65

65:                                               ; preds = %64, %58, %51, %47, %35
  %66 = phi i32 [ 0, %64 ], [ -22, %35 ], [ -22, %47 ], [ -22, %51 ], [ -22, %58 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #27
  br label %67

67:                                               ; preds = %65, %31
  %68 = phi i32 [ %66, %65 ], [ -14, %31 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #27
  br label %469

69:                                               ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #27
  %70 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 32
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  %73 = select i1 %72, ptr %12, ptr %71
  %74 = getelementptr inbounds %struct.perf_event, ptr %73, i32 0, i32 58
  %75 = load i64, ptr %74, align 8
  store i64 %75, ptr %9, align 8
  %76 = inttoptr i32 %2 to ptr
  %77 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %76, i32 8, i32 -1090519040) #28, !srcloc !107
  %78 = extractvalue { i32, i32 } %77, 0
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %89

80:                                               ; preds = %69
  %81 = tail call ptr @llvm.thread.pointer() #27
  %82 = getelementptr inbounds %struct.thread_info, ptr %81, i32 0, i32 3
  %83 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %82) #19, !srcloc !50
  %84 = and i32 %83, -13
  %85 = or i32 %84, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %85) #27, !srcloc !51
  tail call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %86 = call i32 @arm_copy_to_user(ptr noundef %76, ptr noundef nonnull %9, i32 noundef 8) #27
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %83) #27, !srcloc !51
  call void asm sideeffect "isb ", "~{memory}"() #27, !srcloc !52
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 0, i32 -14
  br label %89

89:                                               ; preds = %80, %69
  %90 = phi i32 [ -14, %69 ], [ %88, %80 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #27
  br label %469

91:                                               ; preds = %3
  %92 = icmp eq i32 %2, -1
  br i1 %92, label %113, label %93

93:                                               ; preds = %91
  %94 = tail call i32 @__fdget(i32 noundef %2) #27, !noalias !111
  %95 = and i32 %94, -4
  %96 = inttoptr i32 %95 to ptr
  %97 = icmp eq i32 %95, 0
  br i1 %97, label %469, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %struct.file, ptr %96, i32 0, i32 3
  %100 = load ptr, ptr %99, align 4
  %101 = icmp eq ptr %100, @perf_fops
  br i1 %101, label %106, label %102

102:                                              ; preds = %98
  %103 = and i32 %94, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %469, label %105

105:                                              ; preds = %102
  tail call void @fput(ptr noundef nonnull %96) #27
  br label %469

106:                                              ; preds = %98
  %107 = getelementptr inbounds %struct.file, ptr %96, i32 0, i32 15
  %108 = load ptr, ptr %107, align 8
  %109 = tail call fastcc i32 @perf_event_set_output(ptr noundef %12, ptr noundef %108) #27
  %110 = and i32 %94, 1
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %469, label %112

112:                                              ; preds = %106
  tail call void @fput(ptr noundef nonnull %96) #27
  br label %469

113:                                              ; preds = %91
  %114 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %114) #27
  %115 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 38
  %116 = load volatile i32, ptr %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %113
  tail call fastcc void @ring_buffer_attach(ptr noundef %12, ptr noundef null) #27
  br label %119

119:                                              ; preds = %118, %113
  %120 = phi i32 [ -22, %113 ], [ 0, %118 ]
  tail call void @mutex_unlock(ptr noundef %114) #27
  br label %469

121:                                              ; preds = %3
  %122 = inttoptr i32 %2 to ptr
  %123 = tail call ptr @strndup_user(ptr noundef %122, i32 noundef 4096) #27
  %124 = icmp ugt ptr %123, inttoptr (i32 -4096 to ptr)
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = ptrtoint ptr %123 to i32
  br label %469

127:                                              ; preds = %121
  %128 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 12
  %129 = load ptr, ptr %128, align 8
  %130 = icmp eq ptr %129, @perf_tracepoint
  %131 = icmp eq ptr %129, @perf_uprobe
  %132 = or i1 %130, %131
  br i1 %132, label %133, label %141

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 26
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds %struct.perf_event_context, ptr %135, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %136) #27
  %137 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21, i32 2
  %138 = load i64, ptr %137, align 8
  %139 = trunc i64 %138 to i32
  %140 = tail call i32 @ftrace_profile_set_filter(ptr noundef %12, i32 noundef %139, ptr noundef %123) #27
  tail call void @mutex_lock(ptr noundef %136) #27
  br label %328

141:                                              ; preds = %127
  %142 = getelementptr inbounds %struct.pmu, ptr %129, i32 0, i32 13
  %143 = load i32, ptr %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %328, label %145

145:                                              ; preds = %141
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #27
  store ptr %6, ptr %6, align 8
  %146 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  store ptr %6, ptr %146, align 4
  %147 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 32
  %148 = load ptr, ptr %147, align 4
  %149 = icmp ne ptr %148, null
  %150 = load i1, ptr @perf_event_set_addr_filter.__already_done, align 1
  %151 = xor i1 %150, true
  %152 = select i1 %149, i1 %151, i1 false
  br i1 %152, label %153, label %154, !prof !12

153:                                              ; preds = %145
  store i1 true, ptr @perf_event_set_addr_filter.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 10610, i32 noundef 9, ptr noundef null) #27
  br label %154

154:                                              ; preds = %153, %145
  br i1 %149, label %326, label %155

155:                                              ; preds = %154
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #27
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false) #27, !annotation !48
  %156 = call noalias ptr @kstrdup(ptr noundef %123, i32 noundef 3264) #27
  store ptr %156, ptr %4, align 4
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %323

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.substring_t, ptr %5, i32 0, i32 1
  %161 = getelementptr inbounds [3 x %struct.substring_t], ptr %5, i32 0, i32 1
  %162 = getelementptr inbounds [3 x %struct.substring_t], ptr %5, i32 0, i32 1, i32 1
  %163 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21, i32 6
  %164 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 26
  %165 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 51, i32 2
  br label %166

166:                                              ; preds = %264, %159
  %167 = phi ptr [ null, %159 ], [ %225, %264 ]
  %168 = phi i32 [ 0, %159 ], [ %265, %264 ]
  br label %169

169:                                              ; preds = %172, %166
  %170 = call ptr @strsep(ptr noundef nonnull %4, ptr noundef nonnull @.str.59) #27
  %171 = icmp eq ptr %170, null
  br i1 %171, label %267, label %172

172:                                              ; preds = %169
  %173 = load i8, ptr %170, align 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %169, label %175

175:                                              ; preds = %172
  %176 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %177 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %176, i32 noundef 3520, i32 noundef 28) #30
  %178 = icmp eq ptr %177, null
  br i1 %178, label %268, label %179

179:                                              ; preds = %175
  store volatile ptr %177, ptr %177, align 8
  %180 = getelementptr inbounds %struct.list_head, ptr %177, i32 0, i32 1
  %181 = load ptr, ptr %146, align 4
  store ptr %177, ptr %146, align 4
  store ptr %6, ptr %177, align 8
  store ptr %181, ptr %180, align 4
  store volatile ptr %177, ptr %181, align 4
  %182 = call i32 @match_token(ptr noundef nonnull %170, ptr noundef nonnull @if_tokens, ptr noundef nonnull %5) #27
  switch i32 %182, label %268 [
    i32 0, label %212
    i32 1, label %212
    i32 2, label %212
    i32 6, label %186
    i32 4, label %186
    i32 5, label %183
    i32 3, label %183
  ]

183:                                              ; preds = %222, %222, %179, %179
  %184 = phi i1 [ false, %179 ], [ false, %179 ], [ true, %222 ], [ true, %222 ]
  %185 = phi i32 [ %182, %179 ], [ %182, %179 ], [ %223, %222 ], [ %223, %222 ]
  br label %186

186:                                              ; preds = %222, %222, %183, %179, %179
  %187 = phi i1 [ %184, %183 ], [ false, %179 ], [ false, %179 ], [ true, %222 ], [ true, %222 ]
  %188 = phi i32 [ %185, %183 ], [ %182, %179 ], [ %182, %179 ], [ %223, %222 ], [ %223, %222 ]
  %189 = phi i32 [ %168, %183 ], [ 1, %222 ], [ 1, %222 ], [ 1, %179 ], [ 1, %179 ]
  br i1 %187, label %190, label %268

190:                                              ; preds = %186
  %191 = load ptr, ptr %160, align 4
  store i8 0, ptr %191, align 1
  %192 = load ptr, ptr %5, align 4
  %193 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 2
  %194 = call i32 @_kstrtoul(ptr noundef %192, i32 noundef 0, ptr noundef %193) #27
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %268

196:                                              ; preds = %190
  %197 = icmp eq i32 %188, 3
  %198 = add nsw i32 %188, -3
  %199 = icmp ult i32 %198, 2
  br i1 %199, label %200, label %206

200:                                              ; preds = %196
  %201 = load ptr, ptr %162, align 4
  store i8 0, ptr %201, align 1
  %202 = load ptr, ptr %161, align 4
  %203 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 3
  %204 = call i32 @_kstrtoul(ptr noundef %202, i32 noundef 0, ptr noundef %203) #27
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %268

206:                                              ; preds = %200, %196
  switch i32 %188, label %224 [
    i32 5, label %207
    i32 3, label %207
  ]

207:                                              ; preds = %206, %206
  %208 = select i1 %197, i32 2, i32 1
  call void @kfree(ptr noundef %167) #27
  %209 = getelementptr [3 x %struct.substring_t], ptr %5, i32 0, i32 %208
  %210 = call ptr @match_strdup(ptr noundef %209) #27
  %211 = icmp eq ptr %210, null
  br i1 %211, label %268, label %224

212:                                              ; preds = %179, %179, %179
  %213 = getelementptr [3 x i32], ptr @perf_event_parse_addr_filter.actions, i32 0, i32 %182
  %214 = load i32, ptr %213, align 4
  %215 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 4
  store i32 %214, ptr %215, align 8
  br label %216

216:                                              ; preds = %219, %212
  %217 = call ptr @strsep(ptr noundef nonnull %4, ptr noundef nonnull @.str.59) #27
  %218 = icmp eq ptr %217, null
  br i1 %218, label %266, label %219

219:                                              ; preds = %216
  %220 = load i8, ptr %217, align 1
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %216, label %222

222:                                              ; preds = %219
  %223 = call i32 @match_token(ptr noundef nonnull %217, ptr noundef nonnull @if_tokens, ptr noundef nonnull %5) #27
  switch i32 %223, label %268 [
    i32 3, label %183
    i32 5, label %183
    i32 4, label %186
    i32 6, label %186
  ]

224:                                              ; preds = %207, %206
  %225 = phi ptr [ %167, %206 ], [ %210, %207 ]
  %226 = icmp eq i32 %189, 0
  br i1 %226, label %231, label %227

227:                                              ; preds = %224
  %228 = load i64, ptr %163, align 8
  %229 = and i64 %228, 32
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %268

231:                                              ; preds = %227, %224
  %232 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 4
  %233 = load i32, ptr %232, align 8
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 3
  %237 = load i32, ptr %236, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %268, label %239

239:                                              ; preds = %235, %231
  br i1 %226, label %240, label %264

240:                                              ; preds = %239
  %241 = icmp eq ptr %225, null
  br i1 %241, label %268, label %242

242:                                              ; preds = %240
  %243 = load ptr, ptr %164, align 8
  %244 = getelementptr inbounds %struct.perf_event_context, ptr %243, i32 0, i32 18
  %245 = load ptr, ptr %244, align 4
  %246 = icmp eq ptr %245, null
  br i1 %246, label %268, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 1
  %249 = call i32 @kern_path(ptr noundef nonnull %225, i32 noundef 1, ptr noundef %248) #27
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %268

251:                                              ; preds = %247
  %252 = getelementptr inbounds %struct.perf_addr_filter, ptr %177, i32 0, i32 1, i32 1
  %253 = load ptr, ptr %252, align 4
  %254 = icmp eq ptr %253, null
  br i1 %254, label %268, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %struct.dentry, ptr %253, i32 0, i32 5
  %257 = load ptr, ptr %256, align 8
  %258 = load i16, ptr %257, align 8
  %259 = and i16 %258, -4096
  %260 = icmp eq i16 %259, -32768
  br i1 %260, label %261, label %268

261:                                              ; preds = %255
  %262 = load i32, ptr %165, align 4
  %263 = add i32 %262, 1
  store i32 %263, ptr %165, align 4
  br label %264

264:                                              ; preds = %261, %239
  %265 = phi i32 [ %189, %239 ], [ 0, %261 ]
  br label %166

266:                                              ; preds = %216
  br i1 %171, label %267, label %268

267:                                              ; preds = %266, %169
  call void @kfree(ptr noundef %167) #27
  call void @kfree(ptr noundef nonnull %156) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %285

268:                                              ; preds = %266, %255, %251, %247, %242, %240, %235, %227, %222, %207, %200, %190, %186, %179, %175
  %269 = phi ptr [ %167, %266 ], [ %167, %179 ], [ %167, %175 ], [ %167, %222 ], [ %167, %186 ], [ %167, %190 ], [ %167, %200 ], [ null, %207 ], [ %225, %227 ], [ %225, %247 ], [ %225, %255 ], [ %225, %251 ], [ %225, %242 ], [ null, %240 ], [ %225, %235 ]
  %270 = phi i32 [ -22, %266 ], [ -22, %179 ], [ -22, %175 ], [ -22, %222 ], [ -22, %186 ], [ %194, %190 ], [ %204, %200 ], [ -12, %207 ], [ -22, %227 ], [ %249, %247 ], [ -22, %255 ], [ -22, %251 ], [ -95, %242 ], [ -22, %240 ], [ -22, %235 ]
  call void @kfree(ptr noundef %269) #27
  %271 = load ptr, ptr %6, align 8
  %272 = icmp eq ptr %271, %6
  br i1 %272, label %273, label %274

273:                                              ; preds = %268
  call void @kfree(ptr noundef nonnull %156) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  br label %323

274:                                              ; preds = %274, %268
  %275 = phi ptr [ %276, %274 ], [ %271, %268 ]
  %276 = load ptr, ptr %275, align 4
  %277 = getelementptr inbounds %struct.perf_addr_filter, ptr %275, i32 0, i32 1
  call void @path_put(ptr noundef %277) #27
  %278 = getelementptr inbounds %struct.list_head, ptr %275, i32 0, i32 1
  %279 = load ptr, ptr %278, align 4
  %280 = load ptr, ptr %275, align 4
  %281 = getelementptr inbounds %struct.list_head, ptr %280, i32 0, i32 1
  store ptr %279, ptr %281, align 4
  store volatile ptr %280, ptr %279, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %275, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %278, align 4
  call void @kfree(ptr noundef %275) #27
  %282 = icmp eq ptr %276, %6
  br i1 %282, label %283, label %274

283:                                              ; preds = %274
  call void @kfree(ptr noundef nonnull %156) #27
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #27
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #27
  %284 = icmp eq i32 %270, 0
  br i1 %284, label %285, label %323

285:                                              ; preds = %283, %267
  %286 = load ptr, ptr %128, align 8
  %287 = getelementptr inbounds %struct.pmu, ptr %286, i32 0, i32 34
  %288 = load ptr, ptr %287, align 4
  %289 = call i32 %288(ptr noundef nonnull %6) #27
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %311

291:                                              ; preds = %285
  call fastcc void @perf_addr_filters_splice(ptr noundef %12, ptr noundef nonnull %6) #27
  %292 = load ptr, ptr %164, align 8
  %293 = getelementptr inbounds %struct.perf_event_context, ptr %292, i32 0, i32 22
  %294 = load ptr, ptr %293, align 8
  %295 = icmp ne ptr %294, null
  %296 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %297 = xor i1 %296, true
  %298 = select i1 %295, i1 %297, i1 false
  br i1 %298, label %299, label %300, !prof !12

299:                                              ; preds = %291
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %300

300:                                              ; preds = %299, %291
  %301 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 30
  call void @mutex_lock(ptr noundef %301) #27
  call fastcc void @perf_event_addr_filters_apply(ptr noundef %12) #27, !callees !114
  %302 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 31
  %303 = load ptr, ptr %302, align 4
  %304 = icmp eq ptr %303, %302
  br i1 %304, label %310, label %305

305:                                              ; preds = %305, %300
  %306 = phi ptr [ %308, %305 ], [ %303, %300 ]
  %307 = getelementptr i8, ptr %306, i32 -492
  call fastcc void @perf_event_addr_filters_apply(ptr noundef %307) #27, !callees !114
  %308 = load ptr, ptr %306, align 4
  %309 = icmp eq ptr %308, %302
  br i1 %309, label %310, label %305

310:                                              ; preds = %305, %300
  call void @mutex_unlock(ptr noundef %301) #27
  br label %326

311:                                              ; preds = %285
  %312 = load ptr, ptr %6, align 8
  %313 = icmp eq ptr %312, %6
  br i1 %313, label %323, label %314

314:                                              ; preds = %314, %311
  %315 = phi ptr [ %316, %314 ], [ %312, %311 ]
  %316 = load ptr, ptr %315, align 4
  %317 = getelementptr inbounds %struct.perf_addr_filter, ptr %315, i32 0, i32 1
  call void @path_put(ptr noundef %317) #27
  %318 = getelementptr inbounds %struct.list_head, ptr %315, i32 0, i32 1
  %319 = load ptr, ptr %318, align 4
  %320 = load ptr, ptr %315, align 4
  %321 = getelementptr inbounds %struct.list_head, ptr %320, i32 0, i32 1
  store ptr %319, ptr %321, align 4
  store volatile ptr %320, ptr %319, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %315, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %318, align 4
  call void @kfree(ptr noundef %315) #27
  %322 = icmp eq ptr %316, %6
  br i1 %322, label %323, label %314

323:                                              ; preds = %314, %311, %283, %273, %158
  %324 = phi i32 [ %270, %283 ], [ -12, %158 ], [ %270, %273 ], [ %289, %311 ], [ %289, %314 ]
  %325 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 51, i32 2
  store i32 0, ptr %325, align 4
  br label %326

326:                                              ; preds = %323, %310, %154
  %327 = phi i32 [ %324, %323 ], [ 0, %310 ], [ -22, %154 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #27
  br label %328

328:                                              ; preds = %326, %141, %133
  %329 = phi i32 [ %140, %133 ], [ %327, %326 ], [ -22, %141 ]
  call void @kfree(ptr noundef %123) #27
  br label %469

330:                                              ; preds = %3
  br label %469

331:                                              ; preds = %3
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %332 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 39
  %333 = load volatile ptr, ptr %332, align 4
  %334 = icmp eq ptr %333, null
  br i1 %334, label %339, label %335

335:                                              ; preds = %331
  %336 = getelementptr inbounds %struct.perf_buffer, ptr %333, i32 0, i32 4
  %337 = load i32, ptr %336, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %335, %331
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %469

340:                                              ; preds = %335
  %341 = icmp ne i32 %2, 0
  %342 = zext i1 %341 to i32
  %343 = getelementptr inbounds %struct.perf_buffer, ptr %333, i32 0, i32 6
  store i32 %342, ptr %343, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %469

344:                                              ; preds = %3
  br label %469

345:                                              ; preds = %3
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %10) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(128) %10, i8 0, i32 128, i1 false) #27, !annotation !48
  %346 = inttoptr i32 %2 to ptr
  %347 = call fastcc i32 @perf_copy_attr(ptr noundef %346, ptr noundef nonnull %10) #27
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %387

349:                                              ; preds = %345
  %350 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21
  %351 = load i32, ptr %350, align 8
  %352 = load i32, ptr %10, align 8
  %353 = icmp eq i32 %351, %352
  br i1 %353, label %354, label %387

354:                                              ; preds = %349
  %355 = icmp eq i32 %351, 5
  br i1 %355, label %356, label %387

356:                                              ; preds = %354
  %357 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 26
  %358 = load ptr, ptr %357, align 8
  %359 = getelementptr inbounds %struct.perf_event_context, ptr %358, i32 0, i32 22
  %360 = load ptr, ptr %359, align 8
  %361 = icmp ne ptr %360, null
  %362 = load i1, ptr @perf_event_modify_attr.__already_done, align 1
  %363 = xor i1 %362, true
  %364 = select i1 %361, i1 %363, i1 false
  br i1 %364, label %365, label %366, !prof !12

365:                                              ; preds = %356
  store i1 true, ptr @perf_event_modify_attr.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 3269, i32 noundef 9, ptr noundef null) #27
  br label %366

366:                                              ; preds = %365, %356
  %367 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 30
  call void @mutex_lock(ptr noundef %367) #27
  %368 = getelementptr inbounds %struct.perf_event_attr, ptr %10, i32 0, i32 21
  %369 = load i64, ptr %368, align 8
  %370 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 21, i32 21
  store i64 %369, ptr %370, align 8
  %371 = call fastcc i32 @perf_event_modify_breakpoint(ptr noundef %12, ptr noundef nonnull %10) #27
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %385

373:                                              ; preds = %366
  %374 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 31
  br label %375

375:                                              ; preds = %379, %373
  %376 = phi ptr [ %374, %373 ], [ %377, %379 ]
  %377 = load ptr, ptr %376, align 4
  %378 = icmp eq ptr %377, %374
  br i1 %378, label %385, label %379

379:                                              ; preds = %375
  %380 = getelementptr i8, ptr %377, i32 -492
  %381 = load i64, ptr %368, align 8
  %382 = getelementptr i8, ptr %377, i32 -228
  store i64 %381, ptr %382, align 8
  %383 = call fastcc i32 @perf_event_modify_breakpoint(ptr noundef %380, ptr noundef nonnull %10) #27
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %375, label %385

385:                                              ; preds = %379, %375, %366
  %386 = phi i32 [ %371, %366 ], [ 0, %375 ], [ %383, %379 ]
  call void @mutex_unlock(ptr noundef %367) #27
  br label %387

387:                                              ; preds = %385, %354, %349, %345
  %388 = phi i32 [ %347, %345 ], [ %386, %385 ], [ -22, %349 ], [ -95, %354 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %10) #27
  br label %469

389:                                              ; preds = %15, %14, %3
  %390 = phi ptr [ @_perf_event_reset, %15 ], [ @_perf_event_disable, %14 ], [ @_perf_event_enable, %3 ]
  %391 = and i32 %2, 1
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %448, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 11
  %395 = load ptr, ptr %394, align 4
  %396 = getelementptr inbounds %struct.perf_event, ptr %395, i32 0, i32 26
  %397 = load ptr, ptr %396, align 8
  %398 = getelementptr inbounds %struct.perf_event_context, ptr %397, i32 0, i32 22
  %399 = load ptr, ptr %398, align 8
  %400 = icmp ne ptr %399, null
  %401 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %402 = xor i1 %401, true
  %403 = select i1 %400, i1 %402, i1 false
  br i1 %403, label %404, label %405, !prof !12

404:                                              ; preds = %393
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %405

405:                                              ; preds = %404, %393
  %406 = getelementptr inbounds %struct.perf_event, ptr %395, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %406) #27
  tail call void %390(ptr noundef %395) #27, !callees !114
  %407 = getelementptr inbounds %struct.perf_event, ptr %395, i32 0, i32 31
  %408 = load ptr, ptr %407, align 4
  %409 = icmp eq ptr %408, %407
  br i1 %409, label %415, label %410

410:                                              ; preds = %410, %405
  %411 = phi ptr [ %413, %410 ], [ %408, %405 ]
  %412 = getelementptr i8, ptr %411, i32 -492
  tail call void %390(ptr noundef %412) #27, !callees !114
  %413 = load ptr, ptr %411, align 4
  %414 = icmp eq ptr %413, %407
  br i1 %414, label %415, label %410

415:                                              ; preds = %410, %405
  tail call void @mutex_unlock(ptr noundef %406) #27
  %416 = getelementptr inbounds %struct.perf_event, ptr %395, i32 0, i32 11
  %417 = load ptr, ptr %416, align 4
  %418 = icmp eq ptr %417, %395
  br i1 %418, label %419, label %469

419:                                              ; preds = %415
  %420 = getelementptr inbounds %struct.perf_event, ptr %395, i32 0, i32 1
  %421 = load ptr, ptr %420, align 8
  %422 = icmp eq ptr %421, %420
  br i1 %422, label %469, label %423

423:                                              ; preds = %445, %419
  %424 = phi ptr [ %446, %445 ], [ %421, %419 ]
  %425 = getelementptr i8, ptr %424, i32 -8
  %426 = getelementptr i8, ptr %424, i32 440
  %427 = load ptr, ptr %426, align 8
  %428 = getelementptr inbounds %struct.perf_event_context, ptr %427, i32 0, i32 22
  %429 = load ptr, ptr %428, align 8
  %430 = icmp ne ptr %429, null
  %431 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %432 = xor i1 %431, true
  %433 = select i1 %430, i1 %432, i1 false
  br i1 %433, label %434, label %435, !prof !12

434:                                              ; preds = %423
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %435

435:                                              ; preds = %434, %423
  %436 = getelementptr i8, ptr %424, i32 464
  tail call void @mutex_lock(ptr noundef %436) #27
  tail call void %390(ptr noundef %425) #27, !callees !114
  %437 = getelementptr i8, ptr %424, i32 484
  %438 = load ptr, ptr %437, align 4
  %439 = icmp eq ptr %438, %437
  br i1 %439, label %445, label %440

440:                                              ; preds = %440, %435
  %441 = phi ptr [ %443, %440 ], [ %438, %435 ]
  %442 = getelementptr i8, ptr %441, i32 -492
  tail call void %390(ptr noundef %442) #27, !callees !114
  %443 = load ptr, ptr %441, align 4
  %444 = icmp eq ptr %443, %437
  br i1 %444, label %445, label %440

445:                                              ; preds = %440, %435
  tail call void @mutex_unlock(ptr noundef %436) #27
  %446 = load ptr, ptr %424, align 8
  %447 = icmp eq ptr %446, %420
  br i1 %447, label %469, label %423

448:                                              ; preds = %389
  %449 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 26
  %450 = load ptr, ptr %449, align 8
  %451 = getelementptr inbounds %struct.perf_event_context, ptr %450, i32 0, i32 22
  %452 = load ptr, ptr %451, align 8
  %453 = icmp ne ptr %452, null
  %454 = load i1, ptr @perf_event_for_each_child.__already_done, align 1
  %455 = xor i1 %454, true
  %456 = select i1 %453, i1 %455, i1 false
  br i1 %456, label %457, label %458, !prof !12

457:                                              ; preds = %448
  store i1 true, ptr @perf_event_for_each_child.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5566, i32 noundef 9, ptr noundef null) #27
  br label %458

458:                                              ; preds = %457, %448
  %459 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %459) #27
  tail call void %390(ptr noundef %12) #27, !callees !114
  %460 = getelementptr inbounds %struct.perf_event, ptr %12, i32 0, i32 31
  %461 = load ptr, ptr %460, align 4
  %462 = icmp eq ptr %461, %460
  br i1 %462, label %468, label %463

463:                                              ; preds = %463, %458
  %464 = phi ptr [ %466, %463 ], [ %461, %458 ]
  %465 = getelementptr i8, ptr %464, i32 -492
  tail call void %390(ptr noundef %465) #27, !callees !114
  %466 = load ptr, ptr %464, align 4
  %467 = icmp eq ptr %466, %460
  br i1 %467, label %468, label %463

468:                                              ; preds = %463, %458
  tail call void @mutex_unlock(ptr noundef %459) #27
  br label %469

469:                                              ; preds = %468, %445, %419, %415, %387, %344, %340, %339, %330, %328, %125, %119, %112, %106, %105, %102, %93, %89, %67, %16, %3
  %470 = phi i32 [ %388, %387 ], [ -95, %344 ], [ %90, %89 ], [ %68, %67 ], [ %17, %16 ], [ -95, %330 ], [ 0, %340 ], [ -22, %339 ], [ -25, %3 ], [ 0, %468 ], [ -9, %93 ], [ -9, %102 ], [ -9, %105 ], [ %120, %119 ], [ %126, %125 ], [ %329, %328 ], [ 0, %415 ], [ 0, %419 ], [ %109, %106 ], [ %109, %112 ], [ 0, %445 ]
  %471 = getelementptr inbounds %struct.perf_event_context, ptr %13, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %471) #27
  call fastcc void @put_ctx(ptr noundef %13) #27
  ret i32 %470
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_mmap(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  %5 = tail call ptr @llvm.thread.pointer() #27
  %6 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 83
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.cred, ptr %7, i32 0, i32 20
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 34
  %11 = load i32, ptr %10, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 21, i32 6
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 2
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %253

18:                                               ; preds = %13, %2
  %19 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 8
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %253, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 1
  %25 = load i32, ptr %24, align 4
  %26 = load i32, ptr %1, align 4
  %27 = sub i32 %25, %26
  %28 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 13
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %23
  %32 = lshr i32 %27, 12
  %33 = add nsw i32 %32, -1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %114, label %108

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 39
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %253, label %39

39:                                               ; preds = %35
  %40 = lshr i32 %27, 12
  %41 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %41) #27
  %42 = load ptr, ptr %36, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %239, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 33
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %46, i32 0, i32 24
  %48 = load volatile i64, ptr %47, align 8
  %49 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %46, i32 0, i32 25
  %50 = load volatile i64, ptr %49, align 8
  %51 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 4
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 3
  %54 = load i32, ptr %53, align 4
  %55 = add i32 %54, 12
  %56 = shl i32 %52, %55
  %57 = add i32 %56, 4096
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %48, %58
  br i1 %59, label %239, label %60

60:                                               ; preds = %44
  %61 = load i32, ptr %28, align 4
  %62 = shl i32 %61, 12
  %63 = zext i32 %62 to i64
  %64 = icmp eq i64 %48, %63
  br i1 %64, label %65, label %239

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 24
  %67 = load i32, ptr %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %76, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 23
  %71 = load i32, ptr %70, align 4
  %72 = icmp eq i32 %71, %61
  %73 = zext i32 %27 to i64
  %74 = icmp eq i64 %50, %73
  %75 = select i1 %72, i1 %74, i1 false
  br i1 %75, label %79, label %239

76:                                               ; preds = %65
  %77 = zext i32 %27 to i64
  %78 = icmp eq i64 %50, %77
  br i1 %78, label %87, label %239

79:                                               ; preds = %69
  %80 = and i32 %27, -4096
  %81 = zext i32 %80 to i64
  %82 = icmp ne i64 %50, %81
  %83 = icmp ne i32 %67, %40
  %84 = select i1 %82, i1 true, i1 %83
  %85 = icmp ult i32 %27, 4096
  %86 = select i1 %84, i1 true, i1 %85
  br i1 %86, label %239, label %93

87:                                               ; preds = %76
  %88 = and i32 %27, -4096
  %89 = zext i32 %88 to i64
  %90 = icmp ne i64 %50, %89
  %91 = icmp ult i32 %27, 4096
  %92 = select i1 %90, i1 true, i1 %91
  br i1 %92, label %239, label %93

93:                                               ; preds = %87, %79
  %94 = tail call i32 @llvm.ctpop.i32(i32 %40) #27, !range !95
  %95 = icmp ult i32 %94, 2
  br i1 %95, label %96, label %239

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 17
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %97) #27, !srcloc !19
  %98 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %97, ptr %97, i32 0, i32 1, ptr elementtype(i32) %97) #27, !srcloc !84
  %99 = extractvalue { i32, i32, i32 } %98, 0
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %239, label %101

101:                                              ; preds = %96
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  %102 = load i32, ptr %66, align 4
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %struct.perf_buffer, ptr %42, i32 0, i32 26
  br i1 %103, label %105, label %106

105:                                              ; preds = %101
  store volatile i32 1, ptr %104, align 4
  br label %146

106:                                              ; preds = %101
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %104) #27, !srcloc !19
  %107 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %104, ptr %104, i32 1, ptr elementtype(i32) %104) #27, !srcloc !20
  br label %220

108:                                              ; preds = %31
  %109 = tail call i32 @llvm.ctpop.i32(i32 %33) #27, !range !95
  %110 = icmp ult i32 %109, 2
  %111 = and i32 %27, -4096
  %112 = icmp eq i32 %27, %111
  %113 = select i1 %110, i1 %112, i1 false
  br i1 %113, label %117, label %253

114:                                              ; preds = %31
  %115 = and i32 %27, -4096
  %116 = icmp eq i32 %27, %115
  br i1 %116, label %117, label %253

117:                                              ; preds = %114, %108
  %118 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 26
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds %struct.perf_event_context, ptr %119, i32 0, i32 22
  %121 = load ptr, ptr %120, align 8
  %122 = icmp ne ptr %121, null
  %123 = load i1, ptr @perf_mmap.__already_done, align 1
  %124 = xor i1 %123, true
  %125 = select i1 %122, i1 %124, i1 false
  br i1 %125, label %126, label %127, !prof !12

126:                                              ; preds = %117
  store i1 true, ptr @perf_mmap.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6351, i32 noundef 9, ptr noundef null) #27
  br label %127

127:                                              ; preds = %126, %117
  %128 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 37
  tail call void @mutex_lock(ptr noundef %128) #27
  %129 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 39
  %130 = load ptr, ptr %129, align 4
  %131 = icmp eq ptr %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %143, %127
  %133 = phi ptr [ %144, %143 ], [ %130, %127 ]
  %134 = getelementptr inbounds %struct.perf_buffer, ptr %133, i32 0, i32 4
  %135 = load i32, ptr %134, align 4
  %136 = icmp eq i32 %135, %33
  br i1 %136, label %137, label %239

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.perf_buffer, ptr %133, i32 0, i32 17
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %138) #27, !srcloc !19
  %139 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %138, ptr %138, i32 0, i32 1, ptr elementtype(i32) %138) #27, !srcloc !84
  %140 = extractvalue { i32, i32, i32 } %139, 0
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %137
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  br label %220

143:                                              ; preds = %137
  tail call void @mutex_unlock(ptr noundef %128) #27
  tail call void @mutex_lock(ptr noundef %128) #27
  %144 = load ptr, ptr %129, align 4
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %132

146:                                              ; preds = %143, %127, %105
  %147 = phi i32 [ %40, %105 ], [ %33, %127 ], [ %33, %143 ]
  %148 = phi i32 [ %40, %105 ], [ %32, %127 ], [ %32, %143 ]
  %149 = phi i32 [ -22, %105 ], [ 0, %127 ], [ 0, %143 ]
  %150 = phi ptr [ %42, %105 ], [ null, %127 ], [ null, %143 ]
  %151 = load i32, ptr @sysctl_perf_event_mlock, align 4
  %152 = ashr i32 %151, 2
  %153 = load volatile i32, ptr @__num_online_cpus, align 4
  %154 = mul i32 %152, %153
  %155 = getelementptr inbounds %struct.user_struct, ptr %9, i32 0, i32 6
  %156 = load volatile i32, ptr %155, align 4
  %157 = tail call i32 @llvm.umin.i32(i32 %156, i32 %154)
  %158 = add i32 %157, %148
  %159 = tail call i32 @llvm.usub.sat.i32(i32 %158, i32 %154)
  %160 = sub i32 %148, %159
  %161 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 93
  %162 = load ptr, ptr %161, align 16
  %163 = getelementptr %struct.signal_struct, ptr %162, i32 0, i32 50, i32 8
  %164 = load volatile i32, ptr %163, align 8
  %165 = lshr i32 %164, 12
  %166 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %167 = load ptr, ptr %166, align 4
  %168 = getelementptr inbounds %struct.anon, ptr %167, i32 0, i32 21
  %169 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %168, ptr elementtype(i64) %168) #27, !srcloc !25
  %170 = trunc i64 %169 to i32
  %171 = add i32 %159, %170
  %172 = icmp ule i32 %171, %165
  %173 = load i32, ptr @sysctl_perf_event_paranoid, align 4
  %174 = icmp slt i32 %173, 0
  %175 = select i1 %172, i1 true, i1 %174
  br i1 %175, label %178, label %176

176:                                              ; preds = %146
  %177 = tail call zeroext i1 @capable(i32 noundef 14) #27
  br i1 %177, label %178, label %232

178:                                              ; preds = %176, %146
  %179 = icmp eq ptr %150, null
  br i1 %179, label %180, label %201

180:                                              ; preds = %178
  %181 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 39
  %182 = load ptr, ptr %181, align 4
  %183 = icmp eq ptr %182, null
  br i1 %183, label %185, label %184, !prof !23

184:                                              ; preds = %180
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6412, i32 noundef 9, ptr noundef null) #27
  br label %185

185:                                              ; preds = %184, %180
  %186 = load i32, ptr %19, align 4
  %187 = lshr i32 %186, 1
  %188 = and i32 %187, 1
  %189 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 21, i32 6
  %190 = load i64, ptr %189, align 8
  %191 = and i64 %190, 16384
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 21, i32 7
  %195 = load i32, ptr %194, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = phi i32 [ %195, %193 ], [ 0, %185 ]
  %198 = load i32, ptr %10, align 4
  %199 = tail call ptr @rb_alloc(i32 noundef %147, i32 noundef %197, i32 noundef %198, i32 noundef %188) #27
  %200 = icmp eq ptr %199, null
  br i1 %200, label %239, label %212

201:                                              ; preds = %178
  %202 = load i32, ptr %19, align 4
  %203 = lshr i32 %202, 1
  %204 = and i32 %203, 1
  %205 = load i32, ptr %28, align 4
  %206 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 21, i32 16
  %207 = load i32, ptr %206, align 8
  %208 = tail call i32 @rb_alloc_aux(ptr noundef nonnull %150, ptr noundef %4, i32 noundef %205, i32 noundef %147, i32 noundef %207, i32 noundef %204) #27
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %234

210:                                              ; preds = %201
  %211 = getelementptr inbounds %struct.perf_buffer, ptr %150, i32 0, i32 27
  store i32 %159, ptr %211, align 4
  br label %220

212:                                              ; preds = %196
  %213 = getelementptr inbounds %struct.perf_buffer, ptr %199, i32 0, i32 17
  store volatile i32 1, ptr %213, align 4
  %214 = load ptr, ptr %6, align 8
  %215 = getelementptr inbounds %struct.cred, ptr %214, i32 0, i32 20
  %216 = load ptr, ptr %215, align 4
  %217 = tail call fastcc ptr @get_uid(ptr noundef %216)
  %218 = getelementptr inbounds %struct.perf_buffer, ptr %199, i32 0, i32 19
  store ptr %216, ptr %218, align 4
  %219 = getelementptr inbounds %struct.perf_buffer, ptr %199, i32 0, i32 18
  store i32 %159, ptr %219, align 4
  tail call fastcc void @ring_buffer_attach(ptr noundef %4, ptr noundef nonnull %199)
  tail call fastcc void @perf_event_update_time(ptr noundef %4)
  tail call fastcc void @perf_event_init_userpage(ptr noundef %4)
  tail call void @perf_event_update_userpage(ptr noundef %4)
  br i1 %30, label %220, label %234

220:                                              ; preds = %212, %210, %142, %106
  %221 = phi i32 [ %159, %212 ], [ 0, %142 ], [ 0, %106 ], [ %159, %210 ]
  %222 = phi i32 [ %160, %212 ], [ 0, %142 ], [ 0, %106 ], [ %160, %210 ]
  %223 = getelementptr inbounds %struct.user_struct, ptr %9, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %223) #27, !srcloc !19
  %224 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %223, ptr %223, i32 %222, ptr elementtype(i32) %223) #27, !srcloc !20
  %225 = sext i32 %221 to i64
  %226 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %227 = load ptr, ptr %226, align 4
  %228 = getelementptr inbounds %struct.anon, ptr %227, i32 0, i32 21
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %228) #27, !srcloc !19
  %229 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %228, ptr %228, i64 %225, ptr elementtype(i64) %228) #27, !srcloc !73
  %230 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %230) #27, !srcloc !19
  %231 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %230, ptr %230, i32 1, ptr elementtype(i32) %230) #27, !srcloc !20
  br label %239

232:                                              ; preds = %176
  %233 = icmp eq ptr %150, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %232, %212, %201
  %235 = phi i32 [ -1, %232 ], [ %208, %201 ], [ %149, %212 ]
  %236 = phi ptr [ %150, %232 ], [ %150, %201 ], [ %199, %212 ]
  %237 = getelementptr inbounds %struct.perf_buffer, ptr %236, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %237) #27, !srcloc !19
  %238 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %237, ptr %237, i32 1, ptr elementtype(i32) %237) #27, !srcloc !59
  br label %239

239:                                              ; preds = %234, %232, %220, %196, %132, %96, %93, %87, %79, %76, %69, %60, %44, %39
  %240 = phi i32 [ %235, %234 ], [ -1, %232 ], [ 0, %220 ], [ -22, %39 ], [ -22, %44 ], [ -22, %60 ], [ -22, %69 ], [ -22, %79 ], [ -22, %76 ], [ -22, %93 ], [ -22, %87 ], [ -22, %96 ], [ -12, %196 ], [ -22, %132 ]
  %241 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 37
  tail call void @mutex_unlock(ptr noundef %241) #27
  %242 = load i32, ptr %19, align 4
  %243 = or i32 %242, 67502080
  store i32 %243, ptr %19, align 4
  %244 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 12
  store ptr @perf_mmap_vmops, ptr %244, align 4
  %245 = getelementptr inbounds %struct.perf_event, ptr %4, i32 0, i32 12
  %246 = load ptr, ptr %245, align 8
  %247 = getelementptr inbounds %struct.pmu, ptr %246, i32 0, i32 17
  %248 = load ptr, ptr %247, align 4
  %249 = icmp eq ptr %248, null
  br i1 %249, label %253, label %250

250:                                              ; preds = %239
  %251 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 6
  %252 = load ptr, ptr %251, align 4
  tail call void %248(ptr noundef %4, ptr noundef %252) #27
  br label %253

253:                                              ; preds = %250, %239, %114, %108, %35, %18, %13
  %254 = phi i32 [ -22, %13 ], [ -22, %18 ], [ -22, %108 ], [ -22, %114 ], [ %240, %250 ], [ %240, %239 ], [ -22, %35 ]
  ret i32 %254
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_release(ptr nocapture noundef readnone %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @perf_event_release_kernel(ptr noundef %4)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_fasync(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 2
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 15
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 24
  tail call void @down_write(ptr noundef %8) #27
  %9 = getelementptr inbounds %struct.perf_event, ptr %7, i32 0, i32 44
  %10 = tail call i32 @fasync_helper(i32 noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %9) #27
  tail call void @up_write(ptr noundef %8) #27
  %11 = tail call i32 @llvm.smin.i32(i32 %10, i32 0)
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__perf_read_group_add(ptr noundef %0, i64 noundef %1, ptr nocapture noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %5 = load ptr, ptr %4, align 8
  %6 = tail call fastcc i32 @perf_event_read(ptr noundef %0, i1 noundef zeroext true)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %94

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %5, i32 0, i32 1
  %10 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %9) #27
  %11 = and i64 %1, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 18
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 28
  %17 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %16, ptr elementtype(i64) %16) #27, !srcloc !25
  %18 = add i64 %17, %15
  %19 = getelementptr i64, ptr %2, i32 1
  %20 = load i64, ptr %19, align 8
  %21 = add i64 %18, %20
  store i64 %21, ptr %19, align 8
  br label %22

22:                                               ; preds = %13, %8
  %23 = phi i32 [ 2, %13 ], [ 1, %8 ]
  %24 = and i64 %1, 2
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 19
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 29
  %30 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %29, ptr elementtype(i64) %29) #27, !srcloc !25
  %31 = add i64 %30, %28
  %32 = add nuw nsw i32 %23, 1
  %33 = getelementptr i64, ptr %2, i32 %23
  %34 = load i64, ptr %33, align 8
  %35 = add i64 %31, %34
  store i64 %35, ptr %33, align 8
  br label %36

36:                                               ; preds = %26, %22
  %37 = phi i32 [ %32, %26 ], [ %23, %22 ]
  %38 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  %39 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %38, ptr elementtype(i64) %38) #27, !srcloc !25
  %40 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 17
  %41 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %40, ptr elementtype(i64) %40) #27, !srcloc !25
  %42 = add i64 %41, %39
  %43 = add nuw nsw i32 %37, 1
  %44 = getelementptr i64, ptr %2, i32 %37
  %45 = load i64, ptr %44, align 8
  %46 = add i64 %42, %45
  store i64 %46, ptr %44, align 8
  %47 = and i64 %1, 4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %51 = load ptr, ptr %50, align 4
  %52 = icmp eq ptr %51, null
  %53 = select i1 %52, ptr %0, ptr %51
  %54 = getelementptr inbounds %struct.perf_event, ptr %53, i32 0, i32 58
  %55 = load i64, ptr %54, align 8
  %56 = add nuw nsw i32 %37, 2
  %57 = getelementptr i64, ptr %2, i32 %43
  store i64 %55, ptr %57, align 8
  br label %58

58:                                               ; preds = %49, %36
  %59 = phi i32 [ %56, %49 ], [ %43, %36 ]
  %60 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %61 = load ptr, ptr %60, align 4
  %62 = icmp eq ptr %61, %0
  br i1 %62, label %63, label %93

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %65 = load ptr, ptr %64, align 8
  %66 = icmp eq ptr %65, %64
  br i1 %66, label %93, label %67

67:                                               ; preds = %89, %63
  %68 = phi ptr [ %91, %89 ], [ %65, %63 ]
  %69 = phi i32 [ %90, %89 ], [ %59, %63 ]
  %70 = getelementptr i8, ptr %68, i32 96
  %71 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %70, ptr elementtype(i64) %70) #27, !srcloc !25
  %72 = getelementptr i8, ptr %68, i32 104
  %73 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %72, ptr elementtype(i64) %72) #27, !srcloc !25
  %74 = add i64 %73, %71
  %75 = add i32 %69, 1
  %76 = getelementptr i64, ptr %2, i32 %69
  %77 = load i64, ptr %76, align 8
  %78 = add i64 %74, %77
  store i64 %78, ptr %76, align 8
  br i1 %48, label %89, label %79

79:                                               ; preds = %67
  %80 = getelementptr i8, ptr %68, i32 -8
  %81 = getelementptr i8, ptr %68, i32 492
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  %84 = select i1 %83, ptr %80, ptr %82
  %85 = getelementptr inbounds %struct.perf_event, ptr %84, i32 0, i32 58
  %86 = load i64, ptr %85, align 8
  %87 = add i32 %69, 2
  %88 = getelementptr i64, ptr %2, i32 %75
  store i64 %86, ptr %88, align 8
  br label %89

89:                                               ; preds = %79, %67
  %90 = phi i32 [ %87, %79 ], [ %75, %67 ]
  %91 = load ptr, ptr %68, align 8
  %92 = icmp eq ptr %91, %64
  br i1 %92, label %93, label %67

93:                                               ; preds = %89, %63, %58
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %9, i32 noundef %10) #27
  br label %94

94:                                               ; preds = %93, %3
  %95 = phi i32 [ 0, %93 ], [ %6, %3 ]
  ret i32 %95
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @_perf_event_reset(ptr noundef %0) unnamed_addr #0 {
  %2 = tail call fastcc i32 @perf_event_read(ptr noundef %0, i1 noundef zeroext false)
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #27, !srcloc !19
  %4 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %3, ptr %3, i64 0) #27, !srcloc !29
  tail call void @perf_event_update_userpage(ptr noundef %0)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strndup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ftrace_profile_set_filter(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_event_addr_filters_apply(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.remote_function_call, align 4
  %3 = alloca %struct.stop_event_data, align 8
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  %7 = select i1 %6, ptr %0, ptr %5
  %8 = getelementptr inbounds %struct.perf_event, ptr %7, i32 0, i32 51
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %10, i32 0, i32 18
  %12 = load volatile ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, inttoptr (i32 -1 to ptr)
  br i1 %13, label %149, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.perf_event, ptr %7, i32 0, i32 51, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %14
  %19 = tail call ptr @get_task_mm(ptr noundef %12) #27
  %20 = icmp eq ptr %19, null
  br i1 %20, label %133, label %21

21:                                               ; preds = %18
  %22 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef nonnull %19, i1 noundef zeroext false) #27
  br label %25

25:                                               ; preds = %24, %21
  %26 = getelementptr inbounds %struct.anon, ptr %19, i32 0, i32 15
  tail call void @down_read(ptr noundef %26) #27
  %27 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), align 4
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef nonnull %19, i1 noundef zeroext false, i1 noundef zeroext true) #27
  br label %30

30:                                               ; preds = %29, %25, %14
  %31 = phi ptr [ null, %14 ], [ %19, %25 ], [ %19, %29 ]
  %32 = getelementptr inbounds %struct.perf_event, ptr %7, i32 0, i32 51, i32 1
  %33 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %32) #27
  %34 = load ptr, ptr %8, align 4
  %35 = icmp eq ptr %34, %8
  br i1 %35, label %121, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 52
  br label %38

38:                                               ; preds = %117, %36
  %39 = phi ptr [ %34, %36 ], [ %119, %117 ]
  %40 = phi i32 [ 0, %36 ], [ %118, %117 ]
  %41 = getelementptr inbounds %struct.perf_addr_filter, ptr %39, i32 0, i32 1, i32 1
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, null
  br i1 %43, label %105, label %44

44:                                               ; preds = %38
  %45 = load ptr, ptr %37, align 4
  %46 = getelementptr %struct.perf_addr_filter_range, ptr %45, i32 %40
  store i32 0, ptr %46, align 4
  %47 = load ptr, ptr %37, align 4
  %48 = getelementptr %struct.perf_addr_filter_range, ptr %47, i32 %40, i32 1
  store i32 0, ptr %48, align 4
  %49 = load ptr, ptr %37, align 4
  %50 = getelementptr %struct.perf_addr_filter_range, ptr %49, i32 %40
  %51 = load ptr, ptr %31, align 4
  %52 = icmp eq ptr %51, null
  br i1 %52, label %117, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %struct.perf_addr_filter, ptr %39, i32 0, i32 2
  %55 = getelementptr inbounds %struct.perf_addr_filter, ptr %39, i32 0, i32 3
  br label %56

56:                                               ; preds = %101, %53
  %57 = phi ptr [ %51, %53 ], [ %103, %101 ]
  %58 = getelementptr inbounds %struct.vm_area_struct, ptr %57, i32 0, i32 14
  %59 = load ptr, ptr %58, align 4
  %60 = icmp eq ptr %59, null
  br i1 %60, label %101, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.vm_area_struct, ptr %57, i32 0, i32 1
  %63 = load i32, ptr %62, align 4
  %64 = load i32, ptr %57, align 4
  %65 = sub i32 %63, %64
  %66 = getelementptr inbounds %struct.vm_area_struct, ptr %57, i32 0, i32 13
  %67 = load i32, ptr %66, align 4
  %68 = shl i32 %67, 12
  %69 = load ptr, ptr %41, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %101, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %struct.dentry, ptr %69, i32 0, i32 5
  %73 = load ptr, ptr %72, align 8
  %74 = getelementptr inbounds %struct.file, ptr %59, i32 0, i32 2
  %75 = load ptr, ptr %74, align 8
  %76 = icmp eq ptr %73, %75
  br i1 %76, label %77, label %101

77:                                               ; preds = %71
  %78 = load i32, ptr %54, align 4
  %79 = add i32 %68, %65
  %80 = icmp ugt i32 %78, %79
  br i1 %80, label %101, label %81

81:                                               ; preds = %77
  %82 = load i32, ptr %55, align 4
  %83 = add i32 %82, %78
  %84 = icmp ult i32 %83, %68
  br i1 %84, label %101, label %85

85:                                               ; preds = %81
  %86 = icmp ult i32 %78, %68
  br i1 %86, label %87, label %93

87:                                               ; preds = %85
  store i32 %64, ptr %50, align 4
  %88 = load i32, ptr %55, align 4
  %89 = load i32, ptr %54, align 4
  %90 = sub i32 %88, %68
  %91 = add i32 %90, %89
  %92 = tail call i32 @llvm.umin.i32(i32 %65, i32 %91) #27
  br label %113

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct.vm_area_struct, ptr %57, i32 0, i32 1
  %95 = sub i32 %64, %68
  %96 = add i32 %78, %95
  store i32 %96, ptr %50, align 4
  %97 = load i32, ptr %94, align 4
  %98 = sub i32 %97, %96
  %99 = load i32, ptr %55, align 4
  %100 = tail call i32 @llvm.umin.i32(i32 %98, i32 %99) #27
  br label %113

101:                                              ; preds = %81, %77, %71, %61, %56
  %102 = getelementptr inbounds %struct.vm_area_struct, ptr %57, i32 0, i32 2
  %103 = load ptr, ptr %102, align 4
  %104 = icmp eq ptr %103, null
  br i1 %104, label %117, label %56

105:                                              ; preds = %38
  %106 = getelementptr inbounds %struct.perf_addr_filter, ptr %39, i32 0, i32 2
  %107 = load i32, ptr %106, align 4
  %108 = load ptr, ptr %37, align 4
  %109 = getelementptr %struct.perf_addr_filter_range, ptr %108, i32 %40
  store i32 %107, ptr %109, align 4
  %110 = getelementptr inbounds %struct.perf_addr_filter, ptr %39, i32 0, i32 3
  %111 = load i32, ptr %110, align 4
  %112 = load ptr, ptr %37, align 4
  br label %113

113:                                              ; preds = %105, %93, %87
  %114 = phi ptr [ %112, %105 ], [ %49, %93 ], [ %49, %87 ]
  %115 = phi i32 [ %111, %105 ], [ %100, %93 ], [ %92, %87 ]
  %116 = getelementptr %struct.perf_addr_filter_range, ptr %114, i32 %40, i32 1
  store i32 %115, ptr %116, align 4
  br label %117

117:                                              ; preds = %113, %101, %44
  %118 = add i32 %40, 1
  %119 = load ptr, ptr %39, align 4
  %120 = icmp eq ptr %119, %8
  br i1 %120, label %121, label %38

121:                                              ; preds = %117, %30
  %122 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 53
  %123 = load i32, ptr %122, align 8
  %124 = add i32 %123, 1
  store i32 %124, ptr %122, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %32, i32 noundef %33) #27
  %125 = load i32, ptr %15, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %121
  %128 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), align 4
  %129 = icmp sgt i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @__mmap_lock_do_trace_released(ptr noundef %31, i1 noundef zeroext false) #27
  br label %131

131:                                              ; preds = %130, %127
  %132 = getelementptr inbounds %struct.anon, ptr %31, i32 0, i32 15
  tail call void @up_read(ptr noundef %132) #27
  tail call void @mmput(ptr noundef %31) #27
  br label %133

133:                                              ; preds = %131, %121, %18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #27
  store ptr %0, ptr %3, align 8
  %134 = getelementptr inbounds %struct.stop_event_data, ptr %3, i32 0, i32 1
  store i32 1, ptr %134, align 4
  %135 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %136 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 33
  %137 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 1
  %138 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 2
  %139 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 3
  br label %140

140:                                              ; preds = %143, %133
  %141 = load volatile i32, ptr %135, align 8
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %148

143:                                              ; preds = %140
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !62
  %144 = load volatile i32, ptr %136, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #27
  store i32 0, ptr %2, align 4
  store ptr @__perf_event_stop, ptr %137, align 4
  store ptr %3, ptr %138, align 4
  store i32 -6, ptr %139, align 4
  %145 = call i32 @smp_call_function_single(i32 noundef %144, ptr noundef nonnull @remote_function, ptr noundef nonnull %2, i32 noundef 1) #27
  %146 = load i32, ptr %139, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #27
  %147 = icmp eq i32 %146, -11
  br i1 %147, label %140, label %148

148:                                              ; preds = %143, %140
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #27
  br label %149

149:                                              ; preds = %148, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @match_token(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @match_strdup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kern_path(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_task_mm(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mmput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_start_locking(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_acquire_returned(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_released(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @perf_event_modify_breakpoint(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #27
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %7 = load i32, ptr %6, align 8
  %8 = icmp slt i32 %7, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27
  %9 = load i16, ptr %5, align 4
  %10 = add i16 %9, 1
  store i16 %10, ptr %5, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27
  tail call void asm sideeffect "", "~{memory}"() #27
  br i1 %8, label %12, label %11

11:                                               ; preds = %2
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_disable, ptr noundef null) #27
  br label %12

12:                                               ; preds = %11, %2
  %13 = tail call i32 @modify_user_hw_breakpoint_check(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true) #27
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %12
  %19 = load ptr, ptr %3, align 8
  %20 = getelementptr inbounds %struct.perf_event_context, ptr %19, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %20) #27
  %21 = load i32, ptr %6, align 8
  %22 = icmp ult i32 %21, -2
  br i1 %22, label %23, label %26

23:                                               ; preds = %33, %18
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %24 = load i16, ptr %20, align 4
  %25 = add i16 %24, 1
  store i16 %25, ptr %20, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  br label %41

26:                                               ; preds = %18
  %27 = icmp eq i32 %21, -2
  br i1 %27, label %28, label %38

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 9
  %30 = load i32, ptr %29, align 4
  %31 = and i32 %30, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, %0
  br i1 %36, label %23, label %37

37:                                               ; preds = %33, %28
  store i32 -1, ptr %6, align 8
  br label %38

38:                                               ; preds = %37, %26
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %39 = load i16, ptr %20, align 4
  %40 = add i16 %39, 1
  store i16 %40, ptr %20, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #27, !srcloc !17
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !18
  tail call fastcc void @event_function_call(ptr noundef %0, ptr noundef nonnull @__perf_event_enable, ptr noundef null) #27
  br label %41

41:                                               ; preds = %38, %23, %12
  ret i32 %13
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @modify_user_hw_breakpoint_check(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_alloc(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @get_uid(ptr noundef returned %0) unnamed_addr #5 {
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #27, !srcloc !19
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #27, !srcloc !32
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5, !prof !12

5:                                                ; preds = %1
  %6 = add i32 %3, 1
  %7 = or i32 %6, %3
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %11, label %9, !prof !23

9:                                                ; preds = %5, %1
  %10 = phi i32 [ 2, %1 ], [ 1, %5 ]
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef %10) #27
  br label %11

11:                                               ; preds = %9, %5
  ret ptr %0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @perf_event_init_userpage(ptr noundef %0) unnamed_addr #0 {
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 39
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_buffer, ptr %3, i32 0, i32 33
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %7, i32 0, i32 7
  %9 = load i64, ptr %8, align 8
  %10 = or i64 %9, 2
  store i64 %10, ptr %8, align 8
  %11 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %7, i32 0, i32 13
  store i32 96, ptr %11, align 8
  %12 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %7, i32 0, i32 20
  store i64 4096, ptr %12, align 8
  %13 = getelementptr inbounds %struct.perf_buffer, ptr %3, i32 0, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.perf_buffer, ptr %3, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = add i32 %16, 12
  %18 = shl i32 %14, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %struct.perf_event_mmap_page, ptr %7, i32 0, i32 21
  store i64 %19, ptr %20, align 8
  br label %21

21:                                               ; preds = %5, %1
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rb_alloc_aux(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_mmap_open(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.perf_event, ptr %5, i32 0, i32 38
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %6, ptr %6, i32 1, ptr elementtype(i32) %6) #27, !srcloc !20
  %8 = getelementptr inbounds %struct.perf_event, ptr %5, i32 0, i32 39
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.perf_buffer, ptr %9, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %10) #27, !srcloc !19
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %10, ptr %10, i32 1, ptr elementtype(i32) %10) #27, !srcloc !20
  %12 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 13
  %13 = load i32, ptr %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %1
  %16 = load ptr, ptr %8, align 4
  %17 = getelementptr inbounds %struct.perf_buffer, ptr %16, i32 0, i32 26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #27, !srcloc !19
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %17, ptr %17, i32 1, ptr elementtype(i32) %17) #27, !srcloc !20
  br label %19

19:                                               ; preds = %15, %1
  %20 = getelementptr inbounds %struct.perf_event, ptr %5, i32 0, i32 12
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.pmu, ptr %21, i32 0, i32 17
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 6
  %27 = load ptr, ptr %26, align 4
  tail call void %23(ptr noundef %5, ptr noundef %27) #27
  br label %28

28:                                               ; preds = %25, %19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_mmap_close(ptr nocapture noundef readonly %0) #0 {
  %2 = alloca %struct.remote_function_call, align 4
  %3 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 14
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 15
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 32
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, ptr %6, ptr %8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %11 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 39
  %12 = load volatile ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %38, label %14

14:                                               ; preds = %1
  %15 = load volatile i32, ptr %12, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %27, %14
  %18 = phi i32 [ %25, %27 ], [ %15, %14 ]
  %19 = add i32 %18, 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %12) #27, !srcloc !19
  br label %20

20:                                               ; preds = %20, %17
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr nonnull elementtype(i32) %12, ptr nonnull %12, i32 %18, i32 %19, ptr nonnull elementtype(i32) %12) #27, !srcloc !37
  %22 = extractvalue { i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = extractvalue { i32, i32 } %21, 1
  %26 = icmp eq i32 %25, %18
  br i1 %26, label %29, label %27, !prof !23

27:                                               ; preds = %24
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %29, label %17

29:                                               ; preds = %27, %24, %14
  %30 = phi i32 [ 0, %14 ], [ %18, %24 ], [ 0, %27 ]
  %31 = add i32 %30, 1
  %32 = or i32 %31, %30
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %35, label %34, !prof !23

34:                                               ; preds = %29
  tail call void @refcount_warn_saturate(ptr noundef nonnull %12, i32 noundef 0) #27
  br label %35

35:                                               ; preds = %34, %29
  %36 = icmp eq i32 %30, 0
  %37 = select i1 %36, ptr null, ptr %12
  br label %38

38:                                               ; preds = %35, %1
  %39 = phi ptr [ null, %1 ], [ %37, %35 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %40 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 19
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 18
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 4
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 3
  %47 = load i32, ptr %46, align 4
  %48 = add i32 %47, 12
  %49 = shl i32 %45, %48
  %50 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 12
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr inbounds %struct.pmu, ptr %51, i32 0, i32 18
  %53 = load ptr, ptr %52, align 4
  %54 = icmp eq ptr %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %38
  %56 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 6
  %57 = load ptr, ptr %56, align 4
  tail call void %53(ptr noundef %6, ptr noundef %57) #27
  br label %58

58:                                               ; preds = %55, %38
  %59 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 24
  %60 = load i32, ptr %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %134, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 13
  %64 = load i32, ptr %63, align 4
  %65 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 23
  %66 = load i32, ptr %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %134

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 26
  %70 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 37
  %71 = tail call i32 @atomic_dec_and_mutex_lock(ptr noundef %69, ptr noundef %70) #27
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %134, label %73

73:                                               ; preds = %68
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %74 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 39
  %75 = load ptr, ptr %74, align 4
  %76 = getelementptr inbounds %struct.perf_buffer, ptr %75, i32 0, i32 16
  %77 = load volatile ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, %76
  br i1 %78, label %113, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 1
  %81 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 2
  %82 = getelementptr inbounds %struct.remote_function_call, ptr %2, i32 0, i32 3
  br label %83

83:                                               ; preds = %110, %79
  %84 = phi ptr [ %75, %79 ], [ %111, %110 ]
  %85 = phi ptr [ %77, %79 ], [ %112, %110 ]
  %86 = getelementptr i8, ptr %85, i32 -44
  %87 = load i32, ptr %86, align 4
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = getelementptr i8, ptr %85, i32 -48
  %91 = load volatile i32, ptr %90, align 8
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %105, label %93

93:                                               ; preds = %89, %83
  %94 = phi i32 [ %91, %89 ], [ %87, %83 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #27
  store i32 0, ptr %2, align 4
  store ptr @__perf_pmu_output_stop, ptr %80, align 4
  store ptr %6, ptr %81, align 4
  store i32 -6, ptr %82, align 4
  %95 = call i32 @smp_call_function_single(i32 noundef %94, ptr noundef nonnull @remote_function, ptr noundef nonnull %2, i32 noundef 1) #27
  %96 = load i32, ptr %82, align 4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #27
  %97 = icmp eq i32 %96, -11
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = load ptr, ptr %74, align 4
  br label %105

100:                                              ; preds = %93
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %101 = load ptr, ptr %74, align 4
  %102 = getelementptr inbounds %struct.perf_buffer, ptr %101, i32 0, i32 16
  %103 = load volatile ptr, ptr %102, align 4
  %104 = icmp eq ptr %103, %102
  br i1 %104, label %113, label %110

105:                                              ; preds = %98, %89
  %106 = phi ptr [ %99, %98 ], [ %84, %89 ]
  %107 = load volatile ptr, ptr %85, align 4
  %108 = getelementptr inbounds %struct.perf_buffer, ptr %106, i32 0, i32 16
  %109 = icmp eq ptr %107, %108
  br i1 %109, label %113, label %110

110:                                              ; preds = %105, %100
  %111 = phi ptr [ %106, %105 ], [ %101, %100 ]
  %112 = phi ptr [ %107, %105 ], [ %103, %100 ]
  br label %83

113:                                              ; preds = %105, %100, %73
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %114 = load i32, ptr %59, align 4
  %115 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 27
  %116 = load i32, ptr %115, align 4
  %117 = sub i32 %114, %116
  %118 = getelementptr inbounds %struct.user_struct, ptr %41, i32 0, i32 6
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %118) #27, !srcloc !19
  %119 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %118, ptr %118, i32 %117, ptr elementtype(i32) %118) #27, !srcloc !59
  %120 = load i32, ptr %115, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 6
  %123 = load ptr, ptr %122, align 4
  %124 = getelementptr inbounds %struct.anon, ptr %123, i32 0, i32 21
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %124) #27, !srcloc !19
  %125 = call { i64, i32 } asm sideeffect "@ atomic64_sub\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09subs ${0:Q}, ${0:Q}, ${4:Q}\0A\09sbc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %124, ptr %124, i64 %121, ptr elementtype(i64) %124) #27, !srcloc !115
  call void @rb_free_aux(ptr noundef %39) #27
  %126 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 29
  %127 = load volatile i32, ptr %126, align 4
  %128 = icmp ne i32 %127, 0
  %129 = load i1, ptr @perf_mmap_close.__already_done, align 1
  %130 = xor i1 %129, true
  %131 = select i1 %128, i1 %130, i1 false
  br i1 %131, label %132, label %133, !prof !12

132:                                              ; preds = %113
  store i1 true, ptr @perf_mmap_close.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6167, i32 noundef 9, ptr noundef null) #27
  br label %133

133:                                              ; preds = %132, %113
  call void @mutex_unlock(ptr noundef %70) #27
  br label %134

134:                                              ; preds = %133, %68, %62, %58
  %135 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 17
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %135) #27, !srcloc !19
  %136 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %135, ptr %135, i32 1, ptr elementtype(i32) %135) #27, !srcloc !34
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %137 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 38
  %138 = getelementptr inbounds %struct.perf_event, ptr %6, i32 0, i32 37
  %139 = call i32 @atomic_dec_and_mutex_lock(ptr noundef %137, ptr noundef %138) #27
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %180, label %141

141:                                              ; preds = %134
  %142 = extractvalue { i32, i32 } %136, 0
  %143 = icmp eq i32 %142, 0
  call fastcc void @ring_buffer_attach(ptr noundef %6, ptr noundef null)
  call void @mutex_unlock(ptr noundef %138) #27
  br i1 %143, label %144, label %180

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 16
  br label %146

146:                                              ; preds = %167, %144
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  br label %147

147:                                              ; preds = %151, %146
  %148 = phi ptr [ %145, %146 ], [ %149, %151 ]
  %149 = load volatile ptr, ptr %148, align 4
  %150 = icmp eq ptr %149, %145
  br i1 %150, label %169, label %151

151:                                              ; preds = %147
  %152 = getelementptr i8, ptr %149, i32 -100
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %152) #27, !srcloc !19
  %153 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %152, ptr %152, i32 0, i32 1, ptr elementtype(i32) %152) #27, !srcloc !84
  %154 = extractvalue { i32, i32, i32 } %153, 0
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %147, label %156

156:                                              ; preds = %151
  %157 = getelementptr i8, ptr %149, i32 -552
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %158 = getelementptr i8, ptr %149, i32 -28
  call void @mutex_lock(ptr noundef %158) #27
  %159 = getelementptr i8, ptr %149, i32 -4
  %160 = load ptr, ptr %159, align 4
  %161 = icmp eq ptr %160, %39
  br i1 %161, label %162, label %163

162:                                              ; preds = %156
  call fastcc void @ring_buffer_attach(ptr noundef %157, ptr noundef null)
  br label %163

163:                                              ; preds = %162, %156
  call void @mutex_unlock(ptr noundef %158) #27
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !33
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %152) #27, !srcloc !19
  %164 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %152, ptr %152, i32 1, ptr elementtype(i32) %152) #27, !srcloc !34
  %165 = extractvalue { i32, i32 } %164, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !35
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %168, %163
  br label %146

168:                                              ; preds = %163
  call fastcc void @_free_event(ptr noundef %157) #27
  br label %167

169:                                              ; preds = %147
  call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  %170 = lshr i32 %49, 12
  %171 = sub i32 1, %43
  %172 = add i32 %171, %170
  %173 = getelementptr inbounds %struct.user_struct, ptr %41, i32 0, i32 6
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %173) #27, !srcloc !19
  %174 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %173, ptr %173, i32 %172, ptr elementtype(i32) %173) #27, !srcloc !59
  %175 = sext i32 %43 to i64
  %176 = getelementptr inbounds %struct.vm_area_struct, ptr %0, i32 0, i32 6
  %177 = load ptr, ptr %176, align 4
  %178 = getelementptr inbounds %struct.anon, ptr %177, i32 0, i32 21
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %178) #27, !srcloc !19
  %179 = call { i64, i32 } asm sideeffect "@ atomic64_sub\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09subs ${0:Q}, ${0:Q}, ${4:Q}\0A\09sbc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %178, ptr %178, i64 %175, ptr elementtype(i64) %178) #27, !srcloc !115
  call void @free_uid(ptr noundef %41) #27
  br label %180

180:                                              ; preds = %169, %141, %134
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !41
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %39) #27, !srcloc !19
  %181 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %39, ptr %39, i32 1, ptr elementtype(i32) %39) #27, !srcloc !42
  %182 = extractvalue { i32, i32, i32 } %181, 0
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = icmp sgt i32 %182, 0
  br i1 %185, label %197, label %186, !prof !23

186:                                              ; preds = %184
  call void @refcount_warn_saturate(ptr noundef %39, i32 noundef 3) #27
  br label %197

187:                                              ; preds = %180
  call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !43
  %188 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 16
  %189 = load volatile ptr, ptr %188, align 4
  %190 = icmp ne ptr %189, %188
  %191 = load i1, ptr @ring_buffer_put.__already_done, align 1
  %192 = xor i1 %191, true
  %193 = select i1 %190, i1 %192, i1 false
  br i1 %193, label %194, label %195, !prof !12

194:                                              ; preds = %187
  store i1 true, ptr @ring_buffer_put.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 6105, i32 noundef 9, ptr noundef null) #27
  br label %195

195:                                              ; preds = %194, %187
  %196 = getelementptr inbounds %struct.perf_buffer, ptr %39, i32 0, i32 1
  call void @call_rcu(ptr noundef %196, ptr noundef nonnull @rb_free_rcu) #27
  br label %197

197:                                              ; preds = %195, %186, %184
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_mmap_fault(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.vm_fault, ptr %0, i32 0, i32 1
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.anon.4, ptr %0, i32 0, i32 2
  %8 = load i32, ptr %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i32 0, i32 2
  br label %58

11:                                               ; preds = %1
  %12 = load ptr, ptr %0, align 4
  %13 = getelementptr inbounds %struct.vm_area_struct, ptr %12, i32 0, i32 14
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.file, ptr %14, i32 0, i32 15
  %16 = load ptr, ptr %15, align 8
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %17 = getelementptr inbounds %struct.perf_event, ptr %16, i32 0, i32 39
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.anon.4, ptr %0, i32 0, i32 2
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = load i32, ptr %2, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %56

28:                                               ; preds = %24, %20
  %29 = tail call ptr @perf_mmap_to_page(ptr noundef nonnull %18, i32 noundef %22) #27
  %30 = getelementptr inbounds %struct.vm_fault, ptr %0, i32 0, i32 6
  store ptr %29, ptr %30, align 4
  %31 = icmp eq ptr %29, null
  br i1 %31, label %56, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.page, ptr %29, i32 0, i32 1
  %34 = load volatile i32, ptr %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37, !prof !23

37:                                               ; preds = %32
  %38 = add i32 %34, -1
  br label %41

39:                                               ; preds = %32
  %40 = ptrtoint ptr %29 to i32
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %43 = inttoptr i32 %42 to ptr
  %44 = getelementptr inbounds %struct.page, ptr %43, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %44) #27, !srcloc !19
  %45 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %44, ptr %44, i32 1, ptr elementtype(i32) %44) #27, !srcloc !20
  %46 = load ptr, ptr %0, align 4
  %47 = getelementptr inbounds %struct.vm_area_struct, ptr %46, i32 0, i32 14
  %48 = load ptr, ptr %47, align 4
  %49 = getelementptr inbounds %struct.file, ptr %48, i32 0, i32 17
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %30, align 4
  %52 = getelementptr inbounds %struct.page, ptr %51, i32 0, i32 1, i32 0, i32 1
  store ptr %50, ptr %52, align 4
  %53 = load i32, ptr %21, align 4
  %54 = load ptr, ptr %30, align 4
  %55 = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1, i32 0, i32 2
  store i32 %53, ptr %55, align 4
  br label %56

56:                                               ; preds = %41, %28, %24, %11
  %57 = phi i32 [ 2, %24 ], [ 0, %41 ], [ 2, %28 ], [ 2, %11 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  br label %58

58:                                               ; preds = %56, %6
  %59 = phi i32 [ %10, %6 ], [ %57, %56 ]
  ret i32 %59
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_dec_and_mutex_lock(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_free_aux(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_uid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @__perf_pmu_output_stop(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.pmu, ptr %4, i32 0, i32 9
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #19, !srcloc !11
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 39
  %14 = load ptr, ptr %13, align 4
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !24
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %12, i32 0, i32 6
  %16 = load volatile ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, %15
  br i1 %17, label %95, label %18

18:                                               ; preds = %91, %1
  %19 = phi i32 [ %92, %91 ], [ 0, %1 ]
  %20 = phi ptr [ %93, %91 ], [ %16, %1 ]
  %21 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 14
  %22 = load i32, ptr %21, align 8
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %91, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 34
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = tail call ptr @llvm.thread.pointer() #27
  %30 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 2
  %31 = load i32, ptr %30, align 8
  %32 = icmp eq i32 %26, %31
  br i1 %32, label %33, label %91

33:                                               ; preds = %28, %24
  %34 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 12
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.pmu, ptr %35, i32 0, i32 37
  %37 = load ptr, ptr %36, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call i32 %37(ptr noundef %20) #27
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %91, label %42

42:                                               ; preds = %39, %33
  %43 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 11
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, %20
  br i1 %45, label %46, label %64

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 1
  br label %48

48:                                               ; preds = %61, %46
  %49 = phi ptr [ %47, %46 ], [ %50, %61 ]
  %50 = load ptr, ptr %49, align 8
  %51 = icmp eq ptr %50, %47
  br i1 %51, label %64, label %52

52:                                               ; preds = %48
  %53 = getelementptr i8, ptr %50, i32 80
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %struct.pmu, ptr %54, i32 0, i32 37
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = getelementptr i8, ptr %50, i32 -8
  %60 = tail call i32 %56(ptr noundef %59) #27
  br label %61

61:                                               ; preds = %58, %52
  %62 = phi i32 [ %60, %58 ], [ 1, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %48

64:                                               ; preds = %48, %42
  %65 = load ptr, ptr %34, align 8
  %66 = getelementptr inbounds %struct.pmu, ptr %65, i32 0, i32 31
  %67 = load ptr, ptr %66, align 4
  %68 = icmp eq ptr %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 32
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  %73 = select i1 %72, ptr %20, ptr %71
  %74 = getelementptr inbounds %struct.perf_event, ptr %73, i32 0, i32 39
  %75 = load volatile ptr, ptr %74, align 4
  %76 = icmp eq ptr %75, %14
  br i1 %76, label %77, label %91

77:                                               ; preds = %69
  %78 = load volatile i32, ptr %21, align 8
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %91

80:                                               ; preds = %77
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !98
  %81 = getelementptr inbounds %struct.perf_event, ptr %20, i32 0, i32 33
  %82 = load volatile i32, ptr %81, align 8
  %83 = tail call ptr @llvm.thread.pointer() #27
  %84 = getelementptr inbounds %struct.thread_info, ptr %83, i32 0, i32 2
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %82, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %80
  %88 = load ptr, ptr %34, align 8
  %89 = getelementptr inbounds %struct.pmu, ptr %88, i32 0, i32 22
  %90 = load ptr, ptr %89, align 4
  tail call void %90(ptr noundef %20, i32 noundef 4) #27
  br label %91

91:                                               ; preds = %87, %80, %77, %69, %64, %61, %39, %28, %18
  %92 = phi i32 [ %19, %18 ], [ %19, %39 ], [ %19, %28 ], [ %19, %64 ], [ %19, %69 ], [ 0, %77 ], [ -11, %80 ], [ 0, %87 ], [ %19, %61 ]
  %93 = load volatile ptr, ptr %20, align 8
  %94 = icmp eq ptr %93, %15
  br i1 %94, label %95, label %18

95:                                               ; preds = %91, %1
  %96 = phi i32 [ 0, %1 ], [ %92, %91 ]
  %97 = getelementptr inbounds %struct.perf_cpu_context, ptr %12, i32 0, i32 1
  %98 = load ptr, ptr %97, align 8
  %99 = icmp eq ptr %98, null
  br i1 %99, label %181, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.perf_event_context, ptr %98, i32 0, i32 6
  %102 = load volatile ptr, ptr %101, align 8
  %103 = icmp eq ptr %102, %101
  br i1 %103, label %181, label %104

104:                                              ; preds = %177, %100
  %105 = phi i32 [ %178, %177 ], [ %96, %100 ]
  %106 = phi ptr [ %179, %177 ], [ %102, %100 ]
  %107 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 14
  %108 = load i32, ptr %107, align 8
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %177, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 34
  %112 = load i32, ptr %111, align 4
  %113 = icmp eq i32 %112, -1
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = tail call ptr @llvm.thread.pointer() #27
  %116 = getelementptr inbounds %struct.thread_info, ptr %115, i32 0, i32 2
  %117 = load i32, ptr %116, align 8
  %118 = icmp eq i32 %112, %117
  br i1 %118, label %119, label %177

119:                                              ; preds = %114, %110
  %120 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 12
  %121 = load ptr, ptr %120, align 8
  %122 = getelementptr inbounds %struct.pmu, ptr %121, i32 0, i32 37
  %123 = load ptr, ptr %122, align 4
  %124 = icmp eq ptr %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %119
  %126 = tail call i32 %123(ptr noundef %106) #27
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %177, label %128

128:                                              ; preds = %125, %119
  %129 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 11
  %130 = load ptr, ptr %129, align 4
  %131 = icmp eq ptr %130, %106
  br i1 %131, label %132, label %150

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 1
  br label %134

134:                                              ; preds = %147, %132
  %135 = phi ptr [ %133, %132 ], [ %136, %147 ]
  %136 = load ptr, ptr %135, align 8
  %137 = icmp eq ptr %136, %133
  br i1 %137, label %150, label %138

138:                                              ; preds = %134
  %139 = getelementptr i8, ptr %136, i32 80
  %140 = load ptr, ptr %139, align 8
  %141 = getelementptr inbounds %struct.pmu, ptr %140, i32 0, i32 37
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = getelementptr i8, ptr %136, i32 -8
  %146 = tail call i32 %142(ptr noundef %145) #27
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ 1, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %177, label %134

150:                                              ; preds = %134, %128
  %151 = load ptr, ptr %120, align 8
  %152 = getelementptr inbounds %struct.pmu, ptr %151, i32 0, i32 31
  %153 = load ptr, ptr %152, align 4
  %154 = icmp eq ptr %153, null
  br i1 %154, label %177, label %155

155:                                              ; preds = %150
  %156 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 32
  %157 = load ptr, ptr %156, align 4
  %158 = icmp eq ptr %157, null
  %159 = select i1 %158, ptr %106, ptr %157
  %160 = getelementptr inbounds %struct.perf_event, ptr %159, i32 0, i32 39
  %161 = load volatile ptr, ptr %160, align 4
  %162 = icmp eq ptr %161, %14
  br i1 %162, label %163, label %177

163:                                              ; preds = %155
  %164 = load volatile i32, ptr %107, align 8
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %177

166:                                              ; preds = %163
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !98
  %167 = getelementptr inbounds %struct.perf_event, ptr %106, i32 0, i32 33
  %168 = load volatile i32, ptr %167, align 8
  %169 = tail call ptr @llvm.thread.pointer() #27
  %170 = getelementptr inbounds %struct.thread_info, ptr %169, i32 0, i32 2
  %171 = load i32, ptr %170, align 8
  %172 = icmp eq i32 %168, %171
  br i1 %172, label %173, label %177

173:                                              ; preds = %166
  %174 = load ptr, ptr %120, align 8
  %175 = getelementptr inbounds %struct.pmu, ptr %174, i32 0, i32 22
  %176 = load ptr, ptr %175, align 4
  tail call void %176(ptr noundef %106, i32 noundef 4) #27
  br label %177

177:                                              ; preds = %173, %166, %163, %155, %150, %147, %125, %114, %104
  %178 = phi i32 [ %105, %104 ], [ %105, %125 ], [ %105, %114 ], [ %105, %150 ], [ %105, %155 ], [ 0, %163 ], [ -11, %166 ], [ 0, %173 ], [ %105, %147 ]
  %179 = load volatile ptr, ptr %106, align 8
  %180 = icmp eq ptr %179, %101
  br i1 %180, label %181, label %104

181:                                              ; preds = %177, %100, %95
  %182 = phi i32 [ %96, %95 ], [ %96, %100 ], [ %178, %177 ]
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !30
  ret i32 %182
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_mmap_to_page(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fasync_helper(i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @inherit_task_group(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, i32 noundef %3, i64 noundef %4, ptr nocapture noundef writeonly %5) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %8 = load i64, ptr %7, align 8
  %9 = and i64 %8, 2
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %104, label %11

11:                                               ; preds = %6
  %12 = and i64 %8, 34359738368
  %13 = icmp ne i64 %12, 0
  %14 = and i64 %4, 65536
  %15 = icmp eq i64 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %104, label %17

17:                                               ; preds = %11
  %18 = and i64 %8, 137438953472
  %19 = icmp eq i64 %18, 0
  %20 = and i64 %4, 4294967296
  %21 = icmp eq i64 %20, 0
  %22 = or i1 %21, %19
  br i1 %22, label %23, label %104

23:                                               ; preds = %17
  %24 = getelementptr %struct.task_struct, ptr %2, i32 0, i32 130, i32 %3
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = load ptr, ptr %1, align 8
  %29 = tail call fastcc ptr @alloc_perf_context(ptr noundef %28, ptr noundef %2)
  %30 = icmp eq ptr %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %27
  store ptr %29, ptr %24, align 4
  br label %32

32:                                               ; preds = %31, %23
  %33 = phi ptr [ %25, %23 ], [ %29, %31 ]
  %34 = tail call fastcc ptr @inherit_event(ptr noundef %0, ptr noundef %2, ptr noundef null, ptr noundef nonnull %33) #27
  %35 = icmp ugt ptr %34, inttoptr (i32 -4096 to ptr)
  br i1 %35, label %101, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 11
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, %0
  br i1 %39, label %40, label %106

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 1
  %42 = load ptr, ptr %41, align 8
  %43 = icmp eq ptr %42, %41
  br i1 %43, label %106, label %44

44:                                               ; preds = %40
  %45 = icmp eq ptr %34, null
  %46 = getelementptr inbounds %struct.perf_event, ptr %34, i32 0, i32 12
  %47 = getelementptr inbounds %struct.perf_event, ptr %34, i32 0, i32 27
  br label %48

48:                                               ; preds = %98, %44
  %49 = phi ptr [ %42, %44 ], [ %99, %98 ]
  %50 = getelementptr i8, ptr %49, i32 -8
  %51 = tail call fastcc ptr @inherit_event(ptr noundef %50, ptr noundef %2, ptr noundef %34, ptr noundef %33) #27
  %52 = icmp ugt ptr %51, inttoptr (i32 -4096 to ptr)
  br i1 %52, label %101, label %53

53:                                               ; preds = %48
  %54 = getelementptr i8, ptr %49, i32 636
  %55 = load ptr, ptr %54, align 4
  %56 = icmp eq ptr %55, %0
  %57 = icmp ne ptr %51, null
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %98

59:                                               ; preds = %53
  br i1 %45, label %104, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %struct.perf_event, ptr %51, i32 0, i32 21, i32 6
  %62 = load i64, ptr %61, align 8
  %63 = and i64 %62, 2147483648
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %83, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.perf_event, ptr %51, i32 0, i32 21, i32 19
  %67 = load i32, ptr %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %104

69:                                               ; preds = %65
  %70 = load ptr, ptr %46, align 8
  %71 = getelementptr inbounds %struct.pmu, ptr %70, i32 0, i32 31
  %72 = load ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, null
  br i1 %73, label %104, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %struct.perf_event, ptr %51, i32 0, i32 12
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.pmu, ptr %76, i32 0, i32 36
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, null
  br i1 %79, label %104, label %80

80:                                               ; preds = %74
  %81 = tail call i32 %78(ptr noundef nonnull %34) #27
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %104, label %83

83:                                               ; preds = %80, %60
  %84 = getelementptr inbounds %struct.perf_event, ptr %51, i32 0, i32 21, i32 19
  %85 = load i32, ptr %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = load ptr, ptr %46, align 8
  %89 = getelementptr inbounds %struct.pmu, ptr %88, i32 0, i32 33
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %104, label %92

92:                                               ; preds = %87, %83
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %47) #27, !srcloc !19
  %93 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %47, ptr %47, i32 0, i32 1, ptr elementtype(i32) %47) #27, !srcloc !84
  %94 = extractvalue { i32, i32, i32 } %93, 0
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %92
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  %97 = getelementptr inbounds %struct.perf_event, ptr %51, i32 0, i32 54
  store ptr %34, ptr %97, align 4
  br label %98

98:                                               ; preds = %96, %53
  %99 = load ptr, ptr %49, align 8
  %100 = icmp eq ptr %99, %41
  br i1 %100, label %106, label %48

101:                                              ; preds = %48, %32
  %102 = phi ptr [ %34, %32 ], [ %51, %48 ]
  %103 = ptrtoint ptr %102 to i32
  br label %104

104:                                              ; preds = %101, %92, %87, %80, %74, %69, %65, %59, %17, %11, %6
  %105 = phi i32 [ 0, %17 ], [ 0, %11 ], [ 0, %6 ], [ %103, %101 ], [ -22, %74 ], [ -22, %69 ], [ -22, %92 ], [ -22, %87 ], [ -22, %80 ], [ -22, %65 ], [ -22, %59 ]
  store i32 0, ptr %5, align 4
  br label %106

106:                                              ; preds = %104, %98, %40, %36, %27
  %107 = phi i32 [ -12, %27 ], [ 0, %36 ], [ 0, %40 ], [ %105, %104 ], [ 0, %98 ]
  ret i32 %107
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @inherit_event(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 14
  %6 = load i32, ptr %5, align 8
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %8 = load ptr, ptr %7, align 4
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, ptr %0, ptr %8
  %11 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 21
  %12 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 34
  %13 = load i32, ptr %12, align 4
  %14 = tail call fastcc ptr @perf_event_alloc(ptr noundef %11, i32 noundef %13, ptr noundef %1, ptr noundef %2, ptr noundef %10, ptr noundef null, ptr noundef null, i32 noundef -1)
  %15 = icmp ugt ptr %14, inttoptr (i32 -4096 to ptr)
  br i1 %15, label %206, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 15
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %47, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 26
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %47

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 12
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds %struct.pmu, ptr %27, i32 0, i32 29
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  store ptr null, ptr %22, align 4
  br label %35

32:                                               ; preds = %25
  %33 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef nonnull %29, i32 noundef 3520) #27
  store ptr %33, ptr %22, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %47

35:                                               ; preds = %32, %31
  %36 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %36) #27, !srcloc !19
  br label %37

37:                                               ; preds = %37, %35
  %38 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %36, ptr %36, i32 1, i32 0, ptr elementtype(i32) %36) #27, !srcloc !37
  %39 = extractvalue { i32, i32 } %38, 0
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %37

41:                                               ; preds = %37
  %42 = extractvalue { i32, i32 } %38, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %46, label %44, !prof !23

44:                                               ; preds = %41
  %45 = load volatile i32, ptr %36, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %45, ptr noundef %14) #27
  br label %206

46:                                               ; preds = %41
  tail call fastcc void @_free_event(ptr noundef %14) #27
  br label %206

47:                                               ; preds = %32, %21, %16
  %48 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 30
  tail call void @mutex_lock(ptr noundef %48) #27
  %49 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 14
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, -4
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !83
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %53) #27, !srcloc !19
  %54 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %53, ptr %53, i32 0, i32 1, ptr elementtype(i32) %53) #27, !srcloc !84
  %55 = extractvalue { i32, i32, i32 } %54, 0
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52, %47
  tail call void @mutex_unlock(ptr noundef %48) #27
  %58 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 27
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !36
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %58) #27, !srcloc !19
  br label %59

59:                                               ; preds = %59, %57
  %60 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %58, ptr %58, i32 1, i32 0, ptr elementtype(i32) %58) #27, !srcloc !37
  %61 = extractvalue { i32, i32 } %60, 0
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %59

63:                                               ; preds = %59
  %64 = extractvalue { i32, i32 } %60, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !38
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %68, label %66, !prof !23

66:                                               ; preds = %63
  %67 = load volatile i32, ptr %58, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 5098, i32 noundef 9, ptr noundef nonnull @.str.28, i32 noundef %67, ptr noundef %14) #27
  br label %206

68:                                               ; preds = %63
  tail call fastcc void @_free_event(ptr noundef %14) #27
  br label %206

69:                                               ; preds = %52
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !85
  %70 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 17
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %70) #27, !srcloc !19
  %71 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %70, ptr %70, i32 1, ptr elementtype(i32) %70) #27, !srcloc !32
  %72 = extractvalue { i32, i32, i32 } %71, 0
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74, !prof !12

74:                                               ; preds = %69
  %75 = add i32 %72, 1
  %76 = or i32 %75, %72
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %80, label %78, !prof !23

78:                                               ; preds = %74, %69
  %79 = phi i32 [ 2, %69 ], [ 1, %74 ]
  tail call void @refcount_warn_saturate(ptr noundef %70, i32 noundef %79) #27
  br label %80

80:                                               ; preds = %78, %74
  %81 = ashr i32 %6, 31
  %82 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 14
  store i32 %81, ptr %82, align 8
  %83 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 21, i32 6
  %84 = load i64, ptr %83, align 8
  %85 = and i64 %84, 1024
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 25, i32 6
  %89 = load i64, ptr %88, align 8
  %90 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 25, i32 6
  store i64 %89, ptr %90, align 8
  %91 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 25, i32 7
  store i64 %89, ptr %91, align 8
  %92 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %92) #27, !srcloc !19
  %93 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %92, ptr %92, i64 %89) #27, !srcloc !29
  br label %94

94:                                               ; preds = %87, %80
  %95 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 26
  store ptr %3, ptr %95, align 8
  %96 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 60
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 60
  store ptr %97, ptr %98, align 4
  %99 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 61
  %100 = load ptr, ptr %99, align 8
  %101 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 61
  store ptr %100, ptr %101, align 8
  %102 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 11
  %103 = load ptr, ptr %102, align 4
  %104 = getelementptr inbounds %struct.perf_event, ptr %103, i32 0, i32 8
  %105 = load i32, ptr %104, align 8
  %106 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 21, i32 5
  %107 = load i64, ptr %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = shl i32 %108, 3
  %110 = and i32 %109, 8
  %111 = and i64 %107, 2
  %112 = icmp eq i64 %111, 0
  %113 = add nuw nsw i32 %110, 8
  %114 = select i1 %112, i32 %110, i32 %113
  %115 = and i64 %107, 4
  %116 = icmp eq i64 %115, 0
  %117 = select i1 %116, i32 8, i32 16
  %118 = and i64 %107, 8
  %119 = icmp eq i64 %118, 0
  %120 = add i32 %105, 1
  %121 = add nuw nsw i32 %114, 8
  %122 = select i1 %119, i32 %114, i32 %121
  %123 = select i1 %119, i32 1, i32 %120
  %124 = mul i32 %117, %123
  %125 = add i32 %122, %124
  %126 = trunc i32 %125 to i16
  %127 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 24
  store i16 %126, ptr %127, align 4
  %128 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 21, i32 4
  %129 = load i64, ptr %128, align 8
  %130 = trunc i64 %129 to i16
  %131 = shl i16 %130, 3
  %132 = and i16 %131, 8
  %133 = and i64 %129, 8
  %134 = icmp eq i64 %133, 0
  %135 = add nuw nsw i16 %132, 8
  %136 = select i1 %134, i16 %132, i16 %135
  %137 = and i64 %129, 256
  %138 = icmp eq i64 %137, 0
  %139 = add nuw nsw i16 %136, 8
  %140 = select i1 %138, i16 %136, i16 %139
  %141 = and i64 %129, 16793600
  %142 = icmp eq i64 %141, 0
  %143 = add nuw nsw i16 %140, 8
  %144 = select i1 %142, i16 %140, i16 %143
  %145 = and i64 %129, 16
  %146 = icmp eq i64 %145, 0
  %147 = select i1 %146, i16 0, i16 %126
  %148 = add i16 %144, %147
  %149 = and i64 %129, 32768
  %150 = icmp eq i64 %149, 0
  %151 = add i16 %148, 8
  %152 = select i1 %150, i16 %148, i16 %151
  %153 = and i64 %129, 131072
  %154 = icmp eq i64 %153, 0
  %155 = add i16 %152, 8
  %156 = select i1 %154, i16 %152, i16 %155
  %157 = and i64 %129, 524288
  %158 = icmp eq i64 %157, 0
  %159 = add i16 %156, 8
  %160 = select i1 %158, i16 %156, i16 %159
  %161 = and i64 %129, 2097152
  %162 = icmp eq i64 %161, 0
  %163 = add i16 %160, 8
  %164 = select i1 %162, i16 %160, i16 %163
  %165 = and i64 %129, 4194304
  %166 = icmp eq i64 %165, 0
  %167 = add i16 %164, 8
  %168 = select i1 %166, i16 %164, i16 %167
  %169 = and i64 %129, 8388608
  %170 = icmp eq i64 %169, 0
  %171 = add i16 %168, 8
  %172 = select i1 %170, i16 %168, i16 %171
  %173 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 22
  store i16 %172, ptr %173, align 8
  %174 = shl i16 %130, 2
  %175 = and i16 %174, 8
  %176 = and i64 %129, 4
  %177 = icmp eq i64 %176, 0
  %178 = add nuw nsw i16 %175, 8
  %179 = select i1 %177, i16 %175, i16 %178
  %180 = and i64 %129, 65536
  %181 = icmp eq i64 %180, 0
  %182 = add nuw nsw i16 %179, 8
  %183 = select i1 %181, i16 %179, i16 %182
  %184 = and i64 %129, 64
  %185 = icmp eq i64 %184, 0
  %186 = add nuw nsw i16 %183, 8
  %187 = select i1 %185, i16 %183, i16 %186
  %188 = and i64 %129, 512
  %189 = icmp eq i64 %188, 0
  %190 = add nuw nsw i16 %187, 8
  %191 = select i1 %189, i16 %187, i16 %190
  %192 = and i64 %129, 128
  %193 = icmp eq i64 %192, 0
  %194 = add nuw nsw i16 %191, 8
  %195 = select i1 %193, i16 %191, i16 %194
  %196 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 23
  store i16 %195, ptr %196, align 2
  %197 = getelementptr inbounds %struct.perf_event_context, ptr %3, i32 0, i32 1
  %198 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %197) #27
  tail call fastcc void @add_event_to_ctx(ptr noundef %14, ptr noundef %3)
  %199 = load i32, ptr %17, align 4
  %200 = or i32 %199, 64
  store i32 %200, ptr %17, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %197, i32 noundef %198) #27
  %201 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 31
  %202 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 31
  %203 = getelementptr inbounds %struct.perf_event, ptr %10, i32 0, i32 31, i32 1
  %204 = load ptr, ptr %203, align 4
  store ptr %201, ptr %203, align 4
  store ptr %202, ptr %201, align 4
  %205 = getelementptr inbounds %struct.perf_event, ptr %14, i32 0, i32 31, i32 1
  store ptr %204, ptr %205, align 4
  store volatile ptr %201, ptr %204, align 4
  tail call void @mutex_unlock(ptr noundef %48) #27
  br label %206

206:                                              ; preds = %94, %68, %66, %46, %44, %4
  %207 = phi ptr [ %14, %94 ], [ inttoptr (i32 -12 to ptr), %46 ], [ %14, %4 ], [ inttoptr (i32 -12 to ptr), %44 ], [ null, %66 ], [ null, %68 ]
  ret ptr %207
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @__perf_event_exit_context(ptr noundef %0) #0 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %struct.pmu, ptr %2, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  %5 = ptrtoint ptr %4 to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %7 = inttoptr i32 %6 to ptr
  %8 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %7) #19, !srcloc !11
  %9 = add i32 %8, %5
  %10 = inttoptr i32 %9 to ptr
  %11 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 1
  tail call void @_raw_spin_lock(ptr noundef %11) #27
  tail call fastcc void @ctx_sched_out(ptr noundef %0, ptr noundef %10, i32 noundef 4)
  %12 = getelementptr inbounds %struct.perf_event_context, ptr %0, i32 0, i32 6
  %13 = load ptr, ptr %12, align 8
  %14 = icmp eq ptr %13, %12
  br i1 %14, label %19, label %15

15:                                               ; preds = %15, %1
  %16 = phi ptr [ %17, %15 ], [ %13, %1 ]
  tail call void @__perf_remove_from_context(ptr noundef %16, ptr noundef %10, ptr noundef %0, ptr noundef nonnull inttoptr (i32 1 to ptr))
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, %12
  br i1 %18, label %19, label %15

19:                                               ; preds = %15, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !13
  %20 = load i16, ptr %11, align 4
  %21 = add i16 %20, 1
  store i16 %21, ptr %11, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #27, !srcloc !14
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #27, !srcloc !15
  tail call void asm sideeffect "", "~{memory}"() #27, !srcloc !16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_swevent_init(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %4 = load i64, ptr %3, align 8
  %5 = load i32, ptr %2, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %85

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %9 = load i64, ptr %8, align 8
  %10 = and i64 %9, 2048
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %85

12:                                               ; preds = %7
  %13 = add i64 %4, -12
  %14 = icmp ult i64 %13, -10
  br i1 %14, label %85, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %85

19:                                               ; preds = %15
  tail call void @mutex_lock(ptr noundef nonnull @pmus_lock) #27
  %20 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #32
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %22 = icmp ult i32 %20, %21
  br i1 %22, label %23, label %81

23:                                               ; preds = %45, %19
  %24 = phi i32 [ %49, %45 ], [ %20, %19 ]
  %25 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %24
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, ptrtoint (ptr @swevent_htable to i32)
  %28 = inttoptr i32 %27 to ptr
  %29 = getelementptr inbounds %struct.swevent_htable, ptr %28, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %29) #27
  %30 = load ptr, ptr %28, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %45

32:                                               ; preds = %23
  %33 = lshr i32 %24, 5
  %34 = getelementptr i32, ptr @perf_online_mask, i32 %33
  %35 = load volatile i32, ptr %34, align 4
  %36 = and i32 %24, 31
  %37 = shl nuw i32 1, %36
  %38 = and i32 %35, %37
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %32
  %41 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %42 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %41, i32 noundef 3520, i32 noundef 1032) #30
  %43 = icmp eq ptr %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %40
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !116
  store volatile ptr %42, ptr %28, align 4
  br label %45

45:                                               ; preds = %44, %32, %23
  %46 = getelementptr inbounds %struct.swevent_htable, ptr %28, i32 0, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = add i32 %47, 1
  store i32 %48, ptr %46, align 4
  tail call void @mutex_unlock(ptr noundef %29) #27
  %49 = tail call i32 @cpumask_next(i32 noundef %24, ptr noundef nonnull @__cpu_possible_mask) #32
  %50 = load i32, ptr @nr_cpu_ids, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %23, label %81

52:                                               ; preds = %40
  tail call void @mutex_unlock(ptr noundef %29) #27
  %53 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #32
  %54 = load i32, ptr @nr_cpu_ids, align 4
  %55 = icmp uge i32 %53, %54
  %56 = icmp eq i32 %53, %24
  %57 = select i1 %55, i1 true, i1 %56
  br i1 %57, label %80, label %58

58:                                               ; preds = %74, %52
  %59 = phi i32 [ %75, %74 ], [ %53, %52 ]
  %60 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %59
  %61 = load i32, ptr %60, align 4
  %62 = add i32 %61, ptrtoint (ptr @swevent_htable to i32)
  %63 = inttoptr i32 %62 to ptr
  %64 = getelementptr inbounds %struct.swevent_htable, ptr %63, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %64) #27
  %65 = getelementptr inbounds %struct.swevent_htable, ptr %63, i32 0, i32 2
  %66 = load i32, ptr %65, align 4
  %67 = add i32 %66, -1
  store i32 %67, ptr %65, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %58
  %70 = load ptr, ptr %63, align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %69
  store volatile ptr null, ptr %63, align 4
  %73 = getelementptr inbounds %struct.swevent_hlist, ptr %70, i32 0, i32 1
  tail call void @kvfree_call_rcu(ptr noundef %73, ptr noundef nonnull inttoptr (i32 1024 to ptr)) #27
  br label %74

74:                                               ; preds = %72, %69, %58
  tail call void @mutex_unlock(ptr noundef %64) #27
  %75 = tail call i32 @cpumask_next(i32 noundef %59, ptr noundef nonnull @__cpu_possible_mask) #32
  %76 = load i32, ptr @nr_cpu_ids, align 4
  %77 = icmp uge i32 %75, %76
  %78 = icmp eq i32 %75, %24
  %79 = select i1 %77, i1 true, i1 %78
  br i1 %79, label %80, label %58

80:                                               ; preds = %74, %52
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  br label %85

81:                                               ; preds = %45, %19
  tail call void @mutex_unlock(ptr noundef nonnull @pmus_lock) #27
  %82 = trunc i64 %4 to i32
  %83 = getelementptr [12 x %struct.static_key], ptr @perf_swevent_enabled, i32 0, i32 %82
  tail call fastcc void @static_key_slow_inc(ptr noundef %83)
  %84 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 55
  store ptr @sw_perf_event_destroy, ptr %84, align 8
  br label %85

85:                                               ; preds = %81, %80, %15, %12, %7, %1
  %86 = phi i32 [ -2, %1 ], [ -95, %7 ], [ -2, %12 ], [ 0, %81 ], [ 0, %15 ], [ -12, %80 ]
  ret i32 %86
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_swevent_add(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %4 = inttoptr i32 %3 to ptr
  %5 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %4) #19, !srcloc !11
  %6 = add i32 %5, ptrtoint (ptr @swevent_htable to i32)
  %7 = inttoptr i32 %6 to ptr
  %8 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %9 = load i64, ptr %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  store i64 %13, ptr %14, align 8
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  br label %16

16:                                               ; preds = %28, %11
  %17 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %15, ptr elementtype(i64) %15) #27, !srcloc !25
  %18 = icmp slt i64 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = add i64 %17, %13
  %21 = tail call i64 @div64_u64(i64 noundef %20, i64 noundef %13) #27
  %22 = mul i64 %21, %13
  %23 = sub i64 %17, %22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !66
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !19
  br label %24

24:                                               ; preds = %24, %19
  %25 = tail call { i32, i64 } asm sideeffect "@ atomic64_cmpxchg\0Aldrexd\09\09$1, ${1:H}, [$3]\0Amov\09\09$0, #0\0Ateq\09\09$1, $4\0Ateqeq\09\09${1:H}, ${4:H}\0Astrexdeq\09$0, $5, ${5:H}, [$3]", "=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i64) %15, ptr %15, i64 %17, i64 %23, ptr elementtype(i64) %15) #27, !srcloc !67
  %26 = extractvalue { i32, i64 } %25, 0
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %24

28:                                               ; preds = %24
  %29 = extractvalue { i32, i64 } %25, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !68
  %30 = icmp eq i64 %29, %17
  br i1 %30, label %31, label %16

31:                                               ; preds = %28, %16, %2
  %32 = and i32 %1, 1
  %33 = xor i32 %32, 1
  %34 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 4
  store i32 %33, ptr %34, align 4
  %35 = load ptr, ptr %7, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %41 = load i64, ptr %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = mul i32 %39, 1640531527
  %44 = xor i32 %43, %42
  %45 = mul i32 %44, 1640531527
  %46 = lshr i32 %45, 24
  %47 = getelementptr [256 x %struct.hlist_head], ptr %35, i32 0, i32 %46
  br label %48

48:                                               ; preds = %37, %31
  %49 = phi ptr [ %47, %37 ], [ null, %31 ]
  %50 = icmp eq ptr %49, null
  %51 = load i1, ptr @perf_swevent_add.__already_done, align 1
  %52 = xor i1 %51, true
  %53 = select i1 %50, i1 %52, i1 false
  br i1 %53, label %54, label %55, !prof !12

54:                                               ; preds = %48
  store i1 true, ptr @perf_swevent_add.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 9590, i32 noundef 9, ptr noundef null) #27
  br label %55

55:                                               ; preds = %54, %48
  br i1 %50, label %64, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 6
  %58 = load ptr, ptr %49, align 4
  store ptr %58, ptr %57, align 4
  %59 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 6, i32 1
  store volatile ptr %49, ptr %59, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !117
  store volatile ptr %57, ptr %49, align 4
  %60 = icmp eq ptr %58, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.hlist_node, ptr %58, i32 0, i32 1
  store volatile ptr %57, ptr %62, align 4
  br label %63

63:                                               ; preds = %61, %56
  tail call void @perf_event_update_userpage(ptr noundef %0)
  br label %64

64:                                               ; preds = %63, %55
  %65 = phi i32 [ 0, %63 ], [ -22, %55 ]
  ret i32 %65
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_swevent_del(ptr noundef %0, i32 noundef %1) #20 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 6
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 6, i32 1
  %6 = load ptr, ptr %5, align 4
  store volatile ptr %4, ptr %6, align 4
  %7 = icmp eq ptr %4, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.hlist_node, ptr %4, i32 0, i32 1
  store volatile ptr %6, ptr %9, align 4
  br label %10

10:                                               ; preds = %8, %2
  store volatile ptr inttoptr (i32 290 to ptr), ptr %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @static_key_slow_inc(ptr noundef %0) unnamed_addr #5 {
  %2 = load i8, ptr @static_key_initialized, align 1, !range !97
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %5, !prof !12

4:                                                ; preds = %1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 290, i32 noundef 9, ptr noundef nonnull @.str.26, ptr noundef nonnull @__func__.static_key_slow_inc, ptr noundef %0) #27
  br label %5

5:                                                ; preds = %4, %1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #27, !srcloc !19
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #27, !srcloc !20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @sw_perf_event_destroy(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %3 = load i64, ptr %2, align 8
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 32
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %8, label %7, !prof !23

7:                                                ; preds = %1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.6, i32 noundef 9707, i32 noundef 9, ptr noundef null) #27
  br label %8

8:                                                ; preds = %7, %1
  %9 = trunc i64 %3 to i32
  %10 = getelementptr [12 x %struct.static_key], ptr @perf_swevent_enabled, i32 0, i32 %9
  %11 = load i8, ptr @static_key_initialized, align 1, !range !97
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %14, !prof !12

13:                                               ; preds = %8
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.25, i32 noundef 296, i32 noundef 9, ptr noundef nonnull @.str.26, ptr noundef nonnull @__func__.static_key_slow_dec, ptr noundef %10) #27
  br label %14

14:                                               ; preds = %13, %8
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %10) #27, !srcloc !19
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %10, ptr %10, i32 1, ptr elementtype(i32) %10) #27, !srcloc !59
  %16 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #32
  %17 = load i32, ptr @nr_cpu_ids, align 4
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %19, label %39

19:                                               ; preds = %35, %14
  %20 = phi i32 [ %36, %35 ], [ %16, %14 ]
  %21 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %22 = load i32, ptr %21, align 4
  %23 = add i32 %22, ptrtoint (ptr @swevent_htable to i32)
  %24 = inttoptr i32 %23 to ptr
  %25 = getelementptr inbounds %struct.swevent_htable, ptr %24, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %25) #27
  %26 = getelementptr inbounds %struct.swevent_htable, ptr %24, i32 0, i32 2
  %27 = load i32, ptr %26, align 4
  %28 = add i32 %27, -1
  store i32 %28, ptr %26, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %19
  %31 = load ptr, ptr %24, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  store volatile ptr null, ptr %24, align 4
  %34 = getelementptr inbounds %struct.swevent_hlist, ptr %31, i32 0, i32 1
  tail call void @kvfree_call_rcu(ptr noundef %34, ptr noundef nonnull inttoptr (i32 1024 to ptr)) #27
  br label %35

35:                                               ; preds = %33, %30, %19
  tail call void @mutex_unlock(ptr noundef %25) #27
  %36 = tail call i32 @cpumask_next(i32 noundef %20, ptr noundef nonnull @__cpu_possible_mask) #32
  %37 = load i32, ptr @nr_cpu_ids, align 4
  %38 = icmp ult i32 %36, %37
  br i1 %38, label %19, label %39

39:                                               ; preds = %35, %14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @cpu_clock_event_init(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %3 = load i32, ptr %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %11 = load i64, ptr %10, align 8
  %12 = and i64 %11, 2048
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %16 = load i64, ptr %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  tail call void @hrtimer_init(ptr noundef %19, i32 noundef 1, i32 noundef 9) #27
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 0, i32 0, i32 6
  store ptr @perf_swevent_hrtimer, ptr %20, align 8
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 1024
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %18
  %26 = load i64, ptr %15, align 8
  %27 = trunc i64 %26 to i32
  %28 = sdiv i32 1000000000, %27
  %29 = sext i32 %28 to i64
  store i64 %29, ptr %15, align 8
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  store i64 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  %32 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %32) #27, !srcloc !19
  %33 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %32, ptr %32, i64 %29) #27, !srcloc !29
  %34 = load i64, ptr %30, align 8
  store i64 %34, ptr %31, align 8
  %35 = load i64, ptr %21, align 8
  %36 = and i64 %35, -1025
  store i64 %36, ptr %21, align 8
  br label %37

37:                                               ; preds = %25, %18, %14, %9, %5, %1
  %38 = phi i32 [ -2, %1 ], [ -2, %5 ], [ -95, %9 ], [ 0, %14 ], [ 0, %18 ], [ 0, %25 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @cpu_clock_event_add(ptr noundef %0, i32 noundef %1) #0 {
  %3 = and i32 %1, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %27, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  %7 = tail call i64 @sched_clock() #27
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  %8 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %6, ptr %6, i64 %7) #27, !srcloc !29
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %11 = load i64, ptr %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  %15 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %14, ptr elementtype(i64) %14) #27, !srcloc !25
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = icmp slt i64 %15, 0
  %19 = select i1 %18, i64 10000, i64 %15
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !19
  %20 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %14, ptr %14, i64 0) #27, !srcloc !29
  br label %25

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %23 = load i64, ptr %22, align 8
  %24 = tail call i64 @llvm.umax.i64(i64 %23, i64 10000) #27
  br label %25

25:                                               ; preds = %21, %17
  %26 = phi i64 [ %19, %17 ], [ %24, %21 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %9, i64 noundef %26, i64 noundef 0, i32 noundef 11) #27
  br label %27

27:                                               ; preds = %25, %5, %2
  tail call void @perf_event_update_userpage(ptr noundef %0)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @cpu_clock_event_del(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %4 = load i64, ptr %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %8 = tail call i64 @__hrtimer_get_remaining(ptr noundef %7, i1 noundef zeroext false) #27
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %9) #27, !srcloc !19
  %10 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %9, ptr %9, i64 %8) #27, !srcloc !29
  %11 = tail call i32 @hrtimer_cancel(ptr noundef %7) #27
  br label %12

12:                                               ; preds = %6, %2
  %13 = tail call i64 @sched_clock() #27
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !19
  %15 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %14, ptr %14, i64 %13, ptr elementtype(i64) %14) #27, !srcloc !27
  %16 = extractvalue { i64, i32 } %15, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %17 = sub i64 %13, %16
  %18 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %18) #27, !srcloc !19
  %19 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %18, ptr %18, i64 %17, ptr elementtype(i64) %18) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @cpu_clock_event_start(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  %4 = tail call i64 @sched_clock() #27
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #27, !srcloc !19
  %5 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %3, ptr %3, i64 %4) #27, !srcloc !29
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %8 = load i64, ptr %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  %12 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %11, ptr elementtype(i64) %11) #27, !srcloc !25
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = icmp slt i64 %12, 0
  %16 = select i1 %15, i64 10000, i64 %12
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #27, !srcloc !19
  %17 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %11, ptr %11, i64 0) #27, !srcloc !29
  br label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %20 = load i64, ptr %19, align 8
  %21 = tail call i64 @llvm.umax.i64(i64 %20, i64 10000) #27
  br label %22

22:                                               ; preds = %18, %14
  %23 = phi i64 [ %16, %14 ], [ %21, %18 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %6, i64 noundef %23, i64 noundef 0, i32 noundef 11) #27
  br label %24

24:                                               ; preds = %22, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @cpu_clock_event_stop(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %4 = load i64, ptr %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %8 = tail call i64 @__hrtimer_get_remaining(ptr noundef %7, i1 noundef zeroext false) #27
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %9) #27, !srcloc !19
  %10 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %9, ptr %9, i64 %8) #27, !srcloc !29
  %11 = tail call i32 @hrtimer_cancel(ptr noundef %7) #27
  br label %12

12:                                               ; preds = %6, %2
  %13 = tail call i64 @sched_clock() #27
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !19
  %15 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %14, ptr %14, i64 %13, ptr elementtype(i64) %14) #27, !srcloc !27
  %16 = extractvalue { i64, i32 } %15, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %17 = sub i64 %13, %16
  %18 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %18) #27, !srcloc !19
  %19 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %18, ptr %18, i64 %17, ptr elementtype(i64) %18) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @cpu_clock_event_read(ptr noundef %0) #0 {
  %2 = tail call i64 @sched_clock() #27
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #27, !srcloc !19
  %4 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %3, ptr %3, i64 %2, ptr elementtype(i64) %3) #27, !srcloc !27
  %5 = extractvalue { i64, i32 } %4, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %6 = sub i64 %2, %5
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #27, !srcloc !19
  %8 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %7, ptr %7, i64 %6, ptr elementtype(i64) %7) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_swevent_hrtimer(ptr noundef %0) #0 {
  %2 = alloca %struct.perf_sample_data, align 64
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %2) #27
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 64 dereferenceable(192) %2, i8 0, i32 192, i1 false), !annotation !48
  %3 = getelementptr i8, ptr %0, i32 -280
  %4 = getelementptr i8, ptr %0, i32 -184
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %72

7:                                                ; preds = %1
  %8 = getelementptr i8, ptr %0, i32 -192
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.pmu, ptr %9, i32 0, i32 23
  %11 = load ptr, ptr %10, align 4
  tail call void %11(ptr noundef %3) #27
  %12 = getelementptr inbounds %struct.hw_perf_event, ptr %0, i32 0, i32 7
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(16) %2, i8 0, i64 16, i1 false)
  store i64 %13, ptr %14, align 16
  %15 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 4
  store i64 0, ptr %15, align 8
  %16 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 6
  store i64 84410401, ptr %16, align 8
  %17 = getelementptr inbounds %struct.perf_sample_data, ptr %2, i32 0, i32 5
  store i64 0, ptr %17, align 32
  %18 = tail call i32 @llvm.read_register.i32(metadata !0) #27
  %19 = inttoptr i32 %18 to ptr
  %20 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %19) #19, !srcloc !11
  %21 = add i32 %20, ptrtoint (ptr @__irq_regs to i32)
  %22 = inttoptr i32 %21 to ptr
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %61, label %25

25:                                               ; preds = %7
  %26 = getelementptr i8, ptr %0, i32 100
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %61

30:                                               ; preds = %25
  %31 = getelementptr i8, ptr %0, i32 -96
  %32 = load i64, ptr %31, align 8
  %33 = and i64 %32, 16
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %37 = load i32, ptr %36, align 4
  %38 = and i32 %37, 15
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %61, label %40

40:                                               ; preds = %35, %30
  %41 = and i64 %32, 32
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %45, 15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %61

48:                                               ; preds = %43, %40
  %49 = and i64 %32, 128
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %48
  %52 = tail call ptr @llvm.thread.pointer() #27
  %53 = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 4
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %61

57:                                               ; preds = %51, %48
  %58 = call fastcc i32 @__perf_event_overflow(ptr noundef %3, i32 noundef 1, ptr noundef nonnull %2, ptr noundef nonnull %23)
  %59 = icmp eq i32 %58, 0
  %60 = zext i1 %59 to i32
  br label %61

61:                                               ; preds = %57, %51, %43, %35, %25, %7
  %62 = phi i32 [ 1, %51 ], [ 1, %7 ], [ %60, %57 ], [ 1, %25 ], [ 1, %35 ], [ 1, %43 ]
  %63 = getelementptr inbounds %struct.hw_perf_event, ptr %0, i32 0, i32 6
  %64 = load i64, ptr %63, align 8
  %65 = call i64 @llvm.umax.i64(i64 %64, i64 10000)
  %66 = getelementptr inbounds %struct.hrtimer, ptr %0, i32 0, i32 3
  %67 = load ptr, ptr %66, align 4
  %68 = getelementptr inbounds %struct.hrtimer_clock_base, ptr %67, i32 0, i32 6
  %69 = load ptr, ptr %68, align 4
  %70 = call i64 %69() #27
  %71 = call i64 @hrtimer_forward(ptr noundef %0, i64 noundef %70, i64 noundef %65) #27
  br label %72

72:                                               ; preds = %61, %1
  %73 = phi i32 [ %62, %61 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %2) #27
  ret i32 %73
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hrtimer_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__hrtimer_get_remaining(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @task_clock_event_init(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21
  %3 = load i32, ptr %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 2
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 1
  br i1 %8, label %9, label %37

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 4
  %11 = load i64, ptr %10, align 8
  %12 = and i64 %11, 2048
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %16 = load i64, ptr %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %37, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  tail call void @hrtimer_init(ptr noundef %19, i32 noundef 1, i32 noundef 9) #27
  %20 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 0, i32 0, i32 6
  store ptr @perf_swevent_hrtimer, ptr %20, align 8
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 6
  %22 = load i64, ptr %21, align 8
  %23 = and i64 %22, 1024
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %18
  %26 = load i64, ptr %15, align 8
  %27 = trunc i64 %26 to i32
  %28 = sdiv i32 1000000000, %27
  %29 = sext i32 %28 to i64
  store i64 %29, ptr %15, align 8
  %30 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  store i64 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7
  %32 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %32) #27, !srcloc !19
  %33 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %32, ptr %32, i64 %29) #27, !srcloc !29
  %34 = load i64, ptr %30, align 8
  store i64 %34, ptr %31, align 8
  %35 = load i64, ptr %21, align 8
  %36 = and i64 %35, -1025
  store i64 %36, ptr %21, align 8
  br label %37

37:                                               ; preds = %25, %18, %14, %9, %5, %1
  %38 = phi i32 [ -2, %1 ], [ -2, %5 ], [ -95, %9 ], [ 0, %14 ], [ 0, %18 ], [ 0, %25 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @task_clock_event_add(ptr noundef %0, i32 noundef %1) #0 {
  %3 = and i32 %1, 1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %30, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.perf_event_context, ptr %8, i32 0, i32 19
  %10 = load i64, ptr %9, align 8
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %6) #27, !srcloc !19
  %11 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %6, ptr %6, i64 %10) #27, !srcloc !29
  %12 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %14 = load i64, ptr %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  %18 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %17, ptr elementtype(i64) %17) #27, !srcloc !25
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = icmp slt i64 %18, 0
  %22 = select i1 %21, i64 10000, i64 %18
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #27, !srcloc !19
  %23 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %17, ptr %17, i64 0) #27, !srcloc !29
  br label %28

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %26 = load i64, ptr %25, align 8
  %27 = tail call i64 @llvm.umax.i64(i64 %26, i64 10000) #27
  br label %28

28:                                               ; preds = %24, %20
  %29 = phi i64 [ %22, %20 ], [ %27, %24 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %12, i64 noundef %29, i64 noundef 0, i32 noundef 11) #27
  br label %30

30:                                               ; preds = %28, %5, %2
  tail call void @perf_event_update_userpage(ptr noundef %0)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @task_clock_event_del(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %4 = load i64, ptr %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %8 = tail call i64 @__hrtimer_get_remaining(ptr noundef %7, i1 noundef zeroext false) #27
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %9) #27, !srcloc !19
  %10 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %9, ptr %9, i64 %8) #27, !srcloc !29
  %11 = tail call i32 @hrtimer_cancel(ptr noundef %7) #27
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %14, i32 0, i32 19
  %16 = load i64, ptr %15, align 8
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #27, !srcloc !19
  %18 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %17, ptr %17, i64 %16, ptr elementtype(i64) %17) #27, !srcloc !27
  %19 = extractvalue { i64, i32 } %18, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %20 = sub i64 %16, %19
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %21) #27, !srcloc !19
  %22 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %21, ptr %21, i64 %20, ptr elementtype(i64) %21) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @task_clock_event_start(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  %4 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.perf_event_context, ptr %5, i32 0, i32 19
  %7 = load i64, ptr %6, align 8
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #27, !srcloc !19
  %8 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %3, ptr %3, i64 %7) #27, !srcloc !29
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %10 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %11 = load i64, ptr %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  %15 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %14, ptr elementtype(i64) %14) #27, !srcloc !25
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = icmp slt i64 %15, 0
  %19 = select i1 %18, i64 10000, i64 %15
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %14) #27, !srcloc !19
  %20 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %14, ptr %14, i64 0) #27, !srcloc !29
  br label %25

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 6
  %23 = load i64, ptr %22, align 8
  %24 = tail call i64 @llvm.umax.i64(i64 %23, i64 10000) #27
  br label %25

25:                                               ; preds = %21, %17
  %26 = phi i64 [ %19, %17 ], [ %24, %21 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %9, i64 noundef %26, i64 noundef 0, i32 noundef 11) #27
  br label %27

27:                                               ; preds = %25, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @task_clock_event_stop(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 21, i32 3
  %4 = load i64, ptr %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25
  %8 = tail call i64 @__hrtimer_get_remaining(ptr noundef %7, i1 noundef zeroext false) #27
  %9 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 7, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %9) #27, !srcloc !19
  %10 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %9, ptr %9, i64 %8) #27, !srcloc !29
  %11 = tail call i32 @hrtimer_cancel(ptr noundef %7) #27
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.perf_event_context, ptr %14, i32 0, i32 19
  %16 = load i64, ptr %15, align 8
  %17 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #27, !srcloc !19
  %18 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %17, ptr %17, i64 %16, ptr elementtype(i64) %17) #27, !srcloc !27
  %19 = extractvalue { i64, i32 } %18, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %20 = sub i64 %16, %19
  %21 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %21) #27, !srcloc !19
  %22 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %21, ptr %21, i64 %20, ptr elementtype(i64) %21) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @task_clock_event_read(ptr noundef %0) #0 {
  %2 = tail call i64 @sched_clock() #27
  %3 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 26
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 20
  %6 = load i64, ptr %5, align 8
  %7 = sub i64 %2, %6
  %8 = getelementptr inbounds %struct.perf_event_context, ptr %4, i32 0, i32 19
  %9 = load i64, ptr %8, align 8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 25, i32 5
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #27, !srcloc !19
  %12 = tail call { i64, i32 } asm sideeffect "@ atomic64_xchg\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09strexd\09$1, $4, ${4:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %11, ptr %11, i64 %10, ptr elementtype(i64) %11) #27, !srcloc !27
  %13 = extractvalue { i64, i32 } %12, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #27, !srcloc !28
  %14 = sub i64 %10, %13
  %15 = getelementptr inbounds %struct.perf_event, ptr %0, i32 0, i32 16
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #27, !srcloc !19
  %16 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %15, ptr %15, i64 %14, ptr elementtype(i64) %15) #27, !srcloc !73
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @perf_reboot(ptr nocapture noundef readnone %0, i32 noundef %1, ptr nocapture noundef readnone %2) #0 {
  %4 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_online_mask) #32
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %6 = icmp ult i32 %4, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %7, %3
  %8 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %9 = tail call i32 @perf_event_exit_cpu(i32 noundef %8)
  %10 = tail call i32 @cpumask_next(i32 noundef %8, ptr noundef nonnull @__cpu_online_mask) #32
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %12 = icmp ult i32 %10, %11
  br i1 %12, label %7, label %13

13:                                               ; preds = %7, %3
  ret i32 1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bus_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #18

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #18

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #18

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #18

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nounwind willreturn writeonly }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { nofree null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #19 = { nounwind readonly }
attributes #20 = { nofree norecurse nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #23 = { noinline nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #24 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #26 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #27 = { nounwind }
attributes #28 = { nounwind readnone }
attributes #29 = { cold nounwind }
attributes #30 = { nounwind allocsize(2) }
attributes #31 = { nounwind allocsize(0) }
attributes #32 = { nounwind readonly willreturn }
attributes #33 = { cold }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{i64 1022555, i64 1022582, i64 1022604, i64 1022632}
!10 = !{i64 1022963, i64 1022990, i64 1023023, i64 1023044, i64 1023071, i64 1023097}
!11 = !{i64 1081694}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{i64 2149325920}
!14 = !{i64 2149321744}
!15 = !{i64 2149321819, i64 2149321846, i64 2149321893, i64 2149321915, i64 2149321943, i64 2149321963}
!16 = !{i64 2149348923}
!17 = !{i64 1063239}
!18 = !{i64 2149350064}
!19 = !{i64 1157316, i64 2148647287, i64 2148647313, i64 2148647360, i64 2148647382, i64 2148647410, i64 2148647430}
!20 = !{i64 2148658702, i64 2148658728, i64 2148658757, i64 2148658791, i64 2148658822, i64 2148658845}
!21 = !{i64 1062994, i64 1063055}
!22 = !{i64 1066011}
!23 = !{!"branch_weights", i32 2000, i32 1}
!24 = !{i64 2149478624}
!25 = !{i64 1146930, i64 1146951}
!26 = !{i64 2148815735}
!27 = !{i64 1151057, i64 1151078, i64 1151106, i64 1151136, i64 1151152}
!28 = !{i64 2148815934}
!29 = !{i64 1147175, i64 1147195, i64 1147223, i64 1147253, i64 1147269}
!30 = !{i64 2149478841}
!31 = !{i64 2156697617}
!32 = !{i64 2148660160, i64 2148660192, i64 2148660221, i64 2148660255, i64 2148660286, i64 2148660309}
!33 = !{i64 2148759381}
!34 = !{i64 2148661743, i64 2148661775, i64 2148661804, i64 2148661838, i64 2148661869, i64 2148661892}
!35 = !{i64 2148759584}
!36 = !{i64 2148772128}
!37 = !{i64 1143379, i64 1143403, i64 1143424, i64 1143441, i64 1143458}
!38 = !{i64 2148772328}
!39 = !{i64 2157038951}
!40 = !{i64 2157018531}
!41 = !{i64 2148760382}
!42 = !{i64 2148662517, i64 2148662549, i64 2148662578, i64 2148662612, i64 2148662643, i64 2148662666}
!43 = !{i64 2150085896}
!44 = !{i64 2157097920}
!45 = !{i64 2157097958}
!46 = !{i64 2157098041}
!47 = !{i64 2157098089}
!48 = !{!"auto-init"}
!49 = !{i64 2151293481}
!50 = !{i64 3787087}
!51 = !{i64 3787284}
!52 = !{i64 2151272563}
!53 = !{i64 2151293688}
!54 = !{i64 2157241648}
!55 = !{i64 2157241686}
!56 = !{i64 2148756548}
!57 = !{i64 2148659386, i64 2148659418, i64 2148659447, i64 2148659481, i64 2148659512, i64 2148659535}
!58 = !{i64 2148756751}
!59 = !{i64 2148661059, i64 2148661085, i64 2148661114, i64 2148661148, i64 2148661179, i64 2148661202}
!60 = !{i64 2149095416, i64 2149095439, i64 2149095471, i64 2149095503, i64 2149095541, i64 2149095571}
!61 = !{ptr @perf_output_begin, ptr @perf_output_begin_backward, ptr @perf_output_begin_forward}
!62 = !{i64 2156800758}
!63 = !{i64 2157348234}
!64 = !{i64 2157348166}
!65 = !{i64 2157357029}
!66 = !{i64 2148817147}
!67 = !{i64 1150545, i64 1150571, i64 1150599, i64 1150617, i64 1150635, i64 1150657}
!68 = !{i64 2148817349}
!69 = !{i64 2156608667}
!70 = !{i64 2156608874}
!71 = !{i64 2157472185}
!72 = !{i64 2157472269}
!73 = !{i64 2148669934, i64 2148669962, i64 2148669996, i64 2148670030, i64 2148670064, i64 2148670100, i64 2148670123}
!74 = !{i64 2148796020}
!75 = !{i64 2148670685, i64 2148670719, i64 2148670753, i64 2148670787, i64 2148670821, i64 2148670857, i64 2148670880}
!76 = !{i64 2148796225}
!77 = distinct !{!77, !78}
!78 = !{!"llvm.loop.peeled.count", i32 1}
!79 = !{i64 2149503865}
!80 = !{!81}
!81 = distinct !{!81, !82, !"fdget: argument 0"}
!82 = distinct !{!82, !"fdget"}
!83 = !{i64 2148658209}
!84 = !{i64 1143885, i64 1143910, i64 1143932, i64 1143948, i64 1143960, i64 1143980, i64 1144004, i64 1144020, i64 1144032}
!85 = !{i64 2148658335}
!86 = !{i64 2157003082}
!87 = !{i64 2156784539}
!88 = !{i64 2156788012}
!89 = !{i64 2157768618}
!90 = !{i64 2157816345}
!91 = !{ptr @__perf_event_disable, ptr @__perf_event_enable, ptr @__perf_event_period, ptr @__perf_remove_from_context}
!92 = !{i64 2156813238}
!93 = !{i64 2156896152}
!94 = !{i64 2156767152}
!95 = !{i32 0, i32 33}
!96 = !{i64 2157110816}
!97 = !{i8 0, i8 2}
!98 = !{i64 2156794847}
!99 = !{i64 2156991270}
!100 = !{i64 2156994160}
!101 = !{i64 2156994208}
!102 = !{i64 2157671432, i64 2157671712, i64 2157672046, i64 2157672380}
!103 = !{i64 2151290975, i64 2151291000}
!104 = !{i64 2157680830, i64 2157681110, i64 2157681444, i64 2157681778}
!105 = !{i64 2148753176}
!106 = !{i64 2157624340, i64 2157624827, i64 2157624377, i64 2157624433, i64 2157624467, i64 2157624491, i64 2157624532, i64 2157624553, i64 2157624581, i64 2157624615}
!107 = !{i64 2151291553, i64 2151291578}
!108 = !{i64 2148946837}
!109 = !{i64 1165966, i64 1165983, i64 1166007, i64 1166033, i64 1166051}
!110 = !{i64 2148947181}
!111 = !{!112}
!112 = distinct !{!112, !113, !"fdget: argument 0"}
!113 = distinct !{!113, !"fdget"}
!114 = !{ptr @_perf_event_disable, ptr @_perf_event_enable, ptr @_perf_event_reset, ptr @perf_event_addr_filters_apply}
!115 = !{i64 2148672420, i64 2148672448, i64 2148672482, i64 2148672516, i64 2148672550, i64 2148672586, i64 2148672609}
!116 = !{i64 2157491605}
!117 = !{i64 2149583989}
