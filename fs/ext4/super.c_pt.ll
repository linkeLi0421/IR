; ModuleID = '/llk/IR/fs/ext4/super.c_pt.bc'
source_filename = "../fs/ext4/super.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.103 }
%union.anon.103 = type { %struct.anon.104 }
%struct.anon.104 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.105, %struct.trace_event, ptr, ptr, %union.anon.106, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.105 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.106 = type { ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.4 }
%union.anon.4 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.hlist_head = type { ptr }
%struct.lock_class_key = type {}
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.ext4_err_translation = type { i32, i32 }
%struct.mount_opts = type { i32, i32, i32 }
%struct.fs_parameter_spec = type { ptr, ptr, i8, i16, ptr }
%struct.constant_table = type { ptr, i32 }
%struct.fs_context_operations = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.super_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.export_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_ext4_other_inode_update_time = type { %struct.trace_entry, i32, i32, i32, i32, i32, i16, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.78, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.79, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.80, ptr, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.78 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.seqcount = type { i32 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%union.anon.79 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.80 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.81 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [56 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [40 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, ptr }
%struct.list_lru = type { ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.trace_event_raw_ext4_free_inode = type { %struct.trace_entry, i32, i32, i32, i32, i64, i16, [0 x i8] }
%struct.trace_event_raw_ext4_request_inode = type { %struct.trace_entry, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_allocate_inode = type { %struct.trace_entry, i32, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_evict_inode = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_drop_inode = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_nfs_commit_metadata = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_mark_inode_dirty = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_begin_ordered_truncate = type { %struct.trace_entry, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4__write_begin = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4__write_end = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_writepages = type { %struct.trace_entry, i32, i32, i32, i32, i64, i64, i32, i32, i8, i8, [0 x i8] }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16 }
%struct.trace_event_raw_ext4_da_write_pages = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_da_write_pages_extent = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.ext4_map_blocks = type { i64, i32, i32, i32 }
%struct.trace_event_raw_ext4_writepages_result = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.page = type { i32, %union.anon.7, %union.anon.34, %struct.atomic_t }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.34 = type { %struct.atomic_t }
%struct.trace_event_raw_ext4__page_op = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_invalidatepage_op = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_discard_blocks = type { %struct.trace_entry, i32, i64, i64, [0 x i8] }
%struct.ext4_allocation_context = type { ptr, ptr, %struct.ext4_free_extent, %struct.ext4_free_extent, %struct.ext4_free_extent, %struct.ext4_free_extent, i32, i32, i32, i16, i16, i16, i16, i16, i8, i8, i8, i8, ptr, ptr, ptr, ptr }
%struct.ext4_free_extent = type { i32, i32, i32, i32 }
%struct.trace_event_raw_ext4__mb_new_pa = type { %struct.trace_entry, i32, i32, i64, i64, i32, [0 x i8] }
%struct.ext4_prealloc_space = type { %struct.list_head, %struct.list_head, %union.anon.82, %struct.spinlock, %struct.atomic_t, i32, i64, i32, i32, i32, i16, ptr, ptr }
%union.anon.82 = type { %struct.list_head }
%struct.trace_event_raw_ext4_mb_release_inode_pa = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_ext4_mb_release_group_pa = type { %struct.trace_entry, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_ext4_discard_preallocations = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_mb_discard_preallocations = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_request_blocks = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, i64, i64, i32, [0 x i8] }
%struct.ext4_allocation_request = type { ptr, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.trace_event_raw_ext4_allocate_blocks = type { %struct.trace_entry, i32, i32, i64, i32, i32, i32, i32, i64, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_ext4_free_blocks = type { %struct.trace_entry, i32, i32, i64, i32, i32, i16, [0 x i8] }
%struct.file = type { %union.anon.6, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, i32, i32 }
%union.anon.6 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.76, %struct.list_head, %struct.list_head, %union.anon.77 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.0, ptr }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.1 }
%union.anon.1 = type { i64 }
%union.anon.76 = type { %struct.list_head }
%union.anon.77 = type { %struct.hlist_node }
%struct.trace_event_raw_ext4_sync_file_enter = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_sync_file_exit = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_sync_fs = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_alloc_da_blocks = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_mballoc_alloc = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i8, [0 x i8] }
%struct.trace_event_raw_ext4_mballoc_prealloc = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4__mballoc = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_forget = type { %struct.trace_entry, i32, i32, i64, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_da_update_reserve_space = type { %struct.trace_entry, i32, i32, i64, i32, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_da_reserve_space = type { %struct.trace_entry, i32, i32, i64, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_da_release_space = type { %struct.trace_entry, i32, i32, i64, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4__bitmap_load = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_read_block_bitmap_load = type { %struct.trace_entry, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_ext4__fallocate_mode = type { %struct.trace_entry, i32, i32, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fallocate_exit = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_unlink_enter = type { %struct.trace_entry, i32, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4_unlink_exit = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4__truncate = type { %struct.trace_entry, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4_ext_convert_to_initialized_enter = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, [0 x i8] }
%struct.ext4_extent = type { i32, i16, i16, i32 }
%struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4__map_blocks_enter = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4__map_blocks_exit = type { %struct.trace_entry, i32, i32, i32, i64, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_ext_load_extent = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_ext4_load_inode = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_journal_start = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_journal_start_reserved = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4__trim = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_ext_handle_unwritten_extents = type { %struct.trace_entry, i32, i32, i32, i32, i64, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit = type { %struct.trace_entry, i32, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_ext_show_extent = type { %struct.trace_entry, i32, i32, i64, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4_remove_blocks = type { %struct.trace_entry, i32, i32, i32, i32, i64, i32, i16, i64, i32, i32, [0 x i8] }
%struct.partial_cluster = type { i64, i32, i32 }
%struct.trace_event_raw_ext4_ext_rm_leaf = type { %struct.trace_entry, i32, i32, i32, i32, i64, i16, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_ext_rm_idx = type { %struct.trace_entry, i32, i32, i64, [0 x i8] }
%struct.trace_event_raw_ext4_ext_remove_space = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_ext_remove_space_done = type { %struct.trace_entry, i32, i32, i32, i32, i32, i64, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_ext4__es_extent = type { %struct.trace_entry, i32, i32, i32, i32, i64, i8, [0 x i8] }
%struct.extent_status = type { %struct.rb_node, i32, i32, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.trace_event_raw_ext4_es_remove_extent = type { %struct.trace_entry, i32, i32, i64, i64, [0 x i8] }
%struct.trace_event_raw_ext4_es_find_extent_range_enter = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_es_find_extent_range_exit = type { %struct.trace_entry, i32, i32, i32, i32, i64, i8, [0 x i8] }
%struct.trace_event_raw_ext4_es_lookup_extent_enter = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_es_lookup_extent_exit = type { %struct.trace_entry, i32, i32, i32, i32, i64, i8, i32, [0 x i8] }
%struct.trace_event_raw_ext4__es_shrink_enter = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_es_shrink_scan_exit = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_collapse_range = type { %struct.trace_entry, i32, i32, i64, i64, [0 x i8] }
%struct.trace_event_raw_ext4_insert_range = type { %struct.trace_entry, i32, i32, i64, i64, [0 x i8] }
%struct.trace_event_raw_ext4_es_shrink = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_es_insert_delayed_block = type { %struct.trace_entry, i32, i32, i32, i32, i64, i8, i8, [0 x i8] }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.trace_event_raw_ext4_fsmap_class = type { %struct.trace_entry, i32, i32, i32, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_ext4_getfsmap_class = type { %struct.trace_entry, i32, i32, i64, i64, i64, i64, [0 x i8] }
%struct.ext4_fsmap = type { %struct.list_head, i32, i32, i64, i64, i64 }
%struct.trace_event_raw_ext4_shutdown = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_error = type { %struct.trace_entry, i32, ptr, i32, [0 x i8] }
%struct.trace_event_raw_ext4_prefetch_bitmaps = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_lazy_itable_init = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_replay_scan = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_replay = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_commit_start = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_commit_stop = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.ext4_sb_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i32, i64, %struct.atomic64_t, %struct.kuid_t, %struct.kgid_t, i16, i16, i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, ptr, ptr, %struct.kobject, %struct.completion, ptr, ptr, ptr, i32, %struct.mutex, %struct.list_head, %struct.ext4_orphan_info, i32, i32, i32, ptr, i32, ptr, ptr, ptr, %struct.spinlock, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.work_struct, %struct.atomic_t, %struct.rb_root, %struct.rwlock_t, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, [4 x %struct.atomic64_t], [4 x %struct.atomic64_t], [4 x %struct.atomic64_t], %struct.atomic_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, i32, i64, i32, i32, ptr, i32, ptr, %struct.timer_list, ptr, i32, ptr, i32, ptr, i32, %struct.shrinker, %struct.list_head, i32, %struct.ext4_es_stats, ptr, ptr, [16 x i8], %struct.spinlock, [1 x %struct.ext4_journal_trigger], %struct.ratelimit_state, %struct.ratelimit_state, %struct.ratelimit_state, %struct.atomic_t, %struct.atomic_t, %struct.fscrypt_dummy_policy, %struct.percpu_rw_semaphore, ptr, i64, i32, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i64, ptr, i64, i32, i32, i32, i64, ptr, i64, %struct.work_struct, %struct.atomic_t, [2 x %struct.list_head], [2 x %struct.list_head], i32, %struct.spinlock, ptr, %struct.ext4_fc_stats, i32, %struct.ext4_fc_replay_state, [52 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.ext4_orphan_info = type { i32, i32, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.ext4_es_stats = type { i32, %struct.percpu_counter, %struct.percpu_counter, i64, i64, %struct.percpu_counter, %struct.percpu_counter }
%struct.ext4_journal_trigger = type { %struct.jbd2_buffer_trigger_type, ptr }
%struct.jbd2_buffer_trigger_type = type { ptr, ptr }
%struct.fscrypt_dummy_policy = type {}
%struct.ext4_fc_stats = type { [10 x i32], i32, i32, i32, i32, i32, i64 }
%struct.ext4_fc_replay_state = type { i32, i32, i32, i32, i32, ptr, i32, i32, i32, ptr, i32, i32 }
%struct.trace_event_raw_ext4_fc_stats = type { %struct.trace_entry, i32, ptr, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_track_create = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_track_link = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_track_unlink = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_track_inode = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_fc_track_range = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_ext4_update_sb = type { %struct.trace_entry, i32, i64, i32, [0 x i8] }
%struct.buffer_head = type { i32, ptr, ptr, i64, i32, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.spinlock }
%struct.anon.110 = type { %struct.shash_desc, [4 x i8], [4 x i8] }
%struct.shash_desc = type { ptr, [4 x i8], [0 x ptr] }
%struct.ext4_super_block = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i16, i16, i32, i16, i16, i32, i32, i32, [16 x i8], [16 x i8], [64 x i8], i32, i8, i8, i16, [16 x i8], i32, i32, i32, [4 x i32], i8, i8, i16, i32, i32, i32, [17 x i32], i32, i32, i32, i16, i16, i32, i16, i16, i64, i32, i8, i8, i8, i8, i64, i32, i32, i64, i32, i32, i32, i32, i64, [32 x i8], i32, i32, i32, i32, i64, [32 x i8], [64 x i8], i32, i32, i32, [2 x i32], [4 x i8], [16 x i8], i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i32, [94 x i32], i32 }
%struct.ext4_group_desc = type { i32, i32, i32, i16, i16, i16, i16, i32, i16, i16, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i16, i16, i32 }
%struct.fs_error_report = type { i32, ptr, ptr }
%struct.va_format = type { ptr, ptr }
%struct.__va_list = type { ptr }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { %struct.thread_info, i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, [36 x i8], %struct.sched_statistics, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i8, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.66, ptr, %struct.page_frag, i32, i32, i32, i64, i64, i32, i32, ptr, %struct.kmap_ctrl, i32, ptr, %struct.refcount_struct, %struct.thread_struct, [16 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.44 }
%struct.llist_node = type { ptr }
%union.anon.44 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, [56 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [8 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.sched_statistics = type {}
%struct.sched_info = type {}
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.45 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.task_io_accounting = type {}
%struct.tlbflush_unmap_batch = type {}
%union.anon.66 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.kmap_ctrl = type { i32, [16 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.xarray, ptr, ptr, ptr, ptr, i32, i32, %struct.mutex, i32, ptr, ptr, ptr, %struct.atomic_t, ptr, ptr, i32, ptr, %struct.lockdep_map, i64 }
%struct.lockdep_map = type {}
%struct.bgl_lock = type { %struct.spinlock, [60 x i8] }
%struct.ext4_group_info = type { i32, %struct.rb_root, i32, i32, i32, i32, i32, %struct.list_head, %struct.rw_semaphore, %struct.rb_node, %struct.list_head, [0 x i32] }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }
%struct.ext4_li_request = type { ptr, i32, i32, i32, %struct.list_head, i32, i32 }
%struct.ext4_lazy_init = type { i32, %struct.list_head, %struct.mutex }
%struct.journal_s = type { i32, i32, i32, %struct.mutex, ptr, ptr, i32, %struct.rwlock_t, i32, %struct.mutex, ptr, ptr, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.mutex, [64 x ptr], %struct.shrinker, %struct.percpu_counter, ptr, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i64, [56 x i8], ptr, i32, %struct.atomic_t, %struct.spinlock, ptr, i32, i32, i32, i32, [16 x i8], ptr, i32, i32, i32, %struct.timer_list, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, i32, i32, i32, i64, i32, i32, ptr, ptr, ptr, %struct.spinlock, ptr, %struct.transaction_stats_s, i32, ptr, ptr, i32, ptr, ptr }
%struct.transaction_stats_s = type { i32, i32, %struct.transaction_run_stats_s }
%struct.transaction_run_stats_s = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, [1 x %struct.cpumask], i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i32, i32, %struct.kref, i32, i32, i32, i32, %struct.atomic_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, ptr, [64 x i8], ptr, %struct.timer_list, ptr }
%struct.bdi_writeback = type { ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.atomic_t, [4 x %struct.percpu_counter], i32, i32, i32, i32, i32, i32, i32, i32, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, %struct.delayed_work, i32, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.disk_stats = type { [4 x i64], [4 x i32], [4 x i32], [4 x i32], i32, [2 x %struct.local_t] }
%struct.local_t = type { %struct.atomic_t }
%struct.fs_context = type { ptr, %struct.mutex, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.p_log, ptr, ptr, ptr, i32, i32, i32, i32, i24 }
%struct.p_log = type { ptr, ptr }
%struct.ext4_fs_context = type { [3 x ptr], ptr, i32, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.kuid_t, %struct.kgid_t, i64 }
%struct.fs_parse_result = type { i8, %union.anon.70 }
%union.anon.70 = type { i64 }
%struct.fs_parameter = type { ptr, i8, %union.anon.5, i32, i32 }
%union.anon.5 = type { ptr }
%struct.io_context = type { %struct.atomic_t, %struct.atomic_t, i16 }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, %struct.queue_limits, i32, i32, %struct.mutex, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.bio_list = type { ptr, ptr }
%struct.srcu_struct = type { [1 x %struct.srcu_node], [2 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.crypto_shash = type { i32, [60 x i8], %struct.crypto_tfm }
%struct.crypto_tfm = type { i32, i32, ptr, ptr, [48 x i8], [0 x ptr] }
%struct.journal_superblock_s = type { %struct.journal_header_s, i32, i32, i32, i32, i32, i32, i32, i32, i32, [16 x i8], i32, i32, i32, i32, i8, [3 x i8], i32, [41 x i32], i32, [768 x i8] }
%struct.journal_header_s = type { i32, i32, i32 }
%struct.jbd2_inode = type { ptr, ptr, %struct.list_head, ptr, i32, i64, i64 }
%struct.transaction_s = type { ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, %struct.spinlock, i32, i32, i32, %struct.transaction_chp_stats_s, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, i32, i64, i8, i32, %struct.list_head }
%struct.transaction_chp_stats_s = type { i32, i32, i32, i32 }
%struct.ext4_journal_cb_entry = type { %struct.list_head, ptr }
%struct.flex_groups = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t }
%struct.ext4_inode_info = type { [15 x i32], i32, i64, i32, i32, i32, i32, %struct.rw_semaphore, %union.anon.109, %struct.list_head, i32, i32, %struct.atomic_t, %struct.wait_queue_head, %struct.mutex, i64, %struct.rw_semaphore, %struct.inode, ptr, %struct.spinlock, %struct.timespec64, %struct.atomic_t, %struct.list_head, %struct.spinlock, %struct.ext4_es_tree, %struct.rwlock_t, %struct.list_head, i32, i32, i32, i32, i32, %struct.ext4_pending_tree, i16, i16, i16, %struct.spinlock, %struct.list_head, %struct.work_struct, %struct.atomic_t, %struct.spinlock, i32, i32, i32, %struct.kprojid_t }
%union.anon.109 = type { %struct.list_head }
%struct.ext4_es_tree = type { %struct.rb_root, ptr }
%struct.ext4_pending_tree = type { %struct.rb_root }
%struct.kprojid_t = type { i32 }
%struct.kstatfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.__kernel_fsid_t, i32, i32, i32, [4 x i32] }
%struct.__kernel_fsid_t = type { [2 x i32] }
%struct.journal_head = type { ptr, %struct.spinlock, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }

@__tpstrtab_ext4_other_inode_update_time = internal constant [29 x i8] c"ext4_other_inode_update_time\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_other_inode_update_time = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_other_inode_update_time }, align 4
@__tracepoint_ext4_other_inode_update_time = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_other_inode_update_time, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_other_inode_update_time, ptr null, ptr @__traceiter_ext4_other_inode_update_time, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_other_inode_update_time = internal constant ptr @__tracepoint_ext4_other_inode_update_time, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_free_inode = internal constant [16 x i8] c"ext4_free_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_free_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_free_inode }, align 4
@__tracepoint_ext4_free_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_free_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_free_inode, ptr null, ptr @__traceiter_ext4_free_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_free_inode = internal constant ptr @__tracepoint_ext4_free_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_request_inode = internal constant [19 x i8] c"ext4_request_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_request_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_request_inode }, align 4
@__tracepoint_ext4_request_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_request_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_request_inode, ptr null, ptr @__traceiter_ext4_request_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_request_inode = internal constant ptr @__tracepoint_ext4_request_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_allocate_inode = internal constant [20 x i8] c"ext4_allocate_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_allocate_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_allocate_inode }, align 4
@__tracepoint_ext4_allocate_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_allocate_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_allocate_inode, ptr null, ptr @__traceiter_ext4_allocate_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_allocate_inode = internal constant ptr @__tracepoint_ext4_allocate_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_evict_inode = internal constant [17 x i8] c"ext4_evict_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_evict_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_evict_inode }, align 4
@__tracepoint_ext4_evict_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_evict_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_evict_inode, ptr null, ptr @__traceiter_ext4_evict_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_evict_inode = internal constant ptr @__tracepoint_ext4_evict_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_drop_inode = internal constant [16 x i8] c"ext4_drop_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_drop_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_drop_inode }, align 4
@__tracepoint_ext4_drop_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_drop_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_drop_inode, ptr null, ptr @__traceiter_ext4_drop_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_drop_inode = internal constant ptr @__tracepoint_ext4_drop_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_nfs_commit_metadata = internal constant [25 x i8] c"ext4_nfs_commit_metadata\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_nfs_commit_metadata = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_nfs_commit_metadata }, align 4
@__tracepoint_ext4_nfs_commit_metadata = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_nfs_commit_metadata, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_nfs_commit_metadata, ptr null, ptr @__traceiter_ext4_nfs_commit_metadata, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_nfs_commit_metadata = internal constant ptr @__tracepoint_ext4_nfs_commit_metadata, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mark_inode_dirty = internal constant [22 x i8] c"ext4_mark_inode_dirty\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mark_inode_dirty = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mark_inode_dirty }, align 4
@__tracepoint_ext4_mark_inode_dirty = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mark_inode_dirty, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mark_inode_dirty, ptr null, ptr @__traceiter_ext4_mark_inode_dirty, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mark_inode_dirty = internal constant ptr @__tracepoint_ext4_mark_inode_dirty, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_begin_ordered_truncate = internal constant [28 x i8] c"ext4_begin_ordered_truncate\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_begin_ordered_truncate = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_begin_ordered_truncate }, align 4
@__tracepoint_ext4_begin_ordered_truncate = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_begin_ordered_truncate, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_begin_ordered_truncate, ptr null, ptr @__traceiter_ext4_begin_ordered_truncate, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_begin_ordered_truncate = internal constant ptr @__tracepoint_ext4_begin_ordered_truncate, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_write_begin = internal constant [17 x i8] c"ext4_write_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_write_begin = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_write_begin }, align 4
@__tracepoint_ext4_write_begin = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_write_begin, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_write_begin, ptr null, ptr @__traceiter_ext4_write_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_write_begin = internal constant ptr @__tracepoint_ext4_write_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_write_begin = internal constant [20 x i8] c"ext4_da_write_begin\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_write_begin = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_write_begin }, align 4
@__tracepoint_ext4_da_write_begin = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_write_begin, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_write_begin, ptr null, ptr @__traceiter_ext4_da_write_begin, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_write_begin = internal constant ptr @__tracepoint_ext4_da_write_begin, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_write_end = internal constant [15 x i8] c"ext4_write_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_write_end = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_write_end }, align 4
@__tracepoint_ext4_write_end = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_write_end, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_write_end, ptr null, ptr @__traceiter_ext4_write_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_write_end = internal constant ptr @__tracepoint_ext4_write_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_journalled_write_end = internal constant [26 x i8] c"ext4_journalled_write_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_journalled_write_end = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_journalled_write_end }, align 4
@__tracepoint_ext4_journalled_write_end = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_journalled_write_end, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_journalled_write_end, ptr null, ptr @__traceiter_ext4_journalled_write_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_journalled_write_end = internal constant ptr @__tracepoint_ext4_journalled_write_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_write_end = internal constant [18 x i8] c"ext4_da_write_end\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_write_end = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_write_end }, align 4
@__tracepoint_ext4_da_write_end = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_write_end, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_write_end, ptr null, ptr @__traceiter_ext4_da_write_end, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_write_end = internal constant ptr @__tracepoint_ext4_da_write_end, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_writepages = internal constant [16 x i8] c"ext4_writepages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_writepages = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_writepages }, align 4
@__tracepoint_ext4_writepages = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_writepages, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_writepages, ptr null, ptr @__traceiter_ext4_writepages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_writepages = internal constant ptr @__tracepoint_ext4_writepages, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_write_pages = internal constant [20 x i8] c"ext4_da_write_pages\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_write_pages = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_write_pages }, align 4
@__tracepoint_ext4_da_write_pages = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_write_pages, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_write_pages, ptr null, ptr @__traceiter_ext4_da_write_pages, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_write_pages = internal constant ptr @__tracepoint_ext4_da_write_pages, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_write_pages_extent = internal constant [27 x i8] c"ext4_da_write_pages_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_write_pages_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_write_pages_extent }, align 4
@__tracepoint_ext4_da_write_pages_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_write_pages_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_write_pages_extent, ptr null, ptr @__traceiter_ext4_da_write_pages_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_write_pages_extent = internal constant ptr @__tracepoint_ext4_da_write_pages_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_writepages_result = internal constant [23 x i8] c"ext4_writepages_result\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_writepages_result = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_writepages_result }, align 4
@__tracepoint_ext4_writepages_result = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_writepages_result, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_writepages_result, ptr null, ptr @__traceiter_ext4_writepages_result, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_writepages_result = internal constant ptr @__tracepoint_ext4_writepages_result, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_writepage = internal constant [15 x i8] c"ext4_writepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_writepage = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_writepage }, align 4
@__tracepoint_ext4_writepage = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_writepage, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_writepage, ptr null, ptr @__traceiter_ext4_writepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_writepage = internal constant ptr @__tracepoint_ext4_writepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_readpage = internal constant [14 x i8] c"ext4_readpage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_readpage = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_readpage }, align 4
@__tracepoint_ext4_readpage = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_readpage, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_readpage, ptr null, ptr @__traceiter_ext4_readpage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_readpage = internal constant ptr @__tracepoint_ext4_readpage, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_releasepage = internal constant [17 x i8] c"ext4_releasepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_releasepage = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_releasepage }, align 4
@__tracepoint_ext4_releasepage = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_releasepage, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_releasepage, ptr null, ptr @__traceiter_ext4_releasepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_releasepage = internal constant ptr @__tracepoint_ext4_releasepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_invalidatepage = internal constant [20 x i8] c"ext4_invalidatepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_invalidatepage = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_invalidatepage }, align 4
@__tracepoint_ext4_invalidatepage = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_invalidatepage, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_invalidatepage, ptr null, ptr @__traceiter_ext4_invalidatepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_invalidatepage = internal constant ptr @__tracepoint_ext4_invalidatepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_journalled_invalidatepage = internal constant [31 x i8] c"ext4_journalled_invalidatepage\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_journalled_invalidatepage = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_journalled_invalidatepage }, align 4
@__tracepoint_ext4_journalled_invalidatepage = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_journalled_invalidatepage, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_journalled_invalidatepage, ptr null, ptr @__traceiter_ext4_journalled_invalidatepage, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_journalled_invalidatepage = internal constant ptr @__tracepoint_ext4_journalled_invalidatepage, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_discard_blocks = internal constant [20 x i8] c"ext4_discard_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_discard_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_discard_blocks }, align 4
@__tracepoint_ext4_discard_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_discard_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_discard_blocks, ptr null, ptr @__traceiter_ext4_discard_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_discard_blocks = internal constant ptr @__tracepoint_ext4_discard_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_new_inode_pa = internal constant [21 x i8] c"ext4_mb_new_inode_pa\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_new_inode_pa = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_new_inode_pa }, align 4
@__tracepoint_ext4_mb_new_inode_pa = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_new_inode_pa, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_new_inode_pa, ptr null, ptr @__traceiter_ext4_mb_new_inode_pa, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_new_inode_pa = internal constant ptr @__tracepoint_ext4_mb_new_inode_pa, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_new_group_pa = internal constant [21 x i8] c"ext4_mb_new_group_pa\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_new_group_pa = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_new_group_pa }, align 4
@__tracepoint_ext4_mb_new_group_pa = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_new_group_pa, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_new_group_pa, ptr null, ptr @__traceiter_ext4_mb_new_group_pa, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_new_group_pa = internal constant ptr @__tracepoint_ext4_mb_new_group_pa, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_release_inode_pa = internal constant [25 x i8] c"ext4_mb_release_inode_pa\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_release_inode_pa = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_release_inode_pa }, align 4
@__tracepoint_ext4_mb_release_inode_pa = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_release_inode_pa, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_release_inode_pa, ptr null, ptr @__traceiter_ext4_mb_release_inode_pa, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_release_inode_pa = internal constant ptr @__tracepoint_ext4_mb_release_inode_pa, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_release_group_pa = internal constant [25 x i8] c"ext4_mb_release_group_pa\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_release_group_pa = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_release_group_pa }, align 4
@__tracepoint_ext4_mb_release_group_pa = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_release_group_pa, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_release_group_pa, ptr null, ptr @__traceiter_ext4_mb_release_group_pa, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_release_group_pa = internal constant ptr @__tracepoint_ext4_mb_release_group_pa, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_discard_preallocations = internal constant [28 x i8] c"ext4_discard_preallocations\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_discard_preallocations = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_discard_preallocations }, align 4
@__tracepoint_ext4_discard_preallocations = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_discard_preallocations, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_discard_preallocations, ptr null, ptr @__traceiter_ext4_discard_preallocations, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_discard_preallocations = internal constant ptr @__tracepoint_ext4_discard_preallocations, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_discard_preallocations = internal constant [31 x i8] c"ext4_mb_discard_preallocations\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_discard_preallocations = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_discard_preallocations }, align 4
@__tracepoint_ext4_mb_discard_preallocations = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_discard_preallocations, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_discard_preallocations, ptr null, ptr @__traceiter_ext4_mb_discard_preallocations, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_discard_preallocations = internal constant ptr @__tracepoint_ext4_mb_discard_preallocations, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_request_blocks = internal constant [20 x i8] c"ext4_request_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_request_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_request_blocks }, align 4
@__tracepoint_ext4_request_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_request_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_request_blocks, ptr null, ptr @__traceiter_ext4_request_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_request_blocks = internal constant ptr @__tracepoint_ext4_request_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_allocate_blocks = internal constant [21 x i8] c"ext4_allocate_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_allocate_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_allocate_blocks }, align 4
@__tracepoint_ext4_allocate_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_allocate_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_allocate_blocks, ptr null, ptr @__traceiter_ext4_allocate_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_allocate_blocks = internal constant ptr @__tracepoint_ext4_allocate_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_free_blocks = internal constant [17 x i8] c"ext4_free_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_free_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_free_blocks }, align 4
@__tracepoint_ext4_free_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_free_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_free_blocks, ptr null, ptr @__traceiter_ext4_free_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_free_blocks = internal constant ptr @__tracepoint_ext4_free_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_sync_file_enter = internal constant [21 x i8] c"ext4_sync_file_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_sync_file_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_sync_file_enter }, align 4
@__tracepoint_ext4_sync_file_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_sync_file_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_sync_file_enter, ptr null, ptr @__traceiter_ext4_sync_file_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_sync_file_enter = internal constant ptr @__tracepoint_ext4_sync_file_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_sync_file_exit = internal constant [20 x i8] c"ext4_sync_file_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_sync_file_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_sync_file_exit }, align 4
@__tracepoint_ext4_sync_file_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_sync_file_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_sync_file_exit, ptr null, ptr @__traceiter_ext4_sync_file_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_sync_file_exit = internal constant ptr @__tracepoint_ext4_sync_file_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_sync_fs = internal constant [13 x i8] c"ext4_sync_fs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_sync_fs = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_sync_fs }, align 4
@__tracepoint_ext4_sync_fs = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_sync_fs, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_sync_fs, ptr null, ptr @__traceiter_ext4_sync_fs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_sync_fs = internal constant ptr @__tracepoint_ext4_sync_fs, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_alloc_da_blocks = internal constant [21 x i8] c"ext4_alloc_da_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_alloc_da_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_alloc_da_blocks }, align 4
@__tracepoint_ext4_alloc_da_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_alloc_da_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_alloc_da_blocks, ptr null, ptr @__traceiter_ext4_alloc_da_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_alloc_da_blocks = internal constant ptr @__tracepoint_ext4_alloc_da_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mballoc_alloc = internal constant [19 x i8] c"ext4_mballoc_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mballoc_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mballoc_alloc }, align 4
@__tracepoint_ext4_mballoc_alloc = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mballoc_alloc, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mballoc_alloc, ptr null, ptr @__traceiter_ext4_mballoc_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mballoc_alloc = internal constant ptr @__tracepoint_ext4_mballoc_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mballoc_prealloc = internal constant [22 x i8] c"ext4_mballoc_prealloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mballoc_prealloc = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mballoc_prealloc }, align 4
@__tracepoint_ext4_mballoc_prealloc = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mballoc_prealloc, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mballoc_prealloc, ptr null, ptr @__traceiter_ext4_mballoc_prealloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mballoc_prealloc = internal constant ptr @__tracepoint_ext4_mballoc_prealloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mballoc_discard = internal constant [21 x i8] c"ext4_mballoc_discard\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mballoc_discard = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mballoc_discard }, align 4
@__tracepoint_ext4_mballoc_discard = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mballoc_discard, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mballoc_discard, ptr null, ptr @__traceiter_ext4_mballoc_discard, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mballoc_discard = internal constant ptr @__tracepoint_ext4_mballoc_discard, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mballoc_free = internal constant [18 x i8] c"ext4_mballoc_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mballoc_free = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mballoc_free }, align 4
@__tracepoint_ext4_mballoc_free = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mballoc_free, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mballoc_free, ptr null, ptr @__traceiter_ext4_mballoc_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mballoc_free = internal constant ptr @__tracepoint_ext4_mballoc_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_forget = internal constant [12 x i8] c"ext4_forget\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_forget = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_forget }, align 4
@__tracepoint_ext4_forget = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_forget, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_forget, ptr null, ptr @__traceiter_ext4_forget, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_forget = internal constant ptr @__tracepoint_ext4_forget, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_update_reserve_space = internal constant [29 x i8] c"ext4_da_update_reserve_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_update_reserve_space = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_update_reserve_space }, align 4
@__tracepoint_ext4_da_update_reserve_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_update_reserve_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_update_reserve_space, ptr null, ptr @__traceiter_ext4_da_update_reserve_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_update_reserve_space = internal constant ptr @__tracepoint_ext4_da_update_reserve_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_reserve_space = internal constant [22 x i8] c"ext4_da_reserve_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_reserve_space = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_reserve_space }, align 4
@__tracepoint_ext4_da_reserve_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_reserve_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_reserve_space, ptr null, ptr @__traceiter_ext4_da_reserve_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_reserve_space = internal constant ptr @__tracepoint_ext4_da_reserve_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_da_release_space = internal constant [22 x i8] c"ext4_da_release_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_da_release_space = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_da_release_space }, align 4
@__tracepoint_ext4_da_release_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_da_release_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_da_release_space, ptr null, ptr @__traceiter_ext4_da_release_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_da_release_space = internal constant ptr @__tracepoint_ext4_da_release_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_bitmap_load = internal constant [20 x i8] c"ext4_mb_bitmap_load\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_bitmap_load = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_bitmap_load }, align 4
@__tracepoint_ext4_mb_bitmap_load = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_bitmap_load, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_bitmap_load, ptr null, ptr @__traceiter_ext4_mb_bitmap_load, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_bitmap_load = internal constant ptr @__tracepoint_ext4_mb_bitmap_load, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_mb_buddy_bitmap_load = internal constant [26 x i8] c"ext4_mb_buddy_bitmap_load\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_mb_buddy_bitmap_load = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_mb_buddy_bitmap_load }, align 4
@__tracepoint_ext4_mb_buddy_bitmap_load = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_mb_buddy_bitmap_load, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_mb_buddy_bitmap_load, ptr null, ptr @__traceiter_ext4_mb_buddy_bitmap_load, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_mb_buddy_bitmap_load = internal constant ptr @__tracepoint_ext4_mb_buddy_bitmap_load, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_load_inode_bitmap = internal constant [23 x i8] c"ext4_load_inode_bitmap\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_load_inode_bitmap = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_load_inode_bitmap }, align 4
@__tracepoint_ext4_load_inode_bitmap = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_load_inode_bitmap, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_load_inode_bitmap, ptr null, ptr @__traceiter_ext4_load_inode_bitmap, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_load_inode_bitmap = internal constant ptr @__tracepoint_ext4_load_inode_bitmap, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_read_block_bitmap_load = internal constant [28 x i8] c"ext4_read_block_bitmap_load\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_read_block_bitmap_load = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_read_block_bitmap_load }, align 4
@__tracepoint_ext4_read_block_bitmap_load = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_read_block_bitmap_load, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_read_block_bitmap_load, ptr null, ptr @__traceiter_ext4_read_block_bitmap_load, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_read_block_bitmap_load = internal constant ptr @__tracepoint_ext4_read_block_bitmap_load, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fallocate_enter = internal constant [21 x i8] c"ext4_fallocate_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fallocate_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fallocate_enter }, align 4
@__tracepoint_ext4_fallocate_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fallocate_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fallocate_enter, ptr null, ptr @__traceiter_ext4_fallocate_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fallocate_enter = internal constant ptr @__tracepoint_ext4_fallocate_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_punch_hole = internal constant [16 x i8] c"ext4_punch_hole\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_punch_hole = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_punch_hole }, align 4
@__tracepoint_ext4_punch_hole = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_punch_hole, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_punch_hole, ptr null, ptr @__traceiter_ext4_punch_hole, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_punch_hole = internal constant ptr @__tracepoint_ext4_punch_hole, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_zero_range = internal constant [16 x i8] c"ext4_zero_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_zero_range = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_zero_range }, align 4
@__tracepoint_ext4_zero_range = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_zero_range, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_zero_range, ptr null, ptr @__traceiter_ext4_zero_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_zero_range = internal constant ptr @__tracepoint_ext4_zero_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fallocate_exit = internal constant [20 x i8] c"ext4_fallocate_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fallocate_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fallocate_exit }, align 4
@__tracepoint_ext4_fallocate_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fallocate_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fallocate_exit, ptr null, ptr @__traceiter_ext4_fallocate_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fallocate_exit = internal constant ptr @__tracepoint_ext4_fallocate_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_unlink_enter = internal constant [18 x i8] c"ext4_unlink_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_unlink_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_unlink_enter }, align 4
@__tracepoint_ext4_unlink_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_unlink_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_unlink_enter, ptr null, ptr @__traceiter_ext4_unlink_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_unlink_enter = internal constant ptr @__tracepoint_ext4_unlink_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_unlink_exit = internal constant [17 x i8] c"ext4_unlink_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_unlink_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_unlink_exit }, align 4
@__tracepoint_ext4_unlink_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_unlink_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_unlink_exit, ptr null, ptr @__traceiter_ext4_unlink_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_unlink_exit = internal constant ptr @__tracepoint_ext4_unlink_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_truncate_enter = internal constant [20 x i8] c"ext4_truncate_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_truncate_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_truncate_enter }, align 4
@__tracepoint_ext4_truncate_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_truncate_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_truncate_enter, ptr null, ptr @__traceiter_ext4_truncate_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_truncate_enter = internal constant ptr @__tracepoint_ext4_truncate_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_truncate_exit = internal constant [19 x i8] c"ext4_truncate_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_truncate_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_truncate_exit }, align 4
@__tracepoint_ext4_truncate_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_truncate_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_truncate_exit, ptr null, ptr @__traceiter_ext4_truncate_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_truncate_exit = internal constant ptr @__tracepoint_ext4_truncate_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_convert_to_initialized_enter = internal constant [38 x i8] c"ext4_ext_convert_to_initialized_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_convert_to_initialized_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_convert_to_initialized_enter }, align 4
@__tracepoint_ext4_ext_convert_to_initialized_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_convert_to_initialized_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_convert_to_initialized_enter, ptr null, ptr @__traceiter_ext4_ext_convert_to_initialized_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_convert_to_initialized_enter = internal constant ptr @__tracepoint_ext4_ext_convert_to_initialized_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_convert_to_initialized_fastpath = internal constant [41 x i8] c"ext4_ext_convert_to_initialized_fastpath\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_convert_to_initialized_fastpath = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_convert_to_initialized_fastpath }, align 4
@__tracepoint_ext4_ext_convert_to_initialized_fastpath = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_convert_to_initialized_fastpath, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_convert_to_initialized_fastpath, ptr null, ptr @__traceiter_ext4_ext_convert_to_initialized_fastpath, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_convert_to_initialized_fastpath = internal constant ptr @__tracepoint_ext4_ext_convert_to_initialized_fastpath, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_map_blocks_enter = internal constant [26 x i8] c"ext4_ext_map_blocks_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_map_blocks_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_map_blocks_enter }, align 4
@__tracepoint_ext4_ext_map_blocks_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_map_blocks_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_map_blocks_enter, ptr null, ptr @__traceiter_ext4_ext_map_blocks_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_map_blocks_enter = internal constant ptr @__tracepoint_ext4_ext_map_blocks_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ind_map_blocks_enter = internal constant [26 x i8] c"ext4_ind_map_blocks_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ind_map_blocks_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ind_map_blocks_enter }, align 4
@__tracepoint_ext4_ind_map_blocks_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ind_map_blocks_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ind_map_blocks_enter, ptr null, ptr @__traceiter_ext4_ind_map_blocks_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ind_map_blocks_enter = internal constant ptr @__tracepoint_ext4_ind_map_blocks_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_map_blocks_exit = internal constant [25 x i8] c"ext4_ext_map_blocks_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_map_blocks_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_map_blocks_exit }, align 4
@__tracepoint_ext4_ext_map_blocks_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_map_blocks_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_map_blocks_exit, ptr null, ptr @__traceiter_ext4_ext_map_blocks_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_map_blocks_exit = internal constant ptr @__tracepoint_ext4_ext_map_blocks_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ind_map_blocks_exit = internal constant [25 x i8] c"ext4_ind_map_blocks_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ind_map_blocks_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ind_map_blocks_exit }, align 4
@__tracepoint_ext4_ind_map_blocks_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ind_map_blocks_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ind_map_blocks_exit, ptr null, ptr @__traceiter_ext4_ind_map_blocks_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ind_map_blocks_exit = internal constant ptr @__tracepoint_ext4_ind_map_blocks_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_load_extent = internal constant [21 x i8] c"ext4_ext_load_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_load_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_load_extent }, align 4
@__tracepoint_ext4_ext_load_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_load_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_load_extent, ptr null, ptr @__traceiter_ext4_ext_load_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_load_extent = internal constant ptr @__tracepoint_ext4_ext_load_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_load_inode = internal constant [16 x i8] c"ext4_load_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_load_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_load_inode }, align 4
@__tracepoint_ext4_load_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_load_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_load_inode, ptr null, ptr @__traceiter_ext4_load_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_load_inode = internal constant ptr @__tracepoint_ext4_load_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_journal_start = internal constant [19 x i8] c"ext4_journal_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_journal_start = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_journal_start }, align 4
@__tracepoint_ext4_journal_start = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_journal_start, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_journal_start, ptr null, ptr @__traceiter_ext4_journal_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_journal_start = internal constant ptr @__tracepoint_ext4_journal_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_journal_start_reserved = internal constant [28 x i8] c"ext4_journal_start_reserved\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_journal_start_reserved = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_journal_start_reserved }, align 4
@__tracepoint_ext4_journal_start_reserved = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_journal_start_reserved, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_journal_start_reserved, ptr null, ptr @__traceiter_ext4_journal_start_reserved, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_journal_start_reserved = internal constant ptr @__tracepoint_ext4_journal_start_reserved, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_trim_extent = internal constant [17 x i8] c"ext4_trim_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_trim_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_trim_extent }, align 4
@__tracepoint_ext4_trim_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_trim_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_trim_extent, ptr null, ptr @__traceiter_ext4_trim_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_trim_extent = internal constant ptr @__tracepoint_ext4_trim_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_trim_all_free = internal constant [19 x i8] c"ext4_trim_all_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_trim_all_free = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_trim_all_free }, align 4
@__tracepoint_ext4_trim_all_free = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_trim_all_free, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_trim_all_free, ptr null, ptr @__traceiter_ext4_trim_all_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_trim_all_free = internal constant ptr @__tracepoint_ext4_trim_all_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_handle_unwritten_extents = internal constant [34 x i8] c"ext4_ext_handle_unwritten_extents\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_handle_unwritten_extents = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_handle_unwritten_extents }, align 4
@__tracepoint_ext4_ext_handle_unwritten_extents = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_handle_unwritten_extents, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_handle_unwritten_extents, ptr null, ptr @__traceiter_ext4_ext_handle_unwritten_extents, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_handle_unwritten_extents = internal constant ptr @__tracepoint_ext4_ext_handle_unwritten_extents, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_get_implied_cluster_alloc_exit = internal constant [36 x i8] c"ext4_get_implied_cluster_alloc_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_get_implied_cluster_alloc_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_get_implied_cluster_alloc_exit }, align 4
@__tracepoint_ext4_get_implied_cluster_alloc_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_get_implied_cluster_alloc_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_get_implied_cluster_alloc_exit, ptr null, ptr @__traceiter_ext4_get_implied_cluster_alloc_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_get_implied_cluster_alloc_exit = internal constant ptr @__tracepoint_ext4_get_implied_cluster_alloc_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_show_extent = internal constant [21 x i8] c"ext4_ext_show_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_show_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_show_extent }, align 4
@__tracepoint_ext4_ext_show_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_show_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_show_extent, ptr null, ptr @__traceiter_ext4_ext_show_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_show_extent = internal constant ptr @__tracepoint_ext4_ext_show_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_remove_blocks = internal constant [19 x i8] c"ext4_remove_blocks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_remove_blocks = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_remove_blocks }, align 4
@__tracepoint_ext4_remove_blocks = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_remove_blocks, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_remove_blocks, ptr null, ptr @__traceiter_ext4_remove_blocks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_remove_blocks = internal constant ptr @__tracepoint_ext4_remove_blocks, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_rm_leaf = internal constant [17 x i8] c"ext4_ext_rm_leaf\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_rm_leaf = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_rm_leaf }, align 4
@__tracepoint_ext4_ext_rm_leaf = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_rm_leaf, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_rm_leaf, ptr null, ptr @__traceiter_ext4_ext_rm_leaf, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_rm_leaf = internal constant ptr @__tracepoint_ext4_ext_rm_leaf, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_rm_idx = internal constant [16 x i8] c"ext4_ext_rm_idx\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_rm_idx = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_rm_idx }, align 4
@__tracepoint_ext4_ext_rm_idx = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_rm_idx, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_rm_idx, ptr null, ptr @__traceiter_ext4_ext_rm_idx, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_rm_idx = internal constant ptr @__tracepoint_ext4_ext_rm_idx, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_remove_space = internal constant [22 x i8] c"ext4_ext_remove_space\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_remove_space = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_remove_space }, align 4
@__tracepoint_ext4_ext_remove_space = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_remove_space, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_remove_space, ptr null, ptr @__traceiter_ext4_ext_remove_space, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_remove_space = internal constant ptr @__tracepoint_ext4_ext_remove_space, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_ext_remove_space_done = internal constant [27 x i8] c"ext4_ext_remove_space_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_ext_remove_space_done = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_ext_remove_space_done }, align 4
@__tracepoint_ext4_ext_remove_space_done = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_ext_remove_space_done, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_ext_remove_space_done, ptr null, ptr @__traceiter_ext4_ext_remove_space_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_ext_remove_space_done = internal constant ptr @__tracepoint_ext4_ext_remove_space_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_insert_extent = internal constant [22 x i8] c"ext4_es_insert_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_insert_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_insert_extent }, align 4
@__tracepoint_ext4_es_insert_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_insert_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_insert_extent, ptr null, ptr @__traceiter_ext4_es_insert_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_insert_extent = internal constant ptr @__tracepoint_ext4_es_insert_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_cache_extent = internal constant [21 x i8] c"ext4_es_cache_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_cache_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_cache_extent }, align 4
@__tracepoint_ext4_es_cache_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_cache_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_cache_extent, ptr null, ptr @__traceiter_ext4_es_cache_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_cache_extent = internal constant ptr @__tracepoint_ext4_es_cache_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_remove_extent = internal constant [22 x i8] c"ext4_es_remove_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_remove_extent = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_remove_extent }, align 4
@__tracepoint_ext4_es_remove_extent = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_remove_extent, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_remove_extent, ptr null, ptr @__traceiter_ext4_es_remove_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_remove_extent = internal constant ptr @__tracepoint_ext4_es_remove_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_find_extent_range_enter = internal constant [32 x i8] c"ext4_es_find_extent_range_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_find_extent_range_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_find_extent_range_enter }, align 4
@__tracepoint_ext4_es_find_extent_range_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_find_extent_range_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_find_extent_range_enter, ptr null, ptr @__traceiter_ext4_es_find_extent_range_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_find_extent_range_enter = internal constant ptr @__tracepoint_ext4_es_find_extent_range_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_find_extent_range_exit = internal constant [31 x i8] c"ext4_es_find_extent_range_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_find_extent_range_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_find_extent_range_exit }, align 4
@__tracepoint_ext4_es_find_extent_range_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_find_extent_range_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_find_extent_range_exit, ptr null, ptr @__traceiter_ext4_es_find_extent_range_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_find_extent_range_exit = internal constant ptr @__tracepoint_ext4_es_find_extent_range_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_lookup_extent_enter = internal constant [28 x i8] c"ext4_es_lookup_extent_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_lookup_extent_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_lookup_extent_enter }, align 4
@__tracepoint_ext4_es_lookup_extent_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_lookup_extent_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_lookup_extent_enter, ptr null, ptr @__traceiter_ext4_es_lookup_extent_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_lookup_extent_enter = internal constant ptr @__tracepoint_ext4_es_lookup_extent_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_lookup_extent_exit = internal constant [27 x i8] c"ext4_es_lookup_extent_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_lookup_extent_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_lookup_extent_exit }, align 4
@__tracepoint_ext4_es_lookup_extent_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_lookup_extent_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_lookup_extent_exit, ptr null, ptr @__traceiter_ext4_es_lookup_extent_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_lookup_extent_exit = internal constant ptr @__tracepoint_ext4_es_lookup_extent_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_shrink_count = internal constant [21 x i8] c"ext4_es_shrink_count\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_shrink_count = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_shrink_count }, align 4
@__tracepoint_ext4_es_shrink_count = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_shrink_count, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_shrink_count, ptr null, ptr @__traceiter_ext4_es_shrink_count, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_shrink_count = internal constant ptr @__tracepoint_ext4_es_shrink_count, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_shrink_scan_enter = internal constant [26 x i8] c"ext4_es_shrink_scan_enter\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_shrink_scan_enter = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_shrink_scan_enter }, align 4
@__tracepoint_ext4_es_shrink_scan_enter = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_shrink_scan_enter, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_shrink_scan_enter, ptr null, ptr @__traceiter_ext4_es_shrink_scan_enter, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_shrink_scan_enter = internal constant ptr @__tracepoint_ext4_es_shrink_scan_enter, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_shrink_scan_exit = internal constant [25 x i8] c"ext4_es_shrink_scan_exit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_shrink_scan_exit = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_shrink_scan_exit }, align 4
@__tracepoint_ext4_es_shrink_scan_exit = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_shrink_scan_exit, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_shrink_scan_exit, ptr null, ptr @__traceiter_ext4_es_shrink_scan_exit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_shrink_scan_exit = internal constant ptr @__tracepoint_ext4_es_shrink_scan_exit, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_collapse_range = internal constant [20 x i8] c"ext4_collapse_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_collapse_range = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_collapse_range }, align 4
@__tracepoint_ext4_collapse_range = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_collapse_range, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_collapse_range, ptr null, ptr @__traceiter_ext4_collapse_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_collapse_range = internal constant ptr @__tracepoint_ext4_collapse_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_insert_range = internal constant [18 x i8] c"ext4_insert_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_insert_range = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_insert_range }, align 4
@__tracepoint_ext4_insert_range = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_insert_range, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_insert_range, ptr null, ptr @__traceiter_ext4_insert_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_insert_range = internal constant ptr @__tracepoint_ext4_insert_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_shrink = internal constant [15 x i8] c"ext4_es_shrink\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_shrink = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_shrink }, align 4
@__tracepoint_ext4_es_shrink = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_shrink, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_shrink, ptr null, ptr @__traceiter_ext4_es_shrink, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_shrink = internal constant ptr @__tracepoint_ext4_es_shrink, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_es_insert_delayed_block = internal constant [29 x i8] c"ext4_es_insert_delayed_block\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_es_insert_delayed_block = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_es_insert_delayed_block }, align 4
@__tracepoint_ext4_es_insert_delayed_block = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_es_insert_delayed_block, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_es_insert_delayed_block, ptr null, ptr @__traceiter_ext4_es_insert_delayed_block, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_es_insert_delayed_block = internal constant ptr @__tracepoint_ext4_es_insert_delayed_block, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fsmap_low_key = internal constant [19 x i8] c"ext4_fsmap_low_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fsmap_low_key = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fsmap_low_key }, align 4
@__tracepoint_ext4_fsmap_low_key = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fsmap_low_key, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fsmap_low_key, ptr null, ptr @__traceiter_ext4_fsmap_low_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fsmap_low_key = internal constant ptr @__tracepoint_ext4_fsmap_low_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fsmap_high_key = internal constant [20 x i8] c"ext4_fsmap_high_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fsmap_high_key = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fsmap_high_key }, align 4
@__tracepoint_ext4_fsmap_high_key = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fsmap_high_key, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fsmap_high_key, ptr null, ptr @__traceiter_ext4_fsmap_high_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fsmap_high_key = internal constant ptr @__tracepoint_ext4_fsmap_high_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fsmap_mapping = internal constant [19 x i8] c"ext4_fsmap_mapping\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fsmap_mapping = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fsmap_mapping }, align 4
@__tracepoint_ext4_fsmap_mapping = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fsmap_mapping, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fsmap_mapping, ptr null, ptr @__traceiter_ext4_fsmap_mapping, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fsmap_mapping = internal constant ptr @__tracepoint_ext4_fsmap_mapping, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_getfsmap_low_key = internal constant [22 x i8] c"ext4_getfsmap_low_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_getfsmap_low_key = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_getfsmap_low_key }, align 4
@__tracepoint_ext4_getfsmap_low_key = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_getfsmap_low_key, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_getfsmap_low_key, ptr null, ptr @__traceiter_ext4_getfsmap_low_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_getfsmap_low_key = internal constant ptr @__tracepoint_ext4_getfsmap_low_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_getfsmap_high_key = internal constant [23 x i8] c"ext4_getfsmap_high_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_getfsmap_high_key = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_getfsmap_high_key }, align 4
@__tracepoint_ext4_getfsmap_high_key = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_getfsmap_high_key, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_getfsmap_high_key, ptr null, ptr @__traceiter_ext4_getfsmap_high_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_getfsmap_high_key = internal constant ptr @__tracepoint_ext4_getfsmap_high_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_getfsmap_mapping = internal constant [22 x i8] c"ext4_getfsmap_mapping\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_getfsmap_mapping = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_getfsmap_mapping }, align 4
@__tracepoint_ext4_getfsmap_mapping = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_getfsmap_mapping, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_getfsmap_mapping, ptr null, ptr @__traceiter_ext4_getfsmap_mapping, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_getfsmap_mapping = internal constant ptr @__tracepoint_ext4_getfsmap_mapping, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_shutdown = internal constant [14 x i8] c"ext4_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_shutdown }, align 4
@__tracepoint_ext4_shutdown = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_shutdown, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_shutdown, ptr null, ptr @__traceiter_ext4_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_shutdown = internal constant ptr @__tracepoint_ext4_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_error = internal constant [11 x i8] c"ext4_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_error = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_error }, align 4
@__tracepoint_ext4_error = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_error, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_error, ptr null, ptr @__traceiter_ext4_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_error = internal constant ptr @__tracepoint_ext4_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_prefetch_bitmaps = internal constant [22 x i8] c"ext4_prefetch_bitmaps\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_prefetch_bitmaps = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_prefetch_bitmaps }, align 4
@__tracepoint_ext4_prefetch_bitmaps = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_prefetch_bitmaps, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_prefetch_bitmaps, ptr null, ptr @__traceiter_ext4_prefetch_bitmaps, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_prefetch_bitmaps = internal constant ptr @__tracepoint_ext4_prefetch_bitmaps, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_lazy_itable_init = internal constant [22 x i8] c"ext4_lazy_itable_init\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_lazy_itable_init = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_lazy_itable_init }, align 4
@__tracepoint_ext4_lazy_itable_init = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_lazy_itable_init, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_lazy_itable_init, ptr null, ptr @__traceiter_ext4_lazy_itable_init, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_lazy_itable_init = internal constant ptr @__tracepoint_ext4_lazy_itable_init, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_replay_scan = internal constant [20 x i8] c"ext4_fc_replay_scan\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_replay_scan = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_replay_scan }, align 4
@__tracepoint_ext4_fc_replay_scan = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_replay_scan, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_replay_scan, ptr null, ptr @__traceiter_ext4_fc_replay_scan, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_replay_scan = internal constant ptr @__tracepoint_ext4_fc_replay_scan, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_replay = internal constant [15 x i8] c"ext4_fc_replay\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_replay = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_replay }, align 4
@__tracepoint_ext4_fc_replay = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_replay, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_replay, ptr null, ptr @__traceiter_ext4_fc_replay, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_replay = internal constant ptr @__tracepoint_ext4_fc_replay, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_commit_start = internal constant [21 x i8] c"ext4_fc_commit_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_commit_start = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_commit_start }, align 4
@__tracepoint_ext4_fc_commit_start = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_commit_start, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_commit_start, ptr null, ptr @__traceiter_ext4_fc_commit_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_commit_start = internal constant ptr @__tracepoint_ext4_fc_commit_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_commit_stop = internal constant [20 x i8] c"ext4_fc_commit_stop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_commit_stop = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_commit_stop }, align 4
@__tracepoint_ext4_fc_commit_stop = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_commit_stop, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_commit_stop, ptr null, ptr @__traceiter_ext4_fc_commit_stop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_commit_stop = internal constant ptr @__tracepoint_ext4_fc_commit_stop, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_stats = internal constant [14 x i8] c"ext4_fc_stats\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_stats = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_stats }, align 4
@__tracepoint_ext4_fc_stats = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_stats, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_stats, ptr null, ptr @__traceiter_ext4_fc_stats, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_stats = internal constant ptr @__tracepoint_ext4_fc_stats, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_track_create = internal constant [21 x i8] c"ext4_fc_track_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_track_create = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_track_create }, align 4
@__tracepoint_ext4_fc_track_create = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_track_create, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_track_create, ptr null, ptr @__traceiter_ext4_fc_track_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_track_create = internal constant ptr @__tracepoint_ext4_fc_track_create, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_track_link = internal constant [19 x i8] c"ext4_fc_track_link\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_track_link = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_track_link }, align 4
@__tracepoint_ext4_fc_track_link = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_track_link, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_track_link, ptr null, ptr @__traceiter_ext4_fc_track_link, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_track_link = internal constant ptr @__tracepoint_ext4_fc_track_link, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_track_unlink = internal constant [21 x i8] c"ext4_fc_track_unlink\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_track_unlink = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_track_unlink }, align 4
@__tracepoint_ext4_fc_track_unlink = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_track_unlink, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_track_unlink, ptr null, ptr @__traceiter_ext4_fc_track_unlink, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_track_unlink = internal constant ptr @__tracepoint_ext4_fc_track_unlink, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_track_inode = internal constant [20 x i8] c"ext4_fc_track_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_track_inode = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_track_inode }, align 4
@__tracepoint_ext4_fc_track_inode = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_track_inode, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_track_inode, ptr null, ptr @__traceiter_ext4_fc_track_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_track_inode = internal constant ptr @__tracepoint_ext4_fc_track_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_fc_track_range = internal constant [20 x i8] c"ext4_fc_track_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_fc_track_range = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_fc_track_range }, align 4
@__tracepoint_ext4_fc_track_range = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_fc_track_range, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_fc_track_range, ptr null, ptr @__traceiter_ext4_fc_track_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_fc_track_range = internal constant ptr @__tracepoint_ext4_fc_track_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_ext4_update_sb = internal constant [15 x i8] c"ext4_update_sb\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_ext4_update_sb = dso_local global %struct.static_call_key { ptr @__traceiter_ext4_update_sb }, align 4
@__tracepoint_ext4_update_sb = dso_local global %struct.tracepoint { ptr @__tpstrtab_ext4_update_sb, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_ext4_update_sb, ptr null, ptr @__traceiter_ext4_update_sb, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_ext4_update_sb = internal constant ptr @__tracepoint_ext4_update_sb, section "__tracepoints_ptrs", align 4
@.str = private unnamed_addr constant [7 x i8] c"BH_New\00", align 1
@__TRACE_SYSTEM_BH_New = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_BH_New = internal global ptr @__TRACE_SYSTEM_BH_New, section "_ftrace_eval_map", align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"BH_Mapped\00", align 1
@__TRACE_SYSTEM_BH_Mapped = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.1, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_BH_Mapped = internal global ptr @__TRACE_SYSTEM_BH_Mapped, section "_ftrace_eval_map", align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"BH_Unwritten\00", align 1
@__TRACE_SYSTEM_BH_Unwritten = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.2, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_BH_Unwritten = internal global ptr @__TRACE_SYSTEM_BH_Unwritten, section "_ftrace_eval_map", align 4
@.str.3 = private unnamed_addr constant [12 x i8] c"BH_Boundary\00", align 1
@__TRACE_SYSTEM_BH_Boundary = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.3, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_BH_Boundary = internal global ptr @__TRACE_SYSTEM_BH_Boundary, section "_ftrace_eval_map", align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"ES_WRITTEN_B\00", align 1
@__TRACE_SYSTEM_ES_WRITTEN_B = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.4, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_ES_WRITTEN_B = internal global ptr @__TRACE_SYSTEM_ES_WRITTEN_B, section "_ftrace_eval_map", align 4
@.str.5 = private unnamed_addr constant [15 x i8] c"ES_UNWRITTEN_B\00", align 1
@__TRACE_SYSTEM_ES_UNWRITTEN_B = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.5, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_ES_UNWRITTEN_B = internal global ptr @__TRACE_SYSTEM_ES_UNWRITTEN_B, section "_ftrace_eval_map", align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"ES_DELAYED_B\00", align 1
@__TRACE_SYSTEM_ES_DELAYED_B = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.6, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_ES_DELAYED_B = internal global ptr @__TRACE_SYSTEM_ES_DELAYED_B, section "_ftrace_eval_map", align 4
@.str.7 = private unnamed_addr constant [10 x i8] c"ES_HOLE_B\00", align 1
@__TRACE_SYSTEM_ES_HOLE_B = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.7, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_ES_HOLE_B = internal global ptr @__TRACE_SYSTEM_ES_HOLE_B, section "_ftrace_eval_map", align 4
@.str.8 = private unnamed_addr constant [16 x i8] c"ES_REFERENCED_B\00", align 1
@__TRACE_SYSTEM_ES_REFERENCED_B = internal global %struct.trace_eval_map { ptr @.str.666, ptr @.str.8, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_ES_REFERENCED_B = internal global ptr @__TRACE_SYSTEM_ES_REFERENCED_B, section "_ftrace_eval_map", align 4
@trace_event_fields_ext4_other_inode_update_time = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.53, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.54, %union.anon.103 { %struct.anon.104 { ptr @.str.55, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.56, %union.anon.103 { %struct.anon.104 { ptr @.str.57, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_other_inode_update_time = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_other_inode_update_time, ptr @perf_trace_ext4_other_inode_update_time, ptr @trace_event_reg, ptr @trace_event_fields_ext4_other_inode_update_time, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_other_inode_update_time, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_other_inode_update_time, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_other_inode_update_time = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_other_inode_update_time, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_other_inode_update_time = internal global [231 x i8] c"\22dev %d,%d orig_ino %lu ino %lu mode 0%o uid %u gid %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->orig_ino, (unsigned long) REC->ino, REC->mode, REC->uid, REC->gid\00", align 1
@event_ext4_other_inode_update_time = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_other_inode_update_time, %union.anon.105 { ptr @__tracepoint_ext4_other_inode_update_time }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_other_inode_update_time }, ptr @print_fmt_ext4_other_inode_update_time, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_other_inode_update_time = internal global ptr @event_ext4_other_inode_update_time, section "_ftrace_events", align 4
@trace_event_fields_ext4_free_inode = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.54, %union.anon.103 { %struct.anon.104 { ptr @.str.55, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.56, %union.anon.103 { %struct.anon.104 { ptr @.str.57, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_free_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_free_inode, ptr @perf_trace_ext4_free_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_free_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_free_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_free_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_free_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_free_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_free_inode = internal global [212 x i8] c"\22dev %d,%d ino %lu mode 0%o uid %u gid %u blocks %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->uid, REC->gid, REC->blocks\00", align 1
@event_ext4_free_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_free_inode, %union.anon.105 { ptr @__tracepoint_ext4_free_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_free_inode }, ptr @print_fmt_ext4_free_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_free_inode = internal global ptr @event_ext4_free_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_request_inode = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_request_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_request_inode, ptr @perf_trace_ext4_request_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_request_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_request_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_request_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_request_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_request_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_request_inode = internal global [153 x i8] c"\22dev %d,%d dir %lu mode 0%o\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->dir, REC->mode\00", align 1
@event_ext4_request_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_request_inode, %union.anon.105 { ptr @__tracepoint_ext4_request_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_request_inode }, ptr @print_fmt_ext4_request_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_request_inode = internal global ptr @event_ext4_request_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_allocate_inode = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_allocate_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_allocate_inode, ptr @perf_trace_ext4_allocate_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_allocate_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_allocate_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_allocate_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_allocate_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_allocate_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_allocate_inode = internal global [187 x i8] c"\22dev %d,%d ino %lu dir %lu mode 0%o\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned long) REC->dir, REC->mode\00", align 1
@event_ext4_allocate_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_allocate_inode, %union.anon.105 { ptr @__tracepoint_ext4_allocate_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_allocate_inode }, ptr @print_fmt_ext4_allocate_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_allocate_inode = internal global ptr @event_ext4_allocate_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_evict_inode = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.68, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_evict_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_evict_inode, ptr @perf_trace_ext4_evict_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_evict_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_evict_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_evict_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_evict_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_evict_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_evict_inode = internal global [154 x i8] c"\22dev %d,%d ino %lu nlink %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->nlink\00", align 1
@event_ext4_evict_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_evict_inode, %union.anon.105 { ptr @__tracepoint_ext4_evict_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_evict_inode }, ptr @print_fmt_ext4_evict_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_evict_inode = internal global ptr @event_ext4_evict_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_drop_inode = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.70, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_drop_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_drop_inode, ptr @perf_trace_ext4_drop_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_drop_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_drop_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_drop_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_drop_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_drop_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_drop_inode = internal global [152 x i8] c"\22dev %d,%d ino %lu drop %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->drop\00", align 1
@event_ext4_drop_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_drop_inode, %union.anon.105 { ptr @__tracepoint_ext4_drop_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_drop_inode }, ptr @print_fmt_ext4_drop_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_drop_inode = internal global ptr @event_ext4_drop_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_nfs_commit_metadata = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_nfs_commit_metadata = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_nfs_commit_metadata, ptr @perf_trace_ext4_nfs_commit_metadata, ptr @trace_event_reg, ptr @trace_event_fields_ext4_nfs_commit_metadata, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_nfs_commit_metadata, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_nfs_commit_metadata, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_nfs_commit_metadata = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_nfs_commit_metadata, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_nfs_commit_metadata = internal global [133 x i8] c"\22dev %d,%d ino %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino\00", align 1
@event_ext4_nfs_commit_metadata = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_nfs_commit_metadata, %union.anon.105 { ptr @__tracepoint_ext4_nfs_commit_metadata }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_nfs_commit_metadata }, ptr @print_fmt_ext4_nfs_commit_metadata, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_nfs_commit_metadata = internal global ptr @event_ext4_nfs_commit_metadata, section "_ftrace_events", align 4
@trace_event_fields_ext4_mark_inode_dirty = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mark_inode_dirty = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mark_inode_dirty, ptr @perf_trace_ext4_mark_inode_dirty, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mark_inode_dirty, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mark_inode_dirty, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mark_inode_dirty, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mark_inode_dirty = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mark_inode_dirty, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mark_inode_dirty = internal global [161 x i8] c"\22dev %d,%d ino %lu caller %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (void *)REC->ip\00", align 1
@event_ext4_mark_inode_dirty = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mark_inode_dirty, %union.anon.105 { ptr @__tracepoint_ext4_mark_inode_dirty }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mark_inode_dirty }, ptr @print_fmt_ext4_mark_inode_dirty, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mark_inode_dirty = internal global ptr @event_ext4_mark_inode_dirty, section "_ftrace_events", align 4
@trace_event_fields_ext4_begin_ordered_truncate = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.77, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_begin_ordered_truncate = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_begin_ordered_truncate, ptr @perf_trace_ext4_begin_ordered_truncate, ptr @trace_event_reg, ptr @trace_event_fields_ext4_begin_ordered_truncate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_begin_ordered_truncate, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_begin_ordered_truncate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_begin_ordered_truncate = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_begin_ordered_truncate, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_begin_ordered_truncate = internal global [162 x i8] c"\22dev %d,%d ino %lu new_size %lld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->new_size\00", align 1
@event_ext4_begin_ordered_truncate = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_begin_ordered_truncate, %union.anon.105 { ptr @__tracepoint_ext4_begin_ordered_truncate }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_begin_ordered_truncate }, ptr @print_fmt_ext4_begin_ordered_truncate, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_begin_ordered_truncate = internal global ptr @event_ext4_begin_ordered_truncate, section "_ftrace_events", align 4
@trace_event_fields_ext4__write_begin = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.79, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__write_begin = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__write_begin, ptr @perf_trace_ext4__write_begin, ptr @trace_event_reg, ptr @trace_event_fields_ext4__write_begin, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__write_begin, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__write_begin, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__write_begin = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__write_begin, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__write_begin = internal global [190 x i8] c"\22dev %d,%d ino %lu pos %lld len %u flags %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->pos, REC->len, REC->flags\00", align 1
@event_ext4_write_begin = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__write_begin, %union.anon.105 { ptr @__tracepoint_ext4_write_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__write_begin }, ptr @print_fmt_ext4__write_begin, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_write_begin = internal global ptr @event_ext4_write_begin, section "_ftrace_events", align 4
@event_ext4_da_write_begin = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__write_begin, %union.anon.105 { ptr @__tracepoint_ext4_da_write_begin }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__write_begin }, ptr @print_fmt_ext4__write_begin, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_write_begin = internal global ptr @event_ext4_da_write_begin, section "_ftrace_events", align 4
@trace_event_fields_ext4__write_end = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.79, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.84, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__write_end = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__write_end, ptr @perf_trace_ext4__write_end, ptr @trace_event_reg, ptr @trace_event_fields_ext4__write_end, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__write_end, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__write_end, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__write_end = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__write_end, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__write_end = internal global [192 x i8] c"\22dev %d,%d ino %lu pos %lld len %u copied %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->pos, REC->len, REC->copied\00", align 1
@event_ext4_write_end = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__write_end, %union.anon.105 { ptr @__tracepoint_ext4_write_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__write_end }, ptr @print_fmt_ext4__write_end, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_write_end = internal global ptr @event_ext4_write_end, section "_ftrace_events", align 4
@event_ext4_journalled_write_end = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__write_end, %union.anon.105 { ptr @__tracepoint_ext4_journalled_write_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__write_end }, ptr @print_fmt_ext4__write_end, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_journalled_write_end = internal global ptr @event_ext4_journalled_write_end, section "_ftrace_events", align 4
@event_ext4_da_write_end = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__write_end, %union.anon.105 { ptr @__tracepoint_ext4_da_write_end }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__write_end }, ptr @print_fmt_ext4__write_end, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_write_end = internal global ptr @event_ext4_da_write_end, section "_ftrace_events", align 4
@trace_event_fields_ext4_writepages = internal global [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.87, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.88, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.89, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.90, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.91, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.92, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.94, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.95, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_writepages = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_writepages, ptr @perf_trace_ext4_writepages, ptr @trace_event_reg, ptr @trace_event_fields_ext4_writepages, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_writepages, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_writepages, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_writepages = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_writepages, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_writepages = internal global [426 x i8] c"\22dev %d,%d ino %lu nr_to_write %ld pages_skipped %ld range_start %lld range_end %lld sync_mode %d for_kupdate %d range_cyclic %d writeback_index %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->nr_to_write, REC->pages_skipped, REC->range_start, REC->range_end, REC->sync_mode, REC->for_kupdate, REC->range_cyclic, (unsigned long) REC->writeback_index\00", align 1
@event_ext4_writepages = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_writepages, %union.anon.105 { ptr @__tracepoint_ext4_writepages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_writepages }, ptr @print_fmt_ext4_writepages, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_writepages = internal global ptr @event_ext4_writepages, section "_ftrace_events", align 4
@trace_event_fields_ext4_da_write_pages = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.87, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.92, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_da_write_pages = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_da_write_pages, ptr @perf_trace_ext4_da_write_pages, ptr @trace_event_reg, ptr @trace_event_fields_ext4_da_write_pages, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_da_write_pages, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_da_write_pages, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_da_write_pages = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_da_write_pages, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_da_write_pages = internal global [228 x i8] c"\22dev %d,%d ino %lu first_page %lu nr_to_write %ld sync_mode %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->first_page, REC->nr_to_write, REC->sync_mode\00", align 1
@event_ext4_da_write_pages = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_da_write_pages, %union.anon.105 { ptr @__tracepoint_ext4_da_write_pages }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_da_write_pages }, ptr @print_fmt_ext4_da_write_pages, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_write_pages = internal global ptr @event_ext4_da_write_pages, section "_ftrace_events", align 4
@trace_event_fields_ext4_da_write_pages_extent = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_da_write_pages_extent = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_da_write_pages_extent, ptr @perf_trace_ext4_da_write_pages_extent, ptr @trace_event_reg, ptr @trace_event_fields_ext4_da_write_pages_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_da_write_pages_extent, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_da_write_pages_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_da_write_pages_extent = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_da_write_pages_extent, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_da_write_pages_extent = internal global [361 x i8] c"\22dev %d,%d ino %lu lblk %llu len %u flags %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len, __print_flags(REC->flags, \22\22, { ((((1UL))) << (BH_New)), \22N\22 }, { ((((1UL))) << (BH_Mapped)), \22M\22 }, { ((((1UL))) << (BH_Unwritten)), \22U\22 }, { ((((1UL))) << (BH_Boundary)), \22B\22 })\00", align 1
@event_ext4_da_write_pages_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_da_write_pages_extent, %union.anon.105 { ptr @__tracepoint_ext4_da_write_pages_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_da_write_pages_extent }, ptr @print_fmt_ext4_da_write_pages_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_write_pages_extent = internal global ptr @event_ext4_da_write_pages_extent, section "_ftrace_events", align 4
@trace_event_fields_ext4_writepages_result = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.108, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.88, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.91, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.92, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_writepages_result = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_writepages_result, ptr @perf_trace_ext4_writepages_result, ptr @trace_event_reg, ptr @trace_event_fields_ext4_writepages_result, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_writepages_result, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_writepages_result, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_writepages_result = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_writepages_result, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_writepages_result = internal global [312 x i8] c"\22dev %d,%d ino %lu ret %d pages_written %d pages_skipped %ld sync_mode %d writeback_index %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->ret, REC->pages_written, REC->pages_skipped, REC->sync_mode, (unsigned long) REC->writeback_index\00", align 1
@event_ext4_writepages_result = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_writepages_result, %union.anon.105 { ptr @__tracepoint_ext4_writepages_result }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_writepages_result }, ptr @print_fmt_ext4_writepages_result, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_writepages_result = internal global ptr @event_ext4_writepages_result, section "_ftrace_events", align 4
@trace_event_fields_ext4__page_op = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__page_op = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__page_op, ptr @perf_trace_ext4__page_op, ptr @trace_event_reg, ptr @trace_event_fields_ext4__page_op, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__page_op, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__page_op, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__page_op = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__page_op, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__page_op = internal global [176 x i8] c"\22dev %d,%d ino %lu page_index %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned long) REC->index\00", align 1
@event_ext4_writepage = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__page_op, %union.anon.105 { ptr @__tracepoint_ext4_writepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__page_op }, ptr @print_fmt_ext4__page_op, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_writepage = internal global ptr @event_ext4_writepage, section "_ftrace_events", align 4
@event_ext4_readpage = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__page_op, %union.anon.105 { ptr @__tracepoint_ext4_readpage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__page_op }, ptr @print_fmt_ext4__page_op, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_readpage = internal global ptr @event_ext4_readpage, section "_ftrace_events", align 4
@event_ext4_releasepage = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__page_op, %union.anon.105 { ptr @__tracepoint_ext4_releasepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__page_op }, ptr @print_fmt_ext4__page_op, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_releasepage = internal global ptr @event_ext4_releasepage, section "_ftrace_events", align 4
@trace_event_fields_ext4_invalidatepage_op = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.110, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.112, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.113, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_invalidatepage_op = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_invalidatepage_op, ptr @perf_trace_ext4_invalidatepage_op, ptr @trace_event_reg, ptr @trace_event_fields_ext4_invalidatepage_op, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_invalidatepage_op, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_invalidatepage_op, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_invalidatepage_op = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_invalidatepage_op, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_invalidatepage_op = internal global [222 x i8] c"\22dev %d,%d ino %lu page_index %lu offset %u length %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned long) REC->index, REC->offset, REC->length\00", align 1
@event_ext4_invalidatepage = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_invalidatepage_op, %union.anon.105 { ptr @__tracepoint_ext4_invalidatepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_invalidatepage_op }, ptr @print_fmt_ext4_invalidatepage_op, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_invalidatepage = internal global ptr @event_ext4_invalidatepage, section "_ftrace_events", align 4
@event_ext4_journalled_invalidatepage = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_invalidatepage_op, %union.anon.105 { ptr @__tracepoint_ext4_journalled_invalidatepage }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_invalidatepage_op }, ptr @print_fmt_ext4_invalidatepage_op, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_journalled_invalidatepage = internal global ptr @event_ext4_journalled_invalidatepage, section "_ftrace_events", align 4
@trace_event_fields_ext4_discard_blocks = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.115, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.116, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_discard_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_discard_blocks, ptr @perf_trace_ext4_discard_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_discard_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_discard_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_discard_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_discard_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_discard_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_discard_blocks = internal global [141 x i8] c"\22dev %d,%d blk %llu count %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->blk, REC->count\00", align 1
@event_ext4_discard_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_discard_blocks, %union.anon.105 { ptr @__tracepoint_ext4_discard_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_discard_blocks }, ptr @print_fmt_ext4_discard_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_discard_blocks = internal global ptr @event_ext4_discard_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4__mb_new_pa = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.118, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.119, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__mb_new_pa = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__mb_new_pa, ptr @perf_trace_ext4__mb_new_pa, ptr @trace_event_reg, ptr @trace_event_fields_ext4__mb_new_pa, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__mb_new_pa, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__mb_new_pa, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__mb_new_pa = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__mb_new_pa, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__mb_new_pa = internal global [209 x i8] c"\22dev %d,%d ino %lu pstart %llu len %u lstart %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->pa_pstart, REC->pa_len, REC->pa_lstart\00", align 1
@event_ext4_mb_new_inode_pa = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__mb_new_pa, %union.anon.105 { ptr @__tracepoint_ext4_mb_new_inode_pa }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__mb_new_pa }, ptr @print_fmt_ext4__mb_new_pa, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_new_inode_pa = internal global ptr @event_ext4_mb_new_inode_pa, section "_ftrace_events", align 4
@event_ext4_mb_new_group_pa = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__mb_new_pa, %union.anon.105 { ptr @__tracepoint_ext4_mb_new_group_pa }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__mb_new_pa }, ptr @print_fmt_ext4__mb_new_pa, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_new_group_pa = internal global ptr @event_ext4_mb_new_group_pa, section "_ftrace_events", align 4
@trace_event_fields_ext4_mb_release_inode_pa = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.122, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.116, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mb_release_inode_pa = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mb_release_inode_pa, ptr @perf_trace_ext4_mb_release_inode_pa, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mb_release_inode_pa, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mb_release_inode_pa, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mb_release_inode_pa, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mb_release_inode_pa = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mb_release_inode_pa, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mb_release_inode_pa = internal global [177 x i8] c"\22dev %d,%d ino %lu block %llu count %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->block, REC->count\00", align 1
@event_ext4_mb_release_inode_pa = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mb_release_inode_pa, %union.anon.105 { ptr @__tracepoint_ext4_mb_release_inode_pa }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mb_release_inode_pa }, ptr @print_fmt_ext4_mb_release_inode_pa, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_release_inode_pa = internal global ptr @event_ext4_mb_release_inode_pa, section "_ftrace_events", align 4
@trace_event_fields_ext4_mb_release_group_pa = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.118, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mb_release_group_pa = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mb_release_group_pa, ptr @perf_trace_ext4_mb_release_group_pa, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mb_release_group_pa, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mb_release_group_pa, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mb_release_group_pa, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mb_release_group_pa = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mb_release_group_pa, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mb_release_group_pa = internal global [147 x i8] c"\22dev %d,%d pstart %llu len %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->pa_pstart, REC->pa_len\00", align 1
@event_ext4_mb_release_group_pa = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mb_release_group_pa, %union.anon.105 { ptr @__tracepoint_ext4_mb_release_group_pa }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mb_release_group_pa }, ptr @print_fmt_ext4_mb_release_group_pa, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_release_group_pa = internal global ptr @event_ext4_mb_release_group_pa, section "_ftrace_events", align 4
@trace_event_fields_ext4_discard_preallocations = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_discard_preallocations = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_discard_preallocations, ptr @perf_trace_ext4_discard_preallocations, ptr @trace_event_reg, ptr @trace_event_fields_ext4_discard_preallocations, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_discard_preallocations, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_discard_preallocations, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_discard_preallocations = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_discard_preallocations, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_discard_preallocations = internal global [174 x i8] c"\22dev %d,%d ino %lu len: %u needed %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->len, REC->needed\00", align 1
@event_ext4_discard_preallocations = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_discard_preallocations, %union.anon.105 { ptr @__tracepoint_ext4_discard_preallocations }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_discard_preallocations }, ptr @print_fmt_ext4_discard_preallocations, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_discard_preallocations = internal global ptr @event_ext4_discard_preallocations, section "_ftrace_events", align 4
@trace_event_fields_ext4_mb_discard_preallocations = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.125, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mb_discard_preallocations = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mb_discard_preallocations, ptr @perf_trace_ext4_mb_discard_preallocations, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mb_discard_preallocations, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mb_discard_preallocations, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mb_discard_preallocations, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mb_discard_preallocations = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mb_discard_preallocations, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mb_discard_preallocations = internal global [122 x i8] c"\22dev %d,%d needed %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->needed\00", align 1
@event_ext4_mb_discard_preallocations = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mb_discard_preallocations, %union.anon.105 { ptr @__tracepoint_ext4_mb_discard_preallocations }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mb_discard_preallocations }, ptr @print_fmt_ext4_mb_discard_preallocations, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_discard_preallocations = internal global ptr @event_ext4_mb_discard_preallocations, section "_ftrace_events", align 4
@trace_event_fields_ext4_request_blocks = internal global [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.129, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.131, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.132, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.133, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_request_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_request_blocks, ptr @perf_trace_ext4_request_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_request_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_request_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_request_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_request_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_request_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_request_blocks = internal global [738 x i8] c"\22dev %d,%d ino %lu flags %s len %u lblk %u goal %llu lleft %u lright %u pleft %llu pright %llu \22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, __print_flags(REC->flags, \22|\22, { 0x0001, \22HINT_MERGE\22 }, { 0x0002, \22HINT_RESV\22 }, { 0x0004, \22HINT_MDATA\22 }, { 0x0008, \22HINT_FIRST\22 }, { 0x0010, \22HINT_BEST\22 }, { 0x0020, \22HINT_DATA\22 }, { 0x0040, \22HINT_NOPREALLOC\22 }, { 0x0080, \22HINT_GRP_ALLOC\22 }, { 0x0100, \22HINT_GOAL_ONLY\22 }, { 0x0200, \22HINT_TRY_GOAL\22 }, { 0x0400, \22DELALLOC_RESV\22 }, { 0x0800, \22STREAM_ALLOC\22 }, { 0x1000, \22USE_ROOT_BLKS\22 }, { 0x2000, \22USE_RESV\22 }, { 0x4000, \22STRICT_CHECK\22 }), REC->len, REC->logical, REC->goal, REC->lleft, REC->lright, REC->pleft, REC->pright\00", align 1
@event_ext4_request_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_request_blocks, %union.anon.105 { ptr @__tracepoint_ext4_request_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_request_blocks }, ptr @print_fmt_ext4_request_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_request_blocks = internal global ptr @event_ext4_request_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4_allocate_blocks = internal global [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.122, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.129, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.130, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.131, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.132, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.133, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_allocate_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_allocate_blocks, ptr @perf_trace_ext4_allocate_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_allocate_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_allocate_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_allocate_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_allocate_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_allocate_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_allocate_blocks = internal global [760 x i8] c"\22dev %d,%d ino %lu flags %s len %u block %llu lblk %u goal %llu lleft %u lright %u pleft %llu pright %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, __print_flags(REC->flags, \22|\22, { 0x0001, \22HINT_MERGE\22 }, { 0x0002, \22HINT_RESV\22 }, { 0x0004, \22HINT_MDATA\22 }, { 0x0008, \22HINT_FIRST\22 }, { 0x0010, \22HINT_BEST\22 }, { 0x0020, \22HINT_DATA\22 }, { 0x0040, \22HINT_NOPREALLOC\22 }, { 0x0080, \22HINT_GRP_ALLOC\22 }, { 0x0100, \22HINT_GOAL_ONLY\22 }, { 0x0200, \22HINT_TRY_GOAL\22 }, { 0x0400, \22DELALLOC_RESV\22 }, { 0x0800, \22STREAM_ALLOC\22 }, { 0x1000, \22USE_ROOT_BLKS\22 }, { 0x2000, \22USE_RESV\22 }, { 0x4000, \22STRICT_CHECK\22 }), REC->len, REC->block, REC->logical, REC->goal, REC->lleft, REC->lright, REC->pleft, REC->pright\00", align 1
@event_ext4_allocate_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_allocate_blocks, %union.anon.105 { ptr @__tracepoint_ext4_allocate_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_allocate_blocks }, ptr @print_fmt_ext4_allocate_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_allocate_blocks = internal global ptr @event_ext4_allocate_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4_free_blocks = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.122, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.116, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_free_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_free_blocks, ptr @perf_trace_ext4_free_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_free_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_free_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_free_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_free_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_free_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_free_blocks = internal global [388 x i8] c"\22dev %d,%d ino %lu mode 0%o block %llu count %lu flags %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->block, REC->count, __print_flags(REC->flags, \22|\22, { 0x0001, \22METADATA\22 }, { 0x0002, \22FORGET\22 }, { 0x0004, \22VALIDATED\22 }, { 0x0008, \22NO_QUOTA\22 }, { 0x0010,\221ST_CLUSTER\22 }, { 0x0020, \22LAST_CLUSTER\22 })\00", align 1
@event_ext4_free_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_free_blocks, %union.anon.105 { ptr @__tracepoint_ext4_free_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_free_blocks }, ptr @print_fmt_ext4_free_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_free_blocks = internal global ptr @event_ext4_free_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4_sync_file_enter = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.159, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.160, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_sync_file_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_sync_file_enter, ptr @perf_trace_ext4_sync_file_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4_sync_file_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_sync_file_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_sync_file_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_sync_file_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_sync_file_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_sync_file_enter = internal global [201 x i8] c"\22dev %d,%d ino %lu parent %lu datasync %d \22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned long) REC->parent, REC->datasync\00", align 1
@event_ext4_sync_file_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_sync_file_enter, %union.anon.105 { ptr @__tracepoint_ext4_sync_file_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_sync_file_enter }, ptr @print_fmt_ext4_sync_file_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_sync_file_enter = internal global ptr @event_ext4_sync_file_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_sync_file_exit = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_sync_file_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_sync_file_exit, ptr @perf_trace_ext4_sync_file_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_sync_file_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_sync_file_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_sync_file_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_sync_file_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_sync_file_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_sync_file_exit = internal global [150 x i8] c"\22dev %d,%d ino %lu ret %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->ret\00", align 1
@event_ext4_sync_file_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_sync_file_exit, %union.anon.105 { ptr @__tracepoint_ext4_sync_file_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_sync_file_exit }, ptr @print_fmt_ext4_sync_file_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_sync_file_exit = internal global ptr @event_ext4_sync_file_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_sync_fs = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.163, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_sync_fs = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_sync_fs, ptr @perf_trace_ext4_sync_fs, ptr @trace_event_reg, ptr @trace_event_fields_ext4_sync_fs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_sync_fs, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_sync_fs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_sync_fs = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_sync_fs, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_sync_fs = internal global [118 x i8] c"\22dev %d,%d wait %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->wait\00", align 1
@event_ext4_sync_fs = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_sync_fs, %union.anon.105 { ptr @__tracepoint_ext4_sync_fs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_sync_fs }, ptr @print_fmt_ext4_sync_fs, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_sync_fs = internal global ptr @event_ext4_sync_fs, section "_ftrace_events", align 4
@trace_event_fields_ext4_alloc_da_blocks = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.165, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_alloc_da_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_alloc_da_blocks, ptr @perf_trace_ext4_alloc_da_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_alloc_da_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_alloc_da_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_alloc_da_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_alloc_da_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_alloc_da_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_alloc_da_blocks = internal global [175 x i8] c"\22dev %d,%d ino %lu reserved_data_blocks %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->data_blocks\00", align 1
@event_ext4_alloc_da_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_alloc_da_blocks, %union.anon.105 { ptr @__tracepoint_ext4_alloc_da_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_alloc_da_blocks }, ptr @print_fmt_ext4_alloc_da_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_alloc_da_blocks = internal global ptr @event_ext4_alloc_da_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4_mballoc_alloc = internal global [21 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.167, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.168, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.171, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.172, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.173, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.174, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.175, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.176, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.177, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.178, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.179, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.180, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.181, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.182, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.183, %union.anon.103 { %struct.anon.104 { ptr @.str.184, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mballoc_alloc = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mballoc_alloc, ptr @perf_trace_ext4_mballoc_alloc, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mballoc_alloc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mballoc_alloc, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mballoc_alloc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mballoc_alloc = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mballoc_alloc, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mballoc_alloc = internal global [971 x i8] c"\22dev %d,%d inode %lu orig %u/%d/%u@%u goal %u/%d/%u@%u result %u/%d/%u@%u blks %u grps %u cr %u flags %s tail %u broken %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->orig_group, REC->orig_start, REC->orig_len, REC->orig_logical, REC->goal_group, REC->goal_start, REC->goal_len, REC->goal_logical, REC->result_group, REC->result_start, REC->result_len, REC->result_logical, REC->found, REC->groups, REC->cr, __print_flags(REC->flags, \22|\22, { 0x0001, \22HINT_MERGE\22 }, { 0x0002, \22HINT_RESV\22 }, { 0x0004, \22HINT_MDATA\22 }, { 0x0008, \22HINT_FIRST\22 }, { 0x0010, \22HINT_BEST\22 }, { 0x0020, \22HINT_DATA\22 }, { 0x0040, \22HINT_NOPREALLOC\22 }, { 0x0080, \22HINT_GRP_ALLOC\22 }, { 0x0100, \22HINT_GOAL_ONLY\22 }, { 0x0200, \22HINT_TRY_GOAL\22 }, { 0x0400, \22DELALLOC_RESV\22 }, { 0x0800, \22STREAM_ALLOC\22 }, { 0x1000, \22USE_ROOT_BLKS\22 }, { 0x2000, \22USE_RESV\22 }, { 0x4000, \22STRICT_CHECK\22 }), REC->tail, REC->buddy ? 1 << REC->buddy : 0\00", align 1
@event_ext4_mballoc_alloc = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mballoc_alloc, %union.anon.105 { ptr @__tracepoint_ext4_mballoc_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mballoc_alloc }, ptr @print_fmt_ext4_mballoc_alloc, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mballoc_alloc = internal global ptr @event_ext4_mballoc_alloc, section "_ftrace_events", align 4
@trace_event_fields_ext4_mballoc_prealloc = internal global [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.167, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.168, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.170, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.175, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.176, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.177, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.178, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_mballoc_prealloc = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_mballoc_prealloc, ptr @perf_trace_ext4_mballoc_prealloc, ptr @trace_event_reg, ptr @trace_event_fields_ext4_mballoc_prealloc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_mballoc_prealloc, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_mballoc_prealloc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_mballoc_prealloc = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_mballoc_prealloc, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_mballoc_prealloc = internal global [315 x i8] c"\22dev %d,%d inode %lu orig %u/%d/%u@%u result %u/%d/%u@%u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->orig_group, REC->orig_start, REC->orig_len, REC->orig_logical, REC->result_group, REC->result_start, REC->result_len, REC->result_logical\00", align 1
@event_ext4_mballoc_prealloc = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_mballoc_prealloc, %union.anon.105 { ptr @__tracepoint_ext4_mballoc_prealloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_mballoc_prealloc }, ptr @print_fmt_ext4_mballoc_prealloc, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mballoc_prealloc = internal global ptr @event_ext4_mballoc_prealloc, section "_ftrace_events", align 4
@trace_event_fields_ext4__mballoc = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.176, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.177, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.178, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__mballoc = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__mballoc, ptr @perf_trace_ext4__mballoc, ptr @trace_event_reg, ptr @trace_event_fields_ext4__mballoc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__mballoc, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__mballoc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__mballoc = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__mballoc, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__mballoc = internal global [207 x i8] c"\22dev %d,%d inode %lu extent %u/%d/%d \22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->result_group, REC->result_start, REC->result_len\00", align 1
@event_ext4_mballoc_discard = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__mballoc, %union.anon.105 { ptr @__tracepoint_ext4_mballoc_discard }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__mballoc }, ptr @print_fmt_ext4__mballoc, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mballoc_discard = internal global ptr @event_ext4_mballoc_discard, section "_ftrace_events", align 4
@event_ext4_mballoc_free = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__mballoc, %union.anon.105 { ptr @__tracepoint_ext4_mballoc_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__mballoc }, ptr @print_fmt_ext4__mballoc, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mballoc_free = internal global ptr @event_ext4_mballoc_free, section "_ftrace_events", align 4
@trace_event_fields_ext4_forget = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.122, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.188, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_forget = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_forget, ptr @perf_trace_ext4_forget, ptr @trace_event_reg, ptr @trace_event_fields_ext4_forget, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_forget, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_forget, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_forget = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_forget, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_forget = internal global [209 x i8] c"\22dev %d,%d ino %lu mode 0%o is_metadata %d block %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->is_metadata, REC->block\00", align 1
@event_ext4_forget = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_forget, %union.anon.105 { ptr @__tracepoint_ext4_forget }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_forget }, ptr @print_fmt_ext4_forget, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_forget = internal global ptr @event_ext4_forget, section "_ftrace_events", align 4
@trace_event_fields_ext4_da_update_reserve_space = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.190, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.191, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.192, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.193, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_da_update_reserve_space = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_da_update_reserve_space, ptr @perf_trace_ext4_da_update_reserve_space, ptr @trace_event_reg, ptr @trace_event_fields_ext4_da_update_reserve_space, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_da_update_reserve_space, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_da_update_reserve_space, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_da_update_reserve_space = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_da_update_reserve_space, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_da_update_reserve_space = internal global [299 x i8] c"\22dev %d,%d ino %lu mode 0%o i_blocks %llu used_blocks %d reserved_data_blocks %d quota_claim %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->i_blocks, REC->used_blocks, REC->reserved_data_blocks, REC->quota_claim\00", align 1
@event_ext4_da_update_reserve_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_da_update_reserve_space, %union.anon.105 { ptr @__tracepoint_ext4_da_update_reserve_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_da_update_reserve_space }, ptr @print_fmt_ext4_da_update_reserve_space, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_update_reserve_space = internal global ptr @event_ext4_da_update_reserve_space, section "_ftrace_events", align 4
@trace_event_fields_ext4_da_reserve_space = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.190, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.192, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_da_reserve_space = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_da_reserve_space, ptr @perf_trace_ext4_da_reserve_space, ptr @trace_event_reg, ptr @trace_event_fields_ext4_da_reserve_space, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_da_reserve_space, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_da_reserve_space, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_da_reserve_space = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_da_reserve_space, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_da_reserve_space = internal global [233 x i8] c"\22dev %d,%d ino %lu mode 0%o i_blocks %llu reserved_data_blocks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->i_blocks, REC->reserved_data_blocks\00", align 1
@event_ext4_da_reserve_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_da_reserve_space, %union.anon.105 { ptr @__tracepoint_ext4_da_reserve_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_da_reserve_space }, ptr @print_fmt_ext4_da_reserve_space, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_reserve_space = internal global ptr @event_ext4_da_reserve_space, section "_ftrace_events", align 4
@trace_event_fields_ext4_da_release_space = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.190, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.196, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.192, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.58, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_da_release_space = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_da_release_space, ptr @perf_trace_ext4_da_release_space, ptr @trace_event_reg, ptr @trace_event_fields_ext4_da_release_space, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_da_release_space, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_da_release_space, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_da_release_space = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_da_release_space, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_da_release_space = internal global [268 x i8] c"\22dev %d,%d ino %lu mode 0%o i_blocks %llu freed_blocks %d reserved_data_blocks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->mode, REC->i_blocks, REC->freed_blocks, REC->reserved_data_blocks\00", align 1
@event_ext4_da_release_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_da_release_space, %union.anon.105 { ptr @__tracepoint_ext4_da_release_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_da_release_space }, ptr @print_fmt_ext4_da_release_space, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_da_release_space = internal global ptr @event_ext4_da_release_space, section "_ftrace_events", align 4
@trace_event_fields_ext4__bitmap_load = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__bitmap_load = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__bitmap_load, ptr @perf_trace_ext4__bitmap_load, ptr @trace_event_reg, ptr @trace_event_fields_ext4__bitmap_load, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__bitmap_load, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__bitmap_load, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__bitmap_load = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__bitmap_load, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__bitmap_load = internal global [120 x i8] c"\22dev %d,%d group %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->group\00", align 1
@event_ext4_mb_bitmap_load = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__bitmap_load, %union.anon.105 { ptr @__tracepoint_ext4_mb_bitmap_load }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__bitmap_load }, ptr @print_fmt_ext4__bitmap_load, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_bitmap_load = internal global ptr @event_ext4_mb_bitmap_load, section "_ftrace_events", align 4
@event_ext4_mb_buddy_bitmap_load = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__bitmap_load, %union.anon.105 { ptr @__tracepoint_ext4_mb_buddy_bitmap_load }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__bitmap_load }, ptr @print_fmt_ext4__bitmap_load, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_mb_buddy_bitmap_load = internal global ptr @event_ext4_mb_buddy_bitmap_load, section "_ftrace_events", align 4
@event_ext4_load_inode_bitmap = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__bitmap_load, %union.anon.105 { ptr @__tracepoint_ext4_load_inode_bitmap }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__bitmap_load }, ptr @print_fmt_ext4__bitmap_load, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_load_inode_bitmap = internal global ptr @event_ext4_load_inode_bitmap, section "_ftrace_events", align 4
@trace_event_fields_ext4_read_block_bitmap_load = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.200, %union.anon.103 { %struct.anon.104 { ptr @.str.201, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_read_block_bitmap_load = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_read_block_bitmap_load, ptr @perf_trace_ext4_read_block_bitmap_load, ptr @trace_event_reg, ptr @trace_event_fields_ext4_read_block_bitmap_load, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_read_block_bitmap_load, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_read_block_bitmap_load, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_read_block_bitmap_load = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_read_block_bitmap_load, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_read_block_bitmap_load = internal global [147 x i8] c"\22dev %d,%d group %u prefetch %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->group, REC->prefetch\00", align 1
@event_ext4_read_block_bitmap_load = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_read_block_bitmap_load, %union.anon.105 { ptr @__tracepoint_ext4_read_block_bitmap_load }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_read_block_bitmap_load }, ptr @print_fmt_ext4_read_block_bitmap_load, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_read_block_bitmap_load = internal global ptr @event_ext4_read_block_bitmap_load, section "_ftrace_events", align 4
@trace_event_fields_ext4__fallocate_mode = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.112, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.59, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__fallocate_mode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__fallocate_mode, ptr @perf_trace_ext4__fallocate_mode, ptr @trace_event_reg, ptr @trace_event_fields_ext4__fallocate_mode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__fallocate_mode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__fallocate_mode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__fallocate_mode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__fallocate_mode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__fallocate_mode = internal global [337 x i8] c"\22dev %d,%d ino %lu offset %lld len %lld mode %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->offset, REC->len, __print_flags(REC->mode, \22|\22, { 0x01, \22KEEP_SIZE\22}, { 0x02, \22PUNCH_HOLE\22}, { 0x04, \22NO_HIDE_STALE\22}, { 0x08, \22COLLAPSE_RANGE\22}, { 0x10, \22ZERO_RANGE\22})\00", align 1
@event_ext4_fallocate_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__fallocate_mode, %union.anon.105 { ptr @__tracepoint_ext4_fallocate_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__fallocate_mode }, ptr @print_fmt_ext4__fallocate_mode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fallocate_enter = internal global ptr @event_ext4_fallocate_enter, section "_ftrace_events", align 4
@event_ext4_punch_hole = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__fallocate_mode, %union.anon.105 { ptr @__tracepoint_ext4_punch_hole }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__fallocate_mode }, ptr @print_fmt_ext4__fallocate_mode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_punch_hole = internal global ptr @event_ext4_punch_hole, section "_ftrace_events", align 4
@event_ext4_zero_range = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__fallocate_mode, %union.anon.105 { ptr @__tracepoint_ext4_zero_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__fallocate_mode }, ptr @print_fmt_ext4__fallocate_mode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_zero_range = internal global ptr @event_ext4_zero_range, section "_ftrace_events", align 4
@trace_event_fields_ext4_fallocate_exit = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.79, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fallocate_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fallocate_exit, ptr @perf_trace_ext4_fallocate_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fallocate_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fallocate_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fallocate_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fallocate_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fallocate_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fallocate_exit = internal global [192 x i8] c"\22dev %d,%d ino %lu pos %lld blocks %u ret %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->pos, REC->blocks, REC->ret\00", align 1
@event_ext4_fallocate_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fallocate_exit, %union.anon.105 { ptr @__tracepoint_ext4_fallocate_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fallocate_exit }, ptr @print_fmt_ext4_fallocate_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fallocate_exit = internal global ptr @event_ext4_fallocate_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_unlink_enter = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.159, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.210, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_unlink_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_unlink_enter, ptr @perf_trace_ext4_unlink_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4_unlink_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_unlink_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_unlink_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_unlink_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_unlink_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_unlink_enter = internal global [194 x i8] c"\22dev %d,%d ino %lu size %lld parent %lu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->size, (unsigned long) REC->parent\00", align 1
@event_ext4_unlink_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_unlink_enter, %union.anon.105 { ptr @__tracepoint_ext4_unlink_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_unlink_enter }, ptr @print_fmt_ext4_unlink_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_unlink_enter = internal global ptr @event_ext4_unlink_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_unlink_exit = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_unlink_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_unlink_exit, ptr @perf_trace_ext4_unlink_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_unlink_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_unlink_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_unlink_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_unlink_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_unlink_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_unlink_exit = internal global [150 x i8] c"\22dev %d,%d ino %lu ret %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->ret\00", align 1
@event_ext4_unlink_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_unlink_exit, %union.anon.105 { ptr @__tracepoint_ext4_unlink_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_unlink_exit }, ptr @print_fmt_ext4_unlink_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_unlink_exit = internal global ptr @event_ext4_unlink_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4__truncate = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__truncate = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__truncate, ptr @perf_trace_ext4__truncate, ptr @trace_event_reg, ptr @trace_event_fields_ext4__truncate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__truncate, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__truncate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__truncate = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__truncate, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__truncate = internal global [158 x i8] c"\22dev %d,%d ino %lu blocks %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->blocks\00", align 1
@event_ext4_truncate_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__truncate, %union.anon.105 { ptr @__tracepoint_ext4_truncate_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__truncate }, ptr @print_fmt_ext4__truncate, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_truncate_enter = internal global ptr @event_ext4_truncate_enter, section "_ftrace_events", align 4
@event_ext4_truncate_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__truncate, %union.anon.105 { ptr @__tracepoint_ext4_truncate_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__truncate }, ptr @print_fmt_ext4__truncate, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_truncate_exit = internal global ptr @event_ext4_truncate_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_convert_to_initialized_enter = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.214, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.218, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.220, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_convert_to_initialized_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_convert_to_initialized_enter, ptr @perf_trace_ext4_ext_convert_to_initialized_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_convert_to_initialized_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_convert_to_initialized_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_convert_to_initialized_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_convert_to_initialized_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_convert_to_initialized_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_convert_to_initialized_enter = internal global [246 x i8] c"\22dev %d,%d ino %lu m_lblk %u m_len %u u_lblk %u u_len %u u_pblk %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->m_lblk, REC->m_len, REC->u_lblk, REC->u_len, REC->u_pblk\00", align 1
@event_ext4_ext_convert_to_initialized_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_convert_to_initialized_enter, %union.anon.105 { ptr @__tracepoint_ext4_ext_convert_to_initialized_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_convert_to_initialized_enter }, ptr @print_fmt_ext4_ext_convert_to_initialized_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_convert_to_initialized_enter = internal global ptr @event_ext4_ext_convert_to_initialized_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_convert_to_initialized_fastpath = internal global [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.214, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.216, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.217, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.218, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.220, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.222, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.223, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.224, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_convert_to_initialized_fastpath = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_convert_to_initialized_fastpath, ptr @perf_trace_ext4_ext_convert_to_initialized_fastpath, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_convert_to_initialized_fastpath, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_convert_to_initialized_fastpath, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_convert_to_initialized_fastpath, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_convert_to_initialized_fastpath = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_convert_to_initialized_fastpath, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_convert_to_initialized_fastpath = internal global [316 x i8] c"\22dev %d,%d ino %lu m_lblk %u m_len %u u_lblk %u u_len %u u_pblk %llu i_lblk %u i_len %u i_pblk %llu \22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->m_lblk, REC->m_len, REC->u_lblk, REC->u_len, REC->u_pblk, REC->i_lblk, REC->i_len, REC->i_pblk\00", align 1
@event_ext4_ext_convert_to_initialized_fastpath = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_convert_to_initialized_fastpath, %union.anon.105 { ptr @__tracepoint_ext4_ext_convert_to_initialized_fastpath }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_convert_to_initialized_fastpath }, ptr @print_fmt_ext4_ext_convert_to_initialized_fastpath, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_convert_to_initialized_fastpath = internal global ptr @event_ext4_ext_convert_to_initialized_fastpath, section "_ftrace_events", align 4
@trace_event_fields_ext4__map_blocks_enter = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__map_blocks_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__map_blocks_enter, ptr @perf_trace_ext4__map_blocks_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4__map_blocks_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__map_blocks_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__map_blocks_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__map_blocks_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__map_blocks_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__map_blocks_enter = internal global [490 x i8] c"\22dev %d,%d ino %lu lblk %u len %u flags %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len, __print_flags(REC->flags, \22|\22, { 0x0001, \22CREATE\22 }, { 0x0002, \22UNWRIT\22 }, { 0x0004, \22DELALLOC\22 }, { 0x0008, \22PRE_IO\22 }, { 0x0010, \22CONVERT\22 }, { 0x0020, \22METADATA_NOFAIL\22 }, { 0x0040, \22NO_NORMALIZE\22 }, { 0x0100, \22CONVERT_UNWRITTEN\22 }, { 0x0200, \22ZERO\22 }, { 0x0400, \22IO_SUBMIT\22 }, { 0x40000000, \22EX_NOCACHE\22 })\00", align 1
@event_ext4_ext_map_blocks_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__map_blocks_enter, %union.anon.105 { ptr @__tracepoint_ext4_ext_map_blocks_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__map_blocks_enter }, ptr @print_fmt_ext4__map_blocks_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_map_blocks_enter = internal global ptr @event_ext4_ext_map_blocks_enter, section "_ftrace_events", align 4
@event_ext4_ind_map_blocks_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__map_blocks_enter, %union.anon.105 { ptr @__tracepoint_ext4_ind_map_blocks_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__map_blocks_enter }, ptr @print_fmt_ext4__map_blocks_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ind_map_blocks_enter = internal global ptr @event_ext4_ind_map_blocks_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4__map_blocks_exit = internal global [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.239, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__map_blocks_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__map_blocks_exit, ptr @perf_trace_ext4__map_blocks_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4__map_blocks_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__map_blocks_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__map_blocks_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__map_blocks_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__map_blocks_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__map_blocks_exit = internal global [720 x i8] c"\22dev %d,%d ino %lu flags %s lblk %u pblk %llu len %u mflags %s ret %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, __print_flags(REC->flags, \22|\22, { 0x0001, \22CREATE\22 }, { 0x0002, \22UNWRIT\22 }, { 0x0004, \22DELALLOC\22 }, { 0x0008, \22PRE_IO\22 }, { 0x0010, \22CONVERT\22 }, { 0x0020, \22METADATA_NOFAIL\22 }, { 0x0040, \22NO_NORMALIZE\22 }, { 0x0100, \22CONVERT_UNWRITTEN\22 }, { 0x0200, \22ZERO\22 }, { 0x0400, \22IO_SUBMIT\22 }, { 0x40000000, \22EX_NOCACHE\22 }), REC->lblk, REC->pblk, REC->len, __print_flags(REC->mflags, \22\22, { ((((1UL))) << (BH_New)), \22N\22 }, { ((((1UL))) << (BH_Mapped)), \22M\22 }, { ((((1UL))) << (BH_Unwritten)), \22U\22 }, { ((((1UL))) << (BH_Boundary)), \22B\22 }), REC->ret\00", align 1
@event_ext4_ext_map_blocks_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__map_blocks_exit, %union.anon.105 { ptr @__tracepoint_ext4_ext_map_blocks_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__map_blocks_exit }, ptr @print_fmt_ext4__map_blocks_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_map_blocks_exit = internal global ptr @event_ext4_ext_map_blocks_exit, section "_ftrace_events", align 4
@event_ext4_ind_map_blocks_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__map_blocks_exit, %union.anon.105 { ptr @__tracepoint_ext4_ind_map_blocks_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__map_blocks_exit }, ptr @print_fmt_ext4__map_blocks_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ind_map_blocks_exit = internal global ptr @event_ext4_ind_map_blocks_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_load_extent = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_load_extent = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_load_extent, ptr @perf_trace_ext4_ext_load_extent, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_load_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_load_extent, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_load_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_load_extent = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_load_extent, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_load_extent = internal global [173 x i8] c"\22dev %d,%d ino %lu lblk %u pblk %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->pblk\00", align 1
@event_ext4_ext_load_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_load_extent, %union.anon.105 { ptr @__tracepoint_ext4_ext_load_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_load_extent }, ptr @print_fmt_ext4_ext_load_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_load_extent = internal global ptr @event_ext4_ext_load_extent, section "_ftrace_events", align 4
@trace_event_fields_ext4_load_inode = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_load_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_load_inode, ptr @perf_trace_ext4_load_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_load_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_load_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_load_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_load_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_load_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_load_inode = internal global [133 x i8] c"\22dev %d,%d ino %ld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino\00", align 1
@event_ext4_load_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_load_inode, %union.anon.105 { ptr @__tracepoint_ext4_load_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_load_inode }, ptr @print_fmt_ext4_load_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_load_inode = internal global ptr @event_ext4_load_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_journal_start = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.244, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.245, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_journal_start = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_journal_start, ptr @perf_trace_ext4_journal_start, ptr @trace_event_reg, ptr @trace_event_fields_ext4_journal_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_journal_start, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_journal_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_journal_start = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_journal_start, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_journal_start = internal global [219 x i8] c"\22dev %d,%d blocks %d, rsv_blocks %d, revoke_creds %d, caller %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->blocks, REC->rsv_blocks, REC->revoke_creds, (void *)REC->ip\00", align 1
@event_ext4_journal_start = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_journal_start, %union.anon.105 { ptr @__tracepoint_ext4_journal_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_journal_start }, ptr @print_fmt_ext4_journal_start, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_journal_start = internal global ptr @event_ext4_journal_start, section "_ftrace_events", align 4
@trace_event_fields_ext4_journal_start_reserved = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.73, %union.anon.103 { %struct.anon.104 { ptr @.str.74, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_journal_start_reserved = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_journal_start_reserved, ptr @perf_trace_ext4_journal_start_reserved, ptr @trace_event_reg, ptr @trace_event_fields_ext4_journal_start_reserved, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_journal_start_reserved, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_journal_start_reserved, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_journal_start_reserved = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_journal_start_reserved, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_journal_start_reserved = internal global [151 x i8] c"\22dev %d,%d blocks, %d caller %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->blocks, (void *)REC->ip\00", align 1
@event_ext4_journal_start_reserved = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_journal_start_reserved, %union.anon.105 { ptr @__tracepoint_ext4_journal_start_reserved }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_journal_start_reserved }, ptr @print_fmt_ext4_journal_start_reserved, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_journal_start_reserved = internal global ptr @event_ext4_journal_start_reserved, section "_ftrace_events", align 4
@trace_event_fields_ext4__trim = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.248, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.249, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.250, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__trim = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__trim, ptr @perf_trace_ext4__trim, ptr @trace_event_reg, ptr @trace_event_fields_ext4__trim, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__trim, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__trim, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__trim = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__trim, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__trim = internal global [105 x i8] c"\22dev %d,%d group %u, start %d, len %d\22, REC->dev_major, REC->dev_minor, REC->group, REC->start, REC->len\00", align 1
@event_ext4_trim_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__trim, %union.anon.105 { ptr @__tracepoint_ext4_trim_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__trim }, ptr @print_fmt_ext4__trim, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_trim_extent = internal global ptr @event_ext4_trim_extent, section "_ftrace_events", align 4
@event_ext4_trim_all_free = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__trim, %union.anon.105 { ptr @__tracepoint_ext4_trim_all_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__trim }, ptr @print_fmt_ext4__trim, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_trim_all_free = internal global ptr @event_ext4_trim_all_free, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_handle_unwritten_extents = internal global [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.252, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.253, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_handle_unwritten_extents = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_handle_unwritten_extents, ptr @perf_trace_ext4_ext_handle_unwritten_extents, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_handle_unwritten_extents, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_handle_unwritten_extents, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_handle_unwritten_extents, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_handle_unwritten_extents = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_handle_unwritten_extents, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_handle_unwritten_extents = internal global [641 x i8] c"\22dev %d,%d ino %lu m_lblk %u m_pblk %llu m_len %u flags %s allocated %d newblock %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->lblk, (unsigned long long) REC->pblk, REC->len, __print_flags(REC->flags, \22|\22, { 0x0001, \22CREATE\22 }, { 0x0002, \22UNWRIT\22 }, { 0x0004, \22DELALLOC\22 }, { 0x0008, \22PRE_IO\22 }, { 0x0010, \22CONVERT\22 }, { 0x0020, \22METADATA_NOFAIL\22 }, { 0x0040, \22NO_NORMALIZE\22 }, { 0x0100, \22CONVERT_UNWRITTEN\22 }, { 0x0200, \22ZERO\22 }, { 0x0400, \22IO_SUBMIT\22 }, { 0x40000000, \22EX_NOCACHE\22 }), (unsigned int) REC->allocated, (unsigned long long) REC->newblk\00", align 1
@event_ext4_ext_handle_unwritten_extents = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_handle_unwritten_extents, %union.anon.105 { ptr @__tracepoint_ext4_ext_handle_unwritten_extents }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_handle_unwritten_extents }, ptr @print_fmt_ext4_ext_handle_unwritten_extents, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_handle_unwritten_extents = internal global ptr @event_ext4_ext_handle_unwritten_extents, section "_ftrace_events", align 4
@trace_event_fields_ext4_get_implied_cluster_alloc_exit = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.107, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_get_implied_cluster_alloc_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_get_implied_cluster_alloc_exit, ptr @perf_trace_ext4_get_implied_cluster_alloc_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_get_implied_cluster_alloc_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_get_implied_cluster_alloc_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_get_implied_cluster_alloc_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_get_implied_cluster_alloc_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_get_implied_cluster_alloc_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_get_implied_cluster_alloc_exit = internal global [392 x i8] c"\22dev %d,%d m_lblk %u m_pblk %llu m_len %u m_flags %s ret %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->lblk, (unsigned long long) REC->pblk, REC->len, __print_flags(REC->flags, \22\22, { ((((1UL))) << (BH_New)), \22N\22 }, { ((((1UL))) << (BH_Mapped)), \22M\22 }, { ((((1UL))) << (BH_Unwritten)), \22U\22 }, { ((((1UL))) << (BH_Boundary)), \22B\22 }), REC->ret\00", align 1
@event_ext4_get_implied_cluster_alloc_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_get_implied_cluster_alloc_exit, %union.anon.105 { ptr @__tracepoint_ext4_get_implied_cluster_alloc_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_get_implied_cluster_alloc_exit }, ptr @print_fmt_ext4_get_implied_cluster_alloc_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_get_implied_cluster_alloc_exit = internal global ptr @event_ext4_get_implied_cluster_alloc_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_show_extent = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.256, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_show_extent = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_show_extent, ptr @perf_trace_ext4_ext_show_extent, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_show_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_show_extent, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_show_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_show_extent = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_show_extent, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_show_extent = internal global [239 x i8] c"\22dev %d,%d ino %lu lblk %u pblk %llu len %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->lblk, (unsigned long long) REC->pblk, (unsigned short) REC->len\00", align 1
@event_ext4_ext_show_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_show_extent, %union.anon.105 { ptr @__tracepoint_ext4_ext_show_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_show_extent }, ptr @print_fmt_ext4_ext_show_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_show_extent = internal global ptr @event_ext4_ext_show_extent, section "_ftrace_events", align 4
@trace_event_fields_ext4_remove_blocks = internal global [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.258, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.259, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.261, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.256, %union.anon.103 { %struct.anon.104 { ptr @.str.262, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.263, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.264, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.265, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_remove_blocks = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_remove_blocks, ptr @perf_trace_ext4_remove_blocks, ptr @trace_event_reg, ptr @trace_event_fields_ext4_remove_blocks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_remove_blocks, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_remove_blocks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_remove_blocks = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_remove_blocks, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_remove_blocks = internal global [413 x i8] c"\22dev %d,%d ino %lu extent [%u(%llu), %u]from %u to %u partial [pclu %lld lblk %u state %d]\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->ee_lblk, (unsigned long long) REC->ee_pblk, (unsigned short) REC->ee_len, (unsigned) REC->from, (unsigned) REC->to, (long long) REC->pc_pclu, (unsigned int) REC->pc_lblk, (int) REC->pc_state\00", align 1
@event_ext4_remove_blocks = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_remove_blocks, %union.anon.105 { ptr @__tracepoint_ext4_remove_blocks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_remove_blocks }, ptr @print_fmt_ext4_remove_blocks, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_remove_blocks = internal global ptr @event_ext4_remove_blocks, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_rm_leaf = internal global [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.261, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.260, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.267, %union.anon.103 { %struct.anon.104 { ptr @.str.262, i32 2, i32 2, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.263, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.264, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.265, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_rm_leaf = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_rm_leaf, ptr @perf_trace_ext4_ext_rm_leaf, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_rm_leaf, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_rm_leaf, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_rm_leaf, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_rm_leaf = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_rm_leaf, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_rm_leaf = internal global [399 x i8] c"\22dev %d,%d ino %lu start_lblk %u last_extent [%u(%llu), %u]partial [pclu %lld lblk %u state %d]\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->start, (unsigned) REC->ee_lblk, (unsigned long long) REC->ee_pblk, (unsigned short) REC->ee_len, (long long) REC->pc_pclu, (unsigned int) REC->pc_lblk, (int) REC->pc_state\00", align 1
@event_ext4_ext_rm_leaf = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_rm_leaf, %union.anon.105 { ptr @__tracepoint_ext4_ext_rm_leaf }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_rm_leaf }, ptr @print_fmt_ext4_ext_rm_leaf, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_rm_leaf = internal global ptr @event_ext4_ext_rm_leaf, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_rm_idx = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_rm_idx = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_rm_idx, ptr @perf_trace_ext4_ext_rm_idx, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_rm_idx, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_rm_idx, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_rm_idx, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_rm_idx = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_rm_idx, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_rm_idx = internal global [181 x i8] c"\22dev %d,%d ino %lu index_pblk %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned long long) REC->pblk\00", align 1
@event_ext4_ext_rm_idx = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_rm_idx, %union.anon.105 { ptr @__tracepoint_ext4_ext_rm_idx }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_rm_idx }, ptr @print_fmt_ext4_ext_rm_idx, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_rm_idx = internal global ptr @event_ext4_ext_rm_idx, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_remove_space = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.270, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.271, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_remove_space = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_remove_space, ptr @perf_trace_ext4_ext_remove_space, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_remove_space, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_remove_space, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_remove_space, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_remove_space = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_remove_space, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_remove_space = internal global [214 x i8] c"\22dev %d,%d ino %lu since %u end %u depth %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->start, (unsigned) REC->end, REC->depth\00", align 1
@event_ext4_ext_remove_space = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_remove_space, %union.anon.105 { ptr @__tracepoint_ext4_ext_remove_space }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_remove_space }, ptr @print_fmt_ext4_ext_remove_space, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_remove_space = internal global ptr @event_ext4_ext_remove_space, section "_ftrace_events", align 4
@trace_event_fields_ext4_ext_remove_space_done = internal global [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.250, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.270, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.271, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.263, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.264, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.265, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.256, %union.anon.103 { %struct.anon.104 { ptr @.str.273, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_ext_remove_space_done = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_ext_remove_space_done, ptr @perf_trace_ext4_ext_remove_space_done, ptr @trace_event_reg, ptr @trace_event_fields_ext4_ext_remove_space_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_ext_remove_space_done, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_ext_remove_space_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_ext_remove_space_done = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_ext_remove_space_done, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_ext_remove_space_done = internal global [382 x i8] c"\22dev %d,%d ino %lu since %u end %u depth %d partial [pclu %lld lblk %u state %d] remaining_entries %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, (unsigned) REC->start, (unsigned) REC->end, REC->depth, (long long) REC->pc_pclu, (unsigned int) REC->pc_lblk, (int) REC->pc_state, (unsigned short) REC->eh_entries\00", align 1
@event_ext4_ext_remove_space_done = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_ext_remove_space_done, %union.anon.105 { ptr @__tracepoint_ext4_ext_remove_space_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_ext_remove_space_done }, ptr @print_fmt_ext4_ext_remove_space_done, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_ext_remove_space_done = internal global ptr @event_ext4_ext_remove_space_done, section "_ftrace_events", align 4
@trace_event_fields_ext4__es_extent = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.275, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__es_extent = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__es_extent, ptr @perf_trace_ext4__es_extent, ptr @trace_event_reg, ptr @trace_event_fields_ext4__es_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__es_extent, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__es_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__es_extent = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__es_extent, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__es_extent = internal global [382 x i8] c"\22dev %d,%d ino %lu es [%u/%u) mapped %llu status %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len, REC->pblk, __print_flags(REC->status, \22\22, { (1 << ES_WRITTEN_B), \22W\22 }, { (1 << ES_UNWRITTEN_B), \22U\22 }, { (1 << ES_DELAYED_B), \22D\22 }, { (1 << ES_HOLE_B), \22H\22 }, { (1 << ES_REFERENCED_B), \22R\22 })\00", align 1
@event_ext4_es_insert_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__es_extent, %union.anon.105 { ptr @__tracepoint_ext4_es_insert_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__es_extent }, ptr @print_fmt_ext4__es_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_insert_extent = internal global ptr @event_ext4_es_insert_extent, section "_ftrace_events", align 4
@event_ext4_es_cache_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__es_extent, %union.anon.105 { ptr @__tracepoint_ext4_es_cache_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__es_extent }, ptr @print_fmt_ext4__es_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_cache_extent = internal global ptr @event_ext4_es_cache_extent, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_remove_extent = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_remove_extent = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_remove_extent, ptr @perf_trace_ext4_es_remove_extent, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_remove_extent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_remove_extent, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_remove_extent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_remove_extent = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_remove_extent, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_remove_extent = internal global [169 x i8] c"\22dev %d,%d ino %lu es [%lld/%lld)\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len\00", align 1
@event_ext4_es_remove_extent = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_remove_extent, %union.anon.105 { ptr @__tracepoint_ext4_es_remove_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_remove_extent }, ptr @print_fmt_ext4_es_remove_extent, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_remove_extent = internal global ptr @event_ext4_es_remove_extent, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_find_extent_range_enter = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_find_extent_range_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_find_extent_range_enter, ptr @perf_trace_ext4_es_find_extent_range_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_find_extent_range_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_find_extent_range_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_find_extent_range_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_find_extent_range_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_find_extent_range_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_find_extent_range_enter = internal global [152 x i8] c"\22dev %d,%d ino %lu lblk %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk\00", align 1
@event_ext4_es_find_extent_range_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_find_extent_range_enter, %union.anon.105 { ptr @__tracepoint_ext4_es_find_extent_range_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_find_extent_range_enter }, ptr @print_fmt_ext4_es_find_extent_range_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_find_extent_range_enter = internal global ptr @event_ext4_es_find_extent_range_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_find_extent_range_exit = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.275, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_find_extent_range_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_find_extent_range_exit, ptr @perf_trace_ext4_es_find_extent_range_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_find_extent_range_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_find_extent_range_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_find_extent_range_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_find_extent_range_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_find_extent_range_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_find_extent_range_exit = internal global [382 x i8] c"\22dev %d,%d ino %lu es [%u/%u) mapped %llu status %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len, REC->pblk, __print_flags(REC->status, \22\22, { (1 << ES_WRITTEN_B), \22W\22 }, { (1 << ES_UNWRITTEN_B), \22U\22 }, { (1 << ES_DELAYED_B), \22D\22 }, { (1 << ES_HOLE_B), \22H\22 }, { (1 << ES_REFERENCED_B), \22R\22 })\00", align 1
@event_ext4_es_find_extent_range_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_find_extent_range_exit, %union.anon.105 { ptr @__tracepoint_ext4_es_find_extent_range_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_find_extent_range_exit }, ptr @print_fmt_ext4_es_find_extent_range_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_find_extent_range_exit = internal global ptr @event_ext4_es_find_extent_range_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_lookup_extent_enter = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_lookup_extent_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_lookup_extent_enter, ptr @perf_trace_ext4_es_lookup_extent_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_lookup_extent_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_lookup_extent_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_lookup_extent_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_lookup_extent_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_lookup_extent_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_lookup_extent_enter = internal global [152 x i8] c"\22dev %d,%d ino %lu lblk %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk\00", align 1
@event_ext4_es_lookup_extent_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_lookup_extent_enter, %union.anon.105 { ptr @__tracepoint_ext4_es_lookup_extent_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_lookup_extent_enter }, ptr @print_fmt_ext4_es_lookup_extent_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_lookup_extent_enter = internal global ptr @event_ext4_es_lookup_extent_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_lookup_extent_exit = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.275, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.179, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_lookup_extent_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_lookup_extent_exit, ptr @perf_trace_ext4_es_lookup_extent_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_lookup_extent_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_lookup_extent_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_lookup_extent_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_lookup_extent_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_lookup_extent_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_lookup_extent_exit = internal global [420 x i8] c"\22dev %d,%d ino %lu found %d [%u/%u) %llu %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->found, REC->lblk, REC->len, REC->found ? REC->pblk : 0, __print_flags(REC->found ? REC->status : 0, \22\22, { (1 << ES_WRITTEN_B), \22W\22 }, { (1 << ES_UNWRITTEN_B), \22U\22 }, { (1 << ES_DELAYED_B), \22D\22 }, { (1 << ES_HOLE_B), \22H\22 }, { (1 << ES_REFERENCED_B), \22R\22 })\00", align 1
@event_ext4_es_lookup_extent_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_lookup_extent_exit, %union.anon.105 { ptr @__tracepoint_ext4_es_lookup_extent_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_lookup_extent_exit }, ptr @print_fmt_ext4_es_lookup_extent_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_lookup_extent_exit = internal global ptr @event_ext4_es_lookup_extent_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4__es_shrink_enter = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.284, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.285, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4__es_shrink_enter = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4__es_shrink_enter, ptr @perf_trace_ext4__es_shrink_enter, ptr @trace_event_reg, ptr @trace_event_fields_ext4__es_shrink_enter, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4__es_shrink_enter, i64 24), ptr getelementptr (i8, ptr @event_class_ext4__es_shrink_enter, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4__es_shrink_enter = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4__es_shrink_enter, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4__es_shrink_enter = internal global [159 x i8] c"\22dev %d,%d nr_to_scan %d cache_cnt %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nr_to_scan, REC->cache_cnt\00", align 1
@event_ext4_es_shrink_count = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__es_shrink_enter, %union.anon.105 { ptr @__tracepoint_ext4_es_shrink_count }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__es_shrink_enter }, ptr @print_fmt_ext4__es_shrink_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_shrink_count = internal global ptr @event_ext4_es_shrink_count, section "_ftrace_events", align 4
@event_ext4_es_shrink_scan_enter = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4__es_shrink_enter, %union.anon.105 { ptr @__tracepoint_ext4_es_shrink_scan_enter }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4__es_shrink_enter }, ptr @print_fmt_ext4__es_shrink_enter, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_shrink_scan_enter = internal global ptr @event_ext4_es_shrink_scan_enter, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_shrink_scan_exit = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.287, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.285, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_shrink_scan_exit = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_shrink_scan_exit, ptr @perf_trace_ext4_es_shrink_scan_exit, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_shrink_scan_exit, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_shrink_scan_exit, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_shrink_scan_exit, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_shrink_scan_exit = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_shrink_scan_exit, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_shrink_scan_exit = internal global [157 x i8] c"\22dev %d,%d nr_shrunk %d cache_cnt %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nr_shrunk, REC->cache_cnt\00", align 1
@event_ext4_es_shrink_scan_exit = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_shrink_scan_exit, %union.anon.105 { ptr @__tracepoint_ext4_es_shrink_scan_exit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_shrink_scan_exit }, ptr @print_fmt_ext4_es_shrink_scan_exit, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_shrink_scan_exit = internal global ptr @event_ext4_es_shrink_scan_exit, section "_ftrace_events", align 4
@trace_event_fields_ext4_collapse_range = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.112, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_collapse_range = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_collapse_range, ptr @perf_trace_ext4_collapse_range, ptr @trace_event_reg, ptr @trace_event_fields_ext4_collapse_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_collapse_range, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_collapse_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_collapse_range = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_collapse_range, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_collapse_range = internal global [177 x i8] c"\22dev %d,%d ino %lu offset %lld len %lld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->offset, REC->len\00", align 1
@event_ext4_collapse_range = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_collapse_range, %union.anon.105 { ptr @__tracepoint_ext4_collapse_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_collapse_range }, ptr @print_fmt_ext4_collapse_range, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_collapse_range = internal global ptr @event_ext4_collapse_range, section "_ftrace_events", align 4
@trace_event_fields_ext4_insert_range = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.112, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.76, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_insert_range = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_insert_range, ptr @perf_trace_ext4_insert_range, ptr @trace_event_reg, ptr @trace_event_fields_ext4_insert_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_insert_range, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_insert_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_insert_range = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_insert_range, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_insert_range = internal global [177 x i8] c"\22dev %d,%d ino %lu offset %lld len %lld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->offset, REC->len\00", align 1
@event_ext4_insert_range = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_insert_range, %union.anon.105 { ptr @__tracepoint_ext4_insert_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_insert_range }, ptr @print_fmt_ext4_insert_range, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_insert_range = internal global ptr @event_ext4_insert_range, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_shrink = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.287, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.290, %union.anon.103 { %struct.anon.104 { ptr @.str.291, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.292, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.293, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_shrink = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_shrink, ptr @perf_trace_ext4_es_shrink, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_shrink, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_shrink, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_shrink, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_shrink = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_shrink, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_shrink = internal global [216 x i8] c"\22dev %d,%d nr_shrunk %d, scan_time %llu nr_skipped %d retried %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nr_shrunk, REC->scan_time, REC->nr_skipped, REC->retried\00", align 1
@event_ext4_es_shrink = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_shrink, %union.anon.105 { ptr @__tracepoint_ext4_es_shrink }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_shrink }, ptr @print_fmt_ext4_es_shrink, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_shrink = internal global ptr @event_ext4_es_shrink, section "_ftrace_events", align 4
@trace_event_fields_ext4_es_insert_delayed_block = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.51, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.213, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.238, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.93, %union.anon.103 { %struct.anon.104 { ptr @.str.275, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.200, %union.anon.103 { %struct.anon.104 { ptr @.str.252, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_es_insert_delayed_block = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_es_insert_delayed_block, ptr @perf_trace_ext4_es_insert_delayed_block, ptr @trace_event_reg, ptr @trace_event_fields_ext4_es_insert_delayed_block, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_es_insert_delayed_block, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_es_insert_delayed_block, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_es_insert_delayed_block = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_es_insert_delayed_block, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_es_insert_delayed_block = internal global [411 x i8] c"\22dev %d,%d ino %lu es [%u/%u) mapped %llu status %s allocated %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), (unsigned long) REC->ino, REC->lblk, REC->len, REC->pblk, __print_flags(REC->status, \22\22, { (1 << ES_WRITTEN_B), \22W\22 }, { (1 << ES_UNWRITTEN_B), \22U\22 }, { (1 << ES_DELAYED_B), \22D\22 }, { (1 << ES_HOLE_B), \22H\22 }, { (1 << ES_REFERENCED_B), \22R\22 }), REC->allocated\00", align 1
@event_ext4_es_insert_delayed_block = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_es_insert_delayed_block, %union.anon.105 { ptr @__tracepoint_ext4_es_insert_delayed_block }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_es_insert_delayed_block }, ptr @print_fmt_ext4_es_insert_delayed_block, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_es_insert_delayed_block = internal global ptr @event_ext4_es_insert_delayed_block, section "_ftrace_events", align 4
@trace_event_fields_ext4_fsmap_class = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.296, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.297, %union.anon.103 { %struct.anon.104 { ptr @.str.298, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.300, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.301, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fsmap_class = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fsmap_class, ptr @perf_trace_ext4_fsmap_class, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fsmap_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fsmap_class, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fsmap_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fsmap_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fsmap_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fsmap_class = internal global [286 x i8] c"\22dev %d:%d keydev %d:%d agno %u bno %llu len %llu owner %lld\0A\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), ((unsigned int) ((REC->keydev) >> 20)), ((unsigned int) ((REC->keydev) & ((1U << 20) - 1))), REC->agno, REC->bno, REC->len, REC->owner\00", align 1
@event_ext4_fsmap_low_key = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_fsmap_low_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fsmap_class }, ptr @print_fmt_ext4_fsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fsmap_low_key = internal global ptr @event_ext4_fsmap_low_key, section "_ftrace_events", align 4
@event_ext4_fsmap_high_key = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_fsmap_high_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fsmap_class }, ptr @print_fmt_ext4_fsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fsmap_high_key = internal global ptr @event_ext4_fsmap_high_key, section "_ftrace_events", align 4
@event_ext4_fsmap_mapping = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_fsmap_mapping }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fsmap_class }, ptr @print_fmt_ext4_fsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fsmap_mapping = internal global ptr @event_ext4_fsmap_mapping, section "_ftrace_events", align 4
@trace_event_fields_ext4_getfsmap_class = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.296, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.122, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.81, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.301, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.299, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_getfsmap_class = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_getfsmap_class, ptr @perf_trace_ext4_getfsmap_class, ptr @trace_event_reg, ptr @trace_event_fields_ext4_getfsmap_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_getfsmap_class, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_getfsmap_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_getfsmap_class = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_getfsmap_class, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_getfsmap_class = internal global [296 x i8] c"\22dev %d:%d keydev %d:%d block %llu len %llu owner %lld flags 0x%llx\0A\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), ((unsigned int) ((REC->keydev) >> 20)), ((unsigned int) ((REC->keydev) & ((1U << 20) - 1))), REC->block, REC->len, REC->owner, REC->flags\00", align 1
@event_ext4_getfsmap_low_key = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_getfsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_getfsmap_low_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_getfsmap_class }, ptr @print_fmt_ext4_getfsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_getfsmap_low_key = internal global ptr @event_ext4_getfsmap_low_key, section "_ftrace_events", align 4
@event_ext4_getfsmap_high_key = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_getfsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_getfsmap_high_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_getfsmap_class }, ptr @print_fmt_ext4_getfsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_getfsmap_high_key = internal global ptr @event_ext4_getfsmap_high_key, section "_ftrace_events", align 4
@event_ext4_getfsmap_mapping = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_getfsmap_class, %union.anon.105 { ptr @__tracepoint_ext4_getfsmap_mapping }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_getfsmap_class }, ptr @print_fmt_ext4_getfsmap_class, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_getfsmap_mapping = internal global ptr @event_ext4_getfsmap_mapping, section "_ftrace_events", align 4
@trace_event_fields_ext4_shutdown = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_shutdown = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_shutdown, ptr @perf_trace_ext4_shutdown, ptr @trace_event_reg, ptr @trace_event_fields_ext4_shutdown, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_shutdown, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_shutdown, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_shutdown = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_shutdown, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_shutdown = internal global [120 x i8] c"\22dev %d,%d flags %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->flags\00", align 1
@event_ext4_shutdown = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_shutdown, %union.anon.105 { ptr @__tracepoint_ext4_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_shutdown }, ptr @print_fmt_ext4_shutdown, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_shutdown = internal global ptr @event_ext4_shutdown, section "_ftrace_events", align 4
@trace_event_fields_ext4_error = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.305, %union.anon.103 { %struct.anon.104 { ptr @.str.306, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.215, %union.anon.103 { %struct.anon.104 { ptr @.str.307, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_error = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_error, ptr @perf_trace_ext4_error, ptr @trace_event_reg, ptr @trace_event_fields_ext4_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_error, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_error = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_error, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_error = internal global [145 x i8] c"\22dev %d,%d function %s line %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->function, REC->line\00", align 1
@event_ext4_error = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_error, %union.anon.105 { ptr @__tracepoint_ext4_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_error }, ptr @print_fmt_ext4_error, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_error = internal global ptr @event_ext4_error, section "_ftrace_events", align 4
@trace_event_fields_ext4_prefetch_bitmaps = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.309, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.310, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_prefetch_bitmaps = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_prefetch_bitmaps, ptr @perf_trace_ext4_prefetch_bitmaps, ptr @trace_event_reg, ptr @trace_event_fields_ext4_prefetch_bitmaps, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_prefetch_bitmaps, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_prefetch_bitmaps, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_prefetch_bitmaps = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_prefetch_bitmaps, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_prefetch_bitmaps = internal global [156 x i8] c"\22dev %d,%d group %u next %u ios %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->group, REC->next, REC->ios\00", align 1
@event_ext4_prefetch_bitmaps = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_prefetch_bitmaps, %union.anon.105 { ptr @__tracepoint_ext4_prefetch_bitmaps }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_prefetch_bitmaps }, ptr @print_fmt_ext4_prefetch_bitmaps, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_prefetch_bitmaps = internal global ptr @event_ext4_prefetch_bitmaps, section "_ftrace_events", align 4
@trace_event_fields_ext4_lazy_itable_init = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.100, %union.anon.103 { %struct.anon.104 { ptr @.str.198, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_lazy_itable_init = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_lazy_itable_init, ptr @perf_trace_ext4_lazy_itable_init, ptr @trace_event_reg, ptr @trace_event_fields_ext4_lazy_itable_init, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_lazy_itable_init, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_lazy_itable_init, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_lazy_itable_init = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_lazy_itable_init, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_lazy_itable_init = internal global [120 x i8] c"\22dev %d,%d group %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->group\00", align 1
@event_ext4_lazy_itable_init = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_lazy_itable_init, %union.anon.105 { ptr @__tracepoint_ext4_lazy_itable_init }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_lazy_itable_init }, ptr @print_fmt_ext4_lazy_itable_init, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_lazy_itable_init = internal global ptr @event_ext4_lazy_itable_init, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_replay_scan = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.313, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_replay_scan = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_replay_scan, ptr @perf_trace_ext4_fc_replay_scan, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_replay_scan, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_replay_scan, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_replay_scan, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_replay_scan = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_replay_scan, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_replay_scan = internal global [155 x i8] c"\22FC scan pass on dev %d,%d: error %d, off %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->error, REC->off\00", align 1
@event_ext4_fc_replay_scan = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_replay_scan, %union.anon.105 { ptr @__tracepoint_ext4_fc_replay_scan }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_replay_scan }, ptr @print_fmt_ext4_fc_replay_scan, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_replay_scan = internal global ptr @event_ext4_fc_replay_scan, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_replay = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.315, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.316, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.317, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_replay = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_replay, ptr @perf_trace_ext4_fc_replay, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_replay, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_replay, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_replay, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_replay = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_replay, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_replay = internal global [185 x i8] c"\22FC Replay %d,%d: tag %d, ino %d, data1 %d, data2 %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->tag, REC->ino, REC->priv1, REC->priv2\00", align 1
@event_ext4_fc_replay = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_replay, %union.anon.105 { ptr @__tracepoint_ext4_fc_replay }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_replay }, ptr @print_fmt_ext4_fc_replay, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_replay = internal global ptr @event_ext4_fc_replay, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_commit_start = internal global [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_commit_start = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_commit_start, ptr @perf_trace_ext4_fc_commit_start, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_commit_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_commit_start, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_commit_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_commit_start = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_commit_start, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_commit_start = internal global [122 x i8] c"\22fast_commit started on dev %d,%d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1)))\00", align 1
@event_ext4_fc_commit_start = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_commit_start, %union.anon.105 { ptr @__tracepoint_ext4_fc_commit_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_commit_start }, ptr @print_fmt_ext4_fc_commit_start, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_commit_start = internal global ptr @event_ext4_fc_commit_start, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_commit_stop = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.320, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.321, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.322, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.323, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.324, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_commit_stop = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_commit_stop, ptr @perf_trace_ext4_fc_commit_stop, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_commit_stop, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_commit_stop, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_commit_stop, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_commit_stop = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_commit_stop, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_commit_stop = internal global [241 x i8] c"\22fc on [%d,%d] nblks %d, reason %d, fc = %d, ineligible = %d, agg_nblks %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->nblks, REC->reason, REC->num_fc, REC->num_fc_ineligible, REC->nblks_agg\00", align 1
@event_ext4_fc_commit_stop = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_commit_stop, %union.anon.105 { ptr @__tracepoint_ext4_fc_commit_stop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_commit_stop }, ptr @print_fmt_ext4_fc_commit_stop, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_commit_stop = internal global ptr @event_ext4_fc_commit_stop, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_stats = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.326, %union.anon.103 { %struct.anon.104 { ptr @.str.327, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.116, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_stats = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_stats, ptr @perf_trace_ext4_fc_stats, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_stats, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_stats, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_stats, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_stats = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_stats, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_stats = internal global [5128 x i8] c"\22dev %d:%d fc ineligible reasons:\0A%s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d; num_commits:%ld, ineligible: %ld, numblks: %ld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(EXT4_FC_REASON_XATTR, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_XATTR], __print_symbolic(EXT4_FC_REASON_CROSS_RENAME, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_CROSS_RENAME], __print_symbolic(EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_JOURNAL_FLAG_CHANGE], __print_symbolic(EXT4_FC_REASON_NOMEM, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_NOMEM], __print_symbolic(EXT4_FC_REASON_SWAP_BOOT, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_SWAP_BOOT], __print_symbolic(EXT4_FC_REASON_RESIZE, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_RESIZE], __print_symbolic(EXT4_FC_REASON_RENAME_DIR, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_RENAME_DIR], __print_symbolic(EXT4_FC_REASON_FALLOC_RANGE, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_FALLOC_RANGE], __print_symbolic(EXT4_FC_REASON_INODE_JOURNAL_DATA, { EXT4_FC_REASON_XATTR, \22XATTR\22}, { EXT4_FC_REASON_CROSS_RENAME, \22CROSS_RENAME\22}, { EXT4_FC_REASON_JOURNAL_FLAG_CHANGE, \22JOURNAL_FLAG_CHANGE\22}, { EXT4_FC_REASON_NOMEM, \22NO_MEM\22}, { EXT4_FC_REASON_SWAP_BOOT, \22SWAP_BOOT\22}, { EXT4_FC_REASON_RESIZE, \22RESIZE\22}, { EXT4_FC_REASON_RENAME_DIR, \22RENAME_DIR\22}, { EXT4_FC_REASON_FALLOC_RANGE, \22FALLOC_RANGE\22}, { EXT4_FC_REASON_INODE_JOURNAL_DATA, \22INODE_JOURNAL_DATA\22}), REC->sbi->s_fc_stats.fc_ineligible_reason_count[EXT4_FC_REASON_INODE_JOURNAL_DATA], REC->sbi->s_fc_stats.fc_num_commits, REC->sbi->s_fc_stats.fc_ineligible_commits, REC->sbi->s_fc_stats.fc_numblks\00", align 1
@event_ext4_fc_stats = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_stats, %union.anon.105 { ptr @__tracepoint_ext4_fc_stats }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_stats }, ptr @print_fmt_ext4_fc_stats, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_stats = internal global ptr @event_ext4_fc_stats, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_track_create = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_track_create = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_track_create, ptr @perf_trace_ext4_fc_track_create, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_track_create, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_track_create, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_track_create, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_track_create = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_track_create, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_track_create = internal global [158 x i8] c"\22dev %d:%d, inode %d, error %d, fc_%s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, REC->error, \22create\22\00", align 1
@event_ext4_fc_track_create = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_track_create, %union.anon.105 { ptr @__tracepoint_ext4_fc_track_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_track_create }, ptr @print_fmt_ext4_fc_track_create, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_track_create = internal global ptr @event_ext4_fc_track_create, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_track_link = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_track_link = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_track_link, ptr @perf_trace_ext4_fc_track_link, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_track_link, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_track_link, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_track_link, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_track_link = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_track_link, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_track_link = internal global [156 x i8] c"\22dev %d:%d, inode %d, error %d, fc_%s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, REC->error, \22link\22\00", align 1
@event_ext4_fc_track_link = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_track_link, %union.anon.105 { ptr @__tracepoint_ext4_fc_track_link }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_track_link }, ptr @print_fmt_ext4_fc_track_link, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_track_link = internal global ptr @event_ext4_fc_track_link, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_track_unlink = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_track_unlink = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_track_unlink, ptr @perf_trace_ext4_fc_track_unlink, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_track_unlink, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_track_unlink, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_track_unlink, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_track_unlink = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_track_unlink, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_track_unlink = internal global [158 x i8] c"\22dev %d:%d, inode %d, error %d, fc_%s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, REC->error, \22unlink\22\00", align 1
@event_ext4_fc_track_unlink = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_track_unlink, %union.anon.105 { ptr @__tracepoint_ext4_fc_track_unlink }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_track_unlink }, ptr @print_fmt_ext4_fc_track_unlink, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_track_unlink = internal global ptr @event_ext4_fc_track_unlink, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_track_inode = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_track_inode = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_track_inode, ptr @perf_trace_ext4_fc_track_inode, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_track_inode, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_track_inode, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_track_inode, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_track_inode = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_track_inode, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_track_inode = internal global [141 x i8] c"\22dev %d:%d, inode %d, error %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, REC->error\00", align 1
@event_ext4_fc_track_inode = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_track_inode, %union.anon.105 { ptr @__tracepoint_ext4_fc_track_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_track_inode }, ptr @print_fmt_ext4_fc_track_inode, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_track_inode = internal global ptr @event_ext4_fc_track_inode, section "_ftrace_events", align 4
@trace_event_fields_ext4_fc_track_range = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.250, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.103 { %struct.anon.104 { ptr @.str.270, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.312, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_fc_track_range = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_fc_track_range, ptr @perf_trace_ext4_fc_track_range, ptr @trace_event_reg, ptr @trace_event_fields_ext4_fc_track_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_fc_track_range, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_fc_track_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_fc_track_range = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_fc_track_range, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_fc_track_range = internal global [183 x i8] c"\22dev %d:%d, inode %d, error %d, start %ld, end %ld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, REC->error, REC->start, REC->end\00", align 1
@event_ext4_fc_track_range = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_fc_track_range, %union.anon.105 { ptr @__tracepoint_ext4_fc_track_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_fc_track_range }, ptr @print_fmt_ext4_fc_track_range, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_fc_track_range = internal global ptr @event_ext4_fc_track_range, section "_ftrace_events", align 4
@trace_event_fields_ext4_update_sb = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.49, %union.anon.103 { %struct.anon.104 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.219, %union.anon.103 { %struct.anon.104 { ptr @.str.352, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_ext4_update_sb = internal global %struct.trace_event_class { ptr @.str.666, ptr @trace_event_raw_event_ext4_update_sb, ptr @perf_trace_ext4_update_sb, ptr @trace_event_reg, ptr @trace_event_fields_ext4_update_sb, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_ext4_update_sb, i64 24), ptr getelementptr (i8, ptr @event_class_ext4_update_sb, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_ext4_update_sb = internal global %struct.trace_event_functions { ptr @trace_raw_output_ext4_update_sb, ptr null, ptr null, ptr null }, align 4
@print_fmt_ext4_update_sb = internal global [143 x i8] c"\22dev %d,%d fsblk %llu flags %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->fsblk, REC->flags\00", align 1
@event_ext4_update_sb = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_ext4_update_sb, %union.anon.105 { ptr @__tracepoint_ext4_update_sb }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_ext4_update_sb }, ptr @print_fmt_ext4_update_sb, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_ext4_update_sb = internal global ptr @event_ext4_update_sb, section "_ftrace_events", align 4
@__UNIQUE_ID_alias875 = internal constant [19 x i8] c"ext4.alias=fs-ext2\00", section ".modinfo", align 1
@__UNIQUE_ID_alias876 = internal constant [16 x i8] c"ext4.alias=ext2\00", section ".modinfo", align 1
@__UNIQUE_ID_alias877 = internal constant [19 x i8] c"ext4.alias=fs-ext3\00", section ".modinfo", align 1
@__UNIQUE_ID_alias878 = internal constant [16 x i8] c"ext4.alias=ext3\00", section ".modinfo", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"EXT4-fs error\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"\012EXT4-fs error (device %s): %s:%d: comm %s: %pV\0A\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c"\012EXT4-fs error (device %s): %s:%d: inode #%lu: block %llu: comm %s: %pV\0A\00", align 1
@.str.12 = private unnamed_addr constant [62 x i8] c"\012EXT4-fs error (device %s): %s:%d: inode #%lu: comm %s: %pV\0A\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.14 = private unnamed_addr constant [83 x i8] c"\012EXT4-fs error (device %s): %s:%d: inode #%lu: block %llu: comm %s: path %s: %pV\0A\00", align 1
@.str.15 = private unnamed_addr constant [71 x i8] c"\012EXT4-fs error (device %s): %s:%d: inode #%lu: comm %s: path %s: %pV\0A\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Corrupt filesystem\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Filesystem failed CRC\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"IO failure\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"Journal has aborted\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Readonly filesystem\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"error %d\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"\012EXT4-fs error (device %s) in %s:%d: %s\0A\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"EXT4-fs\00", align 1
@.str.25 = private unnamed_addr constant [21 x i8] c"%sEXT4-fs (%s): %pV\0A\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"%sEXT4-fs: %pV\0A\00", align 1
@.str.27 = private unnamed_addr constant [43 x i8] c"\014EXT4-fs warning (device %s): %s:%d: %pV\0A\00", align 1
@.str.28 = private unnamed_addr constant [64 x i8] c"\014EXT4-fs warning (device %s): %s:%d: inode #%lu: comm %s: %pV\0A\00", align 1
@.str.29 = private unnamed_addr constant [47 x i8] c"\012EXT4-fs error (device %s): %s:%d: group %u, \00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"\01cinode %lu: \00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"\01cblock %llu:\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"\01c%pV\0A\00", align 1
@__ext4_grp_locked_error.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"fs/ext4/super.c\00", align 1
@__func__.ext4_update_dynamic_rev = private unnamed_addr constant [24 x i8] c"ext4_update_dynamic_rev\00", align 1
@.str.34 = private unnamed_addr constant [78 x i8] c"updating to rev %d because of new feature flag, running e2fsck is recommended\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.39 = private unnamed_addr constant [45 x i8] c"not enough memory for %d flex group pointers\00", align 1
@.str.40 = private unnamed_addr constant [37 x i8] c"not enough memory for %d flex groups\00", align 1
@.str.41 = private unnamed_addr constant [61 x i8] c"Couldn't mount because of unsupported optional features (%x)\00", align 1
@.str.42 = private unnamed_addr constant [74 x i8] c"Filesystem with casefold feature cannot be mounted without CONFIG_UNICODE\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"filesystem is read-only\00", align 1
@.str.45 = private unnamed_addr constant [66 x i8] c"couldn't mount RDWR because of unsupported optional features (%x)\00", align 1
@.str.46 = private unnamed_addr constant [56 x i8] c"Can't support bigalloc feature without extents feature\0A\00", align 1
@.str.47 = private unnamed_addr constant [62 x i8] c"The kernel was not built with CONFIG_QUOTA and CONFIG_QFMT_V2\00", align 1
@ext4_li_mtx = internal global %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @ext4_li_mtx, i64 12), ptr getelementptr (i8, ptr @ext4_li_mtx, i64 12) } }, align 4
@ext4_li_info = internal unnamed_addr global ptr null, align 4
@.str.48 = private unnamed_addr constant [23 x i8] c"can't get journal size\00", align 1
@__UNIQUE_ID_alias910 = internal constant [19 x i8] c"ext4.alias=fs-ext4\00", section ".modinfo", align 1
@ext4_fs_type = internal global %struct.file_system_type { ptr @.str.666, i32 33, ptr @ext4_init_fs_context, ptr @ext4_param_specs, ptr null, ptr @kill_block_super, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, align 4
@__UNIQUE_ID_author911 = internal constant [96 x i8] c"ext4.author=Remy Card, Stephen Tweedie, Andrew Morton, Andreas Dilger, Theodore Ts'o and others\00", section ".modinfo", align 1
@__UNIQUE_ID_description912 = internal constant [44 x i8] c"ext4.description=Fourth Extended Filesystem\00", section ".modinfo", align 1
@__UNIQUE_ID_file913 = internal constant [23 x i8] c"ext4.file=fs/ext4/ext4\00", section ".modinfo", align 1
@__UNIQUE_ID_license914 = internal constant [17 x i8] c"ext4.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_softdep915 = internal constant [25 x i8] c"ext4.softdep=pre: crc32c\00", section ".modinfo", align 1
@__initcall__kmod_ext4__916_7178_ext4_init_fs6 = internal global ptr @ext4_init_fs, section ".initcall6.init", align 4
@__exitcall_ext4_exit_fs = internal global ptr @ext4_exit_fs, section ".exitcall.exit", align 4
@ext4__ioend_wq = dso_local global [37 x %struct.wait_queue_head] zeroinitializer, align 4
@.str.49 = private unnamed_addr constant [6 x i8] c"dev_t\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"ino_t\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"ino\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"orig_ino\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"uid_t\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"uid\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"gid_t\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"gid\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"__u16\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.60 = private unnamed_addr constant [55 x i8] c"dev %d,%d orig_ino %lu ino %lu mode 0%o uid %u gid %u\0A\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"__u64\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"blocks\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"dev %d,%d ino %lu mode 0%o uid %u gid %u blocks %llu\0A\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"dir\00", align 1
@.str.65 = private unnamed_addr constant [28 x i8] c"dev %d,%d dir %lu mode 0%o\0A\00", align 1
@.str.66 = private unnamed_addr constant [36 x i8] c"dev %d,%d ino %lu dir %lu mode 0%o\0A\00", align 1
@.str.67 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"nlink\00", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"dev %d,%d ino %lu nlink %d\0A\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"dev %d,%d ino %lu drop %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"dev %d,%d ino %lu\0A\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"unsigned long\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"ip\00", align 1
@.str.75 = private unnamed_addr constant [30 x i8] c"dev %d,%d ino %lu caller %pS\0A\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"loff_t\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"new_size\00", align 1
@.str.78 = private unnamed_addr constant [33 x i8] c"dev %d,%d ino %lu new_size %lld\0A\00", align 1
@.str.79 = private unnamed_addr constant [4 x i8] c"pos\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.83 = private unnamed_addr constant [44 x i8] c"dev %d,%d ino %lu pos %lld len %u flags %u\0A\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"copied\00", align 1
@.str.85 = private unnamed_addr constant [45 x i8] c"dev %d,%d ino %lu pos %lld len %u copied %u\0A\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"nr_to_write\00", align 1
@.str.88 = private unnamed_addr constant [14 x i8] c"pages_skipped\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"range_start\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"range_end\00", align 1
@.str.91 = private unnamed_addr constant [16 x i8] c"writeback_index\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"sync_mode\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"for_kupdate\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"range_cyclic\00", align 1
@.str.96 = private unnamed_addr constant [149 x i8] c"dev %d,%d ino %lu nr_to_write %ld pages_skipped %ld range_start %lld range_end %lld sync_mode %d for_kupdate %d range_cyclic %d writeback_index %lu\0A\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"first_page\00", align 1
@.str.98 = private unnamed_addr constant [63 x i8] c"dev %d,%d ino %lu first_page %lu nr_to_write %ld sync_mode %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"lblk\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"__u32\00", align 1
@.str.101 = private unnamed_addr constant [45 x i8] c"dev %d,%d ino %lu lblk %llu len %u flags %s\0A\00", align 1
@trace_raw_output_ext4_da_write_pages_extent.__flags = internal constant [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 32, ptr @.str.102 }, %struct.trace_print_flags { i32 16, ptr @.str.103 }, %struct.trace_print_flags { i32 2048, ptr @.str.104 }, %struct.trace_print_flags { i32 512, ptr @.str.105 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.102 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.103 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.104 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.105 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.106 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"ret\00", align 1
@.str.108 = private unnamed_addr constant [14 x i8] c"pages_written\00", align 1
@.str.109 = private unnamed_addr constant [94 x i8] c"dev %d,%d ino %lu ret %d pages_written %d pages_skipped %ld sync_mode %d writeback_index %lu\0A\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.111 = private unnamed_addr constant [34 x i8] c"dev %d,%d ino %lu page_index %lu\0A\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.114 = private unnamed_addr constant [54 x i8] c"dev %d,%d ino %lu page_index %lu offset %u length %u\0A\00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"blk\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.117 = private unnamed_addr constant [31 x i8] c"dev %d,%d blk %llu count %llu\0A\00", align 1
@.str.118 = private unnamed_addr constant [10 x i8] c"pa_pstart\00", align 1
@.str.119 = private unnamed_addr constant [10 x i8] c"pa_lstart\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"pa_len\00", align 1
@.str.121 = private unnamed_addr constant [50 x i8] c"dev %d,%d ino %lu pstart %llu len %u lstart %llu\0A\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"block\00", align 1
@.str.123 = private unnamed_addr constant [39 x i8] c"dev %d,%d ino %lu block %llu count %u\0A\00", align 1
@.str.124 = private unnamed_addr constant [30 x i8] c"dev %d,%d pstart %llu len %u\0A\00", align 1
@.str.125 = private unnamed_addr constant [7 x i8] c"needed\00", align 1
@.str.126 = private unnamed_addr constant [37 x i8] c"dev %d,%d ino %lu len: %u needed %u\0A\00", align 1
@.str.127 = private unnamed_addr constant [21 x i8] c"dev %d,%d needed %d\0A\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"logical\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c"lleft\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"lright\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"goal\00", align 1
@.str.132 = private unnamed_addr constant [6 x i8] c"pleft\00", align 1
@.str.133 = private unnamed_addr constant [7 x i8] c"pright\00", align 1
@.str.134 = private unnamed_addr constant [96 x i8] c"dev %d,%d ino %lu flags %s len %u lblk %u goal %llu lleft %u lright %u pleft %llu pright %llu \0A\00", align 1
@trace_raw_output_ext4_request_blocks.__flags = internal constant [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.135 }, %struct.trace_print_flags { i32 2, ptr @.str.136 }, %struct.trace_print_flags { i32 4, ptr @.str.137 }, %struct.trace_print_flags { i32 8, ptr @.str.138 }, %struct.trace_print_flags { i32 16, ptr @.str.139 }, %struct.trace_print_flags { i32 32, ptr @.str.140 }, %struct.trace_print_flags { i32 64, ptr @.str.141 }, %struct.trace_print_flags { i32 128, ptr @.str.142 }, %struct.trace_print_flags { i32 256, ptr @.str.143 }, %struct.trace_print_flags { i32 512, ptr @.str.144 }, %struct.trace_print_flags { i32 1024, ptr @.str.145 }, %struct.trace_print_flags { i32 2048, ptr @.str.146 }, %struct.trace_print_flags { i32 4096, ptr @.str.147 }, %struct.trace_print_flags { i32 8192, ptr @.str.148 }, %struct.trace_print_flags { i32 16384, ptr @.str.149 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.135 = private unnamed_addr constant [11 x i8] c"HINT_MERGE\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"HINT_RESV\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"HINT_MDATA\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"HINT_FIRST\00", align 1
@.str.139 = private unnamed_addr constant [10 x i8] c"HINT_BEST\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"HINT_DATA\00", align 1
@.str.141 = private unnamed_addr constant [16 x i8] c"HINT_NOPREALLOC\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c"HINT_GRP_ALLOC\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"HINT_GOAL_ONLY\00", align 1
@.str.144 = private unnamed_addr constant [14 x i8] c"HINT_TRY_GOAL\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"DELALLOC_RESV\00", align 1
@.str.146 = private unnamed_addr constant [13 x i8] c"STREAM_ALLOC\00", align 1
@.str.147 = private unnamed_addr constant [14 x i8] c"USE_ROOT_BLKS\00", align 1
@.str.148 = private unnamed_addr constant [9 x i8] c"USE_RESV\00", align 1
@.str.149 = private unnamed_addr constant [13 x i8] c"STRICT_CHECK\00", align 1
@.str.150 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.151 = private unnamed_addr constant [106 x i8] c"dev %d,%d ino %lu flags %s len %u block %llu lblk %u goal %llu lleft %u lright %u pleft %llu pright %llu\0A\00", align 1
@trace_raw_output_ext4_allocate_blocks.__flags = internal constant [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.135 }, %struct.trace_print_flags { i32 2, ptr @.str.136 }, %struct.trace_print_flags { i32 4, ptr @.str.137 }, %struct.trace_print_flags { i32 8, ptr @.str.138 }, %struct.trace_print_flags { i32 16, ptr @.str.139 }, %struct.trace_print_flags { i32 32, ptr @.str.140 }, %struct.trace_print_flags { i32 64, ptr @.str.141 }, %struct.trace_print_flags { i32 128, ptr @.str.142 }, %struct.trace_print_flags { i32 256, ptr @.str.143 }, %struct.trace_print_flags { i32 512, ptr @.str.144 }, %struct.trace_print_flags { i32 1024, ptr @.str.145 }, %struct.trace_print_flags { i32 2048, ptr @.str.146 }, %struct.trace_print_flags { i32 4096, ptr @.str.147 }, %struct.trace_print_flags { i32 8192, ptr @.str.148 }, %struct.trace_print_flags { i32 16384, ptr @.str.149 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.152 = private unnamed_addr constant [58 x i8] c"dev %d,%d ino %lu mode 0%o block %llu count %lu flags %s\0A\00", align 1
@trace_raw_output_ext4_free_blocks.__flags = internal constant [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.153 }, %struct.trace_print_flags { i32 2, ptr @.str.154 }, %struct.trace_print_flags { i32 4, ptr @.str.155 }, %struct.trace_print_flags { i32 8, ptr @.str.156 }, %struct.trace_print_flags { i32 16, ptr @.str.157 }, %struct.trace_print_flags { i32 32, ptr @.str.158 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.153 = private unnamed_addr constant [9 x i8] c"METADATA\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"FORGET\00", align 1
@.str.155 = private unnamed_addr constant [10 x i8] c"VALIDATED\00", align 1
@.str.156 = private unnamed_addr constant [9 x i8] c"NO_QUOTA\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"1ST_CLUSTER\00", align 1
@.str.158 = private unnamed_addr constant [13 x i8] c"LAST_CLUSTER\00", align 1
@.str.159 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"datasync\00", align 1
@.str.161 = private unnamed_addr constant [43 x i8] c"dev %d,%d ino %lu parent %lu datasync %d \0A\00", align 1
@.str.162 = private unnamed_addr constant [26 x i8] c"dev %d,%d ino %lu ret %d\0A\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.164 = private unnamed_addr constant [19 x i8] c"dev %d,%d wait %d\0A\00", align 1
@.str.165 = private unnamed_addr constant [12 x i8] c"data_blocks\00", align 1
@.str.166 = private unnamed_addr constant [43 x i8] c"dev %d,%d ino %lu reserved_data_blocks %u\0A\00", align 1
@.str.167 = private unnamed_addr constant [13 x i8] c"orig_logical\00", align 1
@.str.168 = private unnamed_addr constant [11 x i8] c"orig_start\00", align 1
@.str.169 = private unnamed_addr constant [11 x i8] c"orig_group\00", align 1
@.str.170 = private unnamed_addr constant [9 x i8] c"orig_len\00", align 1
@.str.171 = private unnamed_addr constant [13 x i8] c"goal_logical\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c"goal_start\00", align 1
@.str.173 = private unnamed_addr constant [11 x i8] c"goal_group\00", align 1
@.str.174 = private unnamed_addr constant [9 x i8] c"goal_len\00", align 1
@.str.175 = private unnamed_addr constant [15 x i8] c"result_logical\00", align 1
@.str.176 = private unnamed_addr constant [13 x i8] c"result_start\00", align 1
@.str.177 = private unnamed_addr constant [13 x i8] c"result_group\00", align 1
@.str.178 = private unnamed_addr constant [11 x i8] c"result_len\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"found\00", align 1
@.str.180 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"buddy\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"tail\00", align 1
@.str.183 = private unnamed_addr constant [5 x i8] c"__u8\00", align 1
@.str.184 = private unnamed_addr constant [3 x i8] c"cr\00", align 1
@.str.185 = private unnamed_addr constant [123 x i8] c"dev %d,%d inode %lu orig %u/%d/%u@%u goal %u/%d/%u@%u result %u/%d/%u@%u blks %u grps %u cr %u flags %s tail %u broken %u\0A\00", align 1
@trace_raw_output_ext4_mballoc_alloc.__flags = internal constant [16 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.135 }, %struct.trace_print_flags { i32 2, ptr @.str.136 }, %struct.trace_print_flags { i32 4, ptr @.str.137 }, %struct.trace_print_flags { i32 8, ptr @.str.138 }, %struct.trace_print_flags { i32 16, ptr @.str.139 }, %struct.trace_print_flags { i32 32, ptr @.str.140 }, %struct.trace_print_flags { i32 64, ptr @.str.141 }, %struct.trace_print_flags { i32 128, ptr @.str.142 }, %struct.trace_print_flags { i32 256, ptr @.str.143 }, %struct.trace_print_flags { i32 512, ptr @.str.144 }, %struct.trace_print_flags { i32 1024, ptr @.str.145 }, %struct.trace_print_flags { i32 2048, ptr @.str.146 }, %struct.trace_print_flags { i32 4096, ptr @.str.147 }, %struct.trace_print_flags { i32 8192, ptr @.str.148 }, %struct.trace_print_flags { i32 16384, ptr @.str.149 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.186 = private unnamed_addr constant [57 x i8] c"dev %d,%d inode %lu orig %u/%d/%u@%u result %u/%d/%u@%u\0A\00", align 1
@.str.187 = private unnamed_addr constant [38 x i8] c"dev %d,%d inode %lu extent %u/%d/%d \0A\00", align 1
@.str.188 = private unnamed_addr constant [12 x i8] c"is_metadata\00", align 1
@.str.189 = private unnamed_addr constant [54 x i8] c"dev %d,%d ino %lu mode 0%o is_metadata %d block %llu\0A\00", align 1
@.str.190 = private unnamed_addr constant [9 x i8] c"i_blocks\00", align 1
@.str.191 = private unnamed_addr constant [12 x i8] c"used_blocks\00", align 1
@.str.192 = private unnamed_addr constant [21 x i8] c"reserved_data_blocks\00", align 1
@.str.193 = private unnamed_addr constant [12 x i8] c"quota_claim\00", align 1
@.str.194 = private unnamed_addr constant [96 x i8] c"dev %d,%d ino %lu mode 0%o i_blocks %llu used_blocks %d reserved_data_blocks %d quota_claim %d\0A\00", align 1
@.str.195 = private unnamed_addr constant [66 x i8] c"dev %d,%d ino %lu mode 0%o i_blocks %llu reserved_data_blocks %d\0A\00", align 1
@.str.196 = private unnamed_addr constant [13 x i8] c"freed_blocks\00", align 1
@.str.197 = private unnamed_addr constant [82 x i8] c"dev %d,%d ino %lu mode 0%o i_blocks %llu freed_blocks %d reserved_data_blocks %d\0A\00", align 1
@.str.198 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.199 = private unnamed_addr constant [20 x i8] c"dev %d,%d group %u\0A\00", align 1
@.str.200 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.201 = private unnamed_addr constant [9 x i8] c"prefetch\00", align 1
@.str.202 = private unnamed_addr constant [32 x i8] c"dev %d,%d group %u prefetch %d\0A\00", align 1
@.str.203 = private unnamed_addr constant [48 x i8] c"dev %d,%d ino %lu offset %lld len %lld mode %s\0A\00", align 1
@trace_raw_output_ext4__fallocate_mode.__flags = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.204 }, %struct.trace_print_flags { i32 2, ptr @.str.205 }, %struct.trace_print_flags { i32 4, ptr @.str.206 }, %struct.trace_print_flags { i32 8, ptr @.str.207 }, %struct.trace_print_flags { i32 16, ptr @.str.208 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.204 = private unnamed_addr constant [10 x i8] c"KEEP_SIZE\00", align 1
@.str.205 = private unnamed_addr constant [11 x i8] c"PUNCH_HOLE\00", align 1
@.str.206 = private unnamed_addr constant [14 x i8] c"NO_HIDE_STALE\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"COLLAPSE_RANGE\00", align 1
@.str.208 = private unnamed_addr constant [11 x i8] c"ZERO_RANGE\00", align 1
@.str.209 = private unnamed_addr constant [45 x i8] c"dev %d,%d ino %lu pos %lld blocks %u ret %d\0A\00", align 1
@.str.210 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.211 = private unnamed_addr constant [40 x i8] c"dev %d,%d ino %lu size %lld parent %lu\0A\00", align 1
@.str.212 = private unnamed_addr constant [31 x i8] c"dev %d,%d ino %lu blocks %llu\0A\00", align 1
@.str.213 = private unnamed_addr constant [12 x i8] c"ext4_lblk_t\00", align 1
@.str.214 = private unnamed_addr constant [7 x i8] c"m_lblk\00", align 1
@.str.215 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.216 = private unnamed_addr constant [6 x i8] c"m_len\00", align 1
@.str.217 = private unnamed_addr constant [7 x i8] c"u_lblk\00", align 1
@.str.218 = private unnamed_addr constant [6 x i8] c"u_len\00", align 1
@.str.219 = private unnamed_addr constant [13 x i8] c"ext4_fsblk_t\00", align 1
@.str.220 = private unnamed_addr constant [7 x i8] c"u_pblk\00", align 1
@.str.221 = private unnamed_addr constant [69 x i8] c"dev %d,%d ino %lu m_lblk %u m_len %u u_lblk %u u_len %u u_pblk %llu\0A\00", align 1
@.str.222 = private unnamed_addr constant [7 x i8] c"i_lblk\00", align 1
@.str.223 = private unnamed_addr constant [6 x i8] c"i_len\00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c"i_pblk\00", align 1
@.str.225 = private unnamed_addr constant [101 x i8] c"dev %d,%d ino %lu m_lblk %u m_len %u u_lblk %u u_len %u u_pblk %llu i_lblk %u i_len %u i_pblk %llu \0A\00", align 1
@.str.226 = private unnamed_addr constant [43 x i8] c"dev %d,%d ino %lu lblk %u len %u flags %s\0A\00", align 1
@trace_raw_output_ext4__map_blocks_enter.__flags = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.228 }, %struct.trace_print_flags { i32 4, ptr @.str.229 }, %struct.trace_print_flags { i32 8, ptr @.str.230 }, %struct.trace_print_flags { i32 16, ptr @.str.231 }, %struct.trace_print_flags { i32 32, ptr @.str.232 }, %struct.trace_print_flags { i32 64, ptr @.str.233 }, %struct.trace_print_flags { i32 256, ptr @.str.234 }, %struct.trace_print_flags { i32 512, ptr @.str.235 }, %struct.trace_print_flags { i32 1024, ptr @.str.236 }, %struct.trace_print_flags { i32 1073741824, ptr @.str.237 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.227 = private unnamed_addr constant [7 x i8] c"CREATE\00", align 1
@.str.228 = private unnamed_addr constant [7 x i8] c"UNWRIT\00", align 1
@.str.229 = private unnamed_addr constant [9 x i8] c"DELALLOC\00", align 1
@.str.230 = private unnamed_addr constant [7 x i8] c"PRE_IO\00", align 1
@.str.231 = private unnamed_addr constant [8 x i8] c"CONVERT\00", align 1
@.str.232 = private unnamed_addr constant [16 x i8] c"METADATA_NOFAIL\00", align 1
@.str.233 = private unnamed_addr constant [13 x i8] c"NO_NORMALIZE\00", align 1
@.str.234 = private unnamed_addr constant [18 x i8] c"CONVERT_UNWRITTEN\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"ZERO\00", align 1
@.str.236 = private unnamed_addr constant [10 x i8] c"IO_SUBMIT\00", align 1
@.str.237 = private unnamed_addr constant [11 x i8] c"EX_NOCACHE\00", align 1
@.str.238 = private unnamed_addr constant [5 x i8] c"pblk\00", align 1
@.str.239 = private unnamed_addr constant [7 x i8] c"mflags\00", align 1
@.str.240 = private unnamed_addr constant [70 x i8] c"dev %d,%d ino %lu flags %s lblk %u pblk %llu len %u mflags %s ret %d\0A\00", align 1
@trace_raw_output_ext4__map_blocks_exit.__flags = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.228 }, %struct.trace_print_flags { i32 4, ptr @.str.229 }, %struct.trace_print_flags { i32 8, ptr @.str.230 }, %struct.trace_print_flags { i32 16, ptr @.str.231 }, %struct.trace_print_flags { i32 32, ptr @.str.232 }, %struct.trace_print_flags { i32 64, ptr @.str.233 }, %struct.trace_print_flags { i32 256, ptr @.str.234 }, %struct.trace_print_flags { i32 512, ptr @.str.235 }, %struct.trace_print_flags { i32 1024, ptr @.str.236 }, %struct.trace_print_flags { i32 1073741824, ptr @.str.237 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4__map_blocks_exit.__flags.241 = internal constant [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 32, ptr @.str.102 }, %struct.trace_print_flags { i32 16, ptr @.str.103 }, %struct.trace_print_flags { i32 2048, ptr @.str.104 }, %struct.trace_print_flags { i32 512, ptr @.str.105 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.242 = private unnamed_addr constant [37 x i8] c"dev %d,%d ino %lu lblk %u pblk %llu\0A\00", align 1
@.str.243 = private unnamed_addr constant [19 x i8] c"dev %d,%d ino %ld\0A\00", align 1
@.str.244 = private unnamed_addr constant [11 x i8] c"rsv_blocks\00", align 1
@.str.245 = private unnamed_addr constant [13 x i8] c"revoke_creds\00", align 1
@.str.246 = private unnamed_addr constant [65 x i8] c"dev %d,%d blocks %d, rsv_blocks %d, revoke_creds %d, caller %pS\0A\00", align 1
@.str.247 = private unnamed_addr constant [33 x i8] c"dev %d,%d blocks, %d caller %pS\0A\00", align 1
@.str.248 = private unnamed_addr constant [10 x i8] c"dev_major\00", align 1
@.str.249 = private unnamed_addr constant [10 x i8] c"dev_minor\00", align 1
@.str.250 = private unnamed_addr constant [6 x i8] c"start\00", align 1
@.str.251 = private unnamed_addr constant [38 x i8] c"dev %d,%d group %u, start %d, len %d\0A\00", align 1
@.str.252 = private unnamed_addr constant [10 x i8] c"allocated\00", align 1
@.str.253 = private unnamed_addr constant [7 x i8] c"newblk\00", align 1
@.str.254 = private unnamed_addr constant [86 x i8] c"dev %d,%d ino %lu m_lblk %u m_pblk %llu m_len %u flags %s allocated %d newblock %llu\0A\00", align 1
@trace_raw_output_ext4_ext_handle_unwritten_extents.__flags = internal constant [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.227 }, %struct.trace_print_flags { i32 2, ptr @.str.228 }, %struct.trace_print_flags { i32 4, ptr @.str.229 }, %struct.trace_print_flags { i32 8, ptr @.str.230 }, %struct.trace_print_flags { i32 16, ptr @.str.231 }, %struct.trace_print_flags { i32 32, ptr @.str.232 }, %struct.trace_print_flags { i32 64, ptr @.str.233 }, %struct.trace_print_flags { i32 256, ptr @.str.234 }, %struct.trace_print_flags { i32 512, ptr @.str.235 }, %struct.trace_print_flags { i32 1024, ptr @.str.236 }, %struct.trace_print_flags { i32 1073741824, ptr @.str.237 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.255 = private unnamed_addr constant [60 x i8] c"dev %d,%d m_lblk %u m_pblk %llu m_len %u m_flags %s ret %d\0A\00", align 1
@trace_raw_output_ext4_get_implied_cluster_alloc_exit.__flags = internal constant [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 32, ptr @.str.102 }, %struct.trace_print_flags { i32 16, ptr @.str.103 }, %struct.trace_print_flags { i32 2048, ptr @.str.104 }, %struct.trace_print_flags { i32 512, ptr @.str.105 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.256 = private unnamed_addr constant [15 x i8] c"unsigned short\00", align 1
@.str.257 = private unnamed_addr constant [44 x i8] c"dev %d,%d ino %lu lblk %u pblk %llu len %u\0A\00", align 1
@.str.258 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.259 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.260 = private unnamed_addr constant [8 x i8] c"ee_pblk\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"ee_lblk\00", align 1
@.str.262 = private unnamed_addr constant [7 x i8] c"ee_len\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"pc_pclu\00", align 1
@.str.264 = private unnamed_addr constant [8 x i8] c"pc_lblk\00", align 1
@.str.265 = private unnamed_addr constant [9 x i8] c"pc_state\00", align 1
@.str.266 = private unnamed_addr constant [91 x i8] c"dev %d,%d ino %lu extent [%u(%llu), %u]from %u to %u partial [pclu %lld lblk %u state %d]\0A\00", align 1
@.str.267 = private unnamed_addr constant [6 x i8] c"short\00", align 1
@.str.268 = private unnamed_addr constant [96 x i8] c"dev %d,%d ino %lu start_lblk %u last_extent [%u(%llu), %u]partial [pclu %lld lblk %u state %d]\0A\00", align 1
@.str.269 = private unnamed_addr constant [35 x i8] c"dev %d,%d ino %lu index_pblk %llu\0A\00", align 1
@.str.270 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str.271 = private unnamed_addr constant [6 x i8] c"depth\00", align 1
@.str.272 = private unnamed_addr constant [44 x i8] c"dev %d,%d ino %lu since %u end %u depth %d\0A\00", align 1
@.str.273 = private unnamed_addr constant [11 x i8] c"eh_entries\00", align 1
@.str.274 = private unnamed_addr constant [102 x i8] c"dev %d,%d ino %lu since %u end %u depth %d partial [pclu %lld lblk %u state %d] remaining_entries %u\0A\00", align 1
@.str.275 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.276 = private unnamed_addr constant [52 x i8] c"dev %d,%d ino %lu es [%u/%u) mapped %llu status %s\0A\00", align 1
@trace_raw_output_ext4__es_extent.__flags = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.277 }, %struct.trace_print_flags { i32 2, ptr @.str.104 }, %struct.trace_print_flags { i32 4, ptr @.str.278 }, %struct.trace_print_flags { i32 8, ptr @.str.279 }, %struct.trace_print_flags { i32 16, ptr @.str.280 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.277 = private unnamed_addr constant [2 x i8] c"W\00", align 1
@.str.278 = private unnamed_addr constant [2 x i8] c"D\00", align 1
@.str.279 = private unnamed_addr constant [2 x i8] c"H\00", align 1
@.str.280 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.281 = private unnamed_addr constant [34 x i8] c"dev %d,%d ino %lu es [%lld/%lld)\0A\00", align 1
@.str.282 = private unnamed_addr constant [27 x i8] c"dev %d,%d ino %lu lblk %u\0A\00", align 1
@trace_raw_output_ext4_es_find_extent_range_exit.__flags = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.277 }, %struct.trace_print_flags { i32 2, ptr @.str.104 }, %struct.trace_print_flags { i32 4, ptr @.str.278 }, %struct.trace_print_flags { i32 8, ptr @.str.279 }, %struct.trace_print_flags { i32 16, ptr @.str.280 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.283 = private unnamed_addr constant [44 x i8] c"dev %d,%d ino %lu found %d [%u/%u) %llu %s\0A\00", align 1
@trace_raw_output_ext4_es_lookup_extent_exit.__flags = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.277 }, %struct.trace_print_flags { i32 2, ptr @.str.104 }, %struct.trace_print_flags { i32 4, ptr @.str.278 }, %struct.trace_print_flags { i32 8, ptr @.str.279 }, %struct.trace_print_flags { i32 16, ptr @.str.280 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.284 = private unnamed_addr constant [11 x i8] c"nr_to_scan\00", align 1
@.str.285 = private unnamed_addr constant [10 x i8] c"cache_cnt\00", align 1
@.str.286 = private unnamed_addr constant [38 x i8] c"dev %d,%d nr_to_scan %d cache_cnt %d\0A\00", align 1
@.str.287 = private unnamed_addr constant [10 x i8] c"nr_shrunk\00", align 1
@.str.288 = private unnamed_addr constant [37 x i8] c"dev %d,%d nr_shrunk %d cache_cnt %d\0A\00", align 1
@.str.289 = private unnamed_addr constant [40 x i8] c"dev %d,%d ino %lu offset %lld len %lld\0A\00", align 1
@.str.290 = private unnamed_addr constant [19 x i8] c"unsigned long long\00", align 1
@.str.291 = private unnamed_addr constant [10 x i8] c"scan_time\00", align 1
@.str.292 = private unnamed_addr constant [11 x i8] c"nr_skipped\00", align 1
@.str.293 = private unnamed_addr constant [8 x i8] c"retried\00", align 1
@.str.294 = private unnamed_addr constant [65 x i8] c"dev %d,%d nr_shrunk %d, scan_time %llu nr_skipped %d retried %d\0A\00", align 1
@.str.295 = private unnamed_addr constant [65 x i8] c"dev %d,%d ino %lu es [%u/%u) mapped %llu status %s allocated %d\0A\00", align 1
@trace_raw_output_ext4_es_insert_delayed_block.__flags = internal constant [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.277 }, %struct.trace_print_flags { i32 2, ptr @.str.104 }, %struct.trace_print_flags { i32 4, ptr @.str.278 }, %struct.trace_print_flags { i32 8, ptr @.str.279 }, %struct.trace_print_flags { i32 16, ptr @.str.280 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.296 = private unnamed_addr constant [7 x i8] c"keydev\00", align 1
@.str.297 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@.str.298 = private unnamed_addr constant [5 x i8] c"agno\00", align 1
@.str.299 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@.str.300 = private unnamed_addr constant [4 x i8] c"bno\00", align 1
@.str.301 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.302 = private unnamed_addr constant [62 x i8] c"dev %d:%d keydev %d:%d agno %u bno %llu len %llu owner %lld\0A\0A\00", align 1
@.str.303 = private unnamed_addr constant [69 x i8] c"dev %d:%d keydev %d:%d block %llu len %llu owner %lld flags 0x%llx\0A\0A\00", align 1
@.str.304 = private unnamed_addr constant [20 x i8] c"dev %d,%d flags %u\0A\00", align 1
@.str.305 = private unnamed_addr constant [13 x i8] c"const char *\00", align 1
@.str.306 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.307 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.308 = private unnamed_addr constant [31 x i8] c"dev %d,%d function %s line %u\0A\00", align 1
@.str.309 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.310 = private unnamed_addr constant [4 x i8] c"ios\00", align 1
@.str.311 = private unnamed_addr constant [35 x i8] c"dev %d,%d group %u next %u ios %u\0A\00", align 1
@.str.312 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.313 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.314 = private unnamed_addr constant [45 x i8] c"FC scan pass on dev %d,%d: error %d, off %d\0A\00", align 1
@.str.315 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.316 = private unnamed_addr constant [6 x i8] c"priv1\00", align 1
@.str.317 = private unnamed_addr constant [6 x i8] c"priv2\00", align 1
@.str.318 = private unnamed_addr constant [53 x i8] c"FC Replay %d,%d: tag %d, ino %d, data1 %d, data2 %d\0A\00", align 1
@.str.319 = private unnamed_addr constant [34 x i8] c"fast_commit started on dev %d,%d\0A\00", align 1
@.str.320 = private unnamed_addr constant [6 x i8] c"nblks\00", align 1
@.str.321 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@.str.322 = private unnamed_addr constant [7 x i8] c"num_fc\00", align 1
@.str.323 = private unnamed_addr constant [18 x i8] c"num_fc_ineligible\00", align 1
@.str.324 = private unnamed_addr constant [10 x i8] c"nblks_agg\00", align 1
@.str.325 = private unnamed_addr constant [75 x i8] c"fc on [%d,%d] nblks %d, reason %d, fc = %d, ineligible = %d, agg_nblks %d\0A\00", align 1
@.str.326 = private unnamed_addr constant [22 x i8] c"struct ext4_sb_info *\00", align 1
@.str.327 = private unnamed_addr constant [4 x i8] c"sbi\00", align 1
@.str.328 = private unnamed_addr constant [144 x i8] c"dev %d:%d fc ineligible reasons:\0A%s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d, %s:%d; num_commits:%ld, ineligible: %ld, numblks: %ld\0A\00", align 1
@trace_raw_output_ext4_fc_stats.symbols = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.329 = private unnamed_addr constant [6 x i8] c"XATTR\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"CROSS_RENAME\00", align 1
@.str.331 = private unnamed_addr constant [20 x i8] c"JOURNAL_FLAG_CHANGE\00", align 1
@.str.332 = private unnamed_addr constant [7 x i8] c"NO_MEM\00", align 1
@.str.333 = private unnamed_addr constant [10 x i8] c"SWAP_BOOT\00", align 1
@.str.334 = private unnamed_addr constant [7 x i8] c"RESIZE\00", align 1
@.str.335 = private unnamed_addr constant [11 x i8] c"RENAME_DIR\00", align 1
@.str.336 = private unnamed_addr constant [13 x i8] c"FALLOC_RANGE\00", align 1
@.str.337 = private unnamed_addr constant [19 x i8] c"INODE_JOURNAL_DATA\00", align 1
@trace_raw_output_ext4_fc_stats.symbols.338 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.339 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.340 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.341 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.342 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.343 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.344 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@trace_raw_output_ext4_fc_stats.symbols.345 = internal constant [10 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.329 }, %struct.trace_print_flags { i32 1, ptr @.str.330 }, %struct.trace_print_flags { i32 2, ptr @.str.331 }, %struct.trace_print_flags { i32 3, ptr @.str.332 }, %struct.trace_print_flags { i32 4, ptr @.str.333 }, %struct.trace_print_flags { i32 5, ptr @.str.334 }, %struct.trace_print_flags { i32 6, ptr @.str.335 }, %struct.trace_print_flags { i32 7, ptr @.str.336 }, %struct.trace_print_flags { i32 8, ptr @.str.337 }, %struct.trace_print_flags { i32 -1, ptr null }], align 4
@.str.346 = private unnamed_addr constant [38 x i8] c"dev %d:%d, inode %d, error %d, fc_%s\0A\00", align 1
@.str.347 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str.348 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.349 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.350 = private unnamed_addr constant [31 x i8] c"dev %d:%d, inode %d, error %d\0A\00", align 1
@.str.351 = private unnamed_addr constant [51 x i8] c"dev %d:%d, inode %d, error %d, start %ld, end %ld\0A\00", align 1
@.str.352 = private unnamed_addr constant [6 x i8] c"fsblk\00", align 1
@.str.353 = private unnamed_addr constant [31 x i8] c"dev %d,%d fsblk %llu flags %u\0A\00", align 1
@ext4_has_metadata_csum.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.354 = private unnamed_addr constant [15 x i8] c"fs/ext4/ext4.h\00", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@ext4_handle_error.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.356 = private unnamed_addr constant [47 x i8] c"EXT4-fs (device %s): panic forced after error\0A\00", align 1
@.str.357 = private unnamed_addr constant [3 x i8] c"\012\00", align 1
@.str.358 = private unnamed_addr constant [32 x i8] c"Remounting filesystem read-only\00", align 1
@.str.359 = private unnamed_addr constant [42 x i8] c"previous I/O error to superblock detected\00", align 1
@.str.360 = private unnamed_addr constant [35 x i8] c"I/O error while writing superblock\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [16 x i32], align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@err_translation = internal unnamed_addr constant [16 x %struct.ext4_err_translation] [%struct.ext4_err_translation { i32 2, i32 5 }, %struct.ext4_err_translation { i32 3, i32 12 }, %struct.ext4_err_translation { i32 4, i32 74 }, %struct.ext4_err_translation { i32 5, i32 117 }, %struct.ext4_err_translation { i32 6, i32 28 }, %struct.ext4_err_translation { i32 7, i32 126 }, %struct.ext4_err_translation { i32 8, i32 30 }, %struct.ext4_err_translation { i32 9, i32 27 }, %struct.ext4_err_translation { i32 10, i32 17 }, %struct.ext4_err_translation { i32 11, i32 34 }, %struct.ext4_err_translation { i32 12, i32 75 }, %struct.ext4_err_translation { i32 13, i32 16 }, %struct.ext4_err_translation { i32 14, i32 20 }, %struct.ext4_err_translation { i32 15, i32 39 }, %struct.ext4_err_translation { i32 16, i32 108 }, %struct.ext4_err_translation { i32 17, i32 14 }], align 4
@system_state = external dso_local local_unnamed_addr global i32, align 4
@.str.361 = private unnamed_addr constant [16 x i8] c"EXT4-fs warning\00", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@percpu_counter_batch = external dso_local local_unnamed_addr global i32, align 4
@jbd2_inode_cache = external dso_local local_unnamed_addr global ptr, align 4
@.str.362 = private unnamed_addr constant [10 x i8] c"%csb=%llu\00", align 1
@ext4_mount_opts = internal unnamed_addr constant [46 x %struct.mount_opts] [%struct.mount_opts { i32 1, i32 128, i32 1 }, %struct.mount_opts { i32 0, i32 128, i32 2 }, %struct.mount_opts { i32 2, i32 4, i32 1 }, %struct.mount_opts { i32 3, i32 4, i32 2 }, %struct.mount_opts { i32 55, i32 536870912, i32 1 }, %struct.mount_opts { i32 56, i32 536870912, i32 2 }, %struct.mount_opts { i32 59, i32 4194304, i32 97 }, %struct.mount_opts { i32 60, i32 4194304, i32 98 }, %struct.mount_opts { i32 61, i32 1073741824, i32 1 }, %struct.mount_opts { i32 62, i32 1073741824, i32 2 }, %struct.mount_opts { i32 48, i32 134217728, i32 105 }, %struct.mount_opts { i32 49, i32 134217728, i32 98 }, %struct.mount_opts { i32 50, i32 33554432, i32 1 }, %struct.mount_opts { i32 51, i32 33554432, i32 2 }, %struct.mount_opts { i32 66, i32 8388608, i32 98 }, %struct.mount_opts { i32 22, i32 8388608, i32 105 }, %struct.mount_opts { i32 23, i32 25165824, i32 105 }, %struct.mount_opts { i32 16, i32 256, i32 33 }, %struct.mount_opts { i32 72, i32 268435456, i32 32 }, %struct.mount_opts { i32 36, i32 131072, i32 1 }, %struct.mount_opts { i32 37, i32 131072, i32 2 }, %struct.mount_opts { i32 15, i32 65536, i32 1 }, %struct.mount_opts { i32 14, i32 65536, i32 2 }, %struct.mount_opts { i32 64, i32 -2147483648, i32 2 }, %struct.mount_opts { i32 74, i32 0, i32 96 }, %struct.mount_opts { i32 20, i32 0, i32 32 }, %struct.mount_opts { i32 21, i32 0, i32 32 }, %struct.mount_opts { i32 58, i32 0, i32 32 }, %struct.mount_opts { i32 71, i32 0, i32 32 }, %struct.mount_opts { i32 10, i32 16384, i32 1 }, %struct.mount_opts { i32 11, i32 16384, i32 2 }, %struct.mount_opts { i32 12, i32 0, i32 4 }, %struct.mount_opts { i32 13, i32 0, i32 4 }, %struct.mount_opts { i32 7, i32 8192, i32 1 }, %struct.mount_opts { i32 8, i32 8, i32 1 }, %struct.mount_opts { i32 34, i32 786432, i32 5 }, %struct.mount_opts { i32 39, i32 786432, i32 5 }, %struct.mount_opts { i32 40, i32 1310720, i32 5 }, %struct.mount_opts { i32 41, i32 2359296, i32 5 }, %struct.mount_opts { i32 35, i32 3932160, i32 6 }, %struct.mount_opts { i32 32, i32 0, i32 4 }, %struct.mount_opts { i32 33, i32 0, i32 4 }, %struct.mount_opts { i32 73, i32 0, i32 4 }, %struct.mount_opts { i32 67, i32 1, i32 1 }, %struct.mount_opts { i32 68, i32 67108864, i32 1 }, %struct.mount_opts { i32 38, i32 0, i32 0 }], align 4
@.str.363 = private unnamed_addr constant [5 x i8] c"%c%s\00", align 1
@.str.364 = private unnamed_addr constant [12 x i8] c"%cresuid=%u\00", align 1
@.str.365 = private unnamed_addr constant [12 x i8] c"%cresgid=%u\00", align 1
@.str.366 = private unnamed_addr constant [20 x i8] c"%cerrors=remount-ro\00", align 1
@.str.367 = private unnamed_addr constant [18 x i8] c"%cerrors=continue\00", align 1
@.str.368 = private unnamed_addr constant [15 x i8] c"%cerrors=panic\00", align 1
@.str.369 = private unnamed_addr constant [13 x i8] c"%ccommit=%lu\00", align 1
@.str.370 = private unnamed_addr constant [20 x i8] c"%cmin_batch_time=%u\00", align 1
@.str.371 = private unnamed_addr constant [20 x i8] c"%cmax_batch_time=%u\00", align 1
@.str.372 = private unnamed_addr constant [12 x i8] c"%ci_version\00", align 1
@.str.373 = private unnamed_addr constant [13 x i8] c"%cstripe=%lu\00", align 1
@.str.374 = private unnamed_addr constant [15 x i8] c"%cdata=journal\00", align 1
@.str.375 = private unnamed_addr constant [15 x i8] c"%cdata=ordered\00", align 1
@.str.376 = private unnamed_addr constant [17 x i8] c"%cdata=writeback\00", align 1
@.str.377 = private unnamed_addr constant [26 x i8] c"%cinode_readahead_blks=%u\00", align 1
@.str.378 = private unnamed_addr constant [17 x i8] c"%cinit_itable=%u\00", align 1
@.str.379 = private unnamed_addr constant [21 x i8] c"%cmax_dir_size_kb=%u\00", align 1
@.str.380 = private unnamed_addr constant [17 x i8] c"%cdata_err=abort\00", align 1
@.str.381 = private unnamed_addr constant [14 x i8] c"%cinlinecrypt\00", align 1
@ext2_fs_type = internal global %struct.file_system_type { ptr @.str.477, i32 1, ptr @ext4_init_fs_context, ptr @ext4_param_specs, ptr null, ptr @kill_block_super, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, align 4
@.str.384 = private unnamed_addr constant [12 x i8] c"%cdax=never\00", align 1
@.str.385 = private unnamed_addr constant [12 x i8] c"%cdax=inode\00", align 1
@ext4_param_specs = internal constant [85 x %struct.fs_parameter_spec] [%struct.fs_parameter_spec { ptr @.str.386, ptr null, i8 0, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.387, ptr null, i8 1, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.388, ptr null, i8 2, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.389, ptr null, i8 2, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.390, ptr null, i8 3, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.391, ptr null, i8 3, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.392, ptr @fs_param_is_u32, i8 4, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.393, ptr @fs_param_is_u32, i8 5, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.394, ptr @fs_param_is_u32, i8 6, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.395, ptr @fs_param_is_enum, i8 70, i16 0, ptr @ext4_param_errors }, %struct.fs_parameter_spec { ptr @.str.396, ptr null, i8 7, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.397, ptr null, i8 8, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.398, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.399, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.400, ptr null, i8 10, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.401, ptr null, i8 11, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.402, ptr null, i8 12, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.403, ptr null, i8 13, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.404, ptr null, i8 16, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.405, ptr null, i8 16, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.406, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.407, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.408, ptr @fs_param_is_u32, i8 17, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.409, ptr @fs_param_is_u32, i8 18, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.410, ptr @fs_param_is_u32, i8 19, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.411, ptr @fs_param_is_u32, i8 20, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.412, ptr @fs_param_is_blockdev, i8 21, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.413, ptr null, i8 22, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.414, ptr null, i8 66, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.415, ptr null, i8 23, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.416, ptr null, i8 24, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.417, ptr @fs_param_is_enum, i8 71, i16 0, ptr @ext4_param_data }, %struct.fs_parameter_spec { ptr @.str.418, ptr @fs_param_is_enum, i8 72, i16 0, ptr @ext4_param_data_err }, %struct.fs_parameter_spec { ptr @.str.419, ptr @fs_param_is_string, i8 32, i16 4, ptr null }, %struct.fs_parameter_spec { ptr @.str.420, ptr @fs_param_is_string, i8 33, i16 4, ptr null }, %struct.fs_parameter_spec { ptr @.str.421, ptr @fs_param_is_enum, i8 73, i16 0, ptr @ext4_param_jqfmt }, %struct.fs_parameter_spec { ptr @.str.422, ptr null, i8 40, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.423, ptr null, i8 34, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.424, ptr null, i8 35, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.425, ptr null, i8 39, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.426, ptr null, i8 41, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.427, ptr null, i8 36, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.427, ptr @fs_param_is_u32, i8 36, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.428, ptr null, i8 37, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.429, ptr null, i8 42, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.430, ptr null, i8 43, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.430, ptr @fs_param_is_enum, i8 74, i16 0, ptr @ext4_param_dax }, %struct.fs_parameter_spec { ptr @.str.431, ptr @fs_param_is_u32, i8 47, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.432, ptr null, i8 48, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.433, ptr null, i8 49, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.434, ptr null, i8 50, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.435, ptr null, i8 51, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.436, ptr @fs_param_is_u32, i8 53, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.437, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.438, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.439, ptr null, i8 55, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.440, ptr null, i8 56, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.441, ptr @fs_param_is_u32, i8 57, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.442, ptr @fs_param_is_u32, i8 58, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.443, ptr @fs_param_is_u32, i8 14, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.443, ptr null, i8 14, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.444, ptr null, i8 15, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.445, ptr null, i8 59, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.446, ptr null, i8 60, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.447, ptr null, i8 60, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.448, ptr null, i8 61, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.449, ptr null, i8 62, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.450, ptr @fs_param_is_u32, i8 63, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.450, ptr null, i8 63, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.451, ptr null, i8 64, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.452, ptr @fs_param_is_u32, i8 65, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.453, ptr null, i8 30, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.453, ptr @fs_param_is_string, i8 30, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.454, ptr null, i8 31, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.455, ptr null, i8 67, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.456, ptr null, i8 67, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.457, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.458, ptr null, i8 68, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.459, ptr @fs_param_is_s32, i8 69, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.460, ptr @fs_param_is_string, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.461, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.462, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.463, ptr null, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.464, ptr @fs_param_is_u32, i8 9, i16 0, ptr null }, %struct.fs_parameter_spec zeroinitializer], align 4
@.str.386 = private unnamed_addr constant [6 x i8] c"bsddf\00", align 1
@.str.387 = private unnamed_addr constant [8 x i8] c"minixdf\00", align 1
@.str.388 = private unnamed_addr constant [6 x i8] c"grpid\00", align 1
@.str.389 = private unnamed_addr constant [10 x i8] c"bsdgroups\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"nogrpid\00", align 1
@.str.391 = private unnamed_addr constant [11 x i8] c"sysvgroups\00", align 1
@.str.392 = private unnamed_addr constant [7 x i8] c"resgid\00", align 1
@.str.393 = private unnamed_addr constant [7 x i8] c"resuid\00", align 1
@.str.394 = private unnamed_addr constant [3 x i8] c"sb\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@ext4_param_errors = internal constant [4 x %struct.constant_table] [%struct.constant_table { ptr @.str.465, i32 16 }, %struct.constant_table { ptr @.str.466, i32 64 }, %struct.constant_table { ptr @.str.467, i32 32 }, %struct.constant_table zeroinitializer], align 4
@.str.396 = private unnamed_addr constant [8 x i8] c"nouid32\00", align 1
@.str.397 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.398 = private unnamed_addr constant [9 x i8] c"oldalloc\00", align 1
@.str.399 = private unnamed_addr constant [6 x i8] c"orlov\00", align 1
@.str.400 = private unnamed_addr constant [11 x i8] c"user_xattr\00", align 1
@.str.401 = private unnamed_addr constant [13 x i8] c"nouser_xattr\00", align 1
@.str.402 = private unnamed_addr constant [4 x i8] c"acl\00", align 1
@.str.403 = private unnamed_addr constant [6 x i8] c"noacl\00", align 1
@.str.404 = private unnamed_addr constant [11 x i8] c"norecovery\00", align 1
@.str.405 = private unnamed_addr constant [7 x i8] c"noload\00", align 1
@.str.406 = private unnamed_addr constant [3 x i8] c"bh\00", align 1
@.str.407 = private unnamed_addr constant [5 x i8] c"nobh\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"commit\00", align 1
@.str.409 = private unnamed_addr constant [15 x i8] c"min_batch_time\00", align 1
@.str.410 = private unnamed_addr constant [15 x i8] c"max_batch_time\00", align 1
@.str.411 = private unnamed_addr constant [12 x i8] c"journal_dev\00", align 1
@.str.412 = private unnamed_addr constant [13 x i8] c"journal_path\00", align 1
@.str.413 = private unnamed_addr constant [17 x i8] c"journal_checksum\00", align 1
@.str.414 = private unnamed_addr constant [19 x i8] c"nojournal_checksum\00", align 1
@.str.415 = private unnamed_addr constant [21 x i8] c"journal_async_commit\00", align 1
@.str.416 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str.417 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@ext4_param_data = internal constant [4 x %struct.constant_table] [%struct.constant_table { ptr @.str.464, i32 1024 }, %struct.constant_table { ptr @.str.468, i32 2048 }, %struct.constant_table { ptr @.str.469, i32 3072 }, %struct.constant_table zeroinitializer], align 4
@.str.418 = private unnamed_addr constant [9 x i8] c"data_err\00", align 1
@ext4_param_data_err = internal constant [3 x %struct.constant_table] [%struct.constant_table { ptr @.str.416, i32 28 }, %struct.constant_table { ptr @.str.470, i32 29 }, %struct.constant_table zeroinitializer], align 4
@.str.419 = private unnamed_addr constant [10 x i8] c"usrjquota\00", align 1
@.str.420 = private unnamed_addr constant [10 x i8] c"grpjquota\00", align 1
@.str.421 = private unnamed_addr constant [6 x i8] c"jqfmt\00", align 1
@ext4_param_jqfmt = internal constant [4 x %struct.constant_table] [%struct.constant_table { ptr @.str.471, i32 1 }, %struct.constant_table { ptr @.str.472, i32 2 }, %struct.constant_table { ptr @.str.473, i32 4 }, %struct.constant_table zeroinitializer], align 4
@.str.422 = private unnamed_addr constant [9 x i8] c"grpquota\00", align 1
@.str.423 = private unnamed_addr constant [6 x i8] c"quota\00", align 1
@.str.424 = private unnamed_addr constant [8 x i8] c"noquota\00", align 1
@.str.425 = private unnamed_addr constant [9 x i8] c"usrquota\00", align 1
@.str.426 = private unnamed_addr constant [9 x i8] c"prjquota\00", align 1
@.str.427 = private unnamed_addr constant [8 x i8] c"barrier\00", align 1
@.str.428 = private unnamed_addr constant [10 x i8] c"nobarrier\00", align 1
@.str.429 = private unnamed_addr constant [10 x i8] c"i_version\00", align 1
@.str.430 = private unnamed_addr constant [4 x i8] c"dax\00", align 1
@ext4_param_dax = internal constant [4 x %struct.constant_table] [%struct.constant_table { ptr @.str.474, i32 44 }, %struct.constant_table { ptr @.str.475, i32 45 }, %struct.constant_table { ptr @.str.476, i32 46 }, %struct.constant_table zeroinitializer], align 4
@.str.431 = private unnamed_addr constant [7 x i8] c"stripe\00", align 1
@.str.432 = private unnamed_addr constant [9 x i8] c"delalloc\00", align 1
@.str.433 = private unnamed_addr constant [11 x i8] c"nodelalloc\00", align 1
@.str.434 = private unnamed_addr constant [14 x i8] c"warn_on_error\00", align 1
@.str.435 = private unnamed_addr constant [16 x i8] c"nowarn_on_error\00", align 1
@.str.436 = private unnamed_addr constant [23 x i8] c"debug_want_extra_isize\00", align 1
@.str.437 = private unnamed_addr constant [15 x i8] c"mblk_io_submit\00", align 1
@.str.438 = private unnamed_addr constant [17 x i8] c"nomblk_io_submit\00", align 1
@.str.439 = private unnamed_addr constant [15 x i8] c"block_validity\00", align 1
@.str.440 = private unnamed_addr constant [17 x i8] c"noblock_validity\00", align 1
@.str.441 = private unnamed_addr constant [21 x i8] c"inode_readahead_blks\00", align 1
@.str.442 = private unnamed_addr constant [15 x i8] c"journal_ioprio\00", align 1
@.str.443 = private unnamed_addr constant [14 x i8] c"auto_da_alloc\00", align 1
@.str.444 = private unnamed_addr constant [16 x i8] c"noauto_da_alloc\00", align 1
@.str.445 = private unnamed_addr constant [15 x i8] c"dioread_nolock\00", align 1
@.str.446 = private unnamed_addr constant [17 x i8] c"nodioread_nolock\00", align 1
@.str.447 = private unnamed_addr constant [13 x i8] c"dioread_lock\00", align 1
@.str.448 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.449 = private unnamed_addr constant [10 x i8] c"nodiscard\00", align 1
@.str.450 = private unnamed_addr constant [12 x i8] c"init_itable\00", align 1
@.str.451 = private unnamed_addr constant [14 x i8] c"noinit_itable\00", align 1
@.str.452 = private unnamed_addr constant [16 x i8] c"max_dir_size_kb\00", align 1
@.str.453 = private unnamed_addr constant [22 x i8] c"test_dummy_encryption\00", align 1
@.str.454 = private unnamed_addr constant [12 x i8] c"inlinecrypt\00", align 1
@.str.455 = private unnamed_addr constant [10 x i8] c"nombcache\00", align 1
@.str.456 = private unnamed_addr constant [11 x i8] c"no_mbcache\00", align 1
@.str.457 = private unnamed_addr constant [23 x i8] c"prefetch_block_bitmaps\00", align 1
@.str.458 = private unnamed_addr constant [26 x i8] c"no_prefetch_block_bitmaps\00", align 1
@.str.459 = private unnamed_addr constant [17 x i8] c"mb_optimize_scan\00", align 1
@.str.460 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.461 = private unnamed_addr constant [8 x i8] c"nocheck\00", align 1
@.str.462 = private unnamed_addr constant [12 x i8] c"reservation\00", align 1
@.str.463 = private unnamed_addr constant [14 x i8] c"noreservation\00", align 1
@.str.464 = private unnamed_addr constant [8 x i8] c"journal\00", align 1
@.str.465 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.466 = private unnamed_addr constant [6 x i8] c"panic\00", align 1
@.str.467 = private unnamed_addr constant [11 x i8] c"remount-ro\00", align 1
@.str.468 = private unnamed_addr constant [8 x i8] c"ordered\00", align 1
@.str.469 = private unnamed_addr constant [10 x i8] c"writeback\00", align 1
@.str.470 = private unnamed_addr constant [7 x i8] c"ignore\00", align 1
@.str.471 = private unnamed_addr constant [7 x i8] c"vfsold\00", align 1
@.str.472 = private unnamed_addr constant [6 x i8] c"vfsv0\00", align 1
@.str.473 = private unnamed_addr constant [6 x i8] c"vfsv1\00", align 1
@.str.474 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.475 = private unnamed_addr constant [6 x i8] c"inode\00", align 1
@.str.476 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@overflowuid = external dso_local local_unnamed_addr global i32, align 4
@overflowgid = external dso_local local_unnamed_addr global i32, align 4
@.str.477 = private unnamed_addr constant [5 x i8] c"ext2\00", align 1
@ext4_context_ops = internal constant %struct.fs_context_operations { ptr @ext4_fc_free, ptr null, ptr @ext4_parse_param, ptr null, ptr @ext4_get_tree, ptr @ext4_reconfigure }, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@.str.478 = private unnamed_addr constant [24 x i8] c"%s option not supported\00", align 1
@.str.479 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@deprecated_msg = internal constant [108 x i8] c"Mount option \22%s\22 will be removed by %s\0AContact linux-ext4@vger.kernel.org if you think we should keep it.\0A\00", align 1
@.str.480 = private unnamed_addr constant [4 x i8] c"3.5\00", align 1
@.str.481 = private unnamed_addr constant [30 x i8] c"Ignoring %s option on remount\00", align 1
@.str.482 = private unnamed_addr constant [27 x i8] c"Ignoring removed %s option\00", align 1
@.str.483 = private unnamed_addr constant [5 x i8] c"5.20\00", align 1
@.str.484 = private unnamed_addr constant [22 x i8] c"Use iversion instead\0A\00", align 1
@.str.485 = private unnamed_addr constant [32 x i8] c"inline encryption not supported\00", align 1
@.str.486 = private unnamed_addr constant [52 x i8] c"Invalid commit interval %d, must be smaller than %d\00", align 1
@.str.487 = private unnamed_addr constant [28 x i8] c"Invalid want_extra_isize %d\00", align 1
@.str.488 = private unnamed_addr constant [74 x i8] c"EXT4-fs: inode_readahead_blks must be 0 or a power of 2 smaller than 2^31\00", align 1
@.str.489 = private unnamed_addr constant [21 x i8] c"Invalid uid value %d\00", align 1
@.str.490 = private unnamed_addr constant [21 x i8] c"Invalid gid value %d\00", align 1
@.str.491 = private unnamed_addr constant [34 x i8] c"Cannot specify journal on remount\00", align 1
@.str.492 = private unnamed_addr constant [42 x i8] c"error: could not find journal device path\00", align 1
@.str.493 = private unnamed_addr constant [42 x i8] c"Invalid journal IO priority (must be 0-7)\00", align 1
@.str.494 = private unnamed_addr constant [43 x i8] c"Test dummy encryption mount option ignored\00", align 1
@.str.495 = private unnamed_addr constant [25 x i8] c"dax option not supported\00", align 1
@.str.496 = private unnamed_addr constant [42 x i8] c"mb_optimize_scan should be set to 0 or 1.\00", align 1
@.str.497 = private unnamed_addr constant [28 x i8] c"buggy handling of option %s\00", align 1
@.str.498 = private unnamed_addr constant [22 x i8] c" journalled data mode\00", align 1
@.str.499 = private unnamed_addr constant [19 x i8] c" ordered data mode\00", align 1
@.str.500 = private unnamed_addr constant [21 x i8] c" writeback data mode\00", align 1
@.str.501 = private unnamed_addr constant [12 x i8] c"out journal\00", align 1
@ext4_mount_msg_ratelimit = internal global %struct.ratelimit_state zeroinitializer, align 4
@.str.502 = private unnamed_addr constant [14 x i8] c"EXT4-fs mount\00", align 1
@.str.503 = private unnamed_addr constant [43 x i8] c"mounted filesystem with%s. Quota mode: %s.\00", align 1
@.str.504 = private unnamed_addr constant [24 x i8] c"unable to set blocksize\00", align 1
@.str.505 = private unnamed_addr constant [26 x i8] c"unable to read superblock\00", align 1
@__func__.__ext4_fill_super = private unnamed_addr constant [18 x i8] c"__ext4_fill_super\00", align 1
@.str.506 = private unnamed_addr constant [66 x i8] c"metadata_csum and uninit_bg are redundant flags; please run fsck.\00", align 1
@.str.507 = private unnamed_addr constant [60 x i8] c"VFS: Found ext4 filesystem with unknown checksum algorithm.\00", align 1
@.str.508 = private unnamed_addr constant [7 x i8] c"crc32c\00", align 1
@.str.509 = private unnamed_addr constant [27 x i8] c"Cannot load crc32c driver.\00", align 1
@.str.510 = private unnamed_addr constant [74 x i8] c"VFS: Found ext4 filesystem with invalid superblock checksum.  Run e2fsck?\00", align 1
@ext3_fs_type = internal global %struct.file_system_type { ptr @.str.587, i32 1, ptr @ext4_init_fs_context, ptr @ext4_param_specs, ptr null, ptr @kill_block_super, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, align 4
@.str.511 = private unnamed_addr constant [27 x i8] c"Invalid log block size: %u\00", align 1
@.str.512 = private unnamed_addr constant [29 x i8] c"Invalid log cluster size: %u\00", align 1
@.str.513 = private unnamed_addr constant [22 x i8] c"invalid first ino: %u\00", align 1
@.str.514 = private unnamed_addr constant [27 x i8] c"unsupported inode size: %d\00", align 1
@.str.515 = private unnamed_addr constant [14 x i8] c"blocksize: %d\00", align 1
@.str.516 = private unnamed_addr constant [27 x i8] c"bad s_want_extra_isize: %d\00", align 1
@.str.517 = private unnamed_addr constant [26 x i8] c"bad s_min_extra_isize: %d\00", align 1
@__ext4_fill_super.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.518 = private unnamed_addr constant [127 x i8] c"\014EXT4-fs: Warning: mounting with data=journal disables delayed allocation, dioread_nolock, O_DIRECT and fast_commit support!\0A\00", align 1
@.str.519 = private unnamed_addr constant [48 x i8] c"can't mount with both data=journal and delalloc\00", align 1
@.str.521 = private unnamed_addr constant [70 x i8] c"encrypted files will use data=ordered instead of data journaling mode\00", align 1
@.str.522 = private unnamed_addr constant [61 x i8] c"feature flags set on rev 0 fs, running e2fsck is recommended\00", align 1
@.str.523 = private unnamed_addr constant [43 x i8] c"The Hurd can't support 64-bit file systems\00", align 1
@.str.524 = private unnamed_addr constant [43 x i8] c"ea_inode feature is not supported for Hurd\00", align 1
@.str.525 = private unnamed_addr constant [51 x i8] c"mounting ext2 file system using the ext4 subsystem\00", align 1
@.str.526 = private unnamed_addr constant [56 x i8] c"couldn't mount as ext2 due to feature incompatibilities\00", align 1
@.str.527 = private unnamed_addr constant [51 x i8] c"mounting ext3 file system using the ext4 subsystem\00", align 1
@.str.528 = private unnamed_addr constant [56 x i8] c"couldn't mount as ext3 due to feature incompatibilities\00", align 1
@.str.529 = private unnamed_addr constant [49 x i8] c"Number of reserved GDT blocks insanely large: %d\00", align 1
@.str.530 = private unnamed_addr constant [31 x i8] c"unsupported blocksize for DAX\0A\00", align 1
@.str.533 = private unnamed_addr constant [32 x i8] c"Unsupported encryption level %d\00", align 1
@.str.534 = private unnamed_addr constant [18 x i8] c"bad block size %d\00", align 1
@.str.535 = private unnamed_addr constant [33 x i8] c"Can't read superblock on 2nd try\00", align 1
@.str.536 = private unnamed_addr constant [28 x i8] c"Magic mismatch, very weird!\00", align 1
@.str.537 = private unnamed_addr constant [32 x i8] c"unsupported descriptor size %lu\00", align 1
@.str.538 = private unnamed_addr constant [31 x i8] c"invalid inodes per group: %lu\0A\00", align 1
@.str.539 = private unnamed_addr constant [47 x i8] c"cluster size (%d) smaller than block size (%d)\00", align 1
@.str.540 = private unnamed_addr constant [33 x i8] c"#clusters per group too big: %lu\00", align 1
@.str.541 = private unnamed_addr constant [65 x i8] c"blocks per group (%lu) and clusters per group (%lu) inconsistent\00", align 1
@.str.542 = private unnamed_addr constant [46 x i8] c"fragment/cluster size (%d) != block size (%d)\00", align 1
@.str.543 = private unnamed_addr constant [31 x i8] c"#blocks per group too big: %lu\00", align 1
@.str.544 = private unnamed_addr constant [52 x i8] c"filesystem too large to mount safely on this system\00", align 1
@.str.545 = private unnamed_addr constant [68 x i8] c"bad geometry: block count %llu exceeds size of device (%llu blocks)\00", align 1
@.str.546 = private unnamed_addr constant [69 x i8] c"bad geometry: first data block %u is beyond end of filesystem (%llu)\00", align 1
@.str.547 = private unnamed_addr constant [69 x i8] c"bad geometry: first data block is 0 with a 1k block and cluster size\00", align 1
@.str.548 = private unnamed_addr constant [91 x i8] c"groups count too large: %llu (block count %llu, first data block %u, blocks per group %lu)\00", align 1
@.str.549 = private unnamed_addr constant [35 x i8] c"inodes count not valid: %u vs %llu\00", align 1
@.str.550 = private unnamed_addr constant [71 x i8] c"first meta block group too large: %u (group descriptor block count %u)\00", align 1
@.str.551 = private unnamed_addr constant [18 x i8] c"not enough memory\00", align 1
@.str.552 = private unnamed_addr constant [31 x i8] c"can't read group descriptor %d\00", align 1
@.str.553 = private unnamed_addr constant [29 x i8] c"group descriptors corrupted!\00", align 1
@ext4_sops = internal constant %struct.super_operations { ptr @ext4_alloc_inode, ptr @ext4_destroy_inode, ptr @ext4_free_in_core_inode, ptr @ext4_dirty_inode, ptr @ext4_write_inode, ptr @ext4_drop_inode, ptr @ext4_evict_inode, ptr @ext4_put_super, ptr @ext4_sync_fs, ptr null, ptr @ext4_freeze, ptr null, ptr @ext4_unfreeze, ptr @ext4_statfs, ptr null, ptr null, ptr @ext4_show_options, ptr null, ptr null, ptr null, ptr null, ptr null }, align 4
@ext4_export_ops = internal constant %struct.export_operations { ptr null, ptr @ext4_fh_to_dentry, ptr @ext4_fh_to_parent, ptr null, ptr @ext4_get_parent, ptr @ext4_nfs_commit_metadata, ptr null, ptr null, ptr null, ptr null, i32 0 }, align 4
@ext4_xattr_handlers = external dso_local global [0 x ptr], align 4
@__ext4_fill_super.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.554 = private unnamed_addr constant [20 x i8] c"&sbi->s_orphan_lock\00", align 1
@.str.555 = private unnamed_addr constant [63 x i8] c"required journal recovery suppressed and not mounted read-only\00", align 1
@.str.556 = private unnamed_addr constant [58 x i8] c"can't mount with journal_checksum, fs mounted w/o journal\00", align 1
@.str.557 = private unnamed_addr constant [62 x i8] c"can't mount with journal_async_commit, fs mounted w/o journal\00", align 1
@.str.558 = private unnamed_addr constant [52 x i8] c"can't mount with commit=%lu, fs mounted w/o journal\00", align 1
@.str.559 = private unnamed_addr constant [47 x i8] c"can't mount with data=, fs mounted w/o journal\00", align 1
@.str.560 = private unnamed_addr constant [37 x i8] c"Failed to set 64-bit journal feature\00", align 1
@.str.561 = private unnamed_addr constant [43 x i8] c"Failed to set journal checksum feature set\00", align 1
@.str.562 = private unnamed_addr constant [42 x i8] c"Failed to set fast commit journal feature\00", align 1
@.str.563 = private unnamed_addr constant [56 x i8] c"Journal does not support requested data journaling mode\00", align 1
@.str.564 = private unnamed_addr constant [59 x i8] c"can't mount with journal_async_commit in data=ordered mode\00", align 1
@.str.565 = private unnamed_addr constant [32 x i8] c"Failed to create ea_block_cache\00", align 1
@.str.566 = private unnamed_addr constant [32 x i8] c"Failed to create ea_inode_cache\00", align 1
@.str.567 = private unnamed_addr constant [36 x i8] c"Unsupported blocksize for fs-verity\00", align 1
@.str.568 = private unnamed_addr constant [20 x i8] c"ext4-rsv-conversion\00", align 1
@.str.569 = private unnamed_addr constant [39 x i8] c"\013EXT4-fs: failed to create workqueue\0A\00", align 1
@.str.570 = private unnamed_addr constant [22 x i8] c"get root inode failed\00", align 1
@.str.571 = private unnamed_addr constant [31 x i8] c"corrupt root inode, run e2fsck\00", align 1
@.str.572 = private unnamed_addr constant [23 x i8] c"get root dentry failed\00", align 1
@.str.573 = private unnamed_addr constant [38 x i8] c"failed to initialize system zone (%d)\00", align 1
@.str.574 = private unnamed_addr constant [34 x i8] c"failed to initialize mballoc (%d)\00", align 1
@__ext4_fill_super.__key.575 = internal global %struct.lock_class_key zeroinitializer, align 1
@__ext4_fill_super.__key.576 = internal global %struct.lock_class_key zeroinitializer, align 1
@__ext4_fill_super.__key.577 = internal global %struct.lock_class_key zeroinitializer, align 1
@__ext4_fill_super.__key.578 = internal global %struct.lock_class_key zeroinitializer, align 1
@__ext4_fill_super.__key.579 = internal global %struct.lock_class_key zeroinitializer, align 1
@__ext4_fill_super.rwsem_key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.580 = private unnamed_addr constant [25 x i8] c"&sbi->s_writepages_rwsem\00", align 1
@.str.581 = private unnamed_addr constant [20 x i8] c"insufficient memory\00", align 1
@.str.582 = private unnamed_addr constant [40 x i8] c"unable to initialize flex_bg meta info!\00", align 1
@.str.583 = private unnamed_addr constant [18 x i8] c"recovery complete\00", align 1
@.str.584 = private unnamed_addr constant [72 x i8] c"mounting with \22discard\22 option, but the device does not support discard\00", align 1
@.str.585 = private unnamed_addr constant [32 x i8] c"VFS: Can't find ext4 filesystem\00", align 1
@.str.586 = private unnamed_addr constant [13 x i8] c"mount failed\00", align 1
@.str.587 = private unnamed_addr constant [5 x i8] c"ext3\00", align 1
@.str.588 = private unnamed_addr constant [42 x i8] c"failed to parse options in superblock: %s\00", align 1
@.str.589 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.590 = private unnamed_addr constant [39 x i8] c"Mount option(s) incompatible with ext2\00", align 1
@.str.591 = private unnamed_addr constant [39 x i8] c"Mount option(s) incompatible with ext3\00", align 1
@.str.592 = private unnamed_addr constant [95 x i8] c"Warning: mounting with an experimental mount option 'dioread_nolock' for blocksize < PAGE_SIZE\00", align 1
@.str.593 = private unnamed_addr constant [74 x i8] c"Remounting file system with no journal so ignoring journalled data option\00", align 1
@.str.594 = private unnamed_addr constant [35 x i8] c"Cannot change data mode on remount\00", align 1
@.str.595 = private unnamed_addr constant [47 x i8] c"can't change dax mount option while remounting\00", align 1
@.str.596 = private unnamed_addr constant [70 x i8] c"ext4_check_descriptors: Block bitmap for group %u overlaps superblock\00", align 1
@.str.597 = private unnamed_addr constant [83 x i8] c"ext4_check_descriptors: Block bitmap for group %u overlaps block group descriptors\00", align 1
@.str.598 = private unnamed_addr constant [77 x i8] c"ext4_check_descriptors: Block bitmap for group %u not in group (block %llu)!\00", align 1
@.str.599 = private unnamed_addr constant [70 x i8] c"ext4_check_descriptors: Inode bitmap for group %u overlaps superblock\00", align 1
@.str.600 = private unnamed_addr constant [83 x i8] c"ext4_check_descriptors: Inode bitmap for group %u overlaps block group descriptors\00", align 1
@.str.601 = private unnamed_addr constant [77 x i8] c"ext4_check_descriptors: Inode bitmap for group %u not in group (block %llu)!\00", align 1
@.str.602 = private unnamed_addr constant [69 x i8] c"ext4_check_descriptors: Inode table for group %u overlaps superblock\00", align 1
@.str.603 = private unnamed_addr constant [82 x i8] c"ext4_check_descriptors: Inode table for group %u overlaps block group descriptors\00", align 1
@.str.604 = private unnamed_addr constant [76 x i8] c"ext4_check_descriptors: Inode table for group %u not in group (block %llu)!\00", align 1
@.str.605 = private unnamed_addr constant [62 x i8] c"ext4_check_descriptors: Checksum for group %u failed (%u!=%u)\00", align 1
@.str.606 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.607 = private unnamed_addr constant [32 x i8] c"error count since last fsck: %u\00", align 1
@.str.608 = private unnamed_addr constant [52 x i8] c"\015EXT4-fs (%s): initial error at time %llu: %.*s:%d\00", align 1
@.str.609 = private unnamed_addr constant [13 x i8] c"\01c: inode %u\00", align 1
@.str.610 = private unnamed_addr constant [15 x i8] c"\01c: block %llu\00", align 1
@.str.611 = private unnamed_addr constant [4 x i8] c"\01c\0A\00", align 1
@.str.612 = private unnamed_addr constant [49 x i8] c"\015EXT4-fs (%s): last error at time %llu: %.*s:%d\00", align 1
@ext4_inode_cachep = internal unnamed_addr global ptr null, align 4
@ext4_alloc_inode.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.613 = private unnamed_addr constant [15 x i8] c"&ei->i_fc_lock\00", align 1
@.str.614 = private unnamed_addr constant [42 x i8] c"Inode %lu (%p): orphan list check failed!\00", align 1
@.str.615 = private unnamed_addr constant [57 x i8] c"Inode %lu (%p): i_reserved_data_blocks (%u) not cleared!\00", align 1
@.str.616 = private unnamed_addr constant [33 x i8] c"\014%s: inode %ld still in fc list\00", align 1
@__func__.ext4_free_in_core_inode = private unnamed_addr constant [24 x i8] c"ext4_free_in_core_inode\00", align 1
@__func__.ext4_put_super = private unnamed_addr constant [15 x i8] c"ext4_put_super\00", align 1
@.str.617 = private unnamed_addr constant [30 x i8] c"Couldn't clean up the journal\00", align 1
@.str.618 = private unnamed_addr constant [44 x i8] c"\010Assertion failure in %s() at %s:%d: '%s'\0A\00", align 1
@.str.619 = private unnamed_addr constant [27 x i8] c"list_empty(&sbi->s_orphan)\00", align 1
@.str.620 = private unnamed_addr constant [21 x i8] c"sb orphan head is %d\00", align 1
@.str.621 = private unnamed_addr constant [24 x i8] c"\013sb_info orphan list:\0A\00", align 1
@.str.622 = private unnamed_addr constant [52 x i8] c"\013  inode %s:%lu at %p: mode %o, nlink %d, next %d\0A\00", align 1
@__func__.ext4_nfs_get_inode = private unnamed_addr constant [19 x i8] c"ext4_nfs_get_inode\00", align 1
@__const.ext4_nfs_commit_metadata.wbc = private unnamed_addr constant { i32, i32, i64, i64, i32, i8, i8, [2 x i8] } { i32 0, i32 0, i64 0, i64 0, i32 1, i8 0, i8 0, [2 x i8] zeroinitializer }, align 8
@ext4_load_journal.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.623 = private unnamed_addr constant [57 x i8] c"external journal device major/minor numbers have changed\00", align 1
@.str.624 = private unnamed_addr constant [54 x i8] c"filesystem has both journal inode and journal device!\00", align 1
@.str.625 = private unnamed_addr constant [52 x i8] c"journal device read-only, try mounting with '-o ro'\00", align 1
@.str.626 = private unnamed_addr constant [47 x i8] c"INFO: recovery required on readonly filesystem\00", align 1
@.str.627 = private unnamed_addr constant [68 x i8] c"write access unavailable, cannot proceed (try mounting with noload)\00", align 1
@.str.628 = private unnamed_addr constant [45 x i8] c"write access will be enabled during recovery\00", align 1
@.str.629 = private unnamed_addr constant [18 x i8] c"barriers disabled\00", align 1
@.str.630 = private unnamed_addr constant [22 x i8] c"error loading journal\00", align 1
@ext4_get_journal.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.631 = private unnamed_addr constant [29 x i8] c"Could not load journal inode\00", align 1
@ext4_get_dev_journal.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.632 = private unnamed_addr constant [39 x i8] c"blocksize too small for journal device\00", align 1
@.str.633 = private unnamed_addr constant [45 x i8] c"couldn't read superblock of external journal\00", align 1
@.str.634 = private unnamed_addr constant [36 x i8] c"external journal has bad superblock\00", align 1
@.str.635 = private unnamed_addr constant [40 x i8] c"external journal has corrupt superblock\00", align 1
@.str.636 = private unnamed_addr constant [28 x i8] c"journal UUID does not match\00", align 1
@.str.637 = private unnamed_addr constant [32 x i8] c"failed to create device journal\00", align 1
@.str.638 = private unnamed_addr constant [28 x i8] c"I/O error on journal device\00", align 1
@.str.639 = private unnamed_addr constant [59 x i8] c"External journal has more than one user (unsupported) - %d\00", align 1
@.str.640 = private unnamed_addr constant [55 x i8] c"failed to open journal device unknown-block(%u,%u) %ld\00", align 1
@__func__.ext4_clear_journal_err = private unnamed_addr constant [23 x i8] c"ext4_clear_journal_err\00", align 1
@.str.641 = private unnamed_addr constant [46 x i8] c"Journal got removed while the fs was mounted!\00", align 1
@.str.642 = private unnamed_addr constant [50 x i8] c"Filesystem error recorded from previous mount: %s\00", align 1
@.str.643 = private unnamed_addr constant [40 x i8] c"Marking fs in need of filesystem check.\00", align 1
@.str.644 = private unnamed_addr constant [48 x i8] c"revision level too high, forcing read-only mode\00", align 1
@.str.645 = private unnamed_addr constant [62 x i8] c"warning: mounting unchecked fs, running e2fsck is recommended\00", align 1
@.str.646 = private unnamed_addr constant [64 x i8] c"warning: mounting fs with errors, running e2fsck is recommended\00", align 1
@.str.647 = private unnamed_addr constant [68 x i8] c"warning: maximal mount count reached, running e2fsck is recommended\00", align 1
@.str.648 = private unnamed_addr constant [58 x i8] c"warning: checktime reached, running e2fsck is recommended\00", align 1
@.str.649 = private unnamed_addr constant [64 x i8] c"\016[EXT4 FS bs=%lu, gc=%u, bpg=%lu, ipg=%lu, mo=%04x, mo2=%04x]\0A\00", align 1
@__func__.ext4_mark_recovery_complete = private unnamed_addr constant [28 x i8] c"ext4_mark_recovery_complete\00", align 1
@.str.650 = private unnamed_addr constant [39 x i8] c"Orphan file not empty on read-only fs.\00", align 1
@.str.651 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.652 = private unnamed_addr constant [28 x i8] c"re-mounted. Quota mode: %s.\00", align 1
@.str.653 = private unnamed_addr constant [65 x i8] c"changing journal_checksum during remount not supported; ignoring\00", align 1
@.str.654 = private unnamed_addr constant [54 x i8] c"can't mount with both data=journal and dioread_nolock\00", align 1
@.str.655 = private unnamed_addr constant [38 x i8] c"can't enable nombcache during remount\00", align 1
@__func__.__ext4_remount = private unnamed_addr constant [15 x i8] c"__ext4_remount\00", align 1
@.str.656 = private unnamed_addr constant [21 x i8] c"Abort forced by user\00", align 1
@.str.657 = private unnamed_addr constant [52 x i8] c"ext4_remount: Checksum for group %u failed (%u!=%u)\00", align 1
@.str.658 = private unnamed_addr constant [95 x i8] c"Couldn't remount RDWR because of unprocessed orphan inode list.  Please umount/remount instead\00", align 1
@ext4_li_info_new.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.659 = private unnamed_addr constant [18 x i8] c"&eli->li_list_mtx\00", align 1
@.str.660 = private unnamed_addr constant [13 x i8] c"ext4lazyinit\00", align 1
@ext4_lazyinit_task = internal unnamed_addr global ptr null, align 4
@.str.661 = private unnamed_addr constant [64 x i8] c"\012EXT4-fs: error %d creating inode table initialization thread\0A\00", align 1
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@__func__.count_overhead = private unnamed_addr constant [15 x i8] c"count_overhead\00", align 1
@.str.662 = private unnamed_addr constant [52 x i8] c"Invalid number of block group descriptor blocks: %d\00", align 1
@__func__.ext4_get_journal_inode = private unnamed_addr constant [23 x i8] c"ext4_get_journal_inode\00", align 1
@.str.663 = private unnamed_addr constant [17 x i8] c"no journal found\00", align 1
@.str.664 = private unnamed_addr constant [25 x i8] c"journal inode is deleted\00", align 1
@.str.665 = private unnamed_addr constant [22 x i8] c"invalid journal inode\00", align 1
@.str.666 = private constant [5 x i8] c"ext4\00", align 1
@ext4_init_fs.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.667 = private unnamed_addr constant [19 x i8] c"&ext4__ioend_wq[i]\00", align 1
@.str.668 = private unnamed_addr constant [17 x i8] c"ext4_inode_cache\00", align 1
@init_once.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.669 = private unnamed_addr constant [15 x i8] c"&ei->xattr_sem\00", align 1
@init_once.__key.670 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.671 = private unnamed_addr constant [16 x i8] c"&ei->i_data_sem\00", align 1
@.str.672 = private unnamed_addr constant [44 x i8] c"\014EXT4-fs: Unable to register as ext3 (%d)\0A\00", align 1
@.str.673 = private unnamed_addr constant [44 x i8] c"\014EXT4-fs: Unable to register as ext2 (%d)\0A\00", align 1
@llvm.compiler.used = appending global [569 x ptr] [ptr @TRACE_SYSTEM_BH_Boundary, ptr @TRACE_SYSTEM_BH_Mapped, ptr @TRACE_SYSTEM_BH_New, ptr @TRACE_SYSTEM_BH_Unwritten, ptr @TRACE_SYSTEM_ES_DELAYED_B, ptr @TRACE_SYSTEM_ES_HOLE_B, ptr @TRACE_SYSTEM_ES_REFERENCED_B, ptr @TRACE_SYSTEM_ES_UNWRITTEN_B, ptr @TRACE_SYSTEM_ES_WRITTEN_B, ptr @__TRACE_SYSTEM_BH_Boundary, ptr @__TRACE_SYSTEM_BH_Mapped, ptr @__TRACE_SYSTEM_BH_New, ptr @__TRACE_SYSTEM_BH_Unwritten, ptr @__TRACE_SYSTEM_ES_DELAYED_B, ptr @__TRACE_SYSTEM_ES_HOLE_B, ptr @__TRACE_SYSTEM_ES_REFERENCED_B, ptr @__TRACE_SYSTEM_ES_UNWRITTEN_B, ptr @__TRACE_SYSTEM_ES_WRITTEN_B, ptr @__UNIQUE_ID_alias875, ptr @__UNIQUE_ID_alias876, ptr @__UNIQUE_ID_alias877, ptr @__UNIQUE_ID_alias878, ptr @__UNIQUE_ID_alias910, ptr @__UNIQUE_ID_author911, ptr @__UNIQUE_ID_description912, ptr @__UNIQUE_ID_file913, ptr @__UNIQUE_ID_license914, ptr @__UNIQUE_ID_softdep915, ptr @__event_ext4_alloc_da_blocks, ptr @__event_ext4_allocate_blocks, ptr @__event_ext4_allocate_inode, ptr @__event_ext4_begin_ordered_truncate, ptr @__event_ext4_collapse_range, ptr @__event_ext4_da_release_space, ptr @__event_ext4_da_reserve_space, ptr @__event_ext4_da_update_reserve_space, ptr @__event_ext4_da_write_begin, ptr @__event_ext4_da_write_end, ptr @__event_ext4_da_write_pages, ptr @__event_ext4_da_write_pages_extent, ptr @__event_ext4_discard_blocks, ptr @__event_ext4_discard_preallocations, ptr @__event_ext4_drop_inode, ptr @__event_ext4_error, ptr @__event_ext4_es_cache_extent, ptr @__event_ext4_es_find_extent_range_enter, ptr @__event_ext4_es_find_extent_range_exit, ptr @__event_ext4_es_insert_delayed_block, ptr @__event_ext4_es_insert_extent, ptr @__event_ext4_es_lookup_extent_enter, ptr @__event_ext4_es_lookup_extent_exit, ptr @__event_ext4_es_remove_extent, ptr @__event_ext4_es_shrink, ptr @__event_ext4_es_shrink_count, ptr @__event_ext4_es_shrink_scan_enter, ptr @__event_ext4_es_shrink_scan_exit, ptr @__event_ext4_evict_inode, ptr @__event_ext4_ext_convert_to_initialized_enter, ptr @__event_ext4_ext_convert_to_initialized_fastpath, ptr @__event_ext4_ext_handle_unwritten_extents, ptr @__event_ext4_ext_load_extent, ptr @__event_ext4_ext_map_blocks_enter, ptr @__event_ext4_ext_map_blocks_exit, ptr @__event_ext4_ext_remove_space, ptr @__event_ext4_ext_remove_space_done, ptr @__event_ext4_ext_rm_idx, ptr @__event_ext4_ext_rm_leaf, ptr @__event_ext4_ext_show_extent, ptr @__event_ext4_fallocate_enter, ptr @__event_ext4_fallocate_exit, ptr @__event_ext4_fc_commit_start, ptr @__event_ext4_fc_commit_stop, ptr @__event_ext4_fc_replay, ptr @__event_ext4_fc_replay_scan, ptr @__event_ext4_fc_stats, ptr @__event_ext4_fc_track_create, ptr @__event_ext4_fc_track_inode, ptr @__event_ext4_fc_track_link, ptr @__event_ext4_fc_track_range, ptr @__event_ext4_fc_track_unlink, ptr @__event_ext4_forget, ptr @__event_ext4_free_blocks, ptr @__event_ext4_free_inode, ptr @__event_ext4_fsmap_high_key, ptr @__event_ext4_fsmap_low_key, ptr @__event_ext4_fsmap_mapping, ptr @__event_ext4_get_implied_cluster_alloc_exit, ptr @__event_ext4_getfsmap_high_key, ptr @__event_ext4_getfsmap_low_key, ptr @__event_ext4_getfsmap_mapping, ptr @__event_ext4_ind_map_blocks_enter, ptr @__event_ext4_ind_map_blocks_exit, ptr @__event_ext4_insert_range, ptr @__event_ext4_invalidatepage, ptr @__event_ext4_journal_start, ptr @__event_ext4_journal_start_reserved, ptr @__event_ext4_journalled_invalidatepage, ptr @__event_ext4_journalled_write_end, ptr @__event_ext4_lazy_itable_init, ptr @__event_ext4_load_inode, ptr @__event_ext4_load_inode_bitmap, ptr @__event_ext4_mark_inode_dirty, ptr @__event_ext4_mb_bitmap_load, ptr @__event_ext4_mb_buddy_bitmap_load, ptr @__event_ext4_mb_discard_preallocations, ptr @__event_ext4_mb_new_group_pa, ptr @__event_ext4_mb_new_inode_pa, ptr @__event_ext4_mb_release_group_pa, ptr @__event_ext4_mb_release_inode_pa, ptr @__event_ext4_mballoc_alloc, ptr @__event_ext4_mballoc_discard, ptr @__event_ext4_mballoc_free, ptr @__event_ext4_mballoc_prealloc, ptr @__event_ext4_nfs_commit_metadata, ptr @__event_ext4_other_inode_update_time, ptr @__event_ext4_prefetch_bitmaps, ptr @__event_ext4_punch_hole, ptr @__event_ext4_read_block_bitmap_load, ptr @__event_ext4_readpage, ptr @__event_ext4_releasepage, ptr @__event_ext4_remove_blocks, ptr @__event_ext4_request_blocks, ptr @__event_ext4_request_inode, ptr @__event_ext4_shutdown, ptr @__event_ext4_sync_file_enter, ptr @__event_ext4_sync_file_exit, ptr @__event_ext4_sync_fs, ptr @__event_ext4_trim_all_free, ptr @__event_ext4_trim_extent, ptr @__event_ext4_truncate_enter, ptr @__event_ext4_truncate_exit, ptr @__event_ext4_unlink_enter, ptr @__event_ext4_unlink_exit, ptr @__event_ext4_update_sb, ptr @__event_ext4_write_begin, ptr @__event_ext4_write_end, ptr @__event_ext4_writepage, ptr @__event_ext4_writepages, ptr @__event_ext4_writepages_result, ptr @__event_ext4_zero_range, ptr @__exitcall_ext4_exit_fs, ptr @__initcall__kmod_ext4__916_7178_ext4_init_fs6, ptr @__tracepoint_ext4_alloc_da_blocks, ptr @__tracepoint_ext4_allocate_blocks, ptr @__tracepoint_ext4_allocate_inode, ptr @__tracepoint_ext4_begin_ordered_truncate, ptr @__tracepoint_ext4_collapse_range, ptr @__tracepoint_ext4_da_release_space, ptr @__tracepoint_ext4_da_reserve_space, ptr @__tracepoint_ext4_da_update_reserve_space, ptr @__tracepoint_ext4_da_write_begin, ptr @__tracepoint_ext4_da_write_end, ptr @__tracepoint_ext4_da_write_pages, ptr @__tracepoint_ext4_da_write_pages_extent, ptr @__tracepoint_ext4_discard_blocks, ptr @__tracepoint_ext4_discard_preallocations, ptr @__tracepoint_ext4_drop_inode, ptr @__tracepoint_ext4_error, ptr @__tracepoint_ext4_es_cache_extent, ptr @__tracepoint_ext4_es_find_extent_range_enter, ptr @__tracepoint_ext4_es_find_extent_range_exit, ptr @__tracepoint_ext4_es_insert_delayed_block, ptr @__tracepoint_ext4_es_insert_extent, ptr @__tracepoint_ext4_es_lookup_extent_enter, ptr @__tracepoint_ext4_es_lookup_extent_exit, ptr @__tracepoint_ext4_es_remove_extent, ptr @__tracepoint_ext4_es_shrink, ptr @__tracepoint_ext4_es_shrink_count, ptr @__tracepoint_ext4_es_shrink_scan_enter, ptr @__tracepoint_ext4_es_shrink_scan_exit, ptr @__tracepoint_ext4_evict_inode, ptr @__tracepoint_ext4_ext_convert_to_initialized_enter, ptr @__tracepoint_ext4_ext_convert_to_initialized_fastpath, ptr @__tracepoint_ext4_ext_handle_unwritten_extents, ptr @__tracepoint_ext4_ext_load_extent, ptr @__tracepoint_ext4_ext_map_blocks_enter, ptr @__tracepoint_ext4_ext_map_blocks_exit, ptr @__tracepoint_ext4_ext_remove_space, ptr @__tracepoint_ext4_ext_remove_space_done, ptr @__tracepoint_ext4_ext_rm_idx, ptr @__tracepoint_ext4_ext_rm_leaf, ptr @__tracepoint_ext4_ext_show_extent, ptr @__tracepoint_ext4_fallocate_enter, ptr @__tracepoint_ext4_fallocate_exit, ptr @__tracepoint_ext4_fc_commit_start, ptr @__tracepoint_ext4_fc_commit_stop, ptr @__tracepoint_ext4_fc_replay, ptr @__tracepoint_ext4_fc_replay_scan, ptr @__tracepoint_ext4_fc_stats, ptr @__tracepoint_ext4_fc_track_create, ptr @__tracepoint_ext4_fc_track_inode, ptr @__tracepoint_ext4_fc_track_link, ptr @__tracepoint_ext4_fc_track_range, ptr @__tracepoint_ext4_fc_track_unlink, ptr @__tracepoint_ext4_forget, ptr @__tracepoint_ext4_free_blocks, ptr @__tracepoint_ext4_free_inode, ptr @__tracepoint_ext4_fsmap_high_key, ptr @__tracepoint_ext4_fsmap_low_key, ptr @__tracepoint_ext4_fsmap_mapping, ptr @__tracepoint_ext4_get_implied_cluster_alloc_exit, ptr @__tracepoint_ext4_getfsmap_high_key, ptr @__tracepoint_ext4_getfsmap_low_key, ptr @__tracepoint_ext4_getfsmap_mapping, ptr @__tracepoint_ext4_ind_map_blocks_enter, ptr @__tracepoint_ext4_ind_map_blocks_exit, ptr @__tracepoint_ext4_insert_range, ptr @__tracepoint_ext4_invalidatepage, ptr @__tracepoint_ext4_journal_start, ptr @__tracepoint_ext4_journal_start_reserved, ptr @__tracepoint_ext4_journalled_invalidatepage, ptr @__tracepoint_ext4_journalled_write_end, ptr @__tracepoint_ext4_lazy_itable_init, ptr @__tracepoint_ext4_load_inode, ptr @__tracepoint_ext4_load_inode_bitmap, ptr @__tracepoint_ext4_mark_inode_dirty, ptr @__tracepoint_ext4_mb_bitmap_load, ptr @__tracepoint_ext4_mb_buddy_bitmap_load, ptr @__tracepoint_ext4_mb_discard_preallocations, ptr @__tracepoint_ext4_mb_new_group_pa, ptr @__tracepoint_ext4_mb_new_inode_pa, ptr @__tracepoint_ext4_mb_release_group_pa, ptr @__tracepoint_ext4_mb_release_inode_pa, ptr @__tracepoint_ext4_mballoc_alloc, ptr @__tracepoint_ext4_mballoc_discard, ptr @__tracepoint_ext4_mballoc_free, ptr @__tracepoint_ext4_mballoc_prealloc, ptr @__tracepoint_ext4_nfs_commit_metadata, ptr @__tracepoint_ext4_other_inode_update_time, ptr @__tracepoint_ext4_prefetch_bitmaps, ptr @__tracepoint_ext4_punch_hole, ptr @__tracepoint_ext4_read_block_bitmap_load, ptr @__tracepoint_ext4_readpage, ptr @__tracepoint_ext4_releasepage, ptr @__tracepoint_ext4_remove_blocks, ptr @__tracepoint_ext4_request_blocks, ptr @__tracepoint_ext4_request_inode, ptr @__tracepoint_ext4_shutdown, ptr @__tracepoint_ext4_sync_file_enter, ptr @__tracepoint_ext4_sync_file_exit, ptr @__tracepoint_ext4_sync_fs, ptr @__tracepoint_ext4_trim_all_free, ptr @__tracepoint_ext4_trim_extent, ptr @__tracepoint_ext4_truncate_enter, ptr @__tracepoint_ext4_truncate_exit, ptr @__tracepoint_ext4_unlink_enter, ptr @__tracepoint_ext4_unlink_exit, ptr @__tracepoint_ext4_update_sb, ptr @__tracepoint_ext4_write_begin, ptr @__tracepoint_ext4_write_end, ptr @__tracepoint_ext4_writepage, ptr @__tracepoint_ext4_writepages, ptr @__tracepoint_ext4_writepages_result, ptr @__tracepoint_ext4_zero_range, ptr @__tracepoint_ptr_ext4_alloc_da_blocks, ptr @__tracepoint_ptr_ext4_allocate_blocks, ptr @__tracepoint_ptr_ext4_allocate_inode, ptr @__tracepoint_ptr_ext4_begin_ordered_truncate, ptr @__tracepoint_ptr_ext4_collapse_range, ptr @__tracepoint_ptr_ext4_da_release_space, ptr @__tracepoint_ptr_ext4_da_reserve_space, ptr @__tracepoint_ptr_ext4_da_update_reserve_space, ptr @__tracepoint_ptr_ext4_da_write_begin, ptr @__tracepoint_ptr_ext4_da_write_end, ptr @__tracepoint_ptr_ext4_da_write_pages, ptr @__tracepoint_ptr_ext4_da_write_pages_extent, ptr @__tracepoint_ptr_ext4_discard_blocks, ptr @__tracepoint_ptr_ext4_discard_preallocations, ptr @__tracepoint_ptr_ext4_drop_inode, ptr @__tracepoint_ptr_ext4_error, ptr @__tracepoint_ptr_ext4_es_cache_extent, ptr @__tracepoint_ptr_ext4_es_find_extent_range_enter, ptr @__tracepoint_ptr_ext4_es_find_extent_range_exit, ptr @__tracepoint_ptr_ext4_es_insert_delayed_block, ptr @__tracepoint_ptr_ext4_es_insert_extent, ptr @__tracepoint_ptr_ext4_es_lookup_extent_enter, ptr @__tracepoint_ptr_ext4_es_lookup_extent_exit, ptr @__tracepoint_ptr_ext4_es_remove_extent, ptr @__tracepoint_ptr_ext4_es_shrink, ptr @__tracepoint_ptr_ext4_es_shrink_count, ptr @__tracepoint_ptr_ext4_es_shrink_scan_enter, ptr @__tracepoint_ptr_ext4_es_shrink_scan_exit, ptr @__tracepoint_ptr_ext4_evict_inode, ptr @__tracepoint_ptr_ext4_ext_convert_to_initialized_enter, ptr @__tracepoint_ptr_ext4_ext_convert_to_initialized_fastpath, ptr @__tracepoint_ptr_ext4_ext_handle_unwritten_extents, ptr @__tracepoint_ptr_ext4_ext_load_extent, ptr @__tracepoint_ptr_ext4_ext_map_blocks_enter, ptr @__tracepoint_ptr_ext4_ext_map_blocks_exit, ptr @__tracepoint_ptr_ext4_ext_remove_space, ptr @__tracepoint_ptr_ext4_ext_remove_space_done, ptr @__tracepoint_ptr_ext4_ext_rm_idx, ptr @__tracepoint_ptr_ext4_ext_rm_leaf, ptr @__tracepoint_ptr_ext4_ext_show_extent, ptr @__tracepoint_ptr_ext4_fallocate_enter, ptr @__tracepoint_ptr_ext4_fallocate_exit, ptr @__tracepoint_ptr_ext4_fc_commit_start, ptr @__tracepoint_ptr_ext4_fc_commit_stop, ptr @__tracepoint_ptr_ext4_fc_replay, ptr @__tracepoint_ptr_ext4_fc_replay_scan, ptr @__tracepoint_ptr_ext4_fc_stats, ptr @__tracepoint_ptr_ext4_fc_track_create, ptr @__tracepoint_ptr_ext4_fc_track_inode, ptr @__tracepoint_ptr_ext4_fc_track_link, ptr @__tracepoint_ptr_ext4_fc_track_range, ptr @__tracepoint_ptr_ext4_fc_track_unlink, ptr @__tracepoint_ptr_ext4_forget, ptr @__tracepoint_ptr_ext4_free_blocks, ptr @__tracepoint_ptr_ext4_free_inode, ptr @__tracepoint_ptr_ext4_fsmap_high_key, ptr @__tracepoint_ptr_ext4_fsmap_low_key, ptr @__tracepoint_ptr_ext4_fsmap_mapping, ptr @__tracepoint_ptr_ext4_get_implied_cluster_alloc_exit, ptr @__tracepoint_ptr_ext4_getfsmap_high_key, ptr @__tracepoint_ptr_ext4_getfsmap_low_key, ptr @__tracepoint_ptr_ext4_getfsmap_mapping, ptr @__tracepoint_ptr_ext4_ind_map_blocks_enter, ptr @__tracepoint_ptr_ext4_ind_map_blocks_exit, ptr @__tracepoint_ptr_ext4_insert_range, ptr @__tracepoint_ptr_ext4_invalidatepage, ptr @__tracepoint_ptr_ext4_journal_start, ptr @__tracepoint_ptr_ext4_journal_start_reserved, ptr @__tracepoint_ptr_ext4_journalled_invalidatepage, ptr @__tracepoint_ptr_ext4_journalled_write_end, ptr @__tracepoint_ptr_ext4_lazy_itable_init, ptr @__tracepoint_ptr_ext4_load_inode, ptr @__tracepoint_ptr_ext4_load_inode_bitmap, ptr @__tracepoint_ptr_ext4_mark_inode_dirty, ptr @__tracepoint_ptr_ext4_mb_bitmap_load, ptr @__tracepoint_ptr_ext4_mb_buddy_bitmap_load, ptr @__tracepoint_ptr_ext4_mb_discard_preallocations, ptr @__tracepoint_ptr_ext4_mb_new_group_pa, ptr @__tracepoint_ptr_ext4_mb_new_inode_pa, ptr @__tracepoint_ptr_ext4_mb_release_group_pa, ptr @__tracepoint_ptr_ext4_mb_release_inode_pa, ptr @__tracepoint_ptr_ext4_mballoc_alloc, ptr @__tracepoint_ptr_ext4_mballoc_discard, ptr @__tracepoint_ptr_ext4_mballoc_free, ptr @__tracepoint_ptr_ext4_mballoc_prealloc, ptr @__tracepoint_ptr_ext4_nfs_commit_metadata, ptr @__tracepoint_ptr_ext4_other_inode_update_time, ptr @__tracepoint_ptr_ext4_prefetch_bitmaps, ptr @__tracepoint_ptr_ext4_punch_hole, ptr @__tracepoint_ptr_ext4_read_block_bitmap_load, ptr @__tracepoint_ptr_ext4_readpage, ptr @__tracepoint_ptr_ext4_releasepage, ptr @__tracepoint_ptr_ext4_remove_blocks, ptr @__tracepoint_ptr_ext4_request_blocks, ptr @__tracepoint_ptr_ext4_request_inode, ptr @__tracepoint_ptr_ext4_shutdown, ptr @__tracepoint_ptr_ext4_sync_file_enter, ptr @__tracepoint_ptr_ext4_sync_file_exit, ptr @__tracepoint_ptr_ext4_sync_fs, ptr @__tracepoint_ptr_ext4_trim_all_free, ptr @__tracepoint_ptr_ext4_trim_extent, ptr @__tracepoint_ptr_ext4_truncate_enter, ptr @__tracepoint_ptr_ext4_truncate_exit, ptr @__tracepoint_ptr_ext4_unlink_enter, ptr @__tracepoint_ptr_ext4_unlink_exit, ptr @__tracepoint_ptr_ext4_update_sb, ptr @__tracepoint_ptr_ext4_write_begin, ptr @__tracepoint_ptr_ext4_write_end, ptr @__tracepoint_ptr_ext4_writepage, ptr @__tracepoint_ptr_ext4_writepages, ptr @__tracepoint_ptr_ext4_writepages_result, ptr @__tracepoint_ptr_ext4_zero_range, ptr @event_class_ext4__bitmap_load, ptr @event_class_ext4__es_extent, ptr @event_class_ext4__es_shrink_enter, ptr @event_class_ext4__fallocate_mode, ptr @event_class_ext4__map_blocks_enter, ptr @event_class_ext4__map_blocks_exit, ptr @event_class_ext4__mb_new_pa, ptr @event_class_ext4__mballoc, ptr @event_class_ext4__page_op, ptr @event_class_ext4__trim, ptr @event_class_ext4__truncate, ptr @event_class_ext4__write_begin, ptr @event_class_ext4__write_end, ptr @event_class_ext4_alloc_da_blocks, ptr @event_class_ext4_allocate_blocks, ptr @event_class_ext4_allocate_inode, ptr @event_class_ext4_begin_ordered_truncate, ptr @event_class_ext4_collapse_range, ptr @event_class_ext4_da_release_space, ptr @event_class_ext4_da_reserve_space, ptr @event_class_ext4_da_update_reserve_space, ptr @event_class_ext4_da_write_pages, ptr @event_class_ext4_da_write_pages_extent, ptr @event_class_ext4_discard_blocks, ptr @event_class_ext4_discard_preallocations, ptr @event_class_ext4_drop_inode, ptr @event_class_ext4_error, ptr @event_class_ext4_es_find_extent_range_enter, ptr @event_class_ext4_es_find_extent_range_exit, ptr @event_class_ext4_es_insert_delayed_block, ptr @event_class_ext4_es_lookup_extent_enter, ptr @event_class_ext4_es_lookup_extent_exit, ptr @event_class_ext4_es_remove_extent, ptr @event_class_ext4_es_shrink, ptr @event_class_ext4_es_shrink_scan_exit, ptr @event_class_ext4_evict_inode, ptr @event_class_ext4_ext_convert_to_initialized_enter, ptr @event_class_ext4_ext_convert_to_initialized_fastpath, ptr @event_class_ext4_ext_handle_unwritten_extents, ptr @event_class_ext4_ext_load_extent, ptr @event_class_ext4_ext_remove_space, ptr @event_class_ext4_ext_remove_space_done, ptr @event_class_ext4_ext_rm_idx, ptr @event_class_ext4_ext_rm_leaf, ptr @event_class_ext4_ext_show_extent, ptr @event_class_ext4_fallocate_exit, ptr @event_class_ext4_fc_commit_start, ptr @event_class_ext4_fc_commit_stop, ptr @event_class_ext4_fc_replay, ptr @event_class_ext4_fc_replay_scan, ptr @event_class_ext4_fc_stats, ptr @event_class_ext4_fc_track_create, ptr @event_class_ext4_fc_track_inode, ptr @event_class_ext4_fc_track_link, ptr @event_class_ext4_fc_track_range, ptr @event_class_ext4_fc_track_unlink, ptr @event_class_ext4_forget, ptr @event_class_ext4_free_blocks, ptr @event_class_ext4_free_inode, ptr @event_class_ext4_fsmap_class, ptr @event_class_ext4_get_implied_cluster_alloc_exit, ptr @event_class_ext4_getfsmap_class, ptr @event_class_ext4_insert_range, ptr @event_class_ext4_invalidatepage_op, ptr @event_class_ext4_journal_start, ptr @event_class_ext4_journal_start_reserved, ptr @event_class_ext4_lazy_itable_init, ptr @event_class_ext4_load_inode, ptr @event_class_ext4_mark_inode_dirty, ptr @event_class_ext4_mb_discard_preallocations, ptr @event_class_ext4_mb_release_group_pa, ptr @event_class_ext4_mb_release_inode_pa, ptr @event_class_ext4_mballoc_alloc, ptr @event_class_ext4_mballoc_prealloc, ptr @event_class_ext4_nfs_commit_metadata, ptr @event_class_ext4_other_inode_update_time, ptr @event_class_ext4_prefetch_bitmaps, ptr @event_class_ext4_read_block_bitmap_load, ptr @event_class_ext4_remove_blocks, ptr @event_class_ext4_request_blocks, ptr @event_class_ext4_request_inode, ptr @event_class_ext4_shutdown, ptr @event_class_ext4_sync_file_enter, ptr @event_class_ext4_sync_file_exit, ptr @event_class_ext4_sync_fs, ptr @event_class_ext4_unlink_enter, ptr @event_class_ext4_unlink_exit, ptr @event_class_ext4_update_sb, ptr @event_class_ext4_writepages, ptr @event_class_ext4_writepages_result, ptr @event_ext4_alloc_da_blocks, ptr @event_ext4_allocate_blocks, ptr @event_ext4_allocate_inode, ptr @event_ext4_begin_ordered_truncate, ptr @event_ext4_collapse_range, ptr @event_ext4_da_release_space, ptr @event_ext4_da_reserve_space, ptr @event_ext4_da_update_reserve_space, ptr @event_ext4_da_write_begin, ptr @event_ext4_da_write_end, ptr @event_ext4_da_write_pages, ptr @event_ext4_da_write_pages_extent, ptr @event_ext4_discard_blocks, ptr @event_ext4_discard_preallocations, ptr @event_ext4_drop_inode, ptr @event_ext4_error, ptr @event_ext4_es_cache_extent, ptr @event_ext4_es_find_extent_range_enter, ptr @event_ext4_es_find_extent_range_exit, ptr @event_ext4_es_insert_delayed_block, ptr @event_ext4_es_insert_extent, ptr @event_ext4_es_lookup_extent_enter, ptr @event_ext4_es_lookup_extent_exit, ptr @event_ext4_es_remove_extent, ptr @event_ext4_es_shrink, ptr @event_ext4_es_shrink_count, ptr @event_ext4_es_shrink_scan_enter, ptr @event_ext4_es_shrink_scan_exit, ptr @event_ext4_evict_inode, ptr @event_ext4_ext_convert_to_initialized_enter, ptr @event_ext4_ext_convert_to_initialized_fastpath, ptr @event_ext4_ext_handle_unwritten_extents, ptr @event_ext4_ext_load_extent, ptr @event_ext4_ext_map_blocks_enter, ptr @event_ext4_ext_map_blocks_exit, ptr @event_ext4_ext_remove_space, ptr @event_ext4_ext_remove_space_done, ptr @event_ext4_ext_rm_idx, ptr @event_ext4_ext_rm_leaf, ptr @event_ext4_ext_show_extent, ptr @event_ext4_fallocate_enter, ptr @event_ext4_fallocate_exit, ptr @event_ext4_fc_commit_start, ptr @event_ext4_fc_commit_stop, ptr @event_ext4_fc_replay, ptr @event_ext4_fc_replay_scan, ptr @event_ext4_fc_stats, ptr @event_ext4_fc_track_create, ptr @event_ext4_fc_track_inode, ptr @event_ext4_fc_track_link, ptr @event_ext4_fc_track_range, ptr @event_ext4_fc_track_unlink, ptr @event_ext4_forget, ptr @event_ext4_free_blocks, ptr @event_ext4_free_inode, ptr @event_ext4_fsmap_high_key, ptr @event_ext4_fsmap_low_key, ptr @event_ext4_fsmap_mapping, ptr @event_ext4_get_implied_cluster_alloc_exit, ptr @event_ext4_getfsmap_high_key, ptr @event_ext4_getfsmap_low_key, ptr @event_ext4_getfsmap_mapping, ptr @event_ext4_ind_map_blocks_enter, ptr @event_ext4_ind_map_blocks_exit, ptr @event_ext4_insert_range, ptr @event_ext4_invalidatepage, ptr @event_ext4_journal_start, ptr @event_ext4_journal_start_reserved, ptr @event_ext4_journalled_invalidatepage, ptr @event_ext4_journalled_write_end, ptr @event_ext4_lazy_itable_init, ptr @event_ext4_load_inode, ptr @event_ext4_load_inode_bitmap, ptr @event_ext4_mark_inode_dirty, ptr @event_ext4_mb_bitmap_load, ptr @event_ext4_mb_buddy_bitmap_load, ptr @event_ext4_mb_discard_preallocations, ptr @event_ext4_mb_new_group_pa, ptr @event_ext4_mb_new_inode_pa, ptr @event_ext4_mb_release_group_pa, ptr @event_ext4_mb_release_inode_pa, ptr @event_ext4_mballoc_alloc, ptr @event_ext4_mballoc_discard, ptr @event_ext4_mballoc_free, ptr @event_ext4_mballoc_prealloc, ptr @event_ext4_nfs_commit_metadata, ptr @event_ext4_other_inode_update_time, ptr @event_ext4_prefetch_bitmaps, ptr @event_ext4_punch_hole, ptr @event_ext4_read_block_bitmap_load, ptr @event_ext4_readpage, ptr @event_ext4_releasepage, ptr @event_ext4_remove_blocks, ptr @event_ext4_request_blocks, ptr @event_ext4_request_inode, ptr @event_ext4_shutdown, ptr @event_ext4_sync_file_enter, ptr @event_ext4_sync_file_exit, ptr @event_ext4_sync_fs, ptr @event_ext4_trim_all_free, ptr @event_ext4_trim_extent, ptr @event_ext4_truncate_enter, ptr @event_ext4_truncate_exit, ptr @event_ext4_unlink_enter, ptr @event_ext4_unlink_exit, ptr @event_ext4_update_sb, ptr @event_ext4_write_begin, ptr @event_ext4_write_end, ptr @event_ext4_writepage, ptr @event_ext4_writepages, ptr @event_ext4_writepages_result, ptr @event_ext4_zero_range, ptr @ext4_exit_fs], section "llvm.metadata"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_other_inode_update_time(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_other_inode_update_time, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_free_inode(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_free_inode, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_request_inode(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_request_inode, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_allocate_inode(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_allocate_inode, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_evict_inode(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_evict_inode, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_drop_inode(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_drop_inode, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_nfs_commit_metadata(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_nfs_commit_metadata, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mark_inode_dirty(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mark_inode_dirty, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_begin_ordered_truncate(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_begin_ordered_truncate, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i64 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_write_begin(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_write_begin, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_write_begin(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_write_begin, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_write_end(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_write_end, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_journalled_write_end(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_journalled_write_end, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_write_end(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_write_end, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_writepages(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_writepages, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_write_pages(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_write_pages, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, ptr noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_write_pages_extent(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_write_pages_extent, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_writepages_result(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_writepages_result, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_writepage(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_writepage, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_readpage(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_readpage, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_releasepage(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_releasepage, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_invalidatepage(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_invalidatepage, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_journalled_invalidatepage(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_journalled_invalidatepage, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_discard_blocks(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_discard_blocks, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i64 noundef %2, i64 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_new_inode_pa(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_new_inode_pa, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_new_group_pa(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_new_group_pa, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_release_inode_pa(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_release_inode_pa, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i64 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_release_group_pa(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_release_group_pa, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_discard_preallocations(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_discard_preallocations, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_discard_preallocations(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_discard_preallocations, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_request_blocks(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_request_blocks, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_allocate_blocks(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_allocate_blocks, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i64 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_free_blocks(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_free_blocks, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_sync_file_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_sync_file_enter, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_sync_file_exit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_sync_file_exit, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_sync_fs(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_sync_fs, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_alloc_da_blocks(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_alloc_da_blocks, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mballoc_alloc(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mballoc_alloc, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mballoc_prealloc(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mballoc_prealloc, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mballoc_discard(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mballoc_discard, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mballoc_free(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mballoc_free, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_forget(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_forget, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i64 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_update_reserve_space(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_update_reserve_space, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_reserve_space(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_reserve_space, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_da_release_space(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_da_release_space, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_bitmap_load(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_bitmap_load, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_mb_buddy_bitmap_load(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_mb_buddy_bitmap_load, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_load_inode_bitmap(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_load_inode_bitmap, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_read_block_bitmap_load(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i1 noundef zeroext %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_read_block_bitmap_load, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i1 noundef zeroext %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fallocate_enter(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fallocate_enter, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_punch_hole(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_punch_hole, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_zero_range(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_zero_range, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fallocate_exit(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fallocate_exit, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_unlink_enter(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_unlink_enter, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_unlink_exit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_unlink_exit, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_truncate_enter(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_truncate_enter, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_truncate_exit(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_truncate_exit, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_convert_to_initialized_enter(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_convert_to_initialized_enter, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, ptr noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_convert_to_initialized_fastpath(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_convert_to_initialized_fastpath, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_map_blocks_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_map_blocks_enter, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ind_map_blocks_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ind_map_blocks_enter, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_map_blocks_exit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_map_blocks_exit, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ind_map_blocks_exit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ind_map_blocks_exit, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, ptr noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_load_extent(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_load_extent, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i64 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_load_inode(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_load_inode, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_journal_start(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_journal_start, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_journal_start_reserved(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_journal_start_reserved, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_trim_extent(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_trim_extent, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_trim_all_free(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_trim_all_free, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_handle_unwritten_extents(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i64 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_handle_unwritten_extents, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i64 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_get_implied_cluster_alloc_exit(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_get_implied_cluster_alloc_exit, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_show_extent(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i64 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_show_extent, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i64 noundef %3, i16 noundef zeroext %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_remove_blocks(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i64 noundef %4, ptr noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_remove_blocks, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, ptr noundef %2, i32 noundef %3, i64 noundef %4, ptr noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_rm_leaf(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_rm_leaf, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_rm_idx(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_rm_idx, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i64 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_remove_space(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_remove_space, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_ext_remove_space_done(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5, i16 noundef zeroext %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_ext_remove_space_done, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5, i16 noundef zeroext %6) #26
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_insert_extent(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_insert_extent, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_cache_extent(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_cache_extent, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_remove_extent(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_remove_extent, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_find_extent_range_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_find_extent_range_enter, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_find_extent_range_exit(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_find_extent_range_exit, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_lookup_extent_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_lookup_extent_enter, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_lookup_extent_exit(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_lookup_extent_exit, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_shrink_count(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_shrink_count, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_shrink_scan_enter(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_shrink_scan_enter, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_shrink_scan_exit(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_shrink_scan_exit, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_collapse_range(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_collapse_range, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i64 noundef %2, i64 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_insert_range(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_insert_range, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i64 noundef %2, i64 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_shrink(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i64 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_shrink, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, i32 noundef %2, i64 noundef %3, i32 noundef %4, i32 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_es_insert_delayed_block(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_es_insert_delayed_block, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fsmap_low_key(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fsmap_low_key, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #26
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fsmap_high_key(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fsmap_high_key, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #26
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fsmap_mapping(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fsmap_mapping, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #26
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_getfsmap_low_key(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_getfsmap_low_key, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_getfsmap_high_key(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_getfsmap_high_key, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_getfsmap_mapping(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_getfsmap_mapping, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_shutdown(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_shutdown, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_error(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_prefetch_bitmaps(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_prefetch_bitmaps, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_lazy_itable_init(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_lazy_itable_init, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_replay_scan(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_replay_scan, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_replay(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_replay, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #26
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_commit_start(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_commit_start, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_commit_stop(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_commit_stop, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i32 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_stats(ptr nocapture readnone %0, ptr noundef %1) #0 {
  %3 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_stats, i32 0, i32 7), align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %5, %2
  %6 = phi ptr [ %10, %5 ], [ %3, %2 ]
  %7 = load volatile ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.tracepoint_func, ptr %6, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  tail call void %7(ptr noundef %9, ptr noundef %1) #26
  %10 = getelementptr %struct.tracepoint_func, ptr %6, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %5

13:                                               ; preds = %5, %2
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_track_create(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_track_create, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_track_link(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_track_link, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_track_unlink(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_track_unlink, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_track_inode(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_track_inode, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #26
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_fc_track_range(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_fc_track_range, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #26
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_ext4_update_sb(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_update_sb, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, i64 noundef %2, i32 noundef %3) #26
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_other_inode_update_time(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %35, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 3
  store i32 %2, ptr %18, align 4
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 4
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 5
  store i32 %31, ptr %32, align 4
  %33 = load i16, ptr %1, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %15, i32 0, i32 6
  store i16 %33, ptr %34, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %35

35:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_other_inode_update_time(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 3
  store i32 %2, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 4
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %47 = load i32, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 5
  store i32 %47, ptr %48, align 4
  %49 = load i16, ptr %1, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %21, i32 0, i32 6
  store i16 %49, ptr %50, align 4
  %51 = load i32, ptr %5, align 4
  %52 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %51, ptr noundef %0, i64 noundef 1, ptr noundef %52, ptr noundef %13, ptr noundef null) #26
  br label %53

53:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_free_inode(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %36, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 40) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 3
  store i32 %26, ptr %27, align 8
  %28 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 4
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %32 = load i64, ptr %31, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 5
  store i64 %32, ptr %33, align 8
  %34 = load i16, ptr %1, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %14, i32 0, i32 6
  store i16 %34, ptr %35, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %36

36:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_free_inode(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %54, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 2
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 3
  store i32 %42, ptr %43, align 8
  %44 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 3
  %45 = load i32, ptr %44, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 4
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %48 = load i64, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 5
  store i64 %48, ptr %49, align 8
  %50 = load i16, ptr %1, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %20, i32 0, i32 6
  store i16 %50, ptr %51, align 8
  %52 = load i32, ptr %4, align 4
  %53 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 44, i32 noundef %52, ptr noundef %0, i64 noundef 1, ptr noundef %53, ptr noundef %12, ptr noundef null) #26
  br label %54

54:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_request_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %28, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = trunc i32 %2 to i16
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %15, i32 0, i32 3
  store i16 %26, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %28

28:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_request_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %46, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = trunc i32 %2 to i16
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %21, i32 0, i32 3
  store i16 %42, ptr %43, align 4
  %44 = load i32, ptr %5, align 4
  %45 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %13, ptr noundef null) #26
  br label %46

46:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_allocate_inode(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %32, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 24) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %16, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = trunc i32 %3 to i16
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %16, i32 0, i32 4
  store i16 %30, ptr %31, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %32

32:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_allocate_inode(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %50, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 10
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %22, i32 0, i32 3
  store i32 %44, ptr %45, align 4
  %46 = trunc i32 %3 to i16
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %22, i32 0, i32 4
  store i16 %46, ptr %47, align 4
  %48 = load i32, ptr %6, align 4
  %49 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %14, ptr noundef null) #26
  br label %50

50:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_evict_inode(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %28, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 11
  %26 = load i32, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %14, i32 0, i32 3
  store i32 %26, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %28

28:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_evict_inode(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %46, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 11
  %42 = load i32, ptr %41, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %20, i32 0, i32 3
  store i32 %42, ptr %43, align 4
  %44 = load i32, ptr %4, align 4
  %45 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %12, ptr noundef null) #26
  br label %46

46:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_drop_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_drop_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_nfs_commit_metadata(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %25, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 16) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %25

25:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_nfs_commit_metadata(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %43, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = load i32, ptr %4, align 4
  %42 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %41, ptr noundef %0, i64 noundef 1, ptr noundef %42, ptr noundef %12, ptr noundef null) #26
  br label %43

43:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mark_inode_dirty(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mark_inode_dirty(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_begin_ordered_truncate(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 24) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %15, i32 0, i32 3
  store i64 %2, ptr %26, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_begin_ordered_truncate(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %21, i32 0, i32 3
  store i64 %2, ptr %42, align 8
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__write_begin(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %17, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__write_begin(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %23, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__write_end(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %17, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__write_end(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %23, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_writepages(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %55, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 56) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %55, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = load i32, ptr %2, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 3
  store i32 %26, ptr %27, align 8
  %28 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 4
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 2
  %32 = load i64, ptr %31, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 5
  store i64 %32, ptr %33, align 8
  %34 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 3
  %35 = load i64, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 6
  store i64 %35, ptr %36, align 8
  %37 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 9
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.address_space, ptr %38, i32 0, i32 8
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 7
  store i32 %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 4
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 8
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 5
  %46 = load i16, ptr %45, align 4
  %47 = trunc i16 %46 to i8
  %48 = and i8 %47, 1
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 9
  store i8 %48, ptr %49, align 8
  %50 = load i16, ptr %45, align 4
  %51 = trunc i16 %50 to i8
  %52 = lshr i8 %51, 4
  %53 = and i8 %52, 1
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %15, i32 0, i32 10
  store i8 %53, ptr %54, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %55

55:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_writepages(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %73, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %73, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = load i32, ptr %2, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 3
  store i32 %42, ptr %43, align 8
  %44 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 4
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 2
  %48 = load i64, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 5
  store i64 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 3
  %51 = load i64, ptr %50, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 6
  store i64 %51, ptr %52, align 8
  %53 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 9
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %struct.address_space, ptr %54, i32 0, i32 8
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 7
  store i32 %56, ptr %57, align 8
  %58 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 4
  %59 = load i32, ptr %58, align 8
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 8
  store i32 %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 5
  %62 = load i16, ptr %61, align 4
  %63 = trunc i16 %62 to i8
  %64 = and i8 %63, 1
  %65 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 9
  store i8 %64, ptr %65, align 8
  %66 = load i16, ptr %61, align 4
  %67 = trunc i16 %66 to i8
  %68 = lshr i8 %67, 4
  %69 = and i8 %68, 1
  %70 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %21, i32 0, i32 10
  store i8 %69, ptr %70, align 1
  %71 = load i32, ptr %5, align 4
  %72 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 60, i32 noundef %71, ptr noundef %0, i64 noundef 1, ptr noundef %72, ptr noundef %13, ptr noundef null) #26
  br label %73

73:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_da_write_pages(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %33, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 28) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %16, i32 0, i32 3
  store i32 %2, ptr %27, align 4
  %28 = load i32, ptr %3, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %16, i32 0, i32 4
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.writeback_control, ptr %3, i32 0, i32 4
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %16, i32 0, i32 5
  store i32 %31, ptr %32, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %33

33:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_da_write_pages(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %51, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %51, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %22, i32 0, i32 3
  store i32 %2, ptr %43, align 4
  %44 = load i32, ptr %3, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %22, i32 0, i32 4
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.writeback_control, ptr %3, i32 0, i32 4
  %47 = load i32, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %22, i32 0, i32 5
  store i32 %47, ptr %48, align 4
  %49 = load i32, ptr %6, align 4
  %50 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %14, ptr noundef null) #26
  br label %51

51:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_da_write_pages_extent(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %36, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %27 = load i32, ptr %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %15, i32 0, i32 3
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %15, i32 0, i32 4
  store i32 %31, ptr %32, align 8
  %33 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 3
  %34 = load i32, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %15, i32 0, i32 5
  store i32 %34, ptr %35, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %36

36:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_da_write_pages_extent(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %54, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %54, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %43 = load i32, ptr %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %21, i32 0, i32 3
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %21, i32 0, i32 4
  store i32 %47, ptr %48, align 8
  %49 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 3
  %50 = load i32, ptr %49, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %21, i32 0, i32 5
  store i32 %50, ptr %51, align 4
  %52 = load i32, ptr %5, align 4
  %53 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %52, ptr noundef %0, i64 noundef 1, ptr noundef %53, ptr noundef %13, ptr noundef null) #26
  br label %54

54:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_writepages_result(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %41, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 36) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 3
  store i32 %3, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 4
  store i32 %4, ptr %29, align 4
  %30 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 5
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 9
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds %struct.address_space, ptr %34, i32 0, i32 8
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 6
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 4
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %17, i32 0, i32 7
  store i32 %39, ptr %40, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %41

41:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_writepages_result(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %59, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 3
  store i32 %3, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 4
  store i32 %4, ptr %45, align 4
  %46 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 1
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 5
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 9
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds %struct.address_space, ptr %50, i32 0, i32 8
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 6
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 4
  %55 = load i32, ptr %54, align 8
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %23, i32 0, i32 7
  store i32 %55, ptr %56, align 4
  %57 = load i32, ptr %7, align 4
  %58 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %57, ptr noundef %0, i64 noundef 1, ptr noundef %58, ptr noundef %15, ptr noundef null) #26
  br label %59

59:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__page_op(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %33, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %18 = load ptr, ptr %17, align 4
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %14, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = load ptr, ptr %17, align 4
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %14, i32 0, i32 2
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %14, i32 0, i32 3
  store i32 %31, ptr %32, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %33

33:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__page_op(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %35, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %20, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = load ptr, ptr %33, align 4
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 10
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %20, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %20, i32 0, i32 3
  store i32 %47, ptr %48, align 4
  %49 = load i32, ptr %4, align 4
  %50 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %12, ptr noundef null) #26
  br label %51

51:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_invalidatepage_op(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %37, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 28) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %20 = load ptr, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.inode, ptr %21, i32 0, i32 8
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 1
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %16, i32 0, i32 1
  store i32 %25, ptr %26, align 4
  %27 = load ptr, ptr %19, align 4
  %28 = load ptr, ptr %27, align 4
  %29 = getelementptr inbounds %struct.inode, ptr %28, i32 0, i32 10
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %16, i32 0, i32 2
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 2
  %33 = load i32, ptr %32, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %16, i32 0, i32 3
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %16, i32 0, i32 4
  store i32 %2, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %16, i32 0, i32 5
  store i32 %3, ptr %36, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %37

37:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_invalidatepage_op(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %55, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %36 = load ptr, ptr %35, align 4
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.inode, ptr %37, i32 0, i32 8
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.super_block, ptr %39, i32 0, i32 1
  %41 = load i32, ptr %40, align 8
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %22, i32 0, i32 1
  store i32 %41, ptr %42, align 4
  %43 = load ptr, ptr %35, align 4
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.inode, ptr %44, i32 0, i32 10
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %22, i32 0, i32 2
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 2
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %22, i32 0, i32 3
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %22, i32 0, i32 4
  store i32 %2, ptr %51, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %22, i32 0, i32 5
  store i32 %3, ptr %52, align 4
  %53 = load i32, ptr %6, align 4
  %54 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %14, ptr noundef null) #26
  br label %55

55:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_discard_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %16, i32 0, i32 2
  store i64 %2, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %16, i32 0, i32 3
  store i64 %3, ptr %23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_discard_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %22, i32 0, i32 2
  store i64 %2, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %22, i32 0, i32 3
  store i64 %3, ptr %39, align 8
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__mb_new_pa(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %37, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 40) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = load ptr, ptr %1, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %15, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 6
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %15, i32 0, i32 3
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 7
  %31 = load i32, ptr %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %15, i32 0, i32 4
  store i64 %32, ptr %33, align 8
  %34 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 8
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %15, i32 0, i32 5
  store i32 %35, ptr %36, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %37

37:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__mb_new_pa(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %55, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %55, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = load ptr, ptr %1, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %39, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %21, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 6
  %44 = load i64, ptr %43, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %21, i32 0, i32 3
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 7
  %47 = load i32, ptr %46, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %21, i32 0, i32 4
  store i64 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 8
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %21, i32 0, i32 5
  store i32 %51, ptr %52, align 8
  %53 = load i32, ptr %5, align 4
  %54 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %13, ptr noundef null) #26
  br label %55

55:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mb_release_inode_pa(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %32, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %1, i32 0, i32 12
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.inode, ptr %20, i32 0, i32 8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 1
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %16, i32 0, i32 1
  store i32 %24, ptr %25, align 8
  %26 = load ptr, ptr %19, align 4
  %27 = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %16, i32 0, i32 2
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %16, i32 0, i32 3
  store i64 %2, ptr %30, align 8
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %16, i32 0, i32 4
  store i32 %3, ptr %31, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %32

32:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mb_release_inode_pa(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %50, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %1, i32 0, i32 12
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.inode, ptr %36, i32 0, i32 8
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.super_block, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %22, i32 0, i32 1
  store i32 %40, ptr %41, align 8
  %42 = load ptr, ptr %35, align 4
  %43 = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 10
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %22, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %22, i32 0, i32 3
  store i64 %2, ptr %46, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %22, i32 0, i32 4
  store i32 %3, ptr %47, align 8
  %48 = load i32, ptr %6, align 4
  %49 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %14, ptr noundef null) #26
  br label %50

50:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mb_release_group_pa(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 8
  %21 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 6
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %15, i32 0, i32 2
  store i64 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 8
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %15, i32 0, i32 3
  store i32 %25, ptr %26, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mb_release_group_pa(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 8
  %37 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 6
  %38 = load i64, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %21, i32 0, i32 2
  store i64 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.ext4_prealloc_space, ptr %2, i32 0, i32 8
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %21, i32 0, i32 3
  store i32 %41, ptr %42, align 8
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_discard_preallocations(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %29, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 24) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %16, i32 0, i32 3
  store i32 %2, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %16, i32 0, i32 4
  store i32 %3, ptr %28, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %29

29:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_discard_preallocations(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %22, i32 0, i32 3
  store i32 %2, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %22, i32 0, i32 4
  store i32 %3, ptr %44, align 4
  %45 = load i32, ptr %6, align 4
  %46 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %14, ptr noundef null) #26
  br label %47

47:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mb_discard_preallocations(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mb_discard_preallocations(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_request_blocks(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %51, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 64) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %51, label %16

16:                                               ; preds = %13
  %17 = load ptr, ptr %1, align 8
  %18 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 1
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 3
  store i32 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 2
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 5
  %34 = load i64, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 7
  store i64 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 5
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 4
  %40 = load i32, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 6
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 6
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 8
  store i64 %43, ptr %44, align 8
  %45 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 7
  %46 = load i64, ptr %45, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 9
  store i64 %46, ptr %47, align 8
  %48 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 8
  %49 = load i32, ptr %48, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %14, i32 0, i32 10
  store i32 %49, ptr %50, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %51

51:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_request_blocks(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %69, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = load ptr, ptr %1, align 8
  %34 = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = load ptr, ptr %1, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %39, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 1
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 3
  store i32 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 2
  %47 = load i32, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 5
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 7
  store i64 %50, ptr %51, align 8
  %52 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 3
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 5
  store i32 %53, ptr %54, align 8
  %55 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 4
  %56 = load i32, ptr %55, align 8
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 6
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 6
  %59 = load i64, ptr %58, align 8
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 8
  store i64 %59, ptr %60, align 8
  %61 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 7
  %62 = load i64, ptr %61, align 8
  %63 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 9
  store i64 %62, ptr %63, align 8
  %64 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 8
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %20, i32 0, i32 10
  store i32 %65, ptr %66, align 8
  %67 = load i32, ptr %4, align 4
  %68 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 68, i32 noundef %67, ptr noundef %0, i64 noundef 1, ptr noundef %68, ptr noundef %12, ptr noundef null) #26
  br label %69

69:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_allocate_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %53, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 72) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %53, label %17

17:                                               ; preds = %14
  %18 = load ptr, ptr %1, align 8
  %19 = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = load ptr, ptr %1, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %24, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 1
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 4
  store i32 %30, ptr %31, align 8
  %32 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 2
  %33 = load i32, ptr %32, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 5
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 5
  %36 = load i64, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 8
  store i64 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 3
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 6
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 4
  %42 = load i32, ptr %41, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 7
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 6
  %45 = load i64, ptr %44, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 9
  store i64 %45, ptr %46, align 8
  %47 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 7
  %48 = load i64, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 10
  store i64 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 8
  %51 = load i32, ptr %50, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %15, i32 0, i32 11
  store i32 %51, ptr %52, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %53

53:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_allocate_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %71, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %71, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = load ptr, ptr %1, align 8
  %35 = getelementptr inbounds %struct.inode, ptr %34, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = load ptr, ptr %1, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %40, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 1
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 4
  store i32 %46, ptr %47, align 8
  %48 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 2
  %49 = load i32, ptr %48, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 5
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 5
  %52 = load i64, ptr %51, align 8
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 8
  store i64 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 3
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 6
  store i32 %55, ptr %56, align 8
  %57 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 4
  %58 = load i32, ptr %57, align 8
  %59 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 7
  store i32 %58, ptr %59, align 4
  %60 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 6
  %61 = load i64, ptr %60, align 8
  %62 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 9
  store i64 %61, ptr %62, align 8
  %63 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 7
  %64 = load i64, ptr %63, align 8
  %65 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 10
  store i64 %64, ptr %65, align 8
  %66 = getelementptr inbounds %struct.ext4_allocation_request, ptr %1, i32 0, i32 8
  %67 = load i32, ptr %66, align 8
  %68 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %21, i32 0, i32 11
  store i32 %67, ptr %68, align 8
  %69 = load i32, ptr %5, align 4
  %70 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 76, i32 noundef %69, ptr noundef %0, i64 noundef 1, ptr noundef %70, ptr noundef %13, ptr noundef null) #26
  br label %71

71:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_free_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %33, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 40) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  %31 = load i16, ptr %1, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %17, i32 0, i32 6
  store i16 %31, ptr %32, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %33

33:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_free_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %51, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i16, ptr %1, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %23, i32 0, i32 6
  store i16 %47, ptr %48, align 8
  %49 = load i32, ptr %7, align 4
  %50 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 44, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %15, ptr noundef null) #26
  br label %51

51:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_sync_file_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %38, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 24) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %38, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 1, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.dentry, ptr %19, i32 0, i32 9
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %15, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.dentry, ptr %19, i32 0, i32 5
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %15, i32 0, i32 2
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %15, i32 0, i32 4
  store i32 %2, ptr %30, align 4
  %31 = getelementptr inbounds %struct.dentry, ptr %19, i32 0, i32 3
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds %struct.dentry, ptr %32, i32 0, i32 5
  %34 = load ptr, ptr %33, align 8
  %35 = getelementptr inbounds %struct.inode, ptr %34, i32 0, i32 10
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %15, i32 0, i32 3
  store i32 %36, ptr %37, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %38

38:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_sync_file_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %56, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 1, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.dentry, ptr %35, i32 0, i32 9
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %21, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.dentry, ptr %35, i32 0, i32 5
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.inode, ptr %42, i32 0, i32 10
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %21, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %21, i32 0, i32 4
  store i32 %2, ptr %46, align 4
  %47 = getelementptr inbounds %struct.dentry, ptr %35, i32 0, i32 3
  %48 = load ptr, ptr %47, align 8
  %49 = getelementptr inbounds %struct.dentry, ptr %48, i32 0, i32 5
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds %struct.inode, ptr %50, i32 0, i32 10
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %21, i32 0, i32 3
  store i32 %52, ptr %53, align 4
  %54 = load i32, ptr %5, align 4
  %55 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %54, ptr noundef %0, i64 noundef 1, ptr noundef %55, ptr noundef %13, ptr noundef null) #26
  br label %56

56:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_sync_file_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_sync_file_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_sync_fs(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_sync_fs(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_alloc_da_blocks(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %28, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr i8, ptr %1, i32 468
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %14, i32 0, i32 3
  store i32 %26, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %28

28:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_alloc_da_blocks(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %46, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr i8, ptr %1, i32 468
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %20, i32 0, i32 3
  store i32 %42, ptr %43, align 4
  %44 = load i32, ptr %4, align 4
  %45 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %12, ptr noundef null) #26
  br label %46

46:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mballoc_alloc(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %82, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 76) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %82, label %16

16:                                               ; preds = %13
  %17 = load ptr, ptr %1, align 4
  %18 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = load ptr, ptr %1, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 2
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 5
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 6
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 7
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 8
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 2
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 9
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 10
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 11
  store i32 %52, ptr %53, align 4
  %54 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 1
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 12
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 2
  %58 = load i32, ptr %57, align 4
  %59 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 13
  store i32 %58, ptr %59, align 4
  %60 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 3
  %61 = load i32, ptr %60, align 4
  %62 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 14
  store i32 %61, ptr %62, align 4
  %63 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 11
  %64 = load i16, ptr %63, align 4
  %65 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 15
  store i16 %64, ptr %65, align 4
  %66 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 8
  %67 = load i32, ptr %66, align 4
  %68 = trunc i32 %67 to i16
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 18
  store i16 %68, ptr %69, align 2
  %70 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 9
  %71 = load i16, ptr %70, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 16
  store i16 %71, ptr %72, align 2
  %73 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 13
  %74 = load i16, ptr %73, align 4
  %75 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 17
  store i16 %74, ptr %75, align 4
  %76 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 12
  %77 = load i16, ptr %76, align 2
  %78 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 19
  store i16 %77, ptr %78, align 4
  %79 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 15
  %80 = load i8, ptr %79, align 1
  %81 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %14, i32 0, i32 20
  store i8 %80, ptr %81, align 2
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %82

82:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mballoc_alloc(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %100, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %100, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = load ptr, ptr %1, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = load ptr, ptr %1, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %39, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 3
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 1
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 2
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 5
  store i32 %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 3
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 6
  store i32 %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 7
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 1
  %59 = load i32, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 8
  store i32 %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 2
  %62 = load i32, ptr %61, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 9
  store i32 %62, ptr %63, align 4
  %64 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 3, i32 3
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 10
  store i32 %65, ptr %66, align 4
  %67 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5
  %68 = load i32, ptr %67, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 11
  store i32 %68, ptr %69, align 4
  %70 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 1
  %71 = load i32, ptr %70, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 12
  store i32 %71, ptr %72, align 4
  %73 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 2
  %74 = load i32, ptr %73, align 4
  %75 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 13
  store i32 %74, ptr %75, align 4
  %76 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 5, i32 3
  %77 = load i32, ptr %76, align 4
  %78 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 14
  store i32 %77, ptr %78, align 4
  %79 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 11
  %80 = load i16, ptr %79, align 4
  %81 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 15
  store i16 %80, ptr %81, align 4
  %82 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 8
  %83 = load i32, ptr %82, align 4
  %84 = trunc i32 %83 to i16
  %85 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 18
  store i16 %84, ptr %85, align 2
  %86 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 9
  %87 = load i16, ptr %86, align 4
  %88 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 16
  store i16 %87, ptr %88, align 2
  %89 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 13
  %90 = load i16, ptr %89, align 4
  %91 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 17
  store i16 %90, ptr %91, align 4
  %92 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 12
  %93 = load i16, ptr %92, align 2
  %94 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 19
  store i16 %93, ptr %94, align 4
  %95 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 15
  %96 = load i8, ptr %95, align 1
  %97 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %20, i32 0, i32 20
  store i8 %96, ptr %97, align 2
  %98 = load i32, ptr %4, align 4
  %99 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 76, i32 noundef %98, ptr noundef %0, i64 noundef 1, ptr noundef %99, ptr noundef %12, ptr noundef null) #26
  br label %100

100:                                              ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_mballoc_prealloc(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %51, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 48) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %51, label %16

16:                                               ; preds = %13
  %17 = load ptr, ptr %1, align 4
  %18 = getelementptr inbounds %struct.inode, ptr %17, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = load ptr, ptr %1, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 3
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 2
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 5
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 6
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 7
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 8
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 2
  %46 = load i32, ptr %45, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 9
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %14, i32 0, i32 10
  store i32 %49, ptr %50, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %51

51:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_mballoc_prealloc(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %69, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %69, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = load ptr, ptr %1, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %33, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = load ptr, ptr %1, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %39, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 3
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 1
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 2
  %50 = load i32, ptr %49, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 5
  store i32 %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 2, i32 3
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 6
  store i32 %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4
  %56 = load i32, ptr %55, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 7
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 1
  %59 = load i32, ptr %58, align 4
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 8
  store i32 %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 2
  %62 = load i32, ptr %61, align 4
  %63 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 9
  store i32 %62, ptr %63, align 4
  %64 = getelementptr inbounds %struct.ext4_allocation_context, ptr %1, i32 0, i32 4, i32 3
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %20, i32 0, i32 10
  store i32 %65, ptr %66, align 4
  %67 = load i32, ptr %4, align 4
  %68 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 52, i32 noundef %67, ptr noundef %0, i64 noundef 1, ptr noundef %68, ptr noundef %12, ptr noundef null) #26
  br label %69

69:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__mballoc(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %34, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 28) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %18, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = icmp eq ptr %2, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 10
  %27 = load i32, ptr %26, align 4
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %27, %25 ], [ 0, %20 ]
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %18, i32 0, i32 2
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %18, i32 0, i32 3
  store i32 %4, ptr %31, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %18, i32 0, i32 4
  store i32 %3, ptr %32, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %18, i32 0, i32 5
  store i32 %5, ptr %33, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %34

34:                                               ; preds = %28, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__mballoc(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef readonly %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %52, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %24, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = icmp eq ptr %2, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %26
  %42 = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 10
  %43 = load i32, ptr %42, align 4
  br label %44

44:                                               ; preds = %41, %26
  %45 = phi i32 [ %43, %41 ], [ 0, %26 ]
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %24, i32 0, i32 2
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %24, i32 0, i32 3
  store i32 %4, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %24, i32 0, i32 4
  store i32 %3, ptr %48, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %24, i32 0, i32 5
  store i32 %5, ptr %49, align 4
  %50 = load i32, ptr %8, align 4
  %51 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 28, i32 noundef %50, ptr noundef %0, i64 noundef 1, ptr noundef %51, ptr noundef %16, ptr noundef null) #26
  br label %52

52:                                               ; preds = %44, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_forget(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %31, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %16, i32 0, i32 3
  store i64 %3, ptr %27, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %16, i32 0, i32 4
  store i32 %2, ptr %28, align 8
  %29 = load i16, ptr %1, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %16, i32 0, i32 5
  store i16 %29, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %31

31:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_forget(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %49, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %22, i32 0, i32 3
  store i64 %3, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %22, i32 0, i32 4
  store i32 %2, ptr %44, align 8
  %45 = load i16, ptr %1, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %22, i32 0, i32 5
  store i16 %45, ptr %46, align 4
  %47 = load i32, ptr %6, align 4
  %48 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %14, ptr noundef null) #26
  br label %49

49:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_da_update_reserve_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %37, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 40) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 3
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 4
  store i32 %2, ptr %30, align 8
  %31 = getelementptr i8, ptr %1, i32 468
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 5
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 6
  store i32 %3, ptr %34, align 8
  %35 = load i16, ptr %1, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %16, i32 0, i32 7
  store i16 %35, ptr %36, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %37

37:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_da_update_reserve_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %55, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %44 = load i64, ptr %43, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 3
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 4
  store i32 %2, ptr %46, align 8
  %47 = getelementptr i8, ptr %1, i32 468
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 5
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 6
  store i32 %3, ptr %50, align 8
  %51 = load i16, ptr %1, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %22, i32 0, i32 7
  store i16 %51, ptr %52, align 4
  %53 = load i32, ptr %6, align 4
  %54 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 44, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %14, ptr noundef null) #26
  br label %55

55:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_da_reserve_space(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %33, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 32) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %14, i32 0, i32 3
  store i64 %26, ptr %27, align 8
  %28 = getelementptr i8, ptr %1, i32 468
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %14, i32 0, i32 4
  store i32 %29, ptr %30, align 8
  %31 = load i16, ptr %1, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %14, i32 0, i32 5
  store i16 %31, ptr %32, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %33

33:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_da_reserve_space(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %51, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %51, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %42 = load i64, ptr %41, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %20, i32 0, i32 3
  store i64 %42, ptr %43, align 8
  %44 = getelementptr i8, ptr %1, i32 468
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %20, i32 0, i32 4
  store i32 %45, ptr %46, align 8
  %47 = load i16, ptr %1, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %20, i32 0, i32 5
  store i16 %47, ptr %48, align 4
  %49 = load i32, ptr %4, align 4
  %50 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 36, i32 noundef %49, ptr noundef %0, i64 noundef 1, ptr noundef %50, ptr noundef %12, ptr noundef null) #26
  br label %51

51:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_da_release_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %35, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 40) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 3
  store i64 %27, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 4
  store i32 %2, ptr %29, align 8
  %30 = getelementptr i8, ptr %1, i32 468
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 5
  store i32 %31, ptr %32, align 4
  %33 = load i16, ptr %1, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %15, i32 0, i32 6
  store i16 %33, ptr %34, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %35

35:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_da_release_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %43 = load i64, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 3
  store i64 %43, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 4
  store i32 %2, ptr %45, align 8
  %46 = getelementptr i8, ptr %1, i32 468
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 5
  store i32 %47, ptr %48, align 4
  %49 = load i16, ptr %1, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %21, i32 0, i32 6
  store i16 %49, ptr %50, align 8
  %51 = load i32, ptr %5, align 4
  %52 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %51, ptr noundef %0, i64 noundef 1, ptr noundef %52, ptr noundef %13, ptr noundef null) #26
  br label %53

53:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__bitmap_load(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__bitmap_load(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_read_block_bitmap_load(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i1 noundef zeroext %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  %6 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %4
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %25, label %16

16:                                               ; preds = %14, %11, %4
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %17, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %17, i32 0, i32 2
  store i32 %2, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %17, i32 0, i32 3
  store i8 %6, ptr %24, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %25

25:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_read_block_bitmap_load(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i1 noundef zeroext %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  %7 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %19, %4
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %43, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %5, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %23, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %23, i32 0, i32 2
  store i32 %2, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %23, i32 0, i32 3
  store i8 %7, ptr %40, align 4
  %41 = load i32, ptr %6, align 4
  %42 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 20, i32 noundef %41, ptr noundef %0, i64 noundef 1, ptr noundef %42, ptr noundef %15, ptr noundef null) #26
  br label %43

43:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__fallocate_mode(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 40) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %17, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %17, i32 0, i32 4
  store i64 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__fallocate_mode(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %23, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %23, i32 0, i32 4
  store i64 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 8
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 44, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fallocate_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %17, i32 0, i32 3
  store i64 %2, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fallocate_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %23, i32 0, i32 3
  store i64 %2, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_unlink_enter(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %35, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 32) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.dentry, ptr %2, i32 0, i32 9
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.dentry, ptr %2, i32 0, i32 5
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %24, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %15, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %15, i32 0, i32 3
  store i32 %29, ptr %30, align 8
  %31 = load ptr, ptr %23, align 8
  %32 = getelementptr inbounds %struct.inode, ptr %31, i32 0, i32 13
  %33 = load i64, ptr %32, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %15, i32 0, i32 4
  store i64 %33, ptr %34, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %35

35:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_unlink_enter(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.dentry, ptr %2, i32 0, i32 9
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.dentry, ptr %2, i32 0, i32 5
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %40, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %21, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %21, i32 0, i32 3
  store i32 %45, ptr %46, align 8
  %47 = load ptr, ptr %39, align 8
  %48 = getelementptr inbounds %struct.inode, ptr %47, i32 0, i32 13
  %49 = load i64, ptr %48, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %21, i32 0, i32 4
  store i64 %49, ptr %50, align 8
  %51 = load i32, ptr %5, align 4
  %52 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 36, i32 noundef %51, ptr noundef %0, i64 noundef 1, ptr noundef %52, ptr noundef %13, ptr noundef null) #26
  br label %53

53:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_unlink_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %29, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %24, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %15, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %15, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %29

29:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_unlink_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %40, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %21, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %21, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = load i32, ptr %5, align 4
  %46 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %13, ptr noundef null) #26
  br label %47

47:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__truncate(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %28, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 24) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.super_block, ptr %18, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %14, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %14, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %14, i32 0, i32 3
  store i64 %26, ptr %27, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %28

28:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__truncate(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %46, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %34 = load ptr, ptr %33, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %20, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %20, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 21
  %42 = load i64, ptr %41, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %20, i32 0, i32 3
  store i64 %42, ptr %43, align 8
  %44 = load i32, ptr %4, align 4
  %45 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 28, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %12, ptr noundef null) #26
  br label %46

46:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_convert_to_initialized_enter(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %51, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 40) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %51, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %28 = load i32, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 3
  store i32 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = load i32, ptr %3, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 5
  store i32 %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %36 = load i16, ptr %35, align 4
  %37 = zext i16 %36 to i32
  %38 = icmp ult i16 %36, -32767
  %39 = add nsw i32 %37, -32768
  %40 = select i1 %38, i32 %37, i32 %39
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 6
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %43 = load i32, ptr %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %46 = load i16, ptr %45, align 2
  %47 = zext i16 %46 to i64
  %48 = shl nuw nsw i64 %47, 32
  %49 = or i64 %48, %44
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %16, i32 0, i32 7
  store i64 %49, ptr %50, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %51

51:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_convert_to_initialized_enter(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %69, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %69, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %44 = load i32, ptr %43, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 3
  store i32 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = load i32, ptr %3, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 5
  store i32 %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %52 = load i16, ptr %51, align 4
  %53 = zext i16 %52 to i32
  %54 = icmp ult i16 %52, -32767
  %55 = add nsw i32 %53, -32768
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 6
  store i32 %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %59 = load i32, ptr %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %62 = load i16, ptr %61, align 2
  %63 = zext i16 %62 to i64
  %64 = shl nuw nsw i64 %63, 32
  %65 = or i64 %64, %60
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %22, i32 0, i32 7
  store i64 %65, ptr %66, align 8
  %67 = load i32, ptr %6, align 4
  %68 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 44, i32 noundef %67, ptr noundef %0, i64 noundef 1, ptr noundef %68, ptr noundef %14, ptr noundef null) #26
  br label %69

69:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_convert_to_initialized_fastpath(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %70, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 56) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %70, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 3
  store i32 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 4
  store i32 %32, ptr %33, align 4
  %34 = load i32, ptr %3, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 5
  store i32 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %37 = load i16, ptr %36, align 4
  %38 = zext i16 %37 to i32
  %39 = icmp ult i16 %37, -32767
  %40 = add nsw i32 %38, -32768
  %41 = select i1 %39, i32 %38, i32 %40
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 6
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %44 = load i32, ptr %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %47 = load i16, ptr %46, align 2
  %48 = zext i16 %47 to i64
  %49 = shl nuw nsw i64 %48, 32
  %50 = or i64 %49, %45
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 7
  store i64 %50, ptr %51, align 8
  %52 = load i32, ptr %4, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 8
  store i32 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 1
  %55 = load i16, ptr %54, align 4
  %56 = zext i16 %55 to i32
  %57 = icmp ult i16 %55, -32767
  %58 = add nsw i32 %56, -32768
  %59 = select i1 %57, i32 %56, i32 %58
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 9
  store i32 %59, ptr %60, align 4
  %61 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 3
  %62 = load i32, ptr %61, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 2
  %65 = load i16, ptr %64, align 2
  %66 = zext i16 %65 to i64
  %67 = shl nuw nsw i64 %66, 32
  %68 = or i64 %67, %63
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %17, i32 0, i32 10
  store i64 %68, ptr %69, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %70

70:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_convert_to_initialized_fastpath(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %88, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %88, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %45 = load i32, ptr %44, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 3
  store i32 %45, ptr %46, align 8
  %47 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %48 = load i32, ptr %47, align 4
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 4
  store i32 %48, ptr %49, align 4
  %50 = load i32, ptr %3, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 5
  store i32 %50, ptr %51, align 8
  %52 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %53 = load i16, ptr %52, align 4
  %54 = zext i16 %53 to i32
  %55 = icmp ult i16 %53, -32767
  %56 = add nsw i32 %54, -32768
  %57 = select i1 %55, i32 %54, i32 %56
  %58 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 6
  store i32 %57, ptr %58, align 4
  %59 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %60 = load i32, ptr %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %63 = load i16, ptr %62, align 2
  %64 = zext i16 %63 to i64
  %65 = shl nuw nsw i64 %64, 32
  %66 = or i64 %65, %61
  %67 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 7
  store i64 %66, ptr %67, align 8
  %68 = load i32, ptr %4, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 8
  store i32 %68, ptr %69, align 8
  %70 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 1
  %71 = load i16, ptr %70, align 4
  %72 = zext i16 %71 to i32
  %73 = icmp ult i16 %71, -32767
  %74 = add nsw i32 %72, -32768
  %75 = select i1 %73, i32 %72, i32 %74
  %76 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 9
  store i32 %75, ptr %76, align 4
  %77 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 3
  %78 = load i32, ptr %77, align 4
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %struct.ext4_extent, ptr %4, i32 0, i32 2
  %81 = load i16, ptr %80, align 2
  %82 = zext i16 %81 to i64
  %83 = shl nuw nsw i64 %82, 32
  %84 = or i64 %83, %79
  %85 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %23, i32 0, i32 10
  store i64 %84, ptr %85, align 8
  %86 = load i32, ptr %7, align 4
  %87 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 60, i32 noundef %86, ptr noundef %0, i64 noundef 1, ptr noundef %87, ptr noundef %15, ptr noundef null) #26
  br label %88

88:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__map_blocks_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 28) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %17, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__map_blocks_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %23, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__map_blocks_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %41, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 48) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 3
  store i32 %2, ptr %28, align 8
  %29 = load i64, ptr %3, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 4
  store i64 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 1
  %32 = load i32, ptr %31, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 5
  store i32 %32, ptr %33, align 8
  %34 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 2
  %35 = load i32, ptr %34, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 6
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 3
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 7
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %17, i32 0, i32 8
  store i32 %4, ptr %40, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %41

41:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__map_blocks_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %59, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 3
  store i32 %2, ptr %44, align 8
  %45 = load i64, ptr %3, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 4
  store i64 %45, ptr %46, align 8
  %47 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 1
  %48 = load i32, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 5
  store i32 %48, ptr %49, align 8
  %50 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 2
  %51 = load i32, ptr %50, align 4
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 6
  store i32 %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.ext4_map_blocks, ptr %3, i32 0, i32 3
  %54 = load i32, ptr %53, align 8
  %55 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 7
  store i32 %54, ptr %55, align 8
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %23, i32 0, i32 8
  store i32 %4, ptr %56, align 4
  %57 = load i32, ptr %7, align 4
  %58 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 52, i32 noundef %57, ptr noundef %0, i64 noundef 1, ptr noundef %58, ptr noundef %15, ptr noundef null) #26
  br label %59

59:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_load_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %29, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %16, i32 0, i32 3
  store i64 %3, ptr %27, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %16, i32 0, i32 4
  store i32 %2, ptr %28, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %29

29:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_load_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %22, i32 0, i32 3
  store i64 %3, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %22, i32 0, i32 4
  store i32 %2, ptr %44, align 8
  %45 = load i32, ptr %6, align 4
  %46 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %14, ptr noundef null) #26
  br label %47

47:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_load_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_load_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_journal_start(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %28, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 28) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %18, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %18, i32 0, i32 2
  store i32 %5, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %18, i32 0, i32 3
  store i32 %2, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %18, i32 0, i32 4
  store i32 %3, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %18, i32 0, i32 5
  store i32 %4, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %28

28:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_journal_start(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %24, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %24, i32 0, i32 2
  store i32 %5, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %24, i32 0, i32 3
  store i32 %2, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %24, i32 0, i32 4
  store i32 %3, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %24, i32 0, i32 5
  store i32 %4, ptr %43, align 4
  %44 = load i32, ptr %8, align 4
  %45 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 28, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %16, ptr noundef null) #26
  br label %46

46:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_journal_start_reserved(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %16, i32 0, i32 2
  store i32 %3, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %16, i32 0, i32 3
  store i32 %2, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_journal_start_reserved(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %22, i32 0, i32 2
  store i32 %3, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %22, i32 0, i32 3
  store i32 %2, ptr %39, align 4
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__trim(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %30, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 28) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = lshr i32 %21, 20
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %17, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = load i32, ptr %20, align 8
  %25 = and i32 %24, 1048575
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %17, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %17, i32 0, i32 3
  store i32 %2, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %17, i32 0, i32 4
  store i32 %3, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %17, i32 0, i32 5
  store i32 %4, ptr %29, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %30

30:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__trim(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %48, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %48, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = lshr i32 %37, 20
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %23, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = load i32, ptr %36, align 8
  %41 = and i32 %40, 1048575
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %23, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %23, i32 0, i32 3
  store i32 %2, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %23, i32 0, i32 4
  store i32 %3, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %23, i32 0, i32 5
  store i32 %4, ptr %45, align 4
  %46 = load i32, ptr %7, align 4
  %47 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %46, ptr noundef %0, i64 noundef 1, ptr noundef %47, ptr noundef %15, ptr noundef null) #26
  br label %48

48:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_handle_unwritten_extents(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i64 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %40, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 48) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 1
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 1
  store i32 %24, ptr %25, align 8
  %26 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 2
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 3
  store i32 %3, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = load i64, ptr %2, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 5
  store i64 %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 6
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 7
  store i32 %4, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %18, i32 0, i32 8
  store i64 %5, ptr %39, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %40

40:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_handle_unwritten_extents(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i32 noundef %4, i64 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %58, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %58, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.super_block, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 1
  store i32 %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 3
  store i32 %3, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %47 = load i32, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = load i64, ptr %2, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 5
  store i64 %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 6
  store i32 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 7
  store i32 %4, ptr %54, align 4
  %55 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %24, i32 0, i32 8
  store i64 %5, ptr %55, align 8
  %56 = load i32, ptr %8, align 4
  %57 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 52, i32 noundef %56, ptr noundef %0, i64 noundef 1, ptr noundef %57, ptr noundef %16, ptr noundef null) #26
  br label %58

58:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_get_implied_cluster_alloc_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %34, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 40) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %34, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 3
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 2
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %26 = load i32, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 3
  store i32 %26, ptr %27, align 8
  %28 = load i64, ptr %2, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 4
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 5
  store i32 %31, ptr %32, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %16, i32 0, i32 6
  store i32 %3, ptr %33, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %34

34:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_get_implied_cluster_alloc_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %52, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %52, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 3
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 2
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 1
  %42 = load i32, ptr %41, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 3
  store i32 %42, ptr %43, align 8
  %44 = load i64, ptr %2, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 4
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.ext4_map_blocks, ptr %2, i32 0, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 5
  store i32 %47, ptr %48, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %22, i32 0, i32 6
  store i32 %3, ptr %49, align 4
  %50 = load i32, ptr %6, align 4
  %51 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 44, i32 noundef %50, ptr noundef %0, i64 noundef 1, ptr noundef %51, ptr noundef %14, ptr noundef null) #26
  br label %52

52:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_show_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %17, i32 0, i32 3
  store i64 %3, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %17, i32 0, i32 4
  store i32 %2, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %17, i32 0, i32 5
  store i16 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_show_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3, i16 noundef zeroext %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %23, i32 0, i32 3
  store i64 %3, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %23, i32 0, i32 4
  store i32 %2, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %23, i32 0, i32 5
  store i16 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_remove_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i64 noundef %4, ptr nocapture noundef readonly %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %57, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 56) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %57, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.super_block, ptr %22, i32 0, i32 1
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 1
  store i32 %24, ptr %25, align 8
  %26 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 2
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 3
  store i32 %3, ptr %29, align 8
  %30 = trunc i64 %4 to i32
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 4
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 3
  %33 = load i32, ptr %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 2
  %36 = load i16, ptr %35, align 2
  %37 = zext i16 %36 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = or i64 %38, %34
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 5
  store i64 %39, ptr %40, align 8
  %41 = load i32, ptr %2, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 6
  store i32 %41, ptr %42, align 8
  %43 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 1
  %44 = load i16, ptr %43, align 4
  %45 = icmp ult i16 %44, -32767
  %46 = xor i16 %44, -32768
  %47 = select i1 %45, i16 %44, i16 %46
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 7
  store i16 %47, ptr %48, align 4
  %49 = load i64, ptr %5, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 8
  store i64 %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 1
  %52 = load i32, ptr %51, align 8
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 9
  store i32 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 2
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %18, i32 0, i32 10
  store i32 %55, ptr %56, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %57

57:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_remove_blocks(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3, i64 noundef %4, ptr nocapture noundef readonly %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %75, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %75, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.super_block, ptr %38, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 1
  store i32 %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 2
  store i32 %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 3
  store i32 %3, ptr %45, align 8
  %46 = trunc i64 %4 to i32
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 4
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 2
  %52 = load i16, ptr %51, align 2
  %53 = zext i16 %52 to i64
  %54 = shl nuw nsw i64 %53, 32
  %55 = or i64 %54, %50
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 5
  store i64 %55, ptr %56, align 8
  %57 = load i32, ptr %2, align 4
  %58 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 6
  store i32 %57, ptr %58, align 8
  %59 = getelementptr inbounds %struct.ext4_extent, ptr %2, i32 0, i32 1
  %60 = load i16, ptr %59, align 4
  %61 = icmp ult i16 %60, -32767
  %62 = xor i16 %60, -32768
  %63 = select i1 %61, i16 %60, i16 %62
  %64 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 7
  store i16 %63, ptr %64, align 4
  %65 = load i64, ptr %5, align 8
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 8
  store i64 %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 1
  %68 = load i32, ptr %67, align 8
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 9
  store i32 %68, ptr %69, align 8
  %70 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 2
  %71 = load i32, ptr %70, align 4
  %72 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %24, i32 0, i32 10
  store i32 %71, ptr %72, align 4
  %73 = load i32, ptr %8, align 4
  %74 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 60, i32 noundef %73, ptr noundef %0, i64 noundef 1, ptr noundef %74, ptr noundef %16, ptr noundef null) #26
  br label %75

75:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_rm_leaf(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %54, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 56) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 3
  store i32 %2, ptr %28, align 8
  %29 = load i32, ptr %3, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 4
  store i32 %29, ptr %30, align 4
  %31 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %32 = load i32, ptr %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %35 = load i16, ptr %34, align 2
  %36 = zext i16 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = or i64 %37, %33
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 5
  store i64 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %41 = load i16, ptr %40, align 4
  %42 = icmp ult i16 %41, -32767
  %43 = xor i16 %41, -32768
  %44 = select i1 %42, i16 %41, i16 %43
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 6
  store i16 %44, ptr %45, align 8
  %46 = load i64, ptr %4, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 7
  store i64 %46, ptr %47, align 8
  %48 = getelementptr inbounds %struct.partial_cluster, ptr %4, i32 0, i32 1
  %49 = load i32, ptr %48, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 8
  store i32 %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.partial_cluster, ptr %4, i32 0, i32 2
  %52 = load i32, ptr %51, align 4
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %17, i32 0, i32 9
  store i32 %52, ptr %53, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %54

54:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_rm_leaf(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr nocapture noundef readonly %3, ptr nocapture noundef readonly %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %72, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %72, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 3
  store i32 %2, ptr %44, align 8
  %45 = load i32, ptr %3, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 4
  store i32 %45, ptr %46, align 4
  %47 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 3
  %48 = load i32, ptr %47, align 4
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 2
  %51 = load i16, ptr %50, align 2
  %52 = zext i16 %51 to i64
  %53 = shl nuw nsw i64 %52, 32
  %54 = or i64 %53, %49
  %55 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 5
  store i64 %54, ptr %55, align 8
  %56 = getelementptr inbounds %struct.ext4_extent, ptr %3, i32 0, i32 1
  %57 = load i16, ptr %56, align 4
  %58 = icmp ult i16 %57, -32767
  %59 = xor i16 %57, -32768
  %60 = select i1 %58, i16 %57, i16 %59
  %61 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 6
  store i16 %60, ptr %61, align 8
  %62 = load i64, ptr %4, align 8
  %63 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 7
  store i64 %62, ptr %63, align 8
  %64 = getelementptr inbounds %struct.partial_cluster, ptr %4, i32 0, i32 1
  %65 = load i32, ptr %64, align 8
  %66 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 8
  store i32 %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.partial_cluster, ptr %4, i32 0, i32 2
  %68 = load i32, ptr %67, align 4
  %69 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %23, i32 0, i32 9
  store i32 %68, ptr %69, align 4
  %70 = load i32, ptr %7, align 4
  %71 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 60, i32 noundef %70, ptr noundef %0, i64 noundef 1, ptr noundef %71, ptr noundef %15, ptr noundef null) #26
  br label %72

72:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_rm_idx(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 24) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %15, i32 0, i32 3
  store i64 %2, ptr %26, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_rm_idx(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %21, i32 0, i32 3
  store i64 %2, ptr %42, align 8
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 28, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_remove_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 28) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %17, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_remove_space(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %23, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_ext_remove_space_done(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, i16 noundef zeroext %6) #0 {
  %8 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, i8 0, i32 24, i1 false), !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 704
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13, !prof !10

13:                                               ; preds = %7
  %14 = and i32 %10, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18, !prof !11

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %17, label %42, label %18

18:                                               ; preds = %16, %13, %7
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %8, ptr noundef %0, i32 noundef 56) #26
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.super_block, ptr %23, i32 0, i32 1
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 1
  store i32 %25, ptr %26, align 8
  %27 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 2
  store i32 %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 3
  store i32 %2, ptr %30, align 8
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 4
  store i32 %3, ptr %31, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 5
  store i32 %4, ptr %32, align 8
  %33 = load i64, ptr %5, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 6
  store i64 %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 7
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 2
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 8
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %19, i32 0, i32 9
  store i16 %6, ptr %41, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %8) #26
  br label %42

42:                                               ; preds = %21, %18, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_ext_remove_space_done(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5, i16 noundef zeroext %6) #0 {
  %8 = alloca ptr, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store ptr null, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #26
  store i32 0, ptr %9, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #13, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %7
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %60, label %24

24:                                               ; preds = %21, %7
  %25 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %8, ptr noundef nonnull %9) #26
  %26 = icmp eq ptr %25, null
  br i1 %26, label %60, label %27

27:                                               ; preds = %24
  %28 = load ptr, ptr %8, align 4
  %29 = call ptr @llvm.returnaddress(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %28, i32 0, i32 15
  store i32 %30, ptr %31, align 4
  %32 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %28, i32 0, i32 11
  store i32 %33, ptr %34, align 4
  %35 = call i32 @llvm.read_register.i32(metadata !0) #26
  %36 = getelementptr [18 x i32], ptr %28, i32 0, i32 13
  store i32 %35, ptr %36, align 4
  %37 = getelementptr [18 x i32], ptr %28, i32 0, i32 16
  store i32 19, ptr %37, align 4
  %38 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.super_block, ptr %39, i32 0, i32 1
  %41 = load i32, ptr %40, align 8
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 1
  store i32 %41, ptr %42, align 8
  %43 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 2
  store i32 %44, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 3
  store i32 %2, ptr %46, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 4
  store i32 %3, ptr %47, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 5
  store i32 %4, ptr %48, align 8
  %49 = load i64, ptr %5, align 8
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 6
  store i64 %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 1
  %52 = load i32, ptr %51, align 8
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 7
  store i32 %52, ptr %53, align 8
  %54 = getelementptr inbounds %struct.partial_cluster, ptr %5, i32 0, i32 2
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 8
  store i32 %55, ptr %56, align 4
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %25, i32 0, i32 9
  store i16 %6, ptr %57, align 8
  %58 = load i32, ptr %9, align 4
  %59 = load ptr, ptr %8, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %25, i32 noundef 60, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %17, ptr noundef null) #26
  br label %60

60:                                               ; preds = %27, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__es_extent(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %42, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 40) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %42, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 3
  store i32 %27, ptr %28, align 8
  %29 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 4
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 576460752303423487
  %35 = icmp eq i64 %34, 576460752303423487
  %36 = select i1 %35, i64 0, i64 %34
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 5
  store i64 %36, ptr %37, align 8
  %38 = load i64, ptr %32, align 8
  %39 = lshr i64 %38, 59
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %15, i32 0, i32 6
  store i8 %40, ptr %41, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %42

42:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__es_extent(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %60, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 3
  store i32 %43, ptr %44, align 8
  %45 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %46 = load i32, ptr %45, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 4
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, 576460752303423487
  %51 = icmp eq i64 %50, 576460752303423487
  %52 = select i1 %51, i64 0, i64 %50
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 5
  store i64 %52, ptr %53, align 8
  %54 = load i64, ptr %48, align 8
  %55 = lshr i64 %54, 59
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %21, i32 0, i32 6
  store i8 %56, ptr %57, align 8
  %58 = load i32, ptr %5, align 4
  %59 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %13, ptr noundef null) #26
  br label %60

60:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_remove_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %31, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = zext i32 %2 to i64
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %16, i32 0, i32 3
  store i64 %27, ptr %28, align 8
  %29 = zext i32 %3 to i64
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %16, i32 0, i32 4
  store i64 %29, ptr %30, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %31

31:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_remove_extent(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %49, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %49, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = zext i32 %2 to i64
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %22, i32 0, i32 3
  store i64 %43, ptr %44, align 8
  %45 = zext i32 %3 to i64
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %22, i32 0, i32 4
  store i64 %45, ptr %46, align 8
  %47 = load i32, ptr %6, align 4
  %48 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %14, ptr noundef null) #26
  br label %49

49:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_find_extent_range_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_find_extent_range_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_find_extent_range_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %42, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 40) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %42, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 3
  store i32 %27, ptr %28, align 8
  %29 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 4
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 576460752303423487
  %35 = icmp eq i64 %34, 576460752303423487
  %36 = select i1 %35, i64 0, i64 %34
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 5
  store i64 %36, ptr %37, align 8
  %38 = load i64, ptr %32, align 8
  %39 = lshr i64 %38, 59
  %40 = trunc i64 %39 to i8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %15, i32 0, i32 6
  store i8 %40, ptr %41, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %42

42:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_find_extent_range_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %60, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %43 = load i32, ptr %42, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 3
  store i32 %43, ptr %44, align 8
  %45 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %46 = load i32, ptr %45, align 8
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 4
  store i32 %46, ptr %47, align 4
  %48 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %49 = load i64, ptr %48, align 8
  %50 = and i64 %49, 576460752303423487
  %51 = icmp eq i64 %50, 576460752303423487
  %52 = select i1 %51, i64 0, i64 %50
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 5
  store i64 %52, ptr %53, align 8
  %54 = load i64, ptr %48, align 8
  %55 = lshr i64 %54, 59
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %21, i32 0, i32 6
  store i8 %56, ptr %57, align 8
  %58 = load i32, ptr %5, align 4
  %59 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 44, i32 noundef %58, ptr noundef %0, i64 noundef 1, ptr noundef %59, ptr noundef %13, ptr noundef null) #26
  br label %60

60:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_lookup_extent_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_lookup_extent_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_lookup_extent_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %44, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 40) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 3
  store i32 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 4
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %34 = load i64, ptr %33, align 8
  %35 = and i64 %34, 576460752303423487
  %36 = icmp eq i64 %35, 576460752303423487
  %37 = select i1 %36, i64 0, i64 %35
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 5
  store i64 %37, ptr %38, align 8
  %39 = load i64, ptr %33, align 8
  %40 = lshr i64 %39, 59
  %41 = trunc i64 %40 to i8
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 6
  store i8 %41, ptr %42, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %16, i32 0, i32 7
  store i32 %3, ptr %43, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %44

44:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_lookup_extent_exit(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %62, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %62, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %44 = load i32, ptr %43, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 3
  store i32 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %47 = load i32, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 4
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %50 = load i64, ptr %49, align 8
  %51 = and i64 %50, 576460752303423487
  %52 = icmp eq i64 %51, 576460752303423487
  %53 = select i1 %52, i64 0, i64 %51
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 5
  store i64 %53, ptr %54, align 8
  %55 = load i64, ptr %49, align 8
  %56 = lshr i64 %55, 59
  %57 = trunc i64 %56 to i8
  %58 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 6
  store i8 %57, ptr %58, align 8
  %59 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %22, i32 0, i32 7
  store i32 %3, ptr %59, align 4
  %60 = load i32, ptr %6, align 4
  %61 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 44, i32 noundef %60, ptr noundef %0, i64 noundef 1, ptr noundef %61, ptr noundef %14, ptr noundef null) #26
  br label %62

62:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4__es_shrink_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %16, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4__es_shrink_enter(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %22, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_shrink_scan_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %16, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_shrink_scan_exit(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %22, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_collapse_range(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %29, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %16, i32 0, i32 3
  store i64 %2, ptr %27, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %16, i32 0, i32 4
  store i64 %3, ptr %28, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %29

29:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_collapse_range(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %22, i32 0, i32 3
  store i64 %2, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %22, i32 0, i32 4
  store i64 %3, ptr %44, align 8
  %45 = load i32, ptr %6, align 4
  %46 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %14, ptr noundef null) #26
  br label %47

47:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_insert_range(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %29, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %16, i32 0, i32 3
  store i64 %2, ptr %27, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %16, i32 0, i32 4
  store i64 %3, ptr %28, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %29

29:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_insert_range(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %47, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %22, i32 0, i32 3
  store i64 %2, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %22, i32 0, i32 4
  store i64 %3, ptr %44, align 8
  %45 = load i32, ptr %6, align 4
  %46 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %14, ptr noundef null) #26
  br label %47

47:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_shrink(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %34, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 32) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %18, i32 0, i32 1
  store i32 %22, ptr %23, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %18, i32 0, i32 2
  store i32 %2, ptr %24, align 4
  %25 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %3, i32 0) #27, !srcloc !13
  %26 = extractvalue { i64, i32 } %25, 0
  %27 = extractvalue { i64, i32 } %25, 1
  %28 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %3, i64 %26, i32 %27) #27, !srcloc !14
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = lshr i64 %29, 9
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %18, i32 0, i32 3
  store i64 %30, ptr %31, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %18, i32 0, i32 4
  store i32 %4, ptr %32, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %18, i32 0, i32 5
  store i32 %5, ptr %33, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %34

34:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_shrink(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i64 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %52, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %24, i32 0, i32 1
  store i32 %38, ptr %39, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %24, i32 0, i32 2
  store i32 %2, ptr %40, align 4
  %41 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -9002011107970261189, i64 %3, i32 0) #27, !srcloc !13
  %42 = extractvalue { i64, i32 } %41, 0
  %43 = extractvalue { i64, i32 } %41, 1
  %44 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -9002011107970261189, i64 %3, i64 %42, i32 %43) #27, !srcloc !14
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = lshr i64 %45, 9
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %24, i32 0, i32 3
  store i64 %46, ptr %47, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %24, i32 0, i32 4
  store i32 %4, ptr %48, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %24, i32 0, i32 5
  store i32 %5, ptr %49, align 4
  %50 = load i32, ptr %8, align 4
  %51 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 36, i32 noundef %50, ptr noundef %0, i64 noundef 1, ptr noundef %51, ptr noundef %16, ptr noundef null) #26
  br label %52

52:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_es_insert_delayed_block(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i1 noundef zeroext %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  %6 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %4
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %45, label %16

16:                                               ; preds = %14, %11, %4
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 40) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 8
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 3
  store i32 %29, ptr %30, align 8
  %31 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %32 = load i32, ptr %31, align 8
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 4
  store i32 %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %35 = load i64, ptr %34, align 8
  %36 = and i64 %35, 576460752303423487
  %37 = icmp eq i64 %36, 576460752303423487
  %38 = select i1 %37, i64 0, i64 %36
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 5
  store i64 %38, ptr %39, align 8
  %40 = load i64, ptr %34, align 8
  %41 = lshr i64 %40, 59
  %42 = trunc i64 %41 to i8
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 6
  store i8 %42, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %17, i32 0, i32 7
  store i8 %6, ptr %44, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %45

45:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_es_insert_delayed_block(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, i1 noundef zeroext %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  %7 = zext i1 %3 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %4
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %63, label %22

22:                                               ; preds = %19, %4
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %63, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %5, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 8
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 1
  %45 = load i32, ptr %44, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 3
  store i32 %45, ptr %46, align 8
  %47 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 2
  %48 = load i32, ptr %47, align 8
  %49 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 4
  store i32 %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.extent_status, ptr %2, i32 0, i32 3
  %51 = load i64, ptr %50, align 8
  %52 = and i64 %51, 576460752303423487
  %53 = icmp eq i64 %52, 576460752303423487
  %54 = select i1 %53, i64 0, i64 %52
  %55 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 5
  store i64 %54, ptr %55, align 8
  %56 = load i64, ptr %50, align 8
  %57 = lshr i64 %56, 59
  %58 = trunc i64 %57 to i8
  %59 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 6
  store i8 %58, ptr %59, align 8
  %60 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %23, i32 0, i32 7
  store i8 %7, ptr %60, align 1
  %61 = load i32, ptr %6, align 4
  %62 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 44, i32 noundef %61, ptr noundef %0, i64 noundef 1, ptr noundef %62, ptr noundef %15, ptr noundef null) #26
  br label %63

63:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fsmap_class(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #0 {
  %8 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, i8 0, i32 24, i1 false), !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 704
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13, !prof !10

13:                                               ; preds = %7
  %14 = and i32 %10, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18, !prof !11

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %17, label %39, label %18

18:                                               ; preds = %16, %13, %7
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %8, ptr noundef %0, i32 noundef 48) #26
  %20 = icmp eq ptr %19, null
  br i1 %20, label %39, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.block_device, ptr %23, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 1
  store i32 %25, ptr %26, align 8
  %27 = and i32 %2, 255
  %28 = lshr i32 %2, 12
  %29 = and i32 %28, 1048320
  %30 = or i32 %29, %27
  %31 = shl i32 %2, 12
  %32 = and i32 %31, -1048576
  %33 = or i32 %30, %32
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 2
  store i32 %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 3
  store i32 %3, ptr %35, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 4
  store i64 %4, ptr %36, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 5
  store i64 %5, ptr %37, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %19, i32 0, i32 6
  store i64 %6, ptr %38, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %8) #26
  br label %39

39:                                               ; preds = %21, %18, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fsmap_class(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, i64 noundef %5, i64 noundef %6) #0 {
  %8 = alloca ptr, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store ptr null, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #26
  store i32 0, ptr %9, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #13, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %7
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %57, label %24

24:                                               ; preds = %21, %7
  %25 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %8, ptr noundef nonnull %9) #26
  %26 = icmp eq ptr %25, null
  br i1 %26, label %57, label %27

27:                                               ; preds = %24
  %28 = load ptr, ptr %8, align 4
  %29 = call ptr @llvm.returnaddress(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %28, i32 0, i32 15
  store i32 %30, ptr %31, align 4
  %32 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %28, i32 0, i32 11
  store i32 %33, ptr %34, align 4
  %35 = call i32 @llvm.read_register.i32(metadata !0) #26
  %36 = getelementptr [18 x i32], ptr %28, i32 0, i32 13
  store i32 %35, ptr %36, align 4
  %37 = getelementptr [18 x i32], ptr %28, i32 0, i32 16
  store i32 19, ptr %37, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.block_device, ptr %39, i32 0, i32 5
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 1
  store i32 %41, ptr %42, align 8
  %43 = and i32 %2, 255
  %44 = lshr i32 %2, 12
  %45 = and i32 %44, 1048320
  %46 = or i32 %45, %43
  %47 = shl i32 %2, 12
  %48 = and i32 %47, -1048576
  %49 = or i32 %46, %48
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 2
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 3
  store i32 %3, ptr %51, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 4
  store i64 %4, ptr %52, align 8
  %53 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 5
  store i64 %5, ptr %53, align 8
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %25, i32 0, i32 6
  store i64 %6, ptr %54, align 8
  %55 = load i32, ptr %9, align 4
  %56 = load ptr, ptr %8, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %25, i32 noundef 52, i32 noundef %55, ptr noundef %0, i64 noundef 1, ptr noundef %56, ptr noundef %17, ptr noundef null) #26
  br label %57

57:                                               ; preds = %27, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_getfsmap_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %46, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 48) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.block_device, ptr %19, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 8
  %23 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 1
  %24 = load i32, ptr %23, align 8
  %25 = and i32 %24, 255
  %26 = lshr i32 %24, 12
  %27 = and i32 %26, 1048320
  %28 = or i32 %27, %25
  %29 = shl i32 %24, 12
  %30 = and i32 %29, -1048576
  %31 = or i32 %28, %30
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 2
  store i32 %31, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 3
  %34 = load i64, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 3
  store i64 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 5
  %37 = load i64, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 4
  store i64 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 4
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 5
  store i64 %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 2
  %43 = load i32, ptr %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %15, i32 0, i32 6
  store i64 %44, ptr %45, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %46

46:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_getfsmap_class(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %64, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %64, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.block_device, ptr %35, i32 0, i32 5
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 8
  %39 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 1
  %40 = load i32, ptr %39, align 8
  %41 = and i32 %40, 255
  %42 = lshr i32 %40, 12
  %43 = and i32 %42, 1048320
  %44 = or i32 %43, %41
  %45 = shl i32 %40, 12
  %46 = and i32 %45, -1048576
  %47 = or i32 %44, %46
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 2
  store i32 %47, ptr %48, align 4
  %49 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 3
  %50 = load i64, ptr %49, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 3
  store i64 %50, ptr %51, align 8
  %52 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 5
  %53 = load i64, ptr %52, align 8
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 4
  store i64 %53, ptr %54, align 8
  %55 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 4
  %56 = load i64, ptr %55, align 8
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 5
  store i64 %56, ptr %57, align 8
  %58 = getelementptr inbounds %struct.ext4_fsmap, ptr %2, i32 0, i32 2
  %59 = load i32, ptr %58, align 4
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %21, i32 0, i32 6
  store i64 %60, ptr %61, align 8
  %62 = load i32, ptr %5, align 4
  %63 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 52, i32 noundef %62, ptr noundef %0, i64 noundef 1, ptr noundef %63, ptr noundef %13, ptr noundef null) #26
  br label %64

64:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_shutdown(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_shutdown(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_error(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %16, i32 0, i32 2
  store ptr %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_error(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %22, i32 0, i32 2
  store ptr %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_prefetch_bitmaps(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %26, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 24) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %17, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %17, i32 0, i32 2
  store i32 %2, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %17, i32 0, i32 3
  store i32 %3, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %17, i32 0, i32 4
  store i32 %4, ptr %25, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %26

26:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_prefetch_bitmaps(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %23, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %23, i32 0, i32 2
  store i32 %2, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %23, i32 0, i32 3
  store i32 %3, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %23, i32 0, i32 4
  store i32 %4, ptr %41, align 4
  %42 = load i32, ptr %7, align 4
  %43 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %42, ptr noundef %0, i64 noundef 1, ptr noundef %43, ptr noundef %15, ptr noundef null) #26
  br label %44

44:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_lazy_itable_init(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %22, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %15, i32 0, i32 1
  store i32 %19, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %15, i32 0, i32 2
  store i32 %2, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %22

22:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_lazy_itable_init(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %40, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %21, i32 0, i32 1
  store i32 %35, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %21, i32 0, i32 2
  store i32 %2, ptr %37, align 4
  %38 = load i32, ptr %5, align 4
  %39 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %13, ptr noundef null) #26
  br label %40

40:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_replay_scan(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %16, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_replay_scan(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %22, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_replay(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %16, label %28, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 28) #26
  %19 = icmp eq ptr %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %18, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %18, i32 0, i32 2
  store i32 %2, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %18, i32 0, i32 3
  store i32 %3, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %18, i32 0, i32 4
  store i32 %4, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %18, i32 0, i32 5
  store i32 %5, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #26
  br label %28

28:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_replay(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #13, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %7, ptr noundef nonnull %8) #26
  %25 = icmp eq ptr %24, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #26
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %24, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %24, i32 0, i32 2
  store i32 %2, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %24, i32 0, i32 3
  store i32 %3, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %24, i32 0, i32 4
  store i32 %4, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %24, i32 0, i32 5
  store i32 %5, ptr %43, align 4
  %44 = load i32, ptr %8, align 4
  %45 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 28, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %16, ptr noundef null) #26
  br label %46

46:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_commit_start(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 12) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_start, ptr %14, i32 0, i32 1
  store i32 %18, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %20

20:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_commit_start(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %34 = load i32, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_start, ptr %20, i32 0, i32 1
  store i32 %34, ptr %35, align 4
  %36 = load i32, ptr %4, align 4
  %37 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 12, i32 noundef %36, ptr noundef %0, i64 noundef 1, ptr noundef %37, ptr noundef %12, ptr noundef null) #26
  br label %38

38:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_commit_stop(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %37, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  %24 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 162, i32 1
  %27 = load i32, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 4
  store i32 %27, ptr %28, align 4
  %29 = load ptr, ptr %24, align 4
  %30 = getelementptr inbounds %struct.ext4_sb_info, ptr %29, i32 0, i32 162, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 5
  store i32 %31, ptr %32, align 4
  %33 = load ptr, ptr %24, align 4
  %34 = getelementptr inbounds %struct.ext4_sb_info, ptr %33, i32 0, i32 162, i32 5
  %35 = load i32, ptr %34, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %16, i32 0, i32 6
  store i32 %35, ptr %36, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %37

37:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_commit_stop(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %55, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.ext4_sb_info, ptr %41, i32 0, i32 162, i32 1
  %43 = load i32, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 4
  store i32 %43, ptr %44, align 4
  %45 = load ptr, ptr %40, align 4
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %45, i32 0, i32 162, i32 2
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 5
  store i32 %47, ptr %48, align 4
  %49 = load ptr, ptr %40, align 4
  %50 = getelementptr inbounds %struct.ext4_sb_info, ptr %49, i32 0, i32 162, i32 5
  %51 = load i32, ptr %50, align 8
  %52 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %22, i32 0, i32 6
  store i32 %51, ptr %52, align 4
  %53 = load i32, ptr %6, align 4
  %54 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %53, ptr noundef %0, i64 noundef 1, ptr noundef %54, ptr noundef %14, ptr noundef null) #26
  br label %55

55:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_stats(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %3, i8 0, i32 24, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 704
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %13, label %8, !prof !10

8:                                                ; preds = %2
  %9 = and i32 %5, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13, !prof !11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %12, label %23, label %13

13:                                               ; preds = %11, %8, %2
  %14 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %3, ptr noundef %0, i32 noundef 20) #26
  %15 = icmp eq ptr %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %14, i32 0, i32 1
  store i32 %18, ptr %19, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %14, i32 0, i32 2
  store ptr %21, ptr %22, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %3) #26
  br label %23

23:                                               ; preds = %16, %13, %11
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_stats(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #13, !srcloc !12
  %11 = add i32 %10, %7
  %12 = inttoptr i32 %11 to ptr
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %2
  %17 = load volatile ptr, ptr %12, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %41, label %19

19:                                               ; preds = %16, %2
  %20 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %3, ptr noundef nonnull %4) #26
  %21 = icmp eq ptr %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %3, align 4
  %24 = call ptr @llvm.returnaddress(i32 0) #26
  %25 = ptrtoint ptr %24 to i32
  %26 = getelementptr [18 x i32], ptr %23, i32 0, i32 15
  store i32 %25, ptr %26, align 4
  %27 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %23, i32 0, i32 11
  store i32 %28, ptr %29, align 4
  %30 = call i32 @llvm.read_register.i32(metadata !0) #26
  %31 = getelementptr [18 x i32], ptr %23, i32 0, i32 13
  store i32 %30, ptr %31, align 4
  %32 = getelementptr [18 x i32], ptr %23, i32 0, i32 16
  store i32 19, ptr %32, align 4
  %33 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %34 = load i32, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %20, i32 0, i32 1
  store i32 %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %20, i32 0, i32 2
  store ptr %37, ptr %38, align 4
  %39 = load i32, ptr %4, align 4
  %40 = load ptr, ptr %3, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %20, i32 noundef 20, i32 noundef %39, ptr noundef %0, i64 noundef 1, ptr noundef %40, ptr noundef %12, ptr noundef null) #26
  br label %41

41:                                               ; preds = %22, %19, %16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_track_create(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %28, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %16, i32 0, i32 3
  store i32 %3, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %28

28:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_track_create(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %22, i32 0, i32 3
  store i32 %3, ptr %43, align 4
  %44 = load i32, ptr %6, align 4
  %45 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %14, ptr noundef null) #26
  br label %46

46:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_track_link(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %28, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %16, i32 0, i32 3
  store i32 %3, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %28

28:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_track_link(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %22, i32 0, i32 3
  store i32 %3, ptr %43, align 4
  %44 = load i32, ptr %6, align 4
  %45 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %14, ptr noundef null) #26
  br label %46

46:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_track_unlink(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %28, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 1
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %16, i32 0, i32 1
  store i32 %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %16, i32 0, i32 2
  store i32 %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %16, i32 0, i32 3
  store i32 %3, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %28

28:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_track_unlink(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readnone %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.super_block, ptr %36, i32 0, i32 1
  %38 = load i32, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %22, i32 0, i32 1
  store i32 %38, ptr %39, align 4
  %40 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %22, i32 0, i32 2
  store i32 %41, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %22, i32 0, i32 3
  store i32 %3, ptr %43, align 4
  %44 = load i32, ptr %6, align 4
  %45 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %14, ptr noundef null) #26
  br label %46

46:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_track_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %13, label %27, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 20) #26
  %16 = icmp eq ptr %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %15, i32 0, i32 1
  store i32 %21, ptr %22, align 4
  %23 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %15, i32 0, i32 2
  store i32 %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %15, i32 0, i32 3
  store i32 %2, ptr %26, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #26
  br label %27

27:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_track_inode(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #13, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %45, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #26
  %22 = icmp eq ptr %21, null
  br i1 %22, label %45, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #26
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #26
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %35 = load ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.super_block, ptr %35, i32 0, i32 1
  %37 = load i32, ptr %36, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %21, i32 0, i32 1
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %21, i32 0, i32 2
  store i32 %40, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %21, i32 0, i32 3
  store i32 %2, ptr %42, align 4
  %43 = load i32, ptr %5, align 4
  %44 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %43, ptr noundef %0, i64 noundef 1, ptr noundef %44, ptr noundef %13, ptr noundef null) #26
  br label %45

45:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_fc_track_range(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %15, label %31, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 28) #26
  %18 = icmp eq ptr %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 1
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %17, i32 0, i32 1
  store i32 %23, ptr %24, align 4
  %25 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %17, i32 0, i32 2
  store i32 %26, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %17, i32 0, i32 3
  store i32 %2, ptr %28, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %17, i32 0, i32 4
  store i32 %3, ptr %29, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %17, i32 0, i32 5
  store i32 %4, ptr %30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #26
  br label %31

31:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_fc_track_range(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #13, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %49, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %6, ptr noundef nonnull %7) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %49, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #26
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #26
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 1
  %39 = load i32, ptr %38, align 8
  %40 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %23, i32 0, i32 1
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 10
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %23, i32 0, i32 2
  store i32 %42, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %23, i32 0, i32 3
  store i32 %2, ptr %44, align 4
  %45 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %23, i32 0, i32 4
  store i32 %3, ptr %45, align 4
  %46 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %23, i32 0, i32 5
  store i32 %4, ptr %46, align 4
  %47 = load i32, ptr %7, align 4
  %48 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 28, i32 noundef %47, ptr noundef %0, i64 noundef 1, ptr noundef %48, ptr noundef %15, ptr noundef null) #26
  br label %49

49:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_ext4_update_sb(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #26
  br i1 %14, label %24, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 32) #26
  %17 = icmp eq ptr %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %16, i32 0, i32 1
  store i32 %20, ptr %21, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %16, i32 0, i32 2
  store i64 %2, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %16, i32 0, i32 3
  store i32 %3, ptr %23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #26
  br label %24

24:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_ext4_update_sb(ptr noundef %0, ptr nocapture noundef readonly %1, i64 noundef %2, i32 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #13, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %42, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %5, ptr noundef nonnull %6) #26
  %23 = icmp eq ptr %22, null
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #26
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #26
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 1
  %36 = load i32, ptr %35, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %22, i32 0, i32 1
  store i32 %36, ptr %37, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %22, i32 0, i32 2
  store i64 %2, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %22, i32 0, i32 3
  store i32 %3, ptr %39, align 8
  %40 = load i32, ptr %6, align 4
  %41 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %14, ptr noundef null) #26
  br label %42

42:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_read_bh_nowait(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = load volatile i32, ptr %0, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %3
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 180, 0\0A.popsection", ""() #26, !srcloc !15
  unreachable

8:                                                ; preds = %3
  %9 = load volatile i32, ptr %0, align 4
  %10 = and i32 %9, 1024
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = load volatile i32, ptr %0, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %0) #26
  br label %17

17:                                               ; preds = %16, %12, %8
  %18 = load volatile i32, ptr %0, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @unlock_buffer(ptr noundef %0) #26
  br label %29

22:                                               ; preds = %17
  tail call void @_clear_bit(i32 noundef 24, ptr noundef %0) #26
  %23 = icmp eq ptr %2, null
  %24 = select i1 %23, ptr @end_buffer_read_sync, ptr %2
  %25 = getelementptr inbounds %struct.buffer_head, ptr %0, i32 0, i32 7
  store ptr %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.buffer_head, ptr %0, i32 0, i32 11
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %26) #26, !srcloc !16
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %26, ptr %26, i32 1, ptr elementtype(i32) %26) #26, !srcloc !17
  %28 = tail call i32 @submit_bh(i32 noundef 0, i32 noundef %1, ptr noundef %0) #26
  br label %29

29:                                               ; preds = %22, %21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_read_bh(ptr noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = load volatile i32, ptr %0, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %3
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 191, 0\0A.popsection", ""() #26, !srcloc !18
  unreachable

8:                                                ; preds = %3
  %9 = load volatile i32, ptr %0, align 4
  %10 = and i32 %9, 1024
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = load volatile i32, ptr %0, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @_set_bit(i32 noundef 0, ptr noundef %0) #26
  br label %17

17:                                               ; preds = %16, %12, %8
  %18 = load volatile i32, ptr %0, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @unlock_buffer(ptr noundef %0) #26
  br label %38

22:                                               ; preds = %17
  tail call void @_clear_bit(i32 noundef 24, ptr noundef %0) #26
  %23 = icmp eq ptr %2, null
  %24 = select i1 %23, ptr @end_buffer_read_sync, ptr %2
  %25 = getelementptr inbounds %struct.buffer_head, ptr %0, i32 0, i32 7
  store ptr %24, ptr %25, align 4
  %26 = getelementptr inbounds %struct.buffer_head, ptr %0, i32 0, i32 11
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %26) #26, !srcloc !16
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %26, ptr %26, i32 1, ptr elementtype(i32) %26) #26, !srcloc !17
  %28 = tail call i32 @submit_bh(i32 noundef 0, i32 noundef %1, ptr noundef %0) #26
  %29 = load volatile i32, ptr %0, align 4
  %30 = and i32 %29, 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %22
  tail call void @__wait_on_buffer(ptr noundef %0) #26
  br label %33

33:                                               ; preds = %32, %22
  %34 = load volatile i32, ptr %0, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %36, i32 -5, i32 0
  br label %38

38:                                               ; preds = %33, %21
  %39 = phi i32 [ 0, %21 ], [ %37, %33 ]
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_read_bh_lock(ptr noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 {
  %4 = load volatile i32, ptr %0, align 4
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #26, !srcloc !16
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 4, ptr elementtype(i32) %0) #26, !srcloc !19
  %9 = extractvalue { i32, i32, i32 } %8, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !20
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %7
  br i1 %2, label %13, label %15

13:                                               ; preds = %12
  %14 = tail call i32 @ext4_read_bh(ptr noundef %0, i32 noundef %1, ptr noundef null)
  br label %27

15:                                               ; preds = %12
  tail call void @ext4_read_bh_nowait(ptr noundef %0, i32 noundef %1, ptr noundef null)
  br label %27

16:                                               ; preds = %7, %3
  br i1 %2, label %17, label %27

17:                                               ; preds = %16
  %18 = load volatile i32, ptr %0, align 4
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @__wait_on_buffer(ptr noundef %0) #26
  br label %22

22:                                               ; preds = %21, %17
  %23 = load volatile i32, ptr %0, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i32 -5, i32 0
  br label %27

27:                                               ; preds = %22, %16, %15, %13
  %28 = phi i32 [ %14, %13 ], [ 0, %15 ], [ %26, %22 ], [ 0, %16 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @ext4_sb_bread(ptr nocapture noundef readonly %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = tail call fastcc ptr @__ext4_sb_bread_gfp(ptr noundef %0, i64 noundef %1, i32 noundef %2, i32 noundef 8)
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @__ext4_sb_bread_gfp(ptr nocapture noundef readonly %0, i64 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %8 = load i32, ptr %7, align 16
  %9 = tail call ptr @__getblk_gfp(ptr noundef %6, i64 noundef %1, i32 noundef %8, i32 noundef %3) #26
  %10 = icmp eq ptr %9, null
  br i1 %10, label %51, label %11

11:                                               ; preds = %4
  %12 = load volatile i32, ptr %9, align 4
  %13 = and i32 %12, 1024
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = load volatile i32, ptr %9, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %9) #26
  br label %20

20:                                               ; preds = %19, %15, %11
  %21 = load volatile i32, ptr %9, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %51

24:                                               ; preds = %20
  %25 = or i32 %2, 4096
  %26 = load volatile i32, ptr %9, align 4
  %27 = and i32 %26, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %9) #26, !srcloc !16
  %30 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %9, ptr nonnull %9, i32 4, ptr nonnull elementtype(i32) %9) #26, !srcloc !19
  %31 = extractvalue { i32, i32, i32 } %30, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !20
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %29, %24
  %35 = load volatile i32, ptr %9, align 4
  %36 = and i32 %35, 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @__wait_on_buffer(ptr noundef nonnull %9) #26
  br label %39

39:                                               ; preds = %38, %34
  %40 = load volatile i32, ptr %9, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %51

43:                                               ; preds = %29
  %44 = tail call i32 @ext4_read_bh(ptr noundef nonnull %9, i32 noundef %25, ptr noundef null) #26
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %43, %39
  %47 = phi i32 [ %44, %43 ], [ -5, %39 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !21
  %48 = getelementptr inbounds %struct.buffer_head, ptr %9, i32 0, i32 11
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %48) #26, !srcloc !16
  %49 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %48, ptr %48, i32 1, ptr elementtype(i32) %48) #26, !srcloc !22
  %50 = inttoptr i32 %47 to ptr
  br label %51

51:                                               ; preds = %46, %43, %39, %20, %4
  %52 = phi ptr [ %50, %46 ], [ %9, %20 ], [ %9, %43 ], [ inttoptr (i32 -12 to ptr), %4 ], [ %9, %39 ]
  ret ptr %52
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @ext4_sb_bread_unmovable(ptr nocapture noundef readonly %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = tail call fastcc ptr @__ext4_sb_bread_gfp(ptr noundef %0, i64 noundef %1, i32 noundef 0, i32 noundef 0)
  ret ptr %3
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_sb_breadahead_unmovable(ptr nocapture noundef readonly %0, i64 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %6 = load i32, ptr %5, align 16
  %7 = tail call ptr @__getblk_gfp(ptr noundef %4, i64 noundef %1, i32 noundef %6, i32 noundef 0) #26
  %8 = icmp eq ptr %7, null
  br i1 %8, label %20, label %9, !prof !11

9:                                                ; preds = %2
  %10 = load volatile i32, ptr %7, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %7) #26, !srcloc !16
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %7, ptr nonnull %7, i32 4, ptr nonnull elementtype(i32) %7) #26, !srcloc !19
  %15 = extractvalue { i32, i32, i32 } %14, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !20
  %16 = and i32 %15, 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %13
  tail call void @ext4_read_bh_nowait(ptr noundef nonnull %7, i32 noundef 524288, ptr noundef null) #26
  br label %19

19:                                               ; preds = %18, %13, %9
  tail call void @__brelse(ptr noundef nonnull %7) #26
  br label %20

20:                                               ; preds = %19, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_superblock_csum(ptr nocapture noundef readonly %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = alloca %struct.anon.110, align 8
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i32 16, i1 false) #26, !annotation !9
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 119
  %7 = load ptr, ptr %6, align 8
  %8 = load i32, ptr %7, align 64
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %11, label %10, !prof !10

10:                                               ; preds = %2
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

11:                                               ; preds = %2
  store ptr %7, ptr %3, align 8
  %12 = getelementptr inbounds %struct.anon.110, ptr %3, i32 0, i32 1
  store i32 -1, ptr %12, align 8
  %13 = call i32 @crypto_shash_update(ptr noundef nonnull %3, ptr noundef %1, i32 noundef 1020) #26
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !10

15:                                               ; preds = %11
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

16:                                               ; preds = %11
  %17 = load i32, ptr %12, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #26
  ret i32 %17
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_chksum(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #3 {
  %5 = alloca %struct.anon.110, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i32 16, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 119
  %7 = load ptr, ptr %6, align 8
  %8 = load i32, ptr %7, align 64
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %11, label %10, !prof !10

10:                                               ; preds = %4
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

11:                                               ; preds = %4
  store ptr %7, ptr %5, align 8
  %12 = getelementptr inbounds %struct.anon.110, ptr %5, i32 0, i32 1
  store i32 %1, ptr %12, align 8
  %13 = call i32 @crypto_shash_update(ptr noundef nonnull %5, ptr noundef %2, i32 noundef %3) #26
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !10

15:                                               ; preds = %11
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

16:                                               ; preds = %11
  %17 = load i32, ptr %12, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #26
  ret i32 %17
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_superblock_csum_set(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = alloca %struct.anon.110, align 8
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 15
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ext4_super_block, ptr %6, i32 0, i32 30
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 1024
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %44, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 119
  %13 = load ptr, ptr %12, align 8
  %14 = icmp eq ptr %13, null
  %15 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %16 = xor i1 %15, true
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %29, !prof !11

18:                                               ; preds = %11
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %19 = load ptr, ptr %3, align 4
  %20 = getelementptr inbounds %struct.ext4_sb_info, ptr %19, i32 0, i32 15
  %21 = load ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.ext4_super_block, ptr %21, i32 0, i32 30
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 1024
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.ext4_sb_info, ptr %19, i32 0, i32 119
  %28 = load ptr, ptr %27, align 8
  br label %29

29:                                               ; preds = %26, %11
  %30 = phi ptr [ %28, %26 ], [ %13, %11 ]
  %31 = icmp eq ptr %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %2) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %2, i8 0, i32 16, i1 false) #26, !annotation !9
  %33 = load i32, ptr %30, align 64
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %36, label %35, !prof !10

35:                                               ; preds = %32
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

36:                                               ; preds = %32
  store ptr %30, ptr %2, align 8
  %37 = getelementptr inbounds %struct.anon.110, ptr %2, i32 0, i32 1
  store i32 -1, ptr %37, align 8
  %38 = call i32 @crypto_shash_update(ptr noundef nonnull %2, ptr noundef %6, i32 noundef 1020) #26
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !10

40:                                               ; preds = %36
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

41:                                               ; preds = %36
  %42 = load i32, ptr %37, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %2) #26
  %43 = getelementptr inbounds %struct.ext4_super_block, ptr %6, i32 0, i32 102
  store i32 %42, ptr %43, align 4
  br label %44

44:                                               ; preds = %41, %29, %18, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @ext4_block_bitmap(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = load i32, ptr %1, align 4
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = load i32, ptr %5, align 64
  %7 = icmp ugt i32 %6, 63
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 12
  %10 = load i32, ptr %9, align 4
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  br label %13

13:                                               ; preds = %8, %2
  %14 = phi i64 [ %12, %8 ], [ 0, %2 ]
  %15 = zext i32 %3 to i64
  %16 = or i64 %14, %15
  ret i64 %16
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @ext4_inode_bitmap(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 1
  %4 = load i32, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 13
  %11 = load i32, ptr %10, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i32 %4 to i64
  %17 = or i64 %15, %16
  ret i64 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i64 @ext4_inode_table(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 2
  %4 = load i32, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 14
  %11 = load i32, ptr %10, align 4
  %12 = zext i32 %11 to i64
  %13 = shl nuw i64 %12, 32
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i64 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i32 %4 to i64
  %17 = or i64 %15, %16
  ret i64 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @ext4_free_group_clusters(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 3
  %4 = load i16, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 15
  %11 = load i16, ptr %10, align 4
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i16 %4 to i32
  %17 = or i32 %15, %16
  ret i32 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @ext4_free_inodes_count(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 4
  %4 = load i16, ptr %3, align 2
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 16
  %11 = load i16, ptr %10, align 2
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i16 %4 to i32
  %17 = or i32 %15, %16
  ret i32 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @ext4_used_dirs_count(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 5
  %4 = load i16, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 17
  %11 = load i16, ptr %10, align 4
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i16 %4 to i32
  %17 = or i32 %15, %16
  ret i32 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local i32 @ext4_itable_unused_count(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 10
  %4 = load i16, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 18
  %11 = load i16, ptr %10, align 2
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = zext i16 %4 to i32
  %17 = or i32 %15, %16
  ret i32 %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_block_bitmap_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i64 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i64 %2 to i32
  store i32 %4, ptr %1, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = load i32, ptr %6, align 64
  %8 = icmp ugt i32 %7, 63
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = lshr i64 %2, 32
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 12
  store i32 %11, ptr %12, align 4
  br label %13

13:                                               ; preds = %9, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_inode_bitmap_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i64 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 1
  store i32 %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 13
  store i32 %12, ptr %13, align 4
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_inode_table_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i64 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i64 %2 to i32
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 2
  store i32 %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i64 %2, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 14
  store i32 %12, ptr %13, align 4
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_free_group_clusters_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 3
  store i16 %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i32 %2, 16
  %12 = trunc i32 %11 to i16
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 15
  store i16 %12, ptr %13, align 4
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_free_inodes_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 4
  store i16 %4, ptr %5, align 2
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i32 %2, 16
  %12 = trunc i32 %11 to i16
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 16
  store i16 %12, ptr %13, align 2
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_used_dirs_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 5
  store i16 %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i32 %2, 16
  %12 = trunc i32 %11 to i16
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 17
  store i16 %12, ptr %13, align 4
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define dso_local void @ext4_itable_unused_set(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 {
  %4 = trunc i32 %2 to i16
  %5 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 10
  store i16 %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = load i32, ptr %7, align 64
  %9 = icmp ugt i32 %8, 63
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = lshr i32 %2, 16
  %12 = trunc i32 %11 to i16
  %13 = getelementptr inbounds %struct.ext4_group_desc, ptr %1, i32 0, i32 18
  store i16 %12, ptr %13, align 2
  br label %14

14:                                               ; preds = %10, %3
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_error(ptr noundef %0, ptr noundef %1, i32 noundef %2, i1 noundef zeroext %3, i32 noundef %4, i64 noundef %5, ptr noundef %6, ...) local_unnamed_addr #0 {
  %8 = alloca %struct.fs_error_report, align 4
  %9 = alloca %struct.va_format, align 8
  %10 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #26
  store i64 0, ptr %9, align 8, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #26
  store i32 0, ptr %10, align 4, !annotation !9
  %11 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %12, i32 0, i32 48
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %61, !prof !10

17:                                               ; preds = %7
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 1), align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %44

20:                                               ; preds = %17
  %21 = tail call ptr @llvm.thread.pointer() #26
  %22 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %23 = load i32, ptr %22, align 8
  %24 = lshr i32 %23, 5
  %25 = getelementptr i32, ptr @__cpu_online_mask, i32 %24
  %26 = load volatile i32, ptr %25, align 4
  %27 = and i32 %23, 31
  %28 = shl nuw i32 1, %27
  %29 = and i32 %28, %26
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %20
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !25
  %32 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 7), align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %34, %31
  %35 = phi ptr [ %39, %34 ], [ %32, %31 ]
  %36 = load volatile ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.tracepoint_func, ptr %35, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  tail call void %36(ptr noundef %38, ptr noundef %0, ptr noundef %1, i32 noundef %2) #26
  %39 = getelementptr %struct.tracepoint_func, ptr %35, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %34

42:                                               ; preds = %34, %31
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !26
  %43 = load ptr, ptr %11, align 4
  br label %44

44:                                               ; preds = %42, %20, %17
  %45 = phi ptr [ %12, %17 ], [ %12, %20 ], [ %43, %42 ]
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %45, i32 0, i32 130
  %47 = tail call i32 @___ratelimit(ptr noundef %46, ptr noundef nonnull @.str.9) #26
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  call void @llvm.va_start(ptr nonnull %10)
  store ptr %6, ptr %9, align 8
  %50 = getelementptr inbounds %struct.va_format, ptr %9, i32 0, i32 1
  store ptr %10, ptr %50, align 4
  %51 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  %52 = tail call ptr @llvm.thread.pointer() #26
  %53 = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 85
  %54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef %51, ptr noundef %1, i32 noundef %2, ptr noundef %53, ptr noundef nonnull %9) #28
  call void @llvm.va_end(ptr nonnull %10)
  br label %55

55:                                               ; preds = %49, %44
  %56 = icmp eq i32 %4, 0
  %57 = select i1 %56, i32 117, i32 %4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #26
  store i32 %57, ptr %8, align 4
  %58 = getelementptr inbounds %struct.fs_error_report, ptr %8, i32 0, i32 1
  store ptr null, ptr %58, align 4
  %59 = getelementptr inbounds %struct.fs_error_report, ptr %8, i32 0, i32 2
  store ptr %0, ptr %59, align 4
  %60 = call i32 @fsnotify(i32 noundef 32768, ptr noundef nonnull %8, i32 noundef 4, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 0) #26
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #26
  call fastcc void @ext4_handle_error(ptr noundef %0, i1 noundef zeroext %3, i32 noundef %4, i32 noundef 0, i64 noundef %5, ptr noundef %1, i32 noundef %2)
  br label %61

61:                                               ; preds = %55, %7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #26
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #7

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #7

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ext4_handle_error(ptr noundef %0, i1 noundef zeroext %1, i32 noundef %2, i32 noundef %3, i64 noundef %4, ptr noundef %5, i32 noundef %6) unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ext4_sb_info, ptr %9, i32 0, i32 47
  %11 = load ptr, ptr %10, align 4
  br i1 %1, label %17, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %9, i32 0, i32 17
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, 16
  %16 = icmp ne i32 %15, 0
  br label %17

17:                                               ; preds = %12, %7
  %18 = phi i1 [ false, %7 ], [ %16, %12 ]
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %9, i32 0, i32 25
  %20 = load i16, ptr %19, align 8
  %21 = or i16 %20, 2
  store i16 %21, ptr %19, align 8
  %22 = load ptr, ptr %8, align 4
  %23 = getelementptr inbounds %struct.ext4_sb_info, ptr %22, i32 0, i32 17
  %24 = load i32, ptr %23, align 4
  %25 = and i32 %24, 33554432
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %17
  %28 = load i1, ptr @ext4_handle_error.__already_done, align 1
  br i1 %28, label %30, label %29, !prof !10

29:                                               ; preds = %27
  store i1 true, ptr @ext4_handle_error.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 664, i32 noundef 9, ptr noundef null) #26
  br label %30

30:                                               ; preds = %29, %27, %17
  br i1 %18, label %41, label %31

31:                                               ; preds = %30
  %32 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  %37 = load ptr, ptr %8, align 4
  %38 = getelementptr inbounds %struct.ext4_sb_info, ptr %37, i32 0, i32 19
  tail call void @_set_bit(i32 noundef 1, ptr noundef %38) #26
  %39 = icmp eq ptr %11, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @jbd2_journal_abort(ptr noundef nonnull %11, i32 noundef -5) #26
  br label %41

41:                                               ; preds = %40, %36, %31, %30
  %42 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %43 = load ptr, ptr %42, align 4
  %44 = getelementptr inbounds %struct.block_device, ptr %43, i32 0, i32 4
  %45 = load i8, ptr %44, align 8, !range !27
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %96

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.block_device, ptr %43, i32 0, i32 17
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds %struct.gendisk, ptr %49, i32 0, i32 7
  %51 = load ptr, ptr %50, align 4
  %52 = getelementptr inbounds %struct.block_device, ptr %51, i32 0, i32 4
  %53 = load i8, ptr %52, align 8, !range !27
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %96

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.gendisk, ptr %49, i32 0, i32 12
  %57 = load volatile i32, ptr %56, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %96

60:                                               ; preds = %55
  %61 = load ptr, ptr %8, align 4
  %62 = icmp eq i32 %2, 0
  %63 = select i1 %62, i32 117, i32 %2
  %64 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 141
  tail call void @_raw_spin_lock(ptr noundef %64) #26
  %65 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 142
  %66 = load i32, ptr %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, ptr %65, align 4
  %68 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 149
  store i32 %63, ptr %68, align 8
  %69 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 150
  store i32 %6, ptr %69, align 4
  %70 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 151
  store i32 %3, ptr %70, align 16
  %71 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 152
  store i64 %4, ptr %71, align 8
  %72 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 153
  store ptr %5, ptr %72, align 64
  %73 = tail call i64 @ktime_get_real_seconds() #26
  %74 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 154
  store i64 %73, ptr %74, align 8
  %75 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 148
  %76 = load i64, ptr %75, align 32
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %60
  %79 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 143
  store i32 %63, ptr %79, align 64
  %80 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 144
  store i32 %6, ptr %80, align 4
  %81 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 145
  store i32 %3, ptr %81, align 8
  %82 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 146
  store i64 %4, ptr %82, align 16
  %83 = getelementptr inbounds %struct.ext4_sb_info, ptr %61, i32 0, i32 147
  store ptr %5, ptr %83, align 8
  store i64 %73, ptr %75, align 32
  br label %84

84:                                               ; preds = %78, %60
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %85 = load i16, ptr %64, align 4
  %86 = add i16 %85, 1
  store i16 %86, ptr %64, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  %87 = icmp ne ptr %11, null
  %88 = select i1 %18, i1 %87, i1 false
  br i1 %88, label %89, label %94

89:                                               ; preds = %84
  %90 = load ptr, ptr %8, align 4
  %91 = getelementptr inbounds %struct.ext4_sb_info, ptr %90, i32 0, i32 155
  %92 = load ptr, ptr @system_wq, align 4
  %93 = tail call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %92, ptr noundef %91) #26
  br label %96

94:                                               ; preds = %84
  %95 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %96

96:                                               ; preds = %94, %89, %55, %47, %41
  %97 = load ptr, ptr %8, align 4
  %98 = getelementptr inbounds %struct.ext4_sb_info, ptr %97, i32 0, i32 17
  %99 = load i32, ptr %98, align 4
  %100 = and i32 %99, 64
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %96
  %103 = load i32, ptr @system_state, align 4
  %104 = add i32 %103, -4
  %105 = icmp ult i32 %104, 3
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.356, ptr noundef %107) #29
  unreachable

108:                                              ; preds = %102, %96
  %109 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %110 = load i32, ptr %109, align 4
  %111 = and i32 %110, 1
  %112 = icmp ne i32 %111, 0
  %113 = select i1 %112, i1 true, i1 %18
  br i1 %113, label %117, label %114

114:                                              ; preds = %108
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.357, ptr noundef nonnull @.str.358)
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #26, !srcloc !32
  %115 = load i32, ptr %109, align 4
  %116 = or i32 %115, 1
  store i32 %116, ptr %109, align 4
  br label %117

117:                                              ; preds = %114, %108
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_error_inode(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3, i32 noundef %4, ptr noundef %5, ...) local_unnamed_addr #0 {
  %7 = alloca %struct.fs_error_report, align 4
  %8 = alloca %struct.__va_list, align 4
  %9 = alloca %struct.va_format, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 0, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #26
  store i64 0, ptr %9, align 8, !annotation !9
  %10 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 8
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 27
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %13, i32 0, i32 48
  %15 = load volatile i32, ptr %14, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %76, !prof !10

18:                                               ; preds = %6
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %47

21:                                               ; preds = %18
  %22 = tail call ptr @llvm.thread.pointer() #26
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %47, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !25
  %33 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 7), align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %35, %32
  %36 = phi ptr [ %40, %35 ], [ %33, %32 ]
  %37 = load volatile ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.tracepoint_func, ptr %36, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  tail call void %37(ptr noundef %39, ptr noundef %11, ptr noundef %1, i32 noundef %2) #26
  %40 = getelementptr %struct.tracepoint_func, ptr %36, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %35

43:                                               ; preds = %35, %32
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !26
  %44 = load ptr, ptr %10, align 4
  %45 = getelementptr inbounds %struct.super_block, ptr %44, i32 0, i32 27
  %46 = load ptr, ptr %45, align 4
  br label %47

47:                                               ; preds = %43, %21, %18
  %48 = phi ptr [ %13, %18 ], [ %13, %21 ], [ %46, %43 ]
  %49 = getelementptr inbounds %struct.ext4_sb_info, ptr %48, i32 0, i32 130
  %50 = tail call i32 @___ratelimit(ptr noundef %49, ptr noundef nonnull @.str.9) #26
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %47
  call void @llvm.va_start(ptr nonnull %8)
  store ptr %5, ptr %9, align 8
  %53 = getelementptr inbounds %struct.va_format, ptr %9, i32 0, i32 1
  store ptr %8, ptr %53, align 4
  %54 = icmp eq i64 %3, 0
  %55 = load ptr, ptr %10, align 4
  %56 = getelementptr inbounds %struct.super_block, ptr %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %58 = load i32, ptr %57, align 4
  %59 = tail call ptr @llvm.thread.pointer() #26
  %60 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 85
  br i1 %54, label %63, label %61

61:                                               ; preds = %52
  %62 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.11, ptr noundef %56, ptr noundef %1, i32 noundef %2, i32 noundef %58, i64 noundef %3, ptr noundef %60, ptr noundef nonnull %9) #28
  br label %65

63:                                               ; preds = %52
  %64 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, ptr noundef %56, ptr noundef %1, i32 noundef %2, i32 noundef %58, ptr noundef %60, ptr noundef nonnull %9) #28
  br label %65

65:                                               ; preds = %63, %61
  call void @llvm.va_end(ptr nonnull %8)
  br label %66

66:                                               ; preds = %65, %47
  %67 = load ptr, ptr %10, align 4
  %68 = icmp eq i32 %4, 0
  %69 = select i1 %68, i32 117, i32 %4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #26
  store i32 %69, ptr %7, align 4
  %70 = getelementptr inbounds %struct.fs_error_report, ptr %7, i32 0, i32 1
  store ptr %0, ptr %70, align 4
  %71 = getelementptr inbounds %struct.fs_error_report, ptr %7, i32 0, i32 2
  store ptr %67, ptr %71, align 4
  %72 = call i32 @fsnotify(i32 noundef 32768, ptr noundef nonnull %7, i32 noundef 4, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 0) #26
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #26
  %73 = load ptr, ptr %10, align 4
  %74 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %75 = load i32, ptr %74, align 4
  call fastcc void @ext4_handle_error(ptr noundef %73, i1 noundef zeroext false, i32 noundef %4, i32 noundef %75, i64 noundef %3, ptr noundef %1, i32 noundef %2)
  br label %76

76:                                               ; preds = %66, %6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_error_file(ptr noundef %0, ptr noundef %1, i32 noundef %2, i64 noundef %3, ptr noundef %4, ...) local_unnamed_addr #0 {
  %6 = alloca %struct.fs_error_report, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca %struct.va_format, align 8
  %9 = alloca [80 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #26
  store i32 0, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #26
  store i64 0, ptr %8, align 8, !annotation !9
  %10 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 2
  %11 = load ptr, ptr %10, align 8
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %9) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(80) %9, i8 0, i32 80, i1 false), !annotation !9
  %12 = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 8
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 27
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 48
  %17 = load volatile i32, ptr %16, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %79, !prof !10

20:                                               ; preds = %5
  %21 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 1), align 4
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %49

23:                                               ; preds = %20
  %24 = tail call ptr @llvm.thread.pointer() #26
  %25 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 2
  %26 = load i32, ptr %25, align 8
  %27 = lshr i32 %26, 5
  %28 = getelementptr i32, ptr @__cpu_online_mask, i32 %27
  %29 = load volatile i32, ptr %28, align 4
  %30 = and i32 %26, 31
  %31 = shl nuw i32 1, %30
  %32 = and i32 %31, %29
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %23
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !25
  %35 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 7), align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %37, %34
  %38 = phi ptr [ %42, %37 ], [ %35, %34 ]
  %39 = load volatile ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.tracepoint_func, ptr %38, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  tail call void %39(ptr noundef %41, ptr noundef %13, ptr noundef %1, i32 noundef %2) #26
  %42 = getelementptr %struct.tracepoint_func, ptr %38, i32 1
  %43 = load ptr, ptr %42, align 4
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %37

45:                                               ; preds = %37, %34
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !26
  %46 = load ptr, ptr %12, align 4
  %47 = getelementptr inbounds %struct.super_block, ptr %46, i32 0, i32 27
  %48 = load ptr, ptr %47, align 4
  br label %49

49:                                               ; preds = %45, %23, %20
  %50 = phi ptr [ %15, %20 ], [ %15, %23 ], [ %48, %45 ]
  %51 = getelementptr inbounds %struct.ext4_sb_info, ptr %50, i32 0, i32 130
  %52 = tail call i32 @___ratelimit(ptr noundef %51, ptr noundef nonnull @.str.9) #26
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %71, label %54

54:                                               ; preds = %49
  %55 = call ptr @file_path(ptr noundef %0, ptr noundef nonnull %9, i32 noundef 80) #26
  %56 = icmp ugt ptr %55, inttoptr (i32 -4096 to ptr)
  %57 = select i1 %56, ptr @.str.13, ptr %55
  call void @llvm.va_start(ptr nonnull %7)
  store ptr %4, ptr %8, align 8
  %58 = getelementptr inbounds %struct.va_format, ptr %8, i32 0, i32 1
  store ptr %7, ptr %58, align 4
  %59 = icmp eq i64 %3, 0
  %60 = load ptr, ptr %12, align 4
  %61 = getelementptr inbounds %struct.super_block, ptr %60, i32 0, i32 33
  %62 = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 10
  %63 = load i32, ptr %62, align 4
  %64 = tail call ptr @llvm.thread.pointer() #26
  %65 = getelementptr inbounds %struct.task_struct, ptr %64, i32 0, i32 85
  br i1 %59, label %68, label %66

66:                                               ; preds = %54
  %67 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14, ptr noundef %61, ptr noundef %1, i32 noundef %2, i32 noundef %63, i64 noundef %3, ptr noundef %65, ptr noundef %57, ptr noundef nonnull %8) #28
  br label %70

68:                                               ; preds = %54
  %69 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %61, ptr noundef %1, i32 noundef %2, i32 noundef %63, ptr noundef %65, ptr noundef %57, ptr noundef nonnull %8) #28
  br label %70

70:                                               ; preds = %68, %66
  call void @llvm.va_end(ptr nonnull %7)
  br label %71

71:                                               ; preds = %70, %49
  %72 = load ptr, ptr %12, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #26
  store i32 117, ptr %6, align 4
  %73 = getelementptr inbounds %struct.fs_error_report, ptr %6, i32 0, i32 1
  store ptr %11, ptr %73, align 4
  %74 = getelementptr inbounds %struct.fs_error_report, ptr %6, i32 0, i32 2
  store ptr %72, ptr %74, align 4
  %75 = call i32 @fsnotify(i32 noundef 32768, ptr noundef nonnull %6, i32 noundef 4, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 0) #26
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #26
  %76 = load ptr, ptr %12, align 4
  %77 = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 10
  %78 = load i32, ptr %77, align 4
  call fastcc void @ext4_handle_error(ptr noundef %76, i1 noundef zeroext false, i32 noundef 117, i32 noundef %78, i64 noundef %3, ptr noundef %1, i32 noundef %2)
  br label %79

79:                                               ; preds = %71, %5
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %9) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @file_path(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local ptr @ext4_decode_error(ptr noundef readonly %0, i32 noundef %1, ptr noundef writeonly %2) local_unnamed_addr #9 {
  switch i32 %1, label %20 [
    i32 -117, label %27
    i32 -74, label %4
    i32 -5, label %5
    i32 -12, label %6
    i32 -30, label %7
  ]

4:                                                ; preds = %3
  br label %27

5:                                                ; preds = %3
  br label %27

6:                                                ; preds = %3
  br label %27

7:                                                ; preds = %3
  %8 = icmp eq ptr %0, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 47
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = load i32, ptr %13, align 8
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %27

19:                                               ; preds = %15, %9
  br label %27

20:                                               ; preds = %3
  %21 = icmp eq ptr %2, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = sub i32 0, %1
  %24 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %2, i32 noundef 16, ptr noundef nonnull @.str.22, i32 noundef %23)
  %25 = icmp sgt i32 %24, -1
  %26 = select i1 %25, ptr %2, ptr null
  br label %27

27:                                               ; preds = %22, %20, %19, %15, %7, %6, %5, %4, %3
  %28 = phi ptr [ null, %20 ], [ @.str.21, %19 ], [ @.str.19, %6 ], [ @.str.18, %5 ], [ @.str.17, %4 ], [ @.str.16, %3 ], [ @.str.20, %15 ], [ @.str.20, %7 ], [ %26, %22 ]
  ret ptr %28
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_std_error(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 {
  %5 = alloca %struct.fs_error_report, align 4
  %6 = alloca [16 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %6, i8 0, i32 16, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 48
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %61, !prof !10

13:                                               ; preds = %4
  %14 = icmp eq i32 %3, -30
  br i1 %14, label %15, label %25

15:                                               ; preds = %13
  %16 = tail call ptr @llvm.thread.pointer() #26
  %17 = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 113
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %61

25:                                               ; preds = %20, %15, %13
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 130
  %27 = tail call i32 @___ratelimit(ptr noundef %26, ptr noundef nonnull @.str.9) #26
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  switch i32 %3, label %45 [
    i32 -117, label %50
    i32 -74, label %30
    i32 -5, label %31
    i32 -12, label %32
    i32 -30, label %33
  ]

30:                                               ; preds = %29
  br label %50

31:                                               ; preds = %29
  br label %50

32:                                               ; preds = %29
  br label %50

33:                                               ; preds = %29
  %34 = icmp eq ptr %0, null
  br i1 %34, label %50, label %35

35:                                               ; preds = %33
  %36 = load ptr, ptr %7, align 4
  %37 = getelementptr inbounds %struct.ext4_sb_info, ptr %36, i32 0, i32 47
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = load i32, ptr %38, align 8
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40, %35
  br label %50

45:                                               ; preds = %29
  %46 = sub i32 0, %3
  %47 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %6, i32 noundef 16, ptr noundef nonnull @.str.22, i32 noundef %46) #26
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, ptr %6, ptr null
  br label %50

50:                                               ; preds = %45, %44, %40, %33, %32, %31, %30, %29
  %51 = phi ptr [ @.str.21, %44 ], [ @.str.19, %32 ], [ @.str.18, %31 ], [ @.str.17, %30 ], [ @.str.16, %29 ], [ @.str.20, %40 ], [ @.str.20, %33 ], [ %49, %45 ]
  %52 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  %53 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef %52, ptr noundef %1, i32 noundef %2, ptr noundef %51) #28
  br label %54

54:                                               ; preds = %50, %25
  %55 = icmp eq i32 %3, 0
  %56 = select i1 %55, i32 117, i32 %3
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #26
  store i32 %56, ptr %5, align 4
  %57 = getelementptr inbounds %struct.fs_error_report, ptr %5, i32 0, i32 1
  store ptr null, ptr %57, align 4
  %58 = getelementptr inbounds %struct.fs_error_report, ptr %5, i32 0, i32 2
  store ptr %0, ptr %58, align 4
  %59 = call i32 @fsnotify(i32 noundef 32768, ptr noundef nonnull %5, i32 noundef 4, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 0) #26
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #26
  %60 = sub i32 0, %3
  call fastcc void @ext4_handle_error(ptr noundef %0, i1 noundef zeroext false, i32 noundef %60, i32 noundef 0, i64 noundef 0, ptr noundef %1, i32 noundef %2)
  br label %61

61:                                               ; preds = %54, %20, %4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_msg(ptr noundef %0, ptr noundef %1, ptr noundef %2, ...) local_unnamed_addr #0 {
  %4 = alloca %struct.va_format, align 8
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #26
  store i64 0, ptr %4, align 8, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #26
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = icmp eq ptr %0, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ext4_sb_info, ptr %9, i32 0, i32 134
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %10) #26, !srcloc !16
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %10, ptr %10, i32 1, ptr elementtype(i32) %10) #26, !srcloc !17
  %12 = load ptr, ptr %8, align 4
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %12, i32 0, i32 132
  %14 = tail call i32 @___ratelimit(ptr noundef %13, ptr noundef nonnull @.str.24) #26
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %7
  call void @llvm.va_start(ptr nonnull %5)
  store ptr %2, ptr %4, align 8
  %17 = getelementptr inbounds %struct.va_format, ptr %4, i32 0, i32 1
  store ptr %5, ptr %17, align 4
  %18 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  %19 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25, ptr noundef %1, ptr noundef %18, ptr noundef nonnull %4) #28
  br label %23

20:                                               ; preds = %3
  call void @llvm.va_start(ptr nonnull %5)
  store ptr %2, ptr %4, align 8
  %21 = getelementptr inbounds %struct.va_format, ptr %4, i32 0, i32 1
  store ptr %5, ptr %21, align 4
  %22 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, ptr noundef %1, ptr noundef nonnull %4) #28
  br label %23

23:                                               ; preds = %20, %16
  call void @llvm.va_end(ptr nonnull %5)
  br label %24

24:                                               ; preds = %23, %7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_warning(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ...) local_unnamed_addr #0 {
  %5 = alloca %struct.va_format, align 8
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 133
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %9) #26, !srcloc !16
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %9, ptr %9, i32 1, ptr elementtype(i32) %9) #26, !srcloc !17
  %11 = load ptr, ptr %7, align 4
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 131
  %13 = tail call i32 @___ratelimit(ptr noundef %12, ptr noundef nonnull @.str.361) #26
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %4
  call void @llvm.va_start(ptr nonnull %6)
  store ptr %3, ptr %5, align 8
  %16 = getelementptr inbounds %struct.va_format, ptr %5, i32 0, i32 1
  store ptr %6, ptr %16, align 4
  %17 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  %18 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, ptr noundef %17, ptr noundef %1, i32 noundef %2, ptr noundef nonnull %5) #28
  call void @llvm.va_end(ptr nonnull %6)
  br label %19

19:                                               ; preds = %15, %4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_warning_inode(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ...) local_unnamed_addr #0 {
  %5 = alloca %struct.va_format, align 8
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #26
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 27
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %10, i32 0, i32 133
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #26, !srcloc !16
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %11, ptr %11, i32 1, ptr elementtype(i32) %11) #26, !srcloc !17
  %13 = load ptr, ptr %9, align 4
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %13, i32 0, i32 131
  %15 = tail call i32 @___ratelimit(ptr noundef %14, ptr noundef nonnull @.str.361) #26
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %4
  call void @llvm.va_start(ptr nonnull %6)
  store ptr %3, ptr %5, align 8
  %18 = getelementptr inbounds %struct.va_format, ptr %5, i32 0, i32 1
  store ptr %6, ptr %18, align 4
  %19 = load ptr, ptr %7, align 4
  %20 = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 33
  %21 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @llvm.thread.pointer() #26
  %24 = getelementptr inbounds %struct.task_struct, ptr %23, i32 0, i32 85
  %25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28, ptr noundef %20, ptr noundef %1, i32 noundef %2, i32 noundef %22, ptr noundef %24, ptr noundef nonnull %5) #28
  call void @llvm.va_end(ptr nonnull %6)
  br label %26

26:                                               ; preds = %17, %4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__ext4_grp_locked_error(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i64 noundef %5, ptr noundef %6, ...) local_unnamed_addr #0 {
  %8 = alloca %struct.va_format, align 8
  %9 = alloca %struct.__va_list, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #26
  store i64 0, ptr %8, align 8, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #26
  store i32 0, ptr %9, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.super_block, ptr %2, i32 0, i32 27
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 48
  %13 = load volatile i32, ptr %12, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %152, !prof !10

16:                                               ; preds = %7
  %17 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 1), align 4
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %16
  %20 = tail call ptr @llvm.thread.pointer() #26
  %21 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %22 = load i32, ptr %21, align 8
  %23 = lshr i32 %22, 5
  %24 = getelementptr i32, ptr @__cpu_online_mask, i32 %23
  %25 = load volatile i32, ptr %24, align 4
  %26 = and i32 %22, 31
  %27 = shl nuw i32 1, %26
  %28 = and i32 %27, %25
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %19
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !25
  %31 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_error, i32 0, i32 7), align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %33, %30
  %34 = phi ptr [ %38, %33 ], [ %31, %30 ]
  %35 = load volatile ptr, ptr %34, align 4
  %36 = getelementptr inbounds %struct.tracepoint_func, ptr %34, i32 0, i32 1
  %37 = load ptr, ptr %36, align 4
  tail call void %35(ptr noundef %37, ptr noundef %2, ptr noundef %0, i32 noundef %1) #26
  %38 = getelementptr %struct.tracepoint_func, ptr %34, i32 1
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %41, label %33

41:                                               ; preds = %33, %30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !26
  %42 = load ptr, ptr %10, align 4
  br label %43

43:                                               ; preds = %41, %19, %16
  %44 = phi ptr [ %11, %16 ], [ %11, %19 ], [ %42, %41 ]
  %45 = getelementptr inbounds %struct.ext4_sb_info, ptr %44, i32 0, i32 130
  %46 = tail call i32 @___ratelimit(ptr noundef %45, ptr noundef nonnull @.str.9) #26
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %43
  call void @llvm.va_start(ptr nonnull %9)
  store ptr %6, ptr %8, align 8
  %49 = getelementptr inbounds %struct.va_format, ptr %8, i32 0, i32 1
  store ptr %9, ptr %49, align 4
  %50 = getelementptr inbounds %struct.super_block, ptr %2, i32 0, i32 33
  %51 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.29, ptr noundef %50, ptr noundef %0, i32 noundef %1, i32 noundef %3) #28
  %52 = icmp eq i32 %4, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  %54 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30, i32 noundef %4) #28
  br label %55

55:                                               ; preds = %53, %48
  %56 = icmp eq i64 %5, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.31, i64 noundef %5) #28
  br label %59

59:                                               ; preds = %57, %55
  %60 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.32, ptr noundef nonnull %8) #28
  call void @llvm.va_end(ptr nonnull %9)
  br label %61

61:                                               ; preds = %59, %43
  %62 = load ptr, ptr %10, align 4
  %63 = getelementptr inbounds %struct.ext4_sb_info, ptr %62, i32 0, i32 17
  %64 = load i32, ptr %63, align 4
  %65 = and i32 %64, 16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %126, label %67

67:                                               ; preds = %61
  %68 = and i32 %64, 33554432
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = load i1, ptr @__ext4_grp_locked_error.__already_done, align 1
  br i1 %71, label %74, label %72, !prof !10

72:                                               ; preds = %70
  store i1 true, ptr @__ext4_grp_locked_error.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 1023, i32 noundef 9, ptr noundef null) #26
  %73 = load ptr, ptr %10, align 4
  br label %74

74:                                               ; preds = %72, %70, %67
  %75 = phi ptr [ %62, %70 ], [ %73, %72 ], [ %62, %67 ]
  %76 = getelementptr inbounds %struct.ext4_sb_info, ptr %75, i32 0, i32 25
  %77 = load i16, ptr %76, align 8
  %78 = or i16 %77, 2
  store i16 %78, ptr %76, align 8
  %79 = getelementptr inbounds %struct.super_block, ptr %2, i32 0, i32 20
  %80 = load ptr, ptr %79, align 4
  %81 = getelementptr inbounds %struct.block_device, ptr %80, i32 0, i32 4
  %82 = load i8, ptr %81, align 8, !range !27
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %152

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.block_device, ptr %80, i32 0, i32 17
  %86 = load ptr, ptr %85, align 8
  %87 = getelementptr inbounds %struct.gendisk, ptr %86, i32 0, i32 7
  %88 = load ptr, ptr %87, align 4
  %89 = getelementptr inbounds %struct.block_device, ptr %88, i32 0, i32 4
  %90 = load i8, ptr %89, align 8, !range !27
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %152

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.gendisk, ptr %86, i32 0, i32 12
  %94 = load volatile i32, ptr %93, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %152

97:                                               ; preds = %92
  %98 = load ptr, ptr %10, align 4
  %99 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 141
  call void @_raw_spin_lock(ptr noundef %99) #26
  %100 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 142
  %101 = load i32, ptr %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, ptr %100, align 4
  %103 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 149
  store i32 117, ptr %103, align 8
  %104 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 150
  store i32 %1, ptr %104, align 4
  %105 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 151
  store i32 %4, ptr %105, align 16
  %106 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 152
  store i64 %5, ptr %106, align 8
  %107 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 153
  store ptr %0, ptr %107, align 64
  %108 = call i64 @ktime_get_real_seconds() #26
  %109 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 154
  store i64 %108, ptr %109, align 8
  %110 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 148
  %111 = load i64, ptr %110, align 32
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %97
  %114 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 143
  store i32 117, ptr %114, align 64
  %115 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 144
  store i32 %1, ptr %115, align 4
  %116 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 145
  store i32 %4, ptr %116, align 8
  %117 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 146
  store i64 %5, ptr %117, align 16
  %118 = getelementptr inbounds %struct.ext4_sb_info, ptr %98, i32 0, i32 147
  store ptr %0, ptr %118, align 8
  store i64 %108, ptr %110, align 32
  br label %119

119:                                              ; preds = %113, %97
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %120 = load i16, ptr %99, align 4
  %121 = add i16 %120, 1
  store i16 %121, ptr %99, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  %122 = load ptr, ptr %10, align 4
  %123 = getelementptr inbounds %struct.ext4_sb_info, ptr %122, i32 0, i32 155
  %124 = load ptr, ptr @system_wq, align 4
  %125 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %124, ptr noundef %123) #26
  br label %152

126:                                              ; preds = %61
  %127 = getelementptr inbounds %struct.ext4_sb_info, ptr %62, i32 0, i32 41
  %128 = load ptr, ptr %127, align 16
  %129 = and i32 %3, 63
  %130 = getelementptr [64 x %struct.bgl_lock], ptr %128, i32 0, i32 %129
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %131 = load i16, ptr %130, align 4
  %132 = add i16 %131, 1
  store i16 %132, ptr %130, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  call fastcc void @ext4_handle_error(ptr noundef %2, i1 noundef zeroext false, i32 noundef 117, i32 noundef %4, i64 noundef %5, ptr noundef %0, i32 noundef %1)
  %133 = load ptr, ptr %10, align 4
  %134 = getelementptr inbounds %struct.ext4_sb_info, ptr %133, i32 0, i32 41
  %135 = load ptr, ptr %134, align 16
  %136 = getelementptr [64 x %struct.bgl_lock], ptr %135, i32 0, i32 %129
  %137 = call i32 @_raw_spin_trylock(ptr noundef %136) #26
  %138 = icmp eq i32 %137, 0
  %139 = load ptr, ptr %10, align 4
  %140 = getelementptr inbounds %struct.ext4_sb_info, ptr %139, i32 0, i32 105
  call void asm sideeffect "dmb ish", "~{memory}"() #26
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %140) #26
  br i1 %138, label %146, label %141

141:                                              ; preds = %126
  %142 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %140, ptr %140, i32 0, i32 -1, ptr elementtype(i32) %140) #26, !srcloc !33
  %143 = extractvalue { i32, i32, i32 } %142, 0
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %152, label %145

145:                                              ; preds = %141
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !34
  br label %152

146:                                              ; preds = %126
  %147 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %140, ptr %140, i32 8, i32 1, ptr elementtype(i32) %140) #26, !srcloc !33
  %148 = extractvalue { i32, i32, i32 } %147, 0
  %149 = icmp eq i32 %148, 8
  br i1 %149, label %151, label %150

150:                                              ; preds = %146
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !34
  br label %151

151:                                              ; preds = %150, %146
  call void @_raw_spin_lock(ptr noundef %136) #26
  br label %152

152:                                              ; preds = %151, %145, %141, %119, %92, %84, %74, %7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_mark_group_bitmap_corrupted(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 8
  %7 = load i32, ptr %6, align 32
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %10, label %9, !prof !10

9:                                                ; preds = %3
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3364, 0\0A.popsection", ""() #26, !srcloc !35
  unreachable

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 28
  %12 = load i32, ptr %11, align 64
  %13 = lshr i32 %1, %12
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 7
  %15 = load i32, ptr %14, align 4
  %16 = add i32 %15, -1
  %17 = and i32 %16, %1
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %18 = load ptr, ptr %4, align 4
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %18, i32 0, i32 58
  %20 = load volatile ptr, ptr %19, align 4
  %21 = getelementptr ptr, ptr %20, i32 %13
  %22 = load ptr, ptr %21, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  %23 = getelementptr ptr, ptr %22, i32 %17
  %24 = load ptr, ptr %23, align 4
  %25 = tail call ptr @ext4_get_group_desc(ptr noundef %0, i32 noundef %1, ptr noundef null) #26
  %26 = and i32 %2, 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %40, label %28

28:                                               ; preds = %10
  %29 = load i32, ptr %24, align 4
  %30 = or i32 %29, 4
  store i32 %30, ptr %24, align 4
  %31 = and i32 %29, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 36
  %35 = getelementptr inbounds %struct.ext4_group_info, ptr %24, i32 0, i32 3
  %36 = load i32, ptr %35, align 4
  %37 = sext i32 %36 to i64
  %38 = sub nsw i64 0, %37
  %39 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %34, i64 noundef %38, i32 noundef %39) #26
  br label %40

40:                                               ; preds = %33, %28, %10
  %41 = and i32 %2, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %69, label %43

43:                                               ; preds = %40
  %44 = load i32, ptr %24, align 4
  %45 = or i32 %44, 8
  store i32 %45, ptr %24, align 4
  %46 = and i32 %44, 8
  %47 = icmp eq i32 %46, 0
  %48 = icmp ne ptr %25, null
  %49 = select i1 %47, i1 %48, i1 false
  br i1 %49, label %50, label %69

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 4
  %52 = load i16, ptr %51, align 2
  %53 = load ptr, ptr %4, align 4
  %54 = load i32, ptr %53, align 64
  %55 = icmp ugt i32 %54, 63
  br i1 %55, label %56, label %61

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 16
  %58 = load i16, ptr %57, align 2
  %59 = zext i16 %58 to i32
  %60 = shl nuw i32 %59, 16
  br label %61

61:                                               ; preds = %56, %50
  %62 = phi i32 [ %60, %56 ], [ 0, %50 ]
  %63 = zext i16 %52 to i32
  %64 = or i32 %62, %63
  %65 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 37
  %66 = sext i32 %64 to i64
  %67 = sub nsw i64 0, %66
  %68 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %65, i64 noundef %67, i32 noundef %68) #26
  br label %69

69:                                               ; preds = %61, %43, %40
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ext4_get_group_desc(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_update_dynamic_rev(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 22
  %7 = load i32, ptr %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_update_dynamic_rev, i32 noundef 1089, ptr noundef nonnull @.str.34, i32 noundef 1)
  %10 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 25
  store i32 11, ptr %10, align 4
  %11 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 26
  store i16 128, ptr %11, align 8
  store i32 1, ptr %6, align 4
  br label %12

12:                                               ; preds = %9, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_clear_inode(ptr noundef %0) local_unnamed_addr #0 {
  tail call void @ext4_fc_del(ptr noundef %0) #26
  tail call void @invalidate_inode_buffers(ptr noundef %0) #26
  tail call void @clear_inode(ptr noundef %0) #26
  tail call void @ext4_discard_preallocations(ptr noundef %0, i32 noundef 0) #26
  %2 = tail call i32 @ext4_es_remove_extent(ptr noundef %0, i32 noundef 0, i32 noundef -1) #26
  %3 = getelementptr i8, ptr %0, i32 392
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 27
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %10, i32 0, i32 47
  %12 = load ptr, ptr %11, align 4
  tail call void @jbd2_journal_release_jbd_inode(ptr noundef %12, ptr noundef nonnull %4) #26
  %13 = load ptr, ptr %3, align 8
  %14 = load ptr, ptr @jbd2_inode_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %14, ptr noundef %13) #26
  store ptr null, ptr %3, align 8
  br label %15

15:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_fc_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @invalidate_inode_buffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @clear_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_discard_preallocations(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_es_remove_extent(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_release_jbd_inode(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_seq_options_show(ptr noundef %0, ptr nocapture noundef readnone %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.seq_file, ptr %0, i32 0, i32 11
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 10
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = select i1 %8, ptr @.str.36, ptr @.str.35
  tail call void @seq_puts(ptr noundef %0, ptr noundef nonnull %9) #26
  tail call fastcc void @_ext4_show_options(ptr noundef %0, ptr noundef %4, i32 noundef 1)
  tail call void @seq_puts(ptr noundef %0, ptr noundef nonnull @.str.37) #26
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @_ext4_show_options(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 20
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %2, 0
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 21
  %12 = load i64, ptr %11, align 32
  %13 = icmp eq i64 %12, 1
  %14 = select i1 %10, i32 44, i32 10
  br i1 %13, label %16, label %15

15:                                               ; preds = %3
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.362, i32 noundef %14, i64 noundef %12) #26
  br label %16

16:                                               ; preds = %15, %3
  %17 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 17
  br label %18

18:                                               ; preds = %69, %16
  %19 = phi i32 [ 1, %16 ], [ %70, %69 ]
  %20 = phi ptr [ @ext4_mount_opts, %16 ], [ %71, %69 ]
  %21 = getelementptr inbounds %struct.mount_opts, ptr %20, i32 0, i32 2
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, 1
  %24 = and i32 %22, 3
  %25 = icmp ne i32 %24, 0
  %26 = and i32 %22, 128
  %27 = icmp eq i32 %26, 0
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %65

29:                                               ; preds = %18
  br i1 %10, label %30, label %37

30:                                               ; preds = %29
  %31 = getelementptr inbounds %struct.mount_opts, ptr %20, i32 0, i32 1
  %32 = load i32, ptr %31, align 4
  %33 = load i32, ptr %17, align 4
  %34 = xor i32 %33, %9
  %35 = and i32 %34, %32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %30, %29
  %38 = icmp eq i32 %23, 0
  %39 = load i32, ptr %17, align 4
  %40 = getelementptr inbounds %struct.mount_opts, ptr %20, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = and i32 %41, %39
  br i1 %38, label %45, label %43

43:                                               ; preds = %37
  %44 = icmp eq i32 %42, %41
  br i1 %44, label %47, label %65

45:                                               ; preds = %37
  %46 = icmp eq i32 %42, 0
  br i1 %46, label %47, label %65

47:                                               ; preds = %45, %43
  br label %48

48:                                               ; preds = %59, %47
  %49 = phi ptr [ %61, %59 ], [ @.str.386, %47 ]
  %50 = phi ptr [ %60, %59 ], [ @ext4_param_specs, %47 ]
  %51 = getelementptr inbounds %struct.fs_parameter_spec, ptr %50, i32 0, i32 2
  %52 = load i8, ptr %51, align 4
  %53 = zext i8 %52 to i32
  %54 = icmp eq i32 %19, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.fs_parameter_spec, ptr %50, i32 0, i32 1
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %55, %48
  %60 = getelementptr %struct.fs_parameter_spec, ptr %50, i32 1
  %61 = load ptr, ptr %60, align 4
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %48

63:                                               ; preds = %59, %55
  %64 = phi ptr [ %49, %55 ], [ null, %59 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.363, i32 noundef %14, ptr noundef %64) #26
  br label %65

65:                                               ; preds = %63, %45, %43, %18
  %66 = getelementptr %struct.mount_opts, ptr %20, i32 1
  %67 = load i32, ptr %66, align 4
  %68 = icmp eq i32 %67, 38
  br i1 %68, label %76, label %69

69:                                               ; preds = %72, %65
  %70 = phi i32 [ %67, %65 ], [ %74, %72 ]
  %71 = phi ptr [ %66, %65 ], [ %73, %72 ]
  br label %18

72:                                               ; preds = %30
  %73 = getelementptr %struct.mount_opts, ptr %20, i32 1
  %74 = load i32, ptr %73, align 4
  %75 = icmp eq i32 %74, 38
  br i1 %75, label %77, label %69

76:                                               ; preds = %65
  br i1 %10, label %77, label %99

77:                                               ; preds = %76, %72
  %78 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 23
  %79 = load i32, ptr %78, align 16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 23
  %83 = load i16, ptr %82, align 8
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %91, label %89

85:                                               ; preds = %77
  %86 = icmp eq i32 %79, -1
  %87 = load i32, ptr @overflowuid, align 4
  %88 = select i1 %86, i32 %87, i32 %79
  br label %89

89:                                               ; preds = %85, %81
  %90 = phi i32 [ %88, %85 ], [ 0, %81 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.364, i32 noundef %14, i32 noundef %90) #26
  br label %91

91:                                               ; preds = %89, %81
  %92 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 24
  %93 = load i32, ptr %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %110

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 24
  %97 = load i16, ptr %96, align 2
  %98 = icmp eq i16 %97, 0
  br i1 %98, label %116, label %114

99:                                               ; preds = %76
  %100 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 23
  %101 = load i32, ptr %100, align 16
  %102 = icmp eq i32 %101, -1
  %103 = load i32, ptr @overflowuid, align 4
  %104 = select i1 %102, i32 %103, i32 %101
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.364, i32 noundef %14, i32 noundef %104) #26
  %105 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 24
  %106 = load i32, ptr %105, align 4
  %107 = icmp eq i32 %106, -1
  %108 = load i32, ptr @overflowgid, align 4
  %109 = select i1 %107, i32 %108, i32 %106
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.365, i32 noundef %14, i32 noundef %109) #26
  br label %120

110:                                              ; preds = %91
  %111 = icmp eq i32 %93, -1
  %112 = load i32, ptr @overflowgid, align 4
  %113 = select i1 %111, i32 %112, i32 %93
  br label %114

114:                                              ; preds = %110, %95
  %115 = phi i32 [ %113, %110 ], [ 0, %95 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.365, i32 noundef %14, i32 noundef %115) #26
  br label %116

116:                                              ; preds = %114, %95
  %117 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 17
  %118 = load i16, ptr %117, align 4
  %119 = zext i16 %118 to i32
  br label %120

120:                                              ; preds = %116, %99
  %121 = phi i32 [ %119, %116 ], [ -1, %99 ]
  %122 = load ptr, ptr %4, align 4
  %123 = getelementptr inbounds %struct.ext4_sb_info, ptr %122, i32 0, i32 17
  %124 = load i32, ptr %123, align 4
  %125 = and i32 %124, 32
  %126 = icmp ne i32 %125, 0
  %127 = icmp ne i32 %121, 2
  %128 = select i1 %126, i1 %127, i1 false
  br i1 %128, label %129, label %133

129:                                              ; preds = %120
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.366, i32 noundef %14) #26
  %130 = load ptr, ptr %4, align 4
  %131 = getelementptr inbounds %struct.ext4_sb_info, ptr %130, i32 0, i32 17
  %132 = load i32, ptr %131, align 4
  br label %133

133:                                              ; preds = %129, %120
  %134 = phi i32 [ %132, %129 ], [ %124, %120 ]
  %135 = and i32 %134, 16
  %136 = icmp ne i32 %135, 0
  %137 = icmp ne i32 %121, 1
  %138 = select i1 %136, i1 %137, i1 false
  br i1 %138, label %139, label %143

139:                                              ; preds = %133
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.367, i32 noundef %14) #26
  %140 = load ptr, ptr %4, align 4
  %141 = getelementptr inbounds %struct.ext4_sb_info, ptr %140, i32 0, i32 17
  %142 = load i32, ptr %141, align 4
  br label %143

143:                                              ; preds = %139, %133
  %144 = phi i32 [ %142, %139 ], [ %134, %133 ]
  %145 = and i32 %144, 64
  %146 = icmp ne i32 %145, 0
  %147 = icmp ne i32 %121, 3
  %148 = select i1 %146, i1 %147, i1 false
  br i1 %148, label %149, label %150

149:                                              ; preds = %143
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.368, i32 noundef %14) #26
  br label %150

150:                                              ; preds = %149, %143
  %151 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 52
  %152 = load i32, ptr %151, align 4
  br i1 %10, label %153, label %161

153:                                              ; preds = %150
  %154 = icmp eq i32 %152, 500
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = udiv i32 %152, 100
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.369, i32 noundef %14, i32 noundef %156) #26
  br label %157

157:                                              ; preds = %155, %153
  %158 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 54
  %159 = load i32, ptr %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %168, label %167

161:                                              ; preds = %150
  %162 = udiv i32 %152, 100
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.369, i32 noundef %14, i32 noundef %162) #26
  %163 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 54
  %164 = load i32, ptr %163, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.370, i32 noundef %14, i32 noundef %164) #26
  %165 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 53
  %166 = load i32, ptr %165, align 8
  br label %172

167:                                              ; preds = %157
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.370, i32 noundef %14, i32 noundef %159) #26
  br label %168

168:                                              ; preds = %167, %157
  %169 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 53
  %170 = load i32, ptr %169, align 8
  %171 = icmp eq i32 %170, 15000
  br i1 %171, label %174, label %172

172:                                              ; preds = %168, %161
  %173 = phi i32 [ %166, %161 ], [ %170, %168 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.371, i32 noundef %14, i32 noundef %173) #26
  br label %174

174:                                              ; preds = %172, %168
  %175 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %176 = load i32, ptr %175, align 4
  %177 = and i32 %176, 8388608
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %174
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.372, i32 noundef %14) #26
  br label %180

180:                                              ; preds = %179, %174
  %181 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 73
  %182 = load i32, ptr %181, align 4
  br i1 %10, label %183, label %191

183:                                              ; preds = %180
  %184 = icmp eq i32 %182, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %183
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.373, i32 noundef %14, i32 noundef %182) #26
  br label %186

186:                                              ; preds = %185, %183
  %187 = load i32, ptr %17, align 4
  %188 = xor i32 %187, %9
  %189 = and i32 %188, 3072
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %205, label %192

191:                                              ; preds = %180
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.373, i32 noundef %14, i32 noundef %182) #26
  br label %192

192:                                              ; preds = %191, %186
  %193 = load ptr, ptr %4, align 4
  %194 = getelementptr inbounds %struct.ext4_sb_info, ptr %193, i32 0, i32 17
  %195 = load i32, ptr %194, align 4
  %196 = and i32 %195, 3072
  switch i32 %196, label %201 [
    i32 1024, label %199
    i32 2048, label %197
    i32 3072, label %198
  ]

197:                                              ; preds = %192
  br label %199

198:                                              ; preds = %192
  br label %199

199:                                              ; preds = %198, %197, %192
  %200 = phi ptr [ @.str.376, %198 ], [ @.str.375, %197 ], [ @.str.374, %192 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull %200, i32 noundef %14) #26
  br label %201

201:                                              ; preds = %199, %192
  br i1 %10, label %205, label %202

202:                                              ; preds = %201
  %203 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 31
  %204 = load i32, ptr %203, align 4
  br label %209

205:                                              ; preds = %201, %186
  %206 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 31
  %207 = load i32, ptr %206, align 4
  %208 = icmp eq i32 %207, 32
  br i1 %208, label %215, label %209

209:                                              ; preds = %205, %202
  %210 = phi i32 [ %204, %202 ], [ %207, %205 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.377, i32 noundef %14, i32 noundef %210) #26
  %211 = load ptr, ptr %4, align 4
  %212 = getelementptr inbounds %struct.ext4_sb_info, ptr %211, i32 0, i32 17
  %213 = load i32, ptr %212, align 4
  %214 = icmp sgt i32 %213, -1
  br i1 %214, label %230, label %220

215:                                              ; preds = %205
  %216 = load ptr, ptr %4, align 4
  %217 = getelementptr inbounds %struct.ext4_sb_info, ptr %216, i32 0, i32 17
  %218 = load i32, ptr %217, align 4
  %219 = icmp sgt i32 %218, -1
  br i1 %219, label %234, label %224

220:                                              ; preds = %209
  br i1 %10, label %224, label %221

221:                                              ; preds = %220
  %222 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 116
  %223 = load i32, ptr %222, align 4
  br label %228

224:                                              ; preds = %220, %215
  %225 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 116
  %226 = load i32, ptr %225, align 4
  %227 = icmp eq i32 %226, 10
  br i1 %227, label %234, label %228

228:                                              ; preds = %224, %221
  %229 = phi i32 [ %223, %221 ], [ %226, %224 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.378, i32 noundef %14, i32 noundef %229) #26
  br label %230

230:                                              ; preds = %228, %209
  br i1 %10, label %234, label %231

231:                                              ; preds = %230
  %232 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 82
  %233 = load i32, ptr %232, align 16
  br label %238

234:                                              ; preds = %230, %224, %215
  %235 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 82
  %236 = load i32, ptr %235, align 16
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %240, label %238

238:                                              ; preds = %234, %231
  %239 = phi i32 [ %233, %231 ], [ %236, %234 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.379, i32 noundef %14, i32 noundef %239) #26
  br label %240

240:                                              ; preds = %238, %234
  %241 = load ptr, ptr %4, align 4
  %242 = getelementptr inbounds %struct.ext4_sb_info, ptr %241, i32 0, i32 17
  %243 = load i32, ptr %242, align 4
  %244 = and i32 %243, 268435456
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %240
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.380, i32 noundef %14) #26
  br label %247

247:                                              ; preds = %246, %240
  %248 = load i32, ptr %175, align 4
  %249 = and i32 %248, 131072
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %252, label %251

251:                                              ; preds = %247
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.381, i32 noundef %14) #26
  br label %252

252:                                              ; preds = %251, %247
  %253 = load ptr, ptr %4, align 4
  %254 = getelementptr inbounds %struct.ext4_sb_info, ptr %253, i32 0, i32 18
  %255 = load i32, ptr %254, align 16
  %256 = and i32 %255, 32
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %261

258:                                              ; preds = %252
  %259 = and i32 %255, 64
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %263, label %261

261:                                              ; preds = %258, %252
  %262 = phi ptr [ @.str.384, %252 ], [ @.str.385, %258 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull %262, i32 noundef %14) #26
  br label %263

263:                                              ; preds = %261, %258
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_alloc_flex_bg_array(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 110
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %53, label %8

8:                                                ; preds = %2
  %9 = add i32 %1, -1
  %10 = lshr i32 %9, %6
  %11 = add nuw i32 %10, 1
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 112
  %13 = load i32, ptr %12, align 4
  %14 = icmp ult i32 %10, %13
  br i1 %14, label %53, label %15

15:                                               ; preds = %8
  %16 = shl i32 %11, 2
  %17 = add i32 %16, -1
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true) #26, !range !38
  %19 = sub nuw nsw i32 32, %18
  %20 = shl nuw i32 1, %19
  %21 = tail call noalias ptr @kvmalloc_node(i32 noundef %20, i32 noundef 3520, i32 noundef -1) #30
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %15
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.39, i32 noundef %11)
  br label %53

24:                                               ; preds = %15
  %25 = load i32, ptr %12, align 4
  %26 = icmp slt i32 %25, %11
  br i1 %26, label %27, label %45

27:                                               ; preds = %42, %24
  %28 = phi i32 [ %43, %42 ], [ %25, %24 ]
  %29 = tail call noalias ptr @kvmalloc_node(i32 noundef 16, i32 noundef 3520, i32 noundef -1) #30
  %30 = getelementptr ptr, ptr %21, i32 %28
  store ptr %29, ptr %30, align 4
  %31 = icmp eq ptr %29, null
  br i1 %31, label %32, label %42

32:                                               ; preds = %27
  %33 = load i32, ptr %12, align 4
  %34 = icmp slt i32 %33, %28
  br i1 %34, label %35, label %41

35:                                               ; preds = %35, %32
  %36 = phi i32 [ %39, %35 ], [ %33, %32 ]
  %37 = getelementptr ptr, ptr %21, i32 %36
  %38 = load ptr, ptr %37, align 4
  tail call void @kvfree(ptr noundef %38) #26
  %39 = add i32 %36, 1
  %40 = icmp eq i32 %39, %28
  br i1 %40, label %41, label %35

41:                                               ; preds = %35, %32
  tail call void @kvfree(ptr noundef nonnull %21) #26
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.40, i32 noundef %11)
  br label %53

42:                                               ; preds = %27
  %43 = add i32 %28, 1
  %44 = icmp eq i32 %28, %10
  br i1 %44, label %45, label %27

45:                                               ; preds = %42, %24
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 111
  %47 = load volatile ptr, ptr %46, align 8
  %48 = icmp eq ptr %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = load i32, ptr %12, align 4
  %51 = shl i32 %50, 2
  tail call void @llvm.memcpy.p0.p0.i32(ptr nonnull align 4 %21, ptr nonnull align 4 %47, i32 %51, i1 false)
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !39
  store volatile ptr %21, ptr %46, align 8
  store i32 %11, ptr %12, align 4
  tail call void @ext4_kvfree_array_rcu(ptr noundef nonnull %47) #26
  br label %53

52:                                               ; preds = %45
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !39
  store volatile ptr %21, ptr %46, align 8
  store i32 %11, ptr %12, align 4
  br label %53

53:                                               ; preds = %52, %49, %41, %23, %8, %2
  %54 = phi i32 [ -12, %41 ], [ -12, %23 ], [ 0, %2 ], [ 0, %8 ], [ 0, %52 ], [ 0, %49 ]
  ret i32 %54
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_kvfree_array_rcu(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_group_desc_csum_verify(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 30
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %3
  %13 = and i32 %9, 1024
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %41, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 119
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  %19 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %20 = xor i1 %19, true
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %33, !prof !11

22:                                               ; preds = %15
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %23 = load ptr, ptr %4, align 4
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %23, i32 0, i32 15
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.ext4_super_block, ptr %25, i32 0, i32 30
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 1024
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.ext4_sb_info, ptr %23, i32 0, i32 119
  %32 = load ptr, ptr %31, align 8
  br label %33

33:                                               ; preds = %30, %15
  %34 = phi ptr [ %32, %30 ], [ %17, %15 ]
  %35 = icmp eq ptr %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %33, %3
  %37 = getelementptr inbounds %struct.ext4_group_desc, ptr %2, i32 0, i32 11
  %38 = load i16, ptr %37, align 2
  %39 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %0, i32 noundef %1, ptr noundef %2)
  %40 = icmp eq i16 %38, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %36, %33, %22, %12
  br label %42

42:                                               ; preds = %41, %36
  %43 = phi i32 [ 1, %41 ], [ 0, %36 ]
  ret i32 %43
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i16 @ext4_group_desc_csum(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = alloca %struct.anon.110, align 8
  %5 = alloca %struct.anon.110, align 8
  %6 = alloca %struct.anon.110, align 8
  %7 = alloca %struct.anon.110, align 8
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #26
  store i32 %1, ptr %8, align 4
  %10 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 45
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 27
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 15
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.ext4_super_block, ptr %17, i32 0, i32 30
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 1024
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %99, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 119
  %24 = load ptr, ptr %23, align 8
  %25 = icmp eq ptr %24, null
  %26 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %27 = xor i1 %26, true
  %28 = select i1 %25, i1 %27, i1 false
  br i1 %28, label %29, label %40, !prof !11

29:                                               ; preds = %22
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %30 = load ptr, ptr %14, align 4
  %31 = getelementptr inbounds %struct.ext4_sb_info, ptr %30, i32 0, i32 15
  %32 = load ptr, ptr %31, align 4
  %33 = getelementptr inbounds %struct.ext4_super_block, ptr %32, i32 0, i32 30
  %34 = load i32, ptr %33, align 4
  %35 = and i32 %34, 1024
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %99, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.ext4_sb_info, ptr %30, i32 0, i32 119
  %39 = load ptr, ptr %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi ptr [ %39, %37 ], [ %24, %22 ]
  %42 = icmp eq ptr %41, null
  br i1 %42, label %99, label %43

43:                                               ; preds = %40
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %9) #26
  store i16 0, ptr %9, align 2
  %44 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 120
  %45 = load i32, ptr %44, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i32 16, i1 false) #26, !annotation !9
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 119
  %47 = load ptr, ptr %46, align 8
  %48 = load i32, ptr %47, align 64
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %51, label %50, !prof !10

50:                                               ; preds = %43
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

51:                                               ; preds = %43
  store ptr %47, ptr %7, align 8
  %52 = getelementptr inbounds %struct.anon.110, ptr %7, i32 0, i32 1
  store i32 %45, ptr %52, align 8
  %53 = call i32 @crypto_shash_update(ptr noundef nonnull %7, ptr noundef nonnull %8, i32 noundef 4) #26
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !10

55:                                               ; preds = %51
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

56:                                               ; preds = %51
  %57 = load i32, ptr %52, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #26
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i32 16, i1 false) #26, !annotation !9
  %58 = load ptr, ptr %46, align 8
  %59 = load i32, ptr %58, align 64
  %60 = icmp eq i32 %59, 4
  br i1 %60, label %62, label %61, !prof !10

61:                                               ; preds = %56
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

62:                                               ; preds = %56
  store ptr %58, ptr %6, align 8
  %63 = getelementptr inbounds %struct.anon.110, ptr %6, i32 0, i32 1
  store i32 %57, ptr %63, align 8
  %64 = call i32 @crypto_shash_update(ptr noundef nonnull %6, ptr noundef %2, i32 noundef 30) #26
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !10

66:                                               ; preds = %62
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

67:                                               ; preds = %62
  %68 = load i32, ptr %63, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #26
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %5, i8 0, i32 16, i1 false) #26, !annotation !9
  %69 = load ptr, ptr %46, align 8
  %70 = load i32, ptr %69, align 64
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %73, label %72, !prof !10

72:                                               ; preds = %67
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

73:                                               ; preds = %67
  store ptr %69, ptr %5, align 8
  %74 = getelementptr inbounds %struct.anon.110, ptr %5, i32 0, i32 1
  store i32 %68, ptr %74, align 8
  %75 = call i32 @crypto_shash_update(ptr noundef nonnull %5, ptr noundef nonnull %9, i32 noundef 2) #26
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77, !prof !10

77:                                               ; preds = %73
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

78:                                               ; preds = %73
  %79 = load i32, ptr %74, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #26
  %80 = load i32, ptr %11, align 64
  %81 = icmp ugt i32 %80, 32
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %4, i8 0, i32 16, i1 false) #26, !annotation !9
  %83 = load ptr, ptr %46, align 8
  %84 = load i32, ptr %83, align 64
  %85 = icmp eq i32 %84, 4
  br i1 %85, label %87, label %86, !prof !10

86:                                               ; preds = %82
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

87:                                               ; preds = %82
  %88 = add i32 %80, -32
  %89 = getelementptr i8, ptr %2, i32 32
  store ptr %83, ptr %4, align 8
  %90 = getelementptr inbounds %struct.anon.110, ptr %4, i32 0, i32 1
  store i32 %79, ptr %90, align 8
  %91 = call i32 @crypto_shash_update(ptr noundef nonnull %4, ptr noundef %89, i32 noundef %88) #26
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %94, label %93, !prof !10

93:                                               ; preds = %87
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

94:                                               ; preds = %87
  %95 = load i32, ptr %90, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %4) #26
  br label %96

96:                                               ; preds = %94, %78
  %97 = phi i32 [ %95, %94 ], [ %79, %78 ]
  %98 = trunc i32 %97 to i16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %9) #26
  br label %131

99:                                               ; preds = %40, %29, %3
  %100 = load ptr, ptr %10, align 4
  %101 = getelementptr inbounds %struct.ext4_sb_info, ptr %100, i32 0, i32 15
  %102 = load ptr, ptr %101, align 4
  %103 = getelementptr inbounds %struct.ext4_super_block, ptr %102, i32 0, i32 30
  %104 = load i32, ptr %103, align 4
  %105 = and i32 %104, 16
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %131, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %struct.ext4_sb_info, ptr %11, i32 0, i32 15
  %109 = load ptr, ptr %108, align 4
  %110 = getelementptr inbounds %struct.ext4_super_block, ptr %109, i32 0, i32 31
  %111 = tail call zeroext i16 @crc16(i16 noundef zeroext -1, ptr noundef %110, i32 noundef 16) #26
  %112 = call zeroext i16 @crc16(i16 noundef zeroext %111, ptr noundef nonnull %8, i32 noundef 4) #26
  %113 = call zeroext i16 @crc16(i16 noundef zeroext %112, ptr noundef %2, i32 noundef 30) #26
  %114 = load ptr, ptr %10, align 4
  %115 = getelementptr inbounds %struct.ext4_sb_info, ptr %114, i32 0, i32 15
  %116 = load ptr, ptr %115, align 4
  %117 = getelementptr inbounds %struct.ext4_super_block, ptr %116, i32 0, i32 29
  %118 = load i32, ptr %117, align 8
  %119 = and i32 %118, 128
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %107
  %122 = load ptr, ptr %108, align 4
  %123 = getelementptr inbounds %struct.ext4_super_block, ptr %122, i32 0, i32 45
  %124 = load i16, ptr %123, align 2
  %125 = icmp ugt i16 %124, 32
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = zext i16 %124 to i32
  %128 = getelementptr i8, ptr %2, i32 32
  %129 = add nsw i32 %127, -32
  %130 = call zeroext i16 @crc16(i16 noundef zeroext %113, ptr noundef %128, i32 noundef %129) #26
  br label %131

131:                                              ; preds = %126, %121, %107, %99, %96
  %132 = phi i16 [ 0, %99 ], [ %98, %96 ], [ %130, %126 ], [ %113, %121 ], [ %113, %107 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #26
  ret i16 %132
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ext4_group_desc_csum_set(ptr nocapture noundef readonly %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 30
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %36

12:                                               ; preds = %3
  %13 = and i32 %9, 1024
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 119
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  %19 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %20 = xor i1 %19, true
  %21 = select i1 %18, i1 %20, i1 false
  br i1 %21, label %22, label %33, !prof !11

22:                                               ; preds = %15
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %23 = load ptr, ptr %4, align 4
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %23, i32 0, i32 15
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.ext4_super_block, ptr %25, i32 0, i32 30
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 1024
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.ext4_sb_info, ptr %23, i32 0, i32 119
  %32 = load ptr, ptr %31, align 8
  br label %33

33:                                               ; preds = %30, %15
  %34 = phi ptr [ %32, %30 ], [ %17, %15 ]
  %35 = icmp eq ptr %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %33, %3
  %37 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %0, i32 noundef %1, ptr noundef %2)
  %38 = getelementptr inbounds %struct.ext4_group_desc, ptr %2, i32 0, i32 11
  store i16 %37, ptr %38, align 2
  br label %39

39:                                               ; preds = %36, %33, %22, %12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_feature_set_ok(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 15
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ext4_super_block, ptr %6, i32 0, i32 29
  %8 = load i32, ptr %7, align 8
  %9 = and i32 %8, -255959
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.41, i32 noundef %9)
  br label %42

12:                                               ; preds = %2
  %13 = and i32 %8, 131072
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.42)
  br label %42

16:                                               ; preds = %12
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %18, label %42

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.ext4_super_block, ptr %6, i32 0, i32 30
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, 4096
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.44)
  %24 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %25 = load i32, ptr %24, align 4
  %26 = or i32 %25, 1
  store i32 %26, ptr %24, align 4
  br label %42

27:                                               ; preds = %18
  %28 = and i32 %20, -108416
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.45, i32 noundef %28)
  br label %42

31:                                               ; preds = %27
  %32 = and i32 %20, 512
  %33 = icmp eq i32 %32, 0
  %34 = and i32 %8, 64
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 true, i1 %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %31
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.46)
  br label %42

38:                                               ; preds = %31
  %39 = and i32 %20, 8448
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.47)
  br label %42

42:                                               ; preds = %41, %38, %37, %30, %23, %16, %15, %11
  %43 = phi i32 [ 0, %11 ], [ 0, %15 ], [ 1, %23 ], [ 0, %30 ], [ 0, %41 ], [ 0, %37 ], [ 1, %16 ], [ 1, %38 ]
  ret i32 %43
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_register_li_request(ptr noundef %0, i32 noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 8
  %6 = load i32, ptr %5, align 32
  tail call void @mutex_lock(ptr noundef nonnull @ext4_li_mtx) #26
  %7 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 115
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ext4_li_request, ptr %8, i32 0, i32 6
  store i32 0, ptr %11, align 4
  br label %109

12:                                               ; preds = %2
  %13 = load ptr, ptr %3, align 4
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %13, i32 0, i32 17
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 67108864
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %12
  %19 = icmp eq i32 %6, %1
  br i1 %19, label %109, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, 1
  %24 = icmp ne i32 %23, 0
  %25 = icmp sgt i32 %15, -1
  %26 = select i1 %24, i1 true, i1 %25
  br i1 %26, label %109, label %27

27:                                               ; preds = %20, %12
  %28 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %29 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %28, i32 noundef 3520, i32 noundef 32) #31
  %30 = icmp eq ptr %29, null
  br i1 %30, label %115, label %31

31:                                               ; preds = %27
  store ptr %0, ptr %29, align 8
  %32 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 2
  store i32 %1, ptr %32, align 8
  %33 = load ptr, ptr %3, align 4
  %34 = getelementptr inbounds %struct.ext4_sb_info, ptr %33, i32 0, i32 17
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, 67108864
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 3
  store i32 %1, ptr %39, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ 1, %38 ], [ 0, %31 ]
  %42 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 1
  store i32 %41, ptr %42, align 4
  %43 = load volatile i32, ptr @jiffies, align 64
  %44 = tail call i32 @prandom_u32() #26
  %45 = urem i32 %44, 500
  %46 = add i32 %45, %43
  %47 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 5
  store i32 %46, ptr %47, align 8
  %48 = load ptr, ptr @ext4_li_info, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %60

50:                                               ; preds = %40
  %51 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %52 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %51, i32 noundef 3520, i32 noundef 32) #31
  %53 = icmp eq ptr %52, null
  br i1 %53, label %115, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.ext4_lazy_init, ptr %52, i32 0, i32 1
  store volatile ptr %55, ptr %55, align 4
  %56 = getelementptr inbounds %struct.ext4_lazy_init, ptr %52, i32 0, i32 1, i32 1
  store ptr %55, ptr %56, align 8
  %57 = getelementptr inbounds %struct.ext4_lazy_init, ptr %52, i32 0, i32 2
  tail call void @__mutex_init(ptr noundef %57, ptr noundef nonnull @.str.659, ptr noundef nonnull @ext4_li_info_new.__key) #26
  %58 = load i32, ptr %52, align 8
  %59 = or i32 %58, 1
  store i32 %59, ptr %52, align 8
  store ptr %52, ptr @ext4_li_info, align 4
  br label %60

60:                                               ; preds = %54, %40
  %61 = phi ptr [ %52, %54 ], [ %48, %40 ]
  %62 = getelementptr inbounds %struct.ext4_lazy_init, ptr %61, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %62) #26
  %63 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 4
  %64 = load ptr, ptr @ext4_li_info, align 4
  %65 = getelementptr inbounds %struct.ext4_lazy_init, ptr %64, i32 0, i32 1
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr inbounds %struct.list_head, ptr %66, i32 0, i32 1
  store ptr %63, ptr %67, align 4
  store ptr %66, ptr %63, align 8
  %68 = getelementptr inbounds %struct.ext4_li_request, ptr %29, i32 0, i32 4, i32 1
  store ptr %65, ptr %68, align 4
  store volatile ptr %63, ptr %65, align 4
  %69 = getelementptr inbounds %struct.ext4_lazy_init, ptr %64, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %69) #26
  store ptr %29, ptr %7, align 8
  %70 = load ptr, ptr @ext4_li_info, align 4
  %71 = load i32, ptr %70, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %109

74:                                               ; preds = %60
  %75 = tail call ptr (ptr, ptr, i32, ptr, ...) @kthread_create_on_node(ptr noundef nonnull @ext4_lazyinit_thread, ptr noundef %70, i32 noundef -1, ptr noundef nonnull @.str.660) #26
  %76 = icmp ugt ptr %75, inttoptr (i32 -4096 to ptr)
  br i1 %76, label %77, label %104

77:                                               ; preds = %74
  store ptr %75, ptr @ext4_lazyinit_task, align 4
  %78 = ptrtoint ptr %75 to i32
  %79 = load ptr, ptr @ext4_li_info, align 4
  %80 = getelementptr inbounds %struct.ext4_lazy_init, ptr %79, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %80) #26
  %81 = load ptr, ptr @ext4_li_info, align 4
  %82 = getelementptr inbounds %struct.ext4_lazy_init, ptr %81, i32 0, i32 1
  %83 = load ptr, ptr %82, align 4
  %84 = icmp eq ptr %83, %82
  br i1 %84, label %110, label %85

85:                                               ; preds = %100, %77
  %86 = phi ptr [ %101, %100 ], [ %81, %77 ]
  %87 = phi ptr [ %88, %100 ], [ %83, %77 ]
  %88 = load ptr, ptr %87, align 4
  %89 = getelementptr i8, ptr %87, i32 -16
  %90 = icmp eq ptr %89, null
  br i1 %90, label %100, label %91

91:                                               ; preds = %85
  %92 = getelementptr i8, ptr %87, i32 4
  %93 = load ptr, ptr %92, align 4
  %94 = getelementptr inbounds %struct.list_head, ptr %88, i32 0, i32 1
  store ptr %93, ptr %94, align 4
  store volatile ptr %88, ptr %93, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %87, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %92, align 4
  %95 = load ptr, ptr %89, align 4
  %96 = getelementptr inbounds %struct.super_block, ptr %95, i32 0, i32 27
  %97 = load ptr, ptr %96, align 4
  %98 = getelementptr inbounds %struct.ext4_sb_info, ptr %97, i32 0, i32 115
  store ptr null, ptr %98, align 8
  tail call void @kfree(ptr noundef nonnull %89) #26
  %99 = load ptr, ptr @ext4_li_info, align 4
  br label %100

100:                                              ; preds = %91, %85
  %101 = phi ptr [ %86, %85 ], [ %99, %91 ]
  %102 = getelementptr inbounds %struct.ext4_lazy_init, ptr %101, i32 0, i32 1
  %103 = icmp eq ptr %88, %102
  br i1 %103, label %110, label %85

104:                                              ; preds = %74
  %105 = tail call i32 @wake_up_process(ptr noundef %75) #26
  store ptr %75, ptr @ext4_lazyinit_task, align 4
  %106 = load ptr, ptr @ext4_li_info, align 4
  %107 = load i32, ptr %106, align 4
  %108 = or i32 %107, 2
  store i32 %108, ptr %106, align 4
  br label %109

109:                                              ; preds = %104, %60, %20, %18, %10
  tail call void @mutex_unlock(ptr noundef nonnull @ext4_li_mtx) #26
  br label %118

110:                                              ; preds = %100, %77
  %111 = phi ptr [ %81, %77 ], [ %101, %100 ]
  %112 = getelementptr inbounds %struct.ext4_lazy_init, ptr %111, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %112) #26
  %113 = load ptr, ptr @ext4_li_info, align 4
  tail call void @kfree(ptr noundef %113) #26
  store ptr null, ptr @ext4_li_info, align 4
  %114 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.661, i32 noundef %78) #28
  br label %115

115:                                              ; preds = %110, %50, %27
  %116 = phi i32 [ %78, %110 ], [ -12, %50 ], [ -12, %27 ]
  %117 = phi ptr [ null, %110 ], [ %29, %50 ], [ %29, %27 ]
  tail call void @mutex_unlock(ptr noundef nonnull @ext4_li_mtx) #26
  tail call void @kfree(ptr noundef %117) #26
  br label %118

118:                                              ; preds = %115, %109
  %119 = phi i32 [ 0, %109 ], [ %116, %115 ]
  ret i32 %119
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_calculate_overhead(ptr noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 39
  %7 = load i32, ptr %6, align 8
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 8
  %9 = load i32, ptr %8, align 32
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !40
  %10 = tail call i32 @get_zeroed_page(i32 noundef 3136) #26
  %11 = inttoptr i32 %10 to ptr
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %291, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 5
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 12
  %17 = load i32, ptr %16, align 16
  %18 = lshr i32 %15, %17
  %19 = icmp eq i32 %9, 0
  br i1 %19, label %239, label %20

20:                                               ; preds = %13
  %21 = zext i32 %18 to i64
  br label %22

22:                                               ; preds = %232, %20
  %23 = phi i64 [ %233, %232 ], [ %21, %20 ]
  %24 = phi i32 [ %235, %232 ], [ 0, %20 ]
  %25 = load ptr, ptr %2, align 4
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 8
  %27 = load i32, ptr %26, align 32
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !40
  %28 = load ptr, ptr %2, align 4
  %29 = getelementptr inbounds %struct.ext4_sb_info, ptr %28, i32 0, i32 15
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.ext4_super_block, ptr %30, i32 0, i32 30
  %32 = load i32, ptr %31, align 4
  %33 = and i32 %32, 512
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43

35:                                               ; preds = %22
  %36 = tail call i32 @ext4_bg_has_super(ptr noundef %0, i32 noundef %24) #26
  %37 = tail call i32 @ext4_bg_num_gdb(ptr noundef %0, i32 noundef %24) #26
  %38 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 5
  %39 = load i32, ptr %38, align 4
  %40 = add i32 %36, 2
  %41 = add i32 %40, %37
  %42 = add i32 %41, %39
  br label %226

43:                                               ; preds = %22
  %44 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 15
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.ext4_super_block, ptr %45, i32 0, i32 5
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr inbounds %struct.ext4_sb_info, ptr %28, i32 0, i32 2
  %49 = load i32, ptr %48, align 8
  %50 = mul i32 %49, %24
  %51 = add i32 %50, %47
  %52 = zext i32 %51 to i64
  %53 = zext i32 %49 to i64
  %54 = add nsw i64 %53, -1
  %55 = add nsw i64 %54, %52
  %56 = icmp eq i32 %27, 0
  br i1 %56, label %232, label %57

57:                                               ; preds = %43
  %58 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 12
  %59 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 5
  br label %60

60:                                               ; preds = %213, %57
  %61 = phi i32 [ 0, %57 ], [ %214, %213 ]
  %62 = phi i32 [ 0, %57 ], [ %215, %213 ]
  %63 = tail call ptr @ext4_get_group_desc(ptr noundef %0, i32 noundef %62, ptr noundef null) #26
  %64 = load i32, ptr %63, align 4
  %65 = load ptr, ptr %2, align 4
  %66 = load i32, ptr %65, align 64
  %67 = icmp ugt i32 %66, 63
  br i1 %67, label %68, label %73

68:                                               ; preds = %60
  %69 = getelementptr inbounds %struct.ext4_group_desc, ptr %63, i32 0, i32 12
  %70 = load i32, ptr %69, align 4
  %71 = zext i32 %70 to i64
  %72 = shl nuw i64 %71, 32
  br label %73

73:                                               ; preds = %68, %60
  %74 = phi i64 [ %72, %68 ], [ 0, %60 ]
  %75 = zext i32 %64 to i64
  %76 = or i64 %74, %75
  %77 = icmp ult i64 %76, %52
  %78 = icmp ugt i64 %76, %55
  %79 = select i1 %77, i1 true, i1 %78
  br i1 %79, label %95, label %80

80:                                               ; preds = %73
  %81 = sub i64 %76, %52
  %82 = load i32, ptr %58, align 16
  %83 = zext i32 %82 to i64
  %84 = lshr i64 %81, %83
  %85 = trunc i64 %84 to i32
  %86 = and i32 %85, 31
  %87 = shl nuw i32 1, %86
  %88 = lshr i32 %85, 5
  %89 = getelementptr i32, ptr %11, i32 %88
  %90 = load i32, ptr %89, align 4
  %91 = or i32 %87, %90
  store i32 %91, ptr %89, align 4
  %92 = add i32 %61, 1
  %93 = load ptr, ptr %2, align 4
  %94 = load i32, ptr %93, align 64
  br label %95

95:                                               ; preds = %80, %73
  %96 = phi i32 [ %94, %80 ], [ %66, %73 ]
  %97 = phi i32 [ %92, %80 ], [ %61, %73 ]
  %98 = getelementptr inbounds %struct.ext4_group_desc, ptr %63, i32 0, i32 1
  %99 = load i32, ptr %98, align 4
  %100 = icmp ugt i32 %96, 63
  br i1 %100, label %101, label %106

101:                                              ; preds = %95
  %102 = getelementptr inbounds %struct.ext4_group_desc, ptr %63, i32 0, i32 13
  %103 = load i32, ptr %102, align 4
  %104 = zext i32 %103 to i64
  %105 = shl nuw i64 %104, 32
  br label %106

106:                                              ; preds = %101, %95
  %107 = phi i64 [ %105, %101 ], [ 0, %95 ]
  %108 = zext i32 %99 to i64
  %109 = or i64 %107, %108
  %110 = icmp ult i64 %109, %52
  %111 = icmp ugt i64 %109, %55
  %112 = select i1 %110, i1 true, i1 %111
  br i1 %112, label %128, label %113

113:                                              ; preds = %106
  %114 = sub i64 %109, %52
  %115 = load i32, ptr %58, align 16
  %116 = zext i32 %115 to i64
  %117 = lshr i64 %114, %116
  %118 = trunc i64 %117 to i32
  %119 = and i32 %118, 31
  %120 = shl nuw i32 1, %119
  %121 = lshr i32 %118, 5
  %122 = getelementptr i32, ptr %11, i32 %121
  %123 = load i32, ptr %122, align 4
  %124 = or i32 %120, %123
  store i32 %124, ptr %122, align 4
  %125 = add i32 %97, 1
  %126 = load ptr, ptr %2, align 4
  %127 = load i32, ptr %126, align 64
  br label %128

128:                                              ; preds = %113, %106
  %129 = phi i32 [ %127, %113 ], [ %96, %106 ]
  %130 = phi i32 [ %125, %113 ], [ %97, %106 ]
  %131 = getelementptr inbounds %struct.ext4_group_desc, ptr %63, i32 0, i32 2
  %132 = load i32, ptr %131, align 4
  %133 = icmp ugt i32 %129, 63
  br i1 %133, label %134, label %139

134:                                              ; preds = %128
  %135 = getelementptr inbounds %struct.ext4_group_desc, ptr %63, i32 0, i32 14
  %136 = load i32, ptr %135, align 4
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  br label %139

139:                                              ; preds = %134, %128
  %140 = phi i64 [ %138, %134 ], [ 0, %128 ]
  %141 = zext i32 %132 to i64
  %142 = or i64 %140, %141
  %143 = icmp ult i64 %142, %52
  br i1 %143, label %171, label %144

144:                                              ; preds = %139
  %145 = load i32, ptr %59, align 4
  %146 = zext i32 %145 to i64
  %147 = add i64 %142, %146
  %148 = icmp ugt i64 %147, %55
  %149 = icmp eq i32 %145, 0
  %150 = select i1 %148, i1 true, i1 %149
  br i1 %150, label %171, label %151

151:                                              ; preds = %151, %144
  %152 = phi i32 [ %166, %151 ], [ %130, %144 ]
  %153 = phi i32 [ %167, %151 ], [ 0, %144 ]
  %154 = phi i64 [ %168, %151 ], [ %142, %144 ]
  %155 = sub i64 %154, %52
  %156 = load i32, ptr %58, align 16
  %157 = zext i32 %156 to i64
  %158 = lshr i64 %155, %157
  %159 = trunc i64 %158 to i32
  %160 = and i32 %159, 31
  %161 = shl nuw i32 1, %160
  %162 = lshr i32 %159, 5
  %163 = getelementptr i32, ptr %11, i32 %162
  %164 = load i32, ptr %163, align 4
  %165 = or i32 %161, %164
  store i32 %165, ptr %163, align 4
  %166 = add i32 %152, 1
  %167 = add nuw i32 %153, 1
  %168 = add i64 %154, 1
  %169 = load i32, ptr %59, align 4
  %170 = icmp ult i32 %167, %169
  br i1 %170, label %151, label %171

171:                                              ; preds = %151, %144, %139
  %172 = phi i32 [ %130, %144 ], [ %130, %139 ], [ %166, %151 ]
  %173 = icmp eq i32 %62, %24
  br i1 %173, label %174, label %213

174:                                              ; preds = %171
  %175 = tail call i32 @ext4_bg_has_super(ptr noundef %0, i32 noundef %24) #26
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %174
  %178 = load i32, ptr %11, align 4
  %179 = or i32 %178, 1
  store i32 %179, ptr %11, align 4
  %180 = add i32 %172, 1
  br label %181

181:                                              ; preds = %177, %174
  %182 = phi i32 [ 1, %177 ], [ 0, %174 ]
  %183 = phi i32 [ %180, %177 ], [ %172, %174 ]
  %184 = tail call i32 @ext4_bg_num_gdb(ptr noundef %0, i32 noundef %24) #26
  %185 = add i32 %184, %182
  %186 = load ptr, ptr %2, align 4
  %187 = getelementptr inbounds %struct.ext4_sb_info, ptr %186, i32 0, i32 2
  %188 = load i32, ptr %187, align 8
  %189 = icmp ugt i32 %185, %188
  br i1 %189, label %190, label %195

190:                                              ; preds = %181
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %0, ptr noundef nonnull @__func__.count_overhead, i32 noundef 4178, i1 noundef zeroext false, i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.662, i32 noundef %184) #26
  %191 = load ptr, ptr %2, align 4
  %192 = getelementptr inbounds %struct.ext4_sb_info, ptr %191, i32 0, i32 2
  %193 = load i32, ptr %192, align 8
  %194 = sub i32 %193, %182
  br label %195

195:                                              ; preds = %190, %181
  %196 = phi i32 [ %194, %190 ], [ %184, %181 ]
  %197 = add i32 %196, %183
  %198 = icmp sgt i32 %196, 0
  br i1 %198, label %199, label %213

199:                                              ; preds = %195
  %200 = add nuw i32 %196, %182
  br label %201

201:                                              ; preds = %201, %199
  %202 = phi i32 [ %203, %201 ], [ %182, %199 ]
  %203 = add nuw i32 %202, 1
  %204 = load i32, ptr %58, align 16
  %205 = ashr i32 %202, %204
  %206 = and i32 %205, 31
  %207 = shl nuw i32 1, %206
  %208 = lshr i32 %205, 5
  %209 = getelementptr i32, ptr %11, i32 %208
  %210 = load i32, ptr %209, align 4
  %211 = or i32 %207, %210
  store i32 %211, ptr %209, align 4
  %212 = icmp eq i32 %203, %200
  br i1 %212, label %213, label %201

213:                                              ; preds = %201, %195, %171
  %214 = phi i32 [ %172, %171 ], [ %197, %195 ], [ %197, %201 ]
  %215 = add nuw i32 %62, 1
  %216 = icmp eq i32 %215, %27
  br i1 %216, label %217, label %60

217:                                              ; preds = %213
  %218 = icmp eq i32 %214, 0
  br i1 %218, label %232, label %219

219:                                              ; preds = %217
  %220 = load ptr, ptr %2, align 4
  %221 = getelementptr inbounds %struct.ext4_sb_info, ptr %220, i32 0, i32 3
  %222 = load i32, ptr %221, align 4
  %223 = lshr i32 %222, 3
  %224 = tail call i32 @ext4_count_free(ptr noundef nonnull %11, i32 noundef %223) #26
  %225 = sub i32 %222, %224
  br label %226

226:                                              ; preds = %219, %35
  %227 = phi i32 [ %225, %219 ], [ %42, %35 ]
  %228 = zext i32 %227 to i64
  %229 = add i64 %23, %228
  %230 = icmp eq i32 %227, 0
  br i1 %230, label %232, label %231

231:                                              ; preds = %226
  tail call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(4096) %11, i8 0, i32 4096, i1 false)
  br label %232

232:                                              ; preds = %231, %226, %217, %43
  %233 = phi i64 [ %229, %231 ], [ %229, %226 ], [ %23, %217 ], [ %23, %43 ]
  %234 = tail call i32 @__cond_resched() #26
  %235 = add nuw i32 %24, 1
  %236 = icmp eq i32 %235, %9
  br i1 %236, label %237, label %22

237:                                              ; preds = %232
  %238 = trunc i64 %233 to i32
  br label %239

239:                                              ; preds = %237, %13
  %240 = phi i32 [ %18, %13 ], [ %238, %237 ]
  %241 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 47
  %242 = load ptr, ptr %241, align 4
  %243 = icmp eq ptr %242, null
  br i1 %243, label %258, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 55
  %246 = load ptr, ptr %245, align 16
  %247 = icmp eq ptr %246, null
  br i1 %247, label %248, label %258

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.journal_s, ptr %242, i32 0, i32 37
  %250 = load i32, ptr %249, align 4
  %251 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 11
  %252 = load i32, ptr %251, align 4
  %253 = add i32 %250, -1
  %254 = add i32 %253, %252
  %255 = load i32, ptr %16, align 16
  %256 = lshr i32 %254, %255
  %257 = add i32 %256, %240
  br label %288

258:                                              ; preds = %244, %239
  %259 = load ptr, ptr %2, align 4
  %260 = getelementptr inbounds %struct.ext4_sb_info, ptr %259, i32 0, i32 15
  %261 = load ptr, ptr %260, align 4
  %262 = getelementptr inbounds %struct.ext4_super_block, ptr %261, i32 0, i32 28
  %263 = load i32, ptr %262, align 4
  %264 = and i32 %263, 4
  %265 = icmp ne i32 %264, 0
  %266 = icmp ne i32 %7, 0
  %267 = select i1 %265, i1 %243, i1 false
  %268 = select i1 %267, i1 %266, i1 false
  br i1 %268, label %269, label %288

269:                                              ; preds = %258
  %270 = tail call fastcc ptr @ext4_get_journal_inode(ptr noundef %0, i32 noundef %7)
  %271 = icmp eq ptr %270, null
  br i1 %271, label %287, label %272

272:                                              ; preds = %269
  %273 = getelementptr inbounds %struct.inode, ptr %270, i32 0, i32 13
  %274 = load i64, ptr %273, align 8
  %275 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 2
  %276 = load i8, ptr %275, align 4
  %277 = zext i8 %276 to i64
  %278 = ashr i64 %274, %277
  %279 = trunc i64 %278 to i32
  %280 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 11
  %281 = load i32, ptr %280, align 4
  %282 = add i32 %281, -1
  %283 = add i32 %282, %279
  %284 = load i32, ptr %16, align 16
  %285 = lshr i32 %283, %284
  tail call void @iput(ptr noundef nonnull %270) #26
  %286 = add i32 %285, %240
  br label %288

287:                                              ; preds = %269
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.48)
  br label %288

288:                                              ; preds = %287, %272, %258, %248
  %289 = phi i32 [ %286, %272 ], [ %240, %287 ], [ %240, %258 ], [ %257, %248 ]
  %290 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 10
  store i32 %289, ptr %290, align 8
  tail call void asm sideeffect "dmb ishst", "~{memory}"() #26, !srcloc !41
  tail call void @free_pages(i32 noundef %10, i32 noundef 0) #26
  br label %291

291:                                              ; preds = %288, %1
  %292 = phi i32 [ 0, %288 ], [ -12, %1 ]
  ret i32 %292
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_zeroed_page(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @ext4_get_journal_inode(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = tail call ptr @__ext4_iget(ptr noundef %0, i32 noundef %1, i32 noundef 1, ptr noundef nonnull @__func__.ext4_get_journal_inode, i32 noundef 5621) #26
  %4 = icmp ugt ptr %3, inttoptr (i32 -4096 to ptr)
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.663)
  br label %16

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 11
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @make_bad_inode(ptr noundef %3) #26
  tail call void @iput(ptr noundef %3) #26
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.664)
  br label %16

11:                                               ; preds = %6
  %12 = load i16, ptr %3, align 8
  %13 = and i16 %12, -4096
  %14 = icmp eq i16 %13, -32768
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.665)
  tail call void @iput(ptr noundef %3) #26
  br label %16

16:                                               ; preds = %15, %11, %10, %5
  %17 = phi ptr [ null, %5 ], [ null, %15 ], [ null, %10 ], [ %3, %11 ]
  ret ptr %17
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ext4_force_commit(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 47
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %6
  %13 = tail call i32 @jbd2_journal_force_commit(ptr noundef nonnull %10) #26
  br label %14

14:                                               ; preds = %12, %6, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %12 ], [ 0, %6 ]
  ret i32 %15
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @ext4_exit_fs() #12 section ".exit.text" {
  %1 = load ptr, ptr @ext4_li_info, align 4
  %2 = icmp ne ptr %1, null
  %3 = load ptr, ptr @ext4_lazyinit_task, align 4
  %4 = icmp ne ptr %3, null
  %5 = select i1 %2, i1 %4, i1 false
  br i1 %5, label %6, label %8

6:                                                ; preds = %0
  %7 = tail call i32 @kthread_stop(ptr noundef nonnull %3) #26
  br label %8

8:                                                ; preds = %6, %0
  %9 = tail call i32 @unregister_filesystem(ptr noundef nonnull @ext2_fs_type) #26
  %10 = tail call i32 @unregister_filesystem(ptr noundef nonnull @ext3_fs_type) #26
  %11 = tail call i32 @unregister_filesystem(ptr noundef nonnull @ext4_fs_type) #26
  tail call void @ext4_fc_destroy_dentry_cache() #26
  tail call void @rcu_barrier() #26
  %12 = load ptr, ptr @ext4_inode_cachep, align 4
  tail call void @kmem_cache_destroy(ptr noundef %12) #26
  tail call void @ext4_exit_mballoc() #26
  tail call void @ext4_exit_sysfs() #26
  tail call void @ext4_exit_system_zone() #26
  tail call void @ext4_exit_pageio() #26
  tail call void @ext4_exit_post_read_processing() #26
  tail call void @ext4_exit_es() #26
  tail call void @ext4_exit_pending() #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @unregister_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_fc_destroy_dentry_cache() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_mballoc() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_sysfs() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_system_zone() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_pageio() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_post_read_processing() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_es() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_exit_pending() local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @ext4_init_fs() #12 section ".init.text" {
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(28) @ext4_mount_msg_ratelimit, i8 0, i64 28, i1 false) #26
  store i32 3000, ptr getelementptr inbounds (%struct.ratelimit_state, ptr @ext4_mount_msg_ratelimit, i32 0, i32 1), align 4
  store i32 64, ptr getelementptr inbounds (%struct.ratelimit_state, ptr @ext4_mount_msg_ratelimit, i32 0, i32 2), align 4
  store ptr null, ptr @ext4_li_info, align 4
  br label %1

1:                                                ; preds = %1, %0
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  %3 = getelementptr [37 x %struct.wait_queue_head], ptr @ext4__ioend_wq, i32 0, i32 %2
  tail call void @__init_waitqueue_head(ptr noundef %3, ptr noundef nonnull @.str.667, ptr noundef nonnull @ext4_init_fs.__key) #26
  %4 = add nuw nsw i32 %2, 1
  %5 = icmp eq i32 %4, 37
  br i1 %5, label %6, label %1

6:                                                ; preds = %1
  %7 = tail call i32 @ext4_init_es() #28
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %56

9:                                                ; preds = %6
  %10 = tail call i32 @ext4_init_pending() #28
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %54

12:                                               ; preds = %9
  %13 = tail call i32 @ext4_init_post_read_processing() #28
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %52

15:                                               ; preds = %12
  %16 = tail call i32 @ext4_init_pageio() #28
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %50

18:                                               ; preds = %15
  %19 = tail call i32 @ext4_init_system_zone() #28
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %48

21:                                               ; preds = %18
  %22 = tail call i32 @ext4_init_sysfs() #28
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %46

24:                                               ; preds = %21
  %25 = tail call i32 @ext4_init_mballoc() #28
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %44

27:                                               ; preds = %24
  %28 = tail call fastcc i32 @init_inodecache() #32
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  %31 = tail call i32 @ext4_fc_init_dentry_cache() #28
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %30
  tail call fastcc void @register_as_ext3()
  tail call fastcc void @register_as_ext2()
  %34 = tail call i32 @register_filesystem(ptr noundef nonnull @ext4_fs_type) #26
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %56, label %36

36:                                               ; preds = %33
  %37 = tail call i32 @unregister_filesystem(ptr noundef nonnull @ext2_fs_type) #26
  %38 = tail call i32 @unregister_filesystem(ptr noundef nonnull @ext3_fs_type) #26
  tail call void @ext4_fc_destroy_dentry_cache() #26
  br label %39

39:                                               ; preds = %36, %30
  %40 = phi i32 [ %31, %30 ], [ %34, %36 ]
  tail call void @rcu_barrier() #26
  %41 = load ptr, ptr @ext4_inode_cachep, align 4
  tail call void @kmem_cache_destroy(ptr noundef %41) #26
  br label %42

42:                                               ; preds = %39, %27
  %43 = phi i32 [ %28, %27 ], [ %40, %39 ]
  tail call void @ext4_exit_mballoc() #26
  br label %44

44:                                               ; preds = %42, %24
  %45 = phi i32 [ %25, %24 ], [ %43, %42 ]
  tail call void @ext4_exit_sysfs() #26
  br label %46

46:                                               ; preds = %44, %21
  %47 = phi i32 [ %22, %21 ], [ %45, %44 ]
  tail call void @ext4_exit_system_zone() #26
  br label %48

48:                                               ; preds = %46, %18
  %49 = phi i32 [ %19, %18 ], [ %47, %46 ]
  tail call void @ext4_exit_pageio() #26
  br label %50

50:                                               ; preds = %48, %15
  %51 = phi i32 [ %16, %15 ], [ %49, %48 ]
  tail call void @ext4_exit_post_read_processing() #26
  br label %52

52:                                               ; preds = %50, %12
  %53 = phi i32 [ %13, %12 ], [ %51, %50 ]
  tail call void @ext4_exit_pending() #26
  br label %54

54:                                               ; preds = %52, %9
  %55 = phi i32 [ %10, %9 ], [ %53, %52 ]
  tail call void @ext4_exit_es() #26
  br label %56

56:                                               ; preds = %54, %33, %6
  %57 = phi i32 [ %55, %54 ], [ %7, %6 ], [ 0, %33 ]
  ret i32 %57
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_other_inode_update_time(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 6
  %19 = load i16, ptr %18, align 4
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 4
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_other_inode_update_time, ptr %5, i32 0, i32 5
  %24 = load i32, ptr %23, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.60, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %20, i32 noundef %22, i32 noundef %24) #26
  %25 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %26

26:                                               ; preds = %8, %3
  %27 = phi i32 [ %25, %8 ], [ %6, %3 ]
  ret i32 %27
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_free_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 6
  %17 = load i16, ptr %16, align 8
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 3
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 4
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_free_inode, ptr %5, i32 0, i32 5
  %24 = load i64, ptr %23, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.63, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18, i32 noundef %20, i32 noundef %22, i64 noundef %24) #26
  %25 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %26

26:                                               ; preds = %8, %3
  %27 = phi i32 [ %25, %8 ], [ %6, %3 ]
  ret i32 %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_request_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_request_inode, ptr %5, i32 0, i32 3
  %17 = load i16, ptr %16, align 4
  %18 = zext i16 %17 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.65, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18) #26
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_allocate_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_inode, ptr %5, i32 0, i32 4
  %19 = load i16, ptr %18, align 4
  %20 = zext i16 %19 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.66, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %20) #26
  %21 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %22

22:                                               ; preds = %8, %3
  %23 = phi i32 [ %21, %8 ], [ %6, %3 ]
  ret i32 %23
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_evict_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_evict_inode, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.69, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_drop_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_drop_inode, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.71, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_nfs_commit_metadata(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_nfs_commit_metadata, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.72, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mark_inode_dirty(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_mark_inode_dirty, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = inttoptr i32 %17 to ptr
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.75, i32 noundef %12, i32 noundef %13, i32 noundef %15, ptr noundef %18) #26
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_begin_ordered_truncate(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_begin_ordered_truncate, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.78, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__write_begin(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__write_begin, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.83, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__write_end(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__write_end, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.85, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_writepages(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 5
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 6
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 8
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 9
  %27 = load i8, ptr %26, align 8
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 10
  %30 = load i8, ptr %29, align 1
  %31 = zext i8 %30 to i32
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages, ptr %5, i32 0, i32 7
  %33 = load i32, ptr %32, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.96, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i64 noundef %21, i64 noundef %23, i32 noundef %25, i32 noundef %28, i32 noundef %31, i32 noundef %33) #26
  %34 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %35

35:                                               ; preds = %8, %3
  %36 = phi i32 [ %34, %8 ], [ %6, %3 ]
  ret i32 %36
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_da_write_pages(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.98, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_da_write_pages_extent(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %5, i32 0, i32 3
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_da_write_pages_extent, ptr %5, i32 0, i32 5
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %22, ptr noundef nonnull @trace_raw_output_ext4_da_write_pages_extent.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.101, i32 noundef %13, i32 noundef %14, i32 noundef %16, i64 noundef %18, i32 noundef %20, ptr noundef %23) #26
  %24 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_writepages_result(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 7
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_writepages_result, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.109, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__page_op(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__page_op, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.111, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_invalidatepage_op(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_invalidatepage_op, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.114, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_discard_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %5, i32 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_blocks, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.117, i32 noundef %12, i32 noundef %13, i64 noundef %15, i64 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__mb_new_pa(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__mb_new_pa, ptr %5, i32 0, i32 4
  %21 = load i64, ptr %20, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.121, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19, i64 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mb_release_inode_pa(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_inode_pa, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.123, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mb_release_group_pa(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %5, i32 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_release_group_pa, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.124, i32 noundef %12, i32 noundef %13, i64 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_discard_preallocations(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_discard_preallocations, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.126, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mb_discard_preallocations(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_mb_discard_preallocations, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.127, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_request_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %35

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 10
  %18 = load i32, ptr %17, align 8
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %18, ptr noundef nonnull @trace_raw_output_ext4_request_blocks.__flags) #26
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 3
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 7
  %25 = load i64, ptr %24, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 5
  %27 = load i32, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 6
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 8
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_request_blocks, ptr %5, i32 0, i32 9
  %33 = load i64, ptr %32, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.134, i32 noundef %13, i32 noundef %14, i32 noundef %16, ptr noundef %19, i32 noundef %21, i32 noundef %23, i64 noundef %25, i32 noundef %27, i32 noundef %29, i64 noundef %31, i64 noundef %33) #26
  %34 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %35

35:                                               ; preds = %8, %3
  %36 = phi i32 [ %34, %8 ], [ %6, %3 ]
  ret i32 %36
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_allocate_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %37

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 11
  %18 = load i32, ptr %17, align 8
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %18, ptr noundef nonnull @trace_raw_output_ext4_allocate_blocks.__flags) #26
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 3
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 8
  %27 = load i64, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 6
  %29 = load i32, ptr %28, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 7
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 9
  %33 = load i64, ptr %32, align 8
  %34 = getelementptr inbounds %struct.trace_event_raw_ext4_allocate_blocks, ptr %5, i32 0, i32 10
  %35 = load i64, ptr %34, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.151, i32 noundef %13, i32 noundef %14, i32 noundef %16, ptr noundef %19, i32 noundef %21, i64 noundef %23, i32 noundef %25, i64 noundef %27, i32 noundef %29, i32 noundef %31, i64 noundef %33, i64 noundef %35) #26
  %36 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %37

37:                                               ; preds = %8, %3
  %38 = phi i32 [ %36, %8 ], [ %6, %3 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_free_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 6
  %18 = load i16, ptr %17, align 8
  %19 = zext i16 %18 to i32
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 3
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 4
  %23 = load i32, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_free_blocks, ptr %5, i32 0, i32 5
  %25 = load i32, ptr %24, align 4
  %26 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %25, ptr noundef nonnull @trace_raw_output_ext4_free_blocks.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.152, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %19, i64 noundef %21, i32 noundef %23, ptr noundef %26) #26
  %27 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %28

28:                                               ; preds = %8, %3
  %29 = phi i32 [ %27, %8 ], [ %6, %3 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_sync_file_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_enter, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.161, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_sync_file_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_file_exit, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.162, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_sync_fs(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_sync_fs, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.164, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_alloc_da_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_alloc_da_blocks, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.166, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mballoc_alloc(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %64

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 5
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 6
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 3
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 9
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 8
  %28 = load i32, ptr %27, align 4
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 10
  %30 = load i32, ptr %29, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 7
  %32 = load i32, ptr %31, align 4
  %33 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 13
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 12
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 14
  %38 = load i32, ptr %37, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 11
  %40 = load i32, ptr %39, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 15
  %42 = load i16, ptr %41, align 4
  %43 = zext i16 %42 to i32
  %44 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 16
  %45 = load i16, ptr %44, align 2
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 20
  %48 = load i8, ptr %47, align 2
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 18
  %51 = load i16, ptr %50, align 2
  %52 = zext i16 %51 to i32
  %53 = tail call ptr @trace_print_flags_seq(ptr noundef %10, ptr noundef nonnull @.str.150, i32 noundef %52, ptr noundef nonnull @trace_raw_output_ext4_mballoc_alloc.__flags) #26
  %54 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 19
  %55 = load i16, ptr %54, align 4
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_alloc, ptr %5, i32 0, i32 17
  %58 = load i16, ptr %57, align 4
  %59 = icmp eq i16 %58, 0
  %60 = zext i16 %58 to i32
  %61 = shl nuw i32 1, %60
  %62 = select i1 %59, i32 0, i32 %61
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.185, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %26, i32 noundef %28, i32 noundef %30, i32 noundef %32, i32 noundef %34, i32 noundef %36, i32 noundef %38, i32 noundef %40, i32 noundef %43, i32 noundef %46, i32 noundef %49, ptr noundef %53, i32 noundef %56, i32 noundef %62) #26
  %63 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %64

64:                                               ; preds = %8, %3
  %65 = phi i32 [ %63, %8 ], [ %6, %3 ]
  ret i32 %65
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_mballoc_prealloc(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 5
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 6
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 3
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 9
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 8
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 10
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_mballoc_prealloc, ptr %5, i32 0, i32 7
  %31 = load i32, ptr %30, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.186, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef %29, i32 noundef %31) #26
  %32 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %33

33:                                               ; preds = %8, %3
  %34 = phi i32 [ %32, %8 ], [ %6, %3 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__mballoc(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__mballoc, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.187, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_forget(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %5, i32 0, i32 5
  %17 = load i16, ptr %16, align 4
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_forget, ptr %5, i32 0, i32 3
  %22 = load i64, ptr %21, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.189, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18, i32 noundef %20, i64 noundef %22) #26
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_da_update_reserve_space(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 7
  %17 = load i16, ptr %16, align 4
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 3
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 4
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 5
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_da_update_reserve_space, ptr %5, i32 0, i32 6
  %26 = load i32, ptr %25, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.194, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18, i64 noundef %20, i32 noundef %22, i32 noundef %24, i32 noundef %26) #26
  %27 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %28

28:                                               ; preds = %8, %3
  %29 = phi i32 [ %27, %8 ], [ %6, %3 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_da_reserve_space(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %5, i32 0, i32 5
  %17 = load i16, ptr %16, align 4
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %5, i32 0, i32 3
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_da_reserve_space, ptr %5, i32 0, i32 4
  %22 = load i32, ptr %21, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.195, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18, i64 noundef %20, i32 noundef %22) #26
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_da_release_space(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 6
  %17 = load i16, ptr %16, align 8
  %18 = zext i16 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 3
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 4
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_da_release_space, ptr %5, i32 0, i32 5
  %24 = load i32, ptr %23, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.197, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18, i64 noundef %20, i32 noundef %22, i32 noundef %24) #26
  %25 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %26

26:                                               ; preds = %8, %3
  %27 = phi i32 [ %25, %8 ], [ %6, %3 ]
  ret i32 %27
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__bitmap_load(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__bitmap_load, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.199, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_read_block_bitmap_load(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_read_block_bitmap_load, ptr %5, i32 0, i32 3
  %17 = load i8, ptr %16, align 4, !range !27
  %18 = zext i8 %17 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.202, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %18) #26
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__fallocate_mode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %5, i32 0, i32 3
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %5, i32 0, i32 4
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__fallocate_mode, ptr %5, i32 0, i32 5
  %22 = load i32, ptr %21, align 8
  %23 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %22, ptr noundef nonnull @trace_raw_output_ext4__fallocate_mode.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.203, i32 noundef %13, i32 noundef %14, i32 noundef %16, i64 noundef %18, i64 noundef %20, ptr noundef %23) #26
  %24 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fallocate_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_fallocate_exit, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.209, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_unlink_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %5, i32 0, i32 4
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_enter, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.211, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_unlink_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_unlink_exit, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.162, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__truncate(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__truncate, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.212, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_convert_to_initialized_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_enter, ptr %5, i32 0, i32 7
  %25 = load i64, ptr %24, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.221, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i64 noundef %25) #26
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_convert_to_initialized_fastpath(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 7
  %25 = load i64, ptr %24, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 8
  %27 = load i32, ptr %26, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 9
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_convert_to_initialized_fastpath, ptr %5, i32 0, i32 10
  %31 = load i64, ptr %30, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.225, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23, i64 noundef %25, i32 noundef %27, i32 noundef %29, i64 noundef %31) #26
  %32 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %33

33:                                               ; preds = %8, %3
  %34 = phi i32 [ %32, %8 ], [ %6, %3 ]
  ret i32 %34
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__map_blocks_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %5, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_enter, ptr %5, i32 0, i32 5
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %22, ptr noundef nonnull @trace_raw_output_ext4__map_blocks_enter.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.226, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, ptr noundef %23) #26
  %24 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__map_blocks_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 3
  %18 = load i32, ptr %17, align 8
  %19 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %18, ptr noundef nonnull @trace_raw_output_ext4__map_blocks_exit.__flags) #26
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 4
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 7
  %27 = load i32, ptr %26, align 8
  %28 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %27, ptr noundef nonnull @trace_raw_output_ext4__map_blocks_exit.__flags.241) #26
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4__map_blocks_exit, ptr %5, i32 0, i32 8
  %30 = load i32, ptr %29, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.240, i32 noundef %13, i32 noundef %14, i32 noundef %16, ptr noundef %19, i32 noundef %21, i64 noundef %23, i32 noundef %25, ptr noundef %28, i32 noundef %30) #26
  %31 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %32

32:                                               ; preds = %8, %3
  %33 = phi i32 [ %31, %8 ], [ %6, %3 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_load_extent(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_load_extent, ptr %5, i32 0, i32 3
  %19 = load i64, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.242, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i64 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_load_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_load_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.243, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_journal_start(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start, ptr %5, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = inttoptr i32 %21 to ptr
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.246, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, ptr noundef %22) #26
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_journal_start_reserved(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_journal_start_reserved, ptr %5, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = inttoptr i32 %17 to ptr
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.247, i32 noundef %12, i32 noundef %13, i32 noundef %15, ptr noundef %18) #26
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__trim(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4__trim, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.251, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_handle_unwritten_extents(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 4
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 5
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 6
  %22 = load i32, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 3
  %24 = load i32, ptr %23, align 8
  %25 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.150, i32 noundef %24, ptr noundef nonnull @trace_raw_output_ext4_ext_handle_unwritten_extents.__flags) #26
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 7
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_handle_unwritten_extents, ptr %5, i32 0, i32 8
  %29 = load i64, ptr %28, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.254, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i64 noundef %20, i32 noundef %22, ptr noundef %25, i32 noundef %27, i64 noundef %29) #26
  %30 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_get_implied_cluster_alloc_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 3
  %16 = load i32, ptr %15, align 8
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 4
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 5
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 2
  %22 = load i32, ptr %21, align 4
  %23 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %22, ptr noundef nonnull @trace_raw_output_ext4_get_implied_cluster_alloc_exit.__flags) #26
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_get_implied_cluster_alloc_exit, ptr %5, i32 0, i32 6
  %25 = load i32, ptr %24, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.255, i32 noundef %13, i32 noundef %14, i32 noundef %16, i64 noundef %18, i32 noundef %20, ptr noundef %23, i32 noundef %25) #26
  %26 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_show_extent(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %5, i32 0, i32 3
  %19 = load i64, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_show_extent, ptr %5, i32 0, i32 5
  %21 = load i16, ptr %20, align 4
  %22 = zext i16 %21 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.257, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i64 noundef %19, i32 noundef %22) #26
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_remove_blocks(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 6
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 5
  %19 = load i64, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 7
  %21 = load i16, ptr %20, align 4
  %22 = zext i16 %21 to i32
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 3
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 4
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 8
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 9
  %30 = load i32, ptr %29, align 8
  %31 = getelementptr inbounds %struct.trace_event_raw_ext4_remove_blocks, ptr %5, i32 0, i32 10
  %32 = load i32, ptr %31, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.266, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i64 noundef %19, i32 noundef %22, i32 noundef %24, i32 noundef %26, i64 noundef %28, i32 noundef %30, i32 noundef %32) #26
  %33 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %34

34:                                               ; preds = %8, %3
  %35 = phi i32 [ %33, %8 ], [ %6, %3 ]
  ret i32 %35
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_rm_leaf(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 5
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 6
  %23 = load i16, ptr %22, align 8
  %24 = zext i16 %23 to i32
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 7
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 8
  %28 = load i32, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_leaf, ptr %5, i32 0, i32 9
  %30 = load i32, ptr %29, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.268, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i64 noundef %21, i32 noundef %24, i64 noundef %26, i32 noundef %28, i32 noundef %30) #26
  %31 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %32

32:                                               ; preds = %8, %3
  %33 = phi i32 [ %31, %8 ], [ %6, %3 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_rm_idx(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_rm_idx, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.269, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_remove_space(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.272, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_ext_remove_space_done(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %32

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 6
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 7
  %25 = load i32, ptr %24, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 8
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_ext4_ext_remove_space_done, ptr %5, i32 0, i32 9
  %29 = load i16, ptr %28, align 8
  %30 = zext i16 %29 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.274, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i64 noundef %23, i32 noundef %25, i32 noundef %27, i32 noundef %30) #26
  %31 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %32

32:                                               ; preds = %8, %3
  %33 = phi i32 [ %31, %8 ], [ %6, %3 ]
  ret i32 %33
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__es_extent(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 3
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 5
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4__es_extent, ptr %5, i32 0, i32 6
  %24 = load i8, ptr %23, align 8
  %25 = zext i8 %24 to i32
  %26 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %25, ptr noundef nonnull @trace_raw_output_ext4__es_extent.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.276, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i64 noundef %22, ptr noundef %26) #26
  %27 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %28

28:                                               ; preds = %8, %3
  %29 = phi i32 [ %27, %8 ], [ %6, %3 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_remove_extent(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_es_remove_extent, ptr %5, i32 0, i32 4
  %19 = load i64, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.281, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i64 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_find_extent_range_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_enter, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.282, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_find_extent_range_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 3
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 5
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_find_extent_range_exit, ptr %5, i32 0, i32 6
  %24 = load i8, ptr %23, align 8
  %25 = zext i8 %24 to i32
  %26 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %25, ptr noundef nonnull @trace_raw_output_ext4_es_find_extent_range_exit.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.276, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i64 noundef %22, ptr noundef %26) #26
  %27 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %28

28:                                               ; preds = %8, %3
  %29 = phi i32 [ %27, %8 ], [ %6, %3 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_lookup_extent_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_enter, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.282, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_lookup_extent_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %5 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %6 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %7 = load ptr, ptr %6, align 8
  %8 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %35

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 7
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 3
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 4
  %22 = load i32, ptr %21, align 4
  %23 = icmp eq i32 %18, 0
  br i1 %23, label %30, label %24

24:                                               ; preds = %10
  %25 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 5
  %26 = load i64, ptr %25, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_es_lookup_extent_exit, ptr %7, i32 0, i32 6
  %28 = load i8, ptr %27, align 8
  %29 = zext i8 %28 to i32
  br label %30

30:                                               ; preds = %24, %10
  %31 = phi i64 [ %26, %24 ], [ 0, %10 ]
  %32 = phi i32 [ %29, %24 ], [ 0, %10 ]
  %33 = tail call ptr @trace_print_flags_seq(ptr noundef %5, ptr noundef nonnull @.str.106, i32 noundef %32, ptr noundef nonnull @trace_raw_output_ext4_es_lookup_extent_exit.__flags) #26
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.283, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %22, i64 noundef %31, ptr noundef %33) #26
  %34 = tail call i32 @trace_handle_return(ptr noundef %4) #26
  br label %35

35:                                               ; preds = %30, %3
  %36 = phi i32 [ %34, %30 ], [ %8, %3 ]
  ret i32 %36
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4__es_shrink_enter(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4__es_shrink_enter, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.286, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_shrink_scan_exit(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink_scan_exit, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.288, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_collapse_range(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_collapse_range, ptr %5, i32 0, i32 4
  %19 = load i64, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.289, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i64 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_insert_range(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_insert_range, ptr %5, i32 0, i32 4
  %19 = load i64, ptr %18, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.289, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i64 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_shrink(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %5, i32 0, i32 3
  %17 = load i64, ptr %16, align 8
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_es_shrink, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.294, i32 noundef %12, i32 noundef %13, i32 noundef %15, i64 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_es_insert_delayed_block(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 8
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 3
  %18 = load i32, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 5
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 6
  %24 = load i8, ptr %23, align 8
  %25 = zext i8 %24 to i32
  %26 = tail call ptr @trace_print_flags_seq(ptr noundef %9, ptr noundef nonnull @.str.106, i32 noundef %25, ptr noundef nonnull @trace_raw_output_ext4_es_insert_delayed_block.__flags) #26
  %27 = getelementptr inbounds %struct.trace_event_raw_ext4_es_insert_delayed_block, ptr %5, i32 0, i32 7
  %28 = load i8, ptr %27, align 1, !range !27
  %29 = zext i8 %28 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.295, i32 noundef %13, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i64 noundef %22, ptr noundef %26, i32 noundef %29) #26
  %30 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %31

31:                                               ; preds = %8, %3
  %32 = phi i32 [ %30, %8 ], [ %6, %3 ]
  ret i32 %32
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fsmap_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = lshr i32 %15, 20
  %17 = and i32 %15, 1048575
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 4
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 5
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_fsmap_class, ptr %5, i32 0, i32 6
  %25 = load i64, ptr %24, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.302, i32 noundef %12, i32 noundef %13, i32 noundef %16, i32 noundef %17, i32 noundef %19, i64 noundef %21, i64 noundef %23, i64 noundef %25) #26
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_getfsmap_class(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %27

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = lshr i32 %15, 20
  %17 = and i32 %15, 1048575
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 3
  %19 = load i64, ptr %18, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 4
  %21 = load i64, ptr %20, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 5
  %23 = load i64, ptr %22, align 8
  %24 = getelementptr inbounds %struct.trace_event_raw_ext4_getfsmap_class, ptr %5, i32 0, i32 6
  %25 = load i64, ptr %24, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.303, i32 noundef %12, i32 noundef %13, i32 noundef %16, i32 noundef %17, i64 noundef %19, i64 noundef %21, i64 noundef %23, i64 noundef %25) #26
  %26 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %27

27:                                               ; preds = %8, %3
  %28 = phi i32 [ %26, %8 ], [ %6, %3 ]
  ret i32 %28
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_shutdown(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_shutdown, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.304, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_error(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %5, i32 0, i32 2
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_error, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.308, i32 noundef %12, i32 noundef %13, ptr noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_prefetch_bitmaps(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_prefetch_bitmaps, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.311, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_lazy_itable_init(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_lazy_itable_init, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.199, i32 noundef %12, i32 noundef %13, i32 noundef %15) #26
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_replay_scan(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay_scan, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.314, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_replay(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_replay, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.318, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_commit_start(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_start, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.319, i32 noundef %12, i32 noundef %13) #26
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_commit_stop(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 5
  %21 = load i32, ptr %20, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_commit_stop, ptr %5, i32 0, i32 6
  %23 = load i32, ptr %22, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.325, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, i32 noundef %23) #26
  %24 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %25

25:                                               ; preds = %8, %3
  %26 = phi i32 [ %24, %8 ], [ %6, %3 ]
  ret i32 %26
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_stats(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %59

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %11 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %5, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = lshr i32 %12, 20
  %14 = and i32 %12, 1048575
  %15 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 0, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols) #26
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_stats, ptr %5, i32 0, i32 2
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.ext4_sb_info, ptr %17, i32 0, i32 162
  %19 = load i32, ptr %18, align 16
  %20 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 1, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.338) #26
  %21 = load ptr, ptr %16, align 4
  %22 = getelementptr %struct.ext4_sb_info, ptr %21, i32 0, i32 162, i32 0, i32 1
  %23 = load i32, ptr %22, align 4
  %24 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 2, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.339) #26
  %25 = load ptr, ptr %16, align 4
  %26 = getelementptr %struct.ext4_sb_info, ptr %25, i32 0, i32 162, i32 0, i32 2
  %27 = load i32, ptr %26, align 8
  %28 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 3, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.340) #26
  %29 = load ptr, ptr %16, align 4
  %30 = getelementptr %struct.ext4_sb_info, ptr %29, i32 0, i32 162, i32 0, i32 3
  %31 = load i32, ptr %30, align 4
  %32 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 4, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.341) #26
  %33 = load ptr, ptr %16, align 4
  %34 = getelementptr %struct.ext4_sb_info, ptr %33, i32 0, i32 162, i32 0, i32 4
  %35 = load i32, ptr %34, align 16
  %36 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 5, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.342) #26
  %37 = load ptr, ptr %16, align 4
  %38 = getelementptr %struct.ext4_sb_info, ptr %37, i32 0, i32 162, i32 0, i32 5
  %39 = load i32, ptr %38, align 4
  %40 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 6, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.343) #26
  %41 = load ptr, ptr %16, align 4
  %42 = getelementptr %struct.ext4_sb_info, ptr %41, i32 0, i32 162, i32 0, i32 6
  %43 = load i32, ptr %42, align 8
  %44 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 7, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.344) #26
  %45 = load ptr, ptr %16, align 4
  %46 = getelementptr %struct.ext4_sb_info, ptr %45, i32 0, i32 162, i32 0, i32 7
  %47 = load i32, ptr %46, align 4
  %48 = tail call ptr @trace_print_symbols_seq(ptr noundef %9, i32 noundef 8, ptr noundef nonnull @trace_raw_output_ext4_fc_stats.symbols.345) #26
  %49 = load ptr, ptr %16, align 4
  %50 = getelementptr %struct.ext4_sb_info, ptr %49, i32 0, i32 162, i32 0, i32 8
  %51 = load i32, ptr %50, align 16
  %52 = getelementptr inbounds %struct.ext4_sb_info, ptr %49, i32 0, i32 162, i32 1
  %53 = load i32, ptr %52, align 8
  %54 = getelementptr inbounds %struct.ext4_sb_info, ptr %49, i32 0, i32 162, i32 2
  %55 = load i32, ptr %54, align 4
  %56 = getelementptr inbounds %struct.ext4_sb_info, ptr %49, i32 0, i32 162, i32 5
  %57 = load i32, ptr %56, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.328, i32 noundef %13, i32 noundef %14, ptr noundef %15, i32 noundef %19, ptr noundef %20, i32 noundef %23, ptr noundef %24, i32 noundef %27, ptr noundef %28, i32 noundef %31, ptr noundef %32, i32 noundef %35, ptr noundef %36, i32 noundef %39, ptr noundef %40, i32 noundef %43, ptr noundef %44, i32 noundef %47, ptr noundef %48, i32 noundef %51, i32 noundef %53, i32 noundef %55, i32 noundef %57) #26
  %58 = tail call i32 @trace_handle_return(ptr noundef %10) #26
  br label %59

59:                                               ; preds = %8, %3
  %60 = phi i32 [ %58, %8 ], [ %6, %3 ]
  ret i32 %60
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_track_create(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_create, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.346, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, ptr noundef nonnull @.str.347) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_track_link(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_link, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.346, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, ptr noundef nonnull @.str.348) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_track_unlink(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_unlink, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.346, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, ptr noundef nonnull @.str.349) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_track_inode(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_inode, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.350, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_fc_track_range(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 4
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %5, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %5, i32 0, i32 5
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %5, i32 0, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_ext4_fc_track_range, ptr %5, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.351, i32 noundef %12, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21) #26
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_ext4_update_sb(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #26
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %5, i32 0, i32 1
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 20
  %13 = and i32 %11, 1048575
  %14 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %5, i32 0, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = getelementptr inbounds %struct.trace_event_raw_ext4_update_sb, ptr %5, i32 0, i32 3
  %17 = load i32, ptr %16, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.353, i32 noundef %12, i32 noundef %13, i64 noundef %15, i32 noundef %17) #26
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #26
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #13

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #14

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @end_buffer_read_sync(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @submit_bh(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wait_on_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__getblk_gfp(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__brelse(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crypto_shash_update(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsnotify(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_abort(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_commit_super(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 14
  %5 = load ptr, ptr %4, align 64
  %6 = icmp eq ptr %5, null
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.block_device, ptr %9, i32 0, i32 7
  %11 = load ptr, ptr %10, align 4
  %12 = tail call ptr @inode_to_bdi(ptr noundef %11) #26
  %13 = getelementptr inbounds %struct.backing_dev_info, ptr %12, i32 0, i32 14
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %7
  tail call fastcc void @ext4_update_super(ptr noundef %0)
  %17 = load volatile i32, ptr %5, align 4
  %18 = and i32 %17, 1024
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = load volatile i32, ptr %5, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %20, %16
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.359)
  tail call void @_clear_bit(i32 noundef 10, ptr noundef nonnull %5) #26
  %25 = load volatile i32, ptr %5, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %24
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %5) #26
  br label %29

29:                                               ; preds = %28, %24, %20
  tail call void @mark_buffer_dirty(ptr noundef nonnull %5) #26
  %30 = load ptr, ptr %2, align 4
  %31 = getelementptr inbounds %struct.ext4_sb_info, ptr %30, i32 0, i32 17
  %32 = load i32, ptr %31, align 4
  %33 = and i32 %32, 131072
  %34 = or i32 %33, 2048
  %35 = tail call i32 @__sync_dirty_buffer(ptr noundef nonnull %5, i32 noundef %34) #26
  %36 = load volatile i32, ptr %5, align 4
  %37 = and i32 %36, 1024
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %29
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.360)
  tail call void @_clear_bit(i32 noundef 10, ptr noundef nonnull %5) #26
  %40 = load volatile i32, ptr %5, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @_set_bit(i32 noundef 0, ptr noundef nonnull %5) #26
  br label %44

44:                                               ; preds = %43, %39, %29, %7, %1
  %45 = phi i32 [ -22, %1 ], [ -19, %7 ], [ %35, %29 ], [ %35, %39 ], [ %35, %43 ]
  ret i32 %45
}

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #15

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ext4_update_super(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 14
  %7 = load ptr, ptr %6, align 64
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #26, !srcloc !16
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %7, ptr %7, i32 4, ptr elementtype(i32) %7) #26, !srcloc !19
  %13 = extractvalue { i32, i32, i32 } %12, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !20
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %11, %1
  tail call void @__lock_buffer(ptr noundef %7) #26
  br label %17

17:                                               ; preds = %16, %11
  %18 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %31

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 12
  %24 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 90
  %25 = tail call i64 @ktime_get_real_seconds() #26
  %26 = tail call i64 @llvm.smax.i64(i64 %25, i64 0) #26
  %27 = tail call i64 @llvm.umin.i64(i64 %26, i64 1099511627775) #26
  %28 = trunc i64 %27 to i32
  store i32 %28, ptr %23, align 4
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i8
  store i8 %30, ptr %24, align 1
  br label %31

31:                                               ; preds = %22, %17
  %32 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 108
  %33 = load i64, ptr %32, align 8
  %34 = load i32, ptr @nr_cpu_ids, align 4
  %35 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #33
  %36 = icmp ult i32 %35, %34
  br i1 %36, label %37, label %55

37:                                               ; preds = %31
  %38 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %39 = load ptr, ptr %38, align 4
  %40 = getelementptr inbounds %struct.block_device, ptr %39, i32 0, i32 2
  %41 = load ptr, ptr %40, align 8
  %42 = ptrtoint ptr %41 to i32
  br label %43

43:                                               ; preds = %43, %37
  %44 = phi i32 [ %35, %37 ], [ %53, %43 ]
  %45 = phi i32 [ 0, %37 ], [ %52, %43 ]
  %46 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %44
  %47 = load i32, ptr %46, align 4
  %48 = add i32 %47, %42
  %49 = inttoptr i32 %48 to ptr
  %50 = getelementptr %struct.disk_stats, ptr %49, i32 0, i32 1, i32 1
  %51 = load i32, ptr %50, align 4
  %52 = add i32 %51, %45
  %53 = tail call i32 @cpumask_next(i32 noundef %44, ptr noundef nonnull @__cpu_possible_mask) #33
  %54 = icmp ult i32 %53, %34
  br i1 %54, label %43, label %55

55:                                               ; preds = %43, %31
  %56 = phi i32 [ 0, %31 ], [ %52, %43 ]
  %57 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 107
  %58 = load i32, ptr %57, align 4
  %59 = sub i32 %56, %58
  %60 = lshr i32 %59, 1
  %61 = zext i32 %60 to i64
  %62 = add i64 %33, %61
  %63 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 64
  store i64 %62, ptr %63, align 8
  %64 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 36, i32 3
  %65 = load ptr, ptr %64, align 8
  %66 = icmp eq ptr %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %55
  %68 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 36
  %69 = tail call i64 @__percpu_counter_sum(ptr noundef %68) #26
  %70 = tail call i64 @llvm.smax.i64(i64 %69, i64 0) #26
  %71 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 12
  %72 = load i32, ptr %71, align 16
  %73 = zext i32 %72 to i64
  %74 = shl i64 %70, %73
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 3
  store i32 %75, ptr %76, align 4
  %77 = lshr i64 %74, 32
  %78 = trunc i64 %77 to i32
  %79 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 52
  store i32 %78, ptr %79, align 8
  br label %80

80:                                               ; preds = %67, %55
  %81 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 37, i32 3
  %82 = load ptr, ptr %81, align 8
  %83 = icmp eq ptr %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 37
  %86 = tail call i64 @__percpu_counter_sum(ptr noundef %85) #26
  %87 = tail call i64 @llvm.smax.i64(i64 %86, i64 0) #26
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 4
  store i32 %88, ptr %89, align 8
  br label %90

90:                                               ; preds = %84, %80
  %91 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 141
  tail call void @_raw_spin_lock(ptr noundef %91) #26
  %92 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 142
  %93 = load i32, ptr %92, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %173

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 16
  %97 = load i16, ptr %96, align 2
  %98 = or i16 %97, 2
  store i16 %98, ptr %96, align 2
  %99 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 70
  %100 = load i32, ptr %99, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %132

102:                                              ; preds = %95
  %103 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 94
  %104 = load i8, ptr %103, align 8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %132

106:                                              ; preds = %102
  %107 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 148
  %108 = load i64, ptr %107, align 32
  %109 = tail call i64 @llvm.smax.i64(i64 %108, i64 0) #26
  %110 = tail call i64 @llvm.umin.i64(i64 %109, i64 1099511627775) #26
  %111 = trunc i64 %110 to i32
  store i32 %111, ptr %99, align 4
  %112 = lshr i64 %110, 32
  %113 = trunc i64 %112 to i8
  store i8 %113, ptr %103, align 1
  %114 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 73
  %115 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 147
  %116 = load ptr, ptr %115, align 8
  %117 = tail call ptr @strncpy(ptr noundef %114, ptr noundef %116, i32 noundef 32)
  %118 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 144
  %119 = load i32, ptr %118, align 4
  %120 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 74
  store i32 %119, ptr %120, align 8
  %121 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 145
  %122 = load i32, ptr %121, align 8
  %123 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 71
  store i32 %122, ptr %123, align 4
  %124 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 146
  %125 = load i64, ptr %124, align 16
  %126 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 72
  store i64 %125, ptr %126, align 8
  %127 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 143
  %128 = load i32, ptr %127, align 64
  %129 = tail call fastcc i32 @ext4_errno_to_code(i32 noundef %128)
  %130 = trunc i32 %129 to i8
  %131 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 96
  store i8 %130, ptr %131, align 2
  br label %132

132:                                              ; preds = %106, %102, %95
  %133 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 75
  %134 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 95
  %135 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 154
  %136 = load i64, ptr %135, align 8
  %137 = tail call i64 @llvm.smax.i64(i64 %136, i64 0) #26
  %138 = tail call i64 @llvm.umin.i64(i64 %137, i64 1099511627775) #26
  %139 = trunc i64 %138 to i32
  store i32 %139, ptr %133, align 4
  %140 = lshr i64 %138, 32
  %141 = trunc i64 %140 to i8
  store i8 %141, ptr %134, align 1
  %142 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 79
  %143 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 153
  %144 = load ptr, ptr %143, align 64
  %145 = tail call ptr @strncpy(ptr noundef %142, ptr noundef %144, i32 noundef 32)
  %146 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 150
  %147 = load i32, ptr %146, align 4
  %148 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 77
  store i32 %147, ptr %148, align 4
  %149 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 151
  %150 = load i32, ptr %149, align 16
  %151 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 76
  store i32 %150, ptr %151, align 8
  %152 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 152
  %153 = load i64, ptr %152, align 8
  %154 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 78
  store i64 %153, ptr %154, align 8
  %155 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 149
  %156 = load i32, ptr %155, align 8
  %157 = tail call fastcc i32 @ext4_errno_to_code(i32 noundef %156)
  %158 = trunc i32 %157 to i8
  %159 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 97
  store i8 %158, ptr %159, align 1
  %160 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 69
  %161 = load i32, ptr %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %169

163:                                              ; preds = %132
  %164 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 114
  %165 = load volatile i32, ptr @jiffies, align 64
  %166 = add i32 %165, 8640000
  %167 = tail call i32 @mod_timer(ptr noundef %164, i32 noundef %166) #26
  %168 = load i32, ptr %160, align 4
  br label %169

169:                                              ; preds = %163, %132
  %170 = phi i32 [ %168, %163 ], [ %161, %132 ]
  %171 = load i32, ptr %92, align 4
  %172 = add i32 %170, %171
  store i32 %172, ptr %160, align 4
  store i32 0, ptr %92, align 4
  br label %173

173:                                              ; preds = %169, %90
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %174 = load i16, ptr %91, align 4
  %175 = add i16 %174, 1
  store i16 %175, ptr %91, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  tail call void @ext4_superblock_csum_set(ptr noundef %0)
  tail call void @unlock_buffer(ptr noundef %7) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mark_buffer_dirty(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sync_dirty_buffer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @inode_to_bdi(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_real_seconds() local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #16

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #17

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong uwtable(sync)
define internal fastcc i32 @ext4_errno_to_code(i32 noundef %0) unnamed_addr #18 {
  switch i32 %0, label %21 [
    i32 5, label %17
    i32 12, label %2
    i32 74, label %3
    i32 117, label %4
    i32 28, label %5
    i32 126, label %6
    i32 30, label %7
    i32 27, label %8
    i32 17, label %9
    i32 34, label %10
    i32 75, label %11
    i32 16, label %12
    i32 20, label %13
    i32 39, label %14
    i32 108, label %15
    i32 14, label %16
  ]

2:                                                ; preds = %1
  br label %17

3:                                                ; preds = %1
  br label %17

4:                                                ; preds = %1
  br label %17

5:                                                ; preds = %1
  br label %17

6:                                                ; preds = %1
  br label %17

7:                                                ; preds = %1
  br label %17

8:                                                ; preds = %1
  br label %17

9:                                                ; preds = %1
  br label %17

10:                                               ; preds = %1
  br label %17

11:                                               ; preds = %1
  br label %17

12:                                               ; preds = %1
  br label %17

13:                                               ; preds = %1
  br label %17

14:                                               ; preds = %1
  br label %17

15:                                               ; preds = %1
  br label %17

16:                                               ; preds = %1
  br label %17

17:                                               ; preds = %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2, %1
  %18 = phi i32 [ 0, %1 ], [ 1, %2 ], [ 2, %3 ], [ 3, %4 ], [ 4, %5 ], [ 5, %6 ], [ 6, %7 ], [ 7, %8 ], [ 8, %9 ], [ 9, %10 ], [ 10, %11 ], [ 11, %12 ], [ 12, %13 ], [ 13, %14 ], [ 14, %15 ], [ 15, %16 ]
  %19 = getelementptr [16 x %struct.ext4_err_translation], ptr @err_translation, i32 0, i32 %18
  %20 = load i32, ptr %19, align 4
  br label %21

21:                                               ; preds = %17, %1
  %22 = phi i32 [ %20, %17 ], [ 1, %1 ]
  ret i32 %22
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__lock_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__percpu_counter_sum(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_u32(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_enum(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_blockdev(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_string(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_param_is_s32(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_init_fs_context(ptr nocapture noundef writeonly %0) #0 {
  %2 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %3 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 128) #31
  %4 = icmp eq ptr %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  store ptr %3, ptr %6, align 4
  store ptr @ext4_context_ops, ptr %0, align 4
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i32 [ 0, %5 ], [ -12, %1 ]
  ret i32 %8
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kill_block_super(ptr noundef) #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #20

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @ext4_fc_free(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr %3, align 4
  tail call void @kfree(ptr noundef %6) #26
  %7 = getelementptr [3 x ptr], ptr %3, i32 0, i32 1
  %8 = load ptr, ptr %7, align 4
  tail call void @kfree(ptr noundef %8) #26
  %9 = getelementptr [3 x ptr], ptr %3, i32 0, i32 2
  %10 = load ptr, ptr %9, align 4
  tail call void @kfree(ptr noundef %10) #26
  %11 = getelementptr inbounds %struct.ext4_fs_context, ptr %3, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void @kfree(ptr noundef %12) #26
  tail call void @kfree(ptr noundef nonnull %3) #26
  br label %13

13:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_parse_param(ptr noundef %0, ptr noundef %1) #0 {
  %3 = alloca %struct.fs_parse_result, align 8
  %4 = alloca %struct.path, align 8
  %5 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i32 16, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 9
  %8 = call i32 @__fs_parse(ptr noundef %7, ptr noundef nonnull @ext4_param_specs, ptr noundef %1, ptr noundef nonnull %3) #26
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %353, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 17
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 255
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi ptr [ @ext4_mount_opts, %10 ], [ %20, %14 ]
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %16, 38
  %18 = icmp eq i32 %8, %16
  %19 = select i1 %17, i1 true, i1 %18
  %20 = getelementptr %struct.mount_opts, ptr %15, i32 1
  br i1 %19, label %21, label %14

21:                                               ; preds = %14
  %22 = icmp eq i32 %13, 2
  %23 = getelementptr inbounds %struct.mount_opts, ptr %15, i32 0, i32 2
  %24 = load i32, ptr %23, align 4
  %25 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 21
  %26 = load i32, ptr %25, align 4
  %27 = or i32 %26, %24
  store i32 %27, ptr %25, align 4
  %28 = load i32, ptr %23, align 4
  %29 = and i32 %28, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.mount_opts, ptr %15, i32 0, i32 1
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 134217728
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = and i32 %33, 8388608
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %353, label %39

39:                                               ; preds = %36, %31
  %40 = phi i32 [ 1, %31 ], [ 8, %36 ]
  %41 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 18
  %42 = load i32, ptr %41, align 8
  %43 = or i32 %42, %40
  store i32 %43, ptr %41, align 8
  %44 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 17
  %45 = load i32, ptr %44, align 4
  %46 = or i32 %45, %40
  store i32 %46, ptr %44, align 4
  br label %47

47:                                               ; preds = %39, %21
  %48 = load i32, ptr %23, align 4
  %49 = and i32 %48, 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.478, ptr noundef %52)
  br label %353

53:                                               ; preds = %47
  switch i32 %8, label %295 [
    i32 13, label %54
    i32 11, label %54
    i32 6, label %56
    i32 9, label %70
    i32 24, label %72
    i32 42, label %79
    i32 31, label %87
    i32 70, label %88
    i32 71, label %99
    i32 17, label %113
    i32 53, label %124
    i32 19, label %137
    i32 18, label %144
    i32 57, label %151
    i32 63, label %166
    i32 65, label %184
    i32 47, label %191
    i32 5, label %198
    i32 4, label %208
    i32 20, label %218
    i32 21, label %227
    i32 58, label %253
    i32 30, label %264
    i32 43, label %265
    i32 74, label %265
    i32 72, label %266
    i32 69, label %288
  ]

54:                                               ; preds = %53, %53
  %55 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @deprecated_msg, ptr noundef %55, ptr noundef nonnull @.str.480)
  br label %295

56:                                               ; preds = %53
  %57 = load i32, ptr %11, align 4
  %58 = and i32 %57, 255
  %59 = icmp eq i32 %58, 2
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.481, ptr noundef %61)
  br label %353

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %64 = load i32, ptr %63, align 8
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 27
  store i64 %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %68 = load i32, ptr %67, align 8
  %69 = or i32 %68, 262144
  store i32 %69, ptr %67, align 8
  br label %353

70:                                               ; preds = %53
  %71 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.482, ptr noundef %71)
  br label %353

72:                                               ; preds = %53
  %73 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 20
  %74 = load i32, ptr %73, align 8
  %75 = or i32 %74, 1
  store i32 %75, ptr %73, align 8
  %76 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 19
  %77 = load i32, ptr %76, align 4
  %78 = or i32 %77, 1
  store i32 %78, ptr %76, align 4
  br label %353

79:                                               ; preds = %53
  %80 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @deprecated_msg, ptr noundef %80, ptr noundef nonnull @.str.483)
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.484)
  %81 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 6
  %82 = load i32, ptr %81, align 8
  %83 = or i32 %82, 8388608
  store i32 %83, ptr %81, align 8
  %84 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 5
  %85 = load i32, ptr %84, align 4
  %86 = or i32 %85, 8388608
  store i32 %86, ptr %84, align 4
  br label %353

87:                                               ; preds = %53
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.485)
  br label %353

88:                                               ; preds = %53
  %89 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %90 = load i32, ptr %89, align 8
  %91 = or i32 %90, 112
  %92 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %93 = load i32, ptr %92, align 4
  %94 = and i32 %93, -113
  %95 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %96 = load i32, ptr %95, align 8
  %97 = or i32 %96, %91
  store i32 %97, ptr %89, align 8
  %98 = or i32 %96, %94
  store i32 %98, ptr %92, align 4
  br label %353

99:                                               ; preds = %53
  %100 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %101 = load i32, ptr %100, align 8
  %102 = or i32 %101, 3072
  %103 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %104 = load i32, ptr %103, align 4
  %105 = and i32 %104, -3073
  %106 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %107 = load i32, ptr %106, align 8
  %108 = or i32 %107, %102
  store i32 %108, ptr %100, align 8
  %109 = or i32 %107, %105
  store i32 %109, ptr %103, align 4
  %110 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %111 = load i32, ptr %110, align 8
  %112 = or i32 %111, 4
  store i32 %112, ptr %110, align 8
  br label %353

113:                                              ; preds = %53
  %114 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %115 = load i32, ptr %114, align 8
  %116 = icmp ugt i32 %115, 21474836
  br i1 %116, label %117, label %118

117:                                              ; preds = %113
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.486, i32 noundef %115, i32 noundef 21474836)
  br label %353

118:                                              ; preds = %113
  %119 = mul nuw nsw i32 %115, 100
  %120 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 8
  store i32 %119, ptr %120, align 8
  %121 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %122 = load i32, ptr %121, align 8
  %123 = or i32 %122, 65536
  store i32 %123, ptr %121, align 8
  br label %353

124:                                              ; preds = %53
  %125 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %126 = load i32, ptr %125, align 8
  %127 = and i32 %126, 1
  %128 = icmp ne i32 %127, 0
  %129 = icmp ult i32 %126, 4
  %130 = or i1 %129, %128
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.487, i32 noundef %126)
  br label %353

132:                                              ; preds = %124
  %133 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 11
  store i32 %126, ptr %133, align 4
  %134 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %135 = load i32, ptr %134, align 8
  %136 = or i32 %135, 128
  store i32 %136, ptr %134, align 8
  br label %353

137:                                              ; preds = %53
  %138 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %139 = load i32, ptr %138, align 8
  %140 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 23
  store i32 %139, ptr %140, align 4
  %141 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %142 = load i32, ptr %141, align 8
  %143 = or i32 %142, 256
  store i32 %143, ptr %141, align 8
  br label %353

144:                                              ; preds = %53
  %145 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %146 = load i32, ptr %145, align 8
  %147 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 24
  store i32 %146, ptr %147, align 8
  %148 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %149 = load i32, ptr %148, align 8
  %150 = or i32 %149, 512
  store i32 %150, ptr %148, align 8
  br label %353

151:                                              ; preds = %53
  %152 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %153 = load i32, ptr %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %161, label %155

155:                                              ; preds = %151
  %156 = icmp ult i32 %153, 1073741825
  %157 = call i32 @llvm.ctpop.i32(i32 %153) #26, !range !38
  %158 = icmp ult i32 %157, 2
  %159 = and i1 %156, %158
  br i1 %159, label %161, label %160

160:                                              ; preds = %155
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.488)
  br label %353

161:                                              ; preds = %155, %151
  %162 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 10
  store i32 %153, ptr %162, align 8
  %163 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %164 = load i32, ptr %163, align 8
  %165 = or i32 %164, 1024
  store i32 %165, ptr %163, align 8
  br label %353

166:                                              ; preds = %53
  %167 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %168 = load i32, ptr %167, align 8
  %169 = or i32 %168, -2147483648
  store i32 %169, ptr %167, align 8
  %170 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %171 = load i32, ptr %170, align 4
  %172 = or i32 %171, -2147483648
  store i32 %172, ptr %170, align 4
  %173 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 12
  store i32 10, ptr %173, align 8
  %174 = getelementptr inbounds %struct.fs_parameter, ptr %1, i32 0, i32 1
  %175 = load i8, ptr %174, align 4
  %176 = icmp eq i8 %175, 2
  br i1 %176, label %177, label %180

177:                                              ; preds = %166
  %178 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %179 = load i32, ptr %178, align 8
  store i32 %179, ptr %173, align 8
  br label %180

180:                                              ; preds = %177, %166
  %181 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %182 = load i32, ptr %181, align 8
  %183 = or i32 %182, 2048
  store i32 %183, ptr %181, align 8
  br label %353

184:                                              ; preds = %53
  %185 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %186 = load i32, ptr %185, align 8
  %187 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 13
  store i32 %186, ptr %187, align 4
  %188 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %189 = load i32, ptr %188, align 8
  %190 = or i32 %189, 4096
  store i32 %190, ptr %188, align 8
  br label %353

191:                                              ; preds = %53
  %192 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %193 = load i32, ptr %192, align 8
  %194 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 9
  store i32 %193, ptr %194, align 4
  %195 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %196 = load i32, ptr %195, align 8
  %197 = or i32 %196, 8192
  store i32 %197, ptr %195, align 8
  br label %353

198:                                              ; preds = %53
  %199 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %200 = load i32, ptr %199, align 8
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %202, label %203

202:                                              ; preds = %198
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.489, i32 noundef -1)
  br label %353

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 25
  store i32 %200, ptr %204, align 4
  %205 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %206 = load i32, ptr %205, align 8
  %207 = or i32 %206, 16384
  store i32 %207, ptr %205, align 8
  br label %353

208:                                              ; preds = %53
  %209 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %210 = load i32, ptr %209, align 8
  %211 = icmp eq i32 %210, -1
  br i1 %211, label %212, label %213

212:                                              ; preds = %208
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.490, i32 noundef -1)
  br label %353

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 26
  store i32 %210, ptr %214, align 8
  %215 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %216 = load i32, ptr %215, align 8
  %217 = or i32 %216, 32768
  store i32 %217, ptr %215, align 8
  br label %353

218:                                              ; preds = %53
  br i1 %22, label %219, label %220

219:                                              ; preds = %218
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.491)
  br label %353

220:                                              ; preds = %218
  %221 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %222 = load i32, ptr %221, align 8
  %223 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 7
  store i32 %222, ptr %223, align 4
  %224 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %225 = load i32, ptr %224, align 8
  %226 = or i32 %225, 16
  store i32 %226, ptr %224, align 8
  br label %353

227:                                              ; preds = %53
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #26
  store i64 0, ptr %4, align 8, !annotation !9
  br i1 %22, label %228, label %229

228:                                              ; preds = %227
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.491)
  br label %251

229:                                              ; preds = %227
  %230 = call i32 @fs_lookup_param(ptr noundef %0, ptr noundef %1, i1 noundef zeroext true, ptr noundef nonnull %4) #26
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.492)
  br label %251

233:                                              ; preds = %229
  %234 = getelementptr inbounds %struct.path, ptr %4, i32 0, i32 1
  %235 = load ptr, ptr %234, align 4
  %236 = getelementptr inbounds %struct.dentry, ptr %235, i32 0, i32 5
  %237 = load ptr, ptr %236, align 8
  %238 = getelementptr inbounds %struct.inode, ptr %237, i32 0, i32 12
  %239 = load i32, ptr %238, align 4
  %240 = and i32 %239, 255
  %241 = lshr i32 %239, 12
  %242 = and i32 %241, 1048320
  %243 = or i32 %242, %240
  %244 = shl i32 %239, 12
  %245 = and i32 %244, -1048576
  %246 = or i32 %243, %245
  %247 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 7
  store i32 %246, ptr %247, align 4
  %248 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %249 = load i32, ptr %248, align 8
  %250 = or i32 %249, 16
  store i32 %250, ptr %248, align 8
  call void @path_put(ptr noundef nonnull %4) #26
  br label %251

251:                                              ; preds = %233, %232, %228
  %252 = phi i32 [ -22, %228 ], [ -22, %232 ], [ 0, %233 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #26
  br label %353

253:                                              ; preds = %53
  %254 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %255 = load i32, ptr %254, align 8
  %256 = icmp ugt i32 %255, 7
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.493)
  br label %353

258:                                              ; preds = %253
  %259 = or i32 %255, 16384
  %260 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 14
  store i32 %259, ptr %260, align 8
  %261 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %262 = load i32, ptr %261, align 8
  %263 = or i32 %262, 32
  store i32 %263, ptr %261, align 8
  br label %353

264:                                              ; preds = %53
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.494)
  br label %353

265:                                              ; preds = %53, %53
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.495)
  br label %353

266:                                              ; preds = %53
  %267 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %268 = load i32, ptr %267, align 8
  switch i32 %268, label %353 [
    i32 28, label %269
    i32 29, label %278
  ]

269:                                              ; preds = %266
  %270 = getelementptr inbounds %struct.mount_opts, ptr %15, i32 0, i32 1
  %271 = load i32, ptr %270, align 4
  %272 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %273 = load i32, ptr %272, align 8
  %274 = or i32 %273, %271
  store i32 %274, ptr %272, align 8
  %275 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %276 = load i32, ptr %275, align 4
  %277 = or i32 %276, %271
  store i32 %277, ptr %275, align 4
  br label %353

278:                                              ; preds = %266
  %279 = getelementptr inbounds %struct.mount_opts, ptr %15, i32 0, i32 1
  %280 = load i32, ptr %279, align 4
  %281 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %282 = load i32, ptr %281, align 8
  %283 = or i32 %282, %280
  store i32 %283, ptr %281, align 8
  %284 = xor i32 %280, -1
  %285 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %286 = load i32, ptr %285, align 4
  %287 = and i32 %286, %284
  store i32 %287, ptr %285, align 4
  br label %353

288:                                              ; preds = %53
  %289 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %290 = load i32, ptr %289, align 8
  %291 = icmp ult i32 %290, 2
  br i1 %291, label %293, label %292

292:                                              ; preds = %288
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.496)
  br label %353

293:                                              ; preds = %288
  %294 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 3
  store i32 %290, ptr %294, align 4
  br label %353

295:                                              ; preds = %54, %53
  %296 = load i32, ptr %15, align 4
  %297 = icmp eq i32 %296, 38
  br i1 %297, label %298, label %300

298:                                              ; preds = %295
  %299 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.497, ptr noundef %299)
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 2470, i32 noundef 9, ptr noundef null) #26
  br label %353

300:                                              ; preds = %295
  %301 = getelementptr inbounds %struct.fs_parameter, ptr %1, i32 0, i32 1
  %302 = load i8, ptr %301, align 4
  %303 = icmp eq i8 %302, 1
  br i1 %303, label %308, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %struct.fs_parse_result, ptr %3, i32 0, i32 1
  %306 = load i32, ptr %305, align 8
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %309, label %308

308:                                              ; preds = %304, %300
  br label %309

309:                                              ; preds = %308, %304
  %310 = phi i32 [ 0, %308 ], [ 1, %304 ]
  %311 = phi i32 [ 1, %308 ], [ 0, %304 ]
  %312 = load i32, ptr %23, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = and i32 %312, 1
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %351, label %318, !prof !11

318:                                              ; preds = %315, %309
  %319 = phi i32 [ %311, %315 ], [ %310, %309 ]
  %320 = and i32 %312, 256
  %321 = icmp eq i32 %320, 0
  %322 = icmp eq i32 %319, 0
  %323 = getelementptr inbounds %struct.mount_opts, ptr %15, i32 0, i32 1
  %324 = load i32, ptr %323, align 4
  br i1 %321, label %338, label %325

325:                                              ; preds = %318
  %326 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 18
  %327 = load i32, ptr %326, align 8
  %328 = or i32 %327, %324
  store i32 %328, ptr %326, align 8
  br i1 %322, label %333, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 17
  %331 = load i32, ptr %330, align 4
  %332 = or i32 %331, %324
  store i32 %332, ptr %330, align 4
  br label %353

333:                                              ; preds = %325
  %334 = xor i32 %324, -1
  %335 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 17
  %336 = load i32, ptr %335, align 4
  %337 = and i32 %336, %334
  store i32 %337, ptr %335, align 4
  br label %353

338:                                              ; preds = %318
  %339 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 16
  %340 = load i32, ptr %339, align 8
  %341 = or i32 %340, %324
  store i32 %341, ptr %339, align 8
  br i1 %322, label %346, label %342

342:                                              ; preds = %338
  %343 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %344 = load i32, ptr %343, align 4
  %345 = or i32 %344, %324
  store i32 %345, ptr %343, align 4
  br label %353

346:                                              ; preds = %338
  %347 = xor i32 %324, -1
  %348 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 15
  %349 = load i32, ptr %348, align 4
  %350 = and i32 %349, %347
  store i32 %350, ptr %348, align 4
  br label %353

351:                                              ; preds = %315
  %352 = load ptr, ptr %1, align 4
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.497, ptr noundef %352)
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 2487, i32 noundef 9, ptr noundef null) #26
  br label %353

353:                                              ; preds = %351, %346, %342, %333, %329, %298, %293, %292, %278, %269, %266, %265, %264, %258, %257, %251, %220, %219, %213, %212, %203, %202, %191, %184, %180, %161, %160, %144, %137, %132, %131, %118, %117, %99, %88, %87, %79, %72, %70, %62, %60, %51, %36, %2
  %354 = phi i32 [ 0, %51 ], [ -22, %298 ], [ -22, %292 ], [ 0, %293 ], [ -22, %265 ], [ 0, %264 ], [ -22, %257 ], [ 0, %258 ], [ %252, %251 ], [ -22, %219 ], [ 0, %220 ], [ 0, %213 ], [ -22, %212 ], [ 0, %203 ], [ -22, %202 ], [ 0, %191 ], [ 0, %184 ], [ 0, %180 ], [ -22, %160 ], [ 0, %161 ], [ 0, %144 ], [ 0, %137 ], [ -22, %131 ], [ 0, %132 ], [ 0, %118 ], [ -22, %117 ], [ 0, %99 ], [ 0, %88 ], [ 0, %87 ], [ 0, %79 ], [ 0, %72 ], [ 0, %70 ], [ %8, %2 ], [ -22, %36 ], [ 0, %62 ], [ 0, %60 ], [ 0, %266 ], [ 0, %278 ], [ 0, %269 ], [ -22, %351 ], [ 0, %342 ], [ 0, %346 ], [ 0, %329 ], [ 0, %333 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #26
  ret i32 %354
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_get_tree(ptr noundef %0) #0 {
  %2 = tail call i32 @get_tree_bdev(ptr noundef %0, ptr noundef nonnull @ext4_fill_super) #26
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_reconfigure(ptr nocapture noundef %0) #0 {
  %2 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 5
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 9
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 12
  store ptr %7, ptr %8, align 4
  %9 = tail call fastcc i32 @ext4_check_opt_consistency(ptr noundef %0, ptr noundef %5)
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %408, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %6, align 4
  %15 = getelementptr inbounds %struct.ext4_fs_context, ptr %13, i32 0, i32 14
  store i32 16387, ptr %15, align 8
  %16 = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 10
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 17
  %19 = load i32, ptr %18, align 4
  %20 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 18
  %21 = load i32, ptr %20, align 16
  %22 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 23
  %23 = load i32, ptr %22, align 16
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 24
  %25 = load i32, ptr %24, align 4
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 52
  %27 = load i32, ptr %26, align 4
  %28 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 54
  %29 = load i32, ptr %28, align 4
  %30 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 53
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 47
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %11
  %36 = getelementptr inbounds %struct.journal_s, ptr %33, i32 0, i32 46
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.task_struct, ptr %37, i32 0, i32 118
  %39 = load ptr, ptr %38, align 32
  %40 = icmp eq ptr %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.io_context, ptr %39, i32 0, i32 2
  %43 = load i16, ptr %42, align 4
  %44 = zext i16 %43 to i32
  store i32 %44, ptr %15, align 8
  br label %45

45:                                               ; preds = %41, %35, %11
  tail call fastcc void @ext4_apply_options(ptr noundef %0, ptr noundef %5) #26
  %46 = load ptr, ptr %6, align 4
  %47 = getelementptr inbounds %struct.ext4_sb_info, ptr %46, i32 0, i32 17
  %48 = load i32, ptr %47, align 4
  %49 = xor i32 %48, %19
  %50 = and i32 %49, 8388608
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.653) #26
  %53 = load i32, ptr %18, align 4
  %54 = xor i32 %53, 8388608
  store i32 %54, ptr %18, align 4
  %55 = load ptr, ptr %6, align 4
  %56 = getelementptr inbounds %struct.ext4_sb_info, ptr %55, i32 0, i32 17
  %57 = load i32, ptr %56, align 4
  br label %58

58:                                               ; preds = %52, %45
  %59 = phi i32 [ %57, %52 ], [ %48, %45 ]
  %60 = phi ptr [ %55, %52 ], [ %46, %45 ]
  %61 = and i32 %59, 3072
  switch i32 %61, label %76 [
    i32 1024, label %62
    i32 2048, label %72
  ]

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.ext4_sb_info, ptr %60, i32 0, i32 18
  %64 = load i32, ptr %63, align 16
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %62
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.519) #26
  br label %377

68:                                               ; preds = %62
  %69 = and i32 %59, 4194304
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.654) #26
  br label %377

72:                                               ; preds = %58
  %73 = and i32 %59, 16777216
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.564) #26
  br label %377

76:                                               ; preds = %72, %68, %58
  %77 = load i32, ptr %18, align 4
  %78 = xor i32 %77, %19
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.655) #26
  br label %377

82:                                               ; preds = %76
  %83 = getelementptr inbounds %struct.ext4_sb_info, ptr %60, i32 0, i32 19
  %84 = load volatile i32, ptr %83, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %82
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %5, ptr noundef nonnull @__func__.__ext4_remount, i32 noundef 6296, i1 noundef zeroext true, i32 noundef 108, i64 noundef 0, ptr noundef nonnull @.str.656) #26
  %88 = load ptr, ptr %6, align 4
  %89 = getelementptr inbounds %struct.ext4_sb_info, ptr %88, i32 0, i32 17
  %90 = load i32, ptr %89, align 4
  br label %91

91:                                               ; preds = %87, %82
  %92 = phi i32 [ %90, %87 ], [ %59, %82 ]
  %93 = phi ptr [ %88, %87 ], [ %60, %82 ]
  %94 = load i32, ptr %16, align 4
  %95 = and i32 %94, -65537
  %96 = shl i32 %92, 1
  %97 = and i32 %96, 65536
  %98 = or i32 %95, %97
  store i32 %98, ptr %16, align 4
  %99 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 15
  %100 = load ptr, ptr %99, align 4
  %101 = load ptr, ptr %32, align 4
  %102 = icmp eq ptr %101, null
  br i1 %102, label %134, label %103

103:                                              ; preds = %91
  %104 = getelementptr inbounds %struct.ext4_sb_info, ptr %93, i32 0, i32 52
  %105 = load i32, ptr %104, align 4
  %106 = getelementptr inbounds %struct.journal_s, ptr %101, i32 0, i32 49
  store i32 %105, ptr %106, align 8
  %107 = getelementptr inbounds %struct.ext4_sb_info, ptr %93, i32 0, i32 54
  %108 = load i32, ptr %107, align 4
  %109 = getelementptr inbounds %struct.journal_s, ptr %101, i32 0, i32 60
  store i32 %108, ptr %109, align 8
  %110 = getelementptr inbounds %struct.ext4_sb_info, ptr %93, i32 0, i32 53
  %111 = load i32, ptr %110, align 8
  %112 = getelementptr inbounds %struct.journal_s, ptr %101, i32 0, i32 61
  store i32 %111, ptr %112, align 4
  tail call void @ext4_fc_init(ptr noundef %5, ptr noundef nonnull %101) #26
  %113 = getelementptr inbounds %struct.journal_s, ptr %101, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %113) #26
  %114 = load ptr, ptr %6, align 4
  %115 = getelementptr inbounds %struct.ext4_sb_info, ptr %114, i32 0, i32 17
  %116 = load i32, ptr %115, align 4
  %117 = load i32, ptr %101, align 8
  %118 = and i32 %117, -33
  %119 = lshr i32 %116, 12
  %120 = and i32 %119, 32
  %121 = or i32 %118, %120
  store i32 %121, ptr %101, align 8
  %122 = load ptr, ptr %6, align 4
  %123 = getelementptr inbounds %struct.ext4_sb_info, ptr %122, i32 0, i32 17
  %124 = load i32, ptr %123, align 4
  %125 = and i32 %121, -65
  %126 = lshr i32 %124, 22
  %127 = and i32 %126, 64
  %128 = or i32 %127, %125
  store i32 %128, ptr %101, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !42
  tail call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr %113, i32 0) #26, !srcloc !43
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !44
  %129 = load ptr, ptr %32, align 4
  %130 = getelementptr inbounds %struct.journal_s, ptr %129, i32 0, i32 46
  %131 = load ptr, ptr %130, align 4
  %132 = load i32, ptr %15, align 8
  %133 = tail call i32 @set_task_ioprio(ptr noundef %131, i32 noundef %132) #26
  br label %134

134:                                              ; preds = %103, %91
  %135 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 155
  %136 = tail call zeroext i1 @flush_work(ptr noundef %135) #26
  %137 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 13
  %138 = load i32, ptr %137, align 4
  %139 = load i32, ptr %16, align 4
  %140 = and i32 %139, 1
  %141 = icmp ne i32 %140, 0
  %142 = and i32 %138, 1
  %143 = icmp eq i32 %142, 0
  %144 = xor i1 %143, %141
  br i1 %144, label %271, label %145

145:                                              ; preds = %134
  %146 = load ptr, ptr %6, align 4
  %147 = getelementptr inbounds %struct.ext4_sb_info, ptr %146, i32 0, i32 19
  %148 = load volatile i32, ptr %147, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %377

151:                                              ; preds = %145
  br i1 %143, label %173, label %152

152:                                              ; preds = %151
  %153 = tail call i32 @sync_filesystem(ptr noundef %5) #26
  %154 = icmp slt i32 %153, 0
  br i1 %154, label %377, label %155

155:                                              ; preds = %152
  %156 = load i32, ptr %16, align 4
  %157 = or i32 %156, 1
  store i32 %157, ptr %16, align 4
  %158 = getelementptr inbounds %struct.ext4_super_block, ptr %100, i32 0, i32 16
  %159 = load i16, ptr %158, align 2
  %160 = and i16 %159, 1
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 25
  %164 = load i16, ptr %163, align 8
  %165 = and i16 %164, 1
  %166 = icmp eq i16 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %162
  store i16 %164, ptr %158, align 2
  br label %168

168:                                              ; preds = %167, %162, %155
  %169 = load ptr, ptr %32, align 4
  %170 = icmp eq ptr %169, null
  br i1 %170, label %271, label %171

171:                                              ; preds = %168
  %172 = tail call fastcc i32 @ext4_mark_recovery_complete(ptr noundef %5) #26
  br label %271

173:                                              ; preds = %151
  %174 = getelementptr inbounds %struct.ext4_sb_info, ptr %146, i32 0, i32 15
  %175 = load ptr, ptr %174, align 4
  %176 = getelementptr inbounds %struct.ext4_super_block, ptr %175, i32 0, i32 30
  %177 = load i32, ptr %176, align 4
  %178 = and i32 %177, 4096
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %377

180:                                              ; preds = %173
  %181 = tail call i32 @ext4_feature_set_ok(ptr noundef %5, i32 noundef 0) #26
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %377, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 8
  %185 = load i32, ptr %184, align 32
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %236, label %187

187:                                              ; preds = %232, %183
  %188 = phi i32 [ %233, %232 ], [ 0, %183 ]
  %189 = tail call ptr @ext4_get_group_desc(ptr noundef %5, i32 noundef %188, ptr noundef null) #26
  %190 = load ptr, ptr %6, align 4
  %191 = getelementptr inbounds %struct.ext4_sb_info, ptr %190, i32 0, i32 15
  %192 = load ptr, ptr %191, align 4
  %193 = getelementptr inbounds %struct.ext4_super_block, ptr %192, i32 0, i32 30
  %194 = load i32, ptr %193, align 4
  %195 = and i32 %194, 16
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %221

197:                                              ; preds = %187
  %198 = and i32 %194, 1024
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %232, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.ext4_sb_info, ptr %190, i32 0, i32 119
  %202 = load ptr, ptr %201, align 8
  %203 = icmp eq ptr %202, null
  %204 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %205 = xor i1 %204, true
  %206 = select i1 %203, i1 %205, i1 false
  br i1 %206, label %207, label %218, !prof !11

207:                                              ; preds = %200
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %208 = load ptr, ptr %6, align 4
  %209 = getelementptr inbounds %struct.ext4_sb_info, ptr %208, i32 0, i32 15
  %210 = load ptr, ptr %209, align 4
  %211 = getelementptr inbounds %struct.ext4_super_block, ptr %210, i32 0, i32 30
  %212 = load i32, ptr %211, align 4
  %213 = and i32 %212, 1024
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %232, label %215

215:                                              ; preds = %207
  %216 = getelementptr inbounds %struct.ext4_sb_info, ptr %208, i32 0, i32 119
  %217 = load ptr, ptr %216, align 8
  br label %218

218:                                              ; preds = %215, %200
  %219 = phi ptr [ %217, %215 ], [ %202, %200 ]
  %220 = icmp eq ptr %219, null
  br i1 %220, label %232, label %221

221:                                              ; preds = %218, %187
  %222 = getelementptr inbounds %struct.ext4_group_desc, ptr %189, i32 0, i32 11
  %223 = load i16, ptr %222, align 2
  %224 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %5, i32 noundef %188, ptr noundef %189) #26
  %225 = icmp eq i16 %223, %224
  br i1 %225, label %232, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.ext4_group_desc, ptr %189, i32 0, i32 11
  %228 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %5, i32 noundef %188, ptr noundef %189) #26
  %229 = zext i16 %228 to i32
  %230 = load i16, ptr %227, align 2
  %231 = zext i16 %230 to i32
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.657, i32 noundef %188, i32 noundef %229, i32 noundef %231) #26
  br label %377

232:                                              ; preds = %221, %218, %207, %197
  %233 = add nuw i32 %188, 1
  %234 = load i32, ptr %184, align 32
  %235 = icmp ult i32 %233, %234
  br i1 %235, label %187, label %236

236:                                              ; preds = %232, %183
  %237 = getelementptr inbounds %struct.ext4_super_block, ptr %100, i32 0, i32 41
  %238 = load i32, ptr %237, align 8
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %243

240:                                              ; preds = %236
  %241 = tail call i32 @ext4_orphan_file_empty(ptr noundef %5) #26
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240, %236
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.658) #26
  br label %377

244:                                              ; preds = %240
  %245 = load ptr, ptr %32, align 4
  %246 = icmp eq ptr %245, null
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = tail call fastcc i32 @ext4_clear_journal_err(ptr noundef %5, ptr noundef %100) #26
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %377

250:                                              ; preds = %247, %244
  %251 = getelementptr inbounds %struct.ext4_super_block, ptr %100, i32 0, i32 16
  %252 = load i16, ptr %251, align 2
  %253 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 25
  store i16 %252, ptr %253, align 8
  %254 = tail call fastcc i32 @ext4_setup_super(ptr noundef %5, ptr noundef %100, i32 noundef 0) #26
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %377

256:                                              ; preds = %250
  %257 = load i32, ptr %16, align 4
  %258 = and i32 %257, -2
  store i32 %258, ptr %16, align 4
  %259 = load ptr, ptr %6, align 4
  %260 = getelementptr inbounds %struct.ext4_sb_info, ptr %259, i32 0, i32 15
  %261 = load ptr, ptr %260, align 4
  %262 = getelementptr inbounds %struct.ext4_super_block, ptr %261, i32 0, i32 29
  %263 = load i32, ptr %262, align 8
  %264 = and i32 %263, 256
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %256
  %267 = getelementptr inbounds %struct.ext4_super_block, ptr %100, i32 0, i32 58
  %268 = load i64, ptr %267, align 8
  %269 = tail call i32 @ext4_multi_mount_protect(ptr noundef %5, i64 noundef %268) #26
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %377

271:                                              ; preds = %266, %256, %171, %168, %134
  %272 = load i32, ptr %16, align 4
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %280

275:                                              ; preds = %271
  %276 = load ptr, ptr %6, align 4
  %277 = getelementptr inbounds %struct.ext4_sb_info, ptr %276, i32 0, i32 17
  %278 = load i32, ptr %277, align 4
  %279 = icmp sgt i32 %278, -1
  br i1 %279, label %280, label %281

280:                                              ; preds = %275, %271
  tail call fastcc void @ext4_unregister_li_request(ptr noundef %5) #26
  br label %331

281:                                              ; preds = %275
  %282 = getelementptr inbounds %struct.ext4_sb_info, ptr %276, i32 0, i32 8
  %283 = load i32, ptr %282, align 32
  %284 = getelementptr inbounds %struct.ext4_sb_info, ptr %276, i32 0, i32 15
  %285 = load ptr, ptr %284, align 4
  %286 = getelementptr inbounds %struct.ext4_super_block, ptr %285, i32 0, i32 30
  %287 = load i32, ptr %286, align 4
  %288 = and i32 %287, 16
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %314

290:                                              ; preds = %281
  %291 = and i32 %287, 1024
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %328, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %struct.ext4_sb_info, ptr %276, i32 0, i32 119
  %295 = load ptr, ptr %294, align 8
  %296 = icmp eq ptr %295, null
  %297 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %298 = xor i1 %297, true
  %299 = select i1 %296, i1 %298, i1 false
  br i1 %299, label %300, label %311, !prof !11

300:                                              ; preds = %293
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %301 = load ptr, ptr %6, align 4
  %302 = getelementptr inbounds %struct.ext4_sb_info, ptr %301, i32 0, i32 15
  %303 = load ptr, ptr %302, align 4
  %304 = getelementptr inbounds %struct.ext4_super_block, ptr %303, i32 0, i32 30
  %305 = load i32, ptr %304, align 4
  %306 = and i32 %305, 1024
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %328, label %308

308:                                              ; preds = %300
  %309 = getelementptr inbounds %struct.ext4_sb_info, ptr %301, i32 0, i32 119
  %310 = load ptr, ptr %309, align 8
  br label %311

311:                                              ; preds = %308, %293
  %312 = phi ptr [ %310, %308 ], [ %295, %293 ]
  %313 = icmp eq ptr %312, null
  br i1 %313, label %328, label %314

314:                                              ; preds = %311, %281
  %315 = icmp eq i32 %283, 0
  br i1 %315, label %328, label %316

316:                                              ; preds = %325, %314
  %317 = phi i32 [ %326, %325 ], [ 0, %314 ]
  %318 = tail call ptr @ext4_get_group_desc(ptr noundef %5, i32 noundef %317, ptr noundef null) #26
  %319 = icmp eq ptr %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %struct.ext4_group_desc, ptr %318, i32 0, i32 6
  %322 = load i16, ptr %321, align 2
  %323 = and i16 %322, 4
  %324 = icmp eq i16 %323, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %320, %316
  %326 = add nuw i32 %317, 1
  %327 = icmp eq i32 %326, %283
  br i1 %327, label %328, label %316

328:                                              ; preds = %325, %320, %314, %311, %300, %290
  %329 = phi i32 [ %283, %311 ], [ %283, %300 ], [ %283, %290 ], [ 0, %314 ], [ %317, %320 ], [ %283, %325 ]
  %330 = tail call i32 @ext4_register_li_request(ptr noundef %5, i32 noundef %329) #26
  br label %331

331:                                              ; preds = %328, %280
  %332 = load ptr, ptr %6, align 4
  %333 = getelementptr inbounds %struct.ext4_sb_info, ptr %332, i32 0, i32 17
  %334 = load i32, ptr %333, align 4
  %335 = and i32 %334, 536870912
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %344, label %337

337:                                              ; preds = %331
  %338 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 57
  %339 = load ptr, ptr %338, align 8
  %340 = icmp eq ptr %339, null
  br i1 %340, label %341, label %344

341:                                              ; preds = %337
  %342 = tail call i32 @ext4_setup_system_zone(ptr noundef %5) #26
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %377

344:                                              ; preds = %341, %337, %331
  %345 = load ptr, ptr %32, align 4
  %346 = icmp eq ptr %345, null
  %347 = and i32 %17, 1
  %348 = icmp eq i32 %347, 0
  %349 = select i1 %346, i1 %348, i1 false
  br i1 %349, label %350, label %353

350:                                              ; preds = %344
  %351 = tail call fastcc i32 @ext4_commit_super(ptr noundef %5) #26
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %377

353:                                              ; preds = %350, %344
  %354 = load ptr, ptr %6, align 4
  %355 = getelementptr inbounds %struct.ext4_sb_info, ptr %354, i32 0, i32 17
  %356 = load i32, ptr %355, align 4
  %357 = and i32 %356, 536870912
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %365

359:                                              ; preds = %353
  %360 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 57
  %361 = load ptr, ptr %360, align 8
  %362 = icmp eq ptr %361, null
  br i1 %362, label %365, label %363

363:                                              ; preds = %359
  tail call void @ext4_release_system_zone(ptr noundef %5) #26
  %364 = load ptr, ptr %6, align 4
  br label %365

365:                                              ; preds = %363, %359, %353
  %366 = phi ptr [ %364, %363 ], [ %354, %359 ], [ %354, %353 ]
  %367 = getelementptr inbounds %struct.ext4_sb_info, ptr %366, i32 0, i32 15
  %368 = load ptr, ptr %367, align 4
  %369 = getelementptr inbounds %struct.ext4_super_block, ptr %368, i32 0, i32 29
  %370 = load i32, ptr %369, align 8
  %371 = and i32 %370, 256
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %402, label %373

373:                                              ; preds = %365
  %374 = load i32, ptr %16, align 4
  %375 = and i32 %374, 1
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %407, label %402

377:                                              ; preds = %350, %341, %266, %250, %247, %243, %226, %180, %173, %152, %145, %81, %75, %71, %67
  %378 = phi i32 [ -22, %67 ], [ -22, %71 ], [ -22, %81 ], [ %153, %152 ], [ %351, %350 ], [ %342, %341 ], [ -74, %226 ], [ -22, %243 ], [ %248, %247 ], [ %254, %250 ], [ -22, %75 ], [ -30, %145 ], [ -30, %180 ], [ -30, %173 ], [ -30, %266 ]
  store i32 %17, ptr %16, align 4
  store i32 %19, ptr %18, align 4
  store i32 %21, ptr %20, align 16
  store i32 %23, ptr %22, align 16
  store i32 %25, ptr %24, align 4
  store i32 %27, ptr %26, align 4
  store i32 %29, ptr %28, align 4
  store i32 %31, ptr %30, align 8
  %379 = load ptr, ptr %6, align 4
  %380 = getelementptr inbounds %struct.ext4_sb_info, ptr %379, i32 0, i32 17
  %381 = load i32, ptr %380, align 4
  %382 = and i32 %381, 536870912
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %390

384:                                              ; preds = %377
  %385 = getelementptr inbounds %struct.ext4_sb_info, ptr %14, i32 0, i32 57
  %386 = load ptr, ptr %385, align 8
  %387 = icmp eq ptr %386, null
  br i1 %387, label %390, label %388

388:                                              ; preds = %384
  tail call void @ext4_release_system_zone(ptr noundef %5) #26
  %389 = load ptr, ptr %6, align 4
  br label %390

390:                                              ; preds = %388, %384, %377
  %391 = phi ptr [ %389, %388 ], [ %379, %384 ], [ %379, %377 ]
  %392 = getelementptr inbounds %struct.ext4_sb_info, ptr %391, i32 0, i32 15
  %393 = load ptr, ptr %392, align 4
  %394 = getelementptr inbounds %struct.ext4_super_block, ptr %393, i32 0, i32 29
  %395 = load i32, ptr %394, align 8
  %396 = and i32 %395, 256
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %402, label %398

398:                                              ; preds = %390
  %399 = load i32, ptr %16, align 4
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %404, label %402

402:                                              ; preds = %398, %390, %373, %365
  %403 = phi i32 [ 0, %373 ], [ 0, %365 ], [ %378, %398 ], [ %378, %390 ]
  tail call void @ext4_stop_mmpd(ptr noundef %14) #26
  br label %404

404:                                              ; preds = %402, %398
  %405 = phi i32 [ %378, %398 ], [ %403, %402 ]
  %406 = icmp slt i32 %405, 0
  br i1 %406, label %408, label %407

407:                                              ; preds = %404, %373
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %5, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.652, ptr noundef nonnull @.str.651)
  br label %408

408:                                              ; preds = %407, %404, %1
  %409 = phi i32 [ 0, %407 ], [ %9, %1 ], [ %405, %404 ]
  ret i32 %409
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fs_lookup_param(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fs_parse(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_tree_bdev(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_fill_super(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = alloca %struct.anon.110, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.fs_context, ptr %1, i32 0, i32 3
  %6 = load ptr, ptr %5, align 4
  %7 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %8 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3520, i32 noundef 1600) #31
  %9 = icmp eq ptr %8, null
  br i1 %9, label %1714, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 137
  store ptr null, ptr %11, align 32
  %12 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %13 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %12, i32 noundef 3520, i32 noundef 4096) #31
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 41
  store ptr %13, ptr %14, align 16
  %15 = icmp eq ptr %13, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %10
  tail call void @kfree(ptr noundef nonnull %8) #26
  br label %1714

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  store ptr %8, ptr %18, align 4
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 45
  store ptr %0, ptr %19, align 4
  %20 = getelementptr inbounds %struct.fs_context, ptr %1, i32 0, i32 12
  store ptr %8, ptr %20, align 4
  %21 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 33
  %22 = tail call ptr @strreplace(ptr noundef %21, i8 noundef zeroext 47, i8 noundef zeroext 33) #26
  %23 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 21
  store i64 1, ptr %23, align 32
  %24 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 22
  %25 = load i32, ptr %24, align 8
  %26 = and i32 %25, 262144
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %struct.ext4_fs_context, ptr %6, i32 0, i32 27
  %30 = load i64, ptr %29, align 8
  store i64 %30, ptr %23, align 32
  br label %31

31:                                               ; preds = %28, %17
  %32 = load ptr, ptr %18, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #26
  store i32 0, ptr %4, align 4, !annotation !9
  %33 = load ptr, ptr %5, align 4
  %34 = getelementptr inbounds %struct.fs_context, ptr %1, i32 0, i32 13
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, 32768
  %37 = getelementptr inbounds %struct.ext4_fs_context, ptr %33, i32 0, i32 14
  store i32 16387, ptr %37, align 8
  %38 = getelementptr inbounds %struct.ext4_fs_context, ptr %33, i32 0, i32 3
  store i32 -1, ptr %38, align 4
  %39 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 31
  store i32 32, ptr %39, align 4
  %40 = load i32, ptr @nr_cpu_ids, align 4
  %41 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #33
  %42 = icmp ult i32 %41, %40
  br i1 %42, label %43, label %61

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %45 = load ptr, ptr %44, align 4
  %46 = getelementptr inbounds %struct.block_device, ptr %45, i32 0, i32 2
  %47 = load ptr, ptr %46, align 8
  %48 = ptrtoint ptr %47 to i32
  br label %49

49:                                               ; preds = %49, %43
  %50 = phi i32 [ %41, %43 ], [ %59, %49 ]
  %51 = phi i32 [ 0, %43 ], [ %58, %49 ]
  %52 = getelementptr [16 x i32], ptr @__per_cpu_offset, i32 0, i32 %50
  %53 = load i32, ptr %52, align 4
  %54 = add i32 %53, %48
  %55 = inttoptr i32 %54 to ptr
  %56 = getelementptr %struct.disk_stats, ptr %55, i32 0, i32 1, i32 1
  %57 = load i32, ptr %56, align 4
  %58 = add i32 %57, %51
  %59 = tail call i32 @cpumask_next(i32 noundef %50, ptr noundef nonnull @__cpu_possible_mask) #33
  %60 = icmp ult i32 %59, %40
  br i1 %60, label %49, label %61

61:                                               ; preds = %49, %31
  %62 = phi i32 [ 0, %31 ], [ %58, %49 ]
  %63 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 107
  store i32 %62, ptr %63, align 4
  %64 = tail call i32 @sb_min_blocksize(ptr noundef %0, i32 noundef 1024) #26
  switch i32 %64, label %66 [
    i32 0, label %65
    i32 1024, label %84
  ]

65:                                               ; preds = %61
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.504) #26
  br label %1685

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 21
  %68 = load i64, ptr %67, align 32
  %69 = shl i64 %68, 10
  %70 = icmp ult i64 %69, 4294967296
  br i1 %70, label %71, label %78, !prof !10

71:                                               ; preds = %66
  %72 = trunc i64 %69 to i32
  %73 = freeze i32 %72
  %74 = udiv i32 %73, %64
  %75 = mul i32 %74, %64
  %76 = sub i32 %73, %75
  %77 = zext i32 %74 to i64
  br label %87

78:                                               ; preds = %66
  %79 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %64, i64 %69) #27, !srcloc !45
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = extractvalue { i64, i64 } %79, 1
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  br label %87

84:                                               ; preds = %61
  %85 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 21
  %86 = load i64, ptr %85, align 32
  br label %87

87:                                               ; preds = %84, %78, %71
  %88 = phi i64 [ %77, %71 ], [ %81, %78 ], [ %86, %84 ]
  %89 = phi i32 [ %76, %71 ], [ %83, %78 ], [ 0, %84 ]
  %90 = tail call fastcc ptr @__ext4_sb_bread_gfp(ptr noundef %0, i64 noundef %88, i32 noundef 0, i32 noundef 0) #26
  %91 = icmp ugt ptr %90, inttoptr (i32 -4096 to ptr)
  br i1 %91, label %92, label %94

92:                                               ; preds = %87
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.505) #26
  %93 = ptrtoint ptr %90 to i32
  br label %1685

94:                                               ; preds = %87
  %95 = getelementptr inbounds %struct.buffer_head, ptr %90, i32 0, i32 5
  %96 = load ptr, ptr %95, align 4
  %97 = getelementptr i8, ptr %96, i32 %89
  %98 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 15
  store ptr %97, ptr %98, align 4
  %99 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 15
  %100 = load i16, ptr %99, align 8
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 12
  store i32 %101, ptr %102, align 4
  %103 = icmp eq i16 %100, -4269
  br i1 %103, label %104, label %1580

104:                                              ; preds = %94
  %105 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 64
  %106 = load i64, ptr %105, align 8
  %107 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 108
  store i64 %106, ptr %107, align 8
  %108 = load ptr, ptr %18, align 4
  %109 = getelementptr inbounds %struct.ext4_sb_info, ptr %108, i32 0, i32 15
  %110 = load ptr, ptr %109, align 4
  %111 = getelementptr inbounds %struct.ext4_super_block, ptr %110, i32 0, i32 30
  %112 = load i32, ptr %111, align 4
  %113 = and i32 %112, 1040
  %114 = icmp eq i32 %113, 1040
  br i1 %114, label %115, label %121

115:                                              ; preds = %104
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.__ext4_fill_super, i32 noundef 4418, ptr noundef nonnull @.str.506) #26
  %116 = load ptr, ptr %18, align 4
  %117 = getelementptr inbounds %struct.ext4_sb_info, ptr %116, i32 0, i32 15
  %118 = load ptr, ptr %117, align 4
  %119 = getelementptr inbounds %struct.ext4_super_block, ptr %118, i32 0, i32 30
  %120 = load i32, ptr %119, align 4
  br label %121

121:                                              ; preds = %115, %104
  %122 = phi i32 [ %120, %115 ], [ %112, %104 ]
  %123 = phi ptr [ %116, %115 ], [ %108, %104 ]
  %124 = and i32 %122, 1024
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 61
  %128 = load i8, ptr %127, align 1
  %129 = icmp eq i8 %128, 1
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.507) #26
  br label %1668

131:                                              ; preds = %126, %121
  %132 = getelementptr inbounds %struct.ext4_sb_info, ptr %123, i32 0, i32 129
  %133 = getelementptr inbounds %struct.ext4_sb_info, ptr %123, i32 0, i32 129, i32 0, i32 1
  store ptr %0, ptr %133, align 4
  store ptr @ext4_orphan_file_block_trigger, ptr %132, align 4
  %134 = tail call ptr @crypto_alloc_shash(ptr noundef nonnull @.str.508, i32 noundef 0, i32 noundef 0) #26
  %135 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 119
  store ptr %134, ptr %135, align 8
  %136 = icmp ugt ptr %134, inttoptr (i32 -4096 to ptr)
  br i1 %136, label %137, label %140

137:                                              ; preds = %131
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.509) #26
  %138 = load ptr, ptr %135, align 8
  %139 = ptrtoint ptr %138 to i32
  store ptr null, ptr %135, align 8
  br label %1668

140:                                              ; preds = %131
  %141 = load ptr, ptr %18, align 4
  %142 = getelementptr inbounds %struct.ext4_sb_info, ptr %141, i32 0, i32 15
  %143 = load ptr, ptr %142, align 4
  %144 = getelementptr inbounds %struct.ext4_super_block, ptr %143, i32 0, i32 30
  %145 = load i32, ptr %144, align 4
  %146 = and i32 %145, 1024
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %187, label %148

148:                                              ; preds = %140
  %149 = getelementptr inbounds %struct.ext4_sb_info, ptr %141, i32 0, i32 119
  %150 = load ptr, ptr %149, align 8
  %151 = icmp eq ptr %150, null
  %152 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %153 = xor i1 %152, true
  %154 = select i1 %151, i1 %153, i1 false
  br i1 %154, label %155, label %166, !prof !11

155:                                              ; preds = %148
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %156 = load ptr, ptr %18, align 4
  %157 = getelementptr inbounds %struct.ext4_sb_info, ptr %156, i32 0, i32 15
  %158 = load ptr, ptr %157, align 4
  %159 = getelementptr inbounds %struct.ext4_super_block, ptr %158, i32 0, i32 30
  %160 = load i32, ptr %159, align 4
  %161 = and i32 %160, 1024
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %187, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %struct.ext4_sb_info, ptr %156, i32 0, i32 119
  %165 = load ptr, ptr %164, align 8
  br label %166

166:                                              ; preds = %163, %148
  %167 = phi ptr [ %156, %163 ], [ %141, %148 ]
  %168 = phi ptr [ %165, %163 ], [ %150, %148 ]
  %169 = icmp eq ptr %168, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 102
  %172 = load i32, ptr %171, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i32 16, i1 false) #26, !annotation !9
  %173 = load i32, ptr %168, align 64
  %174 = icmp eq i32 %173, 4
  br i1 %174, label %176, label %175, !prof !10

175:                                              ; preds = %170
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2447, 0\0A.popsection", ""() #26, !srcloc !23
  unreachable

176:                                              ; preds = %170
  store ptr %168, ptr %3, align 8
  %177 = getelementptr inbounds %struct.anon.110, ptr %3, i32 0, i32 1
  store i32 -1, ptr %177, align 8
  %178 = call i32 @crypto_shash_update(ptr noundef nonnull %3, ptr noundef %97, i32 noundef 1020) #26
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %181, label %180, !prof !10

180:                                              ; preds = %176
  call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/ext4.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2452, 0\0A.popsection", ""() #26, !srcloc !24
  unreachable

181:                                              ; preds = %176
  %182 = load i32, ptr %177, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #26
  %183 = icmp eq i32 %172, %182
  br i1 %183, label %184, label %186

184:                                              ; preds = %181
  %185 = load ptr, ptr %18, align 4
  br label %187

186:                                              ; preds = %181
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.510) #26
  br label %1668

187:                                              ; preds = %184, %166, %155, %140
  %188 = phi ptr [ %185, %184 ], [ %141, %140 ], [ %156, %155 ], [ %167, %166 ]
  %189 = getelementptr inbounds %struct.ext4_sb_info, ptr %188, i32 0, i32 15
  %190 = load ptr, ptr %189, align 4
  %191 = getelementptr inbounds %struct.ext4_super_block, ptr %190, i32 0, i32 29
  %192 = load i32, ptr %191, align 8
  %193 = and i32 %192, 8192
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %187
  %196 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 89
  %197 = load i32, ptr %196, align 8
  br label %236

198:                                              ; preds = %187
  %199 = getelementptr inbounds %struct.ext4_super_block, ptr %190, i32 0, i32 30
  %200 = load i32, ptr %199, align 4
  %201 = and i32 %200, 1024
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %226, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %struct.ext4_sb_info, ptr %188, i32 0, i32 119
  %205 = load ptr, ptr %204, align 8
  %206 = icmp eq ptr %205, null
  %207 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %208 = xor i1 %207, true
  %209 = select i1 %206, i1 %208, i1 false
  br i1 %209, label %210, label %221, !prof !11

210:                                              ; preds = %203
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %211 = load ptr, ptr %18, align 4
  %212 = getelementptr inbounds %struct.ext4_sb_info, ptr %211, i32 0, i32 15
  %213 = load ptr, ptr %212, align 4
  %214 = getelementptr inbounds %struct.ext4_super_block, ptr %213, i32 0, i32 30
  %215 = load i32, ptr %214, align 4
  %216 = and i32 %215, 1024
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %226, label %218

218:                                              ; preds = %210
  %219 = getelementptr inbounds %struct.ext4_sb_info, ptr %211, i32 0, i32 119
  %220 = load ptr, ptr %219, align 8
  br label %221

221:                                              ; preds = %218, %203
  %222 = phi ptr [ %213, %218 ], [ %190, %203 ]
  %223 = phi ptr [ %220, %218 ], [ %205, %203 ]
  %224 = phi ptr [ %211, %218 ], [ %188, %203 ]
  %225 = icmp eq ptr %223, null
  br i1 %225, label %226, label %233

226:                                              ; preds = %221, %210, %198
  %227 = phi ptr [ %190, %198 ], [ %213, %210 ], [ %222, %221 ]
  %228 = phi ptr [ %188, %198 ], [ %211, %210 ], [ %224, %221 ]
  %229 = getelementptr inbounds %struct.ext4_super_block, ptr %227, i32 0, i32 29
  %230 = load i32, ptr %229, align 8
  %231 = and i32 %230, 1024
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %240, label %233

233:                                              ; preds = %226, %221
  %234 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 31
  %235 = call fastcc i32 @ext4_chksum(ptr noundef %32, i32 noundef -1, ptr noundef %234, i32 noundef 16) #26
  br label %236

236:                                              ; preds = %233, %195
  %237 = phi i32 [ %235, %233 ], [ %197, %195 ]
  %238 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 120
  store i32 %237, ptr %238, align 4
  %239 = load ptr, ptr %18, align 4
  br label %240

240:                                              ; preds = %236, %226
  %241 = phi ptr [ %239, %236 ], [ %228, %226 ]
  %242 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 46
  %243 = load i32, ptr %242, align 8
  %244 = getelementptr inbounds %struct.ext4_sb_info, ptr %241, i32 0, i32 17
  %245 = load i32, ptr %244, align 4
  %246 = or i32 %245, -2147483648
  store i32 %246, ptr %244, align 4
  %247 = and i32 %243, 1
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %254, label %249

249:                                              ; preds = %240
  %250 = load ptr, ptr %18, align 4
  %251 = getelementptr inbounds %struct.ext4_sb_info, ptr %250, i32 0, i32 17
  %252 = load i32, ptr %251, align 4
  %253 = or i32 %252, 8
  store i32 %253, ptr %251, align 4
  br label %254

254:                                              ; preds = %249, %240
  %255 = and i32 %243, 2
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %254
  %258 = load ptr, ptr %18, align 4
  %259 = getelementptr inbounds %struct.ext4_sb_info, ptr %258, i32 0, i32 17
  %260 = load i32, ptr %259, align 4
  %261 = or i32 %260, 4
  store i32 %261, ptr %259, align 4
  br label %262

262:                                              ; preds = %257, %254
  %263 = and i32 %243, 16
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %270, label %265

265:                                              ; preds = %262
  %266 = load ptr, ptr %18, align 4
  %267 = getelementptr inbounds %struct.ext4_sb_info, ptr %266, i32 0, i32 17
  %268 = load i32, ptr %267, align 4
  %269 = or i32 %268, 8192
  store i32 %269, ptr %267, align 4
  br label %270

270:                                              ; preds = %265, %262
  %271 = load ptr, ptr %18, align 4
  %272 = getelementptr inbounds %struct.ext4_sb_info, ptr %271, i32 0, i32 17
  %273 = load i32, ptr %272, align 4
  %274 = or i32 %273, 16384
  store i32 %274, ptr %272, align 4
  %275 = load ptr, ptr %18, align 4
  %276 = getelementptr inbounds %struct.ext4_sb_info, ptr %275, i32 0, i32 15
  %277 = load ptr, ptr %276, align 4
  %278 = getelementptr inbounds %struct.ext4_super_block, ptr %277, i32 0, i32 28
  %279 = load i32, ptr %278, align 4
  %280 = and i32 %279, 1024
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %289, label %282

282:                                              ; preds = %270
  %283 = getelementptr inbounds %struct.ext4_sb_info, ptr %275, i32 0, i32 18
  %284 = load i32, ptr %283, align 16
  %285 = or i32 %284, 16
  store i32 %285, ptr %283, align 16
  %286 = load ptr, ptr %18, align 4
  %287 = getelementptr inbounds %struct.ext4_sb_info, ptr %286, i32 0, i32 15
  %288 = load ptr, ptr %287, align 4
  br label %289

289:                                              ; preds = %282, %270
  %290 = phi ptr [ %288, %282 ], [ %277, %270 ]
  %291 = phi ptr [ %286, %282 ], [ %275, %270 ]
  %292 = getelementptr inbounds %struct.ext4_super_block, ptr %290, i32 0, i32 30
  %293 = load i32, ptr %292, align 4
  %294 = and i32 %293, 1024
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %322, label %296

296:                                              ; preds = %289
  %297 = getelementptr inbounds %struct.ext4_sb_info, ptr %291, i32 0, i32 119
  %298 = load ptr, ptr %297, align 8
  %299 = icmp eq ptr %298, null
  %300 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %301 = xor i1 %300, true
  %302 = select i1 %299, i1 %301, i1 false
  br i1 %302, label %303, label %314, !prof !11

303:                                              ; preds = %296
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %304 = load ptr, ptr %18, align 4
  %305 = getelementptr inbounds %struct.ext4_sb_info, ptr %304, i32 0, i32 15
  %306 = load ptr, ptr %305, align 4
  %307 = getelementptr inbounds %struct.ext4_super_block, ptr %306, i32 0, i32 30
  %308 = load i32, ptr %307, align 4
  %309 = and i32 %308, 1024
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %322, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %struct.ext4_sb_info, ptr %304, i32 0, i32 119
  %313 = load ptr, ptr %312, align 8
  br label %314

314:                                              ; preds = %311, %296
  %315 = phi ptr [ %313, %311 ], [ %298, %296 ]
  %316 = phi ptr [ %304, %311 ], [ %291, %296 ]
  %317 = icmp eq ptr %315, null
  br i1 %317, label %322, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %struct.ext4_sb_info, ptr %316, i32 0, i32 17
  %320 = load i32, ptr %319, align 4
  %321 = or i32 %320, 8388608
  store i32 %321, ptr %319, align 4
  br label %322

322:                                              ; preds = %318, %314, %303, %289
  %323 = and i32 %243, 96
  switch i32 %323, label %332 [
    i32 32, label %326
    i32 64, label %324
    i32 96, label %325
  ]

324:                                              ; preds = %322
  br label %326

325:                                              ; preds = %322
  br label %326

326:                                              ; preds = %325, %324, %322
  %327 = phi i32 [ 2048, %324 ], [ 3072, %325 ], [ 1024, %322 ]
  %328 = load ptr, ptr %18, align 4
  %329 = getelementptr inbounds %struct.ext4_sb_info, ptr %328, i32 0, i32 17
  %330 = load i32, ptr %329, align 4
  %331 = or i32 %330, %327
  store i32 %331, ptr %329, align 4
  br label %332

332:                                              ; preds = %326, %322
  %333 = load ptr, ptr %98, align 4
  %334 = getelementptr inbounds %struct.ext4_super_block, ptr %333, i32 0, i32 17
  %335 = load i16, ptr %334, align 4
  %336 = icmp eq i16 %335, 1
  %337 = select i1 %336, i32 16, i32 32
  %338 = icmp eq i16 %335, 3
  %339 = select i1 %338, i32 64, i32 %337
  %340 = load ptr, ptr %18, align 4
  %341 = getelementptr inbounds %struct.ext4_sb_info, ptr %340, i32 0, i32 17
  %342 = load i32, ptr %341, align 4
  %343 = or i32 %339, %342
  store i32 %343, ptr %341, align 4
  %344 = load ptr, ptr %18, align 4
  %345 = getelementptr inbounds %struct.ext4_sb_info, ptr %344, i32 0, i32 17
  %346 = load i32, ptr %345, align 4
  %347 = or i32 %346, 536870912
  store i32 %347, ptr %345, align 4
  %348 = and i32 %243, 1024
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %355, label %350

350:                                              ; preds = %332
  %351 = load ptr, ptr %18, align 4
  %352 = getelementptr inbounds %struct.ext4_sb_info, ptr %351, i32 0, i32 17
  %353 = load i32, ptr %352, align 4
  %354 = or i32 %353, 1073741824
  store i32 %354, ptr %352, align 4
  br label %355

355:                                              ; preds = %350, %332
  %356 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 23
  %357 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 23
  %358 = load i16, ptr %357, align 8
  %359 = zext i16 %358 to i32
  store i32 %359, ptr %356, align 16
  %360 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 24
  %361 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 24
  %362 = load i16, ptr %361, align 2
  %363 = zext i16 %362 to i32
  store i32 %363, ptr %360, align 4
  %364 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 52
  store i32 500, ptr %364, align 4
  %365 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 54
  store i32 0, ptr %365, align 4
  %366 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 53
  store i32 15000, ptr %366, align 8
  %367 = and i32 %243, 256
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %374

369:                                              ; preds = %355
  %370 = load ptr, ptr %18, align 4
  %371 = getelementptr inbounds %struct.ext4_sb_info, ptr %370, i32 0, i32 17
  %372 = load i32, ptr %371, align 4
  %373 = or i32 %372, 131072
  store i32 %373, ptr %371, align 4
  br label %374

374:                                              ; preds = %369, %355
  %375 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %376 = load ptr, ptr %375, align 4
  %377 = getelementptr inbounds %struct.block_device, ptr %376, i32 0, i32 11
  %378 = load ptr, ptr %377, align 8
  %379 = icmp ne ptr %378, @ext3_fs_type
  %380 = icmp ne ptr %378, @ext2_fs_type
  %381 = and i1 %379, %380
  %382 = and i32 %243, 2048
  %383 = icmp eq i32 %382, 0
  %384 = select i1 %381, i1 %383, i1 false
  br i1 %384, label %385, label %390

385:                                              ; preds = %374
  %386 = load ptr, ptr %18, align 4
  %387 = getelementptr inbounds %struct.ext4_sb_info, ptr %386, i32 0, i32 17
  %388 = load i32, ptr %387, align 4
  %389 = or i32 %388, 134217728
  store i32 %389, ptr %387, align 4
  br label %390

390:                                              ; preds = %385, %374
  %391 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 116
  store i32 10, ptr %391, align 4
  %392 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 6
  %393 = load i32, ptr %392, align 8
  %394 = icmp ugt i32 %393, 6
  br i1 %394, label %395, label %396

395:                                              ; preds = %390
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.511, i32 noundef %393) #26
  br label %1668

396:                                              ; preds = %390
  %397 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 7
  %398 = load i32, ptr %397, align 4
  %399 = icmp ugt i32 %398, 20
  br i1 %399, label %400, label %401

400:                                              ; preds = %396
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.512, i32 noundef %398) #26
  br label %1668

401:                                              ; preds = %396
  %402 = shl nuw nsw i32 1024, %393
  %403 = icmp eq i32 %393, 2
  br i1 %403, label %404, label %409

404:                                              ; preds = %401
  %405 = load ptr, ptr %18, align 4
  %406 = getelementptr inbounds %struct.ext4_sb_info, ptr %405, i32 0, i32 17
  %407 = load i32, ptr %406, align 4
  %408 = or i32 %407, 4194304
  store i32 %408, ptr %406, align 4
  br label %409

409:                                              ; preds = %404, %401
  %410 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 22
  %411 = load i32, ptr %410, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %416

413:                                              ; preds = %409
  %414 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 29
  store i32 128, ptr %414, align 4
  %415 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 30
  store i32 11, ptr %415, align 8
  br label %472

416:                                              ; preds = %409
  %417 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 26
  %418 = load i16, ptr %417, align 8
  %419 = zext i16 %418 to i32
  %420 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 29
  store i32 %419, ptr %420, align 4
  %421 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 25
  %422 = load i32, ptr %421, align 4
  %423 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 30
  store i32 %422, ptr %423, align 8
  %424 = icmp slt i32 %422, 11
  br i1 %424, label %425, label %426

425:                                              ; preds = %416
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.513, i32 noundef %422) #26
  br label %1668

426:                                              ; preds = %416
  %427 = icmp ult i16 %418, 128
  br i1 %427, label %433, label %428

428:                                              ; preds = %426
  %429 = call i32 @llvm.ctpop.i32(i32 %419) #26, !range !38
  %430 = icmp ugt i32 %429, 1
  %431 = icmp ult i32 %402, %419
  %432 = select i1 %430, i1 true, i1 %431
  br i1 %432, label %433, label %434

433:                                              ; preds = %428, %426
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.514, i32 noundef %419) #26
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.515, i32 noundef %402) #26
  br label %1668

434:                                              ; preds = %428
  %435 = icmp ugt i16 %418, 143
  %436 = select i1 %435, i32 1, i32 1000000000
  %437 = select i1 %435, i64 15032385535, i64 2147483647
  %438 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 28
  store i32 %436, ptr %438, align 32
  %439 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 30
  store i64 %437, ptr %439, align 16
  %440 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 29
  store i64 -2147483648, ptr %440, align 8
  %441 = load i32, ptr %420, align 4
  %442 = icmp sgt i32 %441, 128
  br i1 %442, label %443, label %472

443:                                              ; preds = %434
  %444 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 56
  store i32 32, ptr %444, align 4
  %445 = load ptr, ptr %18, align 4
  %446 = getelementptr inbounds %struct.ext4_sb_info, ptr %445, i32 0, i32 15
  %447 = load ptr, ptr %446, align 4
  %448 = getelementptr inbounds %struct.ext4_super_block, ptr %447, i32 0, i32 30
  %449 = load i32, ptr %448, align 4
  %450 = and i32 %449, 64
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %472, label %452

452:                                              ; preds = %443
  %453 = add nsw i32 %441, -128
  %454 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 54
  %455 = load i16, ptr %454, align 2
  %456 = zext i16 %455 to i32
  %457 = icmp ult i32 %453, %456
  br i1 %457, label %458, label %459

458:                                              ; preds = %452
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.516, i32 noundef %456) #26
  br label %1668

459:                                              ; preds = %452
  %460 = icmp ugt i16 %455, 32
  br i1 %460, label %461, label %462

461:                                              ; preds = %459
  store i32 %456, ptr %444, align 4
  br label %462

462:                                              ; preds = %461, %459
  %463 = phi i32 [ %456, %461 ], [ 32, %459 ]
  %464 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 53
  %465 = load i16, ptr %464, align 4
  %466 = zext i16 %465 to i32
  %467 = icmp ult i32 %453, %466
  br i1 %467, label %468, label %469

468:                                              ; preds = %462
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.517, i32 noundef %466) #26
  br label %1668

469:                                              ; preds = %462
  %470 = icmp ult i32 %463, %466
  br i1 %470, label %471, label %472

471:                                              ; preds = %469
  store i32 %466, ptr %444, align 4
  br label %472

472:                                              ; preds = %471, %469, %443, %434, %413
  %473 = call fastcc i32 @parse_apply_sb_mount_options(ptr noundef %0, ptr noundef %33) #26
  %474 = icmp slt i32 %473, 0
  br i1 %474, label %1668, label %475

475:                                              ; preds = %472
  %476 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 17
  %477 = load i32, ptr %476, align 4
  %478 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 20
  store i32 %477, ptr %478, align 8
  %479 = call fastcc i32 @ext4_check_opt_consistency(ptr noundef %1, ptr noundef %0) #26
  %480 = icmp slt i32 %479, 0
  br i1 %480, label %1668, label %481

481:                                              ; preds = %475
  call fastcc void @ext4_apply_options(ptr noundef %1, ptr noundef %0) #26
  %482 = load ptr, ptr %18, align 4
  %483 = getelementptr inbounds %struct.ext4_sb_info, ptr %482, i32 0, i32 17
  %484 = load i32, ptr %483, align 4
  %485 = and i32 %484, 3072
  %486 = icmp eq i32 %485, 1024
  br i1 %486, label %487, label %527

487:                                              ; preds = %481
  %488 = load i1, ptr @__ext4_fill_super.__already_done, align 1
  br i1 %488, label %494, label %489, !prof !10

489:                                              ; preds = %487
  store i1 true, ptr @__ext4_fill_super.__already_done, align 1
  %490 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.518) #28
  %491 = load ptr, ptr %18, align 4
  %492 = getelementptr inbounds %struct.ext4_sb_info, ptr %491, i32 0, i32 17
  %493 = load i32, ptr %492, align 4
  br label %494

494:                                              ; preds = %489, %487
  %495 = phi i32 [ %493, %489 ], [ %484, %487 ]
  %496 = phi ptr [ %491, %489 ], [ %482, %487 ]
  %497 = getelementptr inbounds %struct.ext4_sb_info, ptr %496, i32 0, i32 17
  %498 = and i32 %495, -4194305
  store i32 %498, ptr %497, align 4
  %499 = load ptr, ptr %18, align 4
  %500 = getelementptr inbounds %struct.ext4_sb_info, ptr %499, i32 0, i32 18
  %501 = load i32, ptr %500, align 16
  %502 = and i32 %501, -17
  store i32 %502, ptr %500, align 16
  %503 = load ptr, ptr %18, align 4
  %504 = getelementptr inbounds %struct.ext4_sb_info, ptr %503, i32 0, i32 18
  %505 = load i32, ptr %504, align 16
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %509, label %508

508:                                              ; preds = %494
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.519) #26
  br label %1668

509:                                              ; preds = %494
  %510 = getelementptr inbounds %struct.ext4_sb_info, ptr %503, i32 0, i32 15
  %511 = load ptr, ptr %510, align 4
  %512 = getelementptr inbounds %struct.ext4_super_block, ptr %511, i32 0, i32 29
  %513 = load i32, ptr %512, align 8
  %514 = and i32 %513, 65536
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %518, label %516

516:                                              ; preds = %509
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.521) #26
  %517 = load ptr, ptr %18, align 4
  br label %518

518:                                              ; preds = %516, %509
  %519 = phi ptr [ %517, %516 ], [ %503, %509 ]
  %520 = getelementptr inbounds %struct.ext4_sb_info, ptr %519, i32 0, i32 17
  %521 = load i32, ptr %520, align 4
  %522 = and i32 %521, 134217728
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %531, label %524

524:                                              ; preds = %518
  %525 = and i32 %521, -134217729
  store i32 %525, ptr %520, align 4
  %526 = load ptr, ptr %18, align 4
  br label %531

527:                                              ; preds = %481
  %528 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 11
  %529 = load i32, ptr %528, align 8
  %530 = or i32 %529, 1
  store i32 %530, ptr %528, align 8
  br label %531

531:                                              ; preds = %527, %524, %518
  %532 = phi ptr [ %519, %518 ], [ %526, %524 ], [ %482, %527 ]
  %533 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %534 = load i32, ptr %533, align 4
  %535 = and i32 %534, -65537
  %536 = getelementptr inbounds %struct.ext4_sb_info, ptr %532, i32 0, i32 17
  %537 = load i32, ptr %536, align 4
  %538 = shl i32 %537, 1
  %539 = and i32 %538, 65536
  %540 = or i32 %539, %535
  store i32 %540, ptr %533, align 4
  %541 = load i32, ptr %410, align 4
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %543, label %558

543:                                              ; preds = %531
  %544 = getelementptr inbounds %struct.ext4_sb_info, ptr %532, i32 0, i32 15
  %545 = load ptr, ptr %544, align 4
  %546 = getelementptr inbounds %struct.ext4_super_block, ptr %545, i32 0, i32 28
  %547 = load i32, ptr %546, align 4
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %557

549:                                              ; preds = %543
  %550 = getelementptr inbounds %struct.ext4_super_block, ptr %545, i32 0, i32 30
  %551 = load i32, ptr %550, align 4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %553, label %557

553:                                              ; preds = %549
  %554 = getelementptr inbounds %struct.ext4_super_block, ptr %545, i32 0, i32 29
  %555 = load i32, ptr %554, align 8
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %558, label %557

557:                                              ; preds = %553, %549, %543
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.522) #26
  br label %558

558:                                              ; preds = %557, %553, %531
  %559 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 21
  %560 = load i32, ptr %559, align 8
  %561 = icmp eq i32 %560, 1
  br i1 %561, label %562, label %579

562:                                              ; preds = %558
  %563 = load ptr, ptr %18, align 4
  %564 = getelementptr inbounds %struct.ext4_sb_info, ptr %563, i32 0, i32 18
  %565 = load i32, ptr %564, align 16
  %566 = or i32 %565, 4
  store i32 %566, ptr %564, align 16
  %567 = load ptr, ptr %18, align 4
  %568 = getelementptr inbounds %struct.ext4_sb_info, ptr %567, i32 0, i32 15
  %569 = load ptr, ptr %568, align 4
  %570 = getelementptr inbounds %struct.ext4_super_block, ptr %569, i32 0, i32 29
  %571 = load i32, ptr %570, align 8
  %572 = and i32 %571, 128
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %575, label %574

574:                                              ; preds = %562
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.523) #26
  br label %1668

575:                                              ; preds = %562
  %576 = and i32 %571, 1024
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %579, label %578

578:                                              ; preds = %575
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.524) #26
  br label %1668

579:                                              ; preds = %575, %558
  %580 = load ptr, ptr %375, align 4
  %581 = getelementptr inbounds %struct.block_device, ptr %580, i32 0, i32 11
  %582 = load ptr, ptr %581, align 8
  %583 = icmp eq ptr %582, @ext2_fs_type
  br i1 %583, label %584, label %612

584:                                              ; preds = %579
  %585 = load ptr, ptr %18, align 4
  %586 = getelementptr inbounds %struct.ext4_sb_info, ptr %585, i32 0, i32 15
  %587 = load ptr, ptr %586, align 4
  %588 = getelementptr inbounds %struct.ext4_super_block, ptr %587, i32 0, i32 29
  %589 = load i32, ptr %588, align 8
  %590 = and i32 %589, -19
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %604

592:                                              ; preds = %584
  %593 = load i32, ptr %533, align 4
  %594 = and i32 %593, 1
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %596, label %600

596:                                              ; preds = %592
  %597 = getelementptr inbounds %struct.ext4_super_block, ptr %587, i32 0, i32 30
  %598 = load i32, ptr %597, align 4
  %599 = icmp ugt i32 %598, 7
  br i1 %599, label %604, label %600

600:                                              ; preds = %596, %592
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.525) #26
  %601 = load ptr, ptr %375, align 4
  %602 = getelementptr inbounds %struct.block_device, ptr %601, i32 0, i32 11
  %603 = load ptr, ptr %602, align 8
  br label %612

604:                                              ; preds = %596, %584
  %605 = icmp eq i32 %36, 0
  br i1 %605, label %611, label %606

606:                                              ; preds = %604
  %607 = load i32, ptr %533, align 4
  %608 = and i32 %607, 1
  %609 = call i32 @ext4_feature_set_ok(ptr noundef %0, i32 noundef %608) #26
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %1668

611:                                              ; preds = %606, %604
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.526) #26
  br label %1668

612:                                              ; preds = %600, %579
  %613 = phi ptr [ %603, %600 ], [ %582, %579 ]
  %614 = icmp eq ptr %613, @ext3_fs_type
  br i1 %614, label %615, label %627

615:                                              ; preds = %612
  %616 = call fastcc i32 @ext3_feature_set_ok(ptr noundef %0) #26
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %619, label %618

618:                                              ; preds = %615
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.527) #26
  br label %627

619:                                              ; preds = %615
  %620 = icmp eq i32 %36, 0
  br i1 %620, label %626, label %621

621:                                              ; preds = %619
  %622 = load i32, ptr %533, align 4
  %623 = and i32 %622, 1
  %624 = call i32 @ext4_feature_set_ok(ptr noundef %0, i32 noundef %623) #26
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %1668

626:                                              ; preds = %621, %619
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.528) #26
  br label %1668

627:                                              ; preds = %618, %612
  %628 = load i32, ptr %533, align 4
  %629 = and i32 %628, 1
  %630 = call i32 @ext4_feature_set_ok(ptr noundef %0, i32 noundef %629) #26
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %1668, label %632

632:                                              ; preds = %627
  %633 = load ptr, ptr %98, align 4
  %634 = getelementptr inbounds %struct.ext4_super_block, ptr %633, i32 0, i32 37
  %635 = load i16, ptr %634, align 2
  %636 = zext i16 %635 to i32
  %637 = lshr exact i32 %402, 2
  %638 = icmp ult i32 %637, %636
  br i1 %638, label %639, label %640

639:                                              ; preds = %632
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.529, i32 noundef %636) #26
  br label %1668

640:                                              ; preds = %632
  %641 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 137
  %642 = load ptr, ptr %641, align 32
  %643 = icmp eq ptr %642, null
  br i1 %643, label %648, label %644

644:                                              ; preds = %640
  br i1 %403, label %645, label %647

645:                                              ; preds = %644
  %646 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 48
  call void @_set_bit(i32 noundef 2, ptr noundef %646) #26
  br label %648

647:                                              ; preds = %644
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.530) #26
  br label %648

648:                                              ; preds = %647, %645, %640
  %649 = load ptr, ptr %18, align 4
  %650 = getelementptr inbounds %struct.ext4_sb_info, ptr %649, i32 0, i32 15
  %651 = load ptr, ptr %650, align 4
  %652 = getelementptr inbounds %struct.ext4_super_block, ptr %651, i32 0, i32 29
  %653 = load i32, ptr %652, align 8
  %654 = and i32 %653, 65536
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %662, label %656

656:                                              ; preds = %648
  %657 = getelementptr inbounds %struct.ext4_super_block, ptr %97, i32 0, i32 62
  %658 = load i8, ptr %657, align 2
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %662, label %660

660:                                              ; preds = %656
  %661 = zext i8 %658 to i32
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.533, i32 noundef %661) #26
  br label %1668

662:                                              ; preds = %656, %648
  %663 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %664 = load i32, ptr %663, align 16
  %665 = icmp eq i32 %664, %402
  br i1 %665, label %710, label %666

666:                                              ; preds = %662
  %667 = icmp eq ptr %90, null
  br i1 %667, label %669, label %668

668:                                              ; preds = %666
  call void @__brelse(ptr noundef nonnull %90) #26
  br label %669

669:                                              ; preds = %668, %666
  %670 = call i32 @sb_set_blocksize(ptr noundef %0, i32 noundef %402) #26
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %672, label %673

672:                                              ; preds = %669
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.534, i32 noundef %402) #26
  br label %1668

673:                                              ; preds = %669
  %674 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 21
  %675 = load i64, ptr %674, align 32
  %676 = shl i64 %675, 10
  %677 = icmp ult i64 %676, 4294967296
  br i1 %677, label %678, label %685, !prof !10

678:                                              ; preds = %673
  %679 = trunc i64 %676 to i32
  %680 = add nsw i32 %402, -1
  %681 = and i32 %680, %679
  %682 = add nuw nsw i32 %393, 10
  %683 = lshr i32 %679, %682
  %684 = zext i32 %683 to i64
  br label %691

685:                                              ; preds = %673
  %686 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %402, i64 %676) #27, !srcloc !45
  %687 = extractvalue { i64, i64 } %686, 0
  %688 = extractvalue { i64, i64 } %686, 1
  %689 = lshr i64 %687, 32
  %690 = trunc i64 %689 to i32
  br label %691

691:                                              ; preds = %685, %678
  %692 = phi i64 [ %684, %678 ], [ %688, %685 ]
  %693 = phi i32 [ %681, %678 ], [ %690, %685 ]
  %694 = call fastcc ptr @__ext4_sb_bread_gfp(ptr noundef %0, i64 noundef %692, i32 noundef 0, i32 noundef 0) #26
  %695 = icmp ugt ptr %694, inttoptr (i32 -4096 to ptr)
  br i1 %695, label %696, label %698

696:                                              ; preds = %691
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.535) #26
  %697 = ptrtoint ptr %694 to i32
  br label %1668

698:                                              ; preds = %691
  %699 = getelementptr inbounds %struct.buffer_head, ptr %694, i32 0, i32 5
  %700 = load ptr, ptr %699, align 4
  %701 = getelementptr i8, ptr %700, i32 %693
  store ptr %701, ptr %98, align 4
  %702 = getelementptr inbounds %struct.ext4_super_block, ptr %701, i32 0, i32 15
  %703 = load i16, ptr %702, align 8
  %704 = icmp eq i16 %703, -4269
  br i1 %704, label %705, label %709

705:                                              ; preds = %698
  %706 = load ptr, ptr %18, align 4
  %707 = getelementptr inbounds %struct.ext4_sb_info, ptr %706, i32 0, i32 15
  %708 = load ptr, ptr %707, align 4
  br label %710

709:                                              ; preds = %698
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.536) #26
  br label %1668

710:                                              ; preds = %705, %662
  %711 = phi ptr [ %651, %662 ], [ %708, %705 ]
  %712 = phi i64 [ %88, %662 ], [ %692, %705 ]
  %713 = phi ptr [ %97, %662 ], [ %701, %705 ]
  %714 = phi ptr [ %90, %662 ], [ %694, %705 ]
  %715 = getelementptr inbounds %struct.ext4_super_block, ptr %711, i32 0, i32 30
  %716 = load i32, ptr %715, align 4
  %717 = lshr i32 %716, 3
  %718 = and i32 %717, 1
  %719 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 2
  %720 = load i8, ptr %719, align 4
  %721 = zext i8 %720 to i32
  %722 = call fastcc i64 @ext4_max_bitmap_size(i32 noundef %721, i32 noundef %718) #26
  %723 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 13
  store i64 %722, ptr %723, align 8
  %724 = load i8, ptr %719, align 4
  %725 = icmp eq i32 %718, 0
  br i1 %725, label %728, label %726

726:                                              ; preds = %710
  %727 = zext i8 %724 to i64
  br label %735

728:                                              ; preds = %710
  %729 = zext i8 %724 to i32
  %730 = add nsw i32 %729, -9
  %731 = zext i32 %730 to i64
  %732 = lshr i64 4294967295, %731
  %733 = zext i8 %724 to i64
  %734 = shl i64 %732, %733
  br label %735

735:                                              ; preds = %728, %726
  %736 = phi i64 [ %727, %726 ], [ %733, %728 ]
  %737 = phi i64 [ 17592186040320, %726 ], [ %734, %728 ]
  %738 = shl i64 4294967295, %736
  %739 = call i64 @llvm.smin.i64(i64 %738, i64 %737) #26
  %740 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 4
  store i64 %739, ptr %740, align 8
  %741 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 45
  %742 = load i16, ptr %741, align 2
  %743 = zext i16 %742 to i32
  store i32 %743, ptr %32, align 64
  %744 = load ptr, ptr %18, align 4
  %745 = getelementptr inbounds %struct.ext4_sb_info, ptr %744, i32 0, i32 15
  %746 = load ptr, ptr %745, align 4
  %747 = getelementptr inbounds %struct.ext4_super_block, ptr %746, i32 0, i32 29
  %748 = load i32, ptr %747, align 8
  %749 = and i32 %748, 128
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %758, label %751

751:                                              ; preds = %735
  %752 = add i16 %742, -64
  %753 = icmp ult i16 %752, 961
  %754 = call i32 @llvm.ctpop.i32(i32 %743) #26, !range !46
  %755 = icmp ult i32 %754, 2
  %756 = select i1 %753, i1 %755, i1 false
  br i1 %756, label %759, label %757

757:                                              ; preds = %751
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.537, i32 noundef %743) #26
  br label %1668

758:                                              ; preds = %735
  store i32 32, ptr %32, align 64
  br label %759

759:                                              ; preds = %758, %751
  %760 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 8
  %761 = load i32, ptr %760, align 8
  %762 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 2
  store i32 %761, ptr %762, align 8
  %763 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 10
  %764 = load i32, ptr %763, align 8
  %765 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 4
  store i32 %764, ptr %765, align 16
  %766 = load ptr, ptr %18, align 4
  %767 = getelementptr inbounds %struct.ext4_sb_info, ptr %766, i32 0, i32 29
  %768 = load i32, ptr %767, align 4
  %769 = sdiv i32 %402, %768
  %770 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 1
  store i32 %769, ptr %770, align 4
  %771 = icmp eq i32 %769, 0
  br i1 %771, label %1580, label %772

772:                                              ; preds = %759
  %773 = icmp ult i32 %764, %769
  br i1 %773, label %777, label %774

774:                                              ; preds = %772
  %775 = shl nuw nsw i32 %402, 3
  %776 = icmp ugt i32 %764, %775
  br i1 %776, label %777, label %778

777:                                              ; preds = %774, %772
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.538, i32 noundef %764) #26
  br label %1668

778:                                              ; preds = %774
  %779 = udiv i32 %764, %769
  %780 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 5
  store i32 %779, ptr %780, align 4
  %781 = load ptr, ptr %18, align 4
  %782 = load i32, ptr %781, align 64
  %783 = udiv i32 %402, %782
  %784 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 7
  store i32 %783, ptr %784, align 4
  %785 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 14
  store ptr %714, ptr %785, align 64
  %786 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 16
  %787 = load i16, ptr %786, align 2
  %788 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 25
  store i16 %787, ptr %788, align 8
  %789 = load i32, ptr %663, align 16
  %790 = icmp ult i32 %789, 4
  %791 = lshr i32 %789, 2
  %792 = call i32 @llvm.ctlz.i32(i32 %791, i1 false) #26, !range !38
  %793 = sub nsw i32 31, %792
  %794 = select i1 %790, i32 -1, i32 %793
  %795 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 27
  store i32 %794, ptr %795, align 4
  %796 = load ptr, ptr %18, align 4
  %797 = getelementptr inbounds %struct.ext4_sb_info, ptr %796, i32 0, i32 7
  %798 = load i32, ptr %797, align 4
  %799 = icmp eq i32 %798, 0
  %800 = call i32 @llvm.ctlz.i32(i32 %798, i1 false) #26, !range !38
  %801 = sub nsw i32 31, %800
  %802 = select i1 %799, i32 -1, i32 %801
  %803 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 28
  store i32 %802, ptr %803, align 64
  %804 = getelementptr %struct.ext4_super_block, ptr %713, i32 0, i32 42, i32 0
  %805 = load i32, ptr %804, align 4
  %806 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 33, i32 0
  store i32 %805, ptr %806, align 4
  %807 = getelementptr %struct.ext4_super_block, ptr %713, i32 0, i32 42, i32 1
  %808 = load i32, ptr %807, align 4
  %809 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 33, i32 1
  store i32 %808, ptr %809, align 4
  %810 = getelementptr %struct.ext4_super_block, ptr %713, i32 0, i32 42, i32 2
  %811 = load i32, ptr %810, align 4
  %812 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 33, i32 2
  store i32 %811, ptr %812, align 4
  %813 = getelementptr %struct.ext4_super_block, ptr %713, i32 0, i32 42, i32 3
  %814 = load i32, ptr %813, align 4
  %815 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 33, i32 3
  store i32 %814, ptr %815, align 4
  %816 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 43
  %817 = load i8, ptr %816, align 4
  %818 = zext i8 %817 to i32
  %819 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 34
  store i32 %818, ptr %819, align 4
  %820 = load ptr, ptr %18, align 4
  %821 = getelementptr inbounds %struct.ext4_sb_info, ptr %820, i32 0, i32 15
  %822 = load ptr, ptr %821, align 4
  %823 = getelementptr inbounds %struct.ext4_super_block, ptr %822, i32 0, i32 28
  %824 = load i32, ptr %823, align 4
  %825 = and i32 %824, 32
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %846, label %827

827:                                              ; preds = %778
  %828 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 55
  %829 = load i32, ptr %828, align 8
  %830 = and i32 %829, 2
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %841

832:                                              ; preds = %827
  %833 = and i32 %829, 1
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %835, label %846

835:                                              ; preds = %832
  %836 = load i32, ptr %533, align 4
  %837 = and i32 %836, 1
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %839, label %841

839:                                              ; preds = %835
  %840 = or i32 %829, 2
  store i32 %840, ptr %828, align 8
  br label %841

841:                                              ; preds = %839, %835, %827
  %842 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 35
  store i32 3, ptr %842, align 8
  %843 = load ptr, ptr %18, align 4
  %844 = getelementptr inbounds %struct.ext4_sb_info, ptr %843, i32 0, i32 15
  %845 = load ptr, ptr %844, align 4
  br label %846

846:                                              ; preds = %841, %832, %778
  %847 = phi ptr [ %845, %841 ], [ %822, %832 ], [ %822, %778 ]
  %848 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 7
  %849 = load i32, ptr %848, align 4
  %850 = shl i32 1024, %849
  %851 = getelementptr inbounds %struct.ext4_super_block, ptr %847, i32 0, i32 30
  %852 = load i32, ptr %851, align 4
  %853 = and i32 %852, 512
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %874, label %855

855:                                              ; preds = %846
  %856 = icmp slt i32 %850, %402
  br i1 %856, label %857, label %858

857:                                              ; preds = %855
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.539, i32 noundef %850, i32 noundef %402) #26
  br label %1668

858:                                              ; preds = %855
  %859 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 6
  %860 = load i32, ptr %859, align 8
  %861 = sub i32 %849, %860
  %862 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 12
  store i32 %861, ptr %862, align 16
  %863 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 9
  %864 = load i32, ptr %863, align 4
  %865 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 3
  store i32 %864, ptr %865, align 4
  %866 = icmp ugt i32 %864, %775
  br i1 %866, label %867, label %868

867:                                              ; preds = %858
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.540, i32 noundef %864) #26
  br label %1668

868:                                              ; preds = %858
  %869 = load i32, ptr %762, align 8
  %870 = sdiv i32 %850, %402
  %871 = mul i32 %870, %864
  %872 = icmp eq i32 %869, %871
  br i1 %872, label %884, label %873

873:                                              ; preds = %868
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.541, i32 noundef %869, i32 noundef %864) #26
  br label %1668

874:                                              ; preds = %846
  %875 = icmp eq i32 %850, %402
  br i1 %875, label %877, label %876

876:                                              ; preds = %874
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.542, i32 noundef %850, i32 noundef %402) #26
  br label %1668

877:                                              ; preds = %874
  %878 = load i32, ptr %762, align 8
  %879 = icmp ugt i32 %878, %775
  br i1 %879, label %880, label %881

880:                                              ; preds = %877
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.543, i32 noundef %878) #26
  br label %1668

881:                                              ; preds = %877
  %882 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 3
  store i32 %878, ptr %882, align 4
  %883 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 12
  store i32 0, ptr %883, align 16
  br label %884

884:                                              ; preds = %881, %868
  %885 = phi i32 [ %870, %868 ], [ 1, %881 ]
  %886 = phi i32 [ %869, %868 ], [ %878, %881 ]
  %887 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 11
  store i32 %885, ptr %887, align 4
  %888 = shl i32 %850, 3
  %889 = icmp eq i32 %886, %888
  br i1 %889, label %890, label %895

890:                                              ; preds = %884
  %891 = load ptr, ptr %18, align 4
  %892 = getelementptr inbounds %struct.ext4_sb_info, ptr %891, i32 0, i32 18
  %893 = load i32, ptr %892, align 16
  %894 = or i32 %893, 2
  store i32 %894, ptr %892, align 16
  br label %895

895:                                              ; preds = %890, %884
  %896 = load i8, ptr %719, align 4
  %897 = zext i8 %896 to i32
  %898 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 29
  %899 = load i32, ptr %898, align 8
  %900 = and i32 %899, 128
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %907, label %902

902:                                              ; preds = %895
  %903 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 50
  %904 = load i32, ptr %903, align 8
  %905 = zext i32 %904 to i64
  %906 = shl nuw i64 %905, 32
  br label %907

907:                                              ; preds = %902, %895
  %908 = phi i64 [ %906, %902 ], [ 0, %895 ]
  %909 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 1
  %910 = load i32, ptr %909, align 4
  %911 = zext i32 %910 to i64
  %912 = or i64 %908, %911
  %913 = call i32 @generic_check_addressable(i32 noundef %897, i64 noundef %912) #26
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %916, label %915

915:                                              ; preds = %907
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.544) #26
  br label %1668

916:                                              ; preds = %907
  %917 = load ptr, ptr %18, align 4
  %918 = getelementptr inbounds %struct.ext4_sb_info, ptr %917, i32 0, i32 2
  %919 = load i32, ptr %918, align 8
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %1580, label %921

921:                                              ; preds = %916
  %922 = load ptr, ptr %375, align 4
  %923 = getelementptr inbounds %struct.block_device, ptr %922, i32 0, i32 1
  %924 = load i64, ptr %923, align 8
  %925 = load i8, ptr %719, align 4
  %926 = zext i8 %925 to i32
  %927 = add nsw i32 %926, -9
  %928 = zext i32 %927 to i64
  %929 = lshr i64 %924, %928
  %930 = icmp eq i64 %929, 0
  %931 = load i32, ptr %898, align 8
  %932 = and i32 %931, 128
  br i1 %930, label %960, label %933

933:                                              ; preds = %921
  %934 = icmp eq i32 %932, 0
  br i1 %934, label %935, label %943

935:                                              ; preds = %933
  %936 = load i32, ptr %909, align 4
  %937 = zext i32 %936 to i64
  %938 = icmp ult i64 %929, %937
  br i1 %938, label %956, label %939

939:                                              ; preds = %935
  %940 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 5
  %941 = load i32, ptr %940, align 4
  %942 = zext i32 %941 to i64
  br label %965

943:                                              ; preds = %933
  %944 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 50
  %945 = load i32, ptr %944, align 8
  %946 = zext i32 %945 to i64
  %947 = shl nuw i64 %946, 32
  %948 = load i32, ptr %909, align 4
  %949 = zext i32 %948 to i64
  %950 = or i64 %947, %949
  %951 = icmp ugt i64 %950, %929
  br i1 %951, label %956, label %952

952:                                              ; preds = %943
  %953 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 5
  %954 = load i32, ptr %953, align 4
  %955 = zext i32 %954 to i64
  br label %971

956:                                              ; preds = %943, %935
  %957 = phi i64 [ %949, %943 ], [ %937, %935 ]
  %958 = phi i64 [ %947, %943 ], [ 0, %935 ]
  %959 = or i64 %958, %957
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.545, i64 noundef %959, i64 noundef %929) #26
  br label %1668

960:                                              ; preds = %921
  %961 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 5
  %962 = load i32, ptr %961, align 4
  %963 = zext i32 %962 to i64
  %964 = icmp eq i32 %932, 0
  br i1 %964, label %965, label %971

965:                                              ; preds = %960, %939
  %966 = phi i64 [ %942, %939 ], [ %963, %960 ]
  %967 = phi i32 [ %941, %939 ], [ %962, %960 ]
  %968 = load i32, ptr %909, align 4
  %969 = zext i32 %968 to i64
  %970 = icmp ugt i32 %968, %967
  br i1 %970, label %987, label %982

971:                                              ; preds = %960, %952
  %972 = phi i64 [ %955, %952 ], [ %963, %960 ]
  %973 = phi i32 [ %954, %952 ], [ %962, %960 ]
  %974 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 50
  %975 = load i32, ptr %974, align 8
  %976 = zext i32 %975 to i64
  %977 = shl nuw i64 %976, 32
  %978 = load i32, ptr %909, align 4
  %979 = zext i32 %978 to i64
  %980 = or i64 %977, %979
  %981 = icmp ugt i64 %980, %972
  br i1 %981, label %987, label %982

982:                                              ; preds = %971, %965
  %983 = phi i32 [ %973, %971 ], [ %967, %965 ]
  %984 = phi i64 [ %979, %971 ], [ %969, %965 ]
  %985 = phi i64 [ %977, %971 ], [ 0, %965 ]
  %986 = or i64 %985, %984
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.546, i32 noundef %983, i64 noundef %986) #26
  br label %1668

987:                                              ; preds = %971, %965
  %988 = phi i1 [ false, %971 ], [ true, %965 ]
  %989 = phi i64 [ %972, %971 ], [ %966, %965 ]
  %990 = phi i32 [ %973, %971 ], [ %967, %965 ]
  %991 = phi i64 [ %979, %971 ], [ %969, %965 ]
  %992 = icmp eq i32 %990, 0
  br i1 %992, label %993, label %1001

993:                                              ; preds = %987
  %994 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 6
  %995 = load i32, ptr %994, align 8
  %996 = icmp eq i32 %995, 0
  br i1 %996, label %997, label %1001

997:                                              ; preds = %993
  %998 = load i32, ptr %887, align 4
  %999 = icmp eq i32 %998, 1
  br i1 %999, label %1000, label %1001

1000:                                             ; preds = %997
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.547) #26
  br label %1668

1001:                                             ; preds = %997, %993, %987
  br i1 %988, label %1007, label %1002

1002:                                             ; preds = %1001
  %1003 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 50
  %1004 = load i32, ptr %1003, align 8
  %1005 = zext i32 %1004 to i64
  %1006 = shl nuw i64 %1005, 32
  br label %1007

1007:                                             ; preds = %1002, %1001
  %1008 = phi i64 [ %1006, %1002 ], [ 0, %1001 ]
  %1009 = zext i32 %919 to i64
  %1010 = xor i64 %989, -1
  %1011 = add nsw i64 %1010, %1009
  %1012 = add nsw i64 %1011, %991
  %1013 = add i64 %1012, %1008
  %1014 = icmp ult i64 %1013, 4294967296
  br i1 %1014, label %1015, label %1019, !prof !10

1015:                                             ; preds = %1007
  %1016 = trunc i64 %1013 to i32
  %1017 = udiv i32 %1016, %919
  %1018 = zext i32 %1017 to i64
  br label %1022

1019:                                             ; preds = %1007
  %1020 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %919, i64 %1013) #27, !srcloc !45
  %1021 = extractvalue { i64, i64 } %1020, 1
  br label %1022

1022:                                             ; preds = %1019, %1015
  %1023 = phi i64 [ %1018, %1015 ], [ %1021, %1019 ]
  %1024 = getelementptr inbounds %struct.ext4_sb_info, ptr %917, i32 0, i32 7
  %1025 = load i32, ptr %1024, align 4
  %1026 = zext i32 %1025 to i64
  %1027 = sub nuw nsw i64 4294967296, %1026
  %1028 = icmp ugt i64 %1023, %1027
  br i1 %1028, label %1029, label %1038

1029:                                             ; preds = %1022
  br i1 %988, label %1035, label %1030

1030:                                             ; preds = %1029
  %1031 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 50
  %1032 = load i32, ptr %1031, align 8
  %1033 = zext i32 %1032 to i64
  %1034 = shl nuw i64 %1033, 32
  br label %1035

1035:                                             ; preds = %1030, %1029
  %1036 = phi i64 [ %1034, %1030 ], [ 0, %1029 ]
  %1037 = or i64 %1036, %991
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.548, i64 noundef %1023, i64 noundef %1037, i32 noundef %990, i32 noundef %919) #26
  br label %1668

1038:                                             ; preds = %1022
  %1039 = trunc i64 %1023 to i32
  %1040 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 8
  store i32 %1039, ptr %1040, align 32
  %1041 = load ptr, ptr %18, align 4
  %1042 = getelementptr inbounds %struct.ext4_sb_info, ptr %1041, i32 0, i32 2
  %1043 = load i32, ptr %1042, align 8
  %1044 = udiv i32 -1, %1043
  %1045 = call i32 @llvm.umin.i32(i32 %1044, i32 %1039) #26
  %1046 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 9
  store i32 %1045, ptr %1046, align 4
  %1047 = and i64 %1023, 4294967295
  %1048 = load i32, ptr %765, align 16
  %1049 = zext i32 %1048 to i64
  %1050 = mul nuw i64 %1047, %1049
  %1051 = load i32, ptr %713, align 8
  %1052 = zext i32 %1051 to i64
  %1053 = icmp eq i64 %1050, %1052
  br i1 %1053, label %1055, label %1054

1054:                                             ; preds = %1038
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.549, i32 noundef %1051, i64 noundef %1050) #26
  br label %1668

1055:                                             ; preds = %1038
  %1056 = load ptr, ptr %18, align 4
  %1057 = getelementptr inbounds %struct.ext4_sb_info, ptr %1056, i32 0, i32 7
  %1058 = load i32, ptr %1057, align 4
  %1059 = add i32 %1039, -1
  %1060 = add i32 %1059, %1058
  %1061 = udiv i32 %1060, %1058
  %1062 = getelementptr inbounds %struct.ext4_sb_info, ptr %1056, i32 0, i32 15
  %1063 = load ptr, ptr %1062, align 4
  %1064 = getelementptr inbounds %struct.ext4_super_block, ptr %1063, i32 0, i32 29
  %1065 = load i32, ptr %1064, align 8
  %1066 = and i32 %1065, 16
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1073, label %1068

1068:                                             ; preds = %1055
  %1069 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 47
  %1070 = load i32, ptr %1069, align 4
  %1071 = icmp ugt i32 %1070, %1061
  br i1 %1071, label %1072, label %1073

1072:                                             ; preds = %1068
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.550, i32 noundef %1070, i32 noundef %1061) #26
  br label %1668

1073:                                             ; preds = %1068, %1055
  %1074 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %1061, i32 4) #26
  %1075 = extractvalue { i32, i1 } %1074, 1
  br i1 %1075, label %1076, label %1078, !prof !11

1076:                                             ; preds = %1073
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !47
  %1077 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 16
  store volatile ptr null, ptr %1077, align 8
  br label %1083

1078:                                             ; preds = %1073
  %1079 = extractvalue { i32, i1 } %1074, 0
  %1080 = call noalias ptr @kvmalloc_node(i32 noundef %1079, i32 noundef 3264, i32 noundef -1) #30
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !47
  %1081 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 16
  store volatile ptr %1080, ptr %1081, align 8
  %1082 = icmp eq ptr %1080, null
  br i1 %1082, label %1083, label %1084

1083:                                             ; preds = %1078, %1076
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.551) #26
  br label %1668

1084:                                             ; preds = %1078
  %1085 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 41
  %1086 = load ptr, ptr %1085, align 16
  br label %1087

1087:                                             ; preds = %1087, %1084
  %1088 = phi i32 [ 0, %1084 ], [ %1090, %1087 ]
  %1089 = getelementptr [64 x %struct.bgl_lock], ptr %1086, i32 0, i32 %1088
  store i32 0, ptr %1089, align 64
  %1090 = add nuw nsw i32 %1088, 1
  %1091 = icmp eq i32 %1090, 64
  br i1 %1091, label %1092, label %1087

1092:                                             ; preds = %1087
  %1093 = icmp ugt i32 %1058, %1060
  br i1 %1093, label %1113, label %1094

1094:                                             ; preds = %1092
  %1095 = call i32 @llvm.umax.i32(i32 %1061, i32 1) #26
  br label %1096

1096:                                             ; preds = %1096, %1094
  %1097 = phi i32 [ %1099, %1096 ], [ 0, %1094 ]
  %1098 = call fastcc i64 @descriptor_loc(ptr noundef %0, i64 noundef %712, i32 noundef %1097) #26
  call void @ext4_sb_breadahead_unmovable(ptr noundef %0, i64 noundef %1098) #26
  %1099 = add nuw i32 %1097, 1
  %1100 = icmp eq i32 %1099, %1095
  br i1 %1100, label %1101, label %1096

1101:                                             ; preds = %1108, %1096
  %1102 = phi i32 [ %1111, %1108 ], [ 0, %1096 ]
  %1103 = call fastcc i64 @descriptor_loc(ptr noundef %0, i64 noundef %712, i32 noundef %1102) #26
  %1104 = call fastcc ptr @__ext4_sb_bread_gfp(ptr noundef %0, i64 noundef %1103, i32 noundef 0, i32 noundef 0) #26
  %1105 = icmp ugt ptr %1104, inttoptr (i32 -4096 to ptr)
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1101
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.552, i32 noundef %1102) #26
  %1107 = ptrtoint ptr %1104 to i32
  br label %1652

1108:                                             ; preds = %1101
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %1109 = load volatile ptr, ptr %1081, align 8
  %1110 = getelementptr ptr, ptr %1109, i32 %1102
  store ptr %1104, ptr %1110, align 4
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  %1111 = add nuw i32 %1102, 1
  %1112 = icmp eq i32 %1111, %1095
  br i1 %1112, label %1113, label %1101

1113:                                             ; preds = %1108, %1092
  %1114 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 6
  store i32 %1061, ptr %1114, align 8
  %1115 = call fastcc i32 @ext4_check_descriptors(ptr noundef %0, i64 noundef %712, ptr noundef nonnull %4) #26
  %1116 = icmp eq i32 %1115, 0
  br i1 %1116, label %1117, label %1118

1117:                                             ; preds = %1113
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.553) #26
  br label %1652

1118:                                             ; preds = %1113
  %1119 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 114
  call void @init_timer_key(ptr noundef %1119, ptr noundef nonnull @print_daily_error_info, i32 noundef 0, ptr noundef null, ptr noundef null) #26
  %1120 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 141
  store i32 0, ptr %1120, align 8
  %1121 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 155
  store i32 -32, ptr %1121, align 16
  %1122 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 155, i32 1
  store volatile ptr %1122, ptr %1122, align 4
  %1123 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 155, i32 1, i32 1
  store ptr %1122, ptr %1123, align 4
  %1124 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 155, i32 2
  store ptr @flush_stashed_error_work, ptr %1124, align 4
  %1125 = call i32 @ext4_es_register_shrinker(ptr noundef %32) #26
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1127, label %1647

1127:                                             ; preds = %1118
  %1128 = call fastcc i32 @ext4_get_stripe_size(ptr noundef %32) #26
  %1129 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 73
  store i32 %1128, ptr %1129, align 4
  %1130 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 109
  store i32 32, ptr %1130, align 32
  %1131 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 6
  store ptr @ext4_sops, ptr %1131, align 4
  %1132 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 9
  store ptr @ext4_export_ops, ptr %1132, align 16
  %1133 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 17
  store ptr @ext4_xattr_handlers, ptr %1133, align 4
  %1134 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 34
  %1135 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 31
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 32 dereferenceable(16) %1134, ptr noundef align 8 dereferenceable(16) %1135, i32 16, i1 false) #26
  %1136 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 50
  store volatile ptr %1136, ptr %1136, align 4
  %1137 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 50, i32 1
  store ptr %1136, ptr %1137, align 4
  %1138 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 49
  call void @__mutex_init(ptr noundef %1138, ptr noundef nonnull @.str.554, ptr noundef nonnull @__ext4_fill_super.__key) #26
  %1139 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 156
  store volatile i32 0, ptr %1139, align 4
  %1140 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 157
  store volatile ptr %1140, ptr %1140, align 4
  %1141 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 157, i32 0, i32 1
  store ptr %1140, ptr %1141, align 4
  %1142 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 157, i32 1
  store volatile ptr %1142, ptr %1142, align 4
  %1143 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 157, i32 1, i32 1
  store ptr %1142, ptr %1143, align 4
  %1144 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 158
  store volatile ptr %1144, ptr %1144, align 4
  %1145 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 158, i32 0, i32 1
  store ptr %1144, ptr %1145, align 4
  %1146 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 158, i32 1
  store volatile ptr %1146, ptr %1146, align 4
  %1147 = getelementptr %struct.ext4_sb_info, ptr %32, i32 0, i32 158, i32 1, i32 1
  store ptr %1146, ptr %1147, align 4
  %1148 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 159
  store i32 0, ptr %1148, align 4
  %1149 = load ptr, ptr %18, align 4
  %1150 = getelementptr inbounds %struct.ext4_sb_info, ptr %1149, i32 0, i32 19
  call void @_clear_bit(i32 noundef 2, ptr noundef %1150) #26
  %1151 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 160
  store i32 0, ptr %1151, align 8
  %1152 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 162
  %1153 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 164, i32 5
  %1154 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 13
  call void @llvm.memset.p0.i64(ptr noundef align 16 dereferenceable(76) %1152, i8 0, i64 76, i1 false) #26
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(28) %1153, i8 0, i64 28, i1 false) #26
  store ptr null, ptr %1154, align 64
  %1155 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 41
  %1156 = load i32, ptr %1155, align 8
  %1157 = icmp eq i32 %1156, 0
  %1158 = load ptr, ptr %18, align 4
  %1159 = getelementptr inbounds %struct.ext4_sb_info, ptr %1158, i32 0, i32 15
  %1160 = load ptr, ptr %1159, align 4
  br i1 %1157, label %1161, label %1171

1161:                                             ; preds = %1127
  %1162 = getelementptr inbounds %struct.ext4_super_block, ptr %1160, i32 0, i32 30
  %1163 = load i32, ptr %1162, align 4
  %1164 = and i32 %1163, 65536
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1171

1166:                                             ; preds = %1161
  %1167 = getelementptr inbounds %struct.ext4_super_block, ptr %1160, i32 0, i32 29
  %1168 = load i32, ptr %1167, align 8
  %1169 = and i32 %1168, 4
  %1170 = icmp ne i32 %1169, 0
  br label %1171

1171:                                             ; preds = %1166, %1161, %1127
  %1172 = phi i1 [ true, %1161 ], [ %1170, %1166 ], [ true, %1127 ]
  %1173 = zext i1 %1172 to i32
  %1174 = getelementptr inbounds %struct.ext4_super_block, ptr %1160, i32 0, i32 29
  %1175 = load i32, ptr %1174, align 8
  %1176 = and i32 %1175, 256
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1189, label %1178

1178:                                             ; preds = %1171
  %1179 = load i32, ptr %533, align 4
  %1180 = and i32 %1179, 1
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1182, label %1189

1182:                                             ; preds = %1178
  %1183 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 58
  %1184 = load i64, ptr %1183, align 8
  %1185 = call i32 @ext4_multi_mount_protect(ptr noundef %0, i64 noundef %1184) #26
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1187, label %1644

1187:                                             ; preds = %1182
  %1188 = load ptr, ptr %18, align 4
  br label %1189

1189:                                             ; preds = %1187, %1178, %1171
  %1190 = phi ptr [ %1188, %1187 ], [ %1158, %1178 ], [ %1158, %1171 ]
  %1191 = getelementptr inbounds %struct.ext4_sb_info, ptr %1190, i32 0, i32 17
  %1192 = load i32, ptr %1191, align 4
  %1193 = and i32 %1192, 256
  %1194 = icmp eq i32 %1193, 0
  br i1 %1194, label %1195, label %1207

1195:                                             ; preds = %1189
  %1196 = getelementptr inbounds %struct.ext4_sb_info, ptr %1190, i32 0, i32 15
  %1197 = load ptr, ptr %1196, align 4
  %1198 = getelementptr inbounds %struct.ext4_super_block, ptr %1197, i32 0, i32 28
  %1199 = load i32, ptr %1198, align 4
  %1200 = and i32 %1199, 4
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1219, label %1202

1202:                                             ; preds = %1195
  %1203 = getelementptr inbounds %struct.ext4_fs_context, ptr %33, i32 0, i32 7
  %1204 = load i32, ptr %1203, align 4
  %1205 = call fastcc i32 @ext4_load_journal(ptr noundef %0, ptr noundef %713, i32 noundef %1204) #26
  %1206 = icmp eq i32 %1205, 0
  br i1 %1206, label %1256, label %1644

1207:                                             ; preds = %1189
  %1208 = load i32, ptr %533, align 4
  %1209 = and i32 %1208, 1
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1219

1211:                                             ; preds = %1207
  %1212 = getelementptr inbounds %struct.ext4_sb_info, ptr %1190, i32 0, i32 15
  %1213 = load ptr, ptr %1212, align 4
  %1214 = getelementptr inbounds %struct.ext4_super_block, ptr %1213, i32 0, i32 29
  %1215 = load i32, ptr %1214, align 8
  %1216 = and i32 %1215, 4
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1219, label %1218

1218:                                             ; preds = %1211
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.555) #26
  br label %1630

1219:                                             ; preds = %1211, %1207, %1195
  %1220 = getelementptr inbounds %struct.ext4_sb_info, ptr %1190, i32 0, i32 18
  %1221 = load i32, ptr %1220, align 16
  %1222 = and i32 %1221, 8
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1225, label %1224

1224:                                             ; preds = %1219
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.556) #26
  br label %1630

1225:                                             ; preds = %1219
  %1226 = and i32 %1192, 16777216
  %1227 = icmp eq i32 %1226, 0
  br i1 %1227, label %1229, label %1228

1228:                                             ; preds = %1225
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.557) #26
  br label %1630

1229:                                             ; preds = %1225
  %1230 = load i32, ptr %364, align 4
  %1231 = icmp eq i32 %1230, 500
  br i1 %1231, label %1234, label %1232

1232:                                             ; preds = %1229
  %1233 = udiv i32 %1230, 100
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.558, i32 noundef %1233) #26
  br label %1630

1234:                                             ; preds = %1229
  %1235 = load i32, ptr %476, align 4
  %1236 = load i32, ptr %478, align 8
  %1237 = xor i32 %1236, %1235
  %1238 = and i32 %1237, 3072
  %1239 = icmp eq i32 %1238, 0
  br i1 %1239, label %1241, label %1240

1240:                                             ; preds = %1234
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.559) #26
  br label %1630

1241:                                             ; preds = %1234
  %1242 = and i32 %1236, -8388609
  store i32 %1242, ptr %478, align 8
  %1243 = load ptr, ptr %18, align 4
  %1244 = getelementptr inbounds %struct.ext4_sb_info, ptr %1243, i32 0, i32 17
  %1245 = load i32, ptr %1244, align 4
  %1246 = and i32 %1245, -8388609
  store i32 %1246, ptr %1244, align 4
  %1247 = load ptr, ptr %18, align 4
  %1248 = getelementptr inbounds %struct.ext4_sb_info, ptr %1247, i32 0, i32 17
  %1249 = load i32, ptr %1248, align 4
  %1250 = and i32 %1249, -3073
  store i32 %1250, ptr %1248, align 4
  %1251 = load ptr, ptr %18, align 4
  %1252 = getelementptr inbounds %struct.ext4_sb_info, ptr %1251, i32 0, i32 18
  %1253 = load i32, ptr %1252, align 16
  %1254 = and i32 %1253, -17
  store i32 %1254, ptr %1252, align 16
  %1255 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  store ptr null, ptr %1255, align 4
  br label %1329

1256:                                             ; preds = %1202
  %1257 = load ptr, ptr %18, align 4
  %1258 = getelementptr inbounds %struct.ext4_sb_info, ptr %1257, i32 0, i32 15
  %1259 = load ptr, ptr %1258, align 4
  %1260 = getelementptr inbounds %struct.ext4_super_block, ptr %1259, i32 0, i32 29
  %1261 = load i32, ptr %1260, align 8
  %1262 = and i32 %1261, 128
  %1263 = icmp eq i32 %1262, 0
  br i1 %1263, label %1270, label %1264

1264:                                             ; preds = %1256
  %1265 = getelementptr inbounds %struct.ext4_sb_info, ptr %1257, i32 0, i32 47
  %1266 = load ptr, ptr %1265, align 4
  %1267 = call i32 @jbd2_journal_set_features(ptr noundef %1266, i32 noundef 0, i32 noundef 0, i32 noundef 2) #26
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1270

1269:                                             ; preds = %1264
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.560) #26
  br label %1630

1270:                                             ; preds = %1264, %1256
  %1271 = call fastcc i32 @set_journal_csum_feature_set(ptr noundef %0) #26
  %1272 = icmp eq i32 %1271, 0
  br i1 %1272, label %1273, label %1274

1273:                                             ; preds = %1270
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.561) #26
  br label %1630

1274:                                             ; preds = %1270
  %1275 = load ptr, ptr %18, align 4
  %1276 = getelementptr inbounds %struct.ext4_sb_info, ptr %1275, i32 0, i32 18
  %1277 = load i32, ptr %1276, align 16
  %1278 = and i32 %1277, 16
  %1279 = icmp eq i32 %1278, 0
  br i1 %1279, label %1288, label %1280

1280:                                             ; preds = %1274
  %1281 = getelementptr inbounds %struct.ext4_sb_info, ptr %1275, i32 0, i32 47
  %1282 = load ptr, ptr %1281, align 4
  %1283 = call i32 @jbd2_journal_set_features(ptr noundef %1282, i32 noundef 0, i32 noundef 0, i32 noundef 32) #26
  %1284 = icmp eq i32 %1283, 0
  br i1 %1284, label %1287, label %1285

1285:                                             ; preds = %1280
  %1286 = load ptr, ptr %18, align 4
  br label %1288

1287:                                             ; preds = %1280
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.562) #26
  br label %1630

1288:                                             ; preds = %1285, %1274
  %1289 = phi ptr [ %1286, %1285 ], [ %1275, %1274 ]
  %1290 = getelementptr inbounds %struct.ext4_sb_info, ptr %1289, i32 0, i32 17
  %1291 = load i32, ptr %1290, align 4
  %1292 = and i32 %1291, 3072
  switch i32 %1292, label %1311 [
    i32 0, label %1293
    i32 2048, label %1305
    i32 3072, label %1305
  ]

1293:                                             ; preds = %1288
  %1294 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  %1295 = load ptr, ptr %1294, align 4
  %1296 = call i32 @jbd2_journal_check_available_features(ptr noundef %1295, i32 noundef 0, i32 noundef 0, i32 noundef 1) #26
  %1297 = icmp eq i32 %1296, 0
  %1298 = load ptr, ptr %18, align 4
  %1299 = getelementptr inbounds %struct.ext4_sb_info, ptr %1298, i32 0, i32 17
  %1300 = load i32, ptr %1299, align 4
  %1301 = select i1 %1297, i32 1024, i32 2048
  %1302 = or i32 %1300, %1301
  store i32 %1302, ptr %1299, align 4
  %1303 = load i32, ptr %478, align 8
  %1304 = or i32 %1303, %1301
  store i32 %1304, ptr %478, align 8
  br label %1311

1305:                                             ; preds = %1288, %1288
  %1306 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  %1307 = load ptr, ptr %1306, align 4
  %1308 = call i32 @jbd2_journal_check_available_features(ptr noundef %1307, i32 noundef 0, i32 noundef 0, i32 noundef 1) #26
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %1310, label %1311

1310:                                             ; preds = %1305
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.563) #26
  br label %1630

1311:                                             ; preds = %1305, %1293, %1288
  %1312 = load ptr, ptr %18, align 4
  %1313 = getelementptr inbounds %struct.ext4_sb_info, ptr %1312, i32 0, i32 17
  %1314 = load i32, ptr %1313, align 4
  %1315 = and i32 %1314, 16780288
  %1316 = icmp eq i32 %1315, 16779264
  br i1 %1316, label %1317, label %1318

1317:                                             ; preds = %1311
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.564) #26
  br label %1630

1318:                                             ; preds = %1311
  %1319 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  %1320 = load ptr, ptr %1319, align 4
  %1321 = getelementptr inbounds %struct.journal_s, ptr %1320, i32 0, i32 46
  %1322 = load ptr, ptr %1321, align 4
  %1323 = load i32, ptr %37, align 8
  %1324 = call i32 @set_task_ioprio(ptr noundef %1322, i32 noundef %1323) #26
  %1325 = load ptr, ptr %1319, align 4
  %1326 = getelementptr inbounds %struct.journal_s, ptr %1325, i32 0, i32 63
  store ptr @ext4_journal_submit_inode_data_buffers, ptr %1326, align 4
  %1327 = load ptr, ptr %1319, align 4
  %1328 = getelementptr inbounds %struct.journal_s, ptr %1327, i32 0, i32 64
  store ptr @ext4_journal_finish_inode_data_buffers, ptr %1328, align 8
  br label %1329

1329:                                             ; preds = %1318, %1241
  %1330 = phi i32 [ 0, %1241 ], [ %1173, %1318 ]
  %1331 = load ptr, ptr %18, align 4
  %1332 = getelementptr inbounds %struct.ext4_sb_info, ptr %1331, i32 0, i32 17
  %1333 = load i32, ptr %1332, align 4
  %1334 = and i32 %1333, 1
  %1335 = icmp eq i32 %1334, 0
  br i1 %1335, label %1336, label %1356

1336:                                             ; preds = %1329
  %1337 = call ptr @ext4_xattr_create_cache() #26
  %1338 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 125
  store ptr %1337, ptr %1338, align 8
  %1339 = icmp eq ptr %1337, null
  br i1 %1339, label %1340, label %1341

1340:                                             ; preds = %1336
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.565) #26
  br label %1630

1341:                                             ; preds = %1336
  %1342 = load ptr, ptr %18, align 4
  %1343 = getelementptr inbounds %struct.ext4_sb_info, ptr %1342, i32 0, i32 15
  %1344 = load ptr, ptr %1343, align 4
  %1345 = getelementptr inbounds %struct.ext4_super_block, ptr %1344, i32 0, i32 29
  %1346 = load i32, ptr %1345, align 8
  %1347 = and i32 %1346, 1024
  %1348 = icmp eq i32 %1347, 0
  br i1 %1348, label %1356, label %1349

1349:                                             ; preds = %1341
  %1350 = call ptr @ext4_xattr_create_cache() #26
  %1351 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 126
  store ptr %1350, ptr %1351, align 4
  %1352 = icmp eq ptr %1350, null
  br i1 %1352, label %1355, label %1353

1353:                                             ; preds = %1349
  %1354 = load ptr, ptr %18, align 4
  br label %1356

1355:                                             ; preds = %1349
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.566) #26
  br label %1630

1356:                                             ; preds = %1353, %1341, %1329
  %1357 = phi ptr [ %1354, %1353 ], [ %1342, %1341 ], [ %1331, %1329 ]
  %1358 = getelementptr inbounds %struct.ext4_sb_info, ptr %1357, i32 0, i32 15
  %1359 = load ptr, ptr %1358, align 4
  %1360 = getelementptr inbounds %struct.ext4_super_block, ptr %1359, i32 0, i32 30
  %1361 = load i32, ptr %1360, align 4
  %1362 = and i32 %1361, 32768
  %1363 = icmp ne i32 %1362, 0
  %1364 = icmp ne i32 %393, 2
  %1365 = select i1 %1363, i1 %1364, i1 false
  br i1 %1365, label %1366, label %1367

1366:                                             ; preds = %1356
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.567) #26
  br label %1630

1367:                                             ; preds = %1356
  %1368 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 83
  %1369 = load i32, ptr %1368, align 8
  %1370 = icmp eq i32 %1369, 0
  br i1 %1370, label %1373, label %1371

1371:                                             ; preds = %1367
  %1372 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 10
  store i32 %1369, ptr %1372, align 8
  br label %1376

1373:                                             ; preds = %1367
  %1374 = call i32 @ext4_calculate_overhead(ptr noundef %0) #26
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %1630

1376:                                             ; preds = %1373, %1371
  %1377 = call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.568, i32 noundef 10, i32 noundef 1) #26
  %1378 = load ptr, ptr %18, align 4
  %1379 = getelementptr inbounds %struct.ext4_sb_info, ptr %1378, i32 0, i32 113
  store ptr %1377, ptr %1379, align 16
  %1380 = load ptr, ptr %18, align 4
  %1381 = getelementptr inbounds %struct.ext4_sb_info, ptr %1380, i32 0, i32 113
  %1382 = load ptr, ptr %1381, align 16
  %1383 = icmp eq ptr %1382, null
  br i1 %1383, label %1384, label %1386

1384:                                             ; preds = %1376
  %1385 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.569) #28
  br label %1622

1386:                                             ; preds = %1376
  %1387 = call ptr @__ext4_iget(ptr noundef %0, i32 noundef 2, i32 noundef 1, ptr noundef nonnull @__func__.__ext4_fill_super, i32 noundef 5277) #26
  %1388 = icmp ugt ptr %1387, inttoptr (i32 -4096 to ptr)
  br i1 %1388, label %1389, label %1391

1389:                                             ; preds = %1386
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.570) #26
  %1390 = ptrtoint ptr %1387 to i32
  br label %1622

1391:                                             ; preds = %1386
  %1392 = load i16, ptr %1387, align 8
  %1393 = and i16 %1392, -4096
  %1394 = icmp eq i16 %1393, 16384
  br i1 %1394, label %1395, label %1403

1395:                                             ; preds = %1391
  %1396 = getelementptr inbounds %struct.inode, ptr %1387, i32 0, i32 21
  %1397 = load i64, ptr %1396, align 8
  %1398 = icmp eq i64 %1397, 0
  br i1 %1398, label %1403, label %1399

1399:                                             ; preds = %1395
  %1400 = getelementptr inbounds %struct.inode, ptr %1387, i32 0, i32 13
  %1401 = load i64, ptr %1400, align 8
  %1402 = icmp eq i64 %1401, 0
  br i1 %1402, label %1403, label %1404

1403:                                             ; preds = %1399, %1395, %1391
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.571) #26
  call void @iput(ptr noundef %1387) #26
  br label %1622

1404:                                             ; preds = %1399
  %1405 = call ptr @d_make_root(ptr noundef %1387) #26
  store ptr %1405, ptr %1154, align 64
  %1406 = icmp eq ptr %1405, null
  br i1 %1406, label %1407, label %1408

1407:                                             ; preds = %1404
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.572) #26
  br label %1622

1408:                                             ; preds = %1404
  %1409 = load i32, ptr %533, align 4
  %1410 = and i32 %1409, 1
  %1411 = call fastcc i32 @ext4_setup_super(ptr noundef %0, ptr noundef %713, i32 noundef %1410) #26
  switch i32 %1411, label %1618 [
    i32 -30, label %1412
    i32 0, label %1415
  ]

1412:                                             ; preds = %1408
  %1413 = load i32, ptr %533, align 4
  %1414 = or i32 %1413, 1
  store i32 %1414, ptr %533, align 4
  br label %1415

1415:                                             ; preds = %1412, %1408
  call fastcc void @ext4_set_resv_clusters(ptr noundef %0) #26
  %1416 = load ptr, ptr %18, align 4
  %1417 = getelementptr inbounds %struct.ext4_sb_info, ptr %1416, i32 0, i32 17
  %1418 = load i32, ptr %1417, align 4
  %1419 = and i32 %1418, 536870912
  %1420 = icmp eq i32 %1419, 0
  br i1 %1420, label %1425, label %1421

1421:                                             ; preds = %1415
  %1422 = call i32 @ext4_setup_system_zone(ptr noundef %0) #26
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1425, label %1424

1424:                                             ; preds = %1421
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.573, i32 noundef %1422) #26
  br label %1618

1425:                                             ; preds = %1421, %1415
  call void @ext4_fc_replay_cleanup(ptr noundef %0) #26
  call void @ext4_ext_init(ptr noundef %0) #26
  %1426 = load i32, ptr %38, align 4
  switch i32 %1426, label %1437 [
    i32 1, label %1427
    i32 0, label %1432
  ]

1427:                                             ; preds = %1425
  %1428 = load ptr, ptr %18, align 4
  %1429 = getelementptr inbounds %struct.ext4_sb_info, ptr %1428, i32 0, i32 18
  %1430 = load i32, ptr %1429, align 16
  %1431 = or i32 %1430, 128
  store i32 %1431, ptr %1429, align 16
  br label %1445

1432:                                             ; preds = %1425
  %1433 = load ptr, ptr %18, align 4
  %1434 = getelementptr inbounds %struct.ext4_sb_info, ptr %1433, i32 0, i32 18
  %1435 = load i32, ptr %1434, align 16
  %1436 = and i32 %1435, -129
  store i32 %1436, ptr %1434, align 16
  br label %1445

1437:                                             ; preds = %1425
  %1438 = load i32, ptr %1040, align 32
  %1439 = icmp ugt i32 %1438, 15
  br i1 %1439, label %1440, label %1445

1440:                                             ; preds = %1437
  %1441 = load ptr, ptr %18, align 4
  %1442 = getelementptr inbounds %struct.ext4_sb_info, ptr %1441, i32 0, i32 18
  %1443 = load i32, ptr %1442, align 16
  %1444 = or i32 %1443, 128
  store i32 %1444, ptr %1442, align 16
  br label %1445

1445:                                             ; preds = %1440, %1437, %1432, %1427
  %1446 = call i32 @ext4_mb_init(ptr noundef %0) #26
  %1447 = icmp eq i32 %1446, 0
  br i1 %1447, label %1449, label %1448

1448:                                             ; preds = %1445
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.574, i32 noundef %1446) #26
  br label %1615

1449:                                             ; preds = %1445
  %1450 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  %1451 = load ptr, ptr %1450, align 4
  %1452 = icmp eq ptr %1451, null
  br i1 %1452, label %1455, label %1453

1453:                                             ; preds = %1449
  %1454 = getelementptr inbounds %struct.journal_s, ptr %1451, i32 0, i32 62
  store ptr @ext4_journal_commit_callback, ptr %1454, align 8
  br label %1455

1455:                                             ; preds = %1453, %1449
  %1456 = call i64 @ext4_count_free_clusters(ptr noundef %0) #26
  %1457 = load ptr, ptr %98, align 4
  %1458 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 12
  %1459 = load i32, ptr %1458, align 16
  %1460 = zext i32 %1459 to i64
  %1461 = shl i64 %1456, %1460
  %1462 = trunc i64 %1461 to i32
  %1463 = getelementptr inbounds %struct.ext4_super_block, ptr %1457, i32 0, i32 3
  store i32 %1462, ptr %1463, align 4
  %1464 = lshr i64 %1461, 32
  %1465 = trunc i64 %1464 to i32
  %1466 = getelementptr inbounds %struct.ext4_super_block, ptr %1457, i32 0, i32 52
  store i32 %1465, ptr %1466, align 8
  %1467 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 36
  %1468 = call i32 @__percpu_counter_init(ptr noundef %1467, i64 noundef %1456, i32 noundef 3264, ptr noundef nonnull @__ext4_fill_super.__key.575) #26
  %1469 = icmp eq i32 %1468, 0
  br i1 %1469, label %1471, label %1470

1470:                                             ; preds = %1455
  call void @ext4_superblock_csum_set(ptr noundef %0) #26
  br label %1497

1471:                                             ; preds = %1455
  %1472 = call i32 @ext4_count_free_inodes(ptr noundef %0) #26
  %1473 = load ptr, ptr %98, align 4
  %1474 = getelementptr inbounds %struct.ext4_super_block, ptr %1473, i32 0, i32 4
  store i32 %1472, ptr %1474, align 8
  %1475 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 37
  %1476 = zext i32 %1472 to i64
  %1477 = call i32 @__percpu_counter_init(ptr noundef %1475, i64 noundef %1476, i32 noundef 3264, ptr noundef nonnull @__ext4_fill_super.__key.576) #26
  call void @ext4_superblock_csum_set(ptr noundef %0) #26
  %1478 = icmp eq i32 %1477, 0
  br i1 %1478, label %1479, label %1497

1479:                                             ; preds = %1471
  %1480 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 38
  %1481 = call i32 @ext4_count_dirs(ptr noundef %0) #26
  %1482 = zext i32 %1481 to i64
  %1483 = call i32 @__percpu_counter_init(ptr noundef %1480, i64 noundef %1482, i32 noundef 3264, ptr noundef nonnull @__ext4_fill_super.__key.577) #26
  %1484 = icmp eq i32 %1483, 0
  br i1 %1484, label %1485, label %1497

1485:                                             ; preds = %1479
  %1486 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 39
  %1487 = call i32 @__percpu_counter_init(ptr noundef %1486, i64 noundef 0, i32 noundef 3264, ptr noundef nonnull @__ext4_fill_super.__key.578) #26
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1489, label %1497

1489:                                             ; preds = %1485
  %1490 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 40
  %1491 = call i32 @__percpu_counter_init(ptr noundef %1490, i64 noundef 0, i32 noundef 3264, ptr noundef nonnull @__ext4_fill_super.__key.579) #26
  %1492 = icmp eq i32 %1491, 0
  br i1 %1492, label %1493, label %1497

1493:                                             ; preds = %1489
  %1494 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 136
  %1495 = call i32 @__percpu_init_rwsem(ptr noundef %1494, ptr noundef nonnull @.str.580, ptr noundef nonnull @__ext4_fill_super.rwsem_key) #26
  %1496 = icmp eq i32 %1495, 0
  br i1 %1496, label %1499, label %1497

1497:                                             ; preds = %1493, %1489, %1485, %1479, %1471, %1470
  %1498 = phi i32 [ %1495, %1493 ], [ %1491, %1489 ], [ %1487, %1485 ], [ %1483, %1479 ], [ %1468, %1470 ], [ %1477, %1471 ]
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.581) #26
  br label %1590

1499:                                             ; preds = %1493
  %1500 = load ptr, ptr %18, align 4
  %1501 = getelementptr inbounds %struct.ext4_sb_info, ptr %1500, i32 0, i32 15
  %1502 = load ptr, ptr %1501, align 4
  %1503 = getelementptr inbounds %struct.ext4_super_block, ptr %1502, i32 0, i32 29
  %1504 = load i32, ptr %1503, align 8
  %1505 = and i32 %1504, 512
  %1506 = icmp eq i32 %1505, 0
  br i1 %1506, label %1511, label %1507

1507:                                             ; preds = %1499
  %1508 = call fastcc i32 @ext4_fill_flex_info(ptr noundef %0) #26
  %1509 = icmp eq i32 %1508, 0
  br i1 %1509, label %1510, label %1511

1510:                                             ; preds = %1507
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.582) #26
  br label %1590

1511:                                             ; preds = %1507, %1499
  %1512 = load i32, ptr %4, align 4
  %1513 = call i32 @ext4_register_li_request(ptr noundef %0, i32 noundef %1512) #26
  %1514 = icmp eq i32 %1513, 0
  br i1 %1514, label %1515, label %1590

1515:                                             ; preds = %1511
  %1516 = call i32 @ext4_register_sysfs(ptr noundef %0) #26
  %1517 = icmp eq i32 %1516, 0
  br i1 %1517, label %1518, label %1588

1518:                                             ; preds = %1515
  %1519 = call i32 @ext4_init_orphan_info(ptr noundef %0) #26
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %1521, label %1585

1521:                                             ; preds = %1518
  %1522 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 140
  store i32 0, ptr %1522, align 4
  %1523 = load ptr, ptr %375, align 4
  %1524 = getelementptr inbounds %struct.block_device, ptr %1523, i32 0, i32 7
  %1525 = load ptr, ptr %1524, align 4
  %1526 = getelementptr inbounds %struct.inode, ptr %1525, i32 0, i32 9
  %1527 = load ptr, ptr %1526, align 8
  %1528 = getelementptr inbounds %struct.address_space, ptr %1527, i32 0, i32 11
  %1529 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 139
  %1530 = call i32 @errseq_check_and_advance(ptr noundef %1528, ptr noundef %1529) #26
  %1531 = load ptr, ptr %375, align 4
  %1532 = getelementptr inbounds %struct.block_device, ptr %1531, i32 0, i32 8
  store ptr %0, ptr %1532, align 8
  %1533 = load ptr, ptr %18, align 4
  %1534 = getelementptr inbounds %struct.ext4_sb_info, ptr %1533, i32 0, i32 25
  %1535 = load i16, ptr %1534, align 8
  %1536 = or i16 %1535, 4
  store i16 %1536, ptr %1534, align 8
  call void @ext4_orphan_cleanup(ptr noundef %0, ptr noundef %713) #26
  %1537 = load ptr, ptr %18, align 4
  %1538 = getelementptr inbounds %struct.ext4_sb_info, ptr %1537, i32 0, i32 25
  %1539 = load i16, ptr %1538, align 8
  %1540 = and i16 %1539, -5
  store i16 %1540, ptr %1538, align 8
  %1541 = icmp eq i32 %1330, 0
  br i1 %1541, label %1545, label %1542

1542:                                             ; preds = %1521
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.583) #26
  %1543 = call fastcc i32 @ext4_mark_recovery_complete(ptr noundef %0) #26
  %1544 = icmp eq i32 %1543, 0
  br i1 %1544, label %1545, label %1584

1545:                                             ; preds = %1542, %1521
  %1546 = load ptr, ptr %18, align 4
  %1547 = getelementptr inbounds %struct.ext4_sb_info, ptr %1546, i32 0, i32 17
  %1548 = load i32, ptr %1547, align 4
  %1549 = and i32 %1548, 1073741824
  %1550 = icmp eq i32 %1549, 0
  br i1 %1550, label %1560, label %1551

1551:                                             ; preds = %1545
  %1552 = load ptr, ptr %375, align 4
  %1553 = getelementptr inbounds %struct.block_device, ptr %1552, i32 0, i32 18
  %1554 = load ptr, ptr %1553, align 4
  %1555 = getelementptr inbounds %struct.request_queue, ptr %1554, i32 0, i32 11
  %1556 = load volatile i32, ptr %1555, align 4
  %1557 = and i32 %1556, 256
  %1558 = icmp eq i32 %1557, 0
  br i1 %1558, label %1559, label %1560

1559:                                             ; preds = %1551
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.584) #26
  br label %1560

1560:                                             ; preds = %1559, %1551, %1545
  %1561 = getelementptr inbounds %struct.ext4_super_block, ptr %713, i32 0, i32 69
  %1562 = load i32, ptr %1561, align 4
  %1563 = icmp eq i32 %1562, 0
  br i1 %1563, label %1568, label %1564

1564:                                             ; preds = %1560
  %1565 = load volatile i32, ptr @jiffies, align 64
  %1566 = add i32 %1565, 30000
  %1567 = call i32 @mod_timer(ptr noundef %1119, i32 noundef %1566) #26
  br label %1568

1568:                                             ; preds = %1564, %1560
  %1569 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 130
  %1570 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 130, i32 1
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(28) %1569, i8 0, i64 28, i1 false) #26
  store i32 500, ptr %1570, align 4
  %1571 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 130, i32 2
  store i32 10, ptr %1571, align 4
  %1572 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 131
  %1573 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 131, i32 1
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(28) %1572, i8 0, i64 28, i1 false) #26
  store i32 500, ptr %1573, align 4
  %1574 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 131, i32 2
  store i32 10, ptr %1574, align 4
  %1575 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 132
  %1576 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 132, i32 1
  call void @llvm.memset.p0.i64(ptr noundef align 4 dereferenceable(28) %1575, i8 0, i64 28, i1 false) #26
  store i32 500, ptr %1576, align 4
  %1577 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 132, i32 2
  store i32 10, ptr %1577, align 4
  %1578 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 133
  store volatile i32 0, ptr %1578, align 4
  %1579 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 134
  store volatile i32 0, ptr %1579, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  br label %1694

1580:                                             ; preds = %916, %759, %94
  %1581 = phi ptr [ %90, %94 ], [ %714, %759 ], [ %714, %916 ]
  %1582 = icmp eq i32 %36, 0
  br i1 %1582, label %1583, label %1668

1583:                                             ; preds = %1580
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.585) #26
  br label %1668

1584:                                             ; preds = %1542
  call void @ext4_release_orphan_info(ptr noundef %0) #26
  br label %1585

1585:                                             ; preds = %1584, %1518
  %1586 = phi i32 [ %1519, %1518 ], [ %1543, %1584 ]
  call void @ext4_unregister_sysfs(ptr noundef %0) #26
  %1587 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 43
  call void @kobject_put(ptr noundef %1587) #26
  br label %1588

1588:                                             ; preds = %1585, %1515
  %1589 = phi i32 [ %1516, %1515 ], [ %1586, %1585 ]
  call fastcc void @ext4_unregister_li_request(ptr noundef %0) #26
  br label %1590

1590:                                             ; preds = %1588, %1511, %1510, %1497
  %1591 = phi i32 [ %1498, %1497 ], [ %1513, %1511 ], [ %1589, %1588 ], [ 0, %1510 ]
  %1592 = phi i32 [ 0, %1497 ], [ 0, %1511 ], [ 0, %1588 ], [ -12, %1510 ]
  %1593 = call i32 @ext4_mb_release(ptr noundef %0) #26
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %1594 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 111
  %1595 = load volatile ptr, ptr %1594, align 8
  %1596 = icmp eq ptr %1595, null
  br i1 %1596, label %1609, label %1597

1597:                                             ; preds = %1590
  %1598 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 112
  %1599 = load i32, ptr %1598, align 4
  %1600 = icmp eq i32 %1599, 0
  br i1 %1600, label %1608, label %1601

1601:                                             ; preds = %1601, %1597
  %1602 = phi i32 [ %1605, %1601 ], [ 0, %1597 ]
  %1603 = getelementptr ptr, ptr %1595, i32 %1602
  %1604 = load ptr, ptr %1603, align 4
  call void @kvfree(ptr noundef %1604) #26
  %1605 = add nuw i32 %1602, 1
  %1606 = load i32, ptr %1598, align 4
  %1607 = icmp ult i32 %1605, %1606
  br i1 %1607, label %1601, label %1608

1608:                                             ; preds = %1601, %1597
  call void @kvfree(ptr noundef nonnull %1595) #26
  br label %1609

1609:                                             ; preds = %1608, %1590
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  call void @percpu_counter_destroy(ptr noundef %1467) #26
  %1610 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 37
  call void @percpu_counter_destroy(ptr noundef %1610) #26
  %1611 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 38
  call void @percpu_counter_destroy(ptr noundef %1611) #26
  %1612 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 39
  call void @percpu_counter_destroy(ptr noundef %1612) #26
  %1613 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 40
  call void @percpu_counter_destroy(ptr noundef %1613) #26
  %1614 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 136
  call void @percpu_free_rwsem(ptr noundef %1614) #26
  br label %1615

1615:                                             ; preds = %1609, %1448
  %1616 = phi i32 [ %1446, %1448 ], [ %1591, %1609 ]
  %1617 = phi i32 [ 0, %1448 ], [ %1592, %1609 ]
  call void @ext4_ext_release(ptr noundef %0) #26
  call void @ext4_release_system_zone(ptr noundef %0) #26
  br label %1618

1618:                                             ; preds = %1615, %1424, %1408
  %1619 = phi i32 [ %1422, %1424 ], [ %1616, %1615 ], [ 0, %1408 ]
  %1620 = phi i32 [ 0, %1424 ], [ %1617, %1615 ], [ %1411, %1408 ]
  %1621 = load ptr, ptr %1154, align 64
  call void @dput(ptr noundef %1621) #26
  store ptr null, ptr %1154, align 64
  br label %1622

1622:                                             ; preds = %1618, %1407, %1403, %1389, %1384
  %1623 = phi i32 [ 0, %1389 ], [ %1619, %1618 ], [ 0, %1407 ], [ 0, %1403 ], [ 0, %1384 ]
  %1624 = phi i32 [ %1390, %1389 ], [ %1620, %1618 ], [ -12, %1407 ], [ -22, %1403 ], [ -12, %1384 ]
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.586) #26
  %1625 = load ptr, ptr %18, align 4
  %1626 = getelementptr inbounds %struct.ext4_sb_info, ptr %1625, i32 0, i32 113
  %1627 = load ptr, ptr %1626, align 16
  %1628 = icmp eq ptr %1627, null
  br i1 %1628, label %1630, label %1629

1629:                                             ; preds = %1622
  call void @destroy_workqueue(ptr noundef nonnull %1627) #26
  br label %1630

1630:                                             ; preds = %1629, %1622, %1373, %1366, %1355, %1340, %1317, %1310, %1287, %1273, %1269, %1240, %1232, %1228, %1224, %1218
  %1631 = phi i32 [ 0, %1224 ], [ 0, %1228 ], [ 0, %1232 ], [ 0, %1240 ], [ 0, %1366 ], [ %1623, %1629 ], [ %1623, %1622 ], [ %1374, %1373 ], [ 0, %1355 ], [ 0, %1340 ], [ 0, %1218 ], [ 0, %1317 ], [ 0, %1310 ], [ 0, %1287 ], [ 0, %1273 ], [ 0, %1269 ]
  %1632 = phi i32 [ -22, %1224 ], [ -22, %1228 ], [ -22, %1232 ], [ -22, %1240 ], [ -22, %1366 ], [ %1624, %1629 ], [ %1624, %1622 ], [ -22, %1373 ], [ -22, %1355 ], [ -22, %1340 ], [ -22, %1218 ], [ -22, %1317 ], [ -22, %1310 ], [ -22, %1287 ], [ -22, %1273 ], [ -22, %1269 ]
  %1633 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 126
  %1634 = load ptr, ptr %1633, align 4
  call void @ext4_xattr_destroy_cache(ptr noundef %1634) #26
  store ptr null, ptr %1633, align 4
  %1635 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 125
  %1636 = load ptr, ptr %1635, align 8
  call void @ext4_xattr_destroy_cache(ptr noundef %1636) #26
  store ptr null, ptr %1635, align 8
  %1637 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 47
  %1638 = load ptr, ptr %1637, align 4
  %1639 = icmp eq ptr %1638, null
  br i1 %1639, label %1644, label %1640

1640:                                             ; preds = %1630
  %1641 = call zeroext i1 @flush_work(ptr noundef %1121) #26
  %1642 = load ptr, ptr %1637, align 4
  %1643 = call i32 @jbd2_journal_destroy(ptr noundef %1642) #26
  store ptr null, ptr %1637, align 4
  br label %1644

1644:                                             ; preds = %1640, %1630, %1202, %1182
  %1645 = phi i32 [ %1631, %1640 ], [ %1631, %1630 ], [ %1205, %1202 ], [ 0, %1182 ]
  %1646 = phi i32 [ %1632, %1640 ], [ %1632, %1630 ], [ -22, %1202 ], [ -22, %1182 ]
  call void @ext4_es_unregister_shrinker(ptr noundef %32) #26
  br label %1647

1647:                                             ; preds = %1644, %1118
  %1648 = phi i32 [ 0, %1118 ], [ %1645, %1644 ]
  %1649 = phi i32 [ -22, %1118 ], [ %1646, %1644 ]
  %1650 = call zeroext i1 @flush_work(ptr noundef %1121) #26
  %1651 = call i32 @del_timer_sync(ptr noundef %1119) #26
  call void @ext4_stop_mmpd(ptr noundef %32) #26
  br label %1652

1652:                                             ; preds = %1647, %1117, %1106
  %1653 = phi i32 [ 0, %1106 ], [ %1648, %1647 ], [ 0, %1117 ]
  %1654 = phi i32 [ %1102, %1106 ], [ %1061, %1647 ], [ %1061, %1117 ]
  %1655 = phi i32 [ %1107, %1106 ], [ %1649, %1647 ], [ -117, %1117 ]
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %1656 = load volatile ptr, ptr %1081, align 8
  %1657 = icmp eq i32 %1654, 0
  br i1 %1657, label %1667, label %1658

1658:                                             ; preds = %1664, %1652
  %1659 = phi i32 [ %1665, %1664 ], [ 0, %1652 ]
  %1660 = getelementptr ptr, ptr %1656, i32 %1659
  %1661 = load ptr, ptr %1660, align 4
  %1662 = icmp eq ptr %1661, null
  br i1 %1662, label %1664, label %1663

1663:                                             ; preds = %1658
  call void @__brelse(ptr noundef nonnull %1661) #26
  br label %1664

1664:                                             ; preds = %1663, %1658
  %1665 = add nuw i32 %1659, 1
  %1666 = icmp eq i32 %1665, %1654
  br i1 %1666, label %1667, label %1658

1667:                                             ; preds = %1664, %1652
  call void @kvfree(ptr noundef %1656) #26
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  br label %1668

1668:                                             ; preds = %1667, %1583, %1580, %1083, %1072, %1054, %1035, %1000, %982, %956, %915, %880, %876, %873, %867, %857, %777, %757, %709, %696, %672, %660, %639, %627, %626, %621, %611, %606, %578, %574, %508, %475, %472, %468, %458, %433, %425, %400, %395, %186, %137, %130
  %1669 = phi i32 [ 0, %1580 ], [ 0, %1583 ], [ 0, %137 ], [ 0, %395 ], [ 0, %400 ], [ %473, %472 ], [ %479, %475 ], [ 0, %508 ], [ 0, %574 ], [ 0, %578 ], [ 0, %639 ], [ 0, %660 ], [ 0, %696 ], [ 0, %709 ], [ 0, %757 ], [ 0, %777 ], [ 0, %857 ], [ 0, %867 ], [ 0, %873 ], [ %913, %915 ], [ 0, %956 ], [ 0, %982 ], [ 0, %1000 ], [ 0, %1035 ], [ 0, %1054 ], [ 0, %1072 ], [ 0, %1083 ], [ %1653, %1667 ], [ 0, %876 ], [ 0, %880 ], [ 0, %672 ], [ 0, %627 ], [ 0, %621 ], [ 0, %626 ], [ 0, %606 ], [ 0, %611 ], [ 0, %425 ], [ 0, %433 ], [ 0, %468 ], [ 0, %458 ], [ 0, %186 ], [ 0, %130 ]
  %1670 = phi i32 [ -22, %1580 ], [ -22, %1583 ], [ %139, %137 ], [ -22, %395 ], [ -22, %400 ], [ -22, %472 ], [ -22, %475 ], [ -22, %508 ], [ -22, %574 ], [ -22, %578 ], [ -22, %639 ], [ -22, %660 ], [ %697, %696 ], [ -22, %709 ], [ -22, %757 ], [ -22, %777 ], [ -22, %857 ], [ -22, %867 ], [ -22, %873 ], [ -22, %915 ], [ -22, %956 ], [ -22, %982 ], [ -22, %1000 ], [ -22, %1035 ], [ -22, %1054 ], [ -22, %1072 ], [ -12, %1083 ], [ %1655, %1667 ], [ -22, %876 ], [ -22, %880 ], [ -22, %672 ], [ -22, %627 ], [ -22, %621 ], [ -22, %626 ], [ -22, %606 ], [ -22, %611 ], [ -22, %425 ], [ -22, %433 ], [ -22, %468 ], [ -22, %458 ], [ -74, %186 ], [ -22, %130 ]
  %1671 = phi ptr [ %1581, %1580 ], [ %1581, %1583 ], [ %90, %137 ], [ %90, %395 ], [ %90, %400 ], [ %90, %472 ], [ %90, %475 ], [ %90, %508 ], [ %90, %574 ], [ %90, %578 ], [ %90, %639 ], [ %90, %660 ], [ null, %696 ], [ %694, %709 ], [ %714, %757 ], [ %714, %777 ], [ %714, %857 ], [ %714, %867 ], [ %714, %873 ], [ %714, %915 ], [ %714, %956 ], [ %714, %982 ], [ %714, %1000 ], [ %714, %1035 ], [ %714, %1054 ], [ %714, %1072 ], [ %714, %1083 ], [ %714, %1667 ], [ %714, %876 ], [ %714, %880 ], [ null, %672 ], [ %90, %627 ], [ %90, %621 ], [ %90, %626 ], [ %90, %606 ], [ %90, %611 ], [ %90, %425 ], [ %90, %433 ], [ %90, %468 ], [ %90, %458 ], [ %90, %186 ], [ %90, %130 ]
  %1672 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 119
  %1673 = load ptr, ptr %1672, align 8
  %1674 = icmp eq ptr %1673, null
  br i1 %1674, label %1677, label %1675

1675:                                             ; preds = %1668
  %1676 = getelementptr inbounds %struct.crypto_shash, ptr %1673, i32 0, i32 2
  call void @crypto_destroy_tfm(ptr noundef nonnull %1673, ptr noundef %1676) #26
  br label %1677

1677:                                             ; preds = %1675, %1668
  %1678 = icmp eq ptr %1671, null
  br i1 %1678, label %1680, label %1679

1679:                                             ; preds = %1677
  call void @__brelse(ptr noundef nonnull %1671) #26
  br label %1680

1680:                                             ; preds = %1679, %1677
  %1681 = getelementptr inbounds %struct.ext4_sb_info, ptr %32, i32 0, i32 55
  %1682 = load ptr, ptr %1681, align 16
  %1683 = icmp eq ptr %1682, null
  br i1 %1683, label %1687, label %1684

1684:                                             ; preds = %1680
  call void @blkdev_put(ptr noundef nonnull %1682, i32 noundef 131) #26
  store ptr null, ptr %1681, align 16
  br label %1687

1685:                                             ; preds = %92, %65
  %1686 = phi i32 [ -22, %65 ], [ %93, %92 ]
  store ptr null, ptr %18, align 4
  br label %1689

1687:                                             ; preds = %1684, %1680
  store ptr null, ptr %18, align 4
  %1688 = icmp eq i32 %1669, 0
  br i1 %1688, label %1689, label %1691

1689:                                             ; preds = %1687, %1685
  %1690 = phi i32 [ %1686, %1685 ], [ %1670, %1687 ]
  br label %1691

1691:                                             ; preds = %1689, %1687
  %1692 = phi i32 [ %1690, %1689 ], [ %1669, %1687 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #26
  %1693 = icmp slt i32 %1692, 0
  br i1 %1693, label %1712, label %1694

1694:                                             ; preds = %1691, %1568
  %1695 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 47
  %1696 = load ptr, ptr %1695, align 4
  %1697 = icmp eq ptr %1696, null
  br i1 %1697, label %1707, label %1698

1698:                                             ; preds = %1694
  %1699 = load ptr, ptr %18, align 4
  %1700 = getelementptr inbounds %struct.ext4_sb_info, ptr %1699, i32 0, i32 17
  %1701 = load i32, ptr %1700, align 4
  %1702 = and i32 %1701, 3072
  %1703 = icmp eq i32 %1702, 1024
  br i1 %1703, label %1707, label %1704

1704:                                             ; preds = %1698
  %1705 = icmp eq i32 %1702, 2048
  %1706 = select i1 %1705, ptr @.str.499, ptr @.str.500
  br label %1707

1707:                                             ; preds = %1704, %1698, %1694
  %1708 = phi ptr [ @.str.498, %1698 ], [ %1706, %1704 ], [ @.str.501, %1694 ]
  %1709 = call i32 @___ratelimit(ptr noundef nonnull @ext4_mount_msg_ratelimit, ptr noundef nonnull @.str.502) #26
  %1710 = icmp eq i32 %1709, 0
  br i1 %1710, label %1714, label %1711

1711:                                             ; preds = %1707
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.503, ptr noundef nonnull %1708, ptr noundef nonnull @.str.651)
  br label %1714

1712:                                             ; preds = %1691
  %1713 = load ptr, ptr %14, align 16
  call void @kfree(ptr noundef %1713) #26
  call void @kfree(ptr noundef nonnull %8) #26
  store ptr null, ptr %20, align 4
  br label %1714

1714:                                             ; preds = %1712, %1711, %1707, %16, %2
  %1715 = phi i32 [ %1692, %1712 ], [ 0, %1711 ], [ 0, %1707 ], [ -12, %16 ], [ -12, %2 ]
  ret i32 %1715
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strreplace(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sb_min_blocksize(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_orphan_file_block_trigger(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @crypto_alloc_shash(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @parse_apply_sb_mount_options(ptr noundef %0, ptr nocapture noundef writeonly %1) unnamed_addr #0 {
  %3 = alloca ptr, align 4
  %4 = alloca %struct.fs_parameter, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 15
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 80
  %10 = load i8, ptr %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %83, label %12

12:                                               ; preds = %2
  %13 = tail call ptr @kstrndup(ptr noundef %9, i32 noundef 64, i32 noundef 3264) #26
  %14 = icmp eq ptr %13, null
  br i1 %14, label %83, label %15

15:                                               ; preds = %12
  %16 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %17 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 3520, i32 noundef 92) #31
  %18 = icmp eq ptr %17, null
  br i1 %18, label %80, label %19

19:                                               ; preds = %15
  %20 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %21 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %20, i32 noundef 3520, i32 noundef 128) #31
  %22 = icmp eq ptr %21, null
  br i1 %22, label %80, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.fs_context, ptr %17, i32 0, i32 3
  store ptr %21, ptr %24, align 4
  %25 = getelementptr inbounds %struct.fs_context, ptr %17, i32 0, i32 12
  store ptr %6, ptr %25, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3)
  store ptr %13, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 20, i1 false) #26, !annotation !9
  %26 = call ptr @strsep(ptr noundef nonnull %3, ptr noundef nonnull @.str.589) #26
  %27 = icmp eq ptr %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.fs_parameter, ptr %4, i32 0, i32 1
  %30 = getelementptr inbounds %struct.fs_parameter, ptr %4, i32 0, i32 2
  %31 = getelementptr inbounds %struct.fs_parameter, ptr %4, i32 0, i32 3
  br label %32

32:                                               ; preds = %55, %28
  %33 = phi ptr [ %26, %28 ], [ %56, %55 ]
  %34 = load i8, ptr %33, align 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = call ptr @strchr(ptr noundef nonnull %33, i32 noundef 61) #26
  store i8 1, ptr %29, align 4
  store ptr null, ptr %30, align 4
  %38 = icmp eq ptr %37, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %36
  %40 = icmp eq ptr %37, %33
  br i1 %40, label %55, label %41

41:                                               ; preds = %39
  %42 = getelementptr i8, ptr %37, i32 1
  store i8 0, ptr %37, align 1
  %43 = call i32 @strlen(ptr noundef %42) #26
  %44 = call ptr @kmemdup_nul(ptr noundef %42, i32 noundef %43, i32 noundef 3264) #26
  store ptr %44, ptr %30, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %41
  store i8 2, ptr %29, align 4
  br label %47

47:                                               ; preds = %46, %36
  %48 = phi i32 [ %43, %46 ], [ 0, %36 ]
  store ptr %33, ptr %4, align 4
  store i32 %48, ptr %31, align 4
  %49 = call i32 @ext4_parse_param(ptr noundef nonnull %17, ptr noundef nonnull %4) #26
  %50 = load ptr, ptr %30, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  call void @kfree(ptr noundef nonnull %50) #26
  br label %53

53:                                               ; preds = %52, %47
  %54 = icmp slt i32 %49, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %53, %39, %32
  %56 = call ptr @strsep(ptr noundef nonnull %3, ptr noundef nonnull @.str.589) #26
  %57 = icmp eq ptr %56, null
  br i1 %57, label %59, label %32

58:                                               ; preds = %53, %41
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  br label %62

59:                                               ; preds = %55, %23
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %4) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  %60 = call fastcc i32 @ext4_check_opt_consistency(ptr noundef nonnull %17, ptr noundef %0)
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59, %58
  call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.588, ptr noundef nonnull %13)
  br label %80

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.ext4_fs_context, ptr %21, i32 0, i32 22
  %65 = load i32, ptr %64, align 8
  %66 = and i32 %65, 16
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.ext4_fs_context, ptr %21, i32 0, i32 7
  %70 = load i32, ptr %69, align 4
  %71 = getelementptr inbounds %struct.ext4_fs_context, ptr %1, i32 0, i32 7
  store i32 %70, ptr %71, align 4
  br label %72

72:                                               ; preds = %68, %63
  %73 = and i32 %65, 32
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.ext4_fs_context, ptr %21, i32 0, i32 14
  %77 = load i32, ptr %76, align 8
  %78 = getelementptr inbounds %struct.ext4_fs_context, ptr %1, i32 0, i32 14
  store i32 %77, ptr %78, align 8
  br label %79

79:                                               ; preds = %75, %72
  call fastcc void @ext4_apply_options(ptr noundef nonnull %17, ptr noundef %0)
  br label %80

80:                                               ; preds = %79, %62, %19, %15
  %81 = phi ptr [ %21, %62 ], [ %21, %79 ], [ null, %19 ], [ null, %15 ]
  %82 = phi i32 [ 0, %62 ], [ 0, %79 ], [ -12, %19 ], [ -12, %15 ]
  call void @kfree(ptr noundef %81) #26
  call void @kfree(ptr noundef %17) #26
  call void @kfree(ptr noundef nonnull %13) #26
  br label %83

83:                                               ; preds = %80, %12, %2
  %84 = phi i32 [ %82, %80 ], [ 0, %2 ], [ -12, %12 ]
  ret i32 %84
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_check_opt_consistency(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 12
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 17
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 255
  %10 = icmp eq i32 %9, 2
  %11 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 21
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 32
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.block_device, ptr %17, i32 0, i32 11
  %19 = load ptr, ptr %18, align 8
  %20 = icmp eq ptr %19, @ext2_fs_type
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.590)
  br label %99

22:                                               ; preds = %15, %2
  %23 = and i32 %12, 64
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 20
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.block_device, ptr %27, i32 0, i32 11
  %29 = load ptr, ptr %28, align 8
  %30 = icmp eq ptr %29, @ext3_fs_type
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.591)
  br label %99

32:                                               ; preds = %25, %22
  %33 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 11
  %34 = load i32, ptr %33, align 4
  %35 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 29
  %36 = load i32, ptr %35, align 4
  %37 = add i32 %36, -128
  %38 = icmp ugt i32 %34, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %32
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.487, i32 noundef %34)
  br label %99

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 15
  %42 = load i32, ptr %41, align 4
  %43 = and i32 %42, 4194304
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 15
  %47 = load ptr, ptr %46, align 4
  %48 = getelementptr inbounds %struct.ext4_super_block, ptr %47, i32 0, i32 6
  %49 = load i32, ptr %48, align 8
  %50 = shl i32 1024, %49
  %51 = icmp ult i32 %50, 4096
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.592)
  br label %53

53:                                               ; preds = %52, %45, %40
  %54 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 22
  %55 = load i32, ptr %54, align 8
  %56 = and i32 %55, 4
  %57 = icmp ne i32 %56, 0
  %58 = select i1 %57, i1 %10, i1 false
  br i1 %58, label %59, label %79

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 47
  %61 = load ptr, ptr %60, align 4
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.479, ptr noundef nonnull @.str.593)
  %64 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 16
  %65 = load i32, ptr %64, align 8
  %66 = or i32 %65, 3072
  store i32 %66, ptr %64, align 8
  %67 = load i32, ptr %41, align 4
  %68 = and i32 %67, -3073
  store i32 %68, ptr %41, align 4
  br label %79

69:                                               ; preds = %59
  %70 = load i32, ptr %41, align 4
  %71 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 27
  %72 = load ptr, ptr %71, align 4
  %73 = getelementptr inbounds %struct.ext4_sb_info, ptr %72, i32 0, i32 17
  %74 = load i32, ptr %73, align 4
  %75 = xor i32 %74, %70
  %76 = and i32 %75, 3072
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %69
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.594)
  br label %99

79:                                               ; preds = %69, %63, %53
  br i1 %10, label %81, label %99

80:                                               ; preds = %94, %86
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef null, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.595)
  br label %99

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 17
  %83 = load i32, ptr %82, align 4
  %84 = and i32 %83, 32
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 18
  %88 = load i32, ptr %87, align 16
  %89 = and i32 %88, 32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %80, label %91

91:                                               ; preds = %86, %81
  %92 = and i32 %83, 64
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 18
  %96 = load i32, ptr %95, align 16
  %97 = and i32 %96, 96
  %98 = icmp eq i32 %97, 64
  br i1 %98, label %99, label %80

99:                                               ; preds = %94, %91, %80, %79, %78, %39, %31, %21
  %100 = phi i32 [ -22, %21 ], [ -22, %31 ], [ -22, %39 ], [ -22, %78 ], [ -22, %80 ], [ 0, %94 ], [ 0, %91 ], [ 0, %79 ]
  ret i32 %100
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc void @ext4_apply_options(ptr nocapture noundef %0, ptr nocapture noundef %1) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 12
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 16
  %8 = load i32, ptr %7, align 8
  %9 = xor i32 %8, -1
  %10 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 17
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, %9
  store i32 %12, ptr %10, align 4
  %13 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 15
  %14 = load i32, ptr %13, align 4
  %15 = or i32 %14, %12
  store i32 %15, ptr %10, align 4
  %16 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 18
  %17 = load i32, ptr %16, align 8
  %18 = xor i32 %17, -1
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 18
  %20 = load i32, ptr %19, align 16
  %21 = and i32 %20, %18
  store i32 %21, ptr %19, align 16
  %22 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 17
  %23 = load i32, ptr %22, align 4
  %24 = or i32 %23, %21
  store i32 %24, ptr %19, align 16
  %25 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 20
  %26 = load i32, ptr %25, align 8
  %27 = xor i32 %26, -1
  %28 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 19
  %29 = load i32, ptr %28, align 4
  %30 = and i32 %29, %27
  store i32 %30, ptr %28, align 4
  %31 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 19
  %32 = load i32, ptr %31, align 4
  %33 = or i32 %32, %30
  store i32 %33, ptr %28, align 4
  %34 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 6
  %35 = load i32, ptr %34, align 8
  %36 = xor i32 %35, -1
  %37 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 10
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, %36
  store i32 %39, ptr %37, align 4
  %40 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 5
  %41 = load i32, ptr %40, align 4
  %42 = or i32 %41, %39
  store i32 %42, ptr %37, align 4
  %43 = load i32, ptr %34, align 8
  %44 = and i32 %43, 8388608
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %2
  %47 = getelementptr inbounds %struct.fs_context, ptr %0, i32 0, i32 13
  %48 = load i32, ptr %47, align 4
  %49 = or i32 %48, 8388608
  store i32 %49, ptr %47, align 4
  br label %50

50:                                               ; preds = %46, %2
  %51 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 22
  %52 = load i32, ptr %51, align 8
  %53 = and i32 %52, 65536
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 8
  %57 = load i32, ptr %56, align 8
  %58 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 52
  store i32 %57, ptr %58, align 4
  %59 = load i32, ptr %51, align 8
  br label %60

60:                                               ; preds = %55, %50
  %61 = phi i32 [ %59, %55 ], [ %52, %50 ]
  %62 = and i32 %61, 8192
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 9
  %66 = load i32, ptr %65, align 4
  %67 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 73
  store i32 %66, ptr %67, align 4
  %68 = load i32, ptr %51, align 8
  br label %69

69:                                               ; preds = %64, %60
  %70 = phi i32 [ %68, %64 ], [ %61, %60 ]
  %71 = and i32 %70, 256
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 23
  %75 = load i32, ptr %74, align 4
  %76 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 53
  store i32 %75, ptr %76, align 8
  %77 = load i32, ptr %51, align 8
  br label %78

78:                                               ; preds = %73, %69
  %79 = phi i32 [ %77, %73 ], [ %70, %69 ]
  %80 = and i32 %79, 512
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 24
  %84 = load i32, ptr %83, align 8
  %85 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 54
  store i32 %84, ptr %85, align 4
  %86 = load i32, ptr %51, align 8
  br label %87

87:                                               ; preds = %82, %78
  %88 = phi i32 [ %86, %82 ], [ %79, %78 ]
  %89 = and i32 %88, 128
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 11
  %93 = load i32, ptr %92, align 4
  %94 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 56
  store i32 %93, ptr %94, align 4
  %95 = load i32, ptr %51, align 8
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %95, %91 ], [ %88, %87 ]
  %98 = and i32 %97, 1024
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 10
  %102 = load i32, ptr %101, align 8
  %103 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 31
  store i32 %102, ptr %103, align 4
  %104 = load i32, ptr %51, align 8
  br label %105

105:                                              ; preds = %100, %96
  %106 = phi i32 [ %104, %100 ], [ %97, %96 ]
  %107 = and i32 %106, 4096
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 13
  %111 = load i32, ptr %110, align 4
  %112 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 82
  store i32 %111, ptr %112, align 16
  %113 = load i32, ptr %51, align 8
  br label %114

114:                                              ; preds = %109, %105
  %115 = phi i32 [ %113, %109 ], [ %106, %105 ]
  %116 = and i32 %115, 2048
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 12
  %120 = load i32, ptr %119, align 8
  %121 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 116
  store i32 %120, ptr %121, align 4
  %122 = load i32, ptr %51, align 8
  br label %123

123:                                              ; preds = %118, %114
  %124 = phi i32 [ %122, %118 ], [ %115, %114 ]
  %125 = and i32 %124, 32768
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 24
  %129 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 26
  %130 = load i32, ptr %129, align 8
  store i32 %130, ptr %128, align 4
  %131 = load i32, ptr %51, align 8
  br label %132

132:                                              ; preds = %127, %123
  %133 = phi i32 [ %131, %127 ], [ %124, %123 ]
  %134 = and i32 %133, 16384
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 23
  %138 = getelementptr inbounds %struct.ext4_fs_context, ptr %4, i32 0, i32 25
  %139 = load i32, ptr %138, align 4
  store i32 %139, ptr %137, align 16
  br label %140

140:                                              ; preds = %136, %132
  ret void
}

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal fastcc i32 @ext3_feature_set_ok(ptr nocapture noundef readonly %0) unnamed_addr #21 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 29
  %7 = load i32, ptr %6, align 8
  %8 = and i32 %7, -23
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 28
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 30
  %22 = load i32, ptr %21, align 4
  %23 = icmp ult i32 %22, 8
  %24 = zext i1 %23 to i32
  br label %25

25:                                               ; preds = %20, %15, %10, %1
  %26 = phi i32 [ 0, %1 ], [ 0, %10 ], [ 1, %15 ], [ %24, %20 ]
  ret i32 %26
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sb_set_blocksize(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync)
define internal fastcc i64 @ext4_max_bitmap_size(i32 noundef %0, i32 noundef %1) unnamed_addr #22 {
  %3 = icmp eq i32 %1, 0
  %4 = add i32 %0, -9
  %5 = zext i32 %4 to i64
  %6 = lshr i64 4294967295, %5
  %7 = select i1 %3, i64 %6, i64 281474976710655
  %8 = add i32 %0, -2
  %9 = zext i32 %8 to i64
  %10 = shl nuw i64 1, %9
  %11 = trunc i64 %10 to i32
  %12 = shl i32 %8, 1
  %13 = zext i32 %12 to i64
  %14 = shl nuw i64 1, %13
  %15 = add i64 %14, %10
  %16 = trunc i64 %15 to i32
  %17 = add i32 %11, %16
  %18 = add i32 %17, 3
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 %7, %19
  %21 = zext i32 %0 to i64
  %22 = shl i64 %20, %21
  %23 = mul i32 %8, 3
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 1, %24
  %26 = add i64 %15, 12
  %27 = add i64 %26, %25
  %28 = shl i64 %27, %21
  %29 = tail call i64 @llvm.umin.i64(i64 %28, i64 %22)
  %30 = tail call i64 @llvm.umin.i64(i64 %29, i64 17592186040320)
  ret i64 %30
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @generic_check_addressable(i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i64 @descriptor_loc(ptr noundef %0, i64 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 47
  %9 = load i32, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 29
  %11 = load i32, ptr %10, align 8
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  %14 = icmp ugt i32 %9, %2
  %15 = select i1 %13, i1 true, i1 %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %3
  %17 = sext i32 %2 to i64
  %18 = add i64 %1, 1
  %19 = add i64 %18, %17
  br label %55

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 7
  %22 = load i32, ptr %21, align 4
  %23 = mul i32 %22, %2
  %24 = tail call i32 @ext4_bg_has_super(ptr noundef %0, i32 noundef %23) #26
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i32
  %27 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %28 = load i32, ptr %27, align 16
  %29 = icmp eq i32 %28, 1024
  %30 = icmp eq i32 %2, 0
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %39

32:                                               ; preds = %20
  %33 = load ptr, ptr %6, align 4
  %34 = getelementptr inbounds %struct.ext4_super_block, ptr %33, i32 0, i32 5
  %35 = load i32, ptr %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = select i1 %25, i32 2, i32 1
  %38 = select i1 %36, i32 %37, i32 %26
  br label %39

39:                                               ; preds = %32, %20
  %40 = phi i32 [ %26, %20 ], [ %38, %32 ]
  %41 = zext i32 %40 to i64
  %42 = zext i32 %23 to i64
  %43 = load ptr, ptr %4, align 4
  %44 = getelementptr inbounds %struct.ext4_sb_info, ptr %43, i32 0, i32 2
  %45 = load i32, ptr %44, align 8
  %46 = zext i32 %45 to i64
  %47 = mul nuw i64 %46, %42
  %48 = getelementptr inbounds %struct.ext4_sb_info, ptr %43, i32 0, i32 15
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.ext4_super_block, ptr %49, i32 0, i32 5
  %51 = load i32, ptr %50, align 4
  %52 = zext i32 %51 to i64
  %53 = add nuw i64 %47, %41
  %54 = add nuw i64 %53, %52
  br label %55

55:                                               ; preds = %39, %16
  %56 = phi i64 [ %19, %16 ], [ %54, %39 ]
  ret i64 %56
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_check_descriptors(ptr noundef %0, i64 noundef %1, ptr noundef writeonly %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 5
  %9 = load i32, ptr %8, align 4
  %10 = tail call i32 @ext4_bg_num_gdb(ptr noundef %0, i32 noundef 0) #26
  %11 = zext i32 %10 to i64
  %12 = add i64 %11, %1
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 8
  %14 = load i32, ptr %13, align 32
  %15 = load ptr, ptr %4, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 15
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.ext4_super_block, ptr %17, i32 0, i32 29
  %19 = load i32, ptr %18, align 8
  %20 = and i32 %19, 512
  %21 = icmp ne i32 %20, 0
  %22 = icmp eq i32 %14, 0
  br i1 %22, label %265, label %23

23:                                               ; preds = %3
  %24 = zext i32 %9 to i64
  %25 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %26 = add i64 %1, 1
  %27 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 5
  br label %28

28:                                               ; preds = %260, %23
  %29 = phi i32 [ %14, %23 ], [ %72, %260 ]
  %30 = phi i32 [ 0, %23 ], [ %262, %260 ]
  %31 = phi i64 [ %24, %23 ], [ %261, %260 ]
  %32 = tail call ptr @ext4_get_group_desc(ptr noundef %0, i32 noundef %30, ptr noundef null) #26
  %33 = load i32, ptr %13, align 32
  %34 = add i32 %33, -1
  %35 = icmp eq i32 %30, %34
  %36 = select i1 %35, i1 true, i1 %21
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = load ptr, ptr %6, align 4
  %39 = getelementptr inbounds %struct.ext4_super_block, ptr %38, i32 0, i32 29
  %40 = load i32, ptr %39, align 8
  %41 = and i32 %40, 128
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.ext4_super_block, ptr %38, i32 0, i32 50
  %45 = load i32, ptr %44, align 8
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  br label %48

48:                                               ; preds = %43, %37
  %49 = phi i64 [ %47, %43 ], [ 0, %37 ]
  %50 = getelementptr inbounds %struct.ext4_super_block, ptr %38, i32 0, i32 1
  %51 = load i32, ptr %50, align 4
  %52 = zext i32 %51 to i64
  %53 = add i64 %49, -1
  %54 = add i64 %53, %52
  br label %62

55:                                               ; preds = %28
  %56 = load ptr, ptr %4, align 4
  %57 = getelementptr inbounds %struct.ext4_sb_info, ptr %56, i32 0, i32 2
  %58 = load i32, ptr %57, align 8
  %59 = add i32 %58, -1
  %60 = zext i32 %59 to i64
  %61 = add i64 %31, %60
  br label %62

62:                                               ; preds = %55, %48
  %63 = phi i64 [ %54, %48 ], [ %61, %55 ]
  %64 = icmp eq i32 %29, %33
  br i1 %64, label %65, label %71

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 6
  %67 = load i16, ptr %66, align 2
  %68 = and i16 %67, 4
  %69 = icmp eq i16 %68, 0
  %70 = select i1 %69, i32 %30, i32 %29
  br label %71

71:                                               ; preds = %65, %62
  %72 = phi i32 [ %29, %62 ], [ %70, %65 ]
  %73 = load i32, ptr %32, align 4
  %74 = load ptr, ptr %4, align 4
  %75 = load i32, ptr %74, align 64
  %76 = icmp ugt i32 %75, 63
  br i1 %76, label %77, label %82

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 12
  %79 = load i32, ptr %78, align 4
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  br label %82

82:                                               ; preds = %77, %71
  %83 = phi i64 [ %81, %77 ], [ 0, %71 ]
  %84 = zext i32 %73 to i64
  %85 = or i64 %83, %84
  %86 = icmp eq i64 %85, %1
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.596, i32 noundef %30)
  %88 = load i32, ptr %25, align 4
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %269, label %91

91:                                               ; preds = %87, %82
  %92 = icmp ult i64 %85, %26
  %93 = icmp ugt i64 %85, %12
  %94 = select i1 %92, i1 true, i1 %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.597, i32 noundef %30)
  %96 = load i32, ptr %25, align 4
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %269, label %99

99:                                               ; preds = %95, %91
  %100 = icmp ult i64 %85, %31
  %101 = icmp ugt i64 %85, %63
  %102 = select i1 %100, i1 true, i1 %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %99
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.598, i32 noundef %30, i64 noundef %85)
  br label %269

104:                                              ; preds = %99
  %105 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 1
  %106 = load i32, ptr %105, align 4
  %107 = load ptr, ptr %4, align 4
  %108 = load i32, ptr %107, align 64
  %109 = icmp ugt i32 %108, 63
  br i1 %109, label %110, label %115

110:                                              ; preds = %104
  %111 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 13
  %112 = load i32, ptr %111, align 4
  %113 = zext i32 %112 to i64
  %114 = shl nuw i64 %113, 32
  br label %115

115:                                              ; preds = %110, %104
  %116 = phi i64 [ %114, %110 ], [ 0, %104 ]
  %117 = zext i32 %106 to i64
  %118 = or i64 %116, %117
  %119 = icmp eq i64 %118, %1
  br i1 %119, label %120, label %124

120:                                              ; preds = %115
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.599, i32 noundef %30)
  %121 = load i32, ptr %25, align 4
  %122 = and i32 %121, 1
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %269, label %124

124:                                              ; preds = %120, %115
  %125 = icmp ult i64 %118, %26
  %126 = icmp ugt i64 %118, %12
  %127 = select i1 %125, i1 true, i1 %126
  br i1 %127, label %132, label %128

128:                                              ; preds = %124
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.600, i32 noundef %30)
  %129 = load i32, ptr %25, align 4
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %269, label %132

132:                                              ; preds = %128, %124
  %133 = icmp ult i64 %118, %31
  %134 = icmp ugt i64 %118, %63
  %135 = select i1 %133, i1 true, i1 %134
  br i1 %135, label %136, label %137

136:                                              ; preds = %132
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.601, i32 noundef %30, i64 noundef %118)
  br label %269

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 2
  %139 = load i32, ptr %138, align 4
  %140 = load ptr, ptr %4, align 4
  %141 = load i32, ptr %140, align 64
  %142 = icmp ugt i32 %141, 63
  br i1 %142, label %143, label %148

143:                                              ; preds = %137
  %144 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 14
  %145 = load i32, ptr %144, align 4
  %146 = zext i32 %145 to i64
  %147 = shl nuw i64 %146, 32
  br label %148

148:                                              ; preds = %143, %137
  %149 = phi i64 [ %147, %143 ], [ 0, %137 ]
  %150 = zext i32 %139 to i64
  %151 = or i64 %149, %150
  %152 = icmp eq i64 %151, %1
  br i1 %152, label %153, label %157

153:                                              ; preds = %148
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.602, i32 noundef %30)
  %154 = load i32, ptr %25, align 4
  %155 = and i32 %154, 1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %269, label %157

157:                                              ; preds = %153, %148
  %158 = icmp ult i64 %151, %26
  %159 = icmp ugt i64 %151, %12
  %160 = select i1 %158, i1 true, i1 %159
  br i1 %160, label %165, label %161

161:                                              ; preds = %157
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.603, i32 noundef %30)
  %162 = load i32, ptr %25, align 4
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %269, label %165

165:                                              ; preds = %161, %157
  %166 = icmp ult i64 %151, %31
  br i1 %166, label %173, label %167

167:                                              ; preds = %165
  %168 = load i32, ptr %27, align 4
  %169 = zext i32 %168 to i64
  %170 = add i64 %151, -1
  %171 = add i64 %170, %169
  %172 = icmp ugt i64 %171, %63
  br i1 %172, label %173, label %174

173:                                              ; preds = %167, %165
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.604, i32 noundef %30, i64 noundef %151)
  br label %269

174:                                              ; preds = %167
  %175 = load ptr, ptr %4, align 4
  %176 = getelementptr inbounds %struct.ext4_sb_info, ptr %175, i32 0, i32 41
  %177 = load ptr, ptr %176, align 16
  %178 = and i32 %30, 63
  %179 = getelementptr [64 x %struct.bgl_lock], ptr %177, i32 0, i32 %178
  %180 = tail call i32 @_raw_spin_trylock(ptr noundef %179) #26
  %181 = icmp eq i32 %180, 0
  %182 = load ptr, ptr %4, align 4
  %183 = getelementptr inbounds %struct.ext4_sb_info, ptr %182, i32 0, i32 105
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %183) #26
  br i1 %181, label %189, label %184

184:                                              ; preds = %174
  %185 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %183, ptr %183, i32 0, i32 -1, ptr elementtype(i32) %183) #26, !srcloc !33
  %186 = extractvalue { i32, i32, i32 } %185, 0
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %195, label %188

188:                                              ; preds = %184
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !34
  br label %195

189:                                              ; preds = %174
  %190 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %183, ptr %183, i32 8, i32 1, ptr elementtype(i32) %183) #26, !srcloc !33
  %191 = extractvalue { i32, i32, i32 } %190, 0
  %192 = icmp eq i32 %191, 8
  br i1 %192, label %194, label %193

193:                                              ; preds = %189
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !34
  br label %194

194:                                              ; preds = %193, %189
  tail call void @_raw_spin_lock(ptr noundef %179) #26
  br label %195

195:                                              ; preds = %194, %188, %184
  %196 = load ptr, ptr %4, align 4
  %197 = getelementptr inbounds %struct.ext4_sb_info, ptr %196, i32 0, i32 15
  %198 = load ptr, ptr %197, align 4
  %199 = getelementptr inbounds %struct.ext4_super_block, ptr %198, i32 0, i32 30
  %200 = load i32, ptr %199, align 4
  %201 = and i32 %200, 16
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %227

203:                                              ; preds = %195
  %204 = and i32 %200, 1024
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %247, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %struct.ext4_sb_info, ptr %196, i32 0, i32 119
  %208 = load ptr, ptr %207, align 8
  %209 = icmp eq ptr %208, null
  %210 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %211 = xor i1 %210, true
  %212 = select i1 %209, i1 %211, i1 false
  br i1 %212, label %213, label %224, !prof !11

213:                                              ; preds = %206
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %214 = load ptr, ptr %4, align 4
  %215 = getelementptr inbounds %struct.ext4_sb_info, ptr %214, i32 0, i32 15
  %216 = load ptr, ptr %215, align 4
  %217 = getelementptr inbounds %struct.ext4_super_block, ptr %216, i32 0, i32 30
  %218 = load i32, ptr %217, align 4
  %219 = and i32 %218, 1024
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %247, label %221

221:                                              ; preds = %213
  %222 = getelementptr inbounds %struct.ext4_sb_info, ptr %214, i32 0, i32 119
  %223 = load ptr, ptr %222, align 8
  br label %224

224:                                              ; preds = %221, %206
  %225 = phi ptr [ %223, %221 ], [ %208, %206 ]
  %226 = icmp eq ptr %225, null
  br i1 %226, label %247, label %227

227:                                              ; preds = %224, %195
  %228 = getelementptr inbounds %struct.ext4_group_desc, ptr %32, i32 0, i32 11
  %229 = load i16, ptr %228, align 2
  %230 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %0, i32 noundef %30, ptr noundef %32) #26
  %231 = icmp eq i16 %229, %230
  br i1 %231, label %247, label %232

232:                                              ; preds = %227
  %233 = tail call fastcc zeroext i16 @ext4_group_desc_csum(ptr noundef %0, i32 noundef %30, ptr noundef %32)
  %234 = zext i16 %233 to i32
  %235 = load i16, ptr %228, align 2
  %236 = zext i16 %235 to i32
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.605, i32 noundef %30, i32 noundef %234, i32 noundef %236)
  %237 = load i32, ptr %25, align 4
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %247

240:                                              ; preds = %232
  %241 = load ptr, ptr %4, align 4
  %242 = getelementptr inbounds %struct.ext4_sb_info, ptr %241, i32 0, i32 41
  %243 = load ptr, ptr %242, align 16
  %244 = getelementptr [64 x %struct.bgl_lock], ptr %243, i32 0, i32 %178
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %245 = load i16, ptr %244, align 4
  %246 = add i16 %245, 1
  store i16 %246, ptr %244, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  br label %269

247:                                              ; preds = %232, %227, %224, %213, %203
  %248 = load ptr, ptr %4, align 4
  %249 = getelementptr inbounds %struct.ext4_sb_info, ptr %248, i32 0, i32 41
  %250 = load ptr, ptr %249, align 16
  %251 = getelementptr [64 x %struct.bgl_lock], ptr %250, i32 0, i32 %178
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %252 = load i16, ptr %251, align 4
  %253 = add i16 %252, 1
  store i16 %253, ptr %251, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  br i1 %21, label %260, label %254

254:                                              ; preds = %247
  %255 = load ptr, ptr %4, align 4
  %256 = getelementptr inbounds %struct.ext4_sb_info, ptr %255, i32 0, i32 2
  %257 = load i32, ptr %256, align 8
  %258 = zext i32 %257 to i64
  %259 = add i64 %31, %258
  br label %260

260:                                              ; preds = %254, %247
  %261 = phi i64 [ %31, %247 ], [ %259, %254 ]
  %262 = add nuw i32 %30, 1
  %263 = load i32, ptr %13, align 32
  %264 = icmp ult i32 %262, %263
  br i1 %264, label %28, label %265

265:                                              ; preds = %260, %3
  %266 = phi i32 [ 0, %3 ], [ %72, %260 ]
  %267 = icmp eq ptr %2, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  store i32 %266, ptr %2, align 4
  br label %269

269:                                              ; preds = %268, %265, %240, %173, %161, %153, %136, %128, %120, %103, %95, %87
  %270 = phi i32 [ 1, %268 ], [ 1, %265 ], [ 0, %103 ], [ 0, %136 ], [ 0, %173 ], [ 0, %240 ], [ 0, %87 ], [ 0, %95 ], [ 0, %120 ], [ 0, %128 ], [ 0, %153 ], [ 0, %161 ]
  ret i32 %270
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @print_daily_error_info(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -424
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr i8, ptr %0, i32 -752
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 69
  %7 = load i32, ptr %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %3, ptr noundef nonnull @.str.606, ptr noundef nonnull @.str.607, i32 noundef %7)
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 70
  %12 = load i32, ptr %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %16 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 94
  %17 = load i8, ptr %16, align 1
  %18 = zext i8 %17 to i64
  %19 = shl nuw nsw i64 %18, 32
  %20 = zext i32 %12 to i64
  %21 = or i64 %19, %20
  %22 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 73
  %23 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 74
  %24 = load i32, ptr %23, align 8
  %25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.608, ptr noundef %15, i64 noundef %21, i32 noundef 32, ptr noundef %22, i32 noundef %24) #28
  %26 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 71
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %14
  %30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.609, i32 noundef %27) #28
  br label %31

31:                                               ; preds = %29, %14
  %32 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 72
  %33 = load i64, ptr %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.610, i64 noundef %33) #28
  br label %37

37:                                               ; preds = %35, %31
  %38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.611) #28
  br label %39

39:                                               ; preds = %37, %10
  %40 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 75
  %41 = load i32, ptr %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %68, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %45 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 95
  %46 = load i8, ptr %45, align 1
  %47 = zext i8 %46 to i64
  %48 = shl nuw nsw i64 %47, 32
  %49 = zext i32 %41 to i64
  %50 = or i64 %48, %49
  %51 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 79
  %52 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 77
  %53 = load i32, ptr %52, align 4
  %54 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.612, ptr noundef %44, i64 noundef %50, i32 noundef 32, ptr noundef %51, i32 noundef %53) #28
  %55 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 76
  %56 = load i32, ptr %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %43
  %59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.609, i32 noundef %56) #28
  br label %60

60:                                               ; preds = %58, %43
  %61 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 78
  %62 = load i64, ptr %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.610, i64 noundef %62) #28
  br label %66

66:                                               ; preds = %64, %60
  %67 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.611) #28
  br label %68

68:                                               ; preds = %66, %39
  %69 = load volatile i32, ptr @jiffies, align 64
  %70 = add i32 %69, 8640000
  %71 = tail call i32 @mod_timer(ptr noundef %0, i32 noundef %70) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @flush_stashed_error_work(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -956
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr i8, ptr %0, i32 -964
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 10
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = icmp ne ptr %3, null
  %11 = select i1 %9, i1 %10, i1 false
  br i1 %11, label %12, label %41

12:                                               ; preds = %1
  %13 = getelementptr i8, ptr %0, i32 -1296
  %14 = load ptr, ptr %13, align 64
  %15 = tail call ptr @jbd2_journal_start(ptr noundef nonnull %3, i32 noundef 1) #26
  %16 = icmp ugt ptr %15, inttoptr (i32 -4096 to ptr)
  br i1 %16, label %41, label %17

17:                                               ; preds = %12
  %18 = tail call i32 @jbd2_journal_get_write_access(ptr noundef %15, ptr noundef %14) #26
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @jbd2_journal_stop(ptr noundef %15) #26
  br label %41

22:                                               ; preds = %17
  %23 = load ptr, ptr %4, align 4
  tail call fastcc void @ext4_update_super(ptr noundef %23)
  %24 = load volatile i32, ptr %14, align 4
  %25 = and i32 %24, 1024
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = load volatile i32, ptr %14, align 4
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %22
  %32 = load ptr, ptr %4, align 4
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %32, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.359)
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %14) #26
  %33 = load volatile i32, ptr %14, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  tail call void @_set_bit(i32 noundef 0, ptr noundef %14) #26
  br label %37

37:                                               ; preds = %36, %31, %27
  %38 = tail call i32 @jbd2_journal_dirty_metadata(ptr noundef %15, ptr noundef %14) #26
  %39 = icmp eq i32 %38, 0
  %40 = tail call i32 @jbd2_journal_stop(ptr noundef %15) #26
  br i1 %39, label %44, label %41

41:                                               ; preds = %37, %20, %12, %1
  %42 = load ptr, ptr %4, align 4
  %43 = tail call fastcc i32 @ext4_commit_super(ptr noundef %42)
  br label %44

44:                                               ; preds = %41, %37
  %45 = getelementptr i8, ptr %0, i32 -1360
  tail call void @ext4_notify_error_sysfs(ptr noundef %45) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_es_register_shrinker(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal fastcc i32 @ext4_get_stripe_size(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 15
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_super_block, ptr %3, i32 0, i32 56
  %5 = load i16, ptr %4, align 4
  %6 = zext i16 %5 to i32
  %7 = getelementptr inbounds %struct.ext4_super_block, ptr %3, i32 0, i32 59
  %8 = load i32, ptr %7, align 8
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 73
  %10 = load i32, ptr %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 2
  %14 = load i32, ptr %13, align 8
  %15 = icmp ugt i32 %10, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %12, %1
  %17 = icmp eq i32 %8, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 2
  %20 = load i32, ptr %19, align 8
  %21 = icmp ugt i32 %8, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %18, %16
  %23 = icmp eq i16 %5, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.ext4_sb_info, ptr %0, i32 0, i32 2
  %26 = load i32, ptr %25, align 8
  %27 = icmp ult i32 %26, %6
  br i1 %27, label %31, label %28

28:                                               ; preds = %24, %18, %12
  %29 = phi i32 [ %10, %12 ], [ %8, %18 ], [ %6, %24 ]
  %30 = icmp slt i32 %29, 2
  br i1 %30, label %31, label %32

31:                                               ; preds = %28, %24, %22
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi i32 [ 0, %31 ], [ %29, %28 ]
  ret i32 %33
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_multi_mount_protect(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_load_journal(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 39
  %5 = load i32, ptr %4, align 8
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %7, i32 0, i32 15
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ext4_super_block, ptr %9, i32 0, i32 28
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 4
  %13 = icmp ne i32 %12, 0
  %14 = load i1, ptr @ext4_load_journal.__already_done, align 1
  %15 = select i1 %13, i1 true, i1 %14
  br i1 %15, label %17, label %16, !prof !10

16:                                               ; preds = %3
  store i1 true, ptr @ext4_load_journal.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 5772, i32 noundef 9, ptr noundef null) #26
  br label %17

17:                                               ; preds = %16, %3
  br i1 %13, label %18, label %303

18:                                               ; preds = %17
  %19 = icmp ne i32 %2, 0
  %20 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 40
  %21 = load i32, ptr %20, align 4
  br i1 %19, label %22, label %25

22:                                               ; preds = %18
  %23 = icmp eq i32 %21, %2
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.623)
  br label %25

25:                                               ; preds = %24, %22, %18
  %26 = phi i32 [ %2, %24 ], [ %2, %22 ], [ %21, %18 ]
  %27 = and i32 %26, 255
  %28 = lshr i32 %26, 12
  %29 = and i32 %28, 1048320
  %30 = or i32 %29, %27
  %31 = shl i32 %26, 12
  %32 = and i32 %31, -1048576
  %33 = or i32 %30, %32
  %34 = icmp ne i32 %5, 0
  %35 = icmp ne i32 %33, 0
  %36 = select i1 %34, i1 %35, i1 false
  br i1 %36, label %37, label %38

37:                                               ; preds = %25
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.624)
  br label %303

38:                                               ; preds = %25
  %39 = load ptr, ptr %6, align 4
  %40 = getelementptr inbounds %struct.ext4_sb_info, ptr %39, i32 0, i32 15
  %41 = load ptr, ptr %40, align 4
  %42 = getelementptr inbounds %struct.ext4_super_block, ptr %41, i32 0, i32 28
  %43 = load i32, ptr %42, align 4
  %44 = and i32 %43, 4
  %45 = icmp ne i32 %44, 0
  br i1 %34, label %46, label %86

46:                                               ; preds = %38
  %47 = load i1, ptr @ext4_get_journal.__already_done, align 1
  %48 = select i1 %45, i1 true, i1 %47
  br i1 %48, label %50, label %49, !prof !10

49:                                               ; preds = %46
  store i1 true, ptr @ext4_get_journal.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 5649, i32 noundef 9, ptr noundef null) #26
  br label %50

50:                                               ; preds = %49, %46
  br i1 %45, label %51, label %303

51:                                               ; preds = %50
  %52 = tail call fastcc ptr @ext4_get_journal_inode(ptr noundef %0, i32 noundef %5) #26
  %53 = icmp eq ptr %52, null
  br i1 %53, label %303, label %54

54:                                               ; preds = %51
  %55 = tail call ptr @jbd2_journal_init_inode(ptr noundef nonnull %52) #26
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.631) #26
  tail call void @iput(ptr noundef nonnull %52) #26
  br label %303

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.journal_s, ptr %55, i32 0, i32 69
  store ptr %0, ptr %59, align 4
  %60 = load ptr, ptr %6, align 4
  %61 = getelementptr inbounds %struct.ext4_sb_info, ptr %60, i32 0, i32 52
  %62 = load i32, ptr %61, align 4
  %63 = getelementptr inbounds %struct.journal_s, ptr %55, i32 0, i32 49
  store i32 %62, ptr %63, align 8
  %64 = getelementptr inbounds %struct.ext4_sb_info, ptr %60, i32 0, i32 54
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.journal_s, ptr %55, i32 0, i32 60
  store i32 %65, ptr %66, align 8
  %67 = getelementptr inbounds %struct.ext4_sb_info, ptr %60, i32 0, i32 53
  %68 = load i32, ptr %67, align 8
  %69 = getelementptr inbounds %struct.journal_s, ptr %55, i32 0, i32 61
  store i32 %68, ptr %69, align 4
  tail call void @ext4_fc_init(ptr noundef %0, ptr noundef nonnull %55) #26
  %70 = getelementptr inbounds %struct.journal_s, ptr %55, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %70) #26
  %71 = load ptr, ptr %6, align 4
  %72 = getelementptr inbounds %struct.ext4_sb_info, ptr %71, i32 0, i32 17
  %73 = load i32, ptr %72, align 4
  %74 = load i32, ptr %55, align 8
  %75 = and i32 %74, -33
  %76 = lshr i32 %73, 12
  %77 = and i32 %76, 32
  %78 = or i32 %75, %77
  store i32 %78, ptr %55, align 8
  %79 = load ptr, ptr %6, align 4
  %80 = getelementptr inbounds %struct.ext4_sb_info, ptr %79, i32 0, i32 17
  %81 = load i32, ptr %80, align 4
  %82 = and i32 %78, -65
  %83 = lshr i32 %81, 22
  %84 = and i32 %83, 64
  %85 = or i32 %84, %82
  store i32 %85, ptr %55, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !42
  tail call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr %70, i32 0) #26, !srcloc !43
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !44
  br label %187

86:                                               ; preds = %38
  %87 = load i1, ptr @ext4_get_dev_journal.__already_done, align 1
  %88 = select i1 %45, i1 true, i1 %87
  br i1 %88, label %90, label %89, !prof !10

89:                                               ; preds = %86
  store i1 true, ptr @ext4_get_dev_journal.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.33, i32 noundef 5680, i32 noundef 9, ptr noundef null) #26
  br label %90

90:                                               ; preds = %89, %86
  br i1 %45, label %91, label %303

91:                                               ; preds = %90
  %92 = tail call ptr @blkdev_get_by_dev(i32 noundef %33, i32 noundef 131, ptr noundef %0) #26
  %93 = icmp ugt ptr %92, inttoptr (i32 -4096 to ptr)
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = lshr i32 %31, 20
  %96 = ptrtoint ptr %92 to i32
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.640, i32 noundef %95, i32 noundef %30, i32 noundef %96) #26
  br label %303

97:                                               ; preds = %91
  %98 = icmp eq ptr %92, null
  br i1 %98, label %303, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %101 = load i32, ptr %100, align 16
  %102 = getelementptr inbounds %struct.block_device, ptr %92, i32 0, i32 18
  %103 = load ptr, ptr %102, align 4
  %104 = icmp eq ptr %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %struct.request_queue, ptr %103, i32 0, i32 32, i32 9
  %107 = load i32, ptr %106, align 4
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, i32 512, i32 %107
  br label %110

110:                                              ; preds = %105, %99
  %111 = phi i32 [ 512, %99 ], [ %109, %105 ]
  %112 = icmp slt i32 %101, %111
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.632) #26
  br label %183

114:                                              ; preds = %110
  %115 = freeze i32 %101
  %116 = sdiv i32 1024, %115
  %117 = sext i32 %116 to i64
  %118 = tail call i32 @set_blocksize(ptr noundef nonnull %92, i32 noundef %101) #26
  %119 = tail call ptr @__bread_gfp(ptr noundef nonnull %92, i64 noundef %117, i32 noundef %101, i32 noundef 8) #26
  %120 = icmp eq ptr %119, null
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.633) #26
  br label %183

122:                                              ; preds = %114
  %123 = mul i32 %116, %115
  %124 = sub i32 1024, %123
  %125 = getelementptr inbounds %struct.buffer_head, ptr %119, i32 0, i32 5
  %126 = load ptr, ptr %125, align 4
  %127 = getelementptr i8, ptr %126, i32 %124
  %128 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 15
  %129 = load i16, ptr %128, align 8
  %130 = icmp eq i16 %129, -4269
  br i1 %130, label %131, label %136

131:                                              ; preds = %122
  %132 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 29
  %133 = load i32, ptr %132, align 8
  %134 = and i32 %133, 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %131, %122
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.634) #26
  tail call void @__brelse(ptr noundef nonnull %119) #26
  br label %183

137:                                              ; preds = %131
  %138 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 30
  %139 = load i32, ptr %138, align 4
  %140 = and i32 %139, 1024
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 102
  %144 = load i32, ptr %143, align 4
  %145 = tail call i32 @ext4_superblock_csum(ptr noundef %0, ptr noundef %127) #26
  %146 = icmp eq i32 %144, %145
  br i1 %146, label %148, label %147

147:                                              ; preds = %142
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.635) #26
  tail call void @__brelse(ptr noundef nonnull %119) #26
  br label %183

148:                                              ; preds = %142, %137
  %149 = load ptr, ptr %6, align 4
  %150 = getelementptr inbounds %struct.ext4_sb_info, ptr %149, i32 0, i32 15
  %151 = load ptr, ptr %150, align 4
  %152 = getelementptr inbounds %struct.ext4_super_block, ptr %151, i32 0, i32 38
  %153 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 31
  %154 = tail call i32 @bcmp(ptr noundef dereferenceable(16) %152, ptr noundef dereferenceable(16) %153, i32 16) #26
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %148
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.636) #26
  tail call void @__brelse(ptr noundef nonnull %119) #26
  br label %183

157:                                              ; preds = %148
  %158 = getelementptr inbounds %struct.ext4_super_block, ptr %127, i32 0, i32 1
  %159 = load i32, ptr %158, align 4
  %160 = add nsw i64 %117, 1
  tail call void @__brelse(ptr noundef nonnull %119) #26
  %161 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %162 = load ptr, ptr %161, align 4
  %163 = tail call ptr @jbd2_journal_init_dev(ptr noundef nonnull %92, ptr noundef %162, i64 noundef %160, i32 noundef %159, i32 noundef %101) #26
  %164 = icmp eq ptr %163, null
  br i1 %164, label %165, label %166

165:                                              ; preds = %157
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.637) #26
  br label %183

166:                                              ; preds = %157
  %167 = getelementptr inbounds %struct.journal_s, ptr %163, i32 0, i32 69
  store ptr %0, ptr %167, align 4
  %168 = getelementptr inbounds %struct.journal_s, ptr %163, i32 0, i32 4
  %169 = load ptr, ptr %168, align 8
  %170 = tail call i32 @ext4_read_bh_lock(ptr noundef %169, i32 noundef 12288, i1 noundef zeroext true) #26
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %166
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.638) #26
  br label %181

173:                                              ; preds = %166
  %174 = getelementptr inbounds %struct.journal_s, ptr %163, i32 0, i32 5
  %175 = load ptr, ptr %174, align 4
  %176 = getelementptr inbounds %struct.journal_superblock_s, ptr %175, i32 0, i32 11
  %177 = load i32, ptr %176, align 4
  %178 = icmp eq i32 %177, 16777216
  br i1 %178, label %184, label %179

179:                                              ; preds = %173
  %180 = tail call i32 @llvm.bswap.i32(i32 %177) #26
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.639, i32 noundef %180) #26
  br label %181

181:                                              ; preds = %179, %172
  %182 = tail call i32 @jbd2_journal_destroy(ptr noundef nonnull %163) #26
  br label %183

183:                                              ; preds = %181, %165, %156, %147, %136, %121, %113
  tail call void @blkdev_put(ptr noundef nonnull %92, i32 noundef 131) #26
  br label %303

184:                                              ; preds = %173
  %185 = load ptr, ptr %6, align 4
  %186 = getelementptr inbounds %struct.ext4_sb_info, ptr %185, i32 0, i32 55
  store ptr %92, ptr %186, align 16
  tail call fastcc void @ext4_init_journal_params(ptr noundef %0, ptr noundef nonnull %163) #26
  br label %187

187:                                              ; preds = %184, %58
  %188 = phi ptr [ %55, %58 ], [ %163, %184 ]
  %189 = getelementptr inbounds %struct.journal_s, ptr %188, i32 0, i32 32
  %190 = load ptr, ptr %189, align 4
  %191 = getelementptr inbounds %struct.block_device, ptr %190, i32 0, i32 4
  %192 = load i8, ptr %191, align 8, !range !27
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %194, label %207

194:                                              ; preds = %187
  %195 = getelementptr inbounds %struct.block_device, ptr %190, i32 0, i32 17
  %196 = load ptr, ptr %195, align 8
  %197 = getelementptr inbounds %struct.gendisk, ptr %196, i32 0, i32 7
  %198 = load ptr, ptr %197, align 4
  %199 = getelementptr inbounds %struct.block_device, ptr %198, i32 0, i32 4
  %200 = load i8, ptr %199, align 8, !range !27
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %207

202:                                              ; preds = %194
  %203 = getelementptr inbounds %struct.gendisk, ptr %196, i32 0, i32 12
  %204 = load volatile i32, ptr %203, align 4
  %205 = lshr i32 %204, 1
  %206 = and i32 %205, 1
  br label %207

207:                                              ; preds = %202, %194, %187
  %208 = phi i32 [ 1, %187 ], [ 1, %194 ], [ %206, %202 ]
  %209 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %210 = load ptr, ptr %209, align 4
  %211 = getelementptr inbounds %struct.block_device, ptr %210, i32 0, i32 4
  %212 = load i8, ptr %211, align 8, !range !27
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %227

214:                                              ; preds = %207
  %215 = getelementptr inbounds %struct.block_device, ptr %210, i32 0, i32 17
  %216 = load ptr, ptr %215, align 8
  %217 = getelementptr inbounds %struct.gendisk, ptr %216, i32 0, i32 7
  %218 = load ptr, ptr %217, align 4
  %219 = getelementptr inbounds %struct.block_device, ptr %218, i32 0, i32 4
  %220 = load i8, ptr %219, align 8, !range !27
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %214
  %223 = getelementptr inbounds %struct.gendisk, ptr %216, i32 0, i32 12
  %224 = load volatile i32, ptr %223, align 4
  %225 = lshr i32 %224, 1
  %226 = and i32 %225, 1
  br label %227

227:                                              ; preds = %222, %214, %207
  %228 = phi i32 [ 1, %207 ], [ 1, %214 ], [ %226, %222 ]
  %229 = or i32 %228, %208
  %230 = icmp eq i32 %208, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %233 = load i32, ptr %232, align 4
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %299, label %236

236:                                              ; preds = %231, %227
  %237 = load ptr, ptr %6, align 4
  %238 = getelementptr inbounds %struct.ext4_sb_info, ptr %237, i32 0, i32 15
  %239 = load ptr, ptr %238, align 4
  %240 = getelementptr inbounds %struct.ext4_super_block, ptr %239, i32 0, i32 29
  %241 = load i32, ptr %240, align 8
  %242 = and i32 %241, 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %252, label %244

244:                                              ; preds = %236
  %245 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %246 = load i32, ptr %245, align 4
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %244
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.626)
  %250 = icmp eq i32 %229, 0
  br i1 %250, label %251, label %299

251:                                              ; preds = %249
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.628)
  br label %252

252:                                              ; preds = %251, %244, %236
  %253 = load i32, ptr %188, align 8
  %254 = and i32 %253, 32
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %252
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.629)
  br label %257

257:                                              ; preds = %256, %252
  %258 = load ptr, ptr %6, align 4
  %259 = getelementptr inbounds %struct.ext4_sb_info, ptr %258, i32 0, i32 15
  %260 = load ptr, ptr %259, align 4
  %261 = getelementptr inbounds %struct.ext4_super_block, ptr %260, i32 0, i32 29
  %262 = load i32, ptr %261, align 8
  %263 = and i32 %262, 4
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %257
  %266 = xor i32 %229, 1
  %267 = tail call i32 @jbd2_journal_wipe(ptr noundef nonnull %188, i32 noundef %266) #26
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %299

269:                                              ; preds = %265, %257
  %270 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %271 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %270, i32 noundef 3264, i32 noundef 108) #31
  %272 = icmp eq ptr %271, null
  br i1 %272, label %273, label %275

273:                                              ; preds = %269
  %274 = tail call i32 @jbd2_journal_load(ptr noundef nonnull %188) #26
  br label %278

275:                                              ; preds = %269
  %276 = getelementptr i8, ptr %1, i32 404
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 dereferenceable(108) %271, ptr noundef align 1 dereferenceable(108) %276, i32 108, i1 false)
  %277 = tail call i32 @jbd2_journal_load(ptr noundef nonnull %188) #26
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(108) %276, ptr noundef nonnull align 8 dereferenceable(108) %271, i32 108, i1 false)
  br label %278

278:                                              ; preds = %275, %273
  %279 = phi i32 [ %274, %273 ], [ %277, %275 ]
  tail call void @kfree(ptr noundef %271) #26
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %299

281:                                              ; preds = %278
  %282 = load ptr, ptr %6, align 4
  %283 = getelementptr inbounds %struct.ext4_sb_info, ptr %282, i32 0, i32 47
  store ptr %188, ptr %283, align 4
  %284 = tail call fastcc i32 @ext4_clear_journal_err(ptr noundef %0, ptr noundef %1)
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %290, label %286

286:                                              ; preds = %281
  %287 = load ptr, ptr %6, align 4
  %288 = getelementptr inbounds %struct.ext4_sb_info, ptr %287, i32 0, i32 47
  store ptr null, ptr %288, align 4
  %289 = tail call i32 @jbd2_journal_destroy(ptr noundef nonnull %188) #26
  br label %303

290:                                              ; preds = %281
  %291 = icmp eq i32 %229, 0
  %292 = and i1 %19, %291
  br i1 %292, label %293, label %303

293:                                              ; preds = %290
  %294 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 40
  %295 = load i32, ptr %294, align 4
  %296 = icmp eq i32 %295, %2
  br i1 %296, label %303, label %297

297:                                              ; preds = %293
  store i32 %2, ptr %294, align 4
  %298 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %303

299:                                              ; preds = %278, %265, %249, %231
  %300 = phi ptr [ @.str.625, %231 ], [ @.str.627, %249 ], [ @.str.630, %265 ], [ @.str.630, %278 ]
  %301 = phi i32 [ -30, %231 ], [ -30, %249 ], [ %267, %265 ], [ %279, %278 ]
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull %300)
  %302 = tail call i32 @jbd2_journal_destroy(ptr noundef nonnull %188) #26
  br label %303

303:                                              ; preds = %299, %297, %293, %290, %286, %183, %97, %94, %90, %57, %51, %50, %37, %17
  %304 = phi i32 [ -22, %37 ], [ %301, %299 ], [ %284, %286 ], [ -117, %17 ], [ 0, %297 ], [ 0, %293 ], [ 0, %290 ], [ -22, %57 ], [ -22, %50 ], [ -22, %51 ], [ -22, %183 ], [ -22, %90 ], [ -22, %97 ], [ -22, %94 ]
  ret i32 %304
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_set_features(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @set_journal_csum_feature_set(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 30
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 1024
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 119
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, null
  %14 = load i1, ptr @ext4_has_metadata_csum.__already_done, align 1
  %15 = xor i1 %14, true
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %28, !prof !11

17:                                               ; preds = %10
  store i1 true, ptr @ext4_has_metadata_csum.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.354, i32 noundef 3289, i32 noundef 9, ptr noundef null) #26
  %18 = load ptr, ptr %2, align 4
  %19 = getelementptr inbounds %struct.ext4_sb_info, ptr %18, i32 0, i32 15
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ext4_super_block, ptr %20, i32 0, i32 30
  %22 = load i32, ptr %21, align 4
  %23 = and i32 %22, 1024
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %18, i32 0, i32 119
  %27 = load ptr, ptr %26, align 8
  br label %28

28:                                               ; preds = %25, %10
  %29 = phi ptr [ %27, %25 ], [ %12, %10 ]
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %28, %17, %1
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi i32 [ 1, %31 ], [ 0, %28 ]
  %34 = phi i32 [ 0, %31 ], [ 16, %28 ]
  %35 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 47
  %36 = load ptr, ptr %35, align 4
  tail call void @jbd2_journal_clear_features(ptr noundef %36, i32 noundef 1, i32 noundef 0, i32 noundef 24) #26
  %37 = load ptr, ptr %2, align 4
  %38 = getelementptr inbounds %struct.ext4_sb_info, ptr %37, i32 0, i32 17
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, 16777216
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %32
  %43 = load ptr, ptr %35, align 4
  %44 = or i32 %34, 4
  %45 = tail call i32 @jbd2_journal_set_features(ptr noundef %43, i32 noundef %33, i32 noundef 0, i32 noundef %44) #26
  br label %54

46:                                               ; preds = %32
  %47 = and i32 %39, 8388608
  %48 = icmp eq i32 %47, 0
  %49 = load ptr, ptr %35, align 4
  br i1 %48, label %53, label %50

50:                                               ; preds = %46
  %51 = tail call i32 @jbd2_journal_set_features(ptr noundef %49, i32 noundef %33, i32 noundef 0, i32 noundef %34) #26
  %52 = load ptr, ptr %35, align 4
  tail call void @jbd2_journal_clear_features(ptr noundef %52, i32 noundef 0, i32 noundef 0, i32 noundef 4) #26
  br label %54

53:                                               ; preds = %46
  tail call void @jbd2_journal_clear_features(ptr noundef %49, i32 noundef 0, i32 noundef 0, i32 noundef 4) #26
  br label %54

54:                                               ; preds = %53, %50, %42
  %55 = phi i32 [ %45, %42 ], [ %51, %50 ], [ 1, %53 ]
  ret i32 %55
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_check_available_features(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_task_ioprio(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_journal_submit_inode_data_buffers(ptr noundef %0) #0 {
  %2 = alloca %struct.writeback_control, align 8
  %3 = getelementptr inbounds %struct.jbd2_inode, ptr %0, i32 0, i32 3
  %4 = load ptr, ptr %3, align 8
  %5 = tail call i32 @ext4_inode_journal_mode(ptr noundef %4) #26
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8
  %10 = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 9
  %11 = load ptr, ptr %10, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #26
  %12 = getelementptr inbounds i8, ptr %2, i32 24
  store i64 1, ptr %12, align 8, !annotation !9
  store i32 2147483647, ptr %2, align 8
  %13 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 1
  store i32 0, ptr %13, align 4
  %14 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 2
  %15 = getelementptr inbounds %struct.jbd2_inode, ptr %0, i32 0, i32 5
  %16 = load i64, ptr %15, align 8
  store i64 %16, ptr %14, align 8
  %17 = getelementptr inbounds %struct.writeback_control, ptr %2, i32 0, i32 3
  %18 = getelementptr inbounds %struct.jbd2_inode, ptr %0, i32 0, i32 6
  %19 = load i64, ptr %18, align 8
  store i64 %19, ptr %17, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = call i32 @write_cache_pages(ptr noundef %11, ptr noundef nonnull %2, ptr noundef nonnull @ext4_journalled_writepage_callback, ptr noundef %20) #26
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #26
  br label %24

22:                                               ; preds = %1
  %23 = tail call i32 @jbd2_journal_submit_inode_data_buffers(ptr noundef %0) #26
  br label %24

24:                                               ; preds = %22, %8
  %25 = phi i32 [ %21, %8 ], [ %23, %22 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_journal_finish_inode_data_buffers(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.jbd2_inode, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 8
  %4 = tail call i32 @ext4_inode_journal_mode(ptr noundef %3) #26
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = tail call i32 @jbd2_journal_finish_inode_data_buffers(ptr noundef %0) #26
  br label %9

9:                                                ; preds = %7, %1
  %10 = phi i32 [ 0, %1 ], [ %8, %7 ]
  ret i32 %10
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ext4_xattr_create_cache() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__ext4_iget(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @d_make_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_setup_super(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 22
  %7 = load i32, ptr %6, align 4
  %8 = icmp ugt i32 %7, 1
  br i1 %8, label %9, label %10

9:                                                ; preds = %3
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.644)
  br label %117

10:                                               ; preds = %3
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %117

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 25
  %14 = load i16, ptr %13, align 8
  %15 = zext i16 %14 to i32
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %12
  %19 = and i32 %15, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %46

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 14
  %23 = load i16, ptr %22, align 2
  %24 = icmp sgt i16 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 13
  %27 = load i16, ptr %26, align 4
  %28 = icmp ult i16 %27, %23
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 20
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %48, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 19
  %35 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 93
  %36 = load i8, ptr %35, align 1
  %37 = zext i8 %36 to i64
  %38 = shl nuw nsw i64 %37, 32
  %39 = load i32, ptr %34, align 4
  %40 = zext i32 %39 to i64
  %41 = or i64 %38, %40
  %42 = zext i32 %31 to i64
  %43 = add nuw nsw i64 %41, %42
  %44 = tail call i64 @ktime_get_real_seconds() #26
  %45 = icmp sgt i64 %43, %44
  br i1 %45, label %48, label %46

46:                                               ; preds = %33, %25, %18, %12
  %47 = phi ptr [ @.str.645, %12 ], [ @.str.646, %18 ], [ @.str.647, %25 ], [ @.str.648, %33 ]
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.479, ptr noundef nonnull %47)
  br label %48

48:                                               ; preds = %46, %33, %29
  %49 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 47
  %50 = load ptr, ptr %49, align 4
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 16
  %54 = load i16, ptr %53, align 2
  %55 = and i16 %54, -2
  store i16 %55, ptr %53, align 2
  br label %56

56:                                               ; preds = %52, %48
  %57 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 14
  %58 = load i16, ptr %57, align 2
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %56
  store i16 20, ptr %57, align 2
  br label %61

61:                                               ; preds = %60, %56
  %62 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 13
  %63 = load i16, ptr %62, align 2
  %64 = add i16 %63, 1
  store i16 %64, ptr %62, align 2
  %65 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 11
  %66 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 91
  %67 = tail call i64 @ktime_get_real_seconds() #26
  %68 = tail call i64 @llvm.smax.i64(i64 %67, i64 0) #26
  %69 = tail call i64 @llvm.umin.i64(i64 %68, i64 1099511627775) #26
  %70 = trunc i64 %69 to i32
  store i32 %70, ptr %65, align 4
  %71 = lshr i64 %69, 32
  %72 = trunc i64 %71 to i8
  store i8 %72, ptr %66, align 1
  %73 = load ptr, ptr %49, align 4
  %74 = icmp eq ptr %73, null
  br i1 %74, label %115, label %75

75:                                               ; preds = %61
  %76 = load ptr, ptr %4, align 4
  %77 = getelementptr inbounds %struct.ext4_sb_info, ptr %76, i32 0, i32 15
  %78 = load ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.ext4_super_block, ptr %78, i32 0, i32 22
  %80 = load i32, ptr %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_update_dynamic_rev, i32 noundef 1089, ptr noundef nonnull @.str.34, i32 noundef 1) #26
  %83 = getelementptr inbounds %struct.ext4_super_block, ptr %78, i32 0, i32 25
  store i32 11, ptr %83, align 4
  %84 = getelementptr inbounds %struct.ext4_super_block, ptr %78, i32 0, i32 26
  store i16 128, ptr %84, align 8
  store i32 1, ptr %79, align 4
  %85 = load ptr, ptr %4, align 4
  %86 = getelementptr inbounds %struct.ext4_sb_info, ptr %85, i32 0, i32 15
  %87 = load ptr, ptr %86, align 4
  br label %88

88:                                               ; preds = %82, %75
  %89 = phi ptr [ %78, %75 ], [ %87, %82 ]
  %90 = getelementptr inbounds %struct.ext4_super_block, ptr %89, i32 0, i32 29
  %91 = load i32, ptr %90, align 8
  %92 = or i32 %91, 4
  store i32 %92, ptr %90, align 8
  %93 = load ptr, ptr %4, align 4
  %94 = getelementptr inbounds %struct.ext4_sb_info, ptr %93, i32 0, i32 15
  %95 = load ptr, ptr %94, align 4
  %96 = getelementptr inbounds %struct.ext4_super_block, ptr %95, i32 0, i32 28
  %97 = load i32, ptr %96, align 4
  %98 = and i32 %97, 4096
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %struct.ext4_super_block, ptr %95, i32 0, i32 22
  %102 = load i32, ptr %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_update_dynamic_rev, i32 noundef 1089, ptr noundef nonnull @.str.34, i32 noundef 1) #26
  %105 = getelementptr inbounds %struct.ext4_super_block, ptr %95, i32 0, i32 25
  store i32 11, ptr %105, align 4
  %106 = getelementptr inbounds %struct.ext4_super_block, ptr %95, i32 0, i32 26
  store i16 128, ptr %106, align 8
  store i32 1, ptr %101, align 4
  %107 = load ptr, ptr %4, align 4
  %108 = getelementptr inbounds %struct.ext4_sb_info, ptr %107, i32 0, i32 15
  %109 = load ptr, ptr %108, align 4
  br label %110

110:                                              ; preds = %104, %100
  %111 = phi ptr [ %95, %100 ], [ %109, %104 ]
  %112 = getelementptr inbounds %struct.ext4_super_block, ptr %111, i32 0, i32 30
  %113 = load i32, ptr %112, align 4
  %114 = or i32 %113, 65536
  store i32 %114, ptr %112, align 4
  br label %115

115:                                              ; preds = %110, %88, %61
  %116 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %117

117:                                              ; preds = %115, %10, %9
  %118 = phi i32 [ -30, %9 ], [ 0, %10 ], [ %116, %115 ]
  %119 = load ptr, ptr %4, align 4
  %120 = getelementptr inbounds %struct.ext4_sb_info, ptr %119, i32 0, i32 17
  %121 = load i32, ptr %120, align 4
  %122 = and i32 %121, 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %138, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 3
  %126 = load i32, ptr %125, align 16
  %127 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 8
  %128 = load i32, ptr %127, align 32
  %129 = getelementptr inbounds %struct.ext4_sb_info, ptr %119, i32 0, i32 2
  %130 = load i32, ptr %129, align 8
  %131 = getelementptr inbounds %struct.ext4_sb_info, ptr %119, i32 0, i32 4
  %132 = load i32, ptr %131, align 16
  %133 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 17
  %134 = load i32, ptr %133, align 4
  %135 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 18
  %136 = load i32, ptr %135, align 16
  %137 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.649, i32 noundef %126, i32 noundef %128, i32 noundef %130, i32 noundef %132, i32 noundef %134, i32 noundef %136) #28
  br label %138

138:                                              ; preds = %124, %117
  ret i32 %118
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ext4_set_resv_clusters(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 29
  %7 = load i32, ptr %6, align 8
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %1
  %11 = and i32 %7, 128
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 50
  %15 = load i32, ptr %14, align 8
  %16 = zext i32 %15 to i64
  %17 = shl nuw i64 %16, 32
  br label %18

18:                                               ; preds = %13, %10
  %19 = phi i64 [ %17, %13 ], [ 0, %10 ]
  %20 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %19, %22
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 12
  %25 = load i32, ptr %24, align 16
  %26 = zext i32 %25 to i64
  %27 = lshr i64 %23, %26
  %28 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -6640827866535438582, i64 %27, i32 0) #27, !srcloc !13
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = extractvalue { i64, i32 } %28, 1
  %31 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -6640827866535438582, i64 %27, i64 %29, i32 %30) #27, !srcloc !14
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = lshr i64 %32, 5
  %34 = tail call i64 @llvm.umin.i64(i64 %33, i64 4096)
  %35 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #26, !srcloc !16
  %36 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %35, ptr %35, i64 %34) #26, !srcloc !48
  br label %37

37:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_setup_system_zone(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_fc_replay_cleanup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_ext_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_mb_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @ext4_journal_commit_callback(ptr nocapture noundef readonly %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.journal_s, ptr %0, i32 0, i32 69
  %4 = load ptr, ptr %3, align 4
  %5 = load i32, ptr %0, align 8
  %6 = and i32 %5, 2
  %7 = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 2
  %8 = load i32, ptr %7, align 8
  %9 = icmp eq i32 %8, 8
  br i1 %9, label %10, label %11, !prof !11

10:                                               ; preds = %2
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 465, 0\0A.popsection", ""() #26, !srcloc !49
  unreachable

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 27
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  tail call void @ext4_process_freed_data(ptr noundef %4, i32 noundef %15) #26
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %13, i32 0, i32 60
  tail call void @_raw_spin_lock(ptr noundef %16) #26
  %17 = getelementptr inbounds %struct.transaction_s, ptr %1, i32 0, i32 27
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, %17
  br i1 %19, label %32, label %20

20:                                               ; preds = %20, %11
  %21 = phi ptr [ %30, %20 ], [ %18, %11 ]
  %22 = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  %24 = load ptr, ptr %21, align 4
  %25 = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  store ptr %23, ptr %25, align 4
  store volatile ptr %24, ptr %23, align 4
  store volatile ptr %21, ptr %21, align 4
  store ptr %21, ptr %22, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %26 = load i16, ptr %16, align 4
  %27 = add i16 %26, 1
  store i16 %27, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  %28 = getelementptr inbounds %struct.ext4_journal_cb_entry, ptr %21, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  tail call void %29(ptr noundef %4, ptr noundef %21, i32 noundef %6) #26
  tail call void @_raw_spin_lock(ptr noundef %16) #26
  %30 = load volatile ptr, ptr %17, align 4
  %31 = icmp eq ptr %30, %17
  br i1 %31, label %32, label %20

32:                                               ; preds = %20, %11
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !28
  %33 = load i16, ptr %16, align 4
  %34 = add i16 %33, 1
  store i16 %34, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !31
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ext4_count_free_clusters(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__percpu_counter_init(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_count_free_inodes(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_count_dirs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__percpu_init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_fill_flex_info(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 60
  %7 = load i8, ptr %6, align 4
  %8 = zext i8 %7 to i32
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 110
  store i32 %8, ptr %9, align 4
  %10 = add i8 %7, -32
  %11 = icmp ult i8 %10, -31
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  store i32 0, ptr %9, align 4
  br label %82

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 8
  %15 = load i32, ptr %14, align 32
  %16 = tail call i32 @ext4_alloc_flex_bg_array(ptr noundef %0, i32 noundef %15)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %82

18:                                               ; preds = %13
  %19 = load i32, ptr %14, align 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %82, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 111
  br label %23

23:                                               ; preds = %73, %21
  %24 = phi i32 [ 0, %21 ], [ %79, %73 ]
  %25 = tail call ptr @ext4_get_group_desc(ptr noundef %0, i32 noundef %24, ptr noundef null) #26
  %26 = load i32, ptr %9, align 4
  %27 = lshr i32 %24, %26
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %28 = load volatile ptr, ptr %22, align 8
  %29 = getelementptr ptr, ptr %28, i32 %27
  %30 = load ptr, ptr %29, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  %31 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 4
  %32 = load i16, ptr %31, align 2
  %33 = load ptr, ptr %2, align 4
  %34 = load i32, ptr %33, align 64
  %35 = icmp ugt i32 %34, 63
  br i1 %35, label %36, label %41

36:                                               ; preds = %23
  %37 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 16
  %38 = load i16, ptr %37, align 2
  %39 = zext i16 %38 to i32
  %40 = shl nuw i32 %39, 16
  br label %41

41:                                               ; preds = %36, %23
  %42 = phi i32 [ %40, %36 ], [ 0, %23 ]
  %43 = zext i16 %32 to i32
  %44 = or i32 %42, %43
  %45 = getelementptr inbounds %struct.flex_groups, ptr %30, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %45) #26, !srcloc !16
  %46 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %45, ptr %45, i32 %44, ptr elementtype(i32) %45) #26, !srcloc !17
  %47 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 3
  %48 = load i16, ptr %47, align 4
  %49 = load ptr, ptr %2, align 4
  %50 = load i32, ptr %49, align 64
  %51 = icmp ugt i32 %50, 63
  br i1 %51, label %52, label %57

52:                                               ; preds = %41
  %53 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 15
  %54 = load i16, ptr %53, align 4
  %55 = zext i16 %54 to i32
  %56 = shl nuw i32 %55, 16
  br label %57

57:                                               ; preds = %52, %41
  %58 = phi i32 [ %56, %52 ], [ 0, %41 ]
  %59 = zext i16 %48 to i32
  %60 = or i32 %58, %59
  %61 = zext i32 %60 to i64
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %30) #26, !srcloc !16
  %62 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %30, ptr %30, i64 %61, ptr elementtype(i64) %30) #26, !srcloc !50
  %63 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 5
  %64 = load i16, ptr %63, align 4
  %65 = load ptr, ptr %2, align 4
  %66 = load i32, ptr %65, align 64
  %67 = icmp ugt i32 %66, 63
  br i1 %67, label %68, label %73

68:                                               ; preds = %57
  %69 = getelementptr inbounds %struct.ext4_group_desc, ptr %25, i32 0, i32 17
  %70 = load i16, ptr %69, align 4
  %71 = zext i16 %70 to i32
  %72 = shl nuw i32 %71, 16
  br label %73

73:                                               ; preds = %68, %57
  %74 = phi i32 [ %72, %68 ], [ 0, %57 ]
  %75 = zext i16 %64 to i32
  %76 = or i32 %74, %75
  %77 = getelementptr inbounds %struct.flex_groups, ptr %30, i32 0, i32 2
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %77) #26, !srcloc !16
  %78 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %77, ptr %77, i32 %76, ptr elementtype(i32) %77) #26, !srcloc !17
  %79 = add nuw i32 %24, 1
  %80 = load i32, ptr %14, align 32
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %23, label %82

82:                                               ; preds = %73, %18, %13, %12
  %83 = phi i32 [ 1, %12 ], [ 0, %13 ], [ 1, %18 ], [ 1, %73 ]
  ret i32 %83
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_register_sysfs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_init_orphan_info(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_check_and_advance(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_orphan_cleanup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_mark_recovery_complete(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 47
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 28
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = icmp eq ptr %5, null
  br i1 %13, label %56, label %14

14:                                               ; preds = %12
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %0, ptr noundef nonnull @__func__.ext4_mark_recovery_complete, i32 noundef 6004, i1 noundef zeroext false, i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.641)
  br label %56

15:                                               ; preds = %1
  tail call void @jbd2_journal_lock_updates(ptr noundef %5) #26
  %16 = tail call i32 @jbd2_journal_flush(ptr noundef %5, i32 noundef 0) #26
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %20 = load i32, ptr %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %54, label %23

23:                                               ; preds = %18
  %24 = load ptr, ptr %2, align 4
  %25 = getelementptr inbounds %struct.ext4_sb_info, ptr %24, i32 0, i32 15
  %26 = load ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.ext4_super_block, ptr %26, i32 0, i32 29
  %28 = load i32, ptr %27, align 8
  %29 = and i32 %28, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %23
  %32 = getelementptr inbounds %struct.ext4_super_block, ptr %26, i32 0, i32 30
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 65536
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %31, %23
  %37 = tail call i32 @ext4_orphan_file_empty(ptr noundef %0) #26
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %0, ptr noundef nonnull @__func__.ext4_mark_recovery_complete, i32 noundef 6017, i1 noundef zeroext false, i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.650)
  br label %54

40:                                               ; preds = %36
  %41 = load ptr, ptr %2, align 4
  %42 = getelementptr inbounds %struct.ext4_sb_info, ptr %41, i32 0, i32 15
  %43 = load ptr, ptr %42, align 4
  %44 = getelementptr inbounds %struct.ext4_super_block, ptr %43, i32 0, i32 29
  %45 = load i32, ptr %44, align 8
  %46 = and i32 %45, -5
  store i32 %46, ptr %44, align 8
  %47 = load ptr, ptr %2, align 4
  %48 = getelementptr inbounds %struct.ext4_sb_info, ptr %47, i32 0, i32 15
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr inbounds %struct.ext4_super_block, ptr %49, i32 0, i32 30
  %51 = load i32, ptr %50, align 4
  %52 = and i32 %51, -65537
  store i32 %52, ptr %50, align 4
  %53 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %54

54:                                               ; preds = %40, %39, %31, %18, %15
  %55 = phi i32 [ %16, %15 ], [ %16, %40 ], [ -117, %39 ], [ %16, %31 ], [ %16, %18 ]
  tail call void @jbd2_journal_unlock_updates(ptr noundef %5) #26
  br label %56

56:                                               ; preds = %54, %14, %12
  %57 = phi i32 [ %55, %54 ], [ -117, %14 ], [ 0, %12 ]
  ret i32 %57
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_release_orphan_info(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_unregister_sysfs(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ext4_unregister_li_request(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  tail call void @mutex_lock(ptr noundef nonnull @ext4_li_mtx) #26
  %2 = load ptr, ptr @ext4_li_info, align 4
  %3 = icmp eq ptr %2, null
  br i1 %3, label %24, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ext4_lazy_init, ptr %2, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %5) #26
  %6 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %7, i32 0, i32 115
  %9 = load ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.ext4_li_request, ptr %9, i32 0, i32 4
  %13 = getelementptr inbounds %struct.ext4_li_request, ptr %9, i32 0, i32 4, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %12, align 4
  %16 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  store ptr %14, ptr %16, align 4
  store volatile ptr %15, ptr %14, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %12, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %13, align 4
  %17 = load ptr, ptr %9, align 4
  %18 = getelementptr inbounds %struct.super_block, ptr %17, i32 0, i32 27
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.ext4_sb_info, ptr %19, i32 0, i32 115
  store ptr null, ptr %20, align 8
  tail call void @kfree(ptr noundef nonnull %9) #26
  br label %21

21:                                               ; preds = %11, %4
  %22 = load ptr, ptr @ext4_li_info, align 4
  %23 = getelementptr inbounds %struct.ext4_lazy_init, ptr %22, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %23) #26
  br label %24

24:                                               ; preds = %21, %1
  tail call void @mutex_unlock(ptr noundef nonnull @ext4_li_mtx) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_mb_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_free_rwsem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_ext_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_release_system_zone(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_xattr_destroy_cache(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_es_unregister_shrinker(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_stop_mmpd(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrndup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #23

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #23

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup_nul(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #20

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #24

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_bg_has_super(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_bg_num_gdb(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @jbd2_journal_start(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_get_write_access(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_dirty_metadata(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_notify_error_sysfs(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @ext4_alloc_inode(ptr nocapture noundef readnone %0) #0 {
  %2 = load ptr, ptr @ext4_inode_cachep, align 4
  %3 = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %2, i32 noundef 3136) #26
  %4 = icmp eq ptr %3, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 17
  %7 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 17, i32 33
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #26, !srcloc !16
  %8 = tail call i64 asm sideeffect "@ atomic64_set\0A1:\09ldrexd\09$0, ${0:H}, [$2]\0A\09strexd\09$0, $3, ${3:H}, [$2]\0A\09teq\09$0, #0\0A\09bne\091b", "=&r,=*Qo,r,r,~{cc}"(ptr elementtype(i64) %7, ptr %7, i64 2) #26, !srcloc !48
  %9 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 19
  store i32 0, ptr %9, align 4
  %10 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 22
  store volatile ptr %10, ptr %10, align 4
  %11 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 22, i32 1
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 21
  store volatile i32 0, ptr %12, align 8
  %13 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 23
  store i32 0, ptr %13, align 4
  %14 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 24
  tail call void @ext4_es_init_tree(ptr noundef %14) #26
  %15 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 25
  store i32 0, ptr %15, align 8
  %16 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 26
  store volatile ptr %16, ptr %16, align 4
  %17 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 26, i32 1
  store ptr %16, ptr %17, align 8
  %18 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 27
  store i32 0, ptr %18, align 4
  %19 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 28
  store i32 0, ptr %19, align 8
  %20 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 29
  store i32 0, ptr %20, align 4
  %21 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 31
  store i32 0, ptr %21, align 4
  %22 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 40
  store i32 0, ptr %22, align 4
  %23 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 32
  tail call void @ext4_init_pending_tree(ptr noundef %23) #26
  %24 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 18
  store ptr null, ptr %24, align 8
  %25 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 37
  store volatile ptr %25, ptr %25, align 8
  %26 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 37, i32 1
  store ptr %25, ptr %26, align 4
  %27 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 36
  store i32 0, ptr %27, align 4
  %28 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 41
  store i32 0, ptr %28, align 8
  %29 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 42
  store i32 0, ptr %29, align 4
  %30 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 39
  store volatile i32 0, ptr %30, align 8
  %31 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 38
  store i32 -32, ptr %31, align 8
  %32 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 38, i32 1
  store volatile ptr %32, ptr %32, align 4
  %33 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 38, i32 1, i32 1
  store ptr %32, ptr %33, align 8
  %34 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 38, i32 2
  store ptr @ext4_end_io_rsv_work, ptr %34, align 4
  tail call void @ext4_fc_init_inode(ptr noundef %6) #26
  %35 = getelementptr inbounds %struct.ext4_inode_info, ptr %3, i32 0, i32 14
  tail call void @__mutex_init(ptr noundef %35, ptr noundef nonnull @.str.613, ptr noundef nonnull @ext4_alloc_inode.__key) #26
  br label %36

36:                                               ; preds = %5, %1
  %37 = phi ptr [ %6, %5 ], [ null, %1 ]
  ret ptr %37
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @ext4_destroy_inode(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -208
  %3 = getelementptr i8, ptr %0, i32 -96
  %4 = load volatile ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %10 = load i32, ptr %9, align 4
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %8, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.614, i32 noundef %10, ptr noundef %2)
  tail call void @print_hex_dump(ptr noundef nonnull @.str.43, ptr noundef nonnull @.str.106, i32 noundef 1, i32 noundef 16, i32 noundef 4, ptr noundef %2, i32 noundef 744, i1 noundef zeroext true) #26
  tail call void @dump_stack() #28
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr i8, ptr %0, i32 468
  %13 = load i32, ptr %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 8
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %17, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.615, i32 noundef %19, ptr noundef %2, i32 noundef %13)
  br label %20

20:                                               ; preds = %15, %11
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @ext4_free_in_core_inode(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -88
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, %2
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 10
  %7 = load i32, ptr %6, align 4
  %8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.616, ptr noundef nonnull @__func__.ext4_free_in_core_inode, i32 noundef %7) #28
  br label %9

9:                                                ; preds = %5, %1
  %10 = getelementptr i8, ptr %0, i32 -208
  %11 = load ptr, ptr @ext4_inode_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %11, ptr noundef %10) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_dirty_inode(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_write_inode(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_drop_inode(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 11
  %3 = load i32, ptr %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.inode, ptr %0, i32 0, i32 27, i32 1
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ 1, %1 ], [ %9, %5 ]
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_drop_inode, i32 0, i32 1), align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %10
  %15 = tail call ptr @llvm.thread.pointer() #26
  %16 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %17 = load i32, ptr %16, align 8
  %18 = lshr i32 %17, 5
  %19 = getelementptr i32, ptr @__cpu_online_mask, i32 %18
  %20 = load volatile i32, ptr %19, align 4
  %21 = and i32 %17, 31
  %22 = shl nuw i32 1, %21
  %23 = and i32 %22, %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %14
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !51
  %26 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_drop_inode, i32 0, i32 7), align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %28, %25
  %29 = phi ptr [ %33, %28 ], [ %26, %25 ]
  %30 = load volatile ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.tracepoint_func, ptr %29, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  tail call void %30(ptr noundef %32, ptr noundef %0, i32 noundef %11) #26
  %33 = getelementptr %struct.tracepoint_func, ptr %29, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %28

36:                                               ; preds = %28, %25
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !52
  br label %37

37:                                               ; preds = %36, %14, %10
  ret i32 %11
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_evict_inode(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @ext4_put_super(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %3 = load ptr, ptr %2, align 4
  %4 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 15
  %5 = load ptr, ptr %4, align 4
  tail call fastcc void @ext4_unregister_li_request(ptr noundef %0)
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 155
  %7 = tail call zeroext i1 @flush_work(ptr noundef %6) #26
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 113
  %9 = load ptr, ptr %8, align 16
  tail call void @destroy_workqueue(ptr noundef %9) #26
  tail call void @ext4_release_orphan_info(ptr noundef %0) #26
  tail call void @ext4_unregister_sysfs(ptr noundef %0) #26
  %10 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 47
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %1
  %14 = load i32, ptr %11, align 8
  %15 = and i32 %14, 2
  %16 = tail call i32 @jbd2_journal_destroy(ptr noundef nonnull %11) #26
  store ptr null, ptr %10, align 4
  %17 = icmp sgt i32 %16, -1
  %18 = icmp ne i32 %15, 0
  %19 = select i1 %17, i1 true, i1 %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = sub i32 0, %16
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %0, ptr noundef nonnull @__func__.ext4_put_super, i32 noundef 1221, i1 noundef zeroext true, i32 noundef %21, i64 noundef 0, ptr noundef nonnull @.str.617)
  br label %22

22:                                               ; preds = %20, %13, %1
  %23 = phi i32 [ %15, %13 ], [ 0, %20 ], [ 0, %1 ]
  tail call void @ext4_es_unregister_shrinker(ptr noundef %3) #26
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 114
  %25 = tail call i32 @del_timer_sync(ptr noundef %24) #26
  tail call void @ext4_release_system_zone(ptr noundef %0) #26
  %26 = tail call i32 @ext4_mb_release(ptr noundef %0) #26
  tail call void @ext4_ext_release(ptr noundef %0) #26
  %27 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 1
  %30 = icmp ne i32 %29, 0
  %31 = icmp ne i32 %23, 0
  %32 = select i1 %30, i1 true, i1 %31
  br i1 %32, label %50, label %33

33:                                               ; preds = %22
  %34 = load ptr, ptr %2, align 4
  %35 = getelementptr inbounds %struct.ext4_sb_info, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.ext4_super_block, ptr %36, i32 0, i32 29
  %38 = load i32, ptr %37, align 8
  %39 = and i32 %38, -5
  store i32 %39, ptr %37, align 8
  %40 = load ptr, ptr %2, align 4
  %41 = getelementptr inbounds %struct.ext4_sb_info, ptr %40, i32 0, i32 15
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.ext4_super_block, ptr %42, i32 0, i32 30
  %44 = load i32, ptr %43, align 4
  %45 = and i32 %44, -65537
  store i32 %45, ptr %43, align 4
  %46 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 25
  %47 = load i16, ptr %46, align 8
  %48 = getelementptr inbounds %struct.ext4_super_block, ptr %5, i32 0, i32 16
  store i16 %47, ptr %48, align 2
  %49 = load i32, ptr %27, align 4
  br label %50

50:                                               ; preds = %33, %22
  %51 = phi i32 [ %49, %33 ], [ %28, %22 ]
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %56

56:                                               ; preds = %54, %50
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !36
  %57 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 16
  %58 = load volatile ptr, ptr %57, align 8
  %59 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 6
  %60 = load i32, ptr %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %74, label %62

62:                                               ; preds = %70, %56
  %63 = phi i32 [ %71, %70 ], [ %60, %56 ]
  %64 = phi i32 [ %72, %70 ], [ 0, %56 ]
  %65 = getelementptr ptr, ptr %58, i32 %64
  %66 = load ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  tail call void @__brelse(ptr noundef nonnull %66) #26
  %69 = load i32, ptr %59, align 8
  br label %70

70:                                               ; preds = %68, %62
  %71 = phi i32 [ %63, %62 ], [ %69, %68 ]
  %72 = add nuw i32 %64, 1
  %73 = icmp ult i32 %72, %71
  br i1 %73, label %62, label %74

74:                                               ; preds = %70, %56
  tail call void @kvfree(ptr noundef %58) #26
  %75 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 111
  %76 = load volatile ptr, ptr %75, align 8
  %77 = icmp eq ptr %76, null
  br i1 %77, label %90, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 112
  %80 = load i32, ptr %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %82, %78
  %83 = phi i32 [ %86, %82 ], [ 0, %78 ]
  %84 = getelementptr ptr, ptr %76, i32 %83
  %85 = load ptr, ptr %84, align 4
  tail call void @kvfree(ptr noundef %85) #26
  %86 = add nuw i32 %83, 1
  %87 = load i32, ptr %79, align 4
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %82, label %89

89:                                               ; preds = %82, %78
  tail call void @kvfree(ptr noundef nonnull %76) #26
  br label %90

90:                                               ; preds = %89, %74
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !37
  %91 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 36
  tail call void @percpu_counter_destroy(ptr noundef %91) #26
  %92 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 37
  tail call void @percpu_counter_destroy(ptr noundef %92) #26
  %93 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 38
  tail call void @percpu_counter_destroy(ptr noundef %93) #26
  %94 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 39
  tail call void @percpu_counter_destroy(ptr noundef %94) #26
  %95 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 40
  tail call void @percpu_counter_destroy(ptr noundef %95) #26
  %96 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 136
  tail call void @percpu_free_rwsem(ptr noundef %96) #26
  %97 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 50
  %98 = load volatile ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, %97
  br i1 %99, label %124, label %100

100:                                              ; preds = %90
  %101 = load ptr, ptr %4, align 4
  %102 = getelementptr inbounds %struct.ext4_super_block, ptr %101, i32 0, i32 41
  %103 = load i32, ptr %102, align 8
  tail call void (ptr, ptr, ptr, ...) @__ext4_msg(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef nonnull @.str.620, i32 noundef %103) #26
  %104 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.621) #28
  %105 = load ptr, ptr %97, align 4
  %106 = icmp eq ptr %105, %97
  br i1 %106, label %124, label %107

107:                                              ; preds = %107, %100
  %108 = phi ptr [ %122, %107 ], [ %105, %100 ]
  %109 = getelementptr i8, ptr %108, i32 96
  %110 = getelementptr i8, ptr %108, i32 124
  %111 = load ptr, ptr %110, align 4
  %112 = getelementptr inbounds %struct.super_block, ptr %111, i32 0, i32 33
  %113 = getelementptr i8, ptr %108, i32 132
  %114 = load i32, ptr %113, align 4
  %115 = load i16, ptr %109, align 8
  %116 = zext i16 %115 to i32
  %117 = getelementptr i8, ptr %108, i32 136
  %118 = load i32, ptr %117, align 8
  %119 = getelementptr i8, ptr %108, i32 -52
  %120 = load i32, ptr %119, align 4
  %121 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.622, ptr noundef %112, i32 noundef %114, ptr noundef %109, i32 noundef %116, i32 noundef %118, i32 noundef %120) #28
  %122 = load ptr, ptr %108, align 4
  %123 = icmp eq ptr %122, %97
  br i1 %123, label %124, label %107

124:                                              ; preds = %107, %100, %90
  %125 = load volatile ptr, ptr %97, align 4
  %126 = icmp eq ptr %125, %97
  br i1 %126, label %129, label %127, !prof !10

127:                                              ; preds = %124
  %128 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.618, ptr noundef nonnull @__func__.ext4_put_super, ptr noundef nonnull @.str.33, i32 noundef 1268, ptr noundef nonnull @.str.619) #28
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1268, 0\0A.popsection", ""() #26, !srcloc !53
  unreachable

129:                                              ; preds = %124
  %130 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %131 = load ptr, ptr %130, align 4
  %132 = tail call i32 @sync_blockdev(ptr noundef %131) #26
  %133 = load ptr, ptr %130, align 4
  tail call void @invalidate_bdev(ptr noundef %133) #26
  %134 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 55
  %135 = load ptr, ptr %134, align 16
  %136 = icmp eq ptr %135, null
  br i1 %136, label %146, label %137

137:                                              ; preds = %129
  %138 = load ptr, ptr %130, align 4
  %139 = icmp eq ptr %135, %138
  br i1 %139, label %146, label %140

140:                                              ; preds = %137
  %141 = tail call i32 @sync_blockdev(ptr noundef nonnull %135) #26
  %142 = load ptr, ptr %134, align 16
  tail call void @invalidate_bdev(ptr noundef %142) #26
  %143 = load ptr, ptr %134, align 16
  %144 = icmp eq ptr %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %140
  tail call void @blkdev_put(ptr noundef nonnull %143, i32 noundef 131) #26
  store ptr null, ptr %134, align 16
  br label %146

146:                                              ; preds = %145, %140, %137, %129
  %147 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 126
  %148 = load ptr, ptr %147, align 4
  tail call void @ext4_xattr_destroy_cache(ptr noundef %148) #26
  store ptr null, ptr %147, align 4
  %149 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 125
  %150 = load ptr, ptr %149, align 8
  tail call void @ext4_xattr_destroy_cache(ptr noundef %150) #26
  store ptr null, ptr %149, align 8
  tail call void @ext4_stop_mmpd(ptr noundef %3) #26
  %151 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 14
  %152 = load ptr, ptr %151, align 64
  %153 = icmp eq ptr %152, null
  br i1 %153, label %155, label %154

154:                                              ; preds = %146
  tail call void @__brelse(ptr noundef nonnull %152) #26
  br label %155

155:                                              ; preds = %154, %146
  store ptr null, ptr %2, align 4
  %156 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 43
  tail call void @kobject_put(ptr noundef %156) #26
  %157 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 44
  tail call void @wait_for_completion(ptr noundef %157) #26
  %158 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 119
  %159 = load ptr, ptr %158, align 8
  %160 = icmp eq ptr %159, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct.crypto_shash, ptr %159, i32 0, i32 2
  tail call void @crypto_destroy_tfm(ptr noundef nonnull %159, ptr noundef %162) #26
  br label %163

163:                                              ; preds = %161, %155
  %164 = getelementptr inbounds %struct.ext4_sb_info, ptr %3, i32 0, i32 41
  %165 = load ptr, ptr %164, align 16
  tail call void @kfree(ptr noundef %165) #26
  tail call void @kfree(ptr noundef %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_sync_fs(ptr noundef %0, i32 noundef %1) #0 {
  %3 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #26
  store i32 0, ptr %3, align 4, !annotation !9
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 48
  %7 = load volatile i32, ptr %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %95, !prof !10

10:                                               ; preds = %2
  %11 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_sync_fs, i32 0, i32 1), align 4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %36

13:                                               ; preds = %10
  %14 = tail call ptr @llvm.thread.pointer() #26
  %15 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %16 = load i32, ptr %15, align 8
  %17 = lshr i32 %16, 5
  %18 = getelementptr i32, ptr @__cpu_online_mask, i32 %17
  %19 = load volatile i32, ptr %18, align 4
  %20 = and i32 %16, 31
  %21 = shl nuw i32 1, %20
  %22 = and i32 %21, %19
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %13
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !54
  %25 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_sync_fs, i32 0, i32 7), align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %27, %24
  %28 = phi ptr [ %32, %27 ], [ %25, %24 ]
  %29 = load volatile ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.tracepoint_func, ptr %28, i32 0, i32 1
  %31 = load ptr, ptr %30, align 4
  tail call void %29(ptr noundef %31, ptr noundef %0, i32 noundef %1) #26
  %32 = getelementptr %struct.tracepoint_func, ptr %28, i32 1
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %27

35:                                               ; preds = %27, %24
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !55
  br label %36

36:                                               ; preds = %35, %13, %10
  %37 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 113
  %38 = load ptr, ptr %37, align 16
  tail call void @flush_workqueue(ptr noundef %38) #26
  %39 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 47
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %75, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.journal_s, ptr %40, i32 0, i32 7
  tail call void @_raw_read_lock(ptr noundef %43) #26
  %44 = getelementptr inbounds %struct.journal_s, ptr %40, i32 0, i32 44
  %45 = getelementptr inbounds %struct.journal_s, ptr %40, i32 0, i32 10
  %46 = load ptr, ptr %45, align 8
  %47 = icmp eq ptr %46, null
  %48 = getelementptr inbounds %struct.transaction_s, ptr %46, i32 0, i32 1
  %49 = select i1 %47, ptr %44, ptr %48
  %50 = load i32, ptr %49, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !56
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %43) #26, !srcloc !16
  %51 = tail call { i32, i32 } asm sideeffect "1:\09ldrex\09$0, [$2]\0A\09sub\09$0, $0, #1\0A\09strex\09$1, $0, [$2]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,~{cc}"(ptr %43) #26, !srcloc !57
  %52 = extractvalue { i32, i32 } %51, 0
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %42
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  br label %55

55:                                               ; preds = %54, %42
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !58
  store i32 %50, ptr %3, align 4
  %56 = icmp ne i32 %1, 0
  br i1 %56, label %57, label %65

57:                                               ; preds = %55
  %58 = load ptr, ptr %39, align 4
  %59 = load i32, ptr %58, align 8
  %60 = and i32 %59, 32
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = tail call i32 @jbd2_trans_will_send_data_barrier(ptr noundef %58, i32 noundef %50) #26
  %64 = icmp eq i32 %63, 0
  br label %65

65:                                               ; preds = %62, %57, %55
  %66 = phi i1 [ false, %57 ], [ false, %55 ], [ %64, %62 ]
  %67 = load ptr, ptr %39, align 4
  %68 = call i32 @jbd2_journal_start_commit(ptr noundef %67, ptr noundef nonnull %3) #26
  %69 = icmp ne i32 %68, 0
  %70 = and i1 %56, %69
  br i1 %70, label %71, label %83

71:                                               ; preds = %65
  %72 = load ptr, ptr %39, align 4
  %73 = load i32, ptr %3, align 4
  %74 = call i32 @jbd2_log_wait_commit(ptr noundef %72, i32 noundef %73) #26
  br i1 %66, label %88, label %95

75:                                               ; preds = %36
  %76 = icmp eq i32 %1, 0
  br i1 %76, label %95, label %77

77:                                               ; preds = %75
  %78 = load ptr, ptr %4, align 4
  %79 = getelementptr inbounds %struct.ext4_sb_info, ptr %78, i32 0, i32 17
  %80 = load i32, ptr %79, align 4
  %81 = and i32 %80, 131072
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %95, label %84

83:                                               ; preds = %65
  br i1 %66, label %84, label %95

84:                                               ; preds = %83, %77
  %85 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %86 = load ptr, ptr %85, align 4
  %87 = call i32 @blkdev_issue_flush(ptr noundef %86) #26
  br label %93

88:                                               ; preds = %71
  %89 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 20
  %90 = load ptr, ptr %89, align 4
  %91 = call i32 @blkdev_issue_flush(ptr noundef %90) #26
  %92 = icmp eq i32 %74, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88, %84
  %94 = phi i32 [ %87, %84 ], [ %91, %88 ]
  br label %95

95:                                               ; preds = %93, %88, %83, %77, %75, %71, %2
  %96 = phi i32 [ 0, %2 ], [ 0, %83 ], [ %74, %71 ], [ 0, %77 ], [ %94, %93 ], [ %74, %88 ], [ 0, %75 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #26
  ret i32 %96
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_freeze(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %37

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 47
  %10 = load ptr, ptr %9, align 4
  %11 = icmp eq ptr %10, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %6
  tail call void @jbd2_journal_lock_updates(ptr noundef nonnull %10) #26
  %13 = tail call i32 @jbd2_journal_flush(ptr noundef nonnull %10, i32 noundef 0) #26
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %12
  %16 = load ptr, ptr %7, align 4
  %17 = getelementptr inbounds %struct.ext4_sb_info, ptr %16, i32 0, i32 15
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ext4_super_block, ptr %18, i32 0, i32 29
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, -5
  store i32 %21, ptr %19, align 8
  %22 = tail call i32 @ext4_orphan_file_empty(ptr noundef %0) #26
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %15
  %25 = load ptr, ptr %7, align 4
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 15
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.ext4_super_block, ptr %27, i32 0, i32 30
  %29 = load i32, ptr %28, align 4
  %30 = and i32 %29, -65537
  store i32 %30, ptr %28, align 4
  br label %31

31:                                               ; preds = %24, %15
  %32 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %35

33:                                               ; preds = %6
  %34 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %37

35:                                               ; preds = %31, %12
  %36 = phi i32 [ %32, %31 ], [ %13, %12 ]
  tail call void @jbd2_journal_unlock_updates(ptr noundef nonnull %10) #26
  br label %37

37:                                               ; preds = %35, %33, %1
  %38 = phi i32 [ 0, %1 ], [ %36, %35 ], [ %34, %33 ]
  ret i32 %38
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_unfreeze(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 10
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %58

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 48
  %10 = load volatile i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %58

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 47
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.ext4_sb_info, ptr %8, i32 0, i32 15
  %19 = load ptr, ptr %18, align 4
  %20 = getelementptr inbounds %struct.ext4_super_block, ptr %19, i32 0, i32 22
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %17
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_update_dynamic_rev, i32 noundef 1089, ptr noundef nonnull @.str.34, i32 noundef 1) #26
  %24 = getelementptr inbounds %struct.ext4_super_block, ptr %19, i32 0, i32 25
  store i32 11, ptr %24, align 4
  %25 = getelementptr inbounds %struct.ext4_super_block, ptr %19, i32 0, i32 26
  store i16 128, ptr %25, align 8
  store i32 1, ptr %20, align 4
  %26 = load ptr, ptr %7, align 4
  %27 = getelementptr inbounds %struct.ext4_sb_info, ptr %26, i32 0, i32 15
  %28 = load ptr, ptr %27, align 4
  br label %29

29:                                               ; preds = %23, %17
  %30 = phi ptr [ %19, %17 ], [ %28, %23 ]
  %31 = getelementptr inbounds %struct.ext4_super_block, ptr %30, i32 0, i32 29
  %32 = load i32, ptr %31, align 8
  %33 = or i32 %32, 4
  store i32 %33, ptr %31, align 8
  %34 = load ptr, ptr %7, align 4
  %35 = getelementptr inbounds %struct.ext4_sb_info, ptr %34, i32 0, i32 15
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.ext4_super_block, ptr %36, i32 0, i32 28
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, 4096
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %56, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.ext4_super_block, ptr %36, i32 0, i32 22
  %43 = load i32, ptr %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  tail call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_update_dynamic_rev, i32 noundef 1089, ptr noundef nonnull @.str.34, i32 noundef 1) #26
  %46 = getelementptr inbounds %struct.ext4_super_block, ptr %36, i32 0, i32 25
  store i32 11, ptr %46, align 4
  %47 = getelementptr inbounds %struct.ext4_super_block, ptr %36, i32 0, i32 26
  store i16 128, ptr %47, align 8
  store i32 1, ptr %42, align 4
  %48 = load ptr, ptr %7, align 4
  %49 = getelementptr inbounds %struct.ext4_sb_info, ptr %48, i32 0, i32 15
  %50 = load ptr, ptr %49, align 4
  br label %51

51:                                               ; preds = %45, %41
  %52 = phi ptr [ %36, %41 ], [ %50, %45 ]
  %53 = getelementptr inbounds %struct.ext4_super_block, ptr %52, i32 0, i32 30
  %54 = load i32, ptr %53, align 4
  %55 = or i32 %54, 65536
  store i32 %55, ptr %53, align 4
  br label %56

56:                                               ; preds = %51, %29, %13
  %57 = tail call fastcc i32 @ext4_commit_super(ptr noundef %0)
  br label %58

58:                                               ; preds = %56, %6, %1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_statfs(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.dentry, ptr %0, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 27
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 15
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 22
  %10 = tail call i64 asm sideeffect "@ atomic64_read\0A\09ldrexd\09$0, ${0:H}, [$1]", "=&r,r,*Qo"(ptr %9, ptr elementtype(i64) %9) #26, !srcloc !59
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 12
  %12 = load i32, ptr %11, align 16
  %13 = zext i32 %12 to i64
  %14 = shl i64 %10, %13
  %15 = load ptr, ptr %5, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 17
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 128
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 10
  %22 = load i32, ptr %21, align 8
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %20, %2
  %25 = phi i64 [ 0, %2 ], [ %23, %20 ]
  store i32 61267, ptr %1, align 8
  %26 = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 3
  %27 = load i32, ptr %26, align 16
  %28 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 1
  store i32 %27, ptr %28, align 4
  %29 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 29
  %30 = load i32, ptr %29, align 8
  %31 = and i32 %30, 128
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 50
  %35 = load i32, ptr %34, align 8
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  br label %38

38:                                               ; preds = %33, %24
  %39 = phi i64 [ %37, %33 ], [ 0, %24 ]
  %40 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %39, %42
  %44 = load i32, ptr %11, align 16
  %45 = zext i32 %44 to i64
  %46 = shl i64 %25, %45
  %47 = sub i64 %43, %46
  %48 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 2
  store i64 %47, ptr %48, align 8
  %49 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 36
  %50 = tail call i64 @__percpu_counter_sum(ptr noundef %49) #26
  %51 = tail call i64 @llvm.smax.i64(i64 %50, i64 0) #26
  %52 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 39
  %53 = tail call i64 @__percpu_counter_sum(ptr noundef %52) #26
  %54 = tail call i64 @llvm.smax.i64(i64 %53, i64 0) #26
  %55 = sub nsw i64 %51, %54
  %56 = tail call i64 @llvm.smax.i64(i64 %55, i64 0)
  %57 = load i32, ptr %11, align 16
  %58 = zext i32 %57 to i64
  %59 = shl i64 %56, %58
  %60 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 3
  store i64 %59, ptr %60, align 8
  %61 = load i32, ptr %29, align 8
  %62 = and i32 %61, 128
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %38
  %65 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 51
  %66 = load i32, ptr %65, align 4
  %67 = zext i32 %66 to i64
  %68 = mul i64 %67, -4294967296
  br label %69

69:                                               ; preds = %64, %38
  %70 = phi i64 [ %68, %64 ], [ 0, %38 ]
  %71 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 2
  %72 = load i32, ptr %71, align 8
  %73 = zext i32 %72 to i64
  %74 = add i64 %59, %70
  %75 = add i64 %14, %73
  %76 = sub i64 %74, %75
  %77 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 4
  store i64 %76, ptr %77, align 8
  %78 = load i32, ptr %29, align 8
  %79 = and i32 %78, 128
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 51
  %83 = load i32, ptr %82, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw i64 %84, 32
  br label %86

86:                                               ; preds = %81, %69
  %87 = phi i64 [ %85, %81 ], [ 0, %69 ]
  %88 = load i32, ptr %71, align 8
  %89 = zext i32 %88 to i64
  %90 = add i64 %87, %14
  %91 = add i64 %90, %89
  %92 = icmp ult i64 %59, %91
  br i1 %92, label %93, label %94

93:                                               ; preds = %86
  store i64 0, ptr %77, align 8
  br label %94

94:                                               ; preds = %93, %86
  %95 = load i32, ptr %8, align 8
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 5
  store i64 %96, ptr %97, align 8
  %98 = getelementptr inbounds %struct.ext4_sb_info, ptr %6, i32 0, i32 37
  %99 = tail call i64 @__percpu_counter_sum(ptr noundef %98) #26
  %100 = tail call i64 @llvm.smax.i64(i64 %99, i64 0) #26
  %101 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 6
  store i64 %100, ptr %101, align 8
  %102 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 8
  store i32 255, ptr %102, align 8
  %103 = getelementptr inbounds %struct.kstatfs, ptr %1, i32 0, i32 7
  %104 = getelementptr inbounds %struct.ext4_super_block, ptr %8, i32 0, i32 31
  %105 = load i64, ptr %104, align 8, !noalias !60
  %106 = getelementptr %struct.ext4_super_block, ptr %8, i32 0, i32 31, i32 8
  %107 = load i64, ptr %106, align 8, !noalias !60
  %108 = xor i64 %107, %105
  store i64 %108, ptr %103, align 8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_show_options(ptr noundef %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  tail call fastcc void @_ext4_show_options(ptr noundef %0, ptr noundef %4, i32 noundef 0)
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_es_init_tree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_init_pending_tree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_end_io_rsv_work(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_fc_init_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @print_hex_dump(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sync_blockdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @invalidate_bdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_trans_will_send_data_barrier(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_start_commit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_log_wait_commit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blkdev_issue_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_lock_updates(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_flush(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_orphan_file_empty(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_unlock_updates(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @ext4_fh_to_dentry(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = tail call ptr @generic_fh_to_dentry(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull @ext4_nfs_get_inode) #26
  ret ptr %5
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @ext4_fh_to_parent(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = tail call ptr @generic_fh_to_parent(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef nonnull @ext4_nfs_get_inode) #26
  ret ptr %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ext4_get_parent(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_nfs_commit_metadata(ptr noundef %0) #0 {
  %2 = alloca %struct.writeback_control, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #26
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %2, ptr noundef nonnull align 8 dereferenceable(32) @__const.ext4_nfs_commit_metadata.wbc, i32 32, i1 false)
  %3 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_nfs_commit_metadata, i32 0, i32 1), align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = tail call ptr @llvm.thread.pointer() #26
  %7 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %8 = load i32, ptr %7, align 8
  %9 = lshr i32 %8, 5
  %10 = getelementptr i32, ptr @__cpu_online_mask, i32 %9
  %11 = load volatile i32, ptr %10, align 4
  %12 = and i32 %8, 31
  %13 = shl nuw i32 1, %12
  %14 = and i32 %13, %11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %5
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !63
  %17 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_nfs_commit_metadata, i32 0, i32 7), align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %19, %16
  %20 = phi ptr [ %24, %19 ], [ %17, %16 ]
  %21 = load volatile ptr, ptr %20, align 4
  %22 = getelementptr inbounds %struct.tracepoint_func, ptr %20, i32 0, i32 1
  %23 = load ptr, ptr %22, align 4
  tail call void %21(ptr noundef %23, ptr noundef %0) #26
  %24 = getelementptr %struct.tracepoint_func, ptr %20, i32 1
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %19

27:                                               ; preds = %19, %16
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !64
  br label %28

28:                                               ; preds = %27, %5, %1
  %29 = call i32 @ext4_write_inode(ptr noundef %0, ptr noundef nonnull %2) #26
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #26
  ret i32 %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @generic_fh_to_dentry(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @ext4_nfs_get_inode(ptr noundef %0, i64 noundef %1, i32 noundef %2) #0 {
  %4 = trunc i64 %1 to i32
  %5 = tail call ptr @__ext4_iget(ptr noundef %0, i32 noundef %4, i32 noundef 2, ptr noundef nonnull @__func__.ext4_nfs_get_inode, i32 noundef 1455) #26
  %6 = icmp ugt ptr %5, inttoptr (i32 -4096 to ptr)
  %7 = icmp eq i32 %2, 0
  %8 = or i1 %7, %6
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 44
  %11 = load i32, ptr %10, align 8
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @iput(ptr noundef %5) #26
  br label %14

14:                                               ; preds = %13, %9, %3
  %15 = phi ptr [ inttoptr (i32 -116 to ptr), %13 ], [ %5, %9 ], [ %5, %3 ]
  ret ptr %15
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @generic_fh_to_parent(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_wipe(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_load(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ext4_clear_journal_err(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = alloca [16 x i8], align 1
  %4 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 15
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.ext4_super_block, ptr %7, i32 0, i32 28
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  tail call void (ptr, ptr, i32, i1, i32, i64, ptr, ...) @__ext4_error(ptr noundef %0, ptr noundef nonnull @__func__.ext4_clear_journal_err, i32 noundef 6043, i1 noundef zeroext false, i32 noundef 0, i64 noundef 0, ptr noundef nonnull @.str.641)
  br label %50

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.ext4_sb_info, ptr %5, i32 0, i32 47
  %15 = load ptr, ptr %14, align 4
  %16 = tail call i32 @jbd2_journal_errno(ptr noundef %15) #26
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %50, label %18

18:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #26
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %3, i8 0, i32 16, i1 false), !annotation !9
  switch i32 %16, label %34 [
    i32 -117, label %39
    i32 -74, label %19
    i32 -5, label %20
    i32 -12, label %21
    i32 -30, label %22
  ]

19:                                               ; preds = %18
  br label %39

20:                                               ; preds = %18
  br label %39

21:                                               ; preds = %18
  br label %39

22:                                               ; preds = %18
  %23 = icmp eq ptr %0, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %22
  %25 = load ptr, ptr %4, align 4
  %26 = getelementptr inbounds %struct.ext4_sb_info, ptr %25, i32 0, i32 47
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = load i32, ptr %27, align 8
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %29, %24
  br label %39

34:                                               ; preds = %18
  %35 = sub i32 0, %16
  %36 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %3, i32 noundef 16, ptr noundef nonnull @.str.22, i32 noundef %35) #26
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, ptr %3, ptr null
  br label %39

39:                                               ; preds = %34, %33, %29, %22, %21, %20, %19, %18
  %40 = phi ptr [ @.str.21, %33 ], [ @.str.19, %21 ], [ @.str.18, %20 ], [ @.str.17, %19 ], [ @.str.16, %18 ], [ @.str.20, %29 ], [ @.str.20, %22 ], [ %38, %34 ]
  call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_clear_journal_err, i32 noundef 6060, ptr noundef nonnull @.str.642, ptr noundef %40)
  call void (ptr, ptr, i32, ptr, ...) @__ext4_warning(ptr noundef %0, ptr noundef nonnull @__func__.ext4_clear_journal_err, i32 noundef 6061, ptr noundef nonnull @.str.643)
  %41 = load ptr, ptr %4, align 4
  %42 = getelementptr inbounds %struct.ext4_sb_info, ptr %41, i32 0, i32 25
  %43 = load i16, ptr %42, align 8
  %44 = or i16 %43, 2
  store i16 %44, ptr %42, align 8
  %45 = getelementptr inbounds %struct.ext4_super_block, ptr %1, i32 0, i32 16
  %46 = load i16, ptr %45, align 2
  %47 = or i16 %46, 2
  store i16 %47, ptr %45, align 2
  %48 = call fastcc i32 @ext4_commit_super(ptr noundef %0)
  %49 = call i32 @jbd2_journal_clear_err(ptr noundef %15) #26
  call void @jbd2_journal_update_sb_errno(ptr noundef %15) #26
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #26
  br label %50

50:                                               ; preds = %39, %13, %12
  %51 = phi i32 [ -117, %12 ], [ 0, %39 ], [ 0, %13 ]
  ret i32 %51
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @jbd2_journal_init_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ext4_init_journal_params(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.super_block, ptr %0, i32 0, i32 27
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 52
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 49
  store i32 %6, ptr %7, align 8
  %8 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 54
  %9 = load i32, ptr %8, align 4
  %10 = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 60
  store i32 %9, ptr %10, align 8
  %11 = getelementptr inbounds %struct.ext4_sb_info, ptr %4, i32 0, i32 53
  %12 = load i32, ptr %11, align 8
  %13 = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 61
  store i32 %12, ptr %13, align 4
  tail call void @ext4_fc_init(ptr noundef %0, ptr noundef %1) #26
  %14 = getelementptr inbounds %struct.journal_s, ptr %1, i32 0, i32 7
  tail call void @_raw_write_lock(ptr noundef %14) #26
  %15 = load ptr, ptr %3, align 4
  %16 = getelementptr inbounds %struct.ext4_sb_info, ptr %15, i32 0, i32 17
  %17 = load i32, ptr %16, align 4
  %18 = load i32, ptr %1, align 8
  %19 = and i32 %18, -33
  %20 = lshr i32 %17, 12
  %21 = and i32 %20, 32
  %22 = or i32 %19, %21
  store i32 %22, ptr %1, align 8
  %23 = load ptr, ptr %3, align 4
  %24 = getelementptr inbounds %struct.ext4_sb_info, ptr %23, i32 0, i32 17
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %22, -65
  %27 = lshr i32 %25, 22
  %28 = and i32 %27, 64
  %29 = or i32 %28, %26
  store i32 %29, ptr %1, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !42
  tail call void asm sideeffect "str\09$1, [$0]\0A", "r,r,~{cc}"(ptr %14, i32 0) #26, !srcloc !43
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #26, !srcloc !29
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #26, !srcloc !30
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !44
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_fc_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_blocksize(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @jbd2_journal_init_dev(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #20

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @blkdev_get_by_dev(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__bread_gfp(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blkdev_put(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_errno(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_clear_err(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_update_sb_errno(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @jbd2_journal_clear_features(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_submit_inode_data_buffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_inode_journal_mode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @write_cache_pages(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_journalled_writepage_callback(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2) #0 {
  %4 = load volatile i32, ptr %0, align 4
  %5 = and i32 %4, 8192
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8, !prof !11

7:                                                ; preds = %3
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 499, 0\0A.popsection", ""() #26, !srcloc !65
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.page, ptr %0, i32 0, i32 1, i32 0, i32 3
  %10 = load i32, ptr %9, align 4
  %11 = inttoptr i32 %10 to ptr
  br label %12

12:                                               ; preds = %31, %8
  %13 = phi ptr [ %11, %8 ], [ %33, %31 ]
  %14 = getelementptr inbounds %struct.buffer_head, ptr %13, i32 0, i32 8
  %15 = load ptr, ptr %14, align 8
  %16 = load volatile i32, ptr %13, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %29

19:                                               ; preds = %12
  %20 = icmp eq ptr %15, null
  br i1 %20, label %31, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.journal_head, ptr %15, i32 0, i32 7
  %23 = load ptr, ptr %22, align 4
  %24 = icmp eq ptr %23, %2
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.journal_head, ptr %15, i32 0, i32 8
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25, %21, %12
  %30 = tail call zeroext i1 @redirty_page_for_writepage(ptr noundef %1, ptr noundef %0) #26
  br label %35

31:                                               ; preds = %25, %19
  %32 = getelementptr inbounds %struct.buffer_head, ptr %13, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, %11
  br i1 %34, label %35, label %12

35:                                               ; preds = %31, %29
  ret i32 524288
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @redirty_page_for_writepage(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_finish_inode_data_buffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_process_freed_data(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @crypto_destroy_tfm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sync_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @crc16(i16 noundef zeroext, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prandom_u32() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_on_node(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @ext4_lazyinit_thread(ptr noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = icmp eq ptr %0, null
  br i1 %3, label %7, label %4, !prof !11

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ext4_lazy_init, ptr %0, i32 0, i32 2
  %6 = getelementptr inbounds %struct.ext4_lazy_init, ptr %0, i32 0, i32 1
  br label %8

7:                                                ; preds = %1
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/ext4/super.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3806, 0\0A.popsection", ""() #26, !srcloc !66
  unreachable

8:                                                ; preds = %312, %4
  call void @mutex_lock(ptr noundef %5) #26
  %9 = load volatile ptr, ptr %6, align 4
  %10 = icmp eq ptr %9, %6
  br i1 %10, label %308, label %11

11:                                               ; preds = %272, %8
  %12 = phi ptr [ %273, %272 ], [ %9, %8 ]
  %13 = icmp eq ptr %12, %6
  br i1 %13, label %255, label %14

14:                                               ; preds = %251, %11
  %15 = phi ptr [ %253, %251 ], [ %12, %11 ]
  %16 = phi i32 [ %252, %251 ], [ 1073741822, %11 ]
  %17 = load ptr, ptr %15, align 4
  %18 = getelementptr i8, ptr %15, i32 -16
  %19 = load volatile i32, ptr @jiffies, align 64
  %20 = getelementptr i8, ptr %15, i32 8
  %21 = load i32, ptr %20, align 4
  %22 = sub i32 %19, %21
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %14
  %25 = sub i32 %21, %16
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 %21, i32 %16
  br label %251

28:                                               ; preds = %14
  %29 = load ptr, ptr %18, align 4
  %30 = getelementptr inbounds %struct.super_block, ptr %29, i32 0, i32 14
  %31 = call i32 @down_read_trylock(ptr noundef %30) #26
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %239, label %33

33:                                               ; preds = %28
  %34 = load ptr, ptr %18, align 4
  %35 = getelementptr %struct.super_block, ptr %34, i32 0, i32 26, i32 2
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !67
  %36 = load volatile i32, ptr %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50, !prof !10

38:                                               ; preds = %33
  %39 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !68
  %40 = getelementptr %struct.super_block, ptr %34, i32 0, i32 26, i32 2, i32 0, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = ptrtoint ptr %41 to i32
  %43 = call i32 @llvm.read_register.i32(metadata !0) #26
  %44 = inttoptr i32 %43 to ptr
  %45 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %44) #13, !srcloc !12
  %46 = add i32 %45, %42
  %47 = inttoptr i32 %46 to ptr
  %48 = load i32, ptr %47, align 4
  %49 = add i32 %48, 1
  store i32 %49, ptr %47, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %39) #26, !srcloc !69
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !70
  br label %52

50:                                               ; preds = %33
  %51 = call zeroext i1 @__percpu_down_read(ptr noundef %35, i1 noundef zeroext true) #26
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !70
  br i1 %51, label %52, label %218

52:                                               ; preds = %50, %38
  call void @mutex_unlock(ptr noundef %5) #26
  %53 = load ptr, ptr %18, align 4
  %54 = getelementptr inbounds %struct.super_block, ptr %53, i32 0, i32 27
  %55 = load ptr, ptr %54, align 4
  %56 = getelementptr inbounds %struct.ext4_sb_info, ptr %55, i32 0, i32 8
  %57 = load i32, ptr %56, align 32
  %58 = getelementptr i8, ptr %15, i32 -4
  %59 = load i32, ptr %58, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #26
  store i32 0, ptr %2, align 4
  %60 = getelementptr i8, ptr %15, i32 -12
  %61 = load i32, ptr %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63

63:                                               ; preds = %52
  %64 = icmp ult i32 %59, %57
  br i1 %64, label %121, label %184

65:                                               ; preds = %52
  %66 = getelementptr inbounds %struct.ext4_sb_info, ptr %55, i32 0, i32 85
  %67 = load i32, ptr %66, align 4
  %68 = call i32 @ext4_mb_prefetch(ptr noundef %53, i32 noundef %59, i32 noundef %67, ptr noundef nonnull %2) #26
  store i32 %68, ptr %58, align 4
  %69 = load i32, ptr %2, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  call void @ext4_mb_prefetch_fini(ptr noundef %53, i32 noundef %68, i32 noundef %69) #26
  %72 = load i32, ptr %58, align 4
  %73 = load i32, ptr %2, align 4
  br label %74

74:                                               ; preds = %71, %65
  %75 = phi i32 [ %73, %71 ], [ 0, %65 ]
  %76 = phi i32 [ %72, %71 ], [ %68, %65 ]
  %77 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_prefetch_bitmaps, i32 0, i32 1), align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %103

79:                                               ; preds = %74
  %80 = tail call ptr @llvm.thread.pointer() #26
  %81 = getelementptr inbounds %struct.thread_info, ptr %80, i32 0, i32 2
  %82 = load i32, ptr %81, align 8
  %83 = lshr i32 %82, 5
  %84 = getelementptr i32, ptr @__cpu_online_mask, i32 %83
  %85 = load volatile i32, ptr %84, align 4
  %86 = and i32 %82, 31
  %87 = shl nuw i32 1, %86
  %88 = and i32 %87, %85
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %103, label %90

90:                                               ; preds = %79
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !71
  %91 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_prefetch_bitmaps, i32 0, i32 7), align 4
  %92 = icmp eq ptr %91, null
  br i1 %92, label %101, label %93

93:                                               ; preds = %93, %90
  %94 = phi ptr [ %98, %93 ], [ %91, %90 ]
  %95 = load volatile ptr, ptr %94, align 4
  %96 = getelementptr inbounds %struct.tracepoint_func, ptr %94, i32 0, i32 1
  %97 = load ptr, ptr %96, align 4
  call void %95(ptr noundef %97, ptr noundef %53, i32 noundef %59, i32 noundef %76, i32 noundef %75) #26
  %98 = getelementptr %struct.tracepoint_func, ptr %94, i32 1
  %99 = load ptr, ptr %98, align 4
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %93

101:                                              ; preds = %93, %90
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !72
  %102 = load i32, ptr %58, align 4
  br label %103

103:                                              ; preds = %101, %79, %74
  %104 = phi i32 [ %76, %74 ], [ %76, %79 ], [ %102, %101 ]
  %105 = icmp ult i32 %59, %104
  br i1 %105, label %184, label %106

106:                                              ; preds = %103
  %107 = getelementptr i8, ptr %15, i32 -8
  %108 = load i32, ptr %107, align 4
  %109 = icmp eq i32 %108, %57
  br i1 %109, label %184, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.super_block, ptr %53, i32 0, i32 10
  %112 = load i32, ptr %111, align 4
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %184

115:                                              ; preds = %110
  %116 = load ptr, ptr %54, align 4
  %117 = getelementptr inbounds %struct.ext4_sb_info, ptr %116, i32 0, i32 17
  %118 = load i32, ptr %117, align 4
  %119 = icmp sgt i32 %118, -1
  br i1 %119, label %184, label %120

120:                                              ; preds = %115
  store i32 %108, ptr %58, align 4
  store i32 1, ptr %60, align 4
  br label %184

121:                                              ; preds = %130, %63
  %122 = phi i32 [ %131, %130 ], [ %59, %63 ]
  %123 = call ptr @ext4_get_group_desc(ptr noundef %53, i32 noundef %122, ptr noundef null) #26
  %124 = icmp eq ptr %123, null
  br i1 %124, label %184, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.ext4_group_desc, ptr %123, i32 0, i32 6
  %127 = load i16, ptr %126, align 2
  %128 = and i16 %127, 4
  %129 = icmp eq i16 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %125
  %131 = add i32 %122, 1
  %132 = icmp eq i32 %131, %57
  br i1 %132, label %184, label %121

133:                                              ; preds = %125
  %134 = call i64 @ktime_get_with_offset(i32 noundef 0) #26
  %135 = getelementptr i8, ptr %15, i32 12
  %136 = load i32, ptr %135, align 4
  %137 = icmp eq i32 %136, 0
  %138 = zext i1 %137 to i32
  %139 = call i32 @ext4_init_inode_table(ptr noundef %53, i32 noundef %122, i32 noundef %138) #26
  %140 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_lazy_itable_init, i32 0, i32 1), align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %165

142:                                              ; preds = %133
  %143 = tail call ptr @llvm.thread.pointer() #26
  %144 = getelementptr inbounds %struct.thread_info, ptr %143, i32 0, i32 2
  %145 = load i32, ptr %144, align 8
  %146 = lshr i32 %145, 5
  %147 = getelementptr i32, ptr @__cpu_online_mask, i32 %146
  %148 = load volatile i32, ptr %147, align 4
  %149 = and i32 %145, 31
  %150 = shl nuw i32 1, %149
  %151 = and i32 %150, %148
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %165, label %153

153:                                              ; preds = %142
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !73
  %154 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_ext4_lazy_itable_init, i32 0, i32 7), align 4
  %155 = icmp eq ptr %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %156, %153
  %157 = phi ptr [ %161, %156 ], [ %154, %153 ]
  %158 = load volatile ptr, ptr %157, align 4
  %159 = getelementptr inbounds %struct.tracepoint_func, ptr %157, i32 0, i32 1
  %160 = load ptr, ptr %159, align 4
  call void %158(ptr noundef %160, ptr noundef %53, i32 noundef %122) #26
  %161 = getelementptr %struct.tracepoint_func, ptr %157, i32 1
  %162 = load ptr, ptr %161, align 4
  %163 = icmp eq ptr %162, null
  br i1 %163, label %164, label %156

164:                                              ; preds = %156, %153
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !74
  br label %165

165:                                              ; preds = %164, %142, %133
  %166 = load i32, ptr %135, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %179

168:                                              ; preds = %165
  %169 = call i64 @ktime_get_with_offset(i32 noundef 0) #26
  %170 = sub i64 %169, %134
  %171 = load ptr, ptr %18, align 4
  %172 = getelementptr inbounds %struct.super_block, ptr %171, i32 0, i32 27
  %173 = load ptr, ptr %172, align 4
  %174 = getelementptr inbounds %struct.ext4_sb_info, ptr %173, i32 0, i32 116
  %175 = load i32, ptr %174, align 4
  %176 = zext i32 %175 to i64
  %177 = mul i64 %170, %176
  %178 = call i32 @nsecs_to_jiffies(i64 noundef %177) #26
  store i32 %178, ptr %135, align 4
  br label %179

179:                                              ; preds = %168, %165
  %180 = phi i32 [ %178, %168 ], [ %166, %165 ]
  %181 = load volatile i32, ptr @jiffies, align 64
  %182 = add i32 %181, %180
  store i32 %182, ptr %20, align 4
  %183 = add i32 %122, 1
  store i32 %183, ptr %58, align 4
  br label %184

184:                                              ; preds = %179, %130, %121, %120, %115, %110, %106, %103, %63
  %185 = phi i32 [ 1, %110 ], [ 0, %120 ], [ 1, %115 ], [ 1, %106 ], [ 0, %103 ], [ %139, %179 ], [ 1, %63 ], [ 1, %130 ], [ 1, %121 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #26
  %186 = load ptr, ptr %18, align 4
  %187 = getelementptr %struct.super_block, ptr %186, i32 0, i32 26, i32 2
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !75
  %188 = load volatile i32, ptr %187, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %202, !prof !10

190:                                              ; preds = %184
  %191 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !68
  %192 = getelementptr %struct.super_block, ptr %186, i32 0, i32 26, i32 2, i32 0, i32 1
  %193 = load ptr, ptr %192, align 4
  %194 = ptrtoint ptr %193 to i32
  %195 = call i32 @llvm.read_register.i32(metadata !0) #26
  %196 = inttoptr i32 %195 to ptr
  %197 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %196) #13, !srcloc !12
  %198 = add i32 %197, %194
  %199 = inttoptr i32 %198 to ptr
  %200 = load i32, ptr %199, align 4
  %201 = add i32 %200, -1
  store i32 %201, ptr %199, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %191) #26, !srcloc !69
  br label %216

202:                                              ; preds = %184
  call void asm sideeffect "dmb ish", "~{memory}"() #26, !srcloc !76
  %203 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !68
  %204 = getelementptr %struct.super_block, ptr %186, i32 0, i32 26, i32 2, i32 0, i32 1
  %205 = load ptr, ptr %204, align 4
  %206 = ptrtoint ptr %205 to i32
  %207 = call i32 @llvm.read_register.i32(metadata !0) #26
  %208 = inttoptr i32 %207 to ptr
  %209 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %208) #13, !srcloc !12
  %210 = add i32 %209, %206
  %211 = inttoptr i32 %210 to ptr
  %212 = load i32, ptr %211, align 4
  %213 = add i32 %212, -1
  store i32 %213, ptr %211, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %203) #26, !srcloc !69
  %214 = getelementptr %struct.super_block, ptr %186, i32 0, i32 26, i32 2, i32 0, i32 2
  %215 = call i32 @rcuwait_wake_up(ptr noundef %214) #26
  br label %216

216:                                              ; preds = %202, %190
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !77
  call void @mutex_lock(ptr noundef %5) #26
  %217 = load ptr, ptr %15, align 4
  br label %218

218:                                              ; preds = %216, %50
  %219 = phi i32 [ %185, %216 ], [ 0, %50 ]
  %220 = phi i1 [ false, %216 ], [ true, %50 ]
  %221 = phi ptr [ %217, %216 ], [ %17, %50 ]
  %222 = load ptr, ptr %18, align 4
  %223 = getelementptr inbounds %struct.super_block, ptr %222, i32 0, i32 14
  call void @up_read(ptr noundef %223) #26
  %224 = icmp eq i32 %219, 0
  br i1 %224, label %236, label %225

225:                                              ; preds = %218
  %226 = icmp eq ptr %18, null
  br i1 %226, label %251, label %227

227:                                              ; preds = %225
  %228 = getelementptr i8, ptr %15, i32 4
  %229 = load ptr, ptr %228, align 4
  %230 = load ptr, ptr %15, align 4
  %231 = getelementptr inbounds %struct.list_head, ptr %230, i32 0, i32 1
  store ptr %229, ptr %231, align 4
  store volatile ptr %230, ptr %229, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %15, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %228, align 4
  %232 = load ptr, ptr %18, align 4
  %233 = getelementptr inbounds %struct.super_block, ptr %232, i32 0, i32 27
  %234 = load ptr, ptr %233, align 4
  %235 = getelementptr inbounds %struct.ext4_sb_info, ptr %234, i32 0, i32 115
  store ptr null, ptr %235, align 8
  call void @kfree(ptr noundef nonnull %18) #26
  br label %251

236:                                              ; preds = %218
  br i1 %220, label %239, label %237

237:                                              ; preds = %236
  %238 = load i32, ptr %20, align 4
  br label %245

239:                                              ; preds = %236, %28
  %240 = phi ptr [ %221, %236 ], [ %17, %28 ]
  %241 = load volatile i32, ptr @jiffies, align 64
  %242 = call i32 @prandom_u32() #26
  %243 = urem i32 %242, 500
  %244 = add i32 %243, %241
  store i32 %244, ptr %20, align 4
  br label %245

245:                                              ; preds = %239, %237
  %246 = phi i32 [ %244, %239 ], [ %238, %237 ]
  %247 = phi ptr [ %240, %239 ], [ %221, %237 ]
  %248 = sub i32 %246, %16
  %249 = icmp slt i32 %248, 0
  %250 = select i1 %249, i32 %246, i32 %16
  br label %251

251:                                              ; preds = %245, %227, %225, %24
  %252 = phi i32 [ %27, %24 ], [ %250, %245 ], [ %16, %225 ], [ %16, %227 ]
  %253 = phi ptr [ %17, %24 ], [ %247, %245 ], [ %221, %225 ], [ %221, %227 ]
  %254 = icmp eq ptr %253, %6
  br i1 %254, label %255, label %14

255:                                              ; preds = %251, %11
  %256 = phi i32 [ 1073741822, %11 ], [ %252, %251 ]
  call void @mutex_unlock(ptr noundef %5) #26
  %257 = load volatile i32, ptr @system_freezing_cnt, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %264, label %259, !prof !10

259:                                              ; preds = %255
  %260 = tail call ptr @llvm.thread.pointer() #26
  %261 = call zeroext i1 @freezing_slow_path(ptr noundef %260) #26
  br i1 %261, label %262, label %264, !prof !11

262:                                              ; preds = %259
  %263 = call zeroext i1 @__refrigerator(i1 noundef zeroext false) #26
  br label %264

264:                                              ; preds = %262, %259, %255
  %265 = load volatile i32, ptr @jiffies, align 64
  %266 = sub i32 %265, %256
  %267 = icmp sgt i32 %266, -1
  %268 = icmp eq i32 %256, 1073741822
  %269 = or i1 %268, %267
  br i1 %269, label %270, label %275

270:                                              ; preds = %264
  %271 = call i32 @__cond_resched() #26
  br label %272

272:                                              ; preds = %275, %270
  call void @mutex_lock(ptr noundef %5) #26
  %273 = load volatile ptr, ptr %6, align 4
  %274 = icmp eq ptr %273, %6
  br i1 %274, label %308, label %11

275:                                              ; preds = %264
  %276 = sub i32 %256, %265
  %277 = call i32 @schedule_timeout_interruptible(i32 noundef %276) #26
  %278 = call zeroext i1 @kthread_should_stop() #26
  br i1 %278, label %279, label %272

279:                                              ; preds = %275
  %280 = load ptr, ptr @ext4_li_info, align 4
  %281 = getelementptr inbounds %struct.ext4_lazy_init, ptr %280, i32 0, i32 2
  call void @mutex_lock(ptr noundef %281) #26
  %282 = load ptr, ptr @ext4_li_info, align 4
  %283 = getelementptr inbounds %struct.ext4_lazy_init, ptr %282, i32 0, i32 1
  %284 = load ptr, ptr %283, align 4
  %285 = icmp eq ptr %284, %283
  br i1 %285, label %305, label %286

286:                                              ; preds = %301, %279
  %287 = phi ptr [ %302, %301 ], [ %282, %279 ]
  %288 = phi ptr [ %289, %301 ], [ %284, %279 ]
  %289 = load ptr, ptr %288, align 4
  %290 = getelementptr i8, ptr %288, i32 -16
  %291 = icmp eq ptr %290, null
  br i1 %291, label %301, label %292

292:                                              ; preds = %286
  %293 = getelementptr i8, ptr %288, i32 4
  %294 = load ptr, ptr %293, align 4
  %295 = getelementptr inbounds %struct.list_head, ptr %289, i32 0, i32 1
  store ptr %294, ptr %295, align 4
  store volatile ptr %289, ptr %294, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %288, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %293, align 4
  %296 = load ptr, ptr %290, align 4
  %297 = getelementptr inbounds %struct.super_block, ptr %296, i32 0, i32 27
  %298 = load ptr, ptr %297, align 4
  %299 = getelementptr inbounds %struct.ext4_sb_info, ptr %298, i32 0, i32 115
  store ptr null, ptr %299, align 8
  call void @kfree(ptr noundef nonnull %290) #26
  %300 = load ptr, ptr @ext4_li_info, align 4
  br label %301

301:                                              ; preds = %292, %286
  %302 = phi ptr [ %287, %286 ], [ %300, %292 ]
  %303 = getelementptr inbounds %struct.ext4_lazy_init, ptr %302, i32 0, i32 1
  %304 = icmp eq ptr %289, %303
  br i1 %304, label %305, label %286

305:                                              ; preds = %301, %279
  %306 = phi ptr [ %282, %279 ], [ %302, %301 ]
  %307 = getelementptr inbounds %struct.ext4_lazy_init, ptr %306, i32 0, i32 2
  br label %308

308:                                              ; preds = %305, %272, %8
  %309 = phi ptr [ %307, %305 ], [ %5, %8 ], [ %5, %272 ]
  call void @mutex_unlock(ptr noundef %309) #26
  call void @mutex_lock(ptr noundef nonnull @ext4_li_mtx) #26
  call void @mutex_lock(ptr noundef %5) #26
  %310 = load volatile ptr, ptr %6, align 4
  %311 = icmp eq ptr %310, %6
  call void @mutex_unlock(ptr noundef %5) #26
  br i1 %311, label %313, label %312

312:                                              ; preds = %308
  call void @mutex_unlock(ptr noundef nonnull @ext4_li_mtx) #26
  br label %8

313:                                              ; preds = %308
  %314 = load ptr, ptr @ext4_li_info, align 4
  call void @kfree(ptr noundef %314) #26
  store ptr null, ptr @ext4_li_info, align 4
  call void @mutex_unlock(ptr noundef nonnull @ext4_li_mtx) #26
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_read_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout_interruptible(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_should_stop() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_mb_prefetch(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ext4_mb_prefetch_fini(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_init_inode_table(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nsecs_to_jiffies(i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__refrigerator(i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @freezing_slow_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ext4_count_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @make_bad_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jbd2_journal_force_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kthread_stop(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_es() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_pending() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_post_read_processing() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_pageio() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_system_zone() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_sysfs() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_init_mballoc() local_unnamed_addr #8 section ".init.text"

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @init_inodecache() unnamed_addr #12 section ".init.text" {
  %1 = tail call ptr @kmem_cache_create_usercopy(ptr noundef nonnull @.str.668, i32 noundef 744, i32 noundef 0, i32 noundef 1179648, i32 noundef 0, i32 noundef 60, ptr noundef nonnull @init_once) #26
  store ptr %1, ptr @ext4_inode_cachep, align 4
  %2 = icmp eq ptr %1, null
  %3 = select i1 %2, i32 -12, i32 0
  ret i32 %3
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @ext4_fc_init_dentry_cache() local_unnamed_addr #8 section ".init.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @register_as_ext3() unnamed_addr #3 {
  %1 = tail call i32 @register_filesystem(ptr noundef nonnull @ext3_fs_type) #26
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.672, i32 noundef %1) #28
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @register_as_ext2() unnamed_addr #3 {
  %1 = tail call i32 @register_filesystem(ptr noundef nonnull @ext2_fs_type) #26
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  %4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.673, i32 noundef %1) #28
  br label %5

5:                                                ; preds = %3, %0
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create_usercopy(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @init_once(ptr noundef %0) #0 {
  %2 = getelementptr inbounds %struct.ext4_inode_info, ptr %0, i32 0, i32 8
  store volatile ptr %2, ptr %2, align 4
  %3 = getelementptr inbounds %struct.ext4_inode_info, ptr %0, i32 0, i32 8, i32 0, i32 1
  store ptr %2, ptr %3, align 4
  %4 = getelementptr inbounds %struct.ext4_inode_info, ptr %0, i32 0, i32 7
  tail call void @__init_rwsem(ptr noundef %4, ptr noundef nonnull @.str.669, ptr noundef nonnull @init_once.__key) #26
  %5 = getelementptr inbounds %struct.ext4_inode_info, ptr %0, i32 0, i32 16
  tail call void @__init_rwsem(ptr noundef %5, ptr noundef nonnull @.str.671, ptr noundef nonnull @init_once.__key.670) #26
  %6 = getelementptr inbounds %struct.ext4_inode_info, ptr %0, i32 0, i32 17
  tail call void @inode_init_once(ptr noundef %6) #26
  tail call void @ext4_fc_init_inode(ptr noundef %6) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @inode_init_once(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #20

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smin.i64(i64, i64) #20

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #20

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nocallback nofree nosync nounwind willreturn }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { argmemonly nofree nounwind willreturn }
attributes #12 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nounwind readonly }
attributes #14 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #15 = { cold noreturn null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree norecurse nosync nounwind null_pointer_is_valid readnone sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #21 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #22 = { mustprogress nofree nosync nounwind null_pointer_is_valid readnone sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { argmemonly nofree nounwind readonly willreturn }
attributes #26 = { nounwind }
attributes #27 = { nounwind readnone }
attributes #28 = { cold nounwind }
attributes #29 = { cold noreturn nounwind }
attributes #30 = { nounwind allocsize(0) }
attributes #31 = { nounwind allocsize(2) }
attributes #32 = { cold }
attributes #33 = { nounwind readonly willreturn }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{!"auto-init"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{i64 668809}
!13 = !{i64 607289, i64 607316, i64 607338, i64 607366}
!14 = !{i64 607697, i64 607724, i64 607757, i64 607778, i64 607805, i64 607831}
!15 = !{i64 2163016883, i64 2163017363, i64 2163016920, i64 2163016976, i64 2163017010, i64 2163017034, i64 2163017075, i64 2163017096, i64 2163017124, i64 2163017158}
!16 = !{i64 744431, i64 2148234402, i64 2148234428, i64 2148234475, i64 2148234497, i64 2148234525, i64 2148234545}
!17 = !{i64 2148245817, i64 2148245843, i64 2148245872, i64 2148245906, i64 2148245937, i64 2148245960}
!18 = !{i64 2163017899, i64 2163018379, i64 2163017936, i64 2163017992, i64 2163018026, i64 2163018050, i64 2163018091, i64 2163018112, i64 2163018140, i64 2163018174}
!19 = !{i64 2148254279, i64 2148254311, i64 2148254340, i64 2148254374, i64 2148254405, i64 2148254428}
!20 = !{i64 2148355619}
!21 = !{i64 2153336008}
!22 = !{i64 2148248174, i64 2148248200, i64 2148248229, i64 2148248263, i64 2148248294, i64 2148248317}
!23 = !{i64 2154452098, i64 2154452578, i64 2154452135, i64 2154452191, i64 2154452225, i64 2154452249, i64 2154452290, i64 2154452311, i64 2154452339, i64 2154452373}
!24 = !{i64 2154453176, i64 2154453656, i64 2154453213, i64 2154453269, i64 2154453303, i64 2154453327, i64 2154453368, i64 2154453389, i64 2154453417, i64 2154453451}
!25 = !{i64 2156912397}
!26 = !{i64 2156912565}
!27 = !{i8 0, i8 2}
!28 = !{i64 2149128956}
!29 = !{i64 2149124780}
!30 = !{i64 2149124855, i64 2149124882, i64 2149124929, i64 2149124951, i64 2149124979, i64 2149124999}
!31 = !{i64 2149151959}
!32 = !{i64 2163041594}
!33 = !{i64 731000, i64 731025, i64 731047, i64 731063, i64 731075, i64 731095, i64 731119, i64 731135, i64 731147}
!34 = !{i64 2148245450}
!35 = !{i64 2154465722, i64 2154466202, i64 2154465759, i64 2154465815, i64 2154465849, i64 2154465873, i64 2154465914, i64 2154465935, i64 2154465963, i64 2154465997}
!36 = !{i64 2149247311}
!37 = !{i64 2149247528}
!38 = !{i32 0, i32 33}
!39 = !{i64 2163145356}
!40 = !{i64 2154471420}
!41 = !{i64 2163181126}
!42 = !{i64 2149136033}
!43 = !{i64 1639247}
!44 = !{i64 2149174002}
!45 = !{i64 2148092833, i64 2148093113, i64 2148093447, i64 2148093781}
!46 = !{i32 0, i32 17}
!47 = !{i64 2163230926}
!48 = !{i64 734290, i64 734310, i64 734338, i64 734368, i64 734384}
!49 = !{i64 2163034963, i64 2163035443, i64 2163035000, i64 2163035056, i64 2163035090, i64 2163035114, i64 2163035155, i64 2163035176, i64 2163035204, i64 2163035238}
!50 = !{i64 2148257049, i64 2148257077, i64 2148257111, i64 2148257145, i64 2148257179, i64 2148257215, i64 2148257238}
!51 = !{i64 2155203660}
!52 = !{i64 2155203824}
!53 = !{i64 2163070162, i64 2163070643, i64 2163070199, i64 2163070255, i64 2163070289, i64 2163070313, i64 2163070354, i64 2163070375, i64 2163070403, i64 2163070437}
!54 = !{i64 2155749496}
!55 = !{i64 2155749648}
!56 = !{i64 2149136838}
!57 = !{i64 1640262, i64 1640285, i64 1640305, i64 1640329, i64 1640345}
!58 = !{i64 2149174441}
!59 = !{i64 734045, i64 734066}
!60 = !{!61}
!61 = distinct !{!61, !62, !"uuid_to_fsid: argument 0"}
!62 = distinct !{!62, !"uuid_to_fsid"}
!63 = !{i64 2155223937}
!64 = !{i64 2155224107}
!65 = !{i64 2163037693, i64 2163038173, i64 2163037730, i64 2163037786, i64 2163037820, i64 2163037844, i64 2163037885, i64 2163037906, i64 2163037934, i64 2163037968}
!66 = !{i64 2163171668, i64 2163172149, i64 2163171705, i64 2163171761, i64 2163171795, i64 2163171819, i64 2163171860, i64 2163171881, i64 2163171909, i64 2163171943}
!67 = !{i64 2151568798}
!68 = !{i64 650109, i64 650170}
!69 = !{i64 653126}
!70 = !{i64 2151576415}
!71 = !{i64 2156929641}
!72 = !{i64 2156929853}
!73 = !{i64 2156950764}
!74 = !{i64 2156950936}
!75 = !{i64 2151577046}
!76 = !{i64 2151585357}
!77 = !{i64 2151593575}
