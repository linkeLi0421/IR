; ModuleID = '/llk/IR/fs/io_uring.c_pt.bc'
source_filename = "../fs/io_uring.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_io_uring_get_socket:\09\09\09\09\09"
module asm "\09.asciz \09\22io_uring_get_socket\22\09\09\09\09\09"
module asm "__kstrtabns_io_uring_get_socket:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.4 }
%union.anon.4 = type { %struct.anon }
%struct.anon = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.5, %struct.trace_event, ptr, ptr, %union.anon.7, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.5 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.7 = type { ptr }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_key = type {}
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [40 x i8], %struct.netns_ipv4, %struct.netns_ipv6, ptr, %struct.netns_bpf, [28 x i8], %struct.netns_xfrm, i64, %struct.netns_can, ptr, ptr, [32 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.spinlock = type { %union.anon.8 }
%union.anon.8 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type { %union.anon.6 }
%union.anon.6 = type { i32 }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type {}
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.44, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.44 = type { %struct.anon.45 }
%struct.anon.45 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [40 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [60 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.kgid_t = type { i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.97, ptr, [60 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [32 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.97 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [36 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex, [28 x i8] }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_io_uring_create = type { %struct.trace_entry, i32, ptr, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.trace_event_raw_io_uring_register = type { %struct.trace_entry, ptr, i32, i32, i32, i8, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_file_get = type { %struct.trace_entry, ptr, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_queue_async_work = type { %struct.trace_entry, ptr, i32, ptr, ptr, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_defer = type { %struct.trace_entry, ptr, ptr, i64, [0 x i8] }
%struct.trace_event_raw_io_uring_link = type { %struct.trace_entry, ptr, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_io_uring_cqring_wait = type { %struct.trace_entry, ptr, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_fail_link = type { %struct.trace_entry, ptr, ptr, [0 x i8] }
%struct.trace_event_raw_io_uring_complete = type { %struct.trace_entry, ptr, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_submit_sqe = type { %struct.trace_entry, ptr, ptr, i8, i64, i32, i8, i8, [0 x i8] }
%struct.trace_event_raw_io_uring_poll_arm = type { %struct.trace_entry, ptr, ptr, i8, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_poll_wake = type { %struct.trace_entry, ptr, i8, i64, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_task_add = type { %struct.trace_entry, ptr, i8, i64, i32, [0 x i8] }
%struct.trace_event_raw_io_uring_task_run = type { %struct.trace_entry, ptr, ptr, i8, i64, [0 x i8] }
%struct.trace_event_raw_io_uring_req_failed = type { %struct.trace_entry, i8, i8, i8, i64, i64, i32, i32, i64, i16, i16, i32, i64, i64, i32, [0 x i8] }
%struct.io_uring_sqe = type { i8, i8, i16, i32, %union.anon, %union.anon.0, i32, %union.anon.1, i64, %union.anon.2, i16, %union.anon.3, [2 x i64] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i32 }
%union.anon.2 = type { i16 }
%union.anon.3 = type { i32 }
%struct.file = type { %union.anon.22, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, i32, i32 }
%union.anon.22 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.kuid_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.io_ring_ctx = type { %struct.anon.178, %struct.anon.179, %struct.io_wq_work_list, i32, ptr, ptr, %struct.wait_queue_head, %struct.list_head, i32, [20 x i8], %struct.anon.181, %struct.anon.182, %struct.io_restriction, %struct.anon.183, %struct.anon.184, [48 x i8] }
%struct.anon.178 = type { %struct.percpu_ref, ptr, i32, i8, [47 x i8] }
%struct.percpu_ref = type { i32, ptr }
%struct.anon.179 = type { %struct.mutex, ptr, ptr, i32, i32, %struct.list_head, ptr, i32, %struct.io_file_table, i32, i32, ptr, %struct.io_submit_state, %struct.list_head, %struct.list_head, %struct.list_head, %struct.xarray, %struct.xarray, i32, i32, [16 x i8] }
%struct.io_file_table = type { ptr }
%struct.io_submit_state = type { %struct.io_wq_work_node, %struct.io_wq_work_list, %struct.io_submit_link, i8, i8, i8, i16, %struct.blk_plug }
%struct.io_wq_work_node = type { ptr }
%struct.io_submit_link = type { ptr, ptr }
%struct.blk_plug = type { ptr, ptr, i16, i16, i8, i8, i8, %struct.list_head }
%struct.io_wq_work_list = type { ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.anon.181 = type { i32, i32, ptr, %struct.wait_queue_head, i32, %struct.atomic_t, i32, [28 x i8] }
%struct.anon.182 = type { %struct.spinlock, %struct.spinlock, %struct.io_wq_work_list, ptr, i32, i8, [39 x i8] }
%struct.io_restriction = type { [1 x i32], [2 x i32], i8, i8, i8 }
%struct.anon.183 = type { ptr, ptr, ptr, ptr, %struct.delayed_work, %struct.llist_head, %struct.list_head, %struct.spinlock }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.llist_head = type { ptr }
%struct.anon.184 = type { ptr, ptr, ptr, ptr, %struct.llist_head, %struct.delayed_work, %struct.work_struct, %struct.list_head, %struct.completion, [2 x i32], i8 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.socket = type { i32, i16, i32, ptr, ptr, ptr, [40 x i8], %struct.socket_wq }
%struct.socket_wq = type { %struct.wait_queue_head, ptr, i32, %struct.callback_head, [36 x i8] }
%struct.task_struct = type { %struct.thread_info, i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, [36 x i8], %struct.sched_statistics, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i8, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.123, ptr, %struct.page_frag, i32, i32, i32, i64, i64, i32, i32, ptr, %struct.kmap_ctrl, i32, ptr, %struct.refcount_struct, %struct.thread_struct, [16 x i8] }
%struct.thread_info = type { i32, i32, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], [4 x i8], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.28 }
%union.anon.28 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, [56 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [8 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.sched_statistics = type {}
%struct.sched_info = type {}
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.29 }
%union.anon.29 = type { %struct.anon.30 }
%struct.anon.30 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.task_io_accounting = type {}
%struct.tlbflush_unmap_batch = type {}
%union.anon.123 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.kmap_ctrl = type { i32, [16 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.io_uring_task = type { i32, %struct.xarray, %struct.wait_queue_head, ptr, ptr, %struct.percpu_counter, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, %struct.io_wq_work_list, %struct.io_wq_work_list, %struct.callback_head, i8 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.io_sq_data = type { %struct.refcount_struct, %struct.atomic_t, %struct.mutex, %struct.list_head, ptr, %struct.wait_queue_head, i32, i32, i32, i32, i32, %struct.completion }
%struct.io_tctx_node = type { %struct.list_head, ptr, ptr }
%struct.io_wait_queue = type { %struct.wait_queue_entry, ptr, i32, i32 }
%struct.timespec64 = type { i64, i32 }
%struct.io_uring_getevents_arg = type { i64, i32, i32, i64 }
%struct.io_uring = type { i32, [60 x i8], i32, [60 x i8] }
%struct.io_rings = type { %struct.io_uring, %struct.io_uring, i32, i32, i32, i32, i32, i32, i32, i32, [32 x i8], [0 x %struct.io_uring_cqe] }
%struct.io_uring_cqe = type { i64, i32, i32 }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.io_uring_params = type { i32, i32, i32, i32, i32, i32, i32, [3 x i32], %struct.io_sqring_offsets, %struct.io_cqring_offsets }
%struct.io_sqring_offsets = type { i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.io_cqring_offsets = type { i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.io_uring_rsrc_update2 = type { i32, i32, i64, i64, i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.46 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.46 = type { %struct.callback_head }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, [1 x %struct.cpumask], i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.io_task_cancel = type { ptr, i8 }
%struct.io_kiocb = type { %union.anon.185, i8, i8, i16, i32, i64, i32, i32, ptr, ptr, ptr, ptr, %struct.io_wq_work_node, %struct.atomic_t, ptr, %struct.io_task_work, %struct.hlist_node, ptr, ptr, %struct.io_wq_work, ptr, ptr, %struct.atomic_t }
%union.anon.185 = type { %struct.io_rw }
%struct.io_rw = type { %struct.kiocb, i64, i64 }
%struct.kiocb = type { ptr, i64, ptr, ptr, i32, i16, i16, ptr }
%struct.io_task_work = type { %union.anon.187, ptr }
%union.anon.187 = type { %struct.io_wq_work_node }
%struct.io_wq_work = type { %struct.io_wq_work_node, i32 }
%struct.io_defer_entry = type { %struct.list_head, ptr, i32 }
%struct.io_comp_batch = type { ptr, i8, ptr }
%struct.io_buffer = type { %struct.list_head, i64, i32, i16 }
%struct.io_overflow_cqe = type { %struct.io_uring_cqe, %struct.list_head }
%struct.io_timeout_data = type { ptr, %struct.hrtimer, %struct.timespec64, i32, i32 }
%struct.io_timeout = type { ptr, i32, i32, %struct.list_head, ptr, ptr }
%struct.io_cancel_data = type { ptr, i64 }
%struct.io_async_connect = type { %struct.__kernel_sockaddr_storage }
%struct.__kernel_sockaddr_storage = type { %union.anon.188 }
%union.anon.188 = type { ptr, [124 x i8] }
%struct.msghdr = type { ptr, i32, %struct.iov_iter, %union.anon.56, i8, i32, i32, ptr }
%struct.iov_iter = type { i8, i8, i8, i32, i32, %union.anon.53, %union.anon.54 }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.56 = type { ptr }
%struct.iovec = type { ptr, i32 }
%struct.io_async_msghdr = type { [8 x %struct.iovec], ptr, ptr, %struct.msghdr, %struct.__kernel_sockaddr_storage }
%struct.io_rw_state = type { %struct.iov_iter, %struct.iov_iter_state, [8 x %struct.iovec] }
%struct.iov_iter_state = type { i32, i32, i32 }
%struct.io_async_rw = type { %struct.io_rw_state, ptr, i32, %struct.wait_page_queue }
%struct.wait_page_queue = type { ptr, i32, %struct.wait_queue_entry }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.156, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.157, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.158, ptr, %struct.address_space, %struct.list_head, %union.anon.159, i32, i32, ptr, ptr }
%union.anon.156 = type { i32 }
%union.anon.157 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.158 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.159 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [56 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [40 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, ptr }
%struct.list_lru = type { ptr }
%struct.io_sync = type { ptr, i64, i64, i32, i32 }
%struct.io_poll_update = type { ptr, i64, i64, i32, i8, i8 }
%struct.io_poll_iocb = type { ptr, ptr, i32, %struct.wait_queue_entry }
%struct.io_sr_msg = type { ptr, %union.anon.186, i32, i32, i32 }
%union.anon.186 = type { ptr }
%struct.io_timeout_rem = type { ptr, i64, %struct.timespec64, i32, i8 }
%struct.io_accept = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.io_connect = type { ptr, ptr, i32 }
%struct.io_op_def = type { i16, i16 }
%struct.io_cancel = type { ptr, i64 }
%struct.io_close = type { ptr, i32, i32 }
%struct.io_rsrc_node = type { %struct.percpu_ref, %struct.list_head, %struct.list_head, ptr, %struct.llist_node, i8 }
%struct.io_fixed_file = type { i32 }
%struct.io_rsrc_data = type { ptr, ptr, i32, ptr, %struct.atomic_t, %struct.completion, i8 }
%struct.io_rsrc_put = type { %struct.list_head, i64, %union.anon.180 }
%union.anon.180 = type { ptr }
%struct.files_struct = type { %struct.atomic_t, i8, %struct.wait_queue_head, ptr, %struct.fdtable, [12 x i8], %struct.spinlock, i32, [1 x i32], [1 x i32], [1 x i32], [32 x ptr], [44 x i8] }
%struct.fdtable = type { i32, ptr, ptr, ptr, ptr, %struct.callback_head }
%struct.io_rsrc_update = type { ptr, i64, i32, i32 }
%struct.io_statx = type { ptr, i32, i32, i32, ptr, ptr }
%struct.io_fadvise = type { ptr, i64, i32, i32 }
%struct.io_madvise = type { ptr, i64, i32, i32 }
%struct.io_epoll = type { ptr, i32, i32, i32, %struct.epoll_event }
%struct.epoll_event = type { i32, i64 }
%struct.io_splice = type { ptr, ptr, i64, i64, i64, i32 }
%struct.io_provide_buf = type { ptr, i64, i32, i32, i16, i16 }
%struct.io_shutdown = type { ptr, i32 }
%struct.io_rename = type { ptr, i32, i32, ptr, ptr, i32 }
%struct.io_unlink = type { ptr, i32, i32, ptr }
%struct.io_mkdir = type { ptr, i32, i16, ptr }
%struct.io_symlink = type { ptr, i32, ptr, ptr }
%struct.io_hardlink = type { ptr, i32, i32, ptr, ptr, i32 }
%struct.io_poll_table = type { %struct.poll_table_struct, ptr, i32, i32 }
%struct.poll_table_struct = type { ptr, i32 }
%struct.open_flags = type { i32, i16, i32, i32, i32 }
%struct.io_open = type { ptr, i32, i32, ptr, %struct.open_how, i32 }
%struct.open_how = type { i64, i64, i64 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.128, %struct.list_head, %struct.list_head, %union.anon.129 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.23, ptr }
%union.anon.23 = type { i64 }
%struct.lockref = type { %union.anon.25 }
%union.anon.25 = type { i64 }
%union.anon.128 = type { %struct.list_head }
%union.anon.129 = type { %struct.hlist_node }
%struct.async_poll = type { %struct.io_poll_iocb, ptr }
%struct.io_mapped_ubuf = type { i64, i64, i32, i32, [0 x %struct.bio_vec] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.wait_page_key = type { ptr, i32, i32 }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, ptr, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, %struct.queue_limits, i32, i32, %struct.mutex, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.bio_list = type { ptr, ptr }
%struct.srcu_struct = type { [1 x %struct.srcu_node], [2 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.lockdep_map = type {}
%struct.sock = type { %struct.sock_common, ptr, i32, i32, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff_head, %struct.anon.87, %struct.llist_head, i32, i32, i32, i32, i32, ptr, %union.anon.88, [2 x ptr], ptr, %struct.atomic_t, i32, i32, %struct.refcount_struct, i32, %union.anon.89, %struct.sk_buff_head, i32, i32, i32, i32, i32, %struct.timer_list, i32, i32, i32, i32, %struct.page_frag, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i32, ptr, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, i8, i16, %struct.spinlock, i32, ptr, ptr, i32, i64, %struct.seqlock_t, i16, i8, %struct.atomic_t, %struct.atomic_t, i8, i8, ptr, ptr, %struct.sock_cgroup_data, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.callback_head, %struct.netns_tracker }
%struct.sock_common = type { %union.anon.47, %union.anon.49, %union.anon.50, i16, i8, i8, i32, %union.anon.52, ptr, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.79, [0 x i32], %union.anon.80, i16, i16, %union.anon.81, %struct.refcount_struct, [0 x i32], %union.anon.82 }
%union.anon.47 = type { i64 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.52 = type { %struct.hlist_node }
%struct.possible_net_t = type {}
%struct.in6_addr = type { %union.anon.78 }
%union.anon.78 = type { [4 x i32] }
%union.anon.79 = type { i32 }
%union.anon.80 = type { %struct.hlist_node }
%union.anon.81 = type { i32 }
%union.anon.82 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.87 = type { %struct.atomic_t, i32, ptr, ptr }
%union.anon.88 = type { ptr }
%union.anon.89 = type { ptr }
%struct.sk_buff_head = type { %union.anon.85, i32, %struct.spinlock }
%union.anon.85 = type { %struct.anon.86 }
%struct.anon.86 = type { ptr, ptr }
%struct.sock_cgroup_data = type {}
%struct.netns_tracker = type {}
%struct.sk_buff = type { %union.anon.57, %union.anon.60, %union.anon.61, [48 x i8], %union.anon.62, i32, i32, i16, i16, i16, [0 x i8], i8, i8, %union.anon.64, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type { ptr, ptr, %union.anon.59 }
%union.anon.59 = type { ptr }
%union.anon.60 = type { ptr }
%union.anon.61 = type { i64 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { i32, ptr }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { [0 x i8], i16, [0 x i8], i16, %union.anon.66, i32, i32, i32, i16, i16, %union.anon.68, %union.anon.69, %union.anon.70, i16, i16, i16, i16, i16, i16, i16 }
%union.anon.66 = type { i32 }
%union.anon.68 = type { i32 }
%union.anon.69 = type { i32 }
%union.anon.70 = type { i16 }
%struct.scm_fp_list = type { i16, i16, ptr, [253 x ptr] }
%struct.sk_buff_list = type { ptr, ptr }
%struct.anon.17 = type { ptr, %struct.rb_root, i64, ptr, i32, i32, i32, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i32, i32, i32, i32, %struct.atomic64_t, i32, i32, i32, i32, %struct.seqcount, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [42 x i32], %struct.mm_rss_stat, ptr, %struct.mm_context_t, i32, %struct.spinlock, ptr, ptr, ptr, %struct.atomic_t, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.mm_rss_stat = type { [4 x %struct.atomic_t] }
%struct.mm_context_t = type { %struct.atomic64_t, i32, i32, i32 }
%struct.uprobes_state = type { ptr }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.18, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type {}
%struct.page = type { i32, %union.anon.9, %union.anon.134, %struct.atomic_t }
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.134 = type { %struct.atomic_t }
%struct.anon.13 = type { i32, i8, i8, %struct.atomic_t, i32 }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.rlimit = type { i32, i32 }
%struct.user_struct = type { %struct.refcount_struct, %struct.percpu_counter, i32, %struct.atomic_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.io_wq_data = type { ptr, ptr, ptr, ptr }
%struct.io_wq_hash = type { %struct.refcount_struct, i32, %struct.wait_queue_head }
%struct.io_context = type { %struct.atomic_t, %struct.atomic_t, i16 }
%struct.io_tctx_exit = type { %struct.callback_head, %struct.completion, ptr }
%struct.dentry_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [12 x i8] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%struct.ksignal = type { %struct.k_sigaction, %struct.kernel_siginfo, i32 }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { ptr, i32, ptr, %struct.sigset_t }
%struct.kernel_siginfo = type { %struct.anon.109 }
%struct.anon.109 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.113 }
%struct.anon.113 = type { i32, i32, i32, i32, i32 }
%struct.io_uring_probe = type { i8, i8, i16, [3 x i32], [0 x %struct.io_uring_probe_op] }
%struct.io_uring_probe_op = type { i8, i8, i16, i32 }
%struct.io_uring_restriction = type { i16, %union.anon.190, i8, [3 x i32] }
%union.anon.190 = type { i8 }
%struct.io_uring_rsrc_register = type { i32, i32, i64, i64, i64 }

@__tpstrtab_io_uring_create = internal constant [16 x i8] c"io_uring_create\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_create = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_create }, align 4
@__tracepoint_io_uring_create = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_create, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_create, ptr null, ptr @__traceiter_io_uring_create, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_create = internal constant ptr @__tracepoint_io_uring_create, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_register = internal constant [18 x i8] c"io_uring_register\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_register = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_register }, align 4
@__tracepoint_io_uring_register = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_register, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_register, ptr null, ptr @__traceiter_io_uring_register, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_register = internal constant ptr @__tracepoint_io_uring_register, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_file_get = internal constant [18 x i8] c"io_uring_file_get\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_file_get = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_file_get }, align 4
@__tracepoint_io_uring_file_get = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_file_get, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_file_get, ptr null, ptr @__traceiter_io_uring_file_get, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_file_get = internal constant ptr @__tracepoint_io_uring_file_get, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_queue_async_work = internal constant [26 x i8] c"io_uring_queue_async_work\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_queue_async_work = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_queue_async_work }, align 4
@__tracepoint_io_uring_queue_async_work = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_queue_async_work, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_queue_async_work, ptr null, ptr @__traceiter_io_uring_queue_async_work, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_queue_async_work = internal constant ptr @__tracepoint_io_uring_queue_async_work, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_defer = internal constant [15 x i8] c"io_uring_defer\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_defer = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_defer }, align 4
@__tracepoint_io_uring_defer = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_defer, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_defer, ptr null, ptr @__traceiter_io_uring_defer, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_defer = internal constant ptr @__tracepoint_io_uring_defer, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_link = internal constant [14 x i8] c"io_uring_link\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_link = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_link }, align 4
@__tracepoint_io_uring_link = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_link, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_link, ptr null, ptr @__traceiter_io_uring_link, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_link = internal constant ptr @__tracepoint_io_uring_link, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_cqring_wait = internal constant [21 x i8] c"io_uring_cqring_wait\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_cqring_wait = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_cqring_wait }, align 4
@__tracepoint_io_uring_cqring_wait = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_cqring_wait, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_cqring_wait, ptr null, ptr @__traceiter_io_uring_cqring_wait, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_cqring_wait = internal constant ptr @__tracepoint_io_uring_cqring_wait, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_fail_link = internal constant [19 x i8] c"io_uring_fail_link\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_fail_link = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_fail_link }, align 4
@__tracepoint_io_uring_fail_link = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_fail_link, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_fail_link, ptr null, ptr @__traceiter_io_uring_fail_link, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_fail_link = internal constant ptr @__tracepoint_io_uring_fail_link, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_complete = internal constant [18 x i8] c"io_uring_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_complete = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_complete }, align 4
@__tracepoint_io_uring_complete = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_complete, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_complete, ptr null, ptr @__traceiter_io_uring_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_complete = internal constant ptr @__tracepoint_io_uring_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_submit_sqe = internal constant [20 x i8] c"io_uring_submit_sqe\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_submit_sqe = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_submit_sqe }, align 4
@__tracepoint_io_uring_submit_sqe = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_submit_sqe, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_submit_sqe, ptr null, ptr @__traceiter_io_uring_submit_sqe, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_submit_sqe = internal constant ptr @__tracepoint_io_uring_submit_sqe, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_poll_arm = internal constant [18 x i8] c"io_uring_poll_arm\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_poll_arm = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_poll_arm }, align 4
@__tracepoint_io_uring_poll_arm = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_poll_arm, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_poll_arm, ptr null, ptr @__traceiter_io_uring_poll_arm, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_poll_arm = internal constant ptr @__tracepoint_io_uring_poll_arm, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_poll_wake = internal constant [19 x i8] c"io_uring_poll_wake\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_poll_wake = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_poll_wake }, align 4
@__tracepoint_io_uring_poll_wake = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_poll_wake, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_poll_wake, ptr null, ptr @__traceiter_io_uring_poll_wake, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_poll_wake = internal constant ptr @__tracepoint_io_uring_poll_wake, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_task_add = internal constant [18 x i8] c"io_uring_task_add\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_task_add = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_task_add }, align 4
@__tracepoint_io_uring_task_add = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_task_add, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_task_add, ptr null, ptr @__traceiter_io_uring_task_add, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_task_add = internal constant ptr @__tracepoint_io_uring_task_add, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_task_run = internal constant [18 x i8] c"io_uring_task_run\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_task_run = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_task_run }, align 4
@__tracepoint_io_uring_task_run = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_task_run, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_task_run, ptr null, ptr @__traceiter_io_uring_task_run, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_task_run = internal constant ptr @__tracepoint_io_uring_task_run, section "__tracepoints_ptrs", align 4
@__tpstrtab_io_uring_req_failed = internal constant [20 x i8] c"io_uring_req_failed\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_io_uring_req_failed = dso_local global %struct.static_call_key { ptr @__traceiter_io_uring_req_failed }, align 4
@__tracepoint_io_uring_req_failed = dso_local global %struct.tracepoint { ptr @__tpstrtab_io_uring_req_failed, %struct.static_key zeroinitializer, ptr @__SCK__tp_func_io_uring_req_failed, ptr null, ptr @__traceiter_io_uring_req_failed, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_io_uring_req_failed = internal constant ptr @__tracepoint_io_uring_req_failed, section "__tracepoints_ptrs", align 4
@str__io_uring__trace_system_name = internal constant [9 x i8] c"io_uring\00", align 1
@trace_event_fields_io_uring_create = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.4, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.8, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.9, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.10, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_create = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_create, ptr @perf_trace_io_uring_create, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_create, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_create, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_create, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_create = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_create, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_create = internal global [115 x i8] c"\22ring %p, fd %d sq size %d, cq size %d, flags %d\22, REC->ctx, REC->fd, REC->sq_entries, REC->cq_entries, REC->flags\00", align 1
@event_io_uring_create = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_create, %union.anon.5 { ptr @__tracepoint_io_uring_create }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_create }, ptr @print_fmt_io_uring_create, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_create = internal global ptr @event_io_uring_create, section "_ftrace_events", align 4
@trace_event_fields_io_uring_register = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.12, %union.anon.4 { %struct.anon { ptr @.str.13, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.12, %union.anon.4 { %struct.anon { ptr @.str.14, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.12, %union.anon.4 { %struct.anon { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.4 { %struct.anon { ptr @.str.17, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.4 { %struct.anon { ptr @.str.19, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_register = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_register, ptr @perf_trace_io_uring_register, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_register, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_register, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_register, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_register = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_register, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_register = internal global [153 x i8] c"\22ring %p, opcode %d, nr_user_files %d, nr_user_bufs %d, eventfd %d, ret %ld\22, REC->ctx, REC->opcode, REC->nr_files, REC->nr_bufs, REC->eventfd, REC->ret\00", align 1
@event_io_uring_register = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_register, %union.anon.5 { ptr @__tracepoint_io_uring_register }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_register }, ptr @print_fmt_io_uring_register, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_register = internal global ptr @event_io_uring_register, section "_ftrace_events", align 4
@trace_event_fields_io_uring_file_get = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.4, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_file_get = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_file_get, ptr @perf_trace_io_uring_file_get, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_file_get, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_file_get, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_file_get, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_file_get = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_file_get, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_file_get = internal global [36 x i8] c"\22ring %p, fd %d\22, REC->ctx, REC->fd\00", align 1
@event_io_uring_file_get = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_file_get, %union.anon.5 { ptr @__tracepoint_io_uring_file_get }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_file_get }, ptr @print_fmt_io_uring_file_get, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_file_get = internal global ptr @event_io_uring_file_get, section "_ftrace_events", align 4
@trace_event_fields_io_uring_queue_async_work = internal global [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.22, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.24, %union.anon.4 { %struct.anon { ptr @.str.25, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.26, %union.anon.4 { %struct.anon { ptr @.str.10, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_queue_async_work = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_queue_async_work, ptr @perf_trace_io_uring_queue_async_work, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_queue_async_work, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_queue_async_work, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_queue_async_work, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_queue_async_work = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_queue_async_work, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_queue_async_work = internal global [125 x i8] c"\22ring %p, request %p, flags %d, %s queue, work %p\22, REC->ctx, REC->req, REC->flags, REC->rw ? \22hashed\22 : \22normal\22, REC->work\00", align 1
@event_io_uring_queue_async_work = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_queue_async_work, %union.anon.5 { ptr @__tracepoint_io_uring_queue_async_work }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_queue_async_work }, ptr @print_fmt_io_uring_queue_async_work, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_queue_async_work = internal global ptr @event_io_uring_queue_async_work, section "_ftrace_events", align 4
@trace_event_fields_io_uring_defer = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.4 { %struct.anon { ptr @.str.31, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_defer = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_defer, ptr @perf_trace_io_uring_defer, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_defer, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_defer, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_defer, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_defer = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_defer, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_defer = internal global [68 x i8] c"\22ring %p, request %p user_data %llu\22, REC->ctx, REC->req, REC->data\00", align 1
@event_io_uring_defer = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_defer, %union.anon.5 { ptr @__tracepoint_io_uring_defer }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_defer }, ptr @print_fmt_io_uring_defer, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_defer = internal global ptr @event_io_uring_defer, section "_ftrace_events", align 4
@trace_event_fields_io_uring_link = internal global [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_link = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_link, ptr @perf_trace_io_uring_link, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_link, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_link, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_link, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_link = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_link, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_link = internal global [75 x i8] c"\22ring %p, request %p linked after %p\22, REC->ctx, REC->req, REC->target_req\00", align 1
@event_io_uring_link = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_link, %union.anon.5 { ptr @__tracepoint_io_uring_link }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_link }, ptr @print_fmt_io_uring_link, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_link = internal global ptr @event_io_uring_link, section "_ftrace_events", align 4
@trace_event_fields_io_uring_cqring_wait = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.35, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_cqring_wait = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_cqring_wait, ptr @perf_trace_io_uring_cqring_wait, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_cqring_wait, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_cqring_wait, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_cqring_wait, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_cqring_wait = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_cqring_wait, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_cqring_wait = internal global [52 x i8] c"\22ring %p, min_events %d\22, REC->ctx, REC->min_events\00", align 1
@event_io_uring_cqring_wait = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_cqring_wait, %union.anon.5 { ptr @__tracepoint_io_uring_cqring_wait }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_cqring_wait }, ptr @print_fmt_io_uring_cqring_wait, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_cqring_wait = internal global ptr @event_io_uring_cqring_wait, section "_ftrace_events", align 4
@trace_event_fields_io_uring_fail_link = internal global [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_fail_link = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_fail_link, ptr @perf_trace_io_uring_fail_link, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_fail_link, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_fail_link, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_fail_link, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_fail_link = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_fail_link, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_fail_link = internal global [43 x i8] c"\22request %p, link %p\22, REC->req, REC->link\00", align 1
@event_io_uring_fail_link = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_fail_link, %union.anon.5 { ptr @__tracepoint_io_uring_fail_link }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_fail_link }, ptr @print_fmt_io_uring_fail_link, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_fail_link = internal global ptr @event_io_uring_fail_link, section "_ftrace_events", align 4
@trace_event_fields_io_uring_complete = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.41, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.12, %union.anon.4 { %struct.anon { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_complete = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_complete, ptr @perf_trace_io_uring_complete, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_complete, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_complete, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_complete, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_complete = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_complete, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_complete = internal global [119 x i8] c"\22ring %p, user_data 0x%llx, result %d, cflags %x\22, REC->ctx, (unsigned long long)REC->user_data, REC->res, REC->cflags\00", align 1
@event_io_uring_complete = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_complete, %union.anon.5 { ptr @__tracepoint_io_uring_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_complete }, ptr @print_fmt_io_uring_complete, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_complete = internal global ptr @event_io_uring_complete, section "_ftrace_events", align 4
@trace_event_fields_io_uring_submit_sqe = internal global [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.10, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.4 { %struct.anon { ptr @.str.45, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.4 { %struct.anon { ptr @.str.46, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_submit_sqe = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_submit_sqe, ptr @perf_trace_io_uring_submit_sqe, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_submit_sqe, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_submit_sqe, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_submit_sqe, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_submit_sqe = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_submit_sqe, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_submit_sqe = internal global [194 x i8] c"\22ring %p, req %p, op %d, data 0x%llx, flags %u, non block %d, sq_thread %d\22, REC->ctx, REC->req, REC->opcode, (unsigned long long)REC->user_data, REC->flags, REC->force_nonblock, REC->sq_thread\00", align 1
@event_io_uring_submit_sqe = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_submit_sqe, %union.anon.5 { ptr @__tracepoint_io_uring_submit_sqe }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_submit_sqe }, ptr @print_fmt_io_uring_submit_sqe, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_submit_sqe = internal global ptr @event_io_uring_submit_sqe, section "_ftrace_events", align 4
@trace_event_fields_io_uring_poll_arm = internal global [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.49, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_poll_arm = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_poll_arm, ptr @perf_trace_io_uring_poll_arm, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_poll_arm, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_poll_arm, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_poll_arm, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_poll_arm = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_poll_arm, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_poll_arm = internal global [156 x i8] c"\22ring %p, req %p, op %d, data 0x%llx, mask 0x%x, events 0x%x\22, REC->ctx, REC->req, REC->opcode, (unsigned long long) REC->user_data, REC->mask, REC->events\00", align 1
@event_io_uring_poll_arm = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_poll_arm, %union.anon.5 { ptr @__tracepoint_io_uring_poll_arm }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_poll_arm }, ptr @print_fmt_io_uring_poll_arm, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_poll_arm = internal global ptr @event_io_uring_poll_arm, section "_ftrace_events", align 4
@trace_event_fields_io_uring_poll_wake = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_poll_wake = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_poll_wake, ptr @perf_trace_io_uring_poll_wake, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_poll_wake, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_poll_wake, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_poll_wake, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_poll_wake = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_poll_wake, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_poll_wake = internal global [112 x i8] c"\22ring %p, op %d, data 0x%llx, mask 0x%x\22, REC->ctx, REC->opcode, (unsigned long long) REC->user_data, REC->mask\00", align 1
@event_io_uring_poll_wake = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_poll_wake, %union.anon.5 { ptr @__tracepoint_io_uring_poll_wake }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_poll_wake }, ptr @print_fmt_io_uring_poll_wake, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_poll_wake = internal global ptr @event_io_uring_poll_wake, section "_ftrace_events", align 4
@trace_event_fields_io_uring_task_add = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_task_add = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_task_add, ptr @perf_trace_io_uring_task_add, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_task_add, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_task_add, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_task_add, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_task_add = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_task_add, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_task_add = internal global [110 x i8] c"\22ring %p, op %d, data 0x%llx, mask %x\22, REC->ctx, REC->opcode, (unsigned long long) REC->user_data, REC->mask\00", align 1
@event_io_uring_task_add = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_task_add, %union.anon.5 { ptr @__tracepoint_io_uring_task_add }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_task_add }, ptr @print_fmt_io_uring_task_add, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_task_add = internal global ptr @event_io_uring_task_add, section "_ftrace_events", align 4
@trace_event_fields_io_uring_task_run = internal global [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.6, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.5, %union.anon.4 { %struct.anon { ptr @.str.23, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_task_run = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_task_run, ptr @perf_trace_io_uring_task_run, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_task_run, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_task_run, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_task_run, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_task_run = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_task_run, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_task_run = internal global [108 x i8] c"\22ring %p, req %p, op %d, data 0x%llx\22, REC->ctx, REC->req, REC->opcode, (unsigned long long) REC->user_data\00", align 1
@event_io_uring_task_run = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_task_run, %union.anon.5 { ptr @__tracepoint_io_uring_task_run }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_task_run }, ptr @print_fmt_io_uring_task_run, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_task_run = internal global ptr @event_io_uring_task_run, section "_ftrace_events", align 4
@trace_event_fields_io_uring_req_failed = internal global [15 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.13, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.10, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.44, %union.anon.4 { %struct.anon { ptr @.str.54, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.55, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.56, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.57, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.58, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.59, %union.anon.4 { %struct.anon { ptr @.str.60, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.59, %union.anon.4 { %struct.anon { ptr @.str.61, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.7, %union.anon.4 { %struct.anon { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.63, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.39, %union.anon.4 { %struct.anon { ptr @.str.64, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.3, %union.anon.4 { %struct.anon { ptr @.str.65, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], align 4
@event_class_io_uring_req_failed = internal global %struct.trace_event_class { ptr @str__io_uring__trace_system_name, ptr @trace_event_raw_event_io_uring_req_failed, ptr @perf_trace_io_uring_req_failed, ptr @trace_event_reg, ptr @trace_event_fields_io_uring_req_failed, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_io_uring_req_failed, i64 24), ptr getelementptr (i8, ptr @event_class_io_uring_req_failed, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_io_uring_req_failed = internal global %struct.trace_event_functions { ptr @trace_raw_output_io_uring_req_failed, ptr null, ptr null, ptr null }, align 4
@print_fmt_io_uring_req_failed = internal global [452 x i8] c"\22op %d, flags=0x%x, prio=%d, off=%llu, addr=%llu, len=%u, rw_flags=0x%x, user_data=0x%llx, buf_index=%d, personality=%d, file_index=%d, pad=0x%llx/%llx, error=%d\22, REC->opcode, REC->flags, REC->ioprio, (unsigned long long)REC->off, (unsigned long long) REC->addr, REC->len, REC->op_flags, (unsigned long long) REC->user_data, REC->buf_index, REC->personality, REC->file_index, (unsigned long long) REC->pad1, (unsigned long long) REC->pad2, REC->error\00", align 1
@event_io_uring_req_failed = internal global %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_io_uring_req_failed, %union.anon.5 { ptr @__tracepoint_io_uring_req_failed }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_io_uring_req_failed }, ptr @print_fmt_io_uring_req_failed, ptr null, %union.anon.7 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, align 4
@__event_io_uring_req_failed = internal global ptr @event_io_uring_req_failed, section "_ftrace_events", align 4
@io_uring_fops = internal constant %struct.file_operations { ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @io_uring_poll, ptr null, ptr null, ptr @io_uring_mmap, i32 0, ptr null, ptr null, ptr @io_uring_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @io_uring_show_fdinfo, ptr null, ptr null, ptr null }, align 4
@__kstrtab_io_uring_get_socket = external dso_local constant [0 x i8], align 1
@__kstrtabns_io_uring_get_socket = external dso_local constant [0 x i8], align 1
@__ksymtab_io_uring_get_socket = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @io_uring_get_socket to i32), ptr @__kstrtab_io_uring_get_socket, ptr @__kstrtabns_io_uring_get_socket }, section "___ksymtab+io_uring_get_socket", align 4
@__io_uring_free.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = private unnamed_addr constant [14 x i8] c"fs/io_uring.c\00", align 1
@__io_uring_free.__already_done.1 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__io_uring_free.__already_done.2 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__initcall__kmod_io_uring__823_11250_io_uring_init6 = internal global ptr @io_uring_init, section ".initcall6.init", align 4
@.str.3 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"void *\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"ctx\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"sq_entries\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"cq_entries\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.11 = private unnamed_addr constant [49 x i8] c"ring %p, fd %d sq size %d, cq size %d, flags %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"unsigned\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"opcode\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"nr_files\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"nr_bufs\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"bool\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"eventfd\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"long\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"ret\00", align 1
@.str.20 = private unnamed_addr constant [76 x i8] c"ring %p, opcode %d, nr_user_files %d, nr_user_bufs %d, eventfd %d, ret %ld\0A\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"ring %p, fd %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"req\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"struct io_wq_work *\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"work\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.27 = private unnamed_addr constant [50 x i8] c"ring %p, request %p, flags %d, %s queue, work %p\0A\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"hashed\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"unsigned long long\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.32 = private unnamed_addr constant [36 x i8] c"ring %p, request %p user_data %llu\0A\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"target_req\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"ring %p, request %p linked after %p\0A\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"min_events\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"ring %p, min_events %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"request %p, link %p\0A\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"user_data\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"res\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"cflags\00", align 1
@.str.43 = private unnamed_addr constant [49 x i8] c"ring %p, user_data 0x%llx, result %d, cflags %x\0A\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"u8\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"force_nonblock\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"sq_thread\00", align 1
@.str.47 = private unnamed_addr constant [75 x i8] c"ring %p, req %p, op %d, data 0x%llx, flags %u, non block %d, sq_thread %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"mask\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"events\00", align 1
@.str.50 = private unnamed_addr constant [61 x i8] c"ring %p, req %p, op %d, data 0x%llx, mask 0x%x, events 0x%x\0A\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"ring %p, op %d, data 0x%llx, mask 0x%x\0A\00", align 1
@.str.52 = private unnamed_addr constant [38 x i8] c"ring %p, op %d, data 0x%llx, mask %x\0A\00", align 1
@.str.53 = private unnamed_addr constant [37 x i8] c"ring %p, req %p, op %d, data 0x%llx\0A\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"ioprio\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"addr\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"op_flags\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"buf_index\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"personality\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"file_index\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"pad1\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"pad2\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.66 = private unnamed_addr constant [162 x i8] c"op %d, flags=0x%x, prio=%d, off=%llu, addr=%llu, len=%u, rw_flags=0x%x, user_data=0x%llx, buf_index=%d, personality=%d, file_index=%d, pad=0x%llx/%llx, error=%d\0A\00", align 1
@io_uring_cancel_generic.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@percpu_counter_batch = external dso_local local_unnamed_addr global i32, align 4
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [3 x [14 x ptr]], align 4
@req_ref_put_and_test.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_op_defs = internal unnamed_addr constant [40 x { i8, i8, i16 }] [{ i8, i8, i16 } zeroinitializer, { i8, i8, i16 } { i8 -37, i8 2, i16 144 }, { i8, i8, i16 } { i8 -81, i8 2, i16 144 }, { i8, i8, i16 } { i8 1, i8 2, i16 0 }, { i8, i8, i16 } { i8 27, i8 2, i16 144 }, { i8, i8, i16 } { i8 47, i8 2, i16 144 }, { i8, i8, i16 } { i8 9, i8 2, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 1, i8 2, i16 0 }, { i8, i8, i16 } { i8 -87, i8 0, i16 256 }, { i8, i8, i16 } { i8 -39, i8 0, i16 256 }, { i8, i8, i16 } { i8 0, i8 2, i16 80 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 25, i8 0, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 80 }, { i8, i8, i16 } { i8 -87, i8 0, i16 128 }, { i8, i8, i16 } { i8 1, i8 0, i16 0 }, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 91, i8 2, i16 144 }, { i8, i8, i16 } { i8 47, i8 2, i16 144 }, { i8, i8, i16 } { i8 1, i8 2, i16 0 }, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } { i8 41, i8 2, i16 0 }, { i8, i8, i16 } { i8 89, i8 2, i16 0 }, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } { i8 8, i8 2, i16 0 }, { i8, i8, i16 } { i8 13, i8 2, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 0, i8 2, i16 0 }, { i8, i8, i16 } { i8 13, i8 2, i16 0 }, { i8, i8, i16 } { i8 1, i8 0, i16 0 }, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } zeroinitializer, { i8, i8, i16 } zeroinitializer], align 4
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.69 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@io_alloc_async_data.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_req_prep_async.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_req_prep_async.__already_done.71 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.72 = private unnamed_addr constant [40 x i8] c"\014io_uring: prep_async() bad opcode %d\0A\00", align 1
@io_queue_async_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_poll_check_events.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_timeout_get_clock.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@req_ref_inc_not_zero.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_try_cancel_userdata.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@io_rsrc_node_switch.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_rsrc_node_switch.__already_done.73 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_mmap_lock_start_locking = external dso_local global %struct.tracepoint, align 4
@__tracepoint_mmap_lock_acquire_returned = external dso_local global %struct.tracepoint, align 4
@__tracepoint_mmap_lock_released = external dso_local global %struct.tracepoint, align 4
@__io_prep_linked_timeout.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_req_task_work_add.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_uring_del_tctx_node.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_uring_del_tctx_node.__already_done.74 = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_uring_alloc_task_context.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@io_uring_alloc_task_context.__key.75 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"&tctx->wait\00", align 1
@io_init_wq_offload.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.77 = private unnamed_addr constant [12 x i8] c"&hash->wait\00", align 1
@req_ref_get.__already_done.78 = internal unnamed_addr global i1 false, section ".data.once", align 1
@__num_online_cpus = external dso_local global %struct.atomic_t, align 4
@req_cachep = internal unnamed_addr global ptr null, align 4
@io_req_prep.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.79 = private unnamed_addr constant [33 x i8] c"\014io_uring: unhandled opcode %d\0A\00", align 1
@io_timeout_prep.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.80 = private unnamed_addr constant [29 x i8] c"include/linux/sched/signal.h\00", align 1
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@system_unbound_wq = external dso_local local_unnamed_addr global ptr, align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 64
@io_ring_exit_work.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_ring_exit_work.__already_done.81 = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_ring_exit_work.__already_done.82 = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_sq_thread_park.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_sq_thread_unpark.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.83 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@io_ring_ctx_free.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_ring_ctx_free.__already_done.84 = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_ring_ctx_free.__already_done.85 = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_put_sq_data.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_sq_thread_stop.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_sq_thread_stop.__already_done.86 = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.87 = private unnamed_addr constant [14 x i8] c"SqMask:\090x%x\0A\00", align 1
@.str.88 = private unnamed_addr constant [12 x i8] c"SqHead:\09%u\0A\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"SqTail:\09%u\0A\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"CachedSqHead:\09%u\0A\00", align 1
@.str.91 = private unnamed_addr constant [14 x i8] c"CqMask:\090x%x\0A\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"CqHead:\09%u\0A\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"CqTail:\09%u\0A\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"CachedCqTail:\09%u\0A\00", align 1
@.str.95 = private unnamed_addr constant [10 x i8] c"SQEs:\09%u\0A\00", align 1
@.str.96 = private unnamed_addr constant [49 x i8] c"%5u: opcode:%d, fd:%d, flags:%x, user_data:%llu\0A\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"CQEs:\09%u\0A\00", align 1
@.str.98 = private unnamed_addr constant [38 x i8] c"%5u: user_data:%llu, res:%d, flag:%x\0A\00", align 1
@.str.99 = private unnamed_addr constant [14 x i8] c"SqThread:\09%d\0A\00", align 1
@.str.100 = private unnamed_addr constant [17 x i8] c"SqThreadCpu:\09%d\0A\00", align 1
@.str.101 = private unnamed_addr constant [15 x i8] c"UserFiles:\09%u\0A\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"%5u: %s\0A\00", align 1
@.str.103 = private unnamed_addr constant [13 x i8] c"%5u: <none>\0A\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"UserBufs:\09%u\0A\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"%5u: 0x%llx/%u\0A\00", align 1
@.str.106 = private unnamed_addr constant [16 x i8] c"Personalities:\0A\00", align 1
@.str.107 = private unnamed_addr constant [11 x i8] c"PollList:\0A\00", align 1
@.str.108 = private unnamed_addr constant [24 x i8] c"  op=%d, task_works=%d\0A\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"CqOverflowList:\0A\00", align 1
@.str.110 = private unnamed_addr constant [36 x i8] c"  user_data=%llu, res=%d, flags=%x\0A\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"%5d\0A\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"\09Uid:\09\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c"\09\09\00", align 1
@.str.114 = private unnamed_addr constant [8 x i8] c"\0A\09Gid:\09\00", align 1
@.str.115 = private unnamed_addr constant [11 x i8] c"\0A\09Groups:\09\00", align 1
@.str.116 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.117 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"\0A\09CapEff:\09\00", align 1
@overflowuid = external dso_local local_unnamed_addr global i32, align 4
@overflowgid = external dso_local local_unnamed_addr global i32, align 4
@io_ring_ctx_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.119 = private unnamed_addr constant [18 x i8] c"&ctx->sqo_sq_wait\00", align 1
@io_ring_ctx_alloc.__key.120 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"&ctx->uring_lock\00", align 1
@io_ring_ctx_alloc.__key.122 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.123 = private unnamed_addr constant [14 x i8] c"&ctx->cq_wait\00", align 1
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@io_get_sq_data.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"&sqd->lock\00", align 1
@io_get_sq_data.__key.125 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.126 = private unnamed_addr constant [11 x i8] c"&sqd->wait\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"iou-sqp-%d\00", align 1
@cpu_bit_bitmap = external dso_local constant [33 x [1 x i32]], align 4
@init_net = external dso_local global %struct.net, align 64
@.str.128 = private unnamed_addr constant [11 x i8] c"[io_uring]\00", align 1
@io_sqe_buffers_register.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@io_register_iowq_max_workers.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"io_kiocb\00", align 1
@llvm.compiler.used = appending global [77 x ptr] [ptr @__event_io_uring_complete, ptr @__event_io_uring_cqring_wait, ptr @__event_io_uring_create, ptr @__event_io_uring_defer, ptr @__event_io_uring_fail_link, ptr @__event_io_uring_file_get, ptr @__event_io_uring_link, ptr @__event_io_uring_poll_arm, ptr @__event_io_uring_poll_wake, ptr @__event_io_uring_queue_async_work, ptr @__event_io_uring_register, ptr @__event_io_uring_req_failed, ptr @__event_io_uring_submit_sqe, ptr @__event_io_uring_task_add, ptr @__event_io_uring_task_run, ptr @__initcall__kmod_io_uring__823_11250_io_uring_init6, ptr @__ksymtab_io_uring_get_socket, ptr @__tracepoint_io_uring_complete, ptr @__tracepoint_io_uring_cqring_wait, ptr @__tracepoint_io_uring_create, ptr @__tracepoint_io_uring_defer, ptr @__tracepoint_io_uring_fail_link, ptr @__tracepoint_io_uring_file_get, ptr @__tracepoint_io_uring_link, ptr @__tracepoint_io_uring_poll_arm, ptr @__tracepoint_io_uring_poll_wake, ptr @__tracepoint_io_uring_queue_async_work, ptr @__tracepoint_io_uring_register, ptr @__tracepoint_io_uring_req_failed, ptr @__tracepoint_io_uring_submit_sqe, ptr @__tracepoint_io_uring_task_add, ptr @__tracepoint_io_uring_task_run, ptr @__tracepoint_ptr_io_uring_complete, ptr @__tracepoint_ptr_io_uring_cqring_wait, ptr @__tracepoint_ptr_io_uring_create, ptr @__tracepoint_ptr_io_uring_defer, ptr @__tracepoint_ptr_io_uring_fail_link, ptr @__tracepoint_ptr_io_uring_file_get, ptr @__tracepoint_ptr_io_uring_link, ptr @__tracepoint_ptr_io_uring_poll_arm, ptr @__tracepoint_ptr_io_uring_poll_wake, ptr @__tracepoint_ptr_io_uring_queue_async_work, ptr @__tracepoint_ptr_io_uring_register, ptr @__tracepoint_ptr_io_uring_req_failed, ptr @__tracepoint_ptr_io_uring_submit_sqe, ptr @__tracepoint_ptr_io_uring_task_add, ptr @__tracepoint_ptr_io_uring_task_run, ptr @event_class_io_uring_complete, ptr @event_class_io_uring_cqring_wait, ptr @event_class_io_uring_create, ptr @event_class_io_uring_defer, ptr @event_class_io_uring_fail_link, ptr @event_class_io_uring_file_get, ptr @event_class_io_uring_link, ptr @event_class_io_uring_poll_arm, ptr @event_class_io_uring_poll_wake, ptr @event_class_io_uring_queue_async_work, ptr @event_class_io_uring_register, ptr @event_class_io_uring_req_failed, ptr @event_class_io_uring_submit_sqe, ptr @event_class_io_uring_task_add, ptr @event_class_io_uring_task_run, ptr @event_io_uring_complete, ptr @event_io_uring_cqring_wait, ptr @event_io_uring_create, ptr @event_io_uring_defer, ptr @event_io_uring_fail_link, ptr @event_io_uring_file_get, ptr @event_io_uring_link, ptr @event_io_uring_poll_arm, ptr @event_io_uring_poll_wake, ptr @event_io_uring_queue_async_work, ptr @event_io_uring_register, ptr @event_io_uring_req_failed, ptr @event_io_uring_submit_sqe, ptr @event_io_uring_task_add, ptr @event_io_uring_task_run], section "llvm.metadata"

@sys_io_uring_enter = dso_local alias i32 (i32, i32, i32, i32, ptr, i32), ptr @__se_sys_io_uring_enter
@sys_io_uring_setup = dso_local alias i32 (i32, ptr), ptr @__se_sys_io_uring_setup
@sys_io_uring_register = dso_local alias i32 (i32, i32, ptr, i32), ptr @__se_sys_io_uring_register

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_create(ptr nocapture readnone %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_create, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #21
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_register(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_register, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6) #21
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_file_get(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_file_get, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #21
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_queue_async_work(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_queue_async_work, i32 0, i32 7), align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %9, %6
  %10 = phi ptr [ %14, %9 ], [ %7, %6 ]
  %11 = load volatile ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.tracepoint_func, ptr %10, i32 0, i32 1
  %13 = load ptr, ptr %12, align 4
  tail call void %11(ptr noundef %13, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) #21
  %14 = getelementptr %struct.tracepoint_func, ptr %10, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %9

17:                                               ; preds = %9, %6
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_defer(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_defer, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, i64 noundef %3) #21
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_link(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_link, i32 0, i32 7), align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %7, %4
  %8 = phi ptr [ %12, %7 ], [ %5, %4 ]
  %9 = load volatile ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.tracepoint_func, ptr %8, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  tail call void %9(ptr noundef %11, ptr noundef %1, ptr noundef %2, ptr noundef %3) #21
  %12 = getelementptr %struct.tracepoint_func, ptr %8, i32 1
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_cqring_wait(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_cqring_wait, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #21
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_fail_link(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_fail_link, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, ptr noundef %2) #21
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_complete(ptr nocapture readnone %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #21
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_submit_sqe(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i1 noundef zeroext %6, i1 noundef zeroext %7) #0 {
  %9 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_submit_sqe, i32 0, i32 7), align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %11, %8
  %12 = phi ptr [ %16, %11 ], [ %9, %8 ]
  %13 = load volatile ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.tracepoint_func, ptr %12, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  tail call void %13(ptr noundef %15, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i1 noundef zeroext %6, i1 noundef zeroext %7) #21
  %16 = getelementptr %struct.tracepoint_func, ptr %12, i32 1
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %11

19:                                               ; preds = %11, %8
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_poll_arm(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_poll_arm, i32 0, i32 7), align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %10, %7
  %11 = phi ptr [ %15, %10 ], [ %8, %7 ]
  %12 = load volatile ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.tracepoint_func, ptr %11, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  tail call void %12(ptr noundef %14, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i32 noundef %6) #21
  %15 = getelementptr %struct.tracepoint_func, ptr %11, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %10

18:                                               ; preds = %10, %7
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_poll_wake(ptr nocapture readnone %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_poll_wake, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #21
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_task_add(ptr nocapture readnone %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #21
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_task_run(ptr nocapture readnone %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_run, i32 0, i32 7), align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %8, %5
  %9 = phi ptr [ %13, %8 ], [ %6, %5 ]
  %10 = load volatile ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.tracepoint_func, ptr %9, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  tail call void %10(ptr noundef %12, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4) #21
  %13 = getelementptr %struct.tracepoint_func, ptr %9, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %8

16:                                               ; preds = %8, %5
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__traceiter_io_uring_req_failed(ptr nocapture readnone %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_req_failed, i32 0, i32 7), align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %6, %3
  %7 = phi ptr [ %11, %6 ], [ %4, %3 ]
  %8 = load volatile ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.tracepoint_func, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  tail call void %8(ptr noundef %10, ptr noundef %1, i32 noundef %2) #21
  %11 = getelementptr %struct.tracepoint_func, ptr %7, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %6

14:                                               ; preds = %6, %3
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_create(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %16, label %26, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 28) #21
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %18, i32 0, i32 1
  store i32 %1, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %18, i32 0, i32 2
  store ptr %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %18, i32 0, i32 3
  store i32 %3, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %18, i32 0, i32 4
  store i32 %4, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %18, i32 0, i32 5
  store i32 %5, ptr %25, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #21
  br label %26

26:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_create(ptr noundef %0, i32 noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #6, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %7, ptr noundef nonnull %8) #21
  %25 = icmp eq ptr %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #21
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %24, i32 0, i32 1
  store i32 %1, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %24, i32 0, i32 2
  store ptr %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %24, i32 0, i32 3
  store i32 %3, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %24, i32 0, i32 4
  store i32 %4, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %24, i32 0, i32 5
  store i32 %5, ptr %41, align 4
  %42 = load i32, ptr %8, align 4
  %43 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 28, i32 noundef %42, ptr noundef %0, i64 noundef 1, ptr noundef %43, ptr noundef %16, ptr noundef null) #21
  br label %44

44:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_register(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca %struct.trace_event_buffer, align 4
  %9 = zext i1 %5 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, i8 0, i32 24, i1 false), !annotation !9
  %10 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 704
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14, !prof !10

14:                                               ; preds = %7
  %15 = and i32 %11, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19, !prof !11

17:                                               ; preds = %14
  %18 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %18, label %29, label %19

19:                                               ; preds = %17, %14, %7
  %20 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %8, ptr noundef %0, i32 noundef 32) #21
  %21 = icmp eq ptr %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 1
  store ptr %1, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 2
  store i32 %2, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 3
  store i32 %3, ptr %25, align 4
  %26 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 4
  store i32 %4, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 5
  store i8 %9, ptr %27, align 4
  %28 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %20, i32 0, i32 6
  store i32 %6, ptr %28, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %8) #21
  br label %29

29:                                               ; preds = %22, %19, %17
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_register(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 4
  %9 = alloca i32, align 4
  %10 = zext i1 %5 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  store ptr null, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store i32 0, ptr %9, align 4, !annotation !9
  %11 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %12 = load ptr, ptr %11, align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %15 = inttoptr i32 %14 to ptr
  %16 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %15) #6, !srcloc !12
  %17 = add i32 %16, %13
  %18 = inttoptr i32 %17 to ptr
  %19 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %20 = load volatile ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %7
  %23 = load volatile ptr, ptr %18, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %47, label %25

25:                                               ; preds = %22, %7
  %26 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %8, ptr noundef nonnull %9) #21
  %27 = icmp eq ptr %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %25
  %29 = load ptr, ptr %8, align 4
  %30 = call ptr @llvm.returnaddress(i32 0) #21
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %29, i32 0, i32 15
  store i32 %31, ptr %32, align 4
  %33 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %34 = ptrtoint ptr %33 to i32
  %35 = getelementptr [18 x i32], ptr %29, i32 0, i32 11
  store i32 %34, ptr %35, align 4
  %36 = call i32 @llvm.read_register.i32(metadata !0) #21
  %37 = getelementptr [18 x i32], ptr %29, i32 0, i32 13
  store i32 %36, ptr %37, align 4
  %38 = getelementptr [18 x i32], ptr %29, i32 0, i32 16
  store i32 19, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 1
  store ptr %1, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 2
  store i32 %2, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 3
  store i32 %3, ptr %41, align 4
  %42 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 4
  store i32 %4, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 5
  store i8 %10, ptr %43, align 4
  %44 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %26, i32 0, i32 6
  store i32 %6, ptr %44, align 4
  %45 = load i32, ptr %9, align 4
  %46 = load ptr, ptr %8, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %26, i32 noundef 36, i32 noundef %45, ptr noundef %0, i64 noundef 1, ptr noundef %46, ptr noundef %18, ptr noundef null) #21
  br label %47

47:                                               ; preds = %28, %25, %22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_file_get(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %13, label %20, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #21
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %15, i32 0, i32 1
  store ptr %1, ptr %18, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %15, i32 0, i32 2
  store i32 %2, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #21
  br label %20

20:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_file_get(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #6, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #21
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #21
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %21, i32 0, i32 1
  store ptr %1, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %21, i32 0, i32 2
  store i32 %2, ptr %35, align 4
  %36 = load i32, ptr %5, align 4
  %37 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %36, ptr noundef %0, i64 noundef 1, ptr noundef %37, ptr noundef %13, ptr noundef null) #21
  br label %38

38:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_queue_async_work(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %7, i8 0, i32 24, i1 false), !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 704
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12, !prof !10

12:                                               ; preds = %6
  %13 = and i32 %9, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17, !prof !11

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %16, label %26, label %17

17:                                               ; preds = %15, %12, %6
  %18 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %7, ptr noundef %0, i32 noundef 28) #21
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %18, i32 0, i32 1
  store ptr %1, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %18, i32 0, i32 2
  store i32 %2, ptr %22, align 4
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %18, i32 0, i32 3
  store ptr %3, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %18, i32 0, i32 4
  store ptr %4, ptr %24, align 4
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %18, i32 0, i32 5
  store i32 %5, ptr %25, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %7) #21
  br label %26

26:                                               ; preds = %20, %17, %15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_queue_async_work(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) #0 {
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  store i32 0, ptr %8, align 4, !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %13 = inttoptr i32 %12 to ptr
  %14 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %13) #6, !srcloc !12
  %15 = add i32 %14, %11
  %16 = inttoptr i32 %15 to ptr
  %17 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %18 = load volatile ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %23

20:                                               ; preds = %6
  %21 = load volatile ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %44, label %23

23:                                               ; preds = %20, %6
  %24 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %7, ptr noundef nonnull %8) #21
  %25 = icmp eq ptr %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %23
  %27 = load ptr, ptr %7, align 4
  %28 = call ptr @llvm.returnaddress(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %27, i32 0, i32 15
  store i32 %29, ptr %30, align 4
  %31 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %32 = ptrtoint ptr %31 to i32
  %33 = getelementptr [18 x i32], ptr %27, i32 0, i32 11
  store i32 %32, ptr %33, align 4
  %34 = call i32 @llvm.read_register.i32(metadata !0) #21
  %35 = getelementptr [18 x i32], ptr %27, i32 0, i32 13
  store i32 %34, ptr %35, align 4
  %36 = getelementptr [18 x i32], ptr %27, i32 0, i32 16
  store i32 19, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %24, i32 0, i32 1
  store ptr %1, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %24, i32 0, i32 2
  store i32 %2, ptr %38, align 4
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %24, i32 0, i32 3
  store ptr %3, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %24, i32 0, i32 4
  store ptr %4, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %24, i32 0, i32 5
  store i32 %5, ptr %41, align 4
  %42 = load i32, ptr %8, align 4
  %43 = load ptr, ptr %7, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %24, i32 noundef 28, i32 noundef %42, ptr noundef %0, i64 noundef 1, ptr noundef %43, ptr noundef %16, ptr noundef null) #21
  br label %44

44:                                               ; preds = %26, %23, %20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_defer(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 24) #21
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %16, i32 0, i32 1
  store ptr %1, ptr %19, align 8
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %16, i32 0, i32 2
  store ptr %2, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %16, i32 0, i32 3
  store i64 %3, ptr %21, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #21
  br label %22

22:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_defer(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #6, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %5, ptr noundef nonnull %6) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #21
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #21
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %22, i32 0, i32 1
  store ptr %1, ptr %35, align 8
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %22, i32 0, i32 2
  store ptr %2, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %22, i32 0, i32 3
  store i64 %3, ptr %37, align 8
  %38 = load i32, ptr %6, align 4
  %39 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 28, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %14, ptr noundef null) #21
  br label %40

40:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_link(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %5, i8 0, i32 24, i1 false), !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 704
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10, !prof !10

10:                                               ; preds = %4
  %11 = and i32 %7, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15, !prof !11

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %10, %4
  %16 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %5, ptr noundef %0, i32 noundef 20) #21
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %16, i32 0, i32 1
  store ptr %1, ptr %19, align 4
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %16, i32 0, i32 2
  store ptr %2, ptr %20, align 4
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %16, i32 0, i32 3
  store ptr %3, ptr %21, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %5) #21
  br label %22

22:                                               ; preds = %18, %15, %13
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_link(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #0 {
  %5 = alloca ptr, align 4
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store ptr null, ptr %5, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store i32 0, ptr %6, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %8 = load ptr, ptr %7, align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #6, !srcloc !12
  %13 = add i32 %12, %9
  %14 = inttoptr i32 %13 to ptr
  %15 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %16 = load volatile ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load volatile ptr, ptr %14, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %18, %4
  %22 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %5, ptr noundef nonnull %6) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %21
  %25 = load ptr, ptr %5, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #21
  %27 = ptrtoint ptr %26 to i32
  %28 = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  store i32 %27, ptr %28, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  store i32 %30, ptr %31, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !0) #21
  %33 = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  store i32 %32, ptr %33, align 4
  %34 = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  store i32 19, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %22, i32 0, i32 1
  store ptr %1, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %22, i32 0, i32 2
  store ptr %2, ptr %36, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %22, i32 0, i32 3
  store ptr %3, ptr %37, align 4
  %38 = load i32, ptr %6, align 4
  %39 = load ptr, ptr %5, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %22, i32 noundef 20, i32 noundef %38, ptr noundef %0, i64 noundef 1, ptr noundef %39, ptr noundef %14, ptr noundef null) #21
  br label %40

40:                                               ; preds = %24, %21, %18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_cqring_wait(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %13, label %20, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #21
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %15, i32 0, i32 1
  store ptr %1, ptr %18, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %15, i32 0, i32 2
  store i32 %2, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #21
  br label %20

20:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_cqring_wait(ptr noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #6, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #21
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #21
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %21, i32 0, i32 1
  store ptr %1, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %21, i32 0, i32 2
  store i32 %2, ptr %35, align 4
  %36 = load i32, ptr %5, align 4
  %37 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %36, ptr noundef %0, i64 noundef 1, ptr noundef %37, ptr noundef %13, ptr noundef null) #21
  br label %38

38:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_fail_link(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %13, label %20, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 16) #21
  %16 = icmp eq ptr %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %15, i32 0, i32 1
  store ptr %1, ptr %18, align 4
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %15, i32 0, i32 2
  store ptr %2, ptr %19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #21
  br label %20

20:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_fail_link(ptr noundef %0, ptr noundef %1, ptr noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #6, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %4, ptr noundef nonnull %5) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #21
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #21
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %21, i32 0, i32 1
  store ptr %1, ptr %34, align 4
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %21, i32 0, i32 2
  store ptr %2, ptr %35, align 4
  %36 = load i32, ptr %5, align 4
  %37 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 20, i32 noundef %36, ptr noundef %0, i64 noundef 1, ptr noundef %37, ptr noundef %13, ptr noundef null) #21
  br label %38

38:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_complete(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %15, label %24, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #21
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %17, i32 0, i32 1
  store ptr %1, ptr %20, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %17, i32 0, i32 2
  store i64 %2, ptr %21, align 8
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %17, i32 0, i32 3
  store i32 %3, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %17, i32 0, i32 4
  store i32 %4, ptr %23, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #21
  br label %24

24:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_complete(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #6, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #21
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #21
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %23, i32 0, i32 1
  store ptr %1, ptr %36, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %23, i32 0, i32 2
  store i64 %2, ptr %37, align 8
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %23, i32 0, i32 3
  store i32 %3, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %23, i32 0, i32 4
  store i32 %4, ptr %39, align 4
  %40 = load i32, ptr %7, align 4
  %41 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #21
  br label %42

42:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_submit_sqe(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i1 noundef zeroext %6, i1 noundef zeroext %7) #0 {
  %9 = alloca %struct.trace_event_buffer, align 4
  %10 = zext i1 %6 to i8
  %11 = zext i1 %7 to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %9) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %9, i8 0, i32 24, i1 false), !annotation !9
  %12 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, 704
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16, !prof !10

16:                                               ; preds = %8
  %17 = and i32 %13, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21, !prof !11

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %20, label %32, label %21

21:                                               ; preds = %19, %16, %8
  %22 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %9, ptr noundef %0, i32 noundef 40) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 1
  store ptr %1, ptr %25, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 2
  store ptr %2, ptr %26, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 3
  store i8 %3, ptr %27, align 8
  %28 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 4
  store i64 %4, ptr %28, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 5
  store i32 %5, ptr %29, align 8
  %30 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 6
  store i8 %10, ptr %30, align 4
  %31 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %22, i32 0, i32 7
  store i8 %11, ptr %31, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %9) #21
  br label %32

32:                                               ; preds = %24, %21, %19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %9) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_submit_sqe(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i1 noundef zeroext %6, i1 noundef zeroext %7) #0 {
  %9 = alloca ptr, align 4
  %10 = alloca i32, align 4
  %11 = zext i1 %6 to i8
  %12 = zext i1 %7 to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store ptr null, ptr %9, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #21
  store i32 0, ptr %10, align 4, !annotation !9
  %13 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %14 = load ptr, ptr %13, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %17 = inttoptr i32 %16 to ptr
  %18 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %17) #6, !srcloc !12
  %19 = add i32 %18, %15
  %20 = inttoptr i32 %19 to ptr
  %21 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %22 = load volatile ptr, ptr %21, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %8
  %25 = load volatile ptr, ptr %20, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %50, label %27

27:                                               ; preds = %24, %8
  %28 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %9, ptr noundef nonnull %10) #21
  %29 = icmp eq ptr %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %9, align 4
  %32 = call ptr @llvm.returnaddress(i32 0) #21
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %31, i32 0, i32 15
  store i32 %33, ptr %34, align 4
  %35 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %36 = ptrtoint ptr %35 to i32
  %37 = getelementptr [18 x i32], ptr %31, i32 0, i32 11
  store i32 %36, ptr %37, align 4
  %38 = call i32 @llvm.read_register.i32(metadata !0) #21
  %39 = getelementptr [18 x i32], ptr %31, i32 0, i32 13
  store i32 %38, ptr %39, align 4
  %40 = getelementptr [18 x i32], ptr %31, i32 0, i32 16
  store i32 19, ptr %40, align 4
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 1
  store ptr %1, ptr %41, align 8
  %42 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 2
  store ptr %2, ptr %42, align 4
  %43 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 3
  store i8 %3, ptr %43, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 4
  store i64 %4, ptr %44, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 5
  store i32 %5, ptr %45, align 8
  %46 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 6
  store i8 %11, ptr %46, align 4
  %47 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %28, i32 0, i32 7
  store i8 %12, ptr %47, align 1
  %48 = load i32, ptr %10, align 4
  %49 = load ptr, ptr %9, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %28, i32 noundef 44, i32 noundef %48, ptr noundef %0, i64 noundef 1, ptr noundef %49, ptr noundef %20, ptr noundef null) #21
  br label %50

50:                                               ; preds = %30, %27, %24
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_poll_arm(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %8, i8 0, i32 24, i1 false), !annotation !9
  %9 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 704
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13, !prof !10

13:                                               ; preds = %7
  %14 = and i32 %10, 256
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18, !prof !11

16:                                               ; preds = %13
  %17 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %17, label %28, label %18

18:                                               ; preds = %16, %13, %7
  %19 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %8, ptr noundef %0, i32 noundef 40) #21
  %20 = icmp eq ptr %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 1
  store ptr %1, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 2
  store ptr %2, ptr %23, align 4
  %24 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 3
  store i8 %3, ptr %24, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 4
  store i64 %4, ptr %25, align 8
  %26 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 5
  store i32 %5, ptr %26, align 8
  %27 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %19, i32 0, i32 6
  store i32 %6, ptr %27, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %8) #21
  br label %28

28:                                               ; preds = %21, %18, %16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_poll_arm(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4, i32 noundef %5, i32 noundef %6) #0 {
  %8 = alloca ptr, align 4
  %9 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  store ptr null, ptr %8, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store i32 0, ptr %9, align 4, !annotation !9
  %10 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %11 = load ptr, ptr %10, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #6, !srcloc !12
  %16 = add i32 %15, %12
  %17 = inttoptr i32 %16 to ptr
  %18 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %19 = load volatile ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %7
  %22 = load volatile ptr, ptr %17, align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %46, label %24

24:                                               ; preds = %21, %7
  %25 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %8, ptr noundef nonnull %9) #21
  %26 = icmp eq ptr %25, null
  br i1 %26, label %46, label %27

27:                                               ; preds = %24
  %28 = load ptr, ptr %8, align 4
  %29 = call ptr @llvm.returnaddress(i32 0) #21
  %30 = ptrtoint ptr %29 to i32
  %31 = getelementptr [18 x i32], ptr %28, i32 0, i32 15
  store i32 %30, ptr %31, align 4
  %32 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %33 = ptrtoint ptr %32 to i32
  %34 = getelementptr [18 x i32], ptr %28, i32 0, i32 11
  store i32 %33, ptr %34, align 4
  %35 = call i32 @llvm.read_register.i32(metadata !0) #21
  %36 = getelementptr [18 x i32], ptr %28, i32 0, i32 13
  store i32 %35, ptr %36, align 4
  %37 = getelementptr [18 x i32], ptr %28, i32 0, i32 16
  store i32 19, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 1
  store ptr %1, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 2
  store ptr %2, ptr %39, align 4
  %40 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 3
  store i8 %3, ptr %40, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 4
  store i64 %4, ptr %41, align 8
  %42 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 5
  store i32 %5, ptr %42, align 8
  %43 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %25, i32 0, i32 6
  store i32 %6, ptr %43, align 4
  %44 = load i32, ptr %9, align 4
  %45 = load ptr, ptr %8, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %25, i32 noundef 44, i32 noundef %44, ptr noundef %0, i64 noundef 1, ptr noundef %45, ptr noundef %17, ptr noundef null) #21
  br label %46

46:                                               ; preds = %27, %24, %21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_poll_wake(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %15, label %24, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #21
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %17, i32 0, i32 1
  store ptr %1, ptr %20, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %17, i32 0, i32 2
  store i8 %2, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %17, i32 0, i32 3
  store i64 %3, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %17, i32 0, i32 4
  store i32 %4, ptr %23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #21
  br label %24

24:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_poll_wake(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #6, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #21
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #21
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %23, i32 0, i32 1
  store ptr %1, ptr %36, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %23, i32 0, i32 2
  store i8 %2, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %23, i32 0, i32 3
  store i64 %3, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %23, i32 0, i32 4
  store i32 %4, ptr %39, align 8
  %40 = load i32, ptr %7, align 4
  %41 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #21
  br label %42

42:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_task_add(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %15, label %24, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #21
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %17, i32 0, i32 1
  store ptr %1, ptr %20, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %17, i32 0, i32 2
  store i8 %2, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %17, i32 0, i32 3
  store i64 %3, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %17, i32 0, i32 4
  store i32 %4, ptr %23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #21
  br label %24

24:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_task_add(ptr noundef %0, ptr noundef %1, i8 noundef zeroext %2, i64 noundef %3, i32 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #6, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #21
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #21
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %23, i32 0, i32 1
  store ptr %1, ptr %36, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %23, i32 0, i32 2
  store i8 %2, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %23, i32 0, i32 3
  store i64 %3, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %23, i32 0, i32 4
  store i32 %4, ptr %39, align 8
  %40 = load i32, ptr %7, align 4
  %41 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #21
  br label %42

42:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_task_run(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %6, i8 0, i32 24, i1 false), !annotation !9
  %7 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %8 = load i32, ptr %7, align 4
  %9 = and i32 %8, 704
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11, !prof !10

11:                                               ; preds = %5
  %12 = and i32 %8, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16, !prof !11

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %15, label %24, label %16

16:                                               ; preds = %14, %11, %5
  %17 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %6, ptr noundef %0, i32 noundef 32) #21
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %17, i32 0, i32 1
  store ptr %1, ptr %20, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %17, i32 0, i32 2
  store ptr %2, ptr %21, align 4
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %17, i32 0, i32 3
  store i8 %3, ptr %22, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %17, i32 0, i32 4
  store i64 %4, ptr %23, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %6) #21
  br label %24

24:                                               ; preds = %19, %16, %14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_task_run(ptr noundef %0, ptr noundef %1, ptr noundef %2, i8 noundef zeroext %3, i64 noundef %4) #0 {
  %6 = alloca ptr, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !annotation !9
  %8 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %9 = load ptr, ptr %8, align 4
  %10 = ptrtoint ptr %9 to i32
  %11 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %12 = inttoptr i32 %11 to ptr
  %13 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %12) #6, !srcloc !12
  %14 = add i32 %13, %10
  %15 = inttoptr i32 %14 to ptr
  %16 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = load volatile ptr, ptr %15, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %19, %5
  %23 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %6, ptr noundef nonnull %7) #21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %6, align 4
  %27 = call ptr @llvm.returnaddress(i32 0) #21
  %28 = ptrtoint ptr %27 to i32
  %29 = getelementptr [18 x i32], ptr %26, i32 0, i32 15
  store i32 %28, ptr %29, align 4
  %30 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %31 = ptrtoint ptr %30 to i32
  %32 = getelementptr [18 x i32], ptr %26, i32 0, i32 11
  store i32 %31, ptr %32, align 4
  %33 = call i32 @llvm.read_register.i32(metadata !0) #21
  %34 = getelementptr [18 x i32], ptr %26, i32 0, i32 13
  store i32 %33, ptr %34, align 4
  %35 = getelementptr [18 x i32], ptr %26, i32 0, i32 16
  store i32 19, ptr %35, align 4
  %36 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %23, i32 0, i32 1
  store ptr %1, ptr %36, align 8
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %23, i32 0, i32 2
  store ptr %2, ptr %37, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %23, i32 0, i32 3
  store i8 %3, ptr %38, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %23, i32 0, i32 4
  store i64 %4, ptr %39, align 8
  %40 = load i32, ptr %7, align 4
  %41 = load ptr, ptr %6, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %23, i32 noundef 36, i32 noundef %40, ptr noundef %0, i64 noundef 1, ptr noundef %41, ptr noundef %15, ptr noundef null) #21
  br label %42

42:                                               ; preds = %25, %22, %19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @trace_event_raw_event_io_uring_req_failed(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca %struct.trace_event_buffer, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(24) %4, i8 0, i32 24, i1 false), !annotation !9
  %5 = getelementptr inbounds %struct.trace_event_file, ptr %0, i32 0, i32 7
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 704
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9, !prof !10

9:                                                ; preds = %3
  %10 = and i32 %6, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14, !prof !11

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %0) #21
  br i1 %13, label %58, label %14

14:                                               ; preds = %12, %9, %3
  %15 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %4, ptr noundef %0, i32 noundef 80) #21
  %16 = icmp eq ptr %15, null
  br i1 %16, label %58, label %17

17:                                               ; preds = %14
  %18 = load i8, ptr %1, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 1
  store i8 %18, ptr %19, align 8
  %20 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 1
  %21 = load i8, ptr %20, align 1
  %22 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 2
  store i8 %21, ptr %22, align 1
  %23 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 2
  %24 = load i16, ptr %23, align 2
  %25 = trunc i16 %24 to i8
  %26 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 3
  store i8 %25, ptr %26, align 2
  %27 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 4
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 4
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 5
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 5
  store i64 %31, ptr %32, align 8
  %33 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 6
  %34 = load i32, ptr %33, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 6
  store i32 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 7
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 7
  store i32 %37, ptr %38, align 4
  %39 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 8
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 8
  store i64 %40, ptr %41, align 8
  %42 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 9
  %43 = load i16, ptr %42, align 8
  %44 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 9
  store i16 %43, ptr %44, align 8
  %45 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 10
  %46 = load i16, ptr %45, align 2
  %47 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 10
  store i16 %46, ptr %47, align 2
  %48 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 11
  %49 = load i32, ptr %48, align 4
  %50 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 11
  store i32 %49, ptr %50, align 4
  %51 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 12
  %52 = load i64, ptr %51, align 8
  %53 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 12
  store i64 %52, ptr %53, align 8
  %54 = getelementptr %struct.io_uring_sqe, ptr %1, i32 0, i32 12, i32 1
  %55 = load i64, ptr %54, align 8
  %56 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 13
  store i64 %55, ptr %56, align 8
  %57 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %15, i32 0, i32 14
  store i32 %2, ptr %57, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %4) #21
  br label %58

58:                                               ; preds = %17, %14, %12
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @perf_trace_io_uring_req_failed(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) #0 {
  %4 = alloca ptr, align 4
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store ptr null, ptr %4, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 10
  %7 = load ptr, ptr %6, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %10 = inttoptr i32 %9 to ptr
  %11 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %10) #6, !srcloc !12
  %12 = add i32 %11, %8
  %13 = inttoptr i32 %12 to ptr
  %14 = getelementptr inbounds %struct.trace_event_call, ptr %0, i32 0, i32 11
  %15 = load volatile ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3
  %18 = load volatile ptr, ptr %13, align 4
  %19 = icmp eq ptr %18, null
  br i1 %19, label %76, label %20

20:                                               ; preds = %17, %3
  %21 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %4, ptr noundef nonnull %5) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %76, label %23

23:                                               ; preds = %20
  %24 = load ptr, ptr %4, align 4
  %25 = call ptr @llvm.returnaddress(i32 0) #21
  %26 = ptrtoint ptr %25 to i32
  %27 = getelementptr [18 x i32], ptr %24, i32 0, i32 15
  store i32 %26, ptr %27, align 4
  %28 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %29 = ptrtoint ptr %28 to i32
  %30 = getelementptr [18 x i32], ptr %24, i32 0, i32 11
  store i32 %29, ptr %30, align 4
  %31 = call i32 @llvm.read_register.i32(metadata !0) #21
  %32 = getelementptr [18 x i32], ptr %24, i32 0, i32 13
  store i32 %31, ptr %32, align 4
  %33 = getelementptr [18 x i32], ptr %24, i32 0, i32 16
  store i32 19, ptr %33, align 4
  %34 = load i8, ptr %1, align 8
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 1
  store i8 %34, ptr %35, align 8
  %36 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 1
  %37 = load i8, ptr %36, align 1
  %38 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 2
  store i8 %37, ptr %38, align 1
  %39 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 2
  %40 = load i16, ptr %39, align 2
  %41 = trunc i16 %40 to i8
  %42 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 3
  store i8 %41, ptr %42, align 2
  %43 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 4
  %44 = load i64, ptr %43, align 8
  %45 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 4
  store i64 %44, ptr %45, align 8
  %46 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 5
  %47 = load i64, ptr %46, align 8
  %48 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 5
  store i64 %47, ptr %48, align 8
  %49 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 6
  %50 = load i32, ptr %49, align 8
  %51 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 6
  store i32 %50, ptr %51, align 8
  %52 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 7
  %53 = load i32, ptr %52, align 4
  %54 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 7
  store i32 %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 8
  %56 = load i64, ptr %55, align 8
  %57 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 8
  store i64 %56, ptr %57, align 8
  %58 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 9
  %59 = load i16, ptr %58, align 8
  %60 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 9
  store i16 %59, ptr %60, align 8
  %61 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 10
  %62 = load i16, ptr %61, align 2
  %63 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 10
  store i16 %62, ptr %63, align 2
  %64 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 11
  %65 = load i32, ptr %64, align 4
  %66 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 11
  store i32 %65, ptr %66, align 4
  %67 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 12
  %68 = load i64, ptr %67, align 8
  %69 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 12
  store i64 %68, ptr %69, align 8
  %70 = getelementptr %struct.io_uring_sqe, ptr %1, i32 0, i32 12, i32 1
  %71 = load i64, ptr %70, align 8
  %72 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 13
  store i64 %71, ptr %72, align 8
  %73 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %21, i32 0, i32 14
  store i32 %2, ptr %73, align 8
  %74 = load i32, ptr %5, align 4
  %75 = load ptr, ptr %4, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %21, i32 noundef 84, i32 noundef %74, ptr noundef %0, i64 noundef 1, ptr noundef %75, ptr noundef %13, ptr noundef null) #21
  br label %76

76:                                               ; preds = %23, %20, %17
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define dso_local ptr @io_uring_get_socket(ptr nocapture noundef readonly %0) #3 {
  %2 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, @io_uring_fops
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %7, i32 0, i32 14
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.socket, ptr %9, i32 0, i32 4
  %11 = load ptr, ptr %10, align 16
  br label %12

12:                                               ; preds = %5, %1
  %13 = phi ptr [ %11, %5 ], [ null, %1 ]
  ret ptr %13
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__io_uring_free(ptr nocapture noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 91
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_uring_task, ptr %3, i32 0, i32 1, i32 2
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  %7 = load i1, ptr @__io_uring_free.__already_done, align 1
  %8 = select i1 %6, i1 true, i1 %7
  br i1 %8, label %10, label %9, !prof !10

9:                                                ; preds = %1
  store i1 true, ptr @__io_uring_free.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8782, i32 noundef 9, ptr noundef null) #21
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %struct.io_uring_task, ptr %3, i32 0, i32 4
  %12 = load ptr, ptr %11, align 8
  %13 = icmp ne ptr %12, null
  %14 = load i1, ptr @__io_uring_free.__already_done.1, align 1
  %15 = xor i1 %14, true
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %18, !prof !11

17:                                               ; preds = %10
  store i1 true, ptr @__io_uring_free.__already_done.1, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8783, i32 noundef 9, ptr noundef null) #21
  br label %18

18:                                               ; preds = %17, %10
  %19 = load i32, ptr %3, align 8
  %20 = icmp ne i32 %19, 0
  %21 = load i1, ptr @__io_uring_free.__already_done.2, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %18
  store i1 true, ptr @__io_uring_free.__already_done.2, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8784, i32 noundef 9, ptr noundef null) #21
  br label %25

25:                                               ; preds = %24, %18
  %26 = getelementptr inbounds %struct.io_uring_task, ptr %3, i32 0, i32 5
  tail call void @percpu_counter_destroy(ptr noundef %26) #21
  tail call void @kfree(ptr noundef %3) #21
  store ptr null, ptr %2, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @__io_uring_cancel(i1 noundef zeroext %0) local_unnamed_addr #0 {
  tail call fastcc void @io_uring_cancel_generic(i1 noundef zeroext %0, ptr noundef null) #22
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_cancel_generic(i1 noundef zeroext %0, ptr noundef readonly %1) unnamed_addr #4 {
  %3 = alloca %struct.wait_queue_entry, align 4
  %4 = alloca i32, align 4
  %5 = tail call ptr @llvm.thread.pointer() #21
  %6 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 91
  %7 = load ptr, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #21
  %8 = getelementptr inbounds %struct.wait_queue_entry, ptr %3, i32 0, i32 1
  store i32 0, ptr %3, align 4
  store ptr %5, ptr %8, align 4
  %9 = getelementptr inbounds %struct.wait_queue_entry, ptr %3, i32 0, i32 2
  store ptr @autoremove_wake_function, ptr %9, align 4
  %10 = getelementptr inbounds %struct.wait_queue_entry, ptr %3, i32 0, i32 3
  store ptr %10, ptr %10, align 4
  %11 = getelementptr inbounds %struct.wait_queue_entry, ptr %3, i32 0, i32 3, i32 1
  store ptr %10, ptr %11, align 4
  %12 = icmp eq ptr %1, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.io_sq_data, ptr %1, i32 0, i32 4
  %15 = load ptr, ptr %14, align 4
  %16 = icmp ne ptr %15, %5
  %17 = load i1, ptr @io_uring_cancel_generic.__already_done, align 1
  %18 = xor i1 %17, true
  %19 = select i1 %16, i1 %18, i1 false
  br i1 %19, label %20, label %22, !prof !11

20:                                               ; preds = %13
  store i1 true, ptr @io_uring_cancel_generic.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9923, i32 noundef 9, ptr noundef null) #21
  %21 = load ptr, ptr %6, align 8
  br label %22

22:                                               ; preds = %20, %13, %2
  %23 = phi ptr [ %7, %2 ], [ %21, %20 ], [ %7, %13 ]
  %24 = icmp eq ptr %23, null
  br i1 %24, label %98, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 4
  %27 = load ptr, ptr %26, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  call void @io_wq_exit_start(ptr noundef nonnull %27) #21
  br label %30

30:                                               ; preds = %29, %25
  %31 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 7
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %31) #21, !srcloc !13
  %32 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %31, ptr %31, i32 1, ptr elementtype(i32) %31) #21, !srcloc !14
  %33 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 6
  %34 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 5
  %35 = getelementptr inbounds %struct.io_sq_data, ptr %1, i32 0, i32 3
  %36 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 1
  %37 = getelementptr inbounds %struct.io_uring_task, ptr %7, i32 0, i32 2
  %38 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 102
  %39 = getelementptr inbounds %struct.task_struct, ptr %5, i32 0, i32 1
  br label %40

40:                                               ; preds = %95, %30
  call fastcc void @io_uring_drop_tctx_refs(ptr noundef %5) #22
  br i1 %0, label %41, label %44

41:                                               ; preds = %40
  %42 = call i64 @__percpu_counter_sum(ptr noundef %34) #21
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %96, label %49

44:                                               ; preds = %40
  %45 = load volatile i32, ptr %33, align 4
  %46 = sext i32 %45 to i64
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  call fastcc void @io_uring_clean_tctx(ptr noundef %7) #22
  br label %98

49:                                               ; preds = %44, %41
  %50 = phi i64 [ %46, %44 ], [ %42, %41 ]
  br i1 %12, label %51, label %66

51:                                               ; preds = %49
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store i32 0, ptr %4, align 4
  %52 = call ptr @xa_find(ptr noundef %36, ptr noundef nonnull %4, i32 noundef -1, i32 noundef 8) #21
  %53 = icmp eq ptr %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %62, %51
  %55 = phi ptr [ %63, %62 ], [ %52, %51 ]
  %56 = getelementptr inbounds %struct.io_tctx_node, ptr %55, i32 0, i32 2
  %57 = load ptr, ptr %56, align 4
  %58 = getelementptr inbounds %struct.io_ring_ctx, ptr %57, i32 0, i32 5
  %59 = load ptr, ptr %58, align 16
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %62

61:                                               ; preds = %54
  call fastcc void @io_uring_try_cancel_requests(ptr noundef %57, ptr noundef %5, i1 noundef zeroext %0) #22
  br label %62

62:                                               ; preds = %61, %54
  %63 = call ptr @xa_find_after(ptr noundef %36, ptr noundef nonnull %4, i32 noundef -1, i32 noundef 8) #21
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %54

65:                                               ; preds = %62, %51
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  br label %74

66:                                               ; preds = %49
  %67 = load ptr, ptr %35, align 4
  %68 = icmp eq ptr %67, %35
  br i1 %68, label %74, label %69

69:                                               ; preds = %69, %66
  %70 = phi ptr [ %72, %69 ], [ %67, %66 ]
  %71 = getelementptr i8, ptr %70, i32 -288
  call fastcc void @io_uring_try_cancel_requests(ptr noundef %71, ptr noundef %5, i1 noundef zeroext %0) #22
  %72 = load ptr, ptr %70, align 4
  %73 = icmp eq ptr %72, %35
  br i1 %73, label %74, label %69

74:                                               ; preds = %69, %66, %65
  call void @prepare_to_wait(ptr noundef %37, ptr noundef nonnull %3, i32 noundef 1) #21
  %75 = load volatile i32, ptr %5, align 4
  %76 = and i32 %75, 256
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = load ptr, ptr %38, align 4
  %80 = icmp eq ptr %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %78, %74
  store volatile i32 0, ptr %39, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %5) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %82 = load ptr, ptr %38, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  call void @task_work_run() #21
  br label %85

85:                                               ; preds = %84, %81, %78
  call fastcc void @io_uring_drop_tctx_refs(ptr noundef %5) #22
  br i1 %0, label %89, label %86

86:                                               ; preds = %85
  %87 = load volatile i32, ptr %33, align 4
  %88 = sext i32 %87 to i64
  br label %91

89:                                               ; preds = %85
  %90 = call i64 @__percpu_counter_sum(ptr noundef %34) #21
  br label %91

91:                                               ; preds = %89, %86
  %92 = phi i64 [ %88, %86 ], [ %90, %89 ]
  %93 = icmp eq i64 %50, %92
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @schedule() #21
  br label %95

95:                                               ; preds = %94, %91
  call void @finish_wait(ptr noundef %37, ptr noundef nonnull %3) #21
  br label %40

96:                                               ; preds = %41
  call fastcc void @io_uring_clean_tctx(ptr noundef %7) #22
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %31) #21, !srcloc !13
  %97 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %31, ptr %31, i32 1, ptr elementtype(i32) %31) #21, !srcloc !16
  call void @__io_uring_free(ptr noundef %5)
  br label %98

98:                                               ; preds = %96, %48, %22
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__se_sys_io_uring_enter(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) #0 {
  %7 = alloca i64, align 8
  %8 = alloca %struct.io_wait_queue, align 4
  %9 = alloca %struct.timespec64, align 8
  %10 = alloca %struct.io_uring_getevents_arg, align 8
  %11 = alloca %struct.wait_queue_entry, align 4
  %12 = inttoptr i32 %4 to ptr
  %13 = tail call ptr @llvm.thread.pointer() #21
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 102
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %6
  %22 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 1
  store volatile i32 0, ptr %22, align 8
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %13) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %23 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 102
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  tail call void @task_work_run() #21
  br label %27

27:                                               ; preds = %26, %21, %17
  %28 = icmp ult i32 %3, 16
  br i1 %28, label %29, label %485, !prof !10

29:                                               ; preds = %27
  %30 = tail call i32 @__fdget(i32 noundef %0) #21, !noalias !17
  %31 = and i32 %30, -4
  %32 = inttoptr i32 %31 to ptr
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %485, label %34, !prof !11

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.file, ptr %32, i32 0, i32 3
  %36 = load ptr, ptr %35, align 4
  %37 = icmp eq ptr %36, @io_uring_fops
  br i1 %37, label %38, label %476, !prof !10

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.file, ptr %32, i32 0, i32 15
  %40 = load ptr, ptr %39, align 8
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %41 = load volatile i32, ptr %40, align 4
  %42 = and i32 %41, 3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %53, !prof !10

44:                                               ; preds = %38
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %46 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %47 = inttoptr i32 %46 to ptr
  %48 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %47) #6, !srcloc !12
  %49 = add i32 %48, %41
  %50 = inttoptr i32 %49 to ptr
  %51 = load i32, ptr %50, align 4
  %52 = add i32 %51, 1
  store i32 %52, ptr %50, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %45) #21, !srcloc !22
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %61

53:                                               ; preds = %38
  %54 = getelementptr inbounds %struct.percpu_ref, ptr %40, i32 0, i32 1
  %55 = load ptr, ptr %54, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %55) #21, !srcloc !13
  %56 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %55, ptr %55, i32 0, i32 1, ptr elementtype(i32) %55) #21, !srcloc !25
  %57 = extractvalue { i32, i32, i32 } %56, 0
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %53
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %61

60:                                               ; preds = %53
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %476

61:                                               ; preds = %59, %44
  %62 = getelementptr inbounds %struct.anon.178, ptr %40, i32 0, i32 2
  %63 = load i32, ptr %62, align 4
  %64 = and i32 %63, 64
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %450, !prof !10

66:                                               ; preds = %61
  %67 = and i32 %63, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %134, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 8
  %71 = load volatile i32, ptr %70, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %86, label %74

74:                                               ; preds = %69
  %75 = and i32 %63, 1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %78) #21
  br label %79

79:                                               ; preds = %77, %74
  %80 = tail call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %40, i1 noundef zeroext false) #21
  %81 = load i32, ptr %62, align 4
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %85) #21
  br label %86

86:                                               ; preds = %84, %79, %69
  %87 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 5
  %88 = load ptr, ptr %87, align 16
  %89 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 4
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %450, label %92, !prof !11

92:                                               ; preds = %86
  %93 = and i32 %3, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 5
  tail call void @__wake_up(ptr noundef %96, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %97

97:                                               ; preds = %95, %92
  %98 = and i32 %3, 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %151, label %100

100:                                              ; preds = %97
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %11) #21
  %101 = getelementptr inbounds %struct.wait_queue_entry, ptr %11, i32 0, i32 1
  store i32 0, ptr %11, align 4
  store ptr %13, ptr %101, align 4
  %102 = getelementptr inbounds %struct.wait_queue_entry, ptr %11, i32 0, i32 2
  store ptr @autoremove_wake_function, ptr %102, align 4
  %103 = getelementptr inbounds %struct.wait_queue_entry, ptr %11, i32 0, i32 3
  store ptr %103, ptr %103, align 4
  %104 = getelementptr inbounds %struct.wait_queue_entry, ptr %11, i32 0, i32 3, i32 1
  store ptr %103, ptr %104, align 4
  %105 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 6
  %106 = getelementptr inbounds %struct.anon.178, ptr %40, i32 0, i32 1
  %107 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1, i32 3
  %108 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1, i32 4
  br label %109

109:                                              ; preds = %129, %100
  %110 = load ptr, ptr %106, align 8
  %111 = getelementptr inbounds %struct.io_uring, ptr %110, i32 0, i32 2
  %112 = load volatile i32, ptr %111, align 64
  %113 = load i32, ptr %107, align 4
  %114 = sub i32 %112, %113
  %115 = load i32, ptr %108, align 32
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %117, label %133

117:                                              ; preds = %109
  call void @prepare_to_wait(ptr noundef %105, ptr noundef nonnull %11, i32 noundef 1) #21
  %118 = load ptr, ptr %106, align 8
  %119 = getelementptr inbounds %struct.io_uring, ptr %118, i32 0, i32 2
  %120 = load volatile i32, ptr %119, align 64
  %121 = load i32, ptr %107, align 4
  %122 = sub i32 %120, %121
  %123 = load i32, ptr %108, align 32
  %124 = icmp eq i32 %122, %123
  br i1 %124, label %125, label %133

125:                                              ; preds = %117
  call void @schedule() #21
  %126 = load volatile i32, ptr %13, align 4
  %127 = and i32 %126, 256
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133, !prof !10

129:                                              ; preds = %125
  %130 = load volatile i32, ptr %13, align 4
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %109, label %133

133:                                              ; preds = %129, %125, %117, %109
  call void @finish_wait(ptr noundef %105, ptr noundef nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %11) #21
  br label %151

134:                                              ; preds = %66
  %135 = icmp eq i32 %1, 0
  br i1 %135, label %151, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 91
  %138 = load ptr, ptr %137, align 8
  %139 = icmp eq ptr %138, null
  br i1 %139, label %144, label %140, !prof !11

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.io_uring_task, ptr %138, i32 0, i32 3
  %142 = load ptr, ptr %141, align 4
  %143 = icmp eq ptr %142, %40
  br i1 %143, label %147, label %144, !prof !10

144:                                              ; preds = %140, %136
  %145 = tail call fastcc i32 @__io_uring_add_tctx_node(ptr noundef %40) #21
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %450, !prof !10

147:                                              ; preds = %144, %140
  %148 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %148) #21
  %149 = tail call fastcc i32 @io_submit_sqes(ptr noundef %40, i32 noundef %1) #21
  tail call void @mutex_unlock(ptr noundef %148) #21
  %150 = icmp eq i32 %149, %1
  br i1 %150, label %151, label %450

151:                                              ; preds = %147, %134, %133, %97
  %152 = and i32 %3, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %450, label %154

154:                                              ; preds = %151
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(24) %10, i8 0, i32 24, i1 false) #21, !annotation !9
  %155 = and i32 %3, 8
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %186, label %157

157:                                              ; preds = %154
  %158 = icmp eq i32 %5, 24
  br i1 %158, label %159, label %184

159:                                              ; preds = %157
  %160 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %12, i32 24, i32 -1090519040) #23, !srcloc !27
  %161 = extractvalue { i32, i32 } %160, 0
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %170, !prof !10

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %165 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %164) #6, !srcloc !28
  %166 = and i32 %165, -13
  %167 = or i32 %166, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %167) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %168 = call i32 @arm_copy_from_user(ptr noundef nonnull %10, ptr noundef %12, i32 noundef 24) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %165) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %174, label %170, !prof !10

170:                                              ; preds = %163, %159
  %171 = phi i32 [ %168, %163 ], [ 24, %159 ]
  %172 = sub i32 24, %171
  %173 = getelementptr i8, ptr %10, i32 %172
  call void @llvm.memset.p0.i32(ptr align 1 %173, i8 0, i32 %171, i1 false) #21
  br label %184

174:                                              ; preds = %163
  %175 = load i64, ptr %10, align 8
  %176 = trunc i64 %175 to i32
  %177 = inttoptr i32 %176 to ptr
  %178 = getelementptr inbounds %struct.io_uring_getevents_arg, ptr %10, i32 0, i32 1
  %179 = load i32, ptr %178, align 8
  %180 = getelementptr inbounds %struct.io_uring_getevents_arg, ptr %10, i32 0, i32 3
  %181 = load i64, ptr %180, align 8
  %182 = trunc i64 %181 to i32
  %183 = inttoptr i32 %182 to ptr
  br label %186

184:                                              ; preds = %170, %157
  %185 = phi i32 [ -22, %157 ], [ -14, %170 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #21
  br label %450

186:                                              ; preds = %174, %154
  %187 = phi i32 [ %5, %154 ], [ %179, %174 ]
  %188 = phi ptr [ %12, %154 ], [ %177, %174 ]
  %189 = phi ptr [ null, %154 ], [ %183, %174 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #21
  %190 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 10, i32 1
  %191 = load i32, ptr %190, align 4
  %192 = call i32 @llvm.umin.i32(i32 %191, i32 %2) #21
  %193 = load i32, ptr %62, align 4
  %194 = and i32 %193, 3
  %195 = icmp eq i32 %194, 1
  br i1 %195, label %196, label %251

196:                                              ; preds = %186
  %197 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1
  call void @mutex_lock(ptr noundef %197) #21
  %198 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 8
  %199 = load volatile i32, ptr %198, align 4
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %196
  %203 = call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %40, i1 noundef zeroext false) #21
  br label %204

204:                                              ; preds = %202, %196
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !31
  %205 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 10
  %206 = load i32, ptr %205, align 64
  %207 = getelementptr inbounds %struct.anon.178, ptr %40, i32 0, i32 1
  %208 = load ptr, ptr %207, align 8
  %209 = getelementptr inbounds %struct.io_rings, ptr %208, i32 0, i32 1
  %210 = load volatile i32, ptr %209, align 64
  %211 = icmp eq i32 %206, %210
  br i1 %211, label %212, label %249

212:                                              ; preds = %204
  %213 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 11, i32 2
  %214 = icmp eq i32 %192, 0
  %215 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 102
  %216 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 1
  br label %217

217:                                              ; preds = %245, %212
  %218 = phi i32 [ %243, %245 ], [ 0, %212 ]
  %219 = load volatile ptr, ptr %213, align 8
  %220 = icmp eq ptr %219, null
  br i1 %220, label %221, label %239

221:                                              ; preds = %217
  %222 = load i32, ptr %205, align 64
  call void @mutex_unlock(ptr noundef %197) #21
  %223 = load volatile i32, ptr %13, align 4
  %224 = and i32 %223, 256
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %229

226:                                              ; preds = %221
  %227 = load ptr, ptr %215, align 4
  %228 = icmp eq ptr %227, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %226, %221
  store volatile i32 0, ptr %216, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %13) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %230 = load ptr, ptr %215, align 4
  %231 = icmp eq ptr %230, null
  br i1 %231, label %233, label %232

232:                                              ; preds = %229
  call void @task_work_run() #21
  br label %233

233:                                              ; preds = %232, %229, %226
  call void @mutex_lock(ptr noundef %197) #21
  %234 = load i32, ptr %205, align 64
  %235 = icmp eq i32 %222, %234
  br i1 %235, label %236, label %249

236:                                              ; preds = %233
  %237 = load volatile ptr, ptr %213, align 8
  %238 = icmp eq ptr %237, null
  br i1 %238, label %249, label %239

239:                                              ; preds = %236, %217
  %240 = call fastcc i32 @io_do_iopoll(ptr noundef %40, i1 noundef zeroext %214) #21
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %249, label %242

242:                                              ; preds = %239
  %243 = add i32 %240, %218
  %244 = icmp ult i32 %243, %192
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = load volatile i32, ptr %13, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %217, label %249

249:                                              ; preds = %245, %242, %239, %236, %233, %204
  %250 = phi i32 [ 0, %204 ], [ 0, %236 ], [ 0, %233 ], [ 0, %242 ], [ 0, %245 ], [ %240, %239 ]
  call void @mutex_unlock(ptr noundef %197) #21
  br label %450

251:                                              ; preds = %186
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %8, i8 0, i32 32, i1 false) #21, !annotation !9
  %252 = getelementptr inbounds %struct.anon.178, ptr %40, i32 0, i32 1
  %253 = load ptr, ptr %252, align 8
  %254 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 8
  %255 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 1
  %256 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 10
  %257 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 102
  %258 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 1
  br label %259

259:                                              ; preds = %292, %251
  %260 = load volatile i32, ptr %254, align 4
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %274, label %263

263:                                              ; preds = %259
  %264 = load i32, ptr %62, align 4
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %268, label %267

267:                                              ; preds = %263
  call void @mutex_lock(ptr noundef %255) #21
  br label %268

268:                                              ; preds = %267, %263
  %269 = call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %40, i1 noundef zeroext false) #21
  %270 = load i32, ptr %62, align 4
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273

273:                                              ; preds = %268
  call void @mutex_unlock(ptr noundef %255) #21
  br label %274

274:                                              ; preds = %273, %268, %259
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !31
  %275 = load i32, ptr %256, align 64
  %276 = load ptr, ptr %252, align 8
  %277 = getelementptr inbounds %struct.io_rings, ptr %276, i32 0, i32 1
  %278 = load volatile i32, ptr %277, align 64
  %279 = sub i32 %275, %278
  %280 = icmp ult i32 %279, %192
  br i1 %280, label %281, label %448

281:                                              ; preds = %274
  %282 = load volatile i32, ptr %13, align 4
  %283 = and i32 %282, 256
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %281
  %286 = load ptr, ptr %257, align 4
  %287 = icmp eq ptr %286, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %285, %281
  store volatile i32 0, ptr %258, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %13) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %289 = load ptr, ptr %257, align 4
  %290 = icmp eq ptr %289, null
  br i1 %290, label %292, label %291

291:                                              ; preds = %288
  call void @task_work_run() #21
  br label %292

292:                                              ; preds = %291, %288
  br label %259

293:                                              ; preds = %285
  %294 = icmp eq ptr %189, null
  br i1 %294, label %312, label %295

295:                                              ; preds = %293
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i32 16, i1 false) #21, !annotation !9
  %296 = call i32 @get_timespec64(ptr noundef nonnull %9, ptr noundef nonnull %189) #21
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %311

298:                                              ; preds = %295
  %299 = load i64, ptr %9, align 8
  %300 = icmp sgt i64 %299, 9223372035
  br i1 %300, label %307, label %301, !prof !11

301:                                              ; preds = %298
  %302 = getelementptr inbounds [2 x i64], ptr %9, i32 0, i32 1
  %303 = load i64, ptr %302, align 8
  %304 = mul i64 %299, 1000000000
  %305 = and i64 %303, 4294967295
  %306 = add i64 %305, %304
  br label %307

307:                                              ; preds = %301, %298
  %308 = phi i64 [ %306, %301 ], [ 9223372036854775807, %298 ]
  %309 = call i64 @ktime_get() #21
  %310 = add i64 %309, %308
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #21
  br label %312

311:                                              ; preds = %295
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #21
  br label %448

312:                                              ; preds = %307, %293
  %313 = phi i64 [ 9223372036854775807, %293 ], [ %310, %307 ]
  %314 = icmp eq ptr %188, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %312
  %316 = call i32 @set_user_sigmask(ptr noundef nonnull %188, i32 noundef %187) #21
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %448

318:                                              ; preds = %315, %312
  store i32 0, ptr %8, align 4
  %319 = getelementptr inbounds %struct.wait_queue_entry, ptr %8, i32 0, i32 1
  %320 = getelementptr inbounds %struct.wait_queue_entry, ptr %8, i32 0, i32 2
  store ptr @io_wake_function, ptr %320, align 4
  store ptr %13, ptr %319, align 4
  %321 = getelementptr inbounds %struct.wait_queue_entry, ptr %8, i32 0, i32 3
  store volatile ptr %321, ptr %321, align 4
  %322 = getelementptr inbounds %struct.wait_queue_entry, ptr %8, i32 0, i32 3, i32 1
  store ptr %321, ptr %322, align 4
  %323 = getelementptr inbounds %struct.io_wait_queue, ptr %8, i32 0, i32 1
  store ptr %40, ptr %323, align 4
  %324 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 10, i32 5
  %325 = load volatile i32, ptr %324, align 4
  %326 = getelementptr inbounds %struct.io_wait_queue, ptr %8, i32 0, i32 3
  store i32 %325, ptr %326, align 4
  %327 = load ptr, ptr %252, align 8
  %328 = getelementptr inbounds %struct.io_rings, ptr %327, i32 0, i32 1
  %329 = load volatile i32, ptr %328, align 64
  %330 = add i32 %329, %192
  %331 = getelementptr inbounds %struct.io_wait_queue, ptr %8, i32 0, i32 2
  store i32 %330, ptr %331, align 4
  %332 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_cqring_wait, i32 0, i32 1), align 4
  %333 = icmp sgt i32 %332, 0
  br i1 %333, label %334, label %356

334:                                              ; preds = %318
  %335 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %336 = load i32, ptr %335, align 8
  %337 = lshr i32 %336, 5
  %338 = getelementptr i32, ptr @__cpu_online_mask, i32 %337
  %339 = load volatile i32, ptr %338, align 4
  %340 = and i32 %336, 31
  %341 = shl nuw i32 1, %340
  %342 = and i32 %341, %339
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %356, label %344

344:                                              ; preds = %334
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !32
  %345 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_cqring_wait, i32 0, i32 7), align 4
  %346 = icmp eq ptr %345, null
  br i1 %346, label %355, label %347

347:                                              ; preds = %347, %344
  %348 = phi ptr [ %352, %347 ], [ %345, %344 ]
  %349 = load volatile ptr, ptr %348, align 4
  %350 = getelementptr inbounds %struct.tracepoint_func, ptr %348, i32 0, i32 1
  %351 = load ptr, ptr %350, align 4
  call void %349(ptr noundef %351, ptr noundef %40, i32 noundef %192) #21
  %352 = getelementptr %struct.tracepoint_func, ptr %348, i32 1
  %353 = load ptr, ptr %352, align 4
  %354 = icmp eq ptr %353, null
  br i1 %354, label %355, label %347

355:                                              ; preds = %347, %344
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !33
  br label %356

356:                                              ; preds = %355, %334, %318
  %357 = getelementptr inbounds %struct.io_ring_ctx, ptr %40, i32 0, i32 10, i32 3
  br label %358

358:                                              ; preds = %419, %356
  %359 = load volatile i32, ptr %254, align 4
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %374, label %362

362:                                              ; preds = %358
  %363 = load i32, ptr %62, align 4
  %364 = and i32 %363, 1
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %367, label %366

366:                                              ; preds = %362
  call void @mutex_lock(ptr noundef %255) #21
  br label %367

367:                                              ; preds = %366, %362
  %368 = call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %40, i1 noundef zeroext false) #21
  %369 = load i32, ptr %62, align 4
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %373, label %372

372:                                              ; preds = %367
  call void @mutex_unlock(ptr noundef %255) #21
  br i1 %368, label %374, label %434

373:                                              ; preds = %367
  br i1 %368, label %374, label %434

374:                                              ; preds = %373, %372, %358
  %375 = call zeroext i1 @prepare_to_wait_exclusive(ptr noundef %357, ptr noundef nonnull %8, i32 noundef 1) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  store i64 %313, ptr %7, align 8
  %376 = load volatile i32, ptr %13, align 4
  %377 = and i32 %376, 256
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %374
  %380 = load ptr, ptr %257, align 4
  %381 = icmp eq ptr %380, null
  br i1 %381, label %386, label %382

382:                                              ; preds = %379, %374
  store volatile i32 0, ptr %258, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %13) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %383 = load ptr, ptr %257, align 4
  %384 = icmp eq ptr %383, null
  br i1 %384, label %419, label %385

385:                                              ; preds = %382
  call void @task_work_run() #21
  br label %419

386:                                              ; preds = %379
  %387 = load volatile i32, ptr %13, align 4
  %388 = and i32 %387, 256
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %390, label %394, !prof !10

390:                                              ; preds = %386
  %391 = load volatile i32, ptr %13, align 4
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %399, label %394

394:                                              ; preds = %390, %386
  %395 = load volatile i32, ptr %13, align 4
  %396 = and i32 %395, 256
  %397 = icmp eq i32 %396, 0
  %398 = select i1 %397, i32 -4, i32 -512
  br label %419

399:                                              ; preds = %390
  %400 = load ptr, ptr %323, align 4
  %401 = getelementptr inbounds %struct.io_ring_ctx, ptr %400, i32 0, i32 10
  %402 = load i32, ptr %401, align 64
  %403 = load i32, ptr %331, align 4
  %404 = sub i32 %402, %403
  %405 = icmp sgt i32 %404, -1
  br i1 %405, label %419, label %406

406:                                              ; preds = %399
  %407 = getelementptr inbounds %struct.io_ring_ctx, ptr %400, i32 0, i32 10, i32 5
  %408 = load volatile i32, ptr %407, align 4
  %409 = load i32, ptr %326, align 4
  %410 = icmp eq i32 %408, %409
  br i1 %410, label %411, label %419

411:                                              ; preds = %406
  %412 = load volatile i32, ptr %254, align 4
  %413 = and i32 %412, 1
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %419

415:                                              ; preds = %411
  %416 = call i32 @schedule_hrtimeout(ptr noundef nonnull %7, i32 noundef 0) #21
  %417 = icmp eq i32 %416, 0
  %418 = select i1 %417, i32 -62, i32 1
  br label %419

419:                                              ; preds = %415, %411, %406, %399, %394, %385, %382
  %420 = phi i32 [ 0, %406 ], [ 1, %411 ], [ 1, %385 ], [ 1, %382 ], [ %398, %394 ], [ 0, %399 ], [ %418, %415 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  call void @finish_wait(ptr noundef %357, ptr noundef nonnull %8) #21
  %421 = call i32 @__cond_resched() #21
  %422 = icmp sgt i32 %420, 0
  br i1 %422, label %358, label %423

423:                                              ; preds = %419
  %424 = icmp eq i32 %420, -4
  br i1 %424, label %425, label %434

425:                                              ; preds = %423
  %426 = load volatile i32, ptr %13, align 4
  %427 = and i32 %426, 256
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %440, !prof !10

429:                                              ; preds = %425
  %430 = load volatile i32, ptr %13, align 4
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %440, !prof !11

433:                                              ; preds = %429
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.80, i32 noundef 519, i32 noundef 9, ptr noundef null) #21
  br label %440

434:                                              ; preds = %423, %373, %372
  %435 = phi i32 [ %420, %423 ], [ -16, %372 ], [ -16, %373 ]
  %436 = call i32 @_test_and_clear_bit(i32 noundef 20, ptr noundef %13) #21
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %440, label %438

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.task_struct, ptr %13, i32 0, i32 97
  call void @__set_current_blocked(ptr noundef %439) #21
  br label %440

440:                                              ; preds = %438, %434, %433, %429, %425
  %441 = phi i32 [ -4, %425 ], [ -4, %429 ], [ -4, %433 ], [ %435, %434 ], [ %435, %438 ]
  %442 = getelementptr inbounds %struct.io_rings, ptr %253, i32 0, i32 1
  %443 = load volatile i32, ptr %442, align 64
  %444 = getelementptr inbounds %struct.io_rings, ptr %253, i32 0, i32 1, i32 2
  %445 = load volatile i32, ptr %444, align 64
  %446 = icmp eq i32 %443, %445
  %447 = select i1 %446, i32 %441, i32 0
  br label %448

448:                                              ; preds = %440, %315, %311, %274
  %449 = phi i32 [ %447, %440 ], [ -14, %311 ], [ %316, %315 ], [ 0, %274 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #21
  br label %450

450:                                              ; preds = %448, %249, %184, %151, %147, %144, %86, %61
  %451 = phi i32 [ 0, %61 ], [ %1, %151 ], [ 0, %144 ], [ %149, %147 ], [ 0, %86 ], [ %1, %184 ], [ %1, %249 ], [ %1, %448 ]
  %452 = phi i32 [ -77, %61 ], [ 0, %151 ], [ %145, %144 ], [ 0, %147 ], [ -130, %86 ], [ %185, %184 ], [ %250, %249 ], [ %449, %448 ]
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %453 = load volatile i32, ptr %40, align 4
  %454 = and i32 %453, 3
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %456, label %465, !prof !10

456:                                              ; preds = %450
  %457 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %458 = call i32 @llvm.read_register.i32(metadata !0) #21
  %459 = inttoptr i32 %458 to ptr
  %460 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %459) #6, !srcloc !12
  %461 = add i32 %460, %453
  %462 = inttoptr i32 %461 to ptr
  %463 = load i32, ptr %462, align 4
  %464 = add i32 %463, -1
  store i32 %464, ptr %462, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %457) #21, !srcloc !22
  br label %475

465:                                              ; preds = %450
  %466 = getelementptr inbounds %struct.percpu_ref, ptr %40, i32 0, i32 1
  %467 = load ptr, ptr %466, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %467) #21, !srcloc !13
  %468 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %467, ptr %467, i32 1, ptr elementtype(i32) %467) #21, !srcloc !35
  %469 = extractvalue { i32, i32 } %468, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %475, !prof !11

471:                                              ; preds = %465
  %472 = load ptr, ptr %466, align 4
  %473 = getelementptr inbounds %struct.percpu_ref_data, ptr %472, i32 0, i32 1
  %474 = load ptr, ptr %473, align 4
  call void %474(ptr noundef %40) #21
  br label %475

475:                                              ; preds = %471, %465, %456
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %476

476:                                              ; preds = %475, %60, %34
  %477 = phi i32 [ 0, %34 ], [ 0, %60 ], [ %451, %475 ]
  %478 = phi i32 [ -95, %34 ], [ -6, %60 ], [ %452, %475 ]
  %479 = and i32 %30, 1
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %482, label %481

481:                                              ; preds = %476
  call void @fput(ptr noundef nonnull %32) #21
  br label %482

482:                                              ; preds = %481, %476
  %483 = icmp eq i32 %477, 0
  %484 = select i1 %483, i32 %478, i32 %477
  br label %485

485:                                              ; preds = %482, %29, %27
  %486 = phi i32 [ %484, %482 ], [ -22, %27 ], [ -9, %29 ]
  ret i32 %486
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__se_sys_io_uring_setup(i32 noundef %0, i32 noundef %1) #0 {
  %3 = alloca %struct.io_uring_params, align 8
  %4 = inttoptr i32 %1 to ptr
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %3) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(120) %3, i8 0, i32 120, i1 false) #21, !annotation !9
  %5 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %4, i32 120, i32 -1090519040) #23, !srcloc !27
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %32, !prof !10

8:                                                ; preds = %2
  %9 = tail call ptr @llvm.thread.pointer() #21
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %11 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %10) #6, !srcloc !28
  %12 = and i32 %11, -13
  %13 = or i32 %12, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %13) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %14 = call i32 @arm_copy_from_user(ptr noundef nonnull %3, ptr noundef %4, i32 noundef 120) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32, !prof !10

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.io_uring_params, ptr %3, i32 0, i32 7, i32 0
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %struct.io_uring_params, ptr %3, i32 0, i32 7, i32 1
  %21 = load i32, ptr %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = select i1 %19, i1 %22, i1 false
  %24 = getelementptr inbounds %struct.io_uring_params, ptr %3, i32 0, i32 7, i32 2
  %25 = load i32, ptr %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %23, i1 %26, i1 false
  %28 = getelementptr inbounds %struct.io_uring_params, ptr %3, i32 0, i32 2
  %29 = load i32, ptr %28, align 8
  %30 = icmp ult i32 %29, 128
  %31 = select i1 %27, i1 %30, i1 false
  br i1 %31, label %36, label %38

32:                                               ; preds = %8, %2
  %33 = phi i32 [ %14, %8 ], [ 120, %2 ]
  %34 = sub i32 120, %33
  %35 = getelementptr i8, ptr %3, i32 %34
  call void @llvm.memset.p0.i32(ptr align 1 %35, i8 0, i32 %33, i1 false) #21
  br label %38

36:                                               ; preds = %16
  %37 = call fastcc i32 @io_uring_create(i32 noundef %0, ptr noundef nonnull %3, ptr noundef %4) #24
  br label %38

38:                                               ; preds = %36, %32, %16
  %39 = phi i32 [ %37, %36 ], [ -14, %32 ], [ -22, %16 ]
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %3) #21
  ret i32 %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @__se_sys_io_uring_register(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #0 {
  %5 = alloca %struct.io_uring_rsrc_update2, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.io_uring_rsrc_update2, align 8
  %9 = alloca %struct.io_uring_rsrc_update2, align 8
  %10 = inttoptr i32 %2 to ptr
  %11 = tail call i32 @__fdget(i32 noundef %0) #21, !noalias !37
  %12 = and i32 %11, -4
  %13 = inttoptr i32 %12 to ptr
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %350, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.file, ptr %13, i32 0, i32 3
  %17 = load ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, @io_uring_fops
  br i1 %18, label %19, label %345

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.file, ptr %13, i32 0, i32 15
  %21 = load ptr, ptr %20, align 8
  %22 = tail call ptr @llvm.thread.pointer() #21
  %23 = load volatile i32, ptr %22, align 4
  %24 = and i32 %23, 256
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 102
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %19
  %31 = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 1
  store volatile i32 0, ptr %31, align 8
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %22) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %32 = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 102
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  tail call void @task_work_run() #21
  br label %36

36:                                               ; preds = %35, %30, %26
  %37 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %37) #21
  %38 = load i32, ptr %21, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %312

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.anon.178, ptr %21, i32 0, i32 3
  %43 = load i8, ptr %42, align 16
  %44 = and i8 %43, 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i32 %1, 19
  br i1 %47, label %312, label %48

48:                                               ; preds = %46
  %49 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %1, i32 20) #21, !srcloc !40
  %50 = and i32 %49, %1
  %51 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 12
  %52 = lshr i32 %50, 5
  %53 = getelementptr i32, ptr %51, i32 %52
  %54 = load volatile i32, ptr %53, align 4
  %55 = shl nuw nsw i32 1, %50
  %56 = and i32 %55, %54
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %312, label %58

58:                                               ; preds = %48, %41
  %59 = phi i32 [ %50, %48 ], [ %1, %41 ]
  switch i32 %59, label %60 [
    i32 0, label %63
    i32 1, label %63
    i32 2, label %63
    i32 3, label %63
    i32 6, label %63
    i32 8, label %63
    i32 9, label %63
    i32 10, label %63
    i32 13, label %63
    i32 14, label %63
    i32 15, label %63
    i32 16, label %63
    i32 17, label %63
    i32 18, label %63
    i32 19, label %63
  ]

60:                                               ; preds = %58
  %61 = tail call fastcc i32 @io_ctx_quiesce(ptr noundef %21) #24
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %312

63:                                               ; preds = %60, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58, %58
  switch i32 %59, label %307 [
    i32 0, label %64
    i32 1, label %66
    i32 2, label %77
    i32 3, label %79
    i32 6, label %90
    i32 4, label %111
    i32 7, label %111
    i32 5, label %147
    i32 8, label %155
    i32 9, label %161
    i32 10, label %188
    i32 12, label %199
    i32 11, label %226
    i32 13, label %228
    i32 14, label %230
    i32 15, label %259
    i32 16, label %261
    i32 17, label %290
    i32 18, label %296
    i32 19, label %301
  ]

64:                                               ; preds = %63
  %65 = tail call fastcc i32 @io_sqe_buffers_register(ptr noundef %21, ptr noundef %10, i32 noundef %3, ptr noundef null) #21
  br label %312

66:                                               ; preds = %63
  %67 = or i32 %3, %2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %312

69:                                               ; preds = %66
  %70 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 13, i32 3
  %71 = load ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, null
  br i1 %72, label %312, label %73

73:                                               ; preds = %69
  %74 = tail call fastcc i32 @io_rsrc_ref_quiesce(ptr noundef nonnull %71, ptr noundef %21) #24
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %312

76:                                               ; preds = %73
  tail call fastcc void @__io_sqe_buffers_unregister(ptr noundef %21) #21
  br label %312

77:                                               ; preds = %63
  %78 = tail call fastcc i32 @io_sqe_files_register(ptr noundef %21, ptr noundef %10, i32 noundef %3, ptr noundef null) #21
  br label %312

79:                                               ; preds = %63
  %80 = or i32 %3, %2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %312

82:                                               ; preds = %79
  %83 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 13, i32 2
  %84 = load ptr, ptr %83, align 8
  %85 = icmp eq ptr %84, null
  br i1 %85, label %312, label %86

86:                                               ; preds = %82
  %87 = tail call fastcc i32 @io_rsrc_ref_quiesce(ptr noundef nonnull %84, ptr noundef %21) #24
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %312

89:                                               ; preds = %86
  tail call fastcc void @__io_sqe_files_unregister(ptr noundef %21) #21
  br label %312

90:                                               ; preds = %63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #21
  %91 = icmp eq i32 %3, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %90
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %5, i8 0, i32 32, i1 false) #21
  %93 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %10, i32 16, i32 -1090519040) #23, !srcloc !27
  %94 = extractvalue { i32, i32 } %93, 0
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %103, !prof !10

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %98 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %97) #6, !srcloc !28
  %99 = and i32 %98, -13
  %100 = or i32 %99, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %100) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %101 = call i32 @arm_copy_from_user(ptr noundef nonnull %5, ptr noundef %10, i32 noundef 16) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %98) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103, !prof !10

103:                                              ; preds = %96, %92
  %104 = phi i32 [ %101, %96 ], [ 16, %92 ]
  %105 = sub i32 16, %104
  %106 = getelementptr i8, ptr %5, i32 %105
  call void @llvm.memset.p0.i32(ptr align 1 %106, i8 0, i32 %104, i1 false) #21
  br label %109

107:                                              ; preds = %96
  %108 = call fastcc i32 @__io_register_rsrc_update(ptr noundef %21, i32 noundef 0, ptr noundef nonnull %5, i32 noundef %3) #21
  br label %109

109:                                              ; preds = %107, %103, %90
  %110 = phi i32 [ %108, %107 ], [ -22, %90 ], [ -14, %103 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #21
  br label %312

111:                                              ; preds = %63, %63
  %112 = icmp eq i32 %3, 1
  br i1 %112, label %113, label %307

113:                                              ; preds = %111
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store i32 0, ptr %6, align 4, !annotation !9
  %114 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 10, i32 2
  %115 = load ptr, ptr %114, align 8
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %139

117:                                              ; preds = %113
  %118 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %10, i32 4, i32 -1090519040) #23, !srcloc !27
  %119 = extractvalue { i32, i32 } %118, 0
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %128, !prof !10

121:                                              ; preds = %117
  %122 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %123 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %122) #6, !srcloc !28
  %124 = and i32 %123, -13
  %125 = or i32 %124, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %125) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %126 = call i32 @arm_copy_from_user(ptr noundef nonnull %6, ptr noundef %10, i32 noundef 4) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %123) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %132, label %128, !prof !10

128:                                              ; preds = %121, %117
  %129 = phi i32 [ %126, %121 ], [ 4, %117 ]
  %130 = sub i32 4, %129
  %131 = getelementptr i8, ptr %6, i32 %130
  call void @llvm.memset.p0.i32(ptr align 1 %131, i8 0, i32 %129, i1 false) #21
  br label %139

132:                                              ; preds = %121
  %133 = load i32, ptr %6, align 4
  %134 = call ptr @eventfd_ctx_fdget(i32 noundef %133) #21
  store ptr %134, ptr %114, align 8
  %135 = icmp ugt ptr %134, inttoptr (i32 -4096 to ptr)
  br i1 %135, label %141, label %136

136:                                              ; preds = %132
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  %137 = icmp eq i32 %59, 7
  %138 = load i8, ptr %42, align 16
  br i1 %137, label %143, label %145

139:                                              ; preds = %128, %113
  %140 = phi i32 [ -14, %128 ], [ -16, %113 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %307

141:                                              ; preds = %132
  %142 = ptrtoint ptr %134 to i32
  store ptr null, ptr %114, align 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %307

143:                                              ; preds = %136
  %144 = or i8 %138, 4
  store i8 %144, ptr %42, align 16
  br label %309

145:                                              ; preds = %136
  %146 = and i8 %138, -5
  store i8 %146, ptr %42, align 16
  br label %307

147:                                              ; preds = %63
  %148 = or i32 %3, %2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %309

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 10, i32 2
  %152 = load ptr, ptr %151, align 8
  %153 = icmp eq ptr %152, null
  br i1 %153, label %309, label %154

154:                                              ; preds = %150
  tail call void @eventfd_ctx_put(ptr noundef nonnull %152) #21
  store ptr null, ptr %151, align 8
  br label %309

155:                                              ; preds = %63
  %156 = icmp eq i32 %2, 0
  %157 = icmp ugt i32 %3, 256
  %158 = or i1 %156, %157
  br i1 %158, label %312, label %159

159:                                              ; preds = %155
  %160 = tail call fastcc i32 @io_probe(ptr noundef nonnull %10, i32 noundef %3) #24
  br label %312

161:                                              ; preds = %63
  %162 = or i32 %3, %2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %312

164:                                              ; preds = %161
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store i32 0, ptr %7, align 4, !annotation !9
  %165 = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 83
  %166 = load ptr, ptr %165, align 8
  %167 = icmp eq ptr %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.cred, ptr %166, i32 0, i32 24
  store i32 0, ptr %169, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %166) #21, !srcloc !13
  %170 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %166, ptr nonnull %166, i32 1, ptr nonnull elementtype(i32) %166) #21, !srcloc !14
  br label %171

171:                                              ; preds = %168, %164
  %172 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 17
  %173 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 18
  tail call void @_raw_spin_lock(ptr noundef %172) #21
  %174 = call i32 @__xa_alloc_cyclic(ptr noundef %172, ptr noundef nonnull %7, ptr noundef %166, [2 x i32] [i32 65535, i32 0], ptr noundef %173, i32 noundef 3264) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %175 = load i16, ptr %172, align 4
  %176 = add i16 %175, 1
  store i16 %176, ptr %172, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %177 = icmp slt i32 %174, 0
  br i1 %177, label %178, label %184

178:                                              ; preds = %171
  br i1 %167, label %186, label %179

179:                                              ; preds = %178
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %166) #21, !srcloc !13
  %180 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %166, ptr nonnull %166, i32 1, ptr nonnull elementtype(i32) %166) #21, !srcloc !35
  %181 = extractvalue { i32, i32 } %180, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %186

183:                                              ; preds = %179
  call void @__put_cred(ptr noundef nonnull %166) #21
  br label %186

184:                                              ; preds = %171
  %185 = load i32, ptr %7, align 4
  br label %186

186:                                              ; preds = %184, %183, %179, %178
  %187 = phi i32 [ %185, %184 ], [ %174, %178 ], [ %174, %179 ], [ %174, %183 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br label %312

188:                                              ; preds = %63
  %189 = icmp eq i32 %2, 0
  br i1 %189, label %190, label %312

190:                                              ; preds = %188
  %191 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 17
  %192 = tail call ptr @xa_erase(ptr noundef %191, i32 noundef %3) #21
  %193 = icmp eq ptr %192, null
  br i1 %193, label %312, label %194

194:                                              ; preds = %190
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %192) #21, !srcloc !13
  %195 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %192, ptr nonnull %192, i32 1, ptr nonnull elementtype(i32) %192) #21, !srcloc !35
  %196 = extractvalue { i32, i32 } %195, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %312

198:                                              ; preds = %194
  tail call void @__put_cred(ptr noundef nonnull %192) #21
  br label %312

199:                                              ; preds = %63
  %200 = or i32 %3, %2
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %309

202:                                              ; preds = %199
  %203 = getelementptr inbounds %struct.anon.178, ptr %21, i32 0, i32 2
  %204 = load i32, ptr %203, align 4
  %205 = and i32 %204, 64
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %309, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 12, i32 4
  %209 = load i8, ptr %208, align 2, !range !45
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = load i8, ptr %42, align 16
  %213 = or i8 %212, 8
  store i8 %213, ptr %42, align 16
  br label %214

214:                                              ; preds = %211, %207
  %215 = and i32 %204, -65
  store i32 %215, ptr %203, align 4
  %216 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 5
  %217 = load ptr, ptr %216, align 16
  %218 = icmp eq ptr %217, null
  br i1 %218, label %309, label %219

219:                                              ; preds = %214
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !46
  %220 = getelementptr inbounds %struct.io_sq_data, ptr %217, i32 0, i32 5, i32 1
  %221 = load volatile ptr, ptr %220, align 4
  %222 = icmp eq ptr %221, %220
  br i1 %222, label %309, label %223

223:                                              ; preds = %219
  %224 = load ptr, ptr %216, align 16
  %225 = getelementptr inbounds %struct.io_sq_data, ptr %224, i32 0, i32 5
  tail call void @__wake_up(ptr noundef %225, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %309

226:                                              ; preds = %63
  %227 = tail call fastcc i32 @io_register_restrictions(ptr noundef %21, ptr noundef %10, i32 noundef %3) #24
  br label %309

228:                                              ; preds = %63
  %229 = tail call fastcc i32 @io_register_rsrc(ptr noundef %21, ptr noundef %10, i32 noundef %3, i32 noundef 0) #24
  br label %312

230:                                              ; preds = %63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %8) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %8, i8 0, i32 32, i1 false) #21, !annotation !9
  %231 = icmp eq i32 %3, 32
  br i1 %231, label %232, label %257

232:                                              ; preds = %230
  %233 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %10, i32 32, i32 -1090519040) #23, !srcloc !27
  %234 = extractvalue { i32, i32 } %233, 0
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %243, !prof !10

236:                                              ; preds = %232
  %237 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %238 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %237) #6, !srcloc !28
  %239 = and i32 %238, -13
  %240 = or i32 %239, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %240) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %241 = call i32 @arm_copy_from_user(ptr noundef nonnull %8, ptr noundef %10, i32 noundef 32) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %238) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %247, label %243, !prof !10

243:                                              ; preds = %236, %232
  %244 = phi i32 [ %241, %236 ], [ 32, %232 ]
  %245 = sub i32 32, %244
  %246 = getelementptr i8, ptr %8, i32 %245
  call void @llvm.memset.p0.i32(ptr align 1 %246, i8 0, i32 %244, i1 false) #21
  br label %257

247:                                              ; preds = %236
  %248 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %8, i32 0, i32 4
  %249 = load i32, ptr %248, align 8
  %250 = icmp eq i32 %249, 0
  %251 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %8, i32 0, i32 1
  %252 = load i32, ptr %251, align 4
  %253 = icmp ne i32 %252, 0
  %254 = select i1 %250, i1 true, i1 %253
  br i1 %254, label %257, label %255

255:                                              ; preds = %247
  %256 = call fastcc i32 @__io_register_rsrc_update(ptr noundef %21, i32 noundef 0, ptr noundef nonnull %8, i32 noundef %249) #21
  br label %257

257:                                              ; preds = %255, %247, %243, %230
  %258 = phi i32 [ %256, %255 ], [ -22, %230 ], [ -22, %247 ], [ -14, %243 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %8) #21
  br label %312

259:                                              ; preds = %63
  %260 = tail call fastcc i32 @io_register_rsrc(ptr noundef %21, ptr noundef %10, i32 noundef %3, i32 noundef 1) #24
  br label %312

261:                                              ; preds = %63
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %9) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %9, i8 0, i32 32, i1 false) #21, !annotation !9
  %262 = icmp eq i32 %3, 32
  br i1 %262, label %263, label %288

263:                                              ; preds = %261
  %264 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %10, i32 32, i32 -1090519040) #23, !srcloc !27
  %265 = extractvalue { i32, i32 } %264, 0
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %274, !prof !10

267:                                              ; preds = %263
  %268 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 3
  %269 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %268) #6, !srcloc !28
  %270 = and i32 %269, -13
  %271 = or i32 %270, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %271) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %272 = call i32 @arm_copy_from_user(ptr noundef nonnull %9, ptr noundef %10, i32 noundef 32) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %269) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %278, label %274, !prof !10

274:                                              ; preds = %267, %263
  %275 = phi i32 [ %272, %267 ], [ 32, %263 ]
  %276 = sub i32 32, %275
  %277 = getelementptr i8, ptr %9, i32 %276
  call void @llvm.memset.p0.i32(ptr align 1 %277, i8 0, i32 %275, i1 false) #21
  br label %288

278:                                              ; preds = %267
  %279 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %9, i32 0, i32 4
  %280 = load i32, ptr %279, align 8
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %9, i32 0, i32 1
  %283 = load i32, ptr %282, align 4
  %284 = icmp ne i32 %283, 0
  %285 = select i1 %281, i1 true, i1 %284
  br i1 %285, label %288, label %286

286:                                              ; preds = %278
  %287 = call fastcc i32 @__io_register_rsrc_update(ptr noundef %21, i32 noundef 1, ptr noundef nonnull %9, i32 noundef %280) #21
  br label %288

288:                                              ; preds = %286, %278, %274, %261
  %289 = phi i32 [ %287, %286 ], [ -22, %261 ], [ -22, %278 ], [ -14, %274 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %9) #21
  br label %312

290:                                              ; preds = %63
  %291 = icmp ne i32 %2, 0
  %292 = icmp ne i32 %3, 0
  %293 = and i1 %291, %292
  br i1 %293, label %294, label %312

294:                                              ; preds = %290
  %295 = tail call fastcc i32 @io_register_iowq_aff(ptr noundef nonnull %10, i32 noundef %3) #24
  br label %312

296:                                              ; preds = %63
  %297 = or i32 %3, %2
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %312

299:                                              ; preds = %296
  %300 = tail call fastcc i32 @io_unregister_iowq_aff() #24
  br label %312

301:                                              ; preds = %63
  %302 = icmp eq i32 %2, 0
  %303 = icmp ne i32 %3, 2
  %304 = or i1 %302, %303
  br i1 %304, label %312, label %305

305:                                              ; preds = %301
  %306 = tail call fastcc i32 @io_register_iowq_max_workers(ptr noundef %21, ptr noundef nonnull %10) #24
  br label %312

307:                                              ; preds = %145, %141, %139, %111, %63
  %308 = phi i32 [ -22, %111 ], [ %142, %141 ], [ 0, %145 ], [ -22, %63 ], [ %140, %139 ]
  switch i32 %59, label %309 [
    i32 19, label %312
    i32 18, label %312
    i32 17, label %312
    i32 16, label %312
    i32 6, label %312
    i32 8, label %312
    i32 9, label %312
    i32 10, label %312
    i32 13, label %312
    i32 14, label %312
    i32 15, label %312
  ]

309:                                              ; preds = %307, %226, %223, %219, %214, %202, %199, %154, %150, %147, %143
  %310 = phi i32 [ %308, %307 ], [ -6, %150 ], [ 0, %154 ], [ 0, %143 ], [ -22, %147 ], [ -22, %199 ], [ %227, %226 ], [ -77, %202 ], [ 0, %223 ], [ 0, %219 ], [ 0, %214 ]
  call void @percpu_ref_reinit(ptr noundef %21) #21
  %311 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 14, i32 8
  store i32 0, ptr %311, align 4
  br label %312

312:                                              ; preds = %309, %307, %307, %307, %307, %307, %307, %307, %307, %307, %307, %307, %305, %301, %299, %296, %294, %290, %288, %259, %257, %228, %198, %194, %190, %188, %186, %161, %159, %155, %109, %89, %86, %82, %79, %77, %76, %73, %69, %66, %64, %60, %48, %46, %36
  %313 = phi i32 [ -6, %36 ], [ -22, %46 ], [ -13, %48 ], [ %61, %60 ], [ %310, %309 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %308, %307 ], [ %65, %64 ], [ -22, %66 ], [ %78, %77 ], [ -22, %79 ], [ %110, %109 ], [ %160, %159 ], [ -22, %155 ], [ %187, %186 ], [ -22, %161 ], [ -22, %188 ], [ %229, %228 ], [ %258, %257 ], [ %260, %259 ], [ %289, %288 ], [ -22, %290 ], [ %295, %294 ], [ %300, %299 ], [ -22, %296 ], [ %306, %305 ], [ -22, %301 ], [ -6, %69 ], [ 0, %76 ], [ %74, %73 ], [ -6, %82 ], [ 0, %89 ], [ %87, %86 ], [ -22, %190 ], [ 0, %194 ], [ 0, %198 ]
  call void @mutex_unlock(ptr noundef %37) #21
  %314 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 9
  %315 = load i32, ptr %314, align 8
  %316 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 10
  %317 = load i32, ptr %316, align 4
  %318 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 10, i32 2
  %319 = load ptr, ptr %318, align 8
  %320 = icmp ne ptr %319, null
  %321 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_register, i32 0, i32 1), align 4
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %323, label %345

323:                                              ; preds = %312
  %324 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %325 = load i32, ptr %324, align 8
  %326 = lshr i32 %325, 5
  %327 = getelementptr i32, ptr @__cpu_online_mask, i32 %326
  %328 = load volatile i32, ptr %327, align 4
  %329 = and i32 %325, 31
  %330 = shl nuw i32 1, %329
  %331 = and i32 %330, %328
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %345, label %333

333:                                              ; preds = %323
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !47
  %334 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_register, i32 0, i32 7), align 4
  %335 = icmp eq ptr %334, null
  br i1 %335, label %344, label %336

336:                                              ; preds = %336, %333
  %337 = phi ptr [ %341, %336 ], [ %334, %333 ]
  %338 = load volatile ptr, ptr %337, align 4
  %339 = getelementptr inbounds %struct.tracepoint_func, ptr %337, i32 0, i32 1
  %340 = load ptr, ptr %339, align 4
  call void %338(ptr noundef %340, ptr noundef %21, i32 noundef %1, i32 noundef %315, i32 noundef %317, i1 noundef zeroext %320, i32 noundef %313) #21
  %341 = getelementptr %struct.tracepoint_func, ptr %337, i32 1
  %342 = load ptr, ptr %341, align 4
  %343 = icmp eq ptr %342, null
  br i1 %343, label %344, label %336

344:                                              ; preds = %336, %333
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !48
  br label %345

345:                                              ; preds = %344, %323, %312, %15
  %346 = phi i32 [ -95, %15 ], [ %313, %312 ], [ %313, %323 ], [ %313, %344 ]
  %347 = and i32 %11, 1
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %350, label %349

349:                                              ; preds = %345
  call void @fput(ptr noundef nonnull %13) #21
  br label %350

350:                                              ; preds = %349, %345, %4
  %351 = phi i32 [ -9, %4 ], [ %346, %345 ], [ %346, %349 ]
  ret i32 %351
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @io_uring_init() #4 section ".init.text" {
  %1 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.129, i32 noundef 152, i32 noundef 8, i32 noundef 270336, ptr noundef null) #21
  store ptr %1, ptr @req_cachep, align 4
  ret i32 0
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_create(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %21

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %5, i32 0, i32 2
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %5, i32 0, i32 1
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_io_uring_create, ptr %5, i32 0, i32 5
  %19 = load i32, ptr %18, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.11, ptr noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19) #21
  %20 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %21

21:                                               ; preds = %8, %3
  %22 = phi i32 [ %20, %8 ], [ %6, %3 ]
  ret i32 %22
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_register(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 5
  %19 = load i8, ptr %18, align 4, !range !45
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_register, ptr %5, i32 0, i32 6
  %22 = load i32, ptr %21, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.20, ptr noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %20, i32 noundef %22) #21
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_file_get(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_file_get, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.21, ptr noundef %11, i32 noundef %13) #21
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_queue_async_work(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %5, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %5, i32 0, i32 5
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %5, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, ptr @.str.29, ptr @.str.28
  %20 = getelementptr inbounds %struct.trace_event_raw_io_uring_queue_async_work, ptr %5, i32 0, i32 4
  %21 = load ptr, ptr %20, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.27, ptr noundef %11, ptr noundef %13, i32 noundef %15, ptr noundef nonnull %19, ptr noundef %21) #21
  %22 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %23

23:                                               ; preds = %8, %3
  %24 = phi i32 [ %22, %8 ], [ %6, %3 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_defer(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_defer, ptr %5, i32 0, i32 3
  %15 = load i64, ptr %14, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.32, ptr noundef %11, ptr noundef %13, i64 noundef %15) #21
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_link(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_link, ptr %5, i32 0, i32 3
  %15 = load ptr, ptr %14, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.34, ptr noundef %11, ptr noundef %13, ptr noundef %15) #21
  %16 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %17

17:                                               ; preds = %8, %3
  %18 = phi i32 [ %16, %8 ], [ %6, %3 ]
  ret i32 %18
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_cqring_wait(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_cqring_wait, ptr %5, i32 0, i32 2
  %13 = load i32, ptr %12, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.36, ptr noundef %11, i32 noundef %13) #21
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_fail_link(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_fail_link, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.38, ptr noundef %11, ptr noundef %13) #21
  %14 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %15

15:                                               ; preds = %8, %3
  %16 = phi i32 [ %14, %8 ], [ %6, %3 ]
  ret i32 %16
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_complete(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %5, i32 0, i32 2
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %5, i32 0, i32 3
  %15 = load i32, ptr %14, align 8
  %16 = getelementptr inbounds %struct.trace_event_raw_io_uring_complete, ptr %5, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.43, ptr noundef %11, i64 noundef %13, i32 noundef %15, i32 noundef %17) #21
  %18 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %19

19:                                               ; preds = %8, %3
  %20 = phi i32 [ %18, %8 ], [ %6, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_submit_sqe(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 3
  %15 = load i8, ptr %14, align 8
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 4
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 5
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 6
  %22 = load i8, ptr %21, align 4, !range !45
  %23 = zext i8 %22 to i32
  %24 = getelementptr inbounds %struct.trace_event_raw_io_uring_submit_sqe, ptr %5, i32 0, i32 7
  %25 = load i8, ptr %24, align 1, !range !45
  %26 = zext i8 %25 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.47, ptr noundef %11, ptr noundef %13, i32 noundef %16, i64 noundef %18, i32 noundef %20, i32 noundef %23, i32 noundef %26) #21
  %27 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %28

28:                                               ; preds = %8, %3
  %29 = phi i32 [ %27, %8 ], [ %6, %3 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_poll_arm(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 3
  %15 = load i8, ptr %14, align 8
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 4
  %18 = load i64, ptr %17, align 8
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 5
  %20 = load i32, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_arm, ptr %5, i32 0, i32 6
  %22 = load i32, ptr %21, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.50, ptr noundef %11, ptr noundef %13, i32 noundef %16, i64 noundef %18, i32 noundef %20, i32 noundef %22) #21
  %23 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %24

24:                                               ; preds = %8, %3
  %25 = phi i32 [ %23, %8 ], [ %6, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_poll_wake(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %5, i32 0, i32 2
  %13 = load i8, ptr %12, align 4
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %5, i32 0, i32 3
  %16 = load i64, ptr %15, align 8
  %17 = getelementptr inbounds %struct.trace_event_raw_io_uring_poll_wake, ptr %5, i32 0, i32 4
  %18 = load i32, ptr %17, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.51, ptr noundef %11, i32 noundef %14, i64 noundef %16, i32 noundef %18) #21
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_task_add(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %5, i32 0, i32 2
  %13 = load i8, ptr %12, align 4
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %5, i32 0, i32 3
  %16 = load i64, ptr %15, align 8
  %17 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_add, ptr %5, i32 0, i32 4
  %18 = load i32, ptr %17, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.52, ptr noundef %11, i32 noundef %14, i64 noundef %16, i32 noundef %18) #21
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_task_run(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %5, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %5, i32 0, i32 2
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %5, i32 0, i32 3
  %15 = load i8, ptr %14, align 8
  %16 = zext i8 %15 to i32
  %17 = getelementptr inbounds %struct.trace_event_raw_io_uring_task_run, ptr %5, i32 0, i32 4
  %18 = load i64, ptr %17, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.53, ptr noundef %11, ptr noundef %13, i32 noundef %16, i64 noundef %18) #21
  %19 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %20

20:                                               ; preds = %8, %3
  %21 = phi i32 [ %19, %8 ], [ %6, %3 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @trace_raw_output_io_uring_req_failed(ptr noundef %0, i32 noundef %1, ptr noundef %2) #0 {
  %4 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 16
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i32 @trace_raw_output_prep(ptr noundef %0, ptr noundef %2) #21
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %44

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.trace_iterator, ptr %0, i32 0, i32 15
  %10 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 1
  %11 = load i8, ptr %10, align 8
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 2
  %14 = load i8, ptr %13, align 1
  %15 = zext i8 %14 to i32
  %16 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 3
  %17 = load i8, ptr %16, align 2
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 4
  %20 = load i64, ptr %19, align 8
  %21 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 5
  %22 = load i64, ptr %21, align 8
  %23 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 6
  %24 = load i32, ptr %23, align 8
  %25 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 7
  %26 = load i32, ptr %25, align 4
  %27 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 8
  %28 = load i64, ptr %27, align 8
  %29 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 9
  %30 = load i16, ptr %29, align 8
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 10
  %33 = load i16, ptr %32, align 2
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 11
  %36 = load i32, ptr %35, align 4
  %37 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 12
  %38 = load i64, ptr %37, align 8
  %39 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 13
  %40 = load i64, ptr %39, align 8
  %41 = getelementptr inbounds %struct.trace_event_raw_io_uring_req_failed, ptr %5, i32 0, i32 14
  %42 = load i32, ptr %41, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %0, ptr noundef nonnull @.str.66, i32 noundef %12, i32 noundef %15, i32 noundef %18, i64 noundef %20, i64 noundef %22, i32 noundef %24, i32 noundef %26, i64 noundef %28, i32 noundef %31, i32 noundef %34, i32 noundef %36, i64 noundef %38, i64 noundef %40, i32 noundef %42) #21
  %43 = tail call i32 @trace_handle_return(ptr noundef %9) #21
  br label %44

44:                                               ; preds = %8, %3
  %45 = phi i32 [ %43, %8 ], [ %6, %3 ]
  ret i32 %45
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #6

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #7

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_wq_exit_start(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_drop_tctx_refs(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 91
  %3 = load ptr, ptr %2, align 8
  %4 = load i32, ptr %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  store i32 0, ptr %3, align 8
  %7 = getelementptr inbounds %struct.io_uring_task, ptr %3, i32 0, i32 5
  %8 = zext i32 %4 to i64
  %9 = sub nsw i64 0, %8
  %10 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %7, i64 noundef %9, i32 noundef %10) #21
  %11 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #21, !srcloc !13
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %11, ptr %11, i32 %4, ptr elementtype(i32) %11) #21, !srcloc !50
  %13 = extractvalue { i32, i32, i32 } %12, 0
  %14 = icmp eq i32 %13, %4
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = sub i32 %13, %4
  %17 = or i32 %16, %13
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %21, label %19, !prof !10

19:                                               ; preds = %15
  tail call void @refcount_warn_saturate(ptr noundef %11, i32 noundef 3) #21
  br label %21

20:                                               ; preds = %6
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  tail call void @__put_task_struct(ptr noundef %0) #21
  br label %21

21:                                               ; preds = %20, %19, %15, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_find(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_try_cancel_requests(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = alloca %struct.io_task_cancel, align 8
  %5 = zext i1 %2 to i8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  store i64 0, ptr %4, align 8, !annotation !9
  store ptr %1, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_task_cancel, ptr %4, i32 0, i32 1
  store i8 %5, ptr %6, align 4
  %7 = icmp eq ptr %1, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 91
  %10 = load ptr, ptr %9, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi ptr [ %10, %8 ], [ null, %3 ]
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds %struct.io_uring_task, ptr %12, i32 0, i32 4
  %15 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 5
  %17 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 2
  br label %18

18:                                               ; preds = %73, %11
  br i1 %7, label %19, label %21

19:                                               ; preds = %18
  %20 = call fastcc zeroext i1 @io_uring_try_cancel_iowq(ptr noundef %0) #22
  br label %28

21:                                               ; preds = %18
  br i1 %13, label %28, label %22

22:                                               ; preds = %21
  %23 = load ptr, ptr %14, align 8
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = call i32 @io_wq_cancel_cb(ptr noundef nonnull %23, ptr noundef nonnull @io_cancel_task_cb, ptr noundef nonnull %4, i1 noundef zeroext true) #21
  %27 = icmp ne i32 %26, 2
  br label %28

28:                                               ; preds = %25, %22, %21, %19
  %29 = phi i1 [ %27, %25 ], [ false, %22 ], [ false, %21 ], [ %20, %19 ]
  %30 = load i32, ptr %15, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = and i1 %32, %2
  br i1 %33, label %42, label %34

34:                                               ; preds = %28
  %35 = load ptr, ptr %16, align 16
  %36 = icmp eq ptr %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.io_sq_data, ptr %35, i32 0, i32 4
  %39 = load ptr, ptr %38, align 4
  %40 = tail call ptr @llvm.thread.pointer() #21
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %37, %28
  %43 = load volatile ptr, ptr %17, align 8
  %44 = icmp eq ptr %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %45, %42
  call fastcc void @io_iopoll_try_reap_events(ptr noundef %0) #22
  %46 = load volatile ptr, ptr %17, align 8
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %45

48:                                               ; preds = %45, %42, %37, %34
  %49 = phi i1 [ %29, %37 ], [ %29, %34 ], [ %29, %42 ], [ true, %45 ]
  %50 = call fastcc zeroext i1 @io_cancel_defer_files(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #22
  %51 = or i1 %49, %50
  %52 = call fastcc zeroext i1 @io_poll_remove_all(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #22
  %53 = or i1 %51, %52
  %54 = call fastcc zeroext i1 @io_kill_timeouts(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) #22
  %55 = or i1 %53, %54
  br i1 %7, label %72, label %56

56:                                               ; preds = %48
  %57 = tail call ptr @llvm.thread.pointer() #21
  %58 = load volatile i32, ptr %57, align 4
  %59 = and i32 %58, 256
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 102
  %63 = load ptr, ptr %62, align 4
  %64 = icmp eq ptr %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61, %56
  %66 = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 1
  store volatile i32 0, ptr %66, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %57) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %67 = getelementptr inbounds %struct.task_struct, ptr %57, i32 0, i32 102
  %68 = load ptr, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  call void @task_work_run() #21
  br label %73

71:                                               ; preds = %61
  br i1 %55, label %73, label %75

72:                                               ; preds = %48
  br i1 %55, label %73, label %75

73:                                               ; preds = %72, %71, %70, %65
  %74 = call i32 @__cond_resched() #21
  br label %18

75:                                               ; preds = %72, %71
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_find_after(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_run_task_work() unnamed_addr #8 {
  %1 = tail call ptr @llvm.thread.pointer() #21
  %2 = load volatile i32, ptr %1, align 4
  %3 = and i32 %2, 256
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 102
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %0
  %10 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 1
  store volatile i32 0, ptr %10, align 8
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %1) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %11 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 102
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  tail call void @task_work_run() #21
  br label %15

15:                                               ; preds = %14, %9, %5
  %16 = phi i1 [ false, %5 ], [ true, %9 ], [ true, %14 ]
  ret i1 %16
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_clean_tctx(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %struct.io_uring_task, ptr %0, i32 0, i32 4
  %4 = load ptr, ptr %3, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #21
  store i32 0, ptr %2, align 4
  %5 = getelementptr inbounds %struct.io_uring_task, ptr %0, i32 0, i32 1
  %6 = call ptr @xa_find(ptr noundef %5, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %7 = icmp eq ptr %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %8, %1
  %9 = load i32, ptr %2, align 4
  call fastcc void @io_uring_del_tctx_node(i32 noundef %9) #22
  %10 = call i32 @__cond_resched() #21
  %11 = call ptr @xa_find_after(ptr noundef %5, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %8

13:                                               ; preds = %8, %1
  %14 = icmp eq ptr %4, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %13
  call void @io_wq_put_and_exit(ptr noundef nonnull %4) #21
  store ptr null, ptr %3, align 8
  br label %16

16:                                               ; preds = %15, %13
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #21
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.thread.pointer() #7

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @put_task_struct_many(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  %3 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %3) #21, !srcloc !13
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %3, ptr %3, i32 %1, ptr elementtype(i32) %3) #21, !srcloc !50
  %5 = extractvalue { i32, i32, i32 } %4, 0
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = sub i32 %5, %1
  %9 = or i32 %8, %5
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %13, label %11, !prof !10

11:                                               ; preds = %7
  tail call void @refcount_warn_saturate(ptr noundef %3, i32 noundef 3) #21
  br label %13

12:                                               ; preds = %2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  tail call void @__put_task_struct(ptr noundef %0) #21
  br label %13

13:                                               ; preds = %12, %11, %7
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_task_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @__percpu_counter_sum(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_uring_try_cancel_iowq(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %2) #21
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 7
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, %3
  br i1 %5, label %26, label %6

6:                                                ; preds = %22, %1
  %7 = phi ptr [ %24, %22 ], [ %4, %1 ]
  %8 = phi i1 [ %23, %22 ], [ false, %1 ]
  %9 = getelementptr inbounds %struct.io_tctx_node, ptr %7, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.task_struct, ptr %10, i32 0, i32 91
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.io_uring_task, ptr %12, i32 0, i32 4
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = tail call i32 @io_wq_cancel_cb(ptr noundef nonnull %16, ptr noundef nonnull @io_cancel_ctx_cb, ptr noundef %0, i1 noundef zeroext true) #21
  %20 = icmp ne i32 %19, 2
  %21 = or i1 %8, %20
  br label %22

22:                                               ; preds = %18, %14, %6
  %23 = phi i1 [ %21, %18 ], [ %8, %14 ], [ %8, %6 ]
  %24 = load ptr, ptr %7, align 4
  %25 = icmp eq ptr %24, %3
  br i1 %25, label %26, label %6

26:                                               ; preds = %22, %1
  %27 = phi i1 [ false, %1 ], [ %23, %22 ]
  tail call void @mutex_unlock(ptr noundef %2) #21
  ret i1 %27
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @io_wq_cancel_cb(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal zeroext i1 @io_cancel_task_cb(ptr noundef readonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = getelementptr i8, ptr %0, i32 -132
  %4 = load ptr, ptr %1, align 4
  %5 = getelementptr inbounds %struct.io_task_cancel, ptr %1, i32 0, i32 1
  %6 = load i8, ptr %5, align 4, !range !45
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq ptr %4, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr i8, ptr %0, i32 -48
  %11 = load ptr, ptr %10, align 4
  %12 = icmp ne ptr %11, %4
  %13 = or i1 %7, %12
  %14 = xor i1 %12, true
  br i1 %13, label %59, label %16

15:                                               ; preds = %2
  br i1 %7, label %59, label %16

16:                                               ; preds = %15, %9
  %17 = getelementptr i8, ptr %0, i32 -72
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 4096
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %16
  %22 = getelementptr i8, ptr %0, i32 -52
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %23, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %24) #21
  %25 = icmp eq ptr %3, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %32, %21
  %27 = phi ptr [ %34, %32 ], [ %3, %21 ]
  %28 = getelementptr inbounds %struct.io_kiocb, ptr %27, i32 0, i32 4
  %29 = load i32, ptr %28, align 4
  %30 = and i32 %29, 512
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = getelementptr inbounds %struct.io_kiocb, ptr %27, i32 0, i32 14
  %34 = load ptr, ptr %33, align 8
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %26

36:                                               ; preds = %32, %26
  %37 = xor i1 %31, true
  br label %38

38:                                               ; preds = %36, %21
  %39 = phi i1 [ false, %21 ], [ %37, %36 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %40 = load i16, ptr %24, align 4
  %41 = add i16 %40, 1
  store i16 %41, ptr %24, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %59

42:                                               ; preds = %16
  %43 = icmp eq ptr %3, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %42
  %45 = and i32 %18, 512
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %52, %44
  %48 = phi ptr [ %50, %52 ], [ %3, %44 ]
  %49 = getelementptr inbounds %struct.io_kiocb, ptr %48, i32 0, i32 14
  %50 = load ptr, ptr %49, align 8
  %51 = icmp eq ptr %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.io_kiocb, ptr %50, i32 0, i32 4
  %54 = load i32, ptr %53, align 4
  %55 = and i32 %54, 512
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %47, label %57

57:                                               ; preds = %52, %47
  %58 = xor i1 %51, true
  br label %59

59:                                               ; preds = %57, %44, %42, %38, %15, %9
  %60 = phi i1 [ %14, %9 ], [ true, %15 ], [ %39, %38 ], [ false, %42 ], [ true, %44 ], [ %58, %57 ]
  ret i1 %60
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_iopoll_try_reap_events(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %7) #21
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 2
  %9 = load volatile ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %21, %6
  %12 = tail call fastcc i32 @io_do_iopoll(ptr noundef %0, i1 noundef zeroext true)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = tail call ptr @llvm.thread.pointer() #21
  %16 = load volatile i32, ptr %15, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  tail call void @mutex_unlock(ptr noundef %7) #21
  %20 = tail call i32 @__cond_resched() #21
  tail call void @mutex_lock(ptr noundef %7) #21
  br label %21

21:                                               ; preds = %19, %14
  %22 = load volatile ptr, ptr %8, align 8
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %11

24:                                               ; preds = %21, %11, %6
  tail call void @mutex_unlock(ptr noundef %7) #21
  br label %25

25:                                               ; preds = %24, %1
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_cancel_defer_files(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = alloca %struct.list_head, align 8
  %5 = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  store ptr %4, ptr %4, align 8
  store ptr %4, ptr %5, align 4
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %6) #21
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 5
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 5, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, %7
  br i1 %10, label %35, label %11

11:                                               ; preds = %31, %3
  %12 = phi ptr [ %33, %31 ], [ %9, %3 ]
  %13 = getelementptr inbounds %struct.io_defer_entry, ptr %12, i32 0, i32 1
  %14 = load ptr, ptr %13, align 4
  %15 = call fastcc zeroext i1 @io_match_task_safe(ptr noundef %14, ptr noundef %1, i1 noundef zeroext %2)
  br i1 %15, label %16, label %31

16:                                               ; preds = %11
  %17 = load volatile ptr, ptr %7, align 4
  %18 = icmp eq ptr %17, %7
  br i1 %18, label %35, label %19

19:                                               ; preds = %16
  %20 = load volatile ptr, ptr %7, align 4
  %21 = icmp eq ptr %20, %7
  br i1 %21, label %27, label %22

22:                                               ; preds = %19
  %23 = load ptr, ptr %8, align 4
  %24 = icmp ne ptr %20, %23
  %25 = icmp eq ptr %20, %12
  %26 = select i1 %24, i1 true, i1 %25
  br i1 %26, label %27, label %35

27:                                               ; preds = %22, %19
  %28 = load ptr, ptr %12, align 4
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %20, ptr %4, align 8
  %30 = getelementptr inbounds %struct.list_head, ptr %20, i32 0, i32 1
  store ptr %4, ptr %30, align 4
  store ptr %12, ptr %5, align 4
  store ptr %4, ptr %12, align 4
  store ptr %28, ptr %7, align 4
  store ptr %7, ptr %29, align 4
  br label %35

31:                                               ; preds = %11
  %32 = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, %7
  br i1 %34, label %35, label %11

35:                                               ; preds = %31, %27, %22, %16, %3
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %36 = load i16, ptr %6, align 4
  %37 = add i16 %36, 1
  store i16 %37, ptr %6, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %38 = load volatile ptr, ptr %4, align 8
  %39 = icmp ne ptr %38, %4
  br i1 %39, label %40, label %53

40:                                               ; preds = %35
  %41 = load volatile ptr, ptr %4, align 8
  %42 = icmp eq ptr %41, %4
  br i1 %42, label %53, label %43

43:                                               ; preds = %43, %40
  %44 = phi ptr [ %51, %43 ], [ %41, %40 ]
  %45 = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  %46 = load ptr, ptr %45, align 4
  %47 = load ptr, ptr %44, align 4
  %48 = getelementptr inbounds %struct.list_head, ptr %47, i32 0, i32 1
  store ptr %46, ptr %48, align 4
  store volatile ptr %47, ptr %46, align 4
  store volatile ptr %44, ptr %44, align 4
  store ptr %44, ptr %45, align 4
  %49 = getelementptr inbounds %struct.io_defer_entry, ptr %44, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  call fastcc void @io_req_complete_failed(ptr noundef %50, i32 noundef -125)
  call void @kfree(ptr noundef %44) #21
  %51 = load volatile ptr, ptr %4, align 8
  %52 = icmp eq ptr %51, %4
  br i1 %52, label %53, label %43

53:                                               ; preds = %43, %40, %35
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  ret i1 %39
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_poll_remove_all(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %4) #21
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 4
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 3
  br label %7

7:                                                ; preds = %30, %3
  %8 = phi i1 [ false, %3 ], [ %31, %30 ]
  %9 = phi i32 [ 0, %3 ], [ %32, %30 ]
  %10 = load ptr, ptr %6, align 16
  %11 = getelementptr %struct.hlist_head, ptr %10, i32 %9
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  %14 = getelementptr i8, ptr %12, i32 -116
  %15 = icmp eq ptr %14, null
  %16 = or i1 %13, %15
  br i1 %16, label %30, label %17

17:                                               ; preds = %24, %7
  %18 = phi ptr [ %27, %24 ], [ %14, %7 ]
  %19 = phi i1 [ %25, %24 ], [ %8, %7 ]
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %18, i32 0, i32 16
  %21 = load ptr, ptr %20, align 4
  %22 = tail call fastcc zeroext i1 @io_match_task_safe(ptr noundef nonnull %18, ptr noundef %1, i1 noundef zeroext %2)
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  tail call fastcc void @io_poll_cancel_req(ptr noundef nonnull %18)
  br label %24

24:                                               ; preds = %23, %17
  %25 = phi i1 [ true, %23 ], [ %19, %17 ]
  %26 = icmp eq ptr %21, null
  %27 = getelementptr i8, ptr %21, i32 -116
  %28 = icmp eq ptr %27, null
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %17

30:                                               ; preds = %24, %7
  %31 = phi i1 [ %8, %7 ], [ %25, %24 ]
  %32 = add i32 %9, 1
  %33 = load i32, ptr %5, align 4
  %34 = lshr i32 %32, %33
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %7, label %36

36:                                               ; preds = %30
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %37 = load i16, ptr %4, align 4
  %38 = add i16 %37, 1
  store i16 %38, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  ret i1 %31
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_kill_timeouts(ptr noundef %0, ptr noundef readnone %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %4) #21
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %5) #21
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 13
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, %6
  br i1 %8, label %40, label %9

9:                                                ; preds = %3
  %10 = icmp eq ptr %1, null
  br label %11

11:                                               ; preds = %37, %9
  %12 = phi ptr [ %7, %9 ], [ %15, %37 ]
  %13 = phi i32 [ 0, %9 ], [ %38, %37 ]
  %14 = getelementptr i8, ptr %12, i32 -12
  %15 = load ptr, ptr %12, align 4
  br i1 %10, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr i8, ptr %12, i32 72
  %18 = load ptr, ptr %17, align 4
  %19 = icmp ne ptr %18, %1
  %20 = or i1 %19, %2
  br i1 %20, label %34, label %22

21:                                               ; preds = %11
  br i1 %2, label %35, label %22

22:                                               ; preds = %21, %16
  %23 = icmp eq ptr %14, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %30, %22
  %25 = phi ptr [ %32, %30 ], [ %14, %22 ]
  %26 = getelementptr inbounds %struct.io_kiocb, ptr %25, i32 0, i32 4
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 512
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.io_kiocb, ptr %25, i32 0, i32 14
  %32 = load ptr, ptr %31, align 8
  %33 = icmp eq ptr %32, null
  br i1 %33, label %37, label %24

34:                                               ; preds = %16
  br i1 %19, label %37, label %35

35:                                               ; preds = %34, %24, %21
  tail call fastcc void @io_kill_timeout(ptr noundef %14, i32 noundef -125)
  %36 = add i32 %13, 1
  br label %37

37:                                               ; preds = %35, %34, %30, %22
  %38 = phi i32 [ %36, %35 ], [ %13, %34 ], [ %13, %22 ], [ %13, %30 ]
  %39 = icmp eq ptr %15, %6
  br i1 %39, label %40, label %11

40:                                               ; preds = %37, %3
  %41 = phi i32 [ 0, %3 ], [ %38, %37 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %42 = load i16, ptr %5, align 4
  %43 = add i16 %42, 1
  store i16 %43, ptr %5, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  %44 = icmp ne i32 %41, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %47 = load i8, ptr %46, align 16
  %48 = and i8 %47, 48
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50, !prof !10

50:                                               ; preds = %45
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %0) #24
  br label %51

51:                                               ; preds = %50, %45
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %52 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %53 = load i32, ptr %52, align 64
  %54 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %55 = load ptr, ptr %54, align 8
  %56 = getelementptr inbounds %struct.io_rings, ptr %55, i32 0, i32 1, i32 2
  store volatile i32 %53, ptr %56, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %57 = load i16, ptr %4, align 4
  %58 = add i16 %57, 1
  store i16 %58, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %0)
  br label %62

59:                                               ; preds = %40
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %60 = load i16, ptr %4, align 4
  %61 = add i16 %60, 1
  store i16 %61, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %62

62:                                               ; preds = %59, %51
  ret i1 %44
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readonly sspstrong willreturn uwtable(sync)
define internal zeroext i1 @io_cancel_ctx_cb(ptr nocapture noundef readonly %0, ptr noundef readnone %1) #9 {
  %3 = getelementptr i8, ptr %0, i32 -52
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, %1
  ret i1 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_match_task_safe(ptr noundef readonly %0, ptr noundef readnone %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %7 = load ptr, ptr %6, align 4
  %8 = icmp ne ptr %7, %1
  %9 = or i1 %8, %2
  %10 = xor i1 %8, true
  br i1 %9, label %57, label %12

11:                                               ; preds = %3
  br i1 %2, label %57, label %12

12:                                               ; preds = %11, %5
  %13 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, 4096
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %38, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %19, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %20) #21
  %21 = icmp eq ptr %0, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %28, %17
  %23 = phi ptr [ %30, %28 ], [ %0, %17 ]
  %24 = getelementptr inbounds %struct.io_kiocb, ptr %23, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = and i32 %25, 512
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.io_kiocb, ptr %23, i32 0, i32 14
  %30 = load ptr, ptr %29, align 8
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %22

32:                                               ; preds = %28, %22
  %33 = xor i1 %27, true
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i1 [ false, %17 ], [ %33, %32 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %36 = load i16, ptr %20, align 4
  %37 = add i16 %36, 1
  store i16 %37, ptr %20, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %57

38:                                               ; preds = %12
  %39 = icmp eq ptr %0, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %38
  %41 = and i32 %14, 512
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %54

43:                                               ; preds = %49, %40
  %44 = phi i1 [ %53, %49 ], [ %42, %40 ]
  %45 = phi ptr [ %47, %49 ], [ %0, %40 ]
  %46 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 14
  %47 = load ptr, ptr %46, align 8
  %48 = icmp eq ptr %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.io_kiocb, ptr %47, i32 0, i32 4
  %51 = load i32, ptr %50, align 4
  %52 = and i32 %51, 512
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %43, label %54

54:                                               ; preds = %49, %43, %40
  %55 = phi i1 [ %42, %40 ], [ %53, %49 ], [ %44, %43 ]
  %56 = xor i1 %55, true
  br label %57

57:                                               ; preds = %54, %38, %34, %11, %5
  %58 = phi i1 [ %10, %5 ], [ true, %11 ], [ %35, %34 ], [ false, %38 ], [ %56, %54 ]
  ret i1 %58
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_do_iopoll(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = alloca %struct.io_comp_batch, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(12) %3, i8 0, i32 12, i1 false)
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 5
  %5 = load i8, ptr %4, align 8, !range !45
  %6 = icmp ne i8 %5, 0
  %7 = or i1 %6, %1
  %8 = select i1 %7, i32 3, i32 2
  %9 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 2
  br label %10

10:                                               ; preds = %32, %2
  %11 = phi i32 [ %8, %2 ], [ %35, %32 ]
  %12 = phi ptr [ null, %2 ], [ %14, %32 ]
  %13 = phi ptr [ %9, %2 ], [ %14, %32 ]
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %230, label %16

16:                                               ; preds = %10
  %17 = getelementptr i8, ptr %14, i32 -39
  %18 = load volatile i8, ptr %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %16
  %21 = getelementptr i8, ptr %14, i32 -96
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.file, ptr %22, i32 0, i32 3
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.file_operations, ptr %24, i32 0, i32 6
  %26 = load ptr, ptr %25, align 4
  %27 = call i32 %26(ptr noundef %21, ptr noundef nonnull %3, i32 noundef %11) #21
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %230, label %29, !prof !11

29:                                               ; preds = %20
  %30 = load ptr, ptr %3, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %29
  %33 = icmp ne i32 %27, 0
  %34 = zext i1 %33 to i32
  %35 = or i32 %11, %34
  %36 = load volatile i8, ptr %17, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %10, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.io_comp_batch, ptr %3, i32 0, i32 2
  %40 = load ptr, ptr %39, align 4
  call void %40(ptr noundef nonnull %3) #21
  br label %41

41:                                               ; preds = %38, %32, %16
  %42 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %43 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %44 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %45 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15
  %46 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 8
  %47 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15, i32 1
  %48 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 4
  %49 = getelementptr i8, ptr %14, i32 -39
  %50 = load volatile i8, ptr %49, align 1
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !55
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %154, label %56

52:                                               ; preds = %150
  %53 = getelementptr i8, ptr %152, i32 -39
  %54 = load volatile i8, ptr %53, align 1
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !55
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %154, label %56

56:                                               ; preds = %52, %41
  %57 = phi i32 [ %151, %52 ], [ 0, %41 ]
  %58 = phi ptr [ %152, %52 ], [ %14, %41 ]
  %59 = getelementptr i8, ptr %58, i32 -36
  %60 = load i32, ptr %59, align 4
  %61 = and i32 %60, 64
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %150, !prof !10

63:                                               ; preds = %56
  %64 = getelementptr i8, ptr %58, i32 -32
  %65 = load i64, ptr %64, align 8
  %66 = getelementptr i8, ptr %58, i32 -24
  %67 = load i32, ptr %66, align 8
  %68 = and i32 %60, 32768
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %79, label %70, !prof !10

70:                                               ; preds = %63
  %71 = getelementptr i8, ptr %58, i32 48
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds %struct.io_buffer, ptr %72, i32 0, i32 3
  %74 = load i16, ptr %73, align 4
  %75 = zext i16 %74 to i32
  %76 = shl nuw i32 %75, 16
  %77 = or i32 %76, 1
  %78 = and i32 %60, -32769
  store i32 %78, ptr %59, align 4
  call void @kfree(ptr noundef %72) #21
  store ptr null, ptr %71, align 8
  br label %79

79:                                               ; preds = %70, %63
  %80 = phi i32 [ %77, %70 ], [ 0, %63 ]
  %81 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 1), align 4
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %106

83:                                               ; preds = %79
  %84 = tail call ptr @llvm.thread.pointer() #21
  %85 = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 2
  %86 = load i32, ptr %85, align 8
  %87 = lshr i32 %86, 5
  %88 = getelementptr i32, ptr @__cpu_online_mask, i32 %87
  %89 = load volatile i32, ptr %88, align 4
  %90 = and i32 %86, 31
  %91 = shl nuw i32 1, %90
  %92 = and i32 %91, %89
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %106, label %94

94:                                               ; preds = %83
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !56
  %95 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %96 = icmp eq ptr %95, null
  br i1 %96, label %105, label %97

97:                                               ; preds = %97, %94
  %98 = phi ptr [ %102, %97 ], [ %95, %94 ]
  %99 = load volatile ptr, ptr %98, align 4
  %100 = getelementptr inbounds %struct.tracepoint_func, ptr %98, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  call void %99(ptr noundef %101, ptr noundef %0, i64 noundef %65, i32 noundef %67, i32 noundef %80) #21
  %102 = getelementptr %struct.tracepoint_func, ptr %98, i32 1
  %103 = load ptr, ptr %102, align 4
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %97

105:                                              ; preds = %97, %94
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !57
  br label %106

106:                                              ; preds = %105, %83, %79
  %107 = load ptr, ptr %42, align 8
  %108 = load i32, ptr %43, align 4
  %109 = load i32, ptr %44, align 64
  %110 = getelementptr inbounds %struct.io_rings, ptr %107, i32 0, i32 1
  %111 = load volatile i32, ptr %110, align 64
  %112 = sub i32 %109, %111
  %113 = icmp eq i32 %112, %108
  br i1 %113, label %123, label %114

114:                                              ; preds = %106
  %115 = add i32 %108, -1
  %116 = add i32 %109, 1
  store i32 %116, ptr %44, align 64
  %117 = and i32 %109, %115
  %118 = getelementptr %struct.io_rings, ptr %107, i32 0, i32 11, i32 %117
  %119 = icmp eq ptr %118, null
  br i1 %119, label %123, label %120, !prof !11

120:                                              ; preds = %114
  store volatile i64 %65, ptr %118, align 8
  %121 = getelementptr %struct.io_rings, ptr %107, i32 0, i32 11, i32 %117, i32 1
  store volatile i32 %67, ptr %121, align 8
  %122 = getelementptr %struct.io_rings, ptr %107, i32 0, i32 11, i32 %117, i32 2
  store volatile i32 %80, ptr %122, align 4
  br label %148

123:                                              ; preds = %114, %106
  %124 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %125 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %124, i32 noundef 4196896, i32 noundef 24) #25
  %126 = icmp eq ptr %125, null
  br i1 %126, label %127, label %134

127:                                              ; preds = %123
  %128 = load ptr, ptr %42, align 8
  %129 = getelementptr inbounds %struct.io_rings, ptr %128, i32 0, i32 9
  %130 = load volatile i32, ptr %129, align 4
  %131 = add i32 %130, 1
  store volatile i32 %131, ptr %129, align 4
  %132 = load i32, ptr %48, align 8
  %133 = add i32 %132, -1
  store i32 %133, ptr %48, align 8
  br label %148

134:                                              ; preds = %123
  %135 = load volatile ptr, ptr %45, align 4
  %136 = icmp eq ptr %135, %45
  br i1 %136, label %137, label %142

137:                                              ; preds = %134
  call void @_set_bit(i32 noundef 0, ptr noundef %46) #21
  %138 = load ptr, ptr %42, align 8
  %139 = getelementptr inbounds %struct.io_rings, ptr %138, i32 0, i32 7
  %140 = load i32, ptr %139, align 4
  %141 = or i32 %140, 2
  store volatile i32 %141, ptr %139, align 4
  br label %142

142:                                              ; preds = %137, %134
  store i64 %65, ptr %125, align 8
  %143 = getelementptr inbounds %struct.io_uring_cqe, ptr %125, i32 0, i32 1
  store i32 %67, ptr %143, align 8
  %144 = getelementptr inbounds %struct.io_uring_cqe, ptr %125, i32 0, i32 2
  store i32 %80, ptr %144, align 4
  %145 = getelementptr inbounds %struct.io_overflow_cqe, ptr %125, i32 0, i32 1
  %146 = load ptr, ptr %47, align 4
  store ptr %145, ptr %47, align 4
  store ptr %45, ptr %145, align 8
  %147 = getelementptr inbounds %struct.io_overflow_cqe, ptr %125, i32 0, i32 1, i32 1
  store ptr %146, ptr %147, align 4
  store volatile ptr %145, ptr %146, align 4
  br label %148

148:                                              ; preds = %142, %127, %120
  %149 = add i32 %57, 1
  br label %150

150:                                              ; preds = %148, %56
  %151 = phi i32 [ %57, %56 ], [ %149, %148 ]
  %152 = load ptr, ptr %58, align 4
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %52

154:                                              ; preds = %150, %52, %41
  %155 = phi i32 [ 0, %41 ], [ %151, %150 ], [ %151, %52 ]
  %156 = phi ptr [ %12, %41 ], [ %58, %150 ], [ %58, %52 ]
  %157 = icmp eq i32 %155, 0
  br i1 %157, label %230, label %158, !prof !11

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %160 = load i8, ptr %159, align 16
  %161 = and i8 %160, 48
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %164, label %163, !prof !10

163:                                              ; preds = %158
  call fastcc void @__io_commit_cqring_flush(ptr noundef %0) #24
  br label %164

164:                                              ; preds = %163, %158
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %165 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %166 = load i32, ptr %165, align 64
  %167 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %168 = load ptr, ptr %167, align 8
  %169 = getelementptr inbounds %struct.io_rings, ptr %168, i32 0, i32 1, i32 2
  store volatile i32 %166, ptr %169, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !58
  %170 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %171 = load i32, ptr %170, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %180, label %174

174:                                              ; preds = %164
  %175 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 3, i32 1
  %176 = load volatile ptr, ptr %175, align 4
  %177 = icmp eq ptr %176, %175
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 3
  call void @__wake_up(ptr noundef %179, i32 noundef 3, i32 noundef 0, ptr noundef null) #21
  br label %180

180:                                              ; preds = %178, %174, %164
  %181 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 2
  %182 = load ptr, ptr %181, align 8
  %183 = icmp eq ptr %182, null
  br i1 %183, label %217, label %184, !prof !10

184:                                              ; preds = %180
  %185 = load ptr, ptr %167, align 8
  %186 = getelementptr inbounds %struct.io_rings, ptr %185, i32 0, i32 8
  %187 = load volatile i32, ptr %186, align 8
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %217

190:                                              ; preds = %184
  %191 = load i8, ptr %159, align 16
  %192 = and i8 %191, 4
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %215, label %194

194:                                              ; preds = %190
  %195 = tail call ptr @llvm.thread.pointer() #21
  %196 = getelementptr inbounds %struct.thread_info, ptr %195, i32 0, i32 1
  %197 = load volatile i32, ptr %196, align 4
  %198 = and i32 %197, 15728640
  %199 = load volatile i32, ptr %196, align 4
  %200 = and i32 %199, 983040
  %201 = or i32 %200, %198
  %202 = load volatile i32, ptr %196, align 4
  %203 = and i32 %202, 256
  %204 = or i32 %201, %203
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %217

206:                                              ; preds = %194
  %207 = getelementptr inbounds %struct.task_struct, ptr %195, i32 0, i32 4
  %208 = load i32, ptr %207, align 4
  %209 = and i32 %208, 16
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %217, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.task_struct, ptr %195, i32 0, i32 69
  %213 = load ptr, ptr %212, align 64
  %214 = icmp eq ptr %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %211, %190
  %216 = call i64 @eventfd_signal(ptr noundef nonnull %182, i64 noundef 1) #21
  br label %217

217:                                              ; preds = %215, %211, %206, %194, %184, %180
  %218 = icmp eq ptr %12, null
  %219 = select i1 %218, ptr %9, ptr %12
  %220 = load ptr, ptr %219, align 4
  %221 = load ptr, ptr %156, align 4
  br i1 %218, label %222, label %223

222:                                              ; preds = %217
  store volatile ptr %221, ptr %9, align 4
  br label %224

223:                                              ; preds = %217
  store ptr %221, ptr %12, align 4
  br label %224

224:                                              ; preds = %223, %222
  %225 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 2, i32 1
  %226 = load ptr, ptr %225, align 4
  %227 = icmp eq ptr %226, %156
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  store ptr %12, ptr %225, align 4
  br label %229

229:                                              ; preds = %228, %224
  store ptr null, ptr %156, align 4
  call fastcc void @io_free_batch_list(ptr noundef %0, ptr noundef %220)
  br label %230

230:                                              ; preds = %229, %154, %20, %10
  %231 = phi i32 [ %155, %229 ], [ 0, %154 ], [ %27, %20 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #21
  ret i32 %231
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_free_batch_list(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 7
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12
  br label %6

6:                                                ; preds = %111, %2
  %7 = phi i32 [ 0, %2 ], [ %112, %111 ]
  %8 = phi ptr [ null, %2 ], [ %113, %111 ]
  %9 = phi ptr [ %1, %2 ], [ %114, %111 ]
  %10 = getelementptr i8, ptr %9, i32 -96
  %11 = getelementptr i8, ptr %9, i32 -36
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 524288
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15, !prof !10

15:                                               ; preds = %6
  %16 = load ptr, ptr %9, align 8
  %17 = tail call fastcc zeroext i1 @req_ref_put_and_test(ptr noundef %10)
  br i1 %17, label %18, label %111

18:                                               ; preds = %15, %6
  %19 = getelementptr i8, ptr %9, i32 -8
  %20 = load ptr, ptr %19, align 8
  %21 = icmp eq ptr %20, null
  br i1 %21, label %52, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr %3, align 4
  %24 = icmp eq ptr %20, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i32, ptr %4, align 16
  %27 = add i32 %26, 1
  store i32 %27, ptr %4, align 16
  br label %52

28:                                               ; preds = %22
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %29 = load volatile i32, ptr %20, align 4
  %30 = and i32 %29, 3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %41, !prof !10

32:                                               ; preds = %28
  %33 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %34 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %35 = inttoptr i32 %34 to ptr
  %36 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %35) #6, !srcloc !12
  %37 = add i32 %36, %29
  %38 = inttoptr i32 %37 to ptr
  %39 = load i32, ptr %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, ptr %38, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %33) #21, !srcloc !22
  br label %51

41:                                               ; preds = %28
  %42 = getelementptr inbounds %struct.percpu_ref, ptr %20, i32 0, i32 1
  %43 = load ptr, ptr %42, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %43) #21, !srcloc !13
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %43, ptr %43, i32 1, ptr elementtype(i32) %43) #21, !srcloc !35
  %45 = extractvalue { i32, i32 } %44, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51, !prof !11

47:                                               ; preds = %41
  %48 = load ptr, ptr %42, align 4
  %49 = getelementptr inbounds %struct.percpu_ref_data, ptr %48, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  tail call void %50(ptr noundef nonnull %20) #21
  br label %51

51:                                               ; preds = %47, %41, %32
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %52

52:                                               ; preds = %51, %25, %18
  %53 = load i32, ptr %11, align 4
  %54 = and i32 %53, 12
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %66, label %56, !prof !10

56:                                               ; preds = %52
  %57 = and i32 %53, 1052928
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !10

59:                                               ; preds = %56
  tail call fastcc void @__io_req_find_next_prep(ptr noundef %10) #21
  br label %60

60:                                               ; preds = %59, %56
  %61 = getelementptr i8, ptr %9, i32 8
  %62 = load ptr, ptr %61, align 8
  store ptr null, ptr %61, align 8
  %63 = icmp eq ptr %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.io_kiocb, ptr %62, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %65, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %62, i1 noundef zeroext false) #21
  br label %66

66:                                               ; preds = %64, %60, %52
  %67 = load i32, ptr %11, align 4
  %68 = and i32 %67, 2417152
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70, !prof !10

70:                                               ; preds = %66
  tail call fastcc void @io_clean_op(ptr noundef %10) #21
  br label %71

71:                                               ; preds = %70, %66
  %72 = and i32 %67, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %71
  %75 = load ptr, ptr %10, align 8
  %76 = icmp eq ptr %75, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %74
  tail call void @fput(ptr noundef nonnull %75) #21
  br label %78

78:                                               ; preds = %77, %74, %71
  %79 = getelementptr i8, ptr %9, i32 -12
  %80 = load ptr, ptr %79, align 4
  %81 = icmp eq ptr %80, %8
  br i1 %81, label %105, label %82

82:                                               ; preds = %78
  %83 = icmp eq ptr %8, null
  br i1 %83, label %103, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 91
  %86 = load ptr, ptr %85, align 8
  %87 = tail call ptr @llvm.thread.pointer() #21
  %88 = icmp eq ptr %87, %8
  br i1 %88, label %89, label %92, !prof !10

89:                                               ; preds = %84
  %90 = load i32, ptr %86, align 8
  %91 = add i32 %90, %7
  store i32 %91, ptr %86, align 8
  br label %103

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.io_uring_task, ptr %86, i32 0, i32 5
  %94 = sext i32 %7 to i64
  %95 = sub nsw i64 0, %94
  %96 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %93, i64 noundef %95, i32 noundef %96) #21
  %97 = getelementptr inbounds %struct.io_uring_task, ptr %86, i32 0, i32 7
  %98 = load volatile i32, ptr %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100, !prof !10

100:                                              ; preds = %92
  %101 = getelementptr inbounds %struct.io_uring_task, ptr %86, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %101, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %102

102:                                              ; preds = %100, %92
  tail call fastcc void @put_task_struct_many(ptr noundef nonnull %8, i32 noundef %7) #21
  br label %103

103:                                              ; preds = %102, %89, %82
  %104 = load ptr, ptr %79, align 4
  br label %105

105:                                              ; preds = %103, %78
  %106 = phi i32 [ 0, %103 ], [ %7, %78 ]
  %107 = phi ptr [ %104, %103 ], [ %8, %78 ]
  %108 = add i32 %106, 1
  %109 = load ptr, ptr %9, align 8
  %110 = load ptr, ptr %5, align 4
  store ptr %110, ptr %9, align 4
  store ptr %9, ptr %5, align 4
  br label %111

111:                                              ; preds = %105, %15
  %112 = phi i32 [ %108, %105 ], [ %7, %15 ]
  %113 = phi ptr [ %107, %105 ], [ %8, %15 ]
  %114 = phi ptr [ %109, %105 ], [ %16, %15 ]
  %115 = icmp eq ptr %114, null
  br i1 %115, label %116, label %6

116:                                              ; preds = %111
  %117 = icmp eq ptr %113, null
  br i1 %117, label %137, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %struct.task_struct, ptr %113, i32 0, i32 91
  %120 = load ptr, ptr %119, align 8
  %121 = tail call ptr @llvm.thread.pointer() #21
  %122 = icmp eq ptr %121, %113
  br i1 %122, label %123, label %126, !prof !10

123:                                              ; preds = %118
  %124 = load i32, ptr %120, align 8
  %125 = add i32 %124, %112
  store i32 %125, ptr %120, align 8
  br label %137

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct.io_uring_task, ptr %120, i32 0, i32 5
  %128 = sext i32 %112 to i64
  %129 = sub nsw i64 0, %128
  %130 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %127, i64 noundef %129, i32 noundef %130) #21
  %131 = getelementptr inbounds %struct.io_uring_task, ptr %120, i32 0, i32 7
  %132 = load volatile i32, ptr %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %136, label %134, !prof !10

134:                                              ; preds = %126
  %135 = getelementptr inbounds %struct.io_uring_task, ptr %120, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %135, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %136

136:                                              ; preds = %134, %126
  tail call fastcc void @put_task_struct_many(ptr noundef nonnull %113, i32 noundef %112) #21
  br label %137

137:                                              ; preds = %136, %123, %116
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #12

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @__io_commit_cqring_flush(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %3 = load i8, ptr %2, align 16
  %4 = and i8 %3, 16
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call fastcc void @io_flush_timeouts(ptr noundef %0) #22
  %7 = load i8, ptr %2, align 16
  br label %8

8:                                                ; preds = %6, %1
  %9 = phi i8 [ %7, %6 ], [ %3, %1 ]
  %10 = and i8 %9, 32
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call fastcc void @io_queue_deferred(ptr noundef %0) #22
  br label %13

13:                                               ; preds = %12, %8
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_flush_timeouts(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %3 = load i32, ptr %2, align 64
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 5
  %5 = load volatile i32, ptr %4, align 4
  %6 = sub i32 %3, %5
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %7) #21
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 13
  %9 = load volatile ptr, ptr %8, align 4
  %10 = icmp eq ptr %9, %8
  br i1 %10, label %33, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 6
  br label %13

13:                                               ; preds = %26, %11
  %14 = phi ptr [ %9, %11 ], [ %31, %26 ]
  %15 = getelementptr i8, ptr %14, i32 -12
  %16 = getelementptr i8, ptr %14, i32 -8
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = getelementptr i8, ptr %14, i32 -4
  %21 = load i32, ptr %20, align 8
  %22 = load i32, ptr %12, align 32
  %23 = sub i32 %21, %22
  %24 = sub i32 %6, %22
  %25 = icmp ult i32 %24, %23
  br i1 %25, label %33, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = load ptr, ptr %14, align 4
  %30 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  store ptr %28, ptr %30, align 4
  store volatile ptr %29, ptr %28, align 4
  store volatile ptr %14, ptr %14, align 4
  store ptr %14, ptr %27, align 4
  tail call fastcc void @io_kill_timeout(ptr noundef %15, i32 noundef 0)
  %31 = load volatile ptr, ptr %8, align 4
  %32 = icmp eq ptr %31, %8
  br i1 %32, label %33, label %13

33:                                               ; preds = %26, %19, %13, %1
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 6
  store i32 %6, ptr %34, align 32
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %35 = load i16, ptr %7, align 4
  %36 = add i16 %35, 1
  store i16 %36, ptr %7, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_queue_deferred(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 5
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, %2
  br i1 %4, label %33, label %5

5:                                                ; preds = %24, %1
  %6 = phi ptr [ %31, %24 ], [ %3, %1 ]
  %7 = getelementptr inbounds %struct.io_defer_entry, ptr %6, i32 0, i32 1
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 4
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %24, label %13, !prof !10

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.io_defer_entry, ptr %6, i32 0, i32 2
  %15 = load i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %17, i32 0, i32 10
  %19 = getelementptr inbounds %struct.io_ring_ctx, ptr %17, i32 0, i32 10, i32 4
  %20 = load volatile i32, ptr %19, align 8
  %21 = add i32 %20, %15
  %22 = load i32, ptr %18, align 64
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %33

24:                                               ; preds = %13, %5
  %25 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = load ptr, ptr %6, align 4
  %28 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  store ptr %26, ptr %28, align 4
  store volatile ptr %27, ptr %26, align 4
  store volatile ptr %6, ptr %6, align 4
  store ptr %6, ptr %25, align 4
  %29 = load ptr, ptr %7, align 4
  %30 = getelementptr inbounds %struct.io_kiocb, ptr %29, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %30, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %29, i1 noundef zeroext false) #21
  tail call void @kfree(ptr noundef %6) #21
  %31 = load volatile ptr, ptr %2, align 4
  %32 = icmp eq ptr %31, %2
  br i1 %32, label %33, label %5

33:                                               ; preds = %24, %13, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_kill_timeout(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.io_timeout_data, ptr %4, i32 0, i32 1
  %6 = tail call i32 @hrtimer_try_to_cancel(ptr noundef %5) #21
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %49, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = or i32 %12, 256
  %14 = and i32 %12, 64
  %15 = icmp eq i32 %14, 0
  %16 = and i32 %13, -4194369
  %17 = or i32 %16, 4194304
  %18 = select i1 %15, i32 %13, i32 %17
  store i32 %18, ptr %11, align 4
  br label %19

19:                                               ; preds = %10, %8
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 10, i32 5
  %23 = load volatile i32, ptr %22, align 4
  %24 = add i32 %23, 1
  store volatile i32 %24, ptr %22, align 4
  %25 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3
  %26 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3, i32 1
  %27 = load ptr, ptr %26, align 4
  %28 = load ptr, ptr %25, align 4
  %29 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %27, ptr %29, align 4
  store volatile ptr %28, ptr %27, align 4
  store volatile ptr %25, ptr %25, align 4
  store ptr %25, ptr %26, align 4
  tail call fastcc void @io_fill_cqe_req(ptr noundef %0, i32 noundef %1)
  %30 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %31 = load i32, ptr %30, align 4
  %32 = and i32 %31, 524288
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %47, label %34, !prof !10

34:                                               ; preds = %19
  %35 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  %36 = load volatile i32, ptr %35, align 4
  %37 = add i32 %36, 127
  %38 = icmp ult i32 %37, 128
  %39 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %40 = xor i1 %39, true
  %41 = select i1 %38, i1 %40, i1 false
  br i1 %41, label %42, label %43, !prof !11

42:                                               ; preds = %34
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %43

43:                                               ; preds = %42, %34
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #21, !srcloc !13
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %35, ptr %35, i32 1, ptr elementtype(i32) %35) #21, !srcloc !35
  %45 = extractvalue { i32, i32 } %44, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43, %19
  %48 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_free_req_work, ptr %48, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %49

49:                                               ; preds = %47, %43, %2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hrtimer_try_to_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_fill_cqe_req(ptr nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 64
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %86

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %11 = load i64, ptr %10, align 8
  %12 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 1), align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %37

14:                                               ; preds = %7
  %15 = tail call ptr @llvm.thread.pointer() #21
  %16 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %17 = load i32, ptr %16, align 8
  %18 = lshr i32 %17, 5
  %19 = getelementptr i32, ptr @__cpu_online_mask, i32 %18
  %20 = load volatile i32, ptr %19, align 4
  %21 = and i32 %17, 31
  %22 = shl nuw i32 1, %21
  %23 = and i32 %22, %20
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %14
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !56
  %26 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %28, %25
  %29 = phi ptr [ %33, %28 ], [ %26, %25 ]
  %30 = load volatile ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.tracepoint_func, ptr %29, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  tail call void %30(ptr noundef %32, ptr noundef %9, i64 noundef %11, i32 noundef %1, i32 noundef 0) #21
  %33 = getelementptr %struct.tracepoint_func, ptr %29, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %36, label %28

36:                                               ; preds = %28, %25
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !57
  br label %37

37:                                               ; preds = %36, %14, %7
  %38 = getelementptr inbounds %struct.anon.178, ptr %9, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8
  %40 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 10, i32 1
  %41 = load i32, ptr %40, align 4
  %42 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 10
  %43 = load i32, ptr %42, align 64
  %44 = getelementptr inbounds %struct.io_rings, ptr %39, i32 0, i32 1
  %45 = load volatile i32, ptr %44, align 64
  %46 = sub i32 %43, %45
  %47 = icmp eq i32 %46, %41
  br i1 %47, label %57, label %48

48:                                               ; preds = %37
  %49 = add i32 %41, -1
  %50 = add i32 %43, 1
  store i32 %50, ptr %42, align 64
  %51 = and i32 %43, %49
  %52 = getelementptr %struct.io_rings, ptr %39, i32 0, i32 11, i32 %51
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %54, !prof !11

54:                                               ; preds = %48
  store volatile i64 %11, ptr %52, align 8
  %55 = getelementptr %struct.io_rings, ptr %39, i32 0, i32 11, i32 %51, i32 1
  store volatile i32 %1, ptr %55, align 8
  %56 = getelementptr %struct.io_rings, ptr %39, i32 0, i32 11, i32 %51, i32 2
  store volatile i32 0, ptr %56, align 4
  br label %86

57:                                               ; preds = %48, %37
  %58 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %59 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %58, i32 noundef 4196896, i32 noundef 24) #25
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %69

61:                                               ; preds = %57
  %62 = load ptr, ptr %38, align 8
  %63 = getelementptr inbounds %struct.io_rings, ptr %62, i32 0, i32 9
  %64 = load volatile i32, ptr %63, align 4
  %65 = add i32 %64, 1
  store volatile i32 %65, ptr %63, align 4
  %66 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 10, i32 4
  %67 = load i32, ptr %66, align 8
  %68 = add i32 %67, -1
  store i32 %68, ptr %66, align 8
  br label %86

69:                                               ; preds = %57
  %70 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 1, i32 15
  %71 = load volatile ptr, ptr %70, align 4
  %72 = icmp eq ptr %71, %70
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 0, ptr noundef %74) #21
  %75 = load ptr, ptr %38, align 8
  %76 = getelementptr inbounds %struct.io_rings, ptr %75, i32 0, i32 7
  %77 = load i32, ptr %76, align 4
  %78 = or i32 %77, 2
  store volatile i32 %78, ptr %76, align 4
  br label %79

79:                                               ; preds = %73, %69
  store i64 %11, ptr %59, align 8
  %80 = getelementptr inbounds %struct.io_uring_cqe, ptr %59, i32 0, i32 1
  store i32 %1, ptr %80, align 8
  %81 = getelementptr inbounds %struct.io_uring_cqe, ptr %59, i32 0, i32 2
  store i32 0, ptr %81, align 4
  %82 = getelementptr inbounds %struct.io_overflow_cqe, ptr %59, i32 0, i32 1
  %83 = getelementptr inbounds %struct.io_ring_ctx, ptr %9, i32 0, i32 1, i32 15, i32 1
  %84 = load ptr, ptr %83, align 4
  store ptr %82, ptr %83, align 4
  store ptr %70, ptr %82, align 8
  %85 = getelementptr inbounds %struct.io_overflow_cqe, ptr %59, i32 0, i32 1, i32 1
  store ptr %84, ptr %85, align 4
  store volatile ptr %82, ptr %84, align 4
  br label %86

86:                                               ; preds = %79, %61, %54, %2
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @req_ref_put_and_test(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 524288
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %19, label %6, !prof !10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  %8 = load volatile i32, ptr %7, align 4
  %9 = add i32 %8, 127
  %10 = icmp ult i32 %9, 128
  %11 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %12 = xor i1 %11, true
  %13 = select i1 %10, i1 %12, i1 false
  br i1 %13, label %14, label %15, !prof !11

14:                                               ; preds = %6
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %15

15:                                               ; preds = %14, %6
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #21, !srcloc !13
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %7, ptr %7, i32 1, ptr elementtype(i32) %7) #21, !srcloc !35
  %17 = extractvalue { i32, i32 } %16, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %18 = icmp eq i32 %17, 0
  br label %19

19:                                               ; preds = %15, %1
  %20 = phi i1 [ %18, %15 ], [ true, %1 ]
  ret i1 %20
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_free_req_work(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 12
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %17, label %7, !prof !10

7:                                                ; preds = %2
  %8 = and i32 %4, 1052928
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !10

10:                                               ; preds = %7
  tail call fastcc void @__io_req_find_next_prep(ptr noundef %0) #21
  br label %11

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %13 = load ptr, ptr %12, align 8
  store ptr null, ptr %12, align 8
  %14 = icmp eq ptr %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %13, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %16, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %13, i1 noundef zeroext false) #21
  br label %17

17:                                               ; preds = %15, %11, %2
  tail call fastcc void @__io_free_req(ptr noundef %0) #24
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 91
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %6, null
  %8 = load i1, ptr @io_req_task_work_add.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %12, !prof !11

11:                                               ; preds = %2
  store i1 true, ptr @io_req_task_work_add.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2382, i32 noundef 9, ptr noundef null) #21
  br label %12

12:                                               ; preds = %11, %2
  %13 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 8
  %14 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %13) #21
  %15 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15
  br i1 %1, label %16, label %24

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 10
  store ptr null, ptr %15, align 4
  %18 = load ptr, ptr %17, align 4
  %19 = icmp eq ptr %18, null
  %20 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 10, i32 1
  br i1 %19, label %21, label %22

21:                                               ; preds = %16
  store ptr %15, ptr %20, align 4
  store volatile ptr %15, ptr %17, align 4
  br label %32

22:                                               ; preds = %16
  %23 = load ptr, ptr %20, align 4
  store ptr %15, ptr %23, align 4
  store ptr %15, ptr %20, align 4
  br label %32

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 9
  store ptr null, ptr %15, align 4
  %26 = load ptr, ptr %25, align 4
  %27 = icmp eq ptr %26, null
  %28 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 9, i32 1
  br i1 %27, label %29, label %30

29:                                               ; preds = %24
  store ptr %15, ptr %28, align 4
  store volatile ptr %15, ptr %25, align 4
  br label %32

30:                                               ; preds = %24
  %31 = load ptr, ptr %28, align 4
  store ptr %15, ptr %31, align 4
  store ptr %15, ptr %28, align 4
  br label %32

32:                                               ; preds = %30, %29, %22, %21
  %33 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 12
  %34 = load i8, ptr %33, align 4, !range !45
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %32
  store i8 1, ptr %33, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %13, i32 noundef %14) #21
  %37 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %38 = load ptr, ptr %37, align 8
  %39 = getelementptr inbounds %struct.anon.178, ptr %38, i32 0, i32 2
  %40 = load i32, ptr %39, align 4
  %41 = and i32 %40, 2
  %42 = xor i32 %41, 2
  %43 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 11
  %44 = tail call i32 @task_work_add(ptr noundef %4, ptr noundef %43, i32 noundef %42) #21
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %51, !prof !10

46:                                               ; preds = %32
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %13, i32 noundef %14) #21
  br label %78

47:                                               ; preds = %36
  %48 = icmp eq i32 %41, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %47
  %50 = tail call i32 @wake_up_process(ptr noundef %4) #21
  br label %78

51:                                               ; preds = %36
  %52 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %13) #21
  store i8 0, ptr %33, align 4
  %53 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 10
  %54 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 9
  %55 = load ptr, ptr %53, align 4
  %56 = icmp eq ptr %55, null
  %57 = load ptr, ptr %54, align 4
  br i1 %56, label %61, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 10, i32 1
  %60 = load ptr, ptr %59, align 4
  store ptr %57, ptr %60, align 4
  br label %61

61:                                               ; preds = %58, %51
  %62 = phi ptr [ %55, %58 ], [ %57, %51 ]
  store ptr null, ptr %53, align 4
  store ptr null, ptr %54, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %13, i32 noundef %52) #21
  %63 = icmp eq ptr %62, null
  br i1 %63, label %78, label %64

64:                                               ; preds = %76, %61
  %65 = phi ptr [ %66, %76 ], [ %62, %61 ]
  %66 = load ptr, ptr %65, align 4
  %67 = getelementptr i8, ptr %65, i32 -28
  %68 = load ptr, ptr %67, align 8
  %69 = getelementptr inbounds %struct.io_ring_ctx, ptr %68, i32 0, i32 14, i32 4
  %70 = tail call zeroext i1 @llist_add_batch(ptr noundef nonnull %65, ptr noundef nonnull %65, ptr noundef %69) #21
  br i1 %70, label %71, label %76

71:                                               ; preds = %64
  %72 = load ptr, ptr %67, align 8
  %73 = getelementptr inbounds %struct.io_ring_ctx, ptr %72, i32 0, i32 14, i32 5
  %74 = load ptr, ptr @system_wq, align 4
  %75 = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 16, ptr noundef %74, ptr noundef %73, i32 noundef 1) #21
  br label %76

76:                                               ; preds = %71, %64
  %77 = icmp eq ptr %66, null
  br i1 %77, label %78, label %64

78:                                               ; preds = %76, %61, %49, %47, %46
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @__io_free_req(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 10
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %8 = load volatile i32, ptr %5, align 4
  %9 = and i32 %8, 3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20, !prof !10

11:                                               ; preds = %7
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #6, !srcloc !12
  %16 = add i32 %15, %8
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, -1
  store i32 %19, ptr %17, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #21, !srcloc !22
  br label %30

20:                                               ; preds = %7
  %21 = getelementptr inbounds %struct.percpu_ref, ptr %5, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %22) #21, !srcloc !13
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %22, ptr %22, i32 1, ptr elementtype(i32) %22) #21, !srcloc !35
  %24 = extractvalue { i32, i32 } %23, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30, !prof !11

26:                                               ; preds = %20
  %27 = load ptr, ptr %21, align 4
  %28 = getelementptr inbounds %struct.percpu_ref_data, ptr %27, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  tail call void %29(ptr noundef nonnull %5) #21
  br label %30

30:                                               ; preds = %26, %20, %11
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %31

31:                                               ; preds = %30, %1
  %32 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %33 = load i32, ptr %32, align 4
  %34 = and i32 %33, 2417152
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !10

36:                                               ; preds = %31
  tail call fastcc void @io_clean_op(ptr noundef %0) #21
  br label %37

37:                                               ; preds = %36, %31
  %38 = and i32 %33, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %37
  %41 = load ptr, ptr %0, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  tail call void @fput(ptr noundef nonnull %41) #21
  br label %44

44:                                               ; preds = %43, %40, %37
  %45 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 91
  %48 = load ptr, ptr %47, align 8
  %49 = tail call ptr @llvm.thread.pointer() #21
  %50 = icmp eq ptr %49, %46
  br i1 %50, label %51, label %54, !prof !10

51:                                               ; preds = %44
  %52 = load i32, ptr %48, align 8
  %53 = add i32 %52, 1
  store i32 %53, ptr %48, align 8
  br label %71

54:                                               ; preds = %44
  %55 = getelementptr inbounds %struct.io_uring_task, ptr %48, i32 0, i32 5
  %56 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %55, i64 noundef -1, i32 noundef %56) #21
  %57 = getelementptr inbounds %struct.io_uring_task, ptr %48, i32 0, i32 7
  %58 = load volatile i32, ptr %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60, !prof !10

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct.io_uring_task, ptr %48, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %61, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %62

62:                                               ; preds = %60, %54
  %63 = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %63) #21, !srcloc !13
  %64 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %63, ptr %63, i32 1, ptr elementtype(i32) %63) #21, !srcloc !50
  %65 = extractvalue { i32, i32, i32 } %64, 0
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %70, label %67

67:                                               ; preds = %62
  %68 = icmp sgt i32 %65, 0
  br i1 %68, label %71, label %69, !prof !10

69:                                               ; preds = %67
  tail call void @refcount_warn_saturate(ptr noundef %63, i32 noundef 3) #21
  br label %71

70:                                               ; preds = %62
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  tail call void @__put_task_struct(ptr noundef %46) #21
  br label %71

71:                                               ; preds = %70, %69, %67, %51
  %72 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %72) #21
  %73 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  %74 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 2
  %75 = load ptr, ptr %74, align 4
  store ptr %75, ptr %73, align 4
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 2, i32 1
  store ptr %73, ptr %78, align 4
  br label %79

79:                                               ; preds = %77, %71
  store volatile ptr %73, ptr %74, align 4
  %80 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 3
  %81 = load i32, ptr %80, align 8
  %82 = add i32 %81, 1
  store i32 %82, ptr %80, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %83 = load i16, ptr %72, align 4
  %84 = add i16 %83, 1
  store i16 %84, ptr %72, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_req_find_next_prep(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %4) #21
  %5 = tail call fastcc zeroext i1 @io_disarm_next(ptr noundef %0)
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.anon.178, ptr %3, i32 0, i32 3
  %8 = load i8, ptr %7, align 16
  %9 = and i8 %8, 48
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11, !prof !10

11:                                               ; preds = %6
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %3) #24
  br label %12

12:                                               ; preds = %11, %6
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 10
  %14 = load i32, ptr %13, align 64
  %15 = getelementptr inbounds %struct.anon.178, ptr %3, i32 0, i32 1
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.io_rings, ptr %16, i32 0, i32 1, i32 2
  store volatile i32 %14, ptr %17, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %18 = load i16, ptr %4, align 4
  %19 = add i16 %18, 1
  store i16 %19, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %3)
  br label %23

20:                                               ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %21 = load i16, ptr %4, align 4
  %22 = add i16 %21, 1
  store i16 %22, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %23

23:                                               ; preds = %20, %12
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_disarm_next(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1048576
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %8 = load ptr, ptr %7, align 8
  %9 = and i32 %3, -1048577
  store i32 %9, ptr %2, align 4
  %10 = icmp eq ptr %8, null
  br i1 %10, label %89, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 1
  %13 = load i8, ptr %12, align 8
  %14 = icmp eq i8 %13, 15
  br i1 %14, label %15, label %89

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %7, align 8
  store ptr null, ptr %16, align 8
  tail call fastcc void @io_fill_cqe_req(ptr noundef nonnull %8, i32 noundef -125)
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 524288
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %35, label %22, !prof !10

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 13
  %24 = load volatile i32, ptr %23, align 4
  %25 = add i32 %24, 127
  %26 = icmp ult i32 %25, 128
  %27 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %28 = xor i1 %27, true
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %31, !prof !11

30:                                               ; preds = %22
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %31

31:                                               ; preds = %30, %22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %23) #21, !srcloc !13
  %32 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %23, ptr %23, i32 1, ptr elementtype(i32) %23) #21, !srcloc !35
  %33 = extractvalue { i32, i32 } %32, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %89

35:                                               ; preds = %31, %15
  %36 = getelementptr inbounds %struct.io_kiocb, ptr %8, i32 0, i32 15, i32 1
  store ptr @io_free_req_work, ptr %36, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %8, i1 noundef zeroext false) #21
  br label %89

37:                                               ; preds = %1
  %38 = and i32 %3, 4096
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %89, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.io_ring_ctx, ptr %42, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %43) #21
  %44 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %45 = load ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %85, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 1
  %49 = load i8, ptr %48, align 8
  %50 = icmp eq i8 %49, 15
  br i1 %50, label %51, label %85

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 18
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 14
  %55 = load ptr, ptr %54, align 8
  store ptr %55, ptr %44, align 8
  store ptr null, ptr %54, align 8
  %56 = getelementptr inbounds %struct.io_timeout, ptr %45, i32 0, i32 4
  store ptr null, ptr %56, align 4
  %57 = getelementptr inbounds %struct.io_timeout_data, ptr %53, i32 0, i32 1
  %58 = tail call i32 @hrtimer_try_to_cancel(ptr noundef %57) #21
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %85, label %60

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.io_timeout, ptr %45, i32 0, i32 3
  %62 = getelementptr inbounds %struct.io_timeout, ptr %45, i32 0, i32 3, i32 1
  %63 = load ptr, ptr %62, align 4
  %64 = load ptr, ptr %61, align 4
  %65 = getelementptr inbounds %struct.list_head, ptr %64, i32 0, i32 1
  store ptr %63, ptr %65, align 4
  store volatile ptr %64, ptr %63, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %61, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %62, align 4
  tail call fastcc void @io_fill_cqe_req(ptr noundef nonnull %45, i32 noundef -125) #21
  %66 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 4
  %67 = load i32, ptr %66, align 4
  %68 = and i32 %67, 524288
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %83, label %70, !prof !10

70:                                               ; preds = %60
  %71 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 13
  %72 = load volatile i32, ptr %71, align 4
  %73 = add i32 %72, 127
  %74 = icmp ult i32 %73, 128
  %75 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %76 = xor i1 %75, true
  %77 = select i1 %74, i1 %76, i1 false
  br i1 %77, label %78, label %79, !prof !11

78:                                               ; preds = %70
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %79

79:                                               ; preds = %78, %70
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %71) #21, !srcloc !13
  %80 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %71, ptr %71, i32 1, ptr elementtype(i32) %71) #21, !srcloc !35
  %81 = extractvalue { i32, i32 } %80, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %79, %60
  %84 = getelementptr inbounds %struct.io_kiocb, ptr %45, i32 0, i32 15, i32 1
  store ptr @io_free_req_work, ptr %84, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %45, i1 noundef zeroext false) #21
  br label %85

85:                                               ; preds = %83, %79, %51, %47, %40
  %86 = phi i1 [ false, %47 ], [ false, %40 ], [ false, %51 ], [ true, %79 ], [ true, %83 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %87 = load i16, ptr %43, align 4
  %88 = add i16 %87, 1
  store i16 %88, ptr %43, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %89

89:                                               ; preds = %85, %37, %35, %31, %11, %6
  %90 = phi i1 [ %86, %85 ], [ false, %37 ], [ false, %11 ], [ false, %6 ], [ true, %31 ], [ true, %35 ]
  %91 = load i32, ptr %2, align 4
  %92 = and i32 %91, 264
  %93 = icmp eq i32 %92, 256
  br i1 %93, label %94, label %99, !prof !11

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %96 = load ptr, ptr %95, align 8
  %97 = icmp ne ptr %96, null
  %98 = or i1 %90, %97
  tail call fastcc void @io_fail_links(ptr noundef %0)
  br label %99

99:                                               ; preds = %94, %89
  %100 = phi i1 [ %98, %94 ], [ %90, %89 ]
  ret i1 %100
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_cqring_ev_posted(ptr noundef %0) unnamed_addr #0 {
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !46
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 3, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, %2
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 3
  tail call void @__wake_up(ptr noundef %6, i32 noundef 3, i32 noundef 0, ptr noundef null) #21
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 2
  %9 = load ptr, ptr %8, align 8
  %10 = icmp eq ptr %9, null
  br i1 %10, label %46, label %11, !prof !10

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.io_rings, ptr %13, i32 0, i32 8
  %15 = load volatile i32, ptr %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %46

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %20 = load i8, ptr %19, align 16
  %21 = and i8 %20, 4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %44, label %23

23:                                               ; preds = %18
  %24 = tail call ptr @llvm.thread.pointer() #21
  %25 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %26 = load volatile i32, ptr %25, align 4
  %27 = and i32 %26, 15728640
  %28 = load volatile i32, ptr %25, align 4
  %29 = and i32 %28, 983040
  %30 = or i32 %29, %27
  %31 = load volatile i32, ptr %25, align 4
  %32 = and i32 %31, 256
  %33 = or i32 %30, %32
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %46

35:                                               ; preds = %23
  %36 = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 4
  %37 = load i32, ptr %36, align 4
  %38 = and i32 %37, 16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.task_struct, ptr %24, i32 0, i32 69
  %42 = load ptr, ptr %41, align 64
  %43 = icmp eq ptr %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40, %18
  %45 = tail call i64 @eventfd_signal(ptr noundef nonnull %9, i64 noundef 1) #21
  br label %46

46:                                               ; preds = %44, %40, %35, %23, %11, %7
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_fail_links(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 4194304
  %7 = icmp eq i32 %6, 0
  store ptr null, ptr %2, align 8
  %8 = icmp eq ptr %3, null
  br i1 %8, label %72, label %9

9:                                                ; preds = %70, %1
  %10 = phi ptr [ %21, %70 ], [ %3, %1 ]
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %10, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %10, i32 0, i32 6
  %17 = load i32, ptr %16, align 8
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi i32 [ %17, %15 ], [ -125, %9 ]
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %10, i32 0, i32 14
  %21 = load ptr, ptr %20, align 8
  store ptr null, ptr %20, align 8
  %22 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_fail_link, i32 0, i32 1), align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %47

24:                                               ; preds = %18
  %25 = tail call ptr @llvm.thread.pointer() #21
  %26 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 2
  %27 = load i32, ptr %26, align 8
  %28 = lshr i32 %27, 5
  %29 = getelementptr i32, ptr @__cpu_online_mask, i32 %28
  %30 = load volatile i32, ptr %29, align 4
  %31 = and i32 %27, 31
  %32 = shl nuw i32 1, %31
  %33 = and i32 %32, %30
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %24
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !59
  %36 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_fail_link, i32 0, i32 7), align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %46, label %38

38:                                               ; preds = %38, %35
  %39 = phi ptr [ %43, %38 ], [ %36, %35 ]
  %40 = load volatile ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.tracepoint_func, ptr %39, i32 0, i32 1
  %42 = load ptr, ptr %41, align 4
  tail call void %40(ptr noundef %42, ptr noundef %0, ptr noundef nonnull %10) #21
  %43 = getelementptr %struct.tracepoint_func, ptr %39, i32 1
  %44 = load ptr, ptr %43, align 4
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %38

46:                                               ; preds = %38, %35
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !60
  br label %47

47:                                               ; preds = %46, %24, %18
  br i1 %7, label %48, label %51

48:                                               ; preds = %47
  %49 = load i32, ptr %11, align 4
  %50 = and i32 %49, -65
  store i32 %50, ptr %11, align 4
  tail call fastcc void @io_fill_cqe_req(ptr noundef nonnull %10, i32 noundef %19)
  br label %51

51:                                               ; preds = %48, %47
  %52 = load i32, ptr %11, align 4
  %53 = and i32 %52, 524288
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %68, label %55, !prof !10

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.io_kiocb, ptr %10, i32 0, i32 13
  %57 = load volatile i32, ptr %56, align 4
  %58 = add i32 %57, 127
  %59 = icmp ult i32 %58, 128
  %60 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %61 = xor i1 %60, true
  %62 = select i1 %59, i1 %61, i1 false
  br i1 %62, label %63, label %64, !prof !11

63:                                               ; preds = %55
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %64

64:                                               ; preds = %63, %55
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %56) #21, !srcloc !13
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %56, ptr %56, i32 1, ptr elementtype(i32) %56) #21, !srcloc !35
  %66 = extractvalue { i32, i32 } %65, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %64, %51
  %69 = getelementptr inbounds %struct.io_kiocb, ptr %10, i32 0, i32 15, i32 1
  store ptr @io_free_req_work, ptr %69, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %10, i1 noundef zeroext false) #21
  br label %70

70:                                               ; preds = %68, %64
  %71 = icmp eq ptr %21, null
  br i1 %71, label %72, label %9

72:                                               ; preds = %70, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @eventfd_signal(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_req_task_submit(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load i8, ptr %1, align 1, !range !45
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %7, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %8) #21
  store i8 1, ptr %1, align 1
  br label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.task_struct, ptr %11, i32 0, i32 4
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %50, !prof !10

16:                                               ; preds = %9
  %17 = tail call fastcc i32 @io_issue_sqe(ptr noundef %0, i32 noundef -2147483647) #21
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 65536
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %16
  %23 = load ptr, ptr %3, align 8
  %24 = and i32 %19, 64
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.io_ring_ctx, ptr %23, i32 0, i32 1, i32 12, i32 5
  store i8 1, ptr %27, align 2
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %23, i32 0, i32 1, i32 12, i32 1
  store ptr null, ptr %29, align 4
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  %33 = getelementptr inbounds %struct.io_ring_ctx, ptr %23, i32 0, i32 1, i32 12, i32 1, i32 1
  br i1 %32, label %34, label %35

34:                                               ; preds = %28
  store ptr %29, ptr %33, align 4
  store volatile ptr %29, ptr %30, align 4
  br label %51

35:                                               ; preds = %28
  %36 = load ptr, ptr %33, align 4
  store ptr %29, ptr %36, align 4
  store ptr %29, ptr %33, align 4
  br label %51

37:                                               ; preds = %16
  switch i32 %17, label %49 [
    i32 0, label %38
    i32 -11, label %45
  ], !prof !61

38:                                               ; preds = %37
  %39 = and i32 %19, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41, !prof !10

41:                                               ; preds = %38
  %42 = tail call fastcc ptr @__io_prep_linked_timeout(ptr noundef %0) #21
  %43 = icmp eq ptr %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  tail call fastcc void @io_queue_linked_timeout(ptr noundef nonnull %42) #21
  br label %51

45:                                               ; preds = %37
  %46 = and i32 %19, 2048
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call fastcc void @io_queue_sqe_arm_apoll(ptr noundef %0) #21
  br label %51

49:                                               ; preds = %45, %37
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %17) #21
  br label %51

50:                                               ; preds = %9
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef -14)
  br label %51

51:                                               ; preds = %50, %49, %48, %44, %41, %38, %35, %34
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = or i32 %4, 256
  %6 = and i32 %4, 64
  %7 = icmp eq i32 %6, 0
  %8 = and i32 %5, -4194369
  %9 = or i32 %8, 4194304
  %10 = select i1 %7, i32 %5, i32 %9
  store i32 %10, ptr %3, align 4
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %12 = load ptr, ptr %11, align 8
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %12, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %13) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1, i32 noundef 0) #21
  %14 = getelementptr inbounds %struct.anon.178, ptr %12, i32 0, i32 3
  %15 = load i8, ptr %14, align 16
  %16 = and i8 %15, 48
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18, !prof !10

18:                                               ; preds = %2
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %12) #24
  br label %19

19:                                               ; preds = %18, %2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %12, i32 0, i32 10
  %21 = load i32, ptr %20, align 64
  %22 = getelementptr inbounds %struct.anon.178, ptr %12, i32 0, i32 1
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds %struct.io_rings, ptr %23, i32 0, i32 1, i32 2
  store volatile i32 %21, ptr %24, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %25 = load i16, ptr %13, align 4
  %26 = add i16 %25, 1
  store i16 %26, ptr %13, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %12) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_issue_sqe(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.io_uring_rsrc_update2, align 8
  %4 = alloca ptr, align 4
  %5 = alloca %struct.io_cancel_data, align 8
  %6 = alloca %struct.io_async_connect, align 4
  %7 = alloca %struct.msghdr, align 8
  %8 = alloca %struct.iovec, align 8
  %9 = alloca %struct.io_async_msghdr, align 8
  %10 = alloca %struct.msghdr, align 8
  %11 = alloca %struct.iovec, align 8
  %12 = alloca %struct.io_async_msghdr, align 8
  %13 = alloca i8, align 1
  %14 = alloca %struct.io_rw_state, align 8
  %15 = alloca ptr, align 4
  %16 = alloca %struct.io_rw_state, align 8
  %17 = alloca ptr, align 4
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 262144
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %31, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 20
  %24 = load ptr, ptr %23, align 4
  %25 = tail call ptr @llvm.thread.pointer() #21
  %26 = getelementptr inbounds %struct.task_struct, ptr %25, i32 0, i32 83
  %27 = load ptr, ptr %26, align 8
  %28 = icmp eq ptr %24, %27
  br i1 %28, label %31, label %29, !prof !10

29:                                               ; preds = %22
  %30 = tail call ptr @override_creds(ptr noundef %24) #21
  br label %31

31:                                               ; preds = %29, %22, %2
  %32 = phi ptr [ %30, %29 ], [ null, %22 ], [ null, %2 ]
  %33 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %34 = load i8, ptr %33, align 8
  switch i8 %34, label %2462 [
    i8 0, label %35
    i8 1, label %65
    i8 4, label %65
    i8 22, label %65
    i8 2, label %271
    i8 5, label %271
    i8 23, label %271
    i8 3, label %402
    i8 6, label %443
    i8 7, label %444
    i8 8, label %574
    i8 9, label %611
    i8 26, label %698
    i8 10, label %768
    i8 27, label %897
    i8 11, label %1010
    i8 12, label %1073
    i8 13, label %1222
    i8 16, label %1306
    i8 14, label %1397
    i8 17, label %1467
    i8 18, label %1504
    i8 19, label %1506
    i8 20, label %1676
    i8 21, label %1734
    i8 24, label %1774
    i8 25, label %1822
    i8 28, label %1862
    i8 29, label %1864
    i8 30, label %1911
    i8 31, label %1972
    i8 32, label %2094
    i8 33, label %2168
    i8 34, label %2221
    i8 35, label %2257
    i8 36, label %2299
    i8 37, label %2344
    i8 38, label %2382
    i8 39, label %2420
  ]

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr inbounds %struct.anon.178, ptr %37, i32 0, i32 2
  %39 = load i32, ptr %38, align 4
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %2462, !prof !10

42:                                               ; preds = %35
  %43 = and i32 %1, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 0, ptr %46, align 8
  %47 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %47, align 4
  %48 = load i32, ptr %18, align 4
  %49 = or i32 %48, 65536
  store i32 %49, ptr %18, align 4
  br label %2462

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.io_ring_ctx, ptr %37, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %51) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef 0, i32 noundef 0) #21
  %52 = getelementptr inbounds %struct.anon.178, ptr %37, i32 0, i32 3
  %53 = load i8, ptr %52, align 16
  %54 = and i8 %53, 48
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56, !prof !10

56:                                               ; preds = %50
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %37) #24
  br label %57

57:                                               ; preds = %56, %50
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %58 = getelementptr inbounds %struct.io_ring_ctx, ptr %37, i32 0, i32 10
  %59 = load i32, ptr %58, align 64
  %60 = getelementptr inbounds %struct.anon.178, ptr %37, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8
  %62 = getelementptr inbounds %struct.io_rings, ptr %61, i32 0, i32 1, i32 2
  store volatile i32 %59, ptr %62, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %63 = load i16, ptr %51, align 4
  %64 = add i16 %63, 1
  store i16 %64, ptr %51, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %37) #21
  br label %2462

65:                                               ; preds = %31, %31, %31
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %16) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(104) %16, i8 0, i32 104, i1 false) #21, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #21
  store ptr null, ptr %17, align 4, !annotation !9
  %66 = icmp sgt i32 %1, -1
  %67 = load i32, ptr %18, align 4
  %68 = and i32 %67, 2097152
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.iov_iter, ptr %16, i32 0, i32 4
  %72 = call fastcc i32 @io_import_iovec(i32 noundef 0, ptr noundef %0, ptr noundef nonnull %17, ptr noundef nonnull %16, i32 noundef %1) #21
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %269, label %79, !prof !11

74:                                               ; preds = %65
  %75 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %76 = load ptr, ptr %75, align 8
  %77 = getelementptr inbounds %struct.iov_iter, ptr %76, i32 0, i32 4
  %78 = getelementptr inbounds %struct.io_rw_state, ptr %76, i32 0, i32 1
  tail call void @iov_iter_restore(ptr noundef %76, ptr noundef %78) #21
  store ptr null, ptr %17, align 4
  br label %79

79:                                               ; preds = %74, %70
  %80 = phi ptr [ %76, %74 ], [ %16, %70 ]
  %81 = phi ptr [ %77, %74 ], [ %71, %70 ]
  %82 = load i32, ptr %81, align 8
  %83 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %82, ptr %83, align 8
  br i1 %66, label %97, label %84

84:                                               ; preds = %79
  %85 = load i32, ptr %18, align 4
  %86 = and i32 %85, 8388608
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %93, !prof !11

88:                                               ; preds = %84
  %89 = load ptr, ptr %17, align 4
  %90 = call fastcc i32 @io_setup_async_rw(ptr noundef %0, ptr noundef %89, ptr noundef %80, i1 noundef zeroext true) #21
  %91 = icmp eq i32 %90, 0
  %92 = select i1 %91, i32 -11, i32 %90
  br label %269

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %95 = load i32, ptr %94, align 8
  %96 = or i32 %95, 8
  store i32 %96, ptr %94, align 8
  br label %101

97:                                               ; preds = %79
  %98 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %99 = load i32, ptr %98, align 8
  %100 = and i32 %99, -9
  store i32 %100, ptr %98, align 8
  br label %101

101:                                              ; preds = %97, %93
  %102 = load ptr, ptr %0, align 8
  %103 = getelementptr inbounds %struct.file, ptr %102, i32 0, i32 8
  %104 = load i32, ptr %103, align 8
  %105 = and i32 %104, 2097152
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 1
  %108 = select i1 %106, ptr %107, ptr null
  %109 = call i32 @rw_verify_area(i32 noundef 0, ptr noundef %102, ptr noundef %108, i32 noundef %82) #21
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %113, label %111, !prof !10

111:                                              ; preds = %101
  %112 = load ptr, ptr %17, align 4
  call void @kfree(ptr noundef %112) #21
  br label %269

113:                                              ; preds = %101
  %114 = load ptr, ptr %0, align 8
  %115 = getelementptr inbounds %struct.file, ptr %114, i32 0, i32 3
  %116 = load ptr, ptr %115, align 4
  %117 = getelementptr inbounds %struct.file_operations, ptr %116, i32 0, i32 4
  %118 = load ptr, ptr %117, align 4
  %119 = icmp eq ptr %118, null
  br i1 %119, label %122, label %120, !prof !11

120:                                              ; preds = %113
  %121 = call i32 %118(ptr noundef %0, ptr noundef %80) #21
  br label %128

122:                                              ; preds = %113
  %123 = getelementptr inbounds %struct.file_operations, ptr %116, i32 0, i32 2
  %124 = load ptr, ptr %123, align 4
  %125 = icmp eq ptr %124, null
  br i1 %125, label %135, label %126

126:                                              ; preds = %122
  %127 = call fastcc i32 @loop_rw_iter(i32 noundef 0, ptr noundef %0, ptr noundef %80) #21
  br label %128

128:                                              ; preds = %126, %120
  %129 = phi i32 [ %121, %120 ], [ %127, %126 ]
  %130 = icmp eq i32 %129, -11
  %131 = load i32, ptr %18, align 4
  br i1 %130, label %139, label %132

132:                                              ; preds = %128
  %133 = and i32 %131, 131072
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %156, label %139

135:                                              ; preds = %122
  %136 = load i32, ptr %18, align 4
  %137 = and i32 %136, 131072
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %158, label %139

139:                                              ; preds = %135, %132, %128
  %140 = phi i32 [ %131, %132 ], [ %136, %135 ], [ %131, %128 ]
  %141 = phi i32 [ %129, %132 ], [ -22, %135 ], [ -11, %128 ]
  %142 = and i32 %140, -131073
  store i32 %142, ptr %18, align 4
  br i1 %66, label %143, label %153

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %145 = load ptr, ptr %144, align 8
  %146 = getelementptr inbounds %struct.anon.178, ptr %145, i32 0, i32 2
  %147 = load i32, ptr %146, align 4
  %148 = and i32 %147, 1
  %149 = icmp ne i32 %148, 0
  %150 = and i32 %140, 2048
  %151 = icmp eq i32 %150, 0
  %152 = select i1 %149, i1 %151, i1 false
  br i1 %152, label %180, label %263

153:                                              ; preds = %139
  %154 = and i32 %140, 2048
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %180, label %263

156:                                              ; preds = %132
  %157 = icmp eq i32 %129, -529
  br i1 %157, label %265, label %158

158:                                              ; preds = %156, %135
  %159 = phi i32 [ %129, %156 ], [ -22, %135 ]
  %160 = phi i32 [ %131, %156 ], [ %136, %135 ]
  %161 = load i32, ptr %83, align 8
  %162 = icmp eq i32 %159, %161
  %163 = icmp slt i32 %159, 1
  %164 = or i1 %163, %162
  %165 = or i1 %66, %164
  %166 = xor i1 %165, true
  %167 = and i32 %160, 2048
  %168 = icmp eq i32 %167, 0
  %169 = select i1 %166, i1 %168, i1 false
  br i1 %169, label %170, label %263

170:                                              ; preds = %158
  %171 = and i32 %160, 16777216
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %180

173:                                              ; preds = %170
  %174 = load ptr, ptr %0, align 8
  %175 = getelementptr inbounds %struct.file, ptr %174, i32 0, i32 2
  %176 = load ptr, ptr %175, align 8
  %177 = load i16, ptr %176, align 8
  %178 = and i16 %177, -4096
  %179 = icmp eq i16 %178, 24576
  br i1 %179, label %180, label %263

180:                                              ; preds = %173, %170, %153, %143
  %181 = phi i32 [ %159, %173 ], [ 0, %153 ], [ %159, %170 ], [ 0, %143 ]
  %182 = getelementptr inbounds %struct.io_rw_state, ptr %80, i32 0, i32 1
  call void @iov_iter_restore(ptr noundef %80, ptr noundef %182) #21
  %183 = load ptr, ptr %17, align 4
  %184 = call fastcc i32 @io_setup_async_rw(ptr noundef %0, ptr noundef %183, ptr noundef %80, i1 noundef zeroext true) #21
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %269

186:                                              ; preds = %180
  store ptr null, ptr %17, align 4
  %187 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %188 = load ptr, ptr %187, align 8
  %189 = getelementptr inbounds %struct.iov_iter, ptr %188, i32 0, i32 4
  %190 = getelementptr inbounds %struct.io_async_rw, ptr %188, i32 0, i32 2
  %191 = getelementptr inbounds %struct.io_rw_state, ptr %188, i32 0, i32 1
  %192 = getelementptr inbounds %struct.iov_iter, ptr %188, i32 0, i32 3
  %193 = getelementptr inbounds %struct.io_rw_state, ptr %188, i32 0, i32 1, i32 1
  %194 = getelementptr inbounds %struct.iov_iter, ptr %188, i32 0, i32 6
  %195 = getelementptr inbounds %struct.io_rw_state, ptr %188, i32 0, i32 1, i32 2
  %196 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %197 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 7
  br label %198

198:                                              ; preds = %258, %186
  %199 = phi i32 [ %181, %186 ], [ %260, %258 ]
  call void @iov_iter_advance(ptr noundef %188, i32 noundef %199) #21
  %200 = load i32, ptr %189, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %263, label %202

202:                                              ; preds = %198
  %203 = load i32, ptr %190, align 4
  %204 = add i32 %203, %199
  store i32 %204, ptr %190, align 4
  %205 = load i32, ptr %192, align 4
  store i32 %205, ptr %191, align 4
  store i32 %200, ptr %193, align 4
  %206 = load i32, ptr %194, align 8
  store i32 %206, ptr %195, align 4
  %207 = load ptr, ptr %187, align 8
  %208 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3
  %209 = load i32, ptr %18, align 4
  %210 = and i32 %209, 2048
  %211 = icmp eq i32 %210, 0
  %212 = load i32, ptr %196, align 8
  %213 = and i32 %212, 131073
  %214 = icmp eq i32 %213, 0
  %215 = select i1 %211, i1 %214, i1 false
  br i1 %215, label %216, label %228

216:                                              ; preds = %202
  %217 = load ptr, ptr %0, align 8
  %218 = getelementptr inbounds %struct.file, ptr %217, i32 0, i32 3
  %219 = load ptr, ptr %218, align 4
  %220 = getelementptr inbounds %struct.file_operations, ptr %219, i32 0, i32 9
  %221 = load ptr, ptr %220, align 4
  %222 = icmp eq ptr %221, null
  br i1 %222, label %223, label %228

223:                                              ; preds = %216
  %224 = getelementptr inbounds %struct.file, ptr %217, i32 0, i32 8
  %225 = load i32, ptr %224, align 8
  %226 = and i32 %225, 1073741824
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %223, %216, %202
  %229 = and i32 %212, -524289
  store i32 %229, ptr %196, align 8
  br label %269

230:                                              ; preds = %223
  %231 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3, i32 2
  %232 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3, i32 2, i32 2
  store ptr @io_async_buf_func, ptr %232, align 4
  %233 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3, i32 2, i32 1
  store ptr %0, ptr %233, align 4
  store i32 0, ptr %231, align 4
  %234 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3, i32 2, i32 3
  store volatile ptr %234, ptr %234, align 4
  %235 = getelementptr inbounds %struct.io_async_rw, ptr %207, i32 0, i32 3, i32 2, i32 3, i32 1
  store ptr %234, ptr %235, align 4
  %236 = load i32, ptr %196, align 8
  %237 = and i32 %236, -524297
  %238 = or i32 %237, 524288
  store i32 %238, ptr %196, align 8
  store ptr %208, ptr %197, align 8
  %239 = load ptr, ptr %0, align 8
  %240 = getelementptr inbounds %struct.file, ptr %239, i32 0, i32 3
  %241 = load ptr, ptr %240, align 4
  %242 = getelementptr inbounds %struct.file_operations, ptr %241, i32 0, i32 4
  %243 = load ptr, ptr %242, align 4
  %244 = icmp eq ptr %243, null
  br i1 %244, label %247, label %245, !prof !11

245:                                              ; preds = %230
  %246 = call i32 %243(ptr noundef %0, ptr noundef %188) #21
  br label %253

247:                                              ; preds = %230
  %248 = getelementptr inbounds %struct.file_operations, ptr %241, i32 0, i32 2
  %249 = load ptr, ptr %248, align 4
  %250 = icmp eq ptr %249, null
  br i1 %250, label %258, label %251

251:                                              ; preds = %247
  %252 = call fastcc i32 @loop_rw_iter(i32 noundef 0, ptr noundef %0, ptr noundef %188) #21
  br label %253

253:                                              ; preds = %251, %245
  %254 = phi i32 [ %246, %245 ], [ %252, %251 ]
  %255 = icmp eq i32 %254, -529
  br i1 %255, label %269, label %256

256:                                              ; preds = %253
  %257 = load i32, ptr %196, align 8
  br label %258

258:                                              ; preds = %256, %247
  %259 = phi i32 [ %257, %256 ], [ %238, %247 ]
  %260 = phi i32 [ %254, %256 ], [ -22, %247 ]
  %261 = and i32 %259, -524289
  store i32 %261, ptr %196, align 8
  call void @iov_iter_restore(ptr noundef %188, ptr noundef %191) #21
  %262 = icmp sgt i32 %260, 0
  br i1 %262, label %198, label %263

263:                                              ; preds = %258, %198, %173, %158, %153, %143
  %264 = phi i32 [ %141, %153 ], [ %141, %143 ], [ %159, %158 ], [ %159, %173 ], [ %260, %258 ], [ %199, %198 ]
  call fastcc void @kiocb_done(ptr noundef %0, i32 noundef %264, i32 noundef %1) #21
  br label %265

265:                                              ; preds = %263, %156
  %266 = load ptr, ptr %17, align 4
  %267 = icmp eq ptr %266, null
  br i1 %267, label %269, label %268

268:                                              ; preds = %265
  call void @kfree(ptr noundef nonnull %266) #21
  br label %269

269:                                              ; preds = %268, %265, %253, %228, %180, %111, %88, %70
  %270 = phi i32 [ %92, %88 ], [ %109, %111 ], [ -11, %228 ], [ %72, %70 ], [ %184, %180 ], [ 0, %268 ], [ 0, %265 ], [ 0, %253 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #21
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %16) #21
  br label %2462

271:                                              ; preds = %31, %31, %31
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %14) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(104) %14, i8 0, i32 104, i1 false) #21, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %15) #21
  store ptr null, ptr %15, align 4, !annotation !9
  %272 = icmp sgt i32 %1, -1
  %273 = load i32, ptr %18, align 4
  %274 = and i32 %273, 2097152
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %280

276:                                              ; preds = %271
  %277 = getelementptr inbounds %struct.iov_iter, ptr %14, i32 0, i32 4
  %278 = call fastcc i32 @io_import_iovec(i32 noundef 1, ptr noundef %0, ptr noundef nonnull %15, ptr noundef nonnull %14, i32 noundef %1) #21
  %279 = icmp slt i32 %278, 0
  br i1 %279, label %400, label %285, !prof !11

280:                                              ; preds = %271
  %281 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %282 = load ptr, ptr %281, align 8
  %283 = getelementptr inbounds %struct.iov_iter, ptr %282, i32 0, i32 4
  %284 = getelementptr inbounds %struct.io_rw_state, ptr %282, i32 0, i32 1
  tail call void @iov_iter_restore(ptr noundef %282, ptr noundef %284) #21
  store ptr null, ptr %15, align 4
  br label %285

285:                                              ; preds = %280, %276
  %286 = phi ptr [ %282, %280 ], [ %14, %276 ]
  %287 = phi ptr [ %283, %280 ], [ %277, %276 ]
  %288 = load i32, ptr %287, align 8
  %289 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %288, ptr %289, align 8
  br i1 %272, label %304, label %290

290:                                              ; preds = %285
  %291 = load i32, ptr %18, align 4
  %292 = and i32 %291, 8388608
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %390, label %294, !prof !11

294:                                              ; preds = %290
  %295 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %296 = load i32, ptr %295, align 8
  %297 = and i32 %296, 131072
  %298 = icmp ne i32 %297, 0
  %299 = and i32 %291, 16777216
  %300 = icmp eq i32 %299, 0
  %301 = select i1 %298, i1 true, i1 %300
  br i1 %301, label %302, label %390

302:                                              ; preds = %294
  %303 = or i32 %296, 8
  store i32 %303, ptr %295, align 8
  br label %308

304:                                              ; preds = %285
  %305 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %306 = load i32, ptr %305, align 8
  %307 = and i32 %306, -9
  store i32 %307, ptr %305, align 8
  br label %308

308:                                              ; preds = %304, %302
  %309 = load ptr, ptr %0, align 8
  %310 = getelementptr inbounds %struct.file, ptr %309, i32 0, i32 8
  %311 = load i32, ptr %310, align 8
  %312 = and i32 %311, 2097152
  %313 = icmp eq i32 %312, 0
  %314 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 1
  %315 = select i1 %313, ptr %314, ptr null
  %316 = call i32 @rw_verify_area(i32 noundef 1, ptr noundef %309, ptr noundef %315, i32 noundef %288) #21
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %396, !prof !10

318:                                              ; preds = %308
  %319 = load i32, ptr %18, align 4
  %320 = and i32 %319, 16777216
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %346, label %322

322:                                              ; preds = %318
  %323 = load ptr, ptr %0, align 8
  %324 = getelementptr inbounds %struct.file, ptr %323, i32 0, i32 2
  %325 = load ptr, ptr %324, align 8
  %326 = getelementptr inbounds %struct.inode, ptr %325, i32 0, i32 8
  %327 = load ptr, ptr %326, align 4
  %328 = getelementptr %struct.super_block, ptr %327, i32 0, i32 26, i32 2
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !62
  %329 = load volatile i32, ptr %328, align 4
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %343, !prof !10

331:                                              ; preds = %322
  %332 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %333 = getelementptr %struct.super_block, ptr %327, i32 0, i32 26, i32 2, i32 0, i32 1
  %334 = load ptr, ptr %333, align 4
  %335 = ptrtoint ptr %334 to i32
  %336 = call i32 @llvm.read_register.i32(metadata !0) #21
  %337 = inttoptr i32 %336 to ptr
  %338 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %337) #6, !srcloc !12
  %339 = add i32 %338, %335
  %340 = inttoptr i32 %339 to ptr
  %341 = load i32, ptr %340, align 4
  %342 = add i32 %341, 1
  store i32 %342, ptr %340, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %332) #21, !srcloc !22
  br label %345

343:                                              ; preds = %322
  %344 = call zeroext i1 @__percpu_down_read(ptr noundef %328, i1 noundef zeroext false) #21
  br label %345

345:                                              ; preds = %343, %331
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !63
  br label %346

346:                                              ; preds = %345, %318
  %347 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %348 = load i32, ptr %347, align 8
  %349 = or i32 %348, 262144
  store i32 %349, ptr %347, align 8
  %350 = load ptr, ptr %0, align 8
  %351 = getelementptr inbounds %struct.file, ptr %350, i32 0, i32 3
  %352 = load ptr, ptr %351, align 4
  %353 = getelementptr inbounds %struct.file_operations, ptr %352, i32 0, i32 5
  %354 = load ptr, ptr %353, align 4
  %355 = icmp eq ptr %354, null
  br i1 %355, label %358, label %356, !prof !11

356:                                              ; preds = %346
  %357 = call i32 %354(ptr noundef %0, ptr noundef %286) #21
  br label %364

358:                                              ; preds = %346
  %359 = getelementptr inbounds %struct.file_operations, ptr %352, i32 0, i32 3
  %360 = load ptr, ptr %359, align 4
  %361 = icmp eq ptr %360, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = call fastcc i32 @loop_rw_iter(i32 noundef 1, ptr noundef %0, ptr noundef %286) #21
  br label %364

364:                                              ; preds = %362, %358, %356
  %365 = phi i32 [ %357, %356 ], [ %363, %362 ], [ -22, %358 ]
  %366 = load i32, ptr %18, align 4
  %367 = and i32 %366, 131072
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %371, label %369

369:                                              ; preds = %364
  %370 = and i32 %366, -131073
  store i32 %370, ptr %18, align 4
  br label %376

371:                                              ; preds = %364
  switch i32 %365, label %388 [
    i32 -95, label %372
    i32 -11, label %376
  ]

372:                                              ; preds = %371
  %373 = load i32, ptr %347, align 8
  %374 = and i32 %373, 8
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %388, label %376

376:                                              ; preds = %372, %371, %369
  %377 = phi i32 [ %366, %371 ], [ %370, %369 ], [ %366, %372 ]
  %378 = and i32 %377, 2048
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %388

380:                                              ; preds = %376
  br i1 %272, label %381, label %390

381:                                              ; preds = %380
  %382 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %383 = load ptr, ptr %382, align 8
  %384 = getelementptr inbounds %struct.anon.178, ptr %383, i32 0, i32 2
  %385 = load i32, ptr %384, align 4
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %381, %376, %372, %371
  %389 = phi i32 [ -11, %381 ], [ -11, %376 ], [ -95, %372 ], [ %365, %371 ]
  call fastcc void @kiocb_done(ptr noundef %0, i32 noundef %389, i32 noundef %1) #21
  br label %396

390:                                              ; preds = %381, %380, %294, %290
  %391 = getelementptr inbounds %struct.io_rw_state, ptr %286, i32 0, i32 1
  call void @iov_iter_restore(ptr noundef %286, ptr noundef %391) #21
  %392 = load ptr, ptr %15, align 4
  %393 = call fastcc i32 @io_setup_async_rw(ptr noundef %0, ptr noundef %392, ptr noundef %286, i1 noundef zeroext false) #21
  %394 = icmp eq i32 %393, 0
  %395 = select i1 %394, i32 -11, i32 %393
  br label %400

396:                                              ; preds = %388, %308
  %397 = load ptr, ptr %15, align 4
  %398 = icmp eq ptr %397, null
  br i1 %398, label %400, label %399

399:                                              ; preds = %396
  call void @kfree(ptr noundef nonnull %397) #21
  br label %400

400:                                              ; preds = %399, %396, %390, %276
  %401 = phi i32 [ %395, %390 ], [ %278, %276 ], [ %316, %399 ], [ %316, %396 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %15) #21
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %14) #21
  br label %2462

402:                                              ; preds = %31
  %403 = icmp sgt i32 %1, -1
  br i1 %403, label %404, label %2462

404:                                              ; preds = %402
  %405 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 2
  %406 = load i64, ptr %405, align 8
  %407 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 1
  %408 = load i64, ptr %407, align 8
  %409 = add i64 %408, %406
  %410 = load ptr, ptr %0, align 8
  %411 = icmp sgt i64 %409, 0
  %412 = select i1 %411, i64 %409, i64 9223372036854775807
  %413 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 3
  %414 = load i32, ptr %413, align 8
  %415 = and i32 %414, 1
  %416 = tail call i32 @vfs_fsync_range(ptr noundef %410, i64 noundef %406, i64 noundef %412, i32 noundef %415) #21
  %417 = icmp slt i32 %416, 0
  br i1 %417, label %418, label %426

418:                                              ; preds = %404
  %419 = load i32, ptr %18, align 4
  %420 = or i32 %419, 256
  %421 = and i32 %419, 64
  %422 = icmp eq i32 %421, 0
  %423 = and i32 %420, -4194369
  %424 = or i32 %423, 4194304
  %425 = select i1 %422, i32 %420, i32 %424
  store i32 %425, ptr %18, align 4
  br label %426

426:                                              ; preds = %418, %404
  %427 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %428 = load ptr, ptr %427, align 8
  %429 = getelementptr inbounds %struct.io_ring_ctx, ptr %428, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %429) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %416, i32 noundef 0) #21
  %430 = getelementptr inbounds %struct.anon.178, ptr %428, i32 0, i32 3
  %431 = load i8, ptr %430, align 16
  %432 = and i8 %431, 48
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %435, label %434, !prof !10

434:                                              ; preds = %426
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %428) #24
  br label %435

435:                                              ; preds = %434, %426
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %436 = getelementptr inbounds %struct.io_ring_ctx, ptr %428, i32 0, i32 10
  %437 = load i32, ptr %436, align 64
  %438 = getelementptr inbounds %struct.anon.178, ptr %428, i32 0, i32 1
  %439 = load ptr, ptr %438, align 8
  %440 = getelementptr inbounds %struct.io_rings, ptr %439, i32 0, i32 1, i32 2
  store volatile i32 %437, ptr %440, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %441 = load i16, ptr %429, align 4
  %442 = add i16 %441, 1
  store i16 %442, ptr %429, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %428) #21
  br label %2462

443:                                              ; preds = %31
  tail call fastcc void @io_poll_add(ptr noundef %0, i32 noundef %1)
  br label %2462

444:                                              ; preds = %31
  %445 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %446 = load ptr, ptr %445, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #21
  %447 = getelementptr inbounds %struct.io_ring_ctx, ptr %446, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %447) #21
  %448 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 1
  %449 = load i64, ptr %448, align 8
  %450 = getelementptr inbounds %struct.io_ring_ctx, ptr %446, i32 0, i32 11, i32 3
  %451 = load ptr, ptr %450, align 16
  %452 = trunc i64 %449 to i32
  %453 = getelementptr inbounds %struct.io_ring_ctx, ptr %446, i32 0, i32 11, i32 4
  %454 = load i32, ptr %453, align 4
  %455 = mul i32 %452, 1640531527
  %456 = sub i32 32, %454
  %457 = lshr i32 %455, %456
  %458 = getelementptr %struct.hlist_head, ptr %451, i32 %457
  %459 = load ptr, ptr %458, align 4
  %460 = icmp eq ptr %459, null
  %461 = getelementptr i8, ptr %459, i32 -116
  %462 = icmp eq ptr %461, null
  %463 = or i1 %460, %462
  br i1 %463, label %537, label %464

464:                                              ; preds = %473, %444
  %465 = phi ptr [ %477, %473 ], [ %461, %444 ]
  %466 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 5
  %467 = load i64, ptr %466, align 8
  %468 = icmp eq i64 %467, %449
  br i1 %468, label %469, label %473

469:                                              ; preds = %464
  %470 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 1
  %471 = load i8, ptr %470, align 8
  %472 = icmp eq i8 %471, 6
  br i1 %472, label %480, label %473

473:                                              ; preds = %469, %464
  %474 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 16
  %475 = load ptr, ptr %474, align 4
  %476 = icmp eq ptr %475, null
  %477 = getelementptr i8, ptr %475, i32 -116
  %478 = icmp eq ptr %477, null
  %479 = or i1 %476, %478
  br i1 %479, label %537, label %464

480:                                              ; preds = %469
  %481 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !64
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %481) #21, !srcloc !13
  %482 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %481, ptr %481, i32 1, ptr elementtype(i32) %481) #21, !srcloc !65
  %483 = extractvalue { i32, i32, i32 } %482, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !66
  %484 = and i32 %483, 1048575
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %486, label %537

486:                                              ; preds = %480
  tail call fastcc void @io_poll_remove_entries(ptr noundef nonnull %465) #21
  %487 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 16
  %488 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 16, i32 1
  %489 = load ptr, ptr %488, align 4
  %490 = icmp eq ptr %489, null
  br i1 %490, label %497, label %491

491:                                              ; preds = %486
  %492 = load ptr, ptr %487, align 4
  store volatile ptr %492, ptr %489, align 4
  %493 = icmp eq ptr %492, null
  br i1 %493, label %496, label %494

494:                                              ; preds = %491
  %495 = getelementptr inbounds %struct.hlist_node, ptr %492, i32 0, i32 1
  store volatile ptr %489, ptr %495, align 4
  br label %496

496:                                              ; preds = %494, %491
  store ptr null, ptr %487, align 4
  store ptr null, ptr %488, align 4
  br label %497

497:                                              ; preds = %496, %486
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %498 = load i16, ptr %447, align 4
  %499 = add i16 %498, 1
  store i16 %499, ptr %447, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %500 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 4
  %501 = load i8, ptr %500, align 4, !range !45
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %503, label %507

503:                                              ; preds = %497
  %504 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 5
  %505 = load i8, ptr %504, align 1, !range !45
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %523, label %519

507:                                              ; preds = %497
  %508 = getelementptr inbounds %struct.io_poll_iocb, ptr %465, i32 0, i32 2
  %509 = load i32, ptr %508, align 8
  %510 = and i32 %509, -65536
  store i32 %510, ptr %508, align 8
  %511 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 3
  %512 = load i32, ptr %511, align 8
  %513 = and i32 %512, 57287
  %514 = or i32 %510, %513
  %515 = or i32 %514, 8248
  store i32 %515, ptr %508, align 8
  %516 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 5
  %517 = load i8, ptr %516, align 1, !range !45
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %522, label %519

519:                                              ; preds = %507, %503
  %520 = getelementptr inbounds %struct.io_poll_update, ptr %0, i32 0, i32 2
  %521 = load i64, ptr %520, align 8
  store i64 %521, ptr %466, align 8
  br label %522

522:                                              ; preds = %519, %507
  tail call fastcc void @io_poll_add(ptr noundef nonnull %465, i32 noundef %1) #21
  br label %548

523:                                              ; preds = %503
  %524 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 4
  %525 = load i32, ptr %524, align 4
  %526 = or i32 %525, 256
  %527 = and i32 %525, 64
  %528 = icmp eq i32 %527, 0
  %529 = and i32 %526, -4194369
  %530 = or i32 %529, 4194304
  %531 = select i1 %528, i32 %526, i32 %530
  store i32 %531, ptr %524, align 4
  %532 = getelementptr inbounds %struct.io_kiocb, ptr %465, i32 0, i32 6
  store i32 -125, ptr %532, align 8
  %533 = trunc i32 %1 to i8
  %534 = lshr i8 %533, 1
  %535 = and i8 %534, 1
  %536 = xor i8 %535, 1
  store i8 %536, ptr %13, align 1
  call void @io_req_task_complete(ptr noundef nonnull %465, ptr noundef nonnull %13) #21
  br label %548

537:                                              ; preds = %480, %473, %444
  %538 = phi i32 [ -114, %480 ], [ -2, %444 ], [ -2, %473 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %539 = load i16, ptr %447, align 4
  %540 = add i16 %539, 1
  store i16 %540, ptr %447, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %541 = load i32, ptr %18, align 4
  %542 = or i32 %541, 256
  %543 = and i32 %541, 64
  %544 = icmp eq i32 %543, 0
  %545 = and i32 %542, -4194369
  %546 = or i32 %545, 4194304
  %547 = select i1 %544, i32 %542, i32 %546
  store i32 %547, ptr %18, align 4
  br label %548

548:                                              ; preds = %537, %523, %522
  %549 = phi i32 [ %538, %537 ], [ 0, %523 ], [ 0, %522 ]
  %550 = and i32 %1, 1
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %557, label %552

552:                                              ; preds = %548
  %553 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %549, ptr %553, align 8
  %554 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %554, align 4
  %555 = load i32, ptr %18, align 4
  %556 = or i32 %555, 65536
  store i32 %556, ptr %18, align 4
  br label %573

557:                                              ; preds = %548
  %558 = load ptr, ptr %445, align 8
  %559 = getelementptr inbounds %struct.io_ring_ctx, ptr %558, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %559) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %549, i32 noundef 0) #21
  %560 = getelementptr inbounds %struct.anon.178, ptr %558, i32 0, i32 3
  %561 = load i8, ptr %560, align 16
  %562 = and i8 %561, 48
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %565, label %564, !prof !10

564:                                              ; preds = %557
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %558) #24
  br label %565

565:                                              ; preds = %564, %557
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %566 = getelementptr inbounds %struct.io_ring_ctx, ptr %558, i32 0, i32 10
  %567 = load i32, ptr %566, align 64
  %568 = getelementptr inbounds %struct.anon.178, ptr %558, i32 0, i32 1
  %569 = load ptr, ptr %568, align 8
  %570 = getelementptr inbounds %struct.io_rings, ptr %569, i32 0, i32 1, i32 2
  store volatile i32 %567, ptr %570, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %571 = load i16, ptr %559, align 4
  %572 = add i16 %571, 1
  store i16 %572, ptr %559, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %558) #21
  br label %573

573:                                              ; preds = %565, %552
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #21
  br label %2462

574:                                              ; preds = %31
  %575 = icmp sgt i32 %1, -1
  br i1 %575, label %576, label %2462

576:                                              ; preds = %574
  %577 = load ptr, ptr %0, align 8
  %578 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 2
  %579 = load i64, ptr %578, align 8
  %580 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 1
  %581 = load i64, ptr %580, align 8
  %582 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 3
  %583 = load i32, ptr %582, align 8
  %584 = tail call i32 @sync_file_range(ptr noundef %577, i64 noundef %579, i64 noundef %581, i32 noundef %583) #21
  %585 = icmp slt i32 %584, 0
  br i1 %585, label %586, label %594

586:                                              ; preds = %576
  %587 = load i32, ptr %18, align 4
  %588 = or i32 %587, 256
  %589 = and i32 %587, 64
  %590 = icmp eq i32 %589, 0
  %591 = and i32 %588, -4194369
  %592 = or i32 %591, 4194304
  %593 = select i1 %590, i32 %588, i32 %592
  store i32 %593, ptr %18, align 4
  br label %594

594:                                              ; preds = %586, %576
  %595 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %596 = load ptr, ptr %595, align 8
  %597 = getelementptr inbounds %struct.io_ring_ctx, ptr %596, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %597) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %584, i32 noundef 0) #21
  %598 = getelementptr inbounds %struct.anon.178, ptr %596, i32 0, i32 3
  %599 = load i8, ptr %598, align 16
  %600 = and i8 %599, 48
  %601 = icmp eq i8 %600, 0
  br i1 %601, label %603, label %602, !prof !10

602:                                              ; preds = %594
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %596) #24
  br label %603

603:                                              ; preds = %602, %594
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %604 = getelementptr inbounds %struct.io_ring_ctx, ptr %596, i32 0, i32 10
  %605 = load i32, ptr %604, align 64
  %606 = getelementptr inbounds %struct.anon.178, ptr %596, i32 0, i32 1
  %607 = load ptr, ptr %606, align 8
  %608 = getelementptr inbounds %struct.io_rings, ptr %607, i32 0, i32 1, i32 2
  store volatile i32 %605, ptr %608, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %609 = load i16, ptr %597, align 4
  %610 = add i16 %609, 1
  store i16 %610, ptr %597, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %596) #21
  br label %2462

611:                                              ; preds = %31
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %12) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(256) %12, i8 0, i32 256, i1 false) #21, !annotation !9
  %612 = load ptr, ptr %0, align 8
  %613 = tail call ptr @sock_from_file(ptr noundef %612) #21
  %614 = icmp eq ptr %613, null
  br i1 %614, label %696, label %615, !prof !11

615:                                              ; preds = %611
  %616 = load i32, ptr %18, align 4
  %617 = and i32 %616, 2097152
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %622, label %619

619:                                              ; preds = %615
  %620 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %621 = load ptr, ptr %620, align 8
  br label %632

622:                                              ; preds = %615
  %623 = getelementptr inbounds %struct.io_async_msghdr, ptr %12, i32 0, i32 4
  %624 = getelementptr inbounds %struct.io_async_msghdr, ptr %12, i32 0, i32 3
  store ptr %623, ptr %624, align 8
  %625 = getelementptr inbounds %struct.io_async_msghdr, ptr %12, i32 0, i32 1
  store ptr %12, ptr %625, align 8
  %626 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %627 = load ptr, ptr %626, align 4
  %628 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %629 = load i32, ptr %628, align 8
  %630 = call i32 @sendmsg_copy_msghdr(ptr noundef %624, ptr noundef %627, i32 noundef %629, ptr noundef %625) #21
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %696

632:                                              ; preds = %622, %619
  %633 = phi ptr [ %621, %619 ], [ %12, %622 ]
  %634 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %635 = load i32, ptr %634, align 8
  %636 = icmp sgt i32 %1, -1
  %637 = or i32 %635, 64
  %638 = select i1 %636, i32 %635, i32 %637
  %639 = and i32 %638, 256
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %644, label %641

641:                                              ; preds = %632
  %642 = getelementptr inbounds %struct.io_async_msghdr, ptr %633, i32 0, i32 3, i32 2, i32 4
  %643 = load i32, ptr %642, align 8
  br label %644

644:                                              ; preds = %641, %632
  %645 = phi i32 [ %643, %641 ], [ 0, %632 ]
  %646 = getelementptr inbounds %struct.io_async_msghdr, ptr %633, i32 0, i32 3
  %647 = call i32 @__sys_sendmsg_sock(ptr noundef nonnull %613, ptr noundef %646, i32 noundef %638) #21
  %648 = icmp slt i32 %647, %645
  br i1 %648, label %649, label %664

649:                                              ; preds = %644
  %650 = icmp ne i32 %647, -11
  %651 = or i1 %636, %650
  br i1 %651, label %654, label %652

652:                                              ; preds = %649
  %653 = call fastcc i32 @io_setup_async_msg(ptr noundef %0, ptr noundef %633) #21
  br label %696

654:                                              ; preds = %649
  %655 = icmp eq i32 %647, -512
  %656 = select i1 %655, i32 -4, i32 %647
  %657 = load i32, ptr %18, align 4
  %658 = or i32 %657, 256
  %659 = and i32 %657, 64
  %660 = icmp eq i32 %659, 0
  %661 = and i32 %658, -4194369
  %662 = or i32 %661, 4194304
  %663 = select i1 %660, i32 %658, i32 %662
  store i32 %663, ptr %18, align 4
  br label %664

664:                                              ; preds = %654, %644
  %665 = phi i32 [ %656, %654 ], [ %647, %644 ]
  %666 = getelementptr inbounds %struct.io_async_msghdr, ptr %633, i32 0, i32 1
  %667 = load ptr, ptr %666, align 8
  %668 = icmp eq ptr %667, null
  br i1 %668, label %670, label %669

669:                                              ; preds = %664
  call void @kfree(ptr noundef nonnull %667) #21
  br label %670

670:                                              ; preds = %669, %664
  %671 = load i32, ptr %18, align 4
  %672 = and i32 %671, -8193
  store i32 %672, ptr %18, align 4
  %673 = and i32 %1, 1
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %679, label %675

675:                                              ; preds = %670
  %676 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %665, ptr %676, align 8
  %677 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %677, align 4
  %678 = or i32 %672, 65536
  store i32 %678, ptr %18, align 4
  br label %696

679:                                              ; preds = %670
  %680 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %681 = load ptr, ptr %680, align 8
  %682 = getelementptr inbounds %struct.io_ring_ctx, ptr %681, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %682) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %665, i32 noundef 0) #21
  %683 = getelementptr inbounds %struct.anon.178, ptr %681, i32 0, i32 3
  %684 = load i8, ptr %683, align 16
  %685 = and i8 %684, 48
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %688, label %687, !prof !10

687:                                              ; preds = %679
  call fastcc void @__io_commit_cqring_flush(ptr noundef %681) #24
  br label %688

688:                                              ; preds = %687, %679
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %689 = getelementptr inbounds %struct.io_ring_ctx, ptr %681, i32 0, i32 10
  %690 = load i32, ptr %689, align 64
  %691 = getelementptr inbounds %struct.anon.178, ptr %681, i32 0, i32 1
  %692 = load ptr, ptr %691, align 8
  %693 = getelementptr inbounds %struct.io_rings, ptr %692, i32 0, i32 1, i32 2
  store volatile i32 %690, ptr %693, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %694 = load i16, ptr %682, align 4
  %695 = add i16 %694, 1
  store i16 %695, ptr %682, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %681) #21
  br label %696

696:                                              ; preds = %688, %675, %652, %622, %611
  %697 = phi i32 [ %653, %652 ], [ -88, %611 ], [ %630, %622 ], [ 0, %675 ], [ 0, %688 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %12) #21
  br label %2462

698:                                              ; preds = %31
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %10) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(56) %10, i8 0, i32 56, i1 false) #21, !annotation !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #21
  store i64 0, ptr %11, align 8, !annotation !9
  %699 = load ptr, ptr %0, align 8
  %700 = tail call ptr @sock_from_file(ptr noundef %699) #21
  %701 = icmp eq ptr %700, null
  br i1 %701, label %766, label %702, !prof !11

702:                                              ; preds = %698
  %703 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %704 = load ptr, ptr %703, align 4
  %705 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 4
  %706 = load i32, ptr %705, align 4
  %707 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 2
  %708 = call i32 @import_single_range(i32 noundef 1, ptr noundef %704, i32 noundef %706, ptr noundef nonnull %11, ptr noundef %707) #21
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %766, !prof !10

710:                                              ; preds = %702
  store ptr null, ptr %10, align 8
  %711 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 3
  store ptr null, ptr %711, align 8
  %712 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 5
  store i32 0, ptr %712, align 8
  %713 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 1
  store i32 0, ptr %713, align 4
  %714 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %715 = load i32, ptr %714, align 8
  %716 = icmp sgt i32 %1, -1
  %717 = or i32 %715, 64
  %718 = select i1 %716, i32 %715, i32 %717
  %719 = and i32 %718, 256
  %720 = icmp eq i32 %719, 0
  %721 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 2, i32 4
  %722 = load i32, ptr %721, align 8
  %723 = select i1 %720, i32 0, i32 %722
  %724 = getelementptr inbounds %struct.msghdr, ptr %10, i32 0, i32 6
  store i32 %718, ptr %724, align 4
  %725 = call i32 @sock_sendmsg(ptr noundef nonnull %700, ptr noundef nonnull %10) #21
  %726 = icmp slt i32 %725, %723
  br i1 %726, label %727, label %740

727:                                              ; preds = %710
  %728 = icmp ne i32 %725, -11
  %729 = or i1 %716, %728
  br i1 %729, label %730, label %766

730:                                              ; preds = %727
  %731 = icmp eq i32 %725, -512
  %732 = select i1 %731, i32 -4, i32 %725
  %733 = load i32, ptr %18, align 4
  %734 = or i32 %733, 256
  %735 = and i32 %733, 64
  %736 = icmp eq i32 %735, 0
  %737 = and i32 %734, -4194369
  %738 = or i32 %737, 4194304
  %739 = select i1 %736, i32 %734, i32 %738
  store i32 %739, ptr %18, align 4
  br label %740

740:                                              ; preds = %730, %710
  %741 = phi i32 [ %732, %730 ], [ %725, %710 ]
  %742 = and i32 %1, 1
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %749, label %744

744:                                              ; preds = %740
  %745 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %741, ptr %745, align 8
  %746 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %746, align 4
  %747 = load i32, ptr %18, align 4
  %748 = or i32 %747, 65536
  store i32 %748, ptr %18, align 4
  br label %766

749:                                              ; preds = %740
  %750 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %751 = load ptr, ptr %750, align 8
  %752 = getelementptr inbounds %struct.io_ring_ctx, ptr %751, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %752) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %741, i32 noundef 0) #21
  %753 = getelementptr inbounds %struct.anon.178, ptr %751, i32 0, i32 3
  %754 = load i8, ptr %753, align 16
  %755 = and i8 %754, 48
  %756 = icmp eq i8 %755, 0
  br i1 %756, label %758, label %757, !prof !10

757:                                              ; preds = %749
  call fastcc void @__io_commit_cqring_flush(ptr noundef %751) #24
  br label %758

758:                                              ; preds = %757, %749
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %759 = getelementptr inbounds %struct.io_ring_ctx, ptr %751, i32 0, i32 10
  %760 = load i32, ptr %759, align 64
  %761 = getelementptr inbounds %struct.anon.178, ptr %751, i32 0, i32 1
  %762 = load ptr, ptr %761, align 8
  %763 = getelementptr inbounds %struct.io_rings, ptr %762, i32 0, i32 1, i32 2
  store volatile i32 %760, ptr %763, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %764 = load i16, ptr %752, align 4
  %765 = add i16 %764, 1
  store i16 %765, ptr %752, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %751) #21
  br label %766

766:                                              ; preds = %758, %744, %727, %702, %698
  %767 = phi i32 [ -88, %698 ], [ %708, %702 ], [ -11, %727 ], [ 0, %744 ], [ 0, %758 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %10) #21
  br label %2462

768:                                              ; preds = %31
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %9) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(256) %9, i8 0, i32 256, i1 false) #21, !annotation !9
  %769 = icmp sgt i32 %1, -1
  %770 = load ptr, ptr %0, align 8
  %771 = tail call ptr @sock_from_file(ptr noundef %770) #21
  %772 = icmp eq ptr %771, null
  br i1 %772, label %895, label %773, !prof !11

773:                                              ; preds = %768
  %774 = load i32, ptr %18, align 4
  %775 = and i32 %774, 2097152
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %780, label %777

777:                                              ; preds = %773
  %778 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %779 = load ptr, ptr %778, align 8
  br label %785

780:                                              ; preds = %773
  %781 = call fastcc i32 @io_recvmsg_copy_hdr(ptr noundef %0, ptr noundef nonnull %9) #21
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %783, label %895

783:                                              ; preds = %780
  %784 = load i32, ptr %18, align 4
  br label %785

785:                                              ; preds = %783, %777
  %786 = phi i32 [ %774, %777 ], [ %784, %783 ]
  %787 = phi ptr [ %779, %777 ], [ %9, %783 ]
  %788 = and i32 %786, 32
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %807, label %790

790:                                              ; preds = %785
  %791 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 4
  %792 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 3
  %793 = load i32, ptr %792, align 4
  %794 = call fastcc ptr @io_buffer_select(ptr noundef %0, ptr noundef %791, i32 noundef %793, i32 noundef %1) #21
  %795 = icmp ugt ptr %794, inttoptr (i32 -4096 to ptr)
  br i1 %795, label %796, label %798

796:                                              ; preds = %790
  %797 = ptrtoint ptr %794 to i32
  br label %895

798:                                              ; preds = %790
  %799 = getelementptr inbounds %struct.io_buffer, ptr %794, i32 0, i32 1
  %800 = load i64, ptr %799, align 8
  %801 = trunc i64 %800 to i32
  %802 = inttoptr i32 %801 to ptr
  store ptr %802, ptr %787, align 8
  %803 = load i32, ptr %791, align 8
  %804 = getelementptr inbounds %struct.iovec, ptr %787, i32 0, i32 1
  store i32 %803, ptr %804, align 4
  %805 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 3, i32 2
  %806 = load i32, ptr %791, align 8
  call void @iov_iter_init(ptr noundef %805, i32 noundef 0, ptr noundef %787, i32 noundef 1, i32 noundef %806) #21
  br label %807

807:                                              ; preds = %798, %785
  %808 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %809 = load i32, ptr %808, align 8
  %810 = or i32 %809, 64
  %811 = select i1 %769, i32 %809, i32 %810
  %812 = and i32 %811, 256
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %817, label %814

814:                                              ; preds = %807
  %815 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 3, i32 2, i32 4
  %816 = load i32, ptr %815, align 8
  br label %817

817:                                              ; preds = %814, %807
  %818 = phi i32 [ %816, %814 ], [ 0, %807 ]
  %819 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 3
  %820 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %821 = load ptr, ptr %820, align 4
  %822 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 2
  %823 = load ptr, ptr %822, align 4
  %824 = call i32 @__sys_recvmsg_sock(ptr noundef nonnull %771, ptr noundef %819, ptr noundef %821, ptr noundef %823, i32 noundef %811) #21
  %825 = icmp slt i32 %824, %818
  br i1 %825, label %826, label %834

826:                                              ; preds = %817
  %827 = icmp ne i32 %824, -11
  %828 = or i1 %769, %827
  br i1 %828, label %831, label %829

829:                                              ; preds = %826
  %830 = call fastcc i32 @io_setup_async_msg(ptr noundef %0, ptr noundef %787) #21
  br label %895

831:                                              ; preds = %826
  %832 = icmp eq i32 %824, -512
  %833 = select i1 %832, i32 -4, i32 %824
  br label %840

834:                                              ; preds = %817
  br i1 %813, label %849, label %835

835:                                              ; preds = %834
  %836 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 3, i32 6
  %837 = load i32, ptr %836, align 4
  %838 = and i32 %837, 40
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %849, label %840

840:                                              ; preds = %835, %831
  %841 = phi i32 [ %833, %831 ], [ %824, %835 ]
  %842 = load i32, ptr %18, align 4
  %843 = or i32 %842, 256
  %844 = and i32 %842, 64
  %845 = icmp eq i32 %844, 0
  %846 = and i32 %843, -4194369
  %847 = or i32 %846, 4194304
  %848 = select i1 %845, i32 %843, i32 %847
  store i32 %848, ptr %18, align 4
  br label %849

849:                                              ; preds = %840, %835, %834
  %850 = phi i32 [ %824, %835 ], [ %824, %834 ], [ %841, %840 ]
  %851 = getelementptr inbounds %struct.io_async_msghdr, ptr %787, i32 0, i32 1
  %852 = load ptr, ptr %851, align 8
  %853 = icmp eq ptr %852, null
  br i1 %853, label %855, label %854

854:                                              ; preds = %849
  call void @kfree(ptr noundef nonnull %852) #21
  br label %855

855:                                              ; preds = %854, %849
  %856 = load i32, ptr %18, align 4
  %857 = and i32 %856, -8193
  store i32 %857, ptr %18, align 4
  %858 = and i32 %856, 32768
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %869, label %860, !prof !10

860:                                              ; preds = %855
  %861 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %862 = load ptr, ptr %861, align 8
  %863 = getelementptr inbounds %struct.io_buffer, ptr %862, i32 0, i32 3
  %864 = load i16, ptr %863, align 4
  %865 = zext i16 %864 to i32
  %866 = shl nuw i32 %865, 16
  %867 = or i32 %866, 1
  %868 = and i32 %856, -40961
  store i32 %868, ptr %18, align 4
  call void @kfree(ptr noundef %862) #21
  store ptr null, ptr %861, align 8
  br label %869

869:                                              ; preds = %860, %855
  %870 = phi i32 [ %867, %860 ], [ 0, %855 ]
  %871 = and i32 %1, 1
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %878, label %873

873:                                              ; preds = %869
  %874 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %850, ptr %874, align 8
  %875 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 %870, ptr %875, align 4
  %876 = load i32, ptr %18, align 4
  %877 = or i32 %876, 65536
  store i32 %877, ptr %18, align 4
  br label %895

878:                                              ; preds = %869
  %879 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %880 = load ptr, ptr %879, align 8
  %881 = getelementptr inbounds %struct.io_ring_ctx, ptr %880, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %881) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %850, i32 noundef %870) #21
  %882 = getelementptr inbounds %struct.anon.178, ptr %880, i32 0, i32 3
  %883 = load i8, ptr %882, align 16
  %884 = and i8 %883, 48
  %885 = icmp eq i8 %884, 0
  br i1 %885, label %887, label %886, !prof !10

886:                                              ; preds = %878
  call fastcc void @__io_commit_cqring_flush(ptr noundef %880) #24
  br label %887

887:                                              ; preds = %886, %878
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %888 = getelementptr inbounds %struct.io_ring_ctx, ptr %880, i32 0, i32 10
  %889 = load i32, ptr %888, align 64
  %890 = getelementptr inbounds %struct.anon.178, ptr %880, i32 0, i32 1
  %891 = load ptr, ptr %890, align 8
  %892 = getelementptr inbounds %struct.io_rings, ptr %891, i32 0, i32 1, i32 2
  store volatile i32 %889, ptr %892, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %893 = load i16, ptr %881, align 4
  %894 = add i16 %893, 1
  store i16 %894, ptr %881, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %880) #21
  br label %895

895:                                              ; preds = %887, %873, %829, %796, %780, %768
  %896 = phi i32 [ %797, %796 ], [ %830, %829 ], [ -88, %768 ], [ %781, %780 ], [ 0, %873 ], [ 0, %887 ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %9) #21
  br label %2462

897:                                              ; preds = %31
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %7) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(56) %7, i8 0, i32 56, i1 false) #21, !annotation !9
  %898 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %899 = load ptr, ptr %898, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  store i64 0, ptr %8, align 8, !annotation !9
  %900 = icmp sgt i32 %1, -1
  %901 = load ptr, ptr %0, align 8
  %902 = tail call ptr @sock_from_file(ptr noundef %901) #21
  %903 = icmp eq ptr %902, null
  br i1 %903, label %1008, label %904, !prof !11

904:                                              ; preds = %897
  %905 = load i32, ptr %18, align 4
  %906 = and i32 %905, 32
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %921, label %908

908:                                              ; preds = %904
  %909 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 4
  %910 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 3
  %911 = load i32, ptr %910, align 4
  %912 = tail call fastcc ptr @io_buffer_select(ptr noundef %0, ptr noundef %909, i32 noundef %911, i32 noundef %1) #21
  %913 = icmp ugt ptr %912, inttoptr (i32 -4096 to ptr)
  br i1 %913, label %914, label %916

914:                                              ; preds = %908
  %915 = ptrtoint ptr %912 to i32
  br label %1008

916:                                              ; preds = %908
  %917 = getelementptr inbounds %struct.io_buffer, ptr %912, i32 0, i32 1
  %918 = load i64, ptr %917, align 8
  %919 = trunc i64 %918 to i32
  %920 = inttoptr i32 %919 to ptr
  br label %921

921:                                              ; preds = %916, %904
  %922 = phi ptr [ %920, %916 ], [ %899, %904 ]
  %923 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 4
  %924 = load i32, ptr %923, align 4
  %925 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 2
  %926 = call i32 @import_single_range(i32 noundef 0, ptr noundef %922, i32 noundef %924, ptr noundef nonnull %8, ptr noundef %925) #21
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %928, label %959, !prof !10

928:                                              ; preds = %921
  store ptr null, ptr %7, align 8
  %929 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 3
  store ptr null, ptr %929, align 8
  %930 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 5
  store i32 0, ptr %930, align 8
  %931 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 1
  store i32 0, ptr %931, align 4
  %932 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 7
  store ptr null, ptr %932, align 8
  %933 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 6
  store i32 0, ptr %933, align 4
  %934 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %935 = load i32, ptr %934, align 8
  %936 = or i32 %935, 64
  %937 = select i1 %900, i32 %935, i32 %936
  %938 = and i32 %937, 256
  %939 = icmp eq i32 %938, 0
  br i1 %939, label %940, label %943

940:                                              ; preds = %928
  %941 = call i32 @sock_recvmsg(ptr noundef nonnull %902, ptr noundef nonnull %7, i32 noundef %937) #21
  %942 = icmp slt i32 %941, 0
  br i1 %942, label %948, label %968

943:                                              ; preds = %928
  %944 = getelementptr inbounds %struct.msghdr, ptr %7, i32 0, i32 2, i32 4
  %945 = load i32, ptr %944, align 8
  %946 = call i32 @sock_recvmsg(ptr noundef nonnull %902, ptr noundef nonnull %7, i32 noundef %937) #21
  %947 = icmp slt i32 %946, %945
  br i1 %947, label %948, label %955

948:                                              ; preds = %943, %940
  %949 = phi i32 [ %946, %943 ], [ %941, %940 ]
  %950 = icmp ne i32 %949, -11
  %951 = or i1 %900, %950
  br i1 %951, label %952, label %1008

952:                                              ; preds = %948
  %953 = icmp eq i32 %949, -512
  %954 = select i1 %953, i32 -4, i32 %949
  br label %959

955:                                              ; preds = %943
  %956 = load i32, ptr %933, align 4
  %957 = and i32 %956, 40
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %968, label %959

959:                                              ; preds = %955, %952, %921
  %960 = phi i32 [ %954, %952 ], [ %926, %921 ], [ %946, %955 ]
  %961 = load i32, ptr %18, align 4
  %962 = or i32 %961, 256
  %963 = and i32 %961, 64
  %964 = icmp eq i32 %963, 0
  %965 = and i32 %962, -4194369
  %966 = or i32 %965, 4194304
  %967 = select i1 %964, i32 %962, i32 %966
  store i32 %967, ptr %18, align 4
  br label %968

968:                                              ; preds = %959, %955, %940
  %969 = phi i32 [ %946, %955 ], [ %941, %940 ], [ %960, %959 ]
  %970 = load i32, ptr %18, align 4
  %971 = and i32 %970, 32768
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %982, label %973, !prof !10

973:                                              ; preds = %968
  %974 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %975 = load ptr, ptr %974, align 8
  %976 = getelementptr inbounds %struct.io_buffer, ptr %975, i32 0, i32 3
  %977 = load i16, ptr %976, align 4
  %978 = zext i16 %977 to i32
  %979 = shl nuw i32 %978, 16
  %980 = or i32 %979, 1
  %981 = and i32 %970, -32769
  store i32 %981, ptr %18, align 4
  call void @kfree(ptr noundef %975) #21
  store ptr null, ptr %974, align 8
  br label %982

982:                                              ; preds = %973, %968
  %983 = phi i32 [ %980, %973 ], [ 0, %968 ]
  %984 = and i32 %1, 1
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %991, label %986

986:                                              ; preds = %982
  %987 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %969, ptr %987, align 8
  %988 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 %983, ptr %988, align 4
  %989 = load i32, ptr %18, align 4
  %990 = or i32 %989, 65536
  store i32 %990, ptr %18, align 4
  br label %1008

991:                                              ; preds = %982
  %992 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %993 = load ptr, ptr %992, align 8
  %994 = getelementptr inbounds %struct.io_ring_ctx, ptr %993, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %994) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %969, i32 noundef %983) #21
  %995 = getelementptr inbounds %struct.anon.178, ptr %993, i32 0, i32 3
  %996 = load i8, ptr %995, align 16
  %997 = and i8 %996, 48
  %998 = icmp eq i8 %997, 0
  br i1 %998, label %1000, label %999, !prof !10

999:                                              ; preds = %991
  call fastcc void @__io_commit_cqring_flush(ptr noundef %993) #24
  br label %1000

1000:                                             ; preds = %999, %991
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1001 = getelementptr inbounds %struct.io_ring_ctx, ptr %993, i32 0, i32 10
  %1002 = load i32, ptr %1001, align 64
  %1003 = getelementptr inbounds %struct.anon.178, ptr %993, i32 0, i32 1
  %1004 = load ptr, ptr %1003, align 8
  %1005 = getelementptr inbounds %struct.io_rings, ptr %1004, i32 0, i32 1, i32 2
  store volatile i32 %1002, ptr %1005, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1006 = load i16, ptr %994, align 4
  %1007 = add i16 %1006, 1
  store i16 %1007, ptr %994, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %993) #21
  br label %1008

1008:                                             ; preds = %1000, %986, %948, %914, %897
  %1009 = phi i32 [ %915, %914 ], [ -88, %897 ], [ -11, %948 ], [ 0, %986 ], [ 0, %1000 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %7) #21
  br label %2462

1010:                                             ; preds = %31
  %1011 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1012 = load ptr, ptr %1011, align 8
  %1013 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %1014 = load ptr, ptr %1013, align 8
  %1015 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 1
  %1016 = load i32, ptr %1015, align 4
  %1017 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %1017) #21
  %1018 = load i32, ptr %1015, align 4
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %1020, label %1023

1020:                                             ; preds = %1010
  %1021 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 1, i32 13, i32 1
  %1022 = load ptr, ptr %1021, align 4
  br label %1050

1023:                                             ; preds = %1010
  %1024 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 10
  %1025 = load i32, ptr %1024, align 64
  %1026 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 10, i32 5
  %1027 = load volatile i32, ptr %1026, align 4
  %1028 = sub i32 %1025, %1027
  %1029 = add i32 %1028, %1016
  %1030 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 2
  store i32 %1029, ptr %1030, align 8
  %1031 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 10, i32 6
  store i32 %1028, ptr %1031, align 32
  %1032 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 1, i32 13
  %1033 = getelementptr inbounds %struct.io_ring_ctx, ptr %1012, i32 0, i32 1, i32 13, i32 1
  %1034 = load ptr, ptr %1033, align 4
  %1035 = icmp eq ptr %1034, %1032
  br i1 %1035, label %1050, label %1036

1036:                                             ; preds = %1046, %1023
  %1037 = phi ptr [ %1048, %1046 ], [ %1034, %1023 ]
  %1038 = getelementptr i8, ptr %1037, i32 -8
  %1039 = load i32, ptr %1038, align 4
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1046, label %1041

1041:                                             ; preds = %1036
  %1042 = getelementptr i8, ptr %1037, i32 -4
  %1043 = load i32, ptr %1042, align 8
  %1044 = sub i32 %1043, %1028
  %1045 = icmp ult i32 %1016, %1044
  br i1 %1045, label %1046, label %1050

1046:                                             ; preds = %1041, %1036
  %1047 = getelementptr inbounds %struct.list_head, ptr %1037, i32 0, i32 1
  %1048 = load ptr, ptr %1047, align 4
  %1049 = icmp eq ptr %1048, %1032
  br i1 %1049, label %1050, label %1036

1050:                                             ; preds = %1046, %1041, %1023, %1020
  %1051 = phi ptr [ %1022, %1020 ], [ %1032, %1023 ], [ %1037, %1041 ], [ %1032, %1046 ]
  %1052 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3
  %1053 = load ptr, ptr %1051, align 4
  %1054 = getelementptr inbounds %struct.list_head, ptr %1053, i32 0, i32 1
  store ptr %1052, ptr %1054, align 4
  store ptr %1053, ptr %1052, align 4
  %1055 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3, i32 1
  store ptr %1051, ptr %1055, align 4
  store volatile ptr %1052, ptr %1051, align 4
  %1056 = getelementptr inbounds %struct.io_timeout_data, ptr %1014, i32 0, i32 1, i32 2
  store ptr @io_timeout_fn, ptr %1056, align 8
  %1057 = getelementptr inbounds %struct.io_timeout_data, ptr %1014, i32 0, i32 2
  %1058 = load i64, ptr %1057, align 8
  %1059 = icmp sgt i64 %1058, 9223372035
  br i1 %1059, label %1066, label %1060, !prof !11

1060:                                             ; preds = %1050
  %1061 = getelementptr inbounds %struct.io_timeout_data, ptr %1014, i32 0, i32 2, i32 1
  %1062 = load i64, ptr %1061, align 8
  %1063 = mul i64 %1058, 1000000000
  %1064 = and i64 %1062, 4294967295
  %1065 = add i64 %1064, %1063
  br label %1066

1066:                                             ; preds = %1060, %1050
  %1067 = phi i64 [ %1065, %1060 ], [ 9223372036854775807, %1050 ]
  %1068 = getelementptr inbounds %struct.io_timeout_data, ptr %1014, i32 0, i32 1
  %1069 = getelementptr inbounds %struct.io_timeout_data, ptr %1014, i32 0, i32 3
  %1070 = load i32, ptr %1069, align 8
  tail call void @hrtimer_start_range_ns(ptr noundef %1068, i64 noundef %1067, i64 noundef 0, i32 noundef %1070) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1071 = load i16, ptr %1017, align 4
  %1072 = add i16 %1071, 1
  store i16 %1072, ptr %1017, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %2462

1073:                                             ; preds = %31
  %1074 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1075 = load ptr, ptr %1074, align 8
  %1076 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 3
  %1077 = load i32, ptr %1076, align 8
  %1078 = and i32 %1077, 2
  %1079 = icmp eq i32 %1078, 0
  br i1 %1079, label %1080, label %1090

1080:                                             ; preds = %1073
  %1081 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1081) #21
  %1082 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %1082) #21
  %1083 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 1
  %1084 = load i64, ptr %1083, align 8
  %1085 = tail call fastcc i32 @io_timeout_cancel(ptr noundef %1075, i64 noundef %1084) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1086 = load i16, ptr %1082, align 4
  %1087 = add i16 %1086, 1
  store i16 %1087, ptr %1082, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1088 = load i16, ptr %1081, align 4
  %1089 = add i16 %1088, 1
  store i16 %1089, ptr %1081, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %1195

1090:                                             ; preds = %1073
  %1091 = and i32 %1077, 1
  %1092 = xor i32 %1091, 1
  %1093 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %1093) #21
  %1094 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 4
  %1095 = load i8, ptr %1094, align 4, !range !45
  %1096 = icmp eq i8 %1095, 0
  %1097 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 1
  %1098 = load i64, ptr %1097, align 8
  %1099 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 2
  br i1 %1096, label %1138, label %1100

1100:                                             ; preds = %1090
  %1101 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 1, i32 14
  br label %1102

1102:                                             ; preds = %1106, %1100
  %1103 = phi ptr [ %1101, %1100 ], [ %1104, %1106 ]
  %1104 = load ptr, ptr %1103, align 4
  %1105 = icmp eq ptr %1104, %1101
  br i1 %1105, label %1191, label %1106

1106:                                             ; preds = %1102
  %1107 = getelementptr i8, ptr %1104, i32 52
  %1108 = load i64, ptr %1107, align 8
  %1109 = icmp eq i64 %1108, %1098
  br i1 %1109, label %1110, label %1102

1110:                                             ; preds = %1106
  %1111 = getelementptr i8, ptr %1104, i32 116
  %1112 = load ptr, ptr %1111, align 8
  %1113 = getelementptr inbounds %struct.io_timeout_data, ptr %1112, i32 0, i32 1
  %1114 = tail call i32 @hrtimer_try_to_cancel(ptr noundef %1113) #21
  %1115 = icmp eq i32 %1114, -1
  br i1 %1115, label %1191, label %1116

1116:                                             ; preds = %1110
  %1117 = getelementptr inbounds %struct.io_timeout_data, ptr %1112, i32 0, i32 4
  %1118 = load i32, ptr %1117, align 4
  %1119 = and i32 %1118, 12
  switch i32 %1119, label %1121 [
    i32 4, label %1125
    i32 8, label %1120
    i32 0, label %1124
  ]

1120:                                             ; preds = %1116
  br label %1125

1121:                                             ; preds = %1116
  %1122 = load i1, ptr @io_timeout_get_clock.__already_done, align 1
  br i1 %1122, label %1124, label %1123, !prof !10

1123:                                             ; preds = %1121
  store i1 true, ptr @io_timeout_get_clock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6111, i32 noundef 9, ptr noundef null) #21
  br label %1124

1124:                                             ; preds = %1123, %1121, %1116
  br label %1125

1125:                                             ; preds = %1124, %1120, %1116
  %1126 = phi i32 [ 1, %1124 ], [ 0, %1120 ], [ 7, %1116 ]
  tail call void @hrtimer_init(ptr noundef %1113, i32 noundef %1126, i32 noundef %1092) #21
  %1127 = getelementptr inbounds %struct.io_timeout_data, ptr %1112, i32 0, i32 1, i32 2
  store ptr @io_link_timeout_fn, ptr %1127, align 8
  %1128 = load i64, ptr %1099, align 8
  %1129 = icmp sgt i64 %1128, 9223372035
  br i1 %1129, label %1136, label %1130, !prof !11

1130:                                             ; preds = %1125
  %1131 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 2, i32 1
  %1132 = load i64, ptr %1131, align 8
  %1133 = mul i64 %1128, 1000000000
  %1134 = and i64 %1132, 4294967295
  %1135 = add i64 %1134, %1133
  br label %1136

1136:                                             ; preds = %1130, %1125
  %1137 = phi i64 [ %1135, %1130 ], [ 9223372036854775807, %1125 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %1113, i64 noundef %1137, i64 noundef 0, i32 noundef %1092) #21
  br label %1191

1138:                                             ; preds = %1090
  %1139 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 1, i32 13
  br label %1140

1140:                                             ; preds = %1144, %1138
  %1141 = phi ptr [ %1139, %1138 ], [ %1142, %1144 ]
  %1142 = load ptr, ptr %1141, align 4
  %1143 = icmp eq ptr %1142, %1139
  br i1 %1143, label %1161, label %1144

1144:                                             ; preds = %1140
  %1145 = getelementptr i8, ptr %1142, i32 52
  %1146 = load i64, ptr %1145, align 8
  %1147 = icmp eq i64 %1146, %1098
  br i1 %1147, label %1148, label %1140

1148:                                             ; preds = %1144
  %1149 = getelementptr i8, ptr %1142, i32 116
  %1150 = load ptr, ptr %1149, align 8
  %1151 = getelementptr inbounds %struct.io_timeout_data, ptr %1150, i32 0, i32 1
  %1152 = tail call i32 @hrtimer_try_to_cancel(ptr noundef %1151) #21
  %1153 = icmp eq i32 %1152, -1
  br i1 %1153, label %1161, label %1154

1154:                                             ; preds = %1148
  %1155 = getelementptr i8, ptr %1142, i32 -12
  %1156 = getelementptr inbounds %struct.list_head, ptr %1142, i32 0, i32 1
  %1157 = load ptr, ptr %1156, align 4
  %1158 = load ptr, ptr %1142, align 4
  %1159 = getelementptr inbounds %struct.list_head, ptr %1158, i32 0, i32 1
  store ptr %1157, ptr %1159, align 4
  store volatile ptr %1158, ptr %1157, align 4
  store volatile ptr %1142, ptr %1142, align 4
  store ptr %1142, ptr %1156, align 4
  %1160 = icmp ugt ptr %1155, inttoptr (i32 -4096 to ptr)
  br i1 %1160, label %1161, label %1164

1161:                                             ; preds = %1154, %1148, %1140
  %1162 = phi ptr [ %1155, %1154 ], [ inttoptr (i32 -114 to ptr), %1148 ], [ inttoptr (i32 -2 to ptr), %1140 ]
  %1163 = ptrtoint ptr %1162 to i32
  br label %1191

1164:                                             ; preds = %1154
  %1165 = getelementptr i8, ptr %1142, i32 -8
  store i32 0, ptr %1165, align 4
  %1166 = load ptr, ptr %1149, align 8
  %1167 = getelementptr inbounds %struct.io_ring_ctx, ptr %1075, i32 0, i32 1, i32 13, i32 1
  %1168 = load ptr, ptr %1167, align 4
  store ptr %1142, ptr %1167, align 4
  store ptr %1139, ptr %1142, align 4
  store ptr %1168, ptr %1156, align 4
  store volatile ptr %1142, ptr %1168, align 4
  %1169 = getelementptr inbounds %struct.io_timeout_data, ptr %1166, i32 0, i32 1
  %1170 = getelementptr inbounds %struct.io_timeout_data, ptr %1166, i32 0, i32 4
  %1171 = load i32, ptr %1170, align 4
  %1172 = and i32 %1171, 12
  switch i32 %1172, label %1174 [
    i32 4, label %1178
    i32 8, label %1173
    i32 0, label %1177
  ]

1173:                                             ; preds = %1164
  br label %1178

1174:                                             ; preds = %1164
  %1175 = load i1, ptr @io_timeout_get_clock.__already_done, align 1
  br i1 %1175, label %1177, label %1176, !prof !10

1176:                                             ; preds = %1174
  store i1 true, ptr @io_timeout_get_clock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6111, i32 noundef 9, ptr noundef null) #21
  br label %1177

1177:                                             ; preds = %1176, %1174, %1164
  br label %1178

1178:                                             ; preds = %1177, %1173, %1164
  %1179 = phi i32 [ 1, %1177 ], [ 0, %1173 ], [ 7, %1164 ]
  tail call void @hrtimer_init(ptr noundef %1169, i32 noundef %1179, i32 noundef %1092) #21
  %1180 = getelementptr inbounds %struct.io_timeout_data, ptr %1166, i32 0, i32 1, i32 2
  store ptr @io_timeout_fn, ptr %1180, align 8
  %1181 = load i64, ptr %1099, align 8
  %1182 = icmp sgt i64 %1181, 9223372035
  br i1 %1182, label %1189, label %1183, !prof !11

1183:                                             ; preds = %1178
  %1184 = getelementptr inbounds %struct.io_timeout_rem, ptr %0, i32 0, i32 2, i32 1
  %1185 = load i64, ptr %1184, align 8
  %1186 = mul i64 %1181, 1000000000
  %1187 = and i64 %1185, 4294967295
  %1188 = add i64 %1187, %1186
  br label %1189

1189:                                             ; preds = %1183, %1178
  %1190 = phi i64 [ %1188, %1183 ], [ 9223372036854775807, %1178 ]
  tail call void @hrtimer_start_range_ns(ptr noundef %1169, i64 noundef %1190, i64 noundef 0, i32 noundef %1092) #21
  br label %1191

1191:                                             ; preds = %1189, %1161, %1136, %1110, %1102
  %1192 = phi i32 [ 0, %1136 ], [ -114, %1110 ], [ %1163, %1161 ], [ 0, %1189 ], [ -2, %1102 ]
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1193 = load i16, ptr %1093, align 4
  %1194 = add i16 %1193, 1
  store i16 %1194, ptr %1093, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %1195

1195:                                             ; preds = %1191, %1080
  %1196 = phi i32 [ %1192, %1191 ], [ %1085, %1080 ]
  %1197 = icmp slt i32 %1196, 0
  br i1 %1197, label %1198, label %1206

1198:                                             ; preds = %1195
  %1199 = load i32, ptr %18, align 4
  %1200 = or i32 %1199, 256
  %1201 = and i32 %1199, 64
  %1202 = icmp eq i32 %1201, 0
  %1203 = and i32 %1200, -4194369
  %1204 = or i32 %1203, 4194304
  %1205 = select i1 %1202, i32 %1200, i32 %1204
  store i32 %1205, ptr %18, align 4
  br label %1206

1206:                                             ; preds = %1198, %1195
  %1207 = load ptr, ptr %1074, align 8
  %1208 = getelementptr inbounds %struct.io_ring_ctx, ptr %1207, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1208) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1196, i32 noundef 0) #21
  %1209 = getelementptr inbounds %struct.anon.178, ptr %1207, i32 0, i32 3
  %1210 = load i8, ptr %1209, align 16
  %1211 = and i8 %1210, 48
  %1212 = icmp eq i8 %1211, 0
  br i1 %1212, label %1214, label %1213, !prof !10

1213:                                             ; preds = %1206
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1207) #24
  br label %1214

1214:                                             ; preds = %1213, %1206
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1215 = getelementptr inbounds %struct.io_ring_ctx, ptr %1207, i32 0, i32 10
  %1216 = load i32, ptr %1215, align 64
  %1217 = getelementptr inbounds %struct.anon.178, ptr %1207, i32 0, i32 1
  %1218 = load ptr, ptr %1217, align 8
  %1219 = getelementptr inbounds %struct.io_rings, ptr %1218, i32 0, i32 1, i32 2
  store volatile i32 %1216, ptr %1219, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1220 = load i16, ptr %1208, align 4
  %1221 = add i16 %1220, 1
  store i16 %1221, ptr %1208, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1207) #21
  br label %2462

1222:                                             ; preds = %31
  %1223 = icmp sgt i32 %1, -1
  %1224 = lshr i32 %1, 20
  %1225 = and i32 %1224, 2048
  %1226 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 4
  %1227 = load i32, ptr %1226, align 4
  %1228 = icmp eq i32 %1227, 0
  %1229 = load ptr, ptr %0, align 8
  %1230 = getelementptr inbounds %struct.file, ptr %1229, i32 0, i32 7
  %1231 = load i32, ptr %1230, align 4
  %1232 = and i32 %1231, 2048
  %1233 = icmp eq i32 %1232, 0
  br i1 %1233, label %1237, label %1234

1234:                                             ; preds = %1222
  %1235 = load i32, ptr %18, align 4
  %1236 = or i32 %1235, 2048
  store i32 %1236, ptr %18, align 4
  br label %1237

1237:                                             ; preds = %1234, %1222
  br i1 %1228, label %1238, label %1247

1238:                                             ; preds = %1237
  %1239 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 3
  %1240 = load i32, ptr %1239, align 4
  %1241 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 5
  %1242 = load i32, ptr %1241, align 4
  %1243 = tail call i32 @__get_unused_fd_flags(i32 noundef %1240, i32 noundef %1242) #21
  %1244 = icmp slt i32 %1243, 0
  br i1 %1244, label %2462, label %1245, !prof !11

1245:                                             ; preds = %1238
  %1246 = load ptr, ptr %0, align 8
  br label %1247

1247:                                             ; preds = %1245, %1237
  %1248 = phi ptr [ %1229, %1237 ], [ %1246, %1245 ]
  %1249 = phi i32 [ 0, %1237 ], [ %1243, %1245 ]
  %1250 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 1
  %1251 = load ptr, ptr %1250, align 4
  %1252 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 2
  %1253 = load ptr, ptr %1252, align 4
  %1254 = getelementptr inbounds %struct.io_accept, ptr %0, i32 0, i32 3
  %1255 = load i32, ptr %1254, align 4
  %1256 = tail call ptr @do_accept(ptr noundef %1248, i32 noundef %1225, ptr noundef %1251, ptr noundef %1253, i32 noundef %1255) #21
  %1257 = icmp ugt ptr %1256, inttoptr (i32 -4096 to ptr)
  br i1 %1257, label %1258, label %1274

1258:                                             ; preds = %1247
  br i1 %1228, label %1259, label %1260

1259:                                             ; preds = %1258
  tail call void @put_unused_fd(i32 noundef %1249) #21
  br label %1260

1260:                                             ; preds = %1259, %1258
  %1261 = icmp ne ptr %1256, inttoptr (i32 -11 to ptr)
  %1262 = or i1 %1223, %1261
  br i1 %1262, label %1263, label %2462

1263:                                             ; preds = %1260
  %1264 = ptrtoint ptr %1256 to i32
  %1265 = icmp eq ptr %1256, inttoptr (i32 -512 to ptr)
  %1266 = select i1 %1265, i32 -4, i32 %1264
  %1267 = load i32, ptr %18, align 4
  %1268 = or i32 %1267, 256
  %1269 = and i32 %1267, 64
  %1270 = icmp eq i32 %1269, 0
  %1271 = and i32 %1268, -4194369
  %1272 = or i32 %1271, 4194304
  %1273 = select i1 %1270, i32 %1268, i32 %1272
  store i32 %1273, ptr %18, align 4
  br label %1280

1274:                                             ; preds = %1247
  br i1 %1228, label %1275, label %1276

1275:                                             ; preds = %1274
  tail call void @fd_install(i32 noundef %1249, ptr noundef %1256) #21
  br label %1280

1276:                                             ; preds = %1274
  %1277 = load i32, ptr %1226, align 4
  %1278 = add i32 %1277, -1
  %1279 = tail call fastcc i32 @io_install_fixed_file(ptr noundef %0, ptr noundef %1256, i32 noundef %1, i32 noundef %1278) #21
  br label %1280

1280:                                             ; preds = %1276, %1275, %1263
  %1281 = phi i32 [ %1266, %1263 ], [ %1279, %1276 ], [ %1249, %1275 ]
  %1282 = and i32 %1, 1
  %1283 = icmp eq i32 %1282, 0
  br i1 %1283, label %1289, label %1284

1284:                                             ; preds = %1280
  %1285 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1281, ptr %1285, align 8
  %1286 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1286, align 4
  %1287 = load i32, ptr %18, align 4
  %1288 = or i32 %1287, 65536
  store i32 %1288, ptr %18, align 4
  br label %2462

1289:                                             ; preds = %1280
  %1290 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1291 = load ptr, ptr %1290, align 8
  %1292 = getelementptr inbounds %struct.io_ring_ctx, ptr %1291, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1292) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1281, i32 noundef 0) #21
  %1293 = getelementptr inbounds %struct.anon.178, ptr %1291, i32 0, i32 3
  %1294 = load i8, ptr %1293, align 16
  %1295 = and i8 %1294, 48
  %1296 = icmp eq i8 %1295, 0
  br i1 %1296, label %1298, label %1297, !prof !10

1297:                                             ; preds = %1289
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1291) #24
  br label %1298

1298:                                             ; preds = %1297, %1289
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1299 = getelementptr inbounds %struct.io_ring_ctx, ptr %1291, i32 0, i32 10
  %1300 = load i32, ptr %1299, align 64
  %1301 = getelementptr inbounds %struct.anon.178, ptr %1291, i32 0, i32 1
  %1302 = load ptr, ptr %1301, align 8
  %1303 = getelementptr inbounds %struct.io_rings, ptr %1302, i32 0, i32 1, i32 2
  store volatile i32 %1300, ptr %1303, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1304 = load i16, ptr %1292, align 4
  %1305 = add i16 %1304, 1
  store i16 %1305, ptr %1292, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1291) #21
  br label %2462

1306:                                             ; preds = %31
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %6) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(128) %6, i8 0, i32 128, i1 false) #21, !annotation !9
  %1307 = icmp sgt i32 %1, -1
  %1308 = load i32, ptr %18, align 4
  %1309 = and i32 %1308, 2097152
  %1310 = icmp eq i32 %1309, 0
  br i1 %1310, label %1314, label %1311

1311:                                             ; preds = %1306
  %1312 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %1313 = load ptr, ptr %1312, align 8
  br label %1321

1314:                                             ; preds = %1306
  %1315 = getelementptr inbounds %struct.io_connect, ptr %0, i32 0, i32 1
  %1316 = load ptr, ptr %1315, align 4
  %1317 = getelementptr inbounds %struct.io_connect, ptr %0, i32 0, i32 2
  %1318 = load i32, ptr %1317, align 8
  %1319 = call i32 @move_addr_to_kernel(ptr noundef %1316, i32 noundef %1318, ptr noundef nonnull %6) #21
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1321, label %1357

1321:                                             ; preds = %1314, %1311
  %1322 = phi ptr [ %1313, %1311 ], [ %6, %1314 ]
  %1323 = lshr i32 %1, 20
  %1324 = and i32 %1323, 2048
  %1325 = load ptr, ptr %0, align 8
  %1326 = getelementptr inbounds %struct.io_connect, ptr %0, i32 0, i32 2
  %1327 = load i32, ptr %1326, align 8
  %1328 = call i32 @__sys_connect_file(ptr noundef %1325, ptr noundef %1322, i32 noundef %1327, i32 noundef %1324) #21
  switch i32 %1328, label %1357 [
    i32 -11, label %1329
    i32 -115, label %1329
    i32 -512, label %1360
  ]

1329:                                             ; preds = %1321, %1321
  br i1 %1307, label %1360, label %1330

1330:                                             ; preds = %1329
  %1331 = load i32, ptr %18, align 4
  %1332 = and i32 %1331, 2097152
  %1333 = icmp eq i32 %1332, 0
  br i1 %1333, label %1334, label %1395

1334:                                             ; preds = %1330
  %1335 = load i8, ptr %33, align 8
  %1336 = zext i8 %1335 to i32
  %1337 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %1336, i32 1
  %1338 = load i16, ptr %1337, align 2
  %1339 = icmp eq i16 %1338, 0
  %1340 = load i1, ptr @io_alloc_async_data.__already_done, align 1
  %1341 = xor i1 %1340, true
  %1342 = select i1 %1339, i1 %1341, i1 false
  br i1 %1342, label %1343, label %1348, !prof !11

1343:                                             ; preds = %1334
  store i1 true, ptr @io_alloc_async_data.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3482, i32 noundef 9, ptr noundef null) #21
  %1344 = load i8, ptr %33, align 8
  %1345 = zext i8 %1344 to i32
  %1346 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %1345, i32 1
  %1347 = load i16, ptr %1346, align 2
  br label %1348

1348:                                             ; preds = %1343, %1334
  %1349 = phi i16 [ %1347, %1343 ], [ %1338, %1334 ]
  %1350 = zext i16 %1349 to i32
  %1351 = call noalias align 64 ptr @__kmalloc(i32 noundef %1350, i32 noundef 3264) #26
  %1352 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  store ptr %1351, ptr %1352, align 8
  %1353 = icmp eq ptr %1351, null
  br i1 %1353, label %1360, label %1354

1354:                                             ; preds = %1348
  %1355 = load i32, ptr %18, align 4
  %1356 = or i32 %1355, 2097152
  store i32 %1356, ptr %18, align 4
  call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 64 dereferenceable(128) %1351, ptr noundef nonnull align 4 dereferenceable(128) %6, i32 128, i1 false) #21
  br label %1395

1357:                                             ; preds = %1321, %1314
  %1358 = phi i32 [ %1319, %1314 ], [ %1328, %1321 ]
  %1359 = icmp slt i32 %1358, 0
  br i1 %1359, label %1360, label %1369

1360:                                             ; preds = %1357, %1348, %1329, %1321
  %1361 = phi i32 [ %1358, %1357 ], [ -12, %1348 ], [ %1328, %1329 ], [ -4, %1321 ]
  %1362 = load i32, ptr %18, align 4
  %1363 = or i32 %1362, 256
  %1364 = and i32 %1362, 64
  %1365 = icmp eq i32 %1364, 0
  %1366 = and i32 %1363, -4194369
  %1367 = or i32 %1366, 4194304
  %1368 = select i1 %1365, i32 %1363, i32 %1367
  store i32 %1368, ptr %18, align 4
  br label %1369

1369:                                             ; preds = %1360, %1357
  %1370 = phi i32 [ %1361, %1360 ], [ %1358, %1357 ]
  %1371 = and i32 %1, 1
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1378, label %1373

1373:                                             ; preds = %1369
  %1374 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1370, ptr %1374, align 8
  %1375 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1375, align 4
  %1376 = load i32, ptr %18, align 4
  %1377 = or i32 %1376, 65536
  store i32 %1377, ptr %18, align 4
  br label %1395

1378:                                             ; preds = %1369
  %1379 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1380 = load ptr, ptr %1379, align 8
  %1381 = getelementptr inbounds %struct.io_ring_ctx, ptr %1380, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %1381) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1370, i32 noundef 0) #21
  %1382 = getelementptr inbounds %struct.anon.178, ptr %1380, i32 0, i32 3
  %1383 = load i8, ptr %1382, align 16
  %1384 = and i8 %1383, 48
  %1385 = icmp eq i8 %1384, 0
  br i1 %1385, label %1387, label %1386, !prof !10

1386:                                             ; preds = %1378
  call fastcc void @__io_commit_cqring_flush(ptr noundef %1380) #24
  br label %1387

1387:                                             ; preds = %1386, %1378
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1388 = getelementptr inbounds %struct.io_ring_ctx, ptr %1380, i32 0, i32 10
  %1389 = load i32, ptr %1388, align 64
  %1390 = getelementptr inbounds %struct.anon.178, ptr %1380, i32 0, i32 1
  %1391 = load ptr, ptr %1390, align 8
  %1392 = getelementptr inbounds %struct.io_rings, ptr %1391, i32 0, i32 1, i32 2
  store volatile i32 %1389, ptr %1392, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1393 = load i16, ptr %1381, align 4
  %1394 = add i16 %1393, 1
  store i16 %1394, ptr %1381, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %1380) #21
  br label %1395

1395:                                             ; preds = %1387, %1373, %1354, %1330
  %1396 = phi i32 [ -11, %1354 ], [ -11, %1330 ], [ 0, %1373 ], [ 0, %1387 ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %6) #21
  br label %2462

1397:                                             ; preds = %31
  %1398 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1399 = load ptr, ptr %1398, align 8
  %1400 = getelementptr inbounds %struct.io_cancel, ptr %0, i32 0, i32 1
  %1401 = load i64, ptr %1400, align 8
  %1402 = and i32 %1, 2
  %1403 = icmp eq i32 %1402, 0
  %1404 = tail call fastcc i32 @io_try_cancel_userdata(ptr noundef %0, i64 noundef %1401) #21
  %1405 = icmp eq i32 %1404, -2
  br i1 %1405, label %1406, label %1440

1406:                                             ; preds = %1397
  br i1 %1403, label %1409, label %1407

1407:                                             ; preds = %1406
  %1408 = getelementptr inbounds %struct.io_ring_ctx, ptr %1399, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %1408) #21
  br label %1409

1409:                                             ; preds = %1407, %1406
  %1410 = getelementptr inbounds %struct.io_ring_ctx, ptr %1399, i32 0, i32 14, i32 7
  %1411 = load ptr, ptr %1410, align 4
  %1412 = icmp eq ptr %1411, %1410
  br i1 %1412, label %1436, label %1413

1413:                                             ; preds = %1409
  %1414 = getelementptr inbounds %struct.io_cancel_data, ptr %5, i32 0, i32 1
  br label %1415

1415:                                             ; preds = %1433, %1413
  %1416 = phi ptr [ %1411, %1413 ], [ %1434, %1433 ]
  %1417 = getelementptr inbounds %struct.io_tctx_node, ptr %1416, i32 0, i32 1
  %1418 = load ptr, ptr %1417, align 4
  %1419 = getelementptr inbounds %struct.task_struct, ptr %1418, i32 0, i32 91
  %1420 = load ptr, ptr %1419, align 8
  %1421 = load i64, ptr %1400, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %5) #21
  store i64 0, ptr %5, align 8, !annotation !9
  store ptr %1399, ptr %5, align 8
  store i64 %1421, ptr %1414, align 8
  %1422 = icmp eq ptr %1420, null
  br i1 %1422, label %1433, label %1423

1423:                                             ; preds = %1415
  %1424 = getelementptr inbounds %struct.io_uring_task, ptr %1420, i32 0, i32 4
  %1425 = load ptr, ptr %1424, align 8
  %1426 = icmp eq ptr %1425, null
  br i1 %1426, label %1433, label %1427

1427:                                             ; preds = %1423
  %1428 = call i32 @io_wq_cancel_cb(ptr noundef nonnull %1425, ptr noundef nonnull @io_cancel_cb, ptr noundef nonnull %5, i1 noundef zeroext false) #21
  %1429 = icmp eq i32 %1428, 2
  br i1 %1429, label %1433, label %1430

1430:                                             ; preds = %1427
  %1431 = icmp eq i32 %1428, 1
  %1432 = select i1 %1431, i32 -114, i32 0
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #21
  br label %1436

1433:                                             ; preds = %1427, %1423, %1415
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %5) #21
  %1434 = load ptr, ptr %1416, align 4
  %1435 = icmp eq ptr %1434, %1410
  br i1 %1435, label %1436, label %1415

1436:                                             ; preds = %1433, %1430, %1409
  %1437 = phi i32 [ %1432, %1430 ], [ -2, %1409 ], [ -2, %1433 ]
  br i1 %1403, label %1440, label %1438

1438:                                             ; preds = %1436
  %1439 = getelementptr inbounds %struct.io_ring_ctx, ptr %1399, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %1439) #21
  br label %1440

1440:                                             ; preds = %1438, %1436, %1397
  %1441 = phi i32 [ %1404, %1397 ], [ %1437, %1436 ], [ %1437, %1438 ]
  %1442 = icmp slt i32 %1441, 0
  br i1 %1442, label %1443, label %1451

1443:                                             ; preds = %1440
  %1444 = load i32, ptr %18, align 4
  %1445 = or i32 %1444, 256
  %1446 = and i32 %1444, 64
  %1447 = icmp eq i32 %1446, 0
  %1448 = and i32 %1445, -4194369
  %1449 = or i32 %1448, 4194304
  %1450 = select i1 %1447, i32 %1445, i32 %1449
  store i32 %1450, ptr %18, align 4
  br label %1451

1451:                                             ; preds = %1443, %1440
  %1452 = load ptr, ptr %1398, align 8
  %1453 = getelementptr inbounds %struct.io_ring_ctx, ptr %1452, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %1453) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1441, i32 noundef 0) #21
  %1454 = getelementptr inbounds %struct.anon.178, ptr %1452, i32 0, i32 3
  %1455 = load i8, ptr %1454, align 16
  %1456 = and i8 %1455, 48
  %1457 = icmp eq i8 %1456, 0
  br i1 %1457, label %1459, label %1458, !prof !10

1458:                                             ; preds = %1451
  call fastcc void @__io_commit_cqring_flush(ptr noundef %1452) #24
  br label %1459

1459:                                             ; preds = %1458, %1451
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1460 = getelementptr inbounds %struct.io_ring_ctx, ptr %1452, i32 0, i32 10
  %1461 = load i32, ptr %1460, align 64
  %1462 = getelementptr inbounds %struct.anon.178, ptr %1452, i32 0, i32 1
  %1463 = load ptr, ptr %1462, align 8
  %1464 = getelementptr inbounds %struct.io_rings, ptr %1463, i32 0, i32 1, i32 2
  store volatile i32 %1461, ptr %1464, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1465 = load i16, ptr %1453, align 4
  %1466 = add i16 %1465, 1
  store i16 %1466, ptr %1453, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %1452) #21
  br label %2462

1467:                                             ; preds = %31
  %1468 = icmp sgt i32 %1, -1
  br i1 %1468, label %1469, label %2462

1469:                                             ; preds = %1467
  %1470 = load ptr, ptr %0, align 8
  %1471 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 4
  %1472 = load i32, ptr %1471, align 4
  %1473 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 2
  %1474 = load i64, ptr %1473, align 8
  %1475 = getelementptr inbounds %struct.io_sync, ptr %0, i32 0, i32 1
  %1476 = load i64, ptr %1475, align 8
  %1477 = tail call i32 @vfs_fallocate(ptr noundef %1470, i32 noundef %1472, i64 noundef %1474, i64 noundef %1476) #21
  %1478 = icmp slt i32 %1477, 0
  br i1 %1478, label %1479, label %1487

1479:                                             ; preds = %1469
  %1480 = load i32, ptr %18, align 4
  %1481 = or i32 %1480, 256
  %1482 = and i32 %1480, 64
  %1483 = icmp eq i32 %1482, 0
  %1484 = and i32 %1481, -4194369
  %1485 = or i32 %1484, 4194304
  %1486 = select i1 %1483, i32 %1481, i32 %1485
  store i32 %1486, ptr %18, align 4
  br label %1487

1487:                                             ; preds = %1479, %1469
  %1488 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1489 = load ptr, ptr %1488, align 8
  %1490 = getelementptr inbounds %struct.io_ring_ctx, ptr %1489, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1490) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1477, i32 noundef 0) #21
  %1491 = getelementptr inbounds %struct.anon.178, ptr %1489, i32 0, i32 3
  %1492 = load i8, ptr %1491, align 16
  %1493 = and i8 %1492, 48
  %1494 = icmp eq i8 %1493, 0
  br i1 %1494, label %1496, label %1495, !prof !10

1495:                                             ; preds = %1487
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1489) #24
  br label %1496

1496:                                             ; preds = %1495, %1487
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1497 = getelementptr inbounds %struct.io_ring_ctx, ptr %1489, i32 0, i32 10
  %1498 = load i32, ptr %1497, align 64
  %1499 = getelementptr inbounds %struct.anon.178, ptr %1489, i32 0, i32 1
  %1500 = load ptr, ptr %1499, align 8
  %1501 = getelementptr inbounds %struct.io_rings, ptr %1500, i32 0, i32 1, i32 2
  store volatile i32 %1498, ptr %1501, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1502 = load i16, ptr %1490, align 4
  %1503 = add i16 %1502, 1
  store i16 %1503, ptr %1490, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1489) #21
  br label %2462

1504:                                             ; preds = %31
  %1505 = tail call fastcc i32 @io_openat2(ptr noundef %0, i32 noundef %1) #21
  br label %2462

1506:                                             ; preds = %31
  %1507 = tail call ptr @llvm.thread.pointer() #21
  %1508 = getelementptr inbounds %struct.task_struct, ptr %1507, i32 0, i32 90
  %1509 = load ptr, ptr %1508, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store ptr null, ptr %4, align 4
  %1510 = getelementptr inbounds %struct.io_close, ptr %0, i32 0, i32 2
  %1511 = load i32, ptr %1510, align 8
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1587, label %1513

1513:                                             ; preds = %1506
  %1514 = add i32 %1511, -1
  %1515 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1516 = load ptr, ptr %1515, align 8
  %1517 = and i32 %1, 2
  %1518 = icmp eq i32 %1517, 0
  br i1 %1518, label %1521, label %1519

1519:                                             ; preds = %1513
  %1520 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %1520) #21
  br label %1521

1521:                                             ; preds = %1519, %1513
  %1522 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 13, i32 2
  %1523 = load ptr, ptr %1522, align 8
  %1524 = icmp eq ptr %1523, null
  br i1 %1524, label %1583, label %1525, !prof !11

1525:                                             ; preds = %1521
  %1526 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 1, i32 9
  %1527 = load i32, ptr %1526, align 8
  %1528 = icmp ult i32 %1514, %1527
  br i1 %1528, label %1529, label %1583

1529:                                             ; preds = %1525
  %1530 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 13
  %1531 = load ptr, ptr %1530, align 16
  %1532 = icmp eq ptr %1531, null
  br i1 %1532, label %1533, label %1549

1533:                                             ; preds = %1529
  %1534 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %1535 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1534, i32 noundef 3520, i32 noundef 36) #25
  %1536 = icmp eq ptr %1535, null
  br i1 %1536, label %1541, label %1537

1537:                                             ; preds = %1533
  %1538 = tail call i32 @percpu_ref_init(ptr noundef nonnull %1535, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %1539 = icmp eq i32 %1538, 0
  br i1 %1539, label %1542, label %1540

1540:                                             ; preds = %1537
  tail call void @kfree(ptr noundef nonnull %1535) #21
  br label %1541

1541:                                             ; preds = %1540, %1533
  store ptr null, ptr %1530, align 16
  br label %1583

1542:                                             ; preds = %1537
  %1543 = getelementptr inbounds %struct.io_rsrc_node, ptr %1535, i32 0, i32 1
  store volatile ptr %1543, ptr %1543, align 8
  %1544 = getelementptr inbounds %struct.io_rsrc_node, ptr %1535, i32 0, i32 1, i32 1
  store ptr %1543, ptr %1544, align 4
  %1545 = getelementptr inbounds %struct.io_rsrc_node, ptr %1535, i32 0, i32 2
  store volatile ptr %1545, ptr %1545, align 8
  %1546 = getelementptr inbounds %struct.io_rsrc_node, ptr %1535, i32 0, i32 2, i32 1
  store ptr %1545, ptr %1546, align 4
  %1547 = getelementptr inbounds %struct.io_rsrc_node, ptr %1535, i32 0, i32 5
  store i8 0, ptr %1547, align 8
  store ptr %1535, ptr %1530, align 16
  %1548 = load i32, ptr %1526, align 8
  br label %1549

1549:                                             ; preds = %1542, %1529
  %1550 = phi i32 [ %1548, %1542 ], [ %1527, %1529 ]
  %1551 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %1514, i32 %1550) #21, !srcloc !40
  %1552 = and i32 %1551, %1514
  %1553 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 1, i32 8
  %1554 = load ptr, ptr %1553, align 4
  %1555 = getelementptr %struct.io_fixed_file, ptr %1554, i32 %1552
  %1556 = load i32, ptr %1555, align 4
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1583, label %1558

1558:                                             ; preds = %1549
  %1559 = load ptr, ptr %1522, align 8
  %1560 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 1, i32 6
  %1561 = load ptr, ptr %1560, align 4
  %1562 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %1563 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1562, i32 noundef 3520, i32 noundef 24) #25
  %1564 = icmp eq ptr %1563, null
  br i1 %1564, label %1583, label %1565

1565:                                             ; preds = %1558
  %1566 = and i32 %1556, -4
  %1567 = inttoptr i32 %1566 to ptr
  %1568 = and i32 %1514, 511
  %1569 = lshr i32 %1514, 9
  %1570 = getelementptr inbounds %struct.io_rsrc_data, ptr %1559, i32 0, i32 1
  %1571 = load ptr, ptr %1570, align 4
  %1572 = getelementptr ptr, ptr %1571, i32 %1569
  %1573 = load ptr, ptr %1572, align 4
  %1574 = getelementptr i64, ptr %1573, i32 %1568
  %1575 = load i64, ptr %1574, align 8
  %1576 = getelementptr inbounds %struct.io_rsrc_put, ptr %1563, i32 0, i32 1
  store i64 %1575, ptr %1576, align 8
  %1577 = getelementptr inbounds %struct.io_rsrc_put, ptr %1563, i32 0, i32 2
  store ptr %1567, ptr %1577, align 8
  %1578 = getelementptr inbounds %struct.io_rsrc_node, ptr %1561, i32 0, i32 2
  %1579 = load ptr, ptr %1578, align 4
  %1580 = getelementptr inbounds %struct.list_head, ptr %1579, i32 0, i32 1
  store ptr %1563, ptr %1580, align 4
  store ptr %1579, ptr %1563, align 8
  %1581 = getelementptr inbounds %struct.list_head, ptr %1563, i32 0, i32 1
  store ptr %1578, ptr %1581, align 4
  store volatile ptr %1563, ptr %1578, align 4
  store i32 0, ptr %1555, align 4
  %1582 = load ptr, ptr %1522, align 8
  tail call fastcc void @io_rsrc_node_switch(ptr noundef %1516, ptr noundef %1582) #21
  br label %1583

1583:                                             ; preds = %1565, %1558, %1549, %1541, %1525, %1521
  %1584 = phi i32 [ -6, %1521 ], [ -22, %1525 ], [ 0, %1565 ], [ -9, %1549 ], [ -12, %1558 ], [ -12, %1541 ]
  br i1 %1518, label %1632, label %1585

1585:                                             ; preds = %1583
  %1586 = getelementptr inbounds %struct.io_ring_ctx, ptr %1516, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %1586) #21
  br label %1632

1587:                                             ; preds = %1506
  %1588 = getelementptr inbounds %struct.files_struct, ptr %1509, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %1588) #21
  %1589 = getelementptr inbounds %struct.files_struct, ptr %1509, i32 0, i32 3
  %1590 = load volatile ptr, ptr %1589, align 4
  %1591 = getelementptr inbounds %struct.io_close, ptr %0, i32 0, i32 1
  %1592 = load i32, ptr %1591, align 4
  %1593 = load i32, ptr %1590, align 4
  %1594 = icmp ult i32 %1592, %1593
  br i1 %1594, label %1598, label %1595

1595:                                             ; preds = %1587
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1596 = load i16, ptr %1588, align 4
  %1597 = add i16 %1596, 1
  store i16 %1597, ptr %1588, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %1635

1598:                                             ; preds = %1587
  %1599 = getelementptr inbounds %struct.fdtable, ptr %1590, i32 0, i32 1
  %1600 = load ptr, ptr %1599, align 4
  %1601 = getelementptr ptr, ptr %1600, i32 %1592
  %1602 = load ptr, ptr %1601, align 4
  store ptr %1602, ptr %4, align 4
  %1603 = icmp eq ptr %1602, null
  br i1 %1603, label %1608, label %1604

1604:                                             ; preds = %1598
  %1605 = getelementptr inbounds %struct.file, ptr %1602, i32 0, i32 3
  %1606 = load ptr, ptr %1605, align 4
  %1607 = icmp eq ptr %1606, @io_uring_fops
  br i1 %1607, label %1608, label %1611

1608:                                             ; preds = %1604, %1598
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1609 = load i16, ptr %1588, align 4
  %1610 = add i16 %1609, 1
  store i16 %1610, ptr %1588, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  store ptr null, ptr %4, align 4
  br label %1635

1611:                                             ; preds = %1604
  %1612 = getelementptr inbounds %struct.file_operations, ptr %1606, i32 0, i32 15
  %1613 = load ptr, ptr %1612, align 4
  %1614 = icmp eq ptr %1613, null
  %1615 = icmp sgt i32 %1, -1
  %1616 = or i1 %1615, %1614
  br i1 %1616, label %1620, label %1617

1617:                                             ; preds = %1611
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1618 = load i16, ptr %1588, align 4
  %1619 = add i16 %1618, 1
  store i16 %1619, ptr %1588, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %1674

1620:                                             ; preds = %1611
  %1621 = call i32 @__close_fd_get_file(i32 noundef %1592, ptr noundef nonnull %4) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1622 = load i16, ptr %1588, align 4
  %1623 = add i16 %1622, 1
  store i16 %1623, ptr %1588, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %1624 = icmp slt i32 %1621, 0
  br i1 %1624, label %1625, label %1628

1625:                                             ; preds = %1620
  %1626 = icmp eq i32 %1621, -2
  %1627 = select i1 %1626, i32 -9, i32 %1621
  br label %1635

1628:                                             ; preds = %1620
  %1629 = load ptr, ptr %4, align 4
  %1630 = load ptr, ptr %1508, align 4
  %1631 = call i32 @filp_close(ptr noundef %1629, ptr noundef %1630) #21
  br label %1632

1632:                                             ; preds = %1628, %1585, %1583
  %1633 = phi i32 [ %1631, %1628 ], [ %1584, %1583 ], [ %1584, %1585 ]
  %1634 = icmp slt i32 %1633, 0
  br i1 %1634, label %1635, label %1644

1635:                                             ; preds = %1632, %1625, %1608, %1595
  %1636 = phi i32 [ %1633, %1632 ], [ %1627, %1625 ], [ -9, %1608 ], [ -9, %1595 ]
  %1637 = load i32, ptr %18, align 4
  %1638 = or i32 %1637, 256
  %1639 = and i32 %1637, 64
  %1640 = icmp eq i32 %1639, 0
  %1641 = and i32 %1638, -4194369
  %1642 = or i32 %1641, 4194304
  %1643 = select i1 %1640, i32 %1638, i32 %1642
  store i32 %1643, ptr %18, align 4
  br label %1644

1644:                                             ; preds = %1635, %1632
  %1645 = phi i32 [ %1636, %1635 ], [ %1633, %1632 ]
  %1646 = load ptr, ptr %4, align 4
  %1647 = icmp eq ptr %1646, null
  br i1 %1647, label %1649, label %1648

1648:                                             ; preds = %1644
  call void @fput(ptr noundef nonnull %1646) #21
  br label %1649

1649:                                             ; preds = %1648, %1644
  %1650 = and i32 %1, 1
  %1651 = icmp eq i32 %1650, 0
  br i1 %1651, label %1657, label %1652

1652:                                             ; preds = %1649
  %1653 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1645, ptr %1653, align 8
  %1654 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1654, align 4
  %1655 = load i32, ptr %18, align 4
  %1656 = or i32 %1655, 65536
  store i32 %1656, ptr %18, align 4
  br label %1674

1657:                                             ; preds = %1649
  %1658 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1659 = load ptr, ptr %1658, align 8
  %1660 = getelementptr inbounds %struct.io_ring_ctx, ptr %1659, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %1660) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1645, i32 noundef 0) #21
  %1661 = getelementptr inbounds %struct.anon.178, ptr %1659, i32 0, i32 3
  %1662 = load i8, ptr %1661, align 16
  %1663 = and i8 %1662, 48
  %1664 = icmp eq i8 %1663, 0
  br i1 %1664, label %1666, label %1665, !prof !10

1665:                                             ; preds = %1657
  call fastcc void @__io_commit_cqring_flush(ptr noundef %1659) #24
  br label %1666

1666:                                             ; preds = %1665, %1657
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1667 = getelementptr inbounds %struct.io_ring_ctx, ptr %1659, i32 0, i32 10
  %1668 = load i32, ptr %1667, align 64
  %1669 = getelementptr inbounds %struct.anon.178, ptr %1659, i32 0, i32 1
  %1670 = load ptr, ptr %1669, align 8
  %1671 = getelementptr inbounds %struct.io_rings, ptr %1670, i32 0, i32 1, i32 2
  store volatile i32 %1668, ptr %1671, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1672 = load i16, ptr %1660, align 4
  %1673 = add i16 %1672, 1
  store i16 %1673, ptr %1660, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %1659) #21
  br label %1674

1674:                                             ; preds = %1666, %1652, %1617
  %1675 = phi i32 [ -11, %1617 ], [ 0, %1652 ], [ 0, %1666 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  br label %2462

1676:                                             ; preds = %31
  %1677 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1678 = load ptr, ptr %1677, align 8
  %1679 = and i32 %1, 2
  %1680 = icmp eq i32 %1679, 0
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #21
  %1681 = getelementptr inbounds i8, ptr %3, i32 24
  store i64 0, ptr %1681, align 8, !annotation !9
  %1682 = getelementptr inbounds %struct.io_rsrc_update, ptr %0, i32 0, i32 3
  %1683 = load i32, ptr %1682, align 4
  store i32 %1683, ptr %3, align 8
  %1684 = getelementptr inbounds %struct.io_rsrc_update, ptr %0, i32 0, i32 1
  %1685 = load i64, ptr %1684, align 8
  %1686 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %3, i32 0, i32 2
  store i64 %1685, ptr %1686, align 8
  %1687 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %3, i32 0, i32 3
  store i64 0, ptr %1687, align 8
  %1688 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %3, i32 0, i32 1
  store i32 0, ptr %1688, align 4
  br i1 %1680, label %1689, label %1693

1689:                                             ; preds = %1676
  %1690 = getelementptr inbounds %struct.io_rsrc_update, ptr %0, i32 0, i32 2
  %1691 = load i32, ptr %1690, align 8
  %1692 = call fastcc i32 @__io_register_rsrc_update(ptr noundef %1678, i32 noundef 0, ptr noundef nonnull %3, i32 noundef %1691) #21
  br label %1698

1693:                                             ; preds = %1676
  %1694 = getelementptr inbounds %struct.io_ring_ctx, ptr %1678, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %1694) #21
  %1695 = getelementptr inbounds %struct.io_rsrc_update, ptr %0, i32 0, i32 2
  %1696 = load i32, ptr %1695, align 8
  %1697 = call fastcc i32 @__io_register_rsrc_update(ptr noundef %1678, i32 noundef 0, ptr noundef nonnull %3, i32 noundef %1696) #21
  tail call void @mutex_unlock(ptr noundef %1694) #21
  br label %1698

1698:                                             ; preds = %1693, %1689
  %1699 = phi i32 [ %1692, %1689 ], [ %1697, %1693 ]
  %1700 = icmp slt i32 %1699, 0
  br i1 %1700, label %1701, label %1709

1701:                                             ; preds = %1698
  %1702 = load i32, ptr %18, align 4
  %1703 = or i32 %1702, 256
  %1704 = and i32 %1702, 64
  %1705 = icmp eq i32 %1704, 0
  %1706 = and i32 %1703, -4194369
  %1707 = or i32 %1706, 4194304
  %1708 = select i1 %1705, i32 %1703, i32 %1707
  store i32 %1708, ptr %18, align 4
  br label %1709

1709:                                             ; preds = %1701, %1698
  %1710 = and i32 %1, 1
  %1711 = icmp eq i32 %1710, 0
  br i1 %1711, label %1717, label %1712

1712:                                             ; preds = %1709
  %1713 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1699, ptr %1713, align 8
  %1714 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1714, align 4
  %1715 = load i32, ptr %18, align 4
  %1716 = or i32 %1715, 65536
  store i32 %1716, ptr %18, align 4
  br label %1733

1717:                                             ; preds = %1709
  %1718 = load ptr, ptr %1677, align 8
  %1719 = getelementptr inbounds %struct.io_ring_ctx, ptr %1718, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1719) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1699, i32 noundef 0) #21
  %1720 = getelementptr inbounds %struct.anon.178, ptr %1718, i32 0, i32 3
  %1721 = load i8, ptr %1720, align 16
  %1722 = and i8 %1721, 48
  %1723 = icmp eq i8 %1722, 0
  br i1 %1723, label %1725, label %1724, !prof !10

1724:                                             ; preds = %1717
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1718) #24
  br label %1725

1725:                                             ; preds = %1724, %1717
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1726 = getelementptr inbounds %struct.io_ring_ctx, ptr %1718, i32 0, i32 10
  %1727 = load i32, ptr %1726, align 64
  %1728 = getelementptr inbounds %struct.anon.178, ptr %1718, i32 0, i32 1
  %1729 = load ptr, ptr %1728, align 8
  %1730 = getelementptr inbounds %struct.io_rings, ptr %1729, i32 0, i32 1, i32 2
  store volatile i32 %1727, ptr %1730, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1731 = load i16, ptr %1719, align 4
  %1732 = add i16 %1731, 1
  store i16 %1732, ptr %1719, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1718) #21
  br label %1733

1733:                                             ; preds = %1725, %1712
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #21
  br label %2462

1734:                                             ; preds = %31
  %1735 = icmp sgt i32 %1, -1
  br i1 %1735, label %1736, label %2462

1736:                                             ; preds = %1734
  %1737 = getelementptr inbounds %struct.io_statx, ptr %0, i32 0, i32 1
  %1738 = load i32, ptr %1737, align 4
  %1739 = getelementptr inbounds %struct.io_statx, ptr %0, i32 0, i32 4
  %1740 = load ptr, ptr %1739, align 4
  %1741 = getelementptr inbounds %struct.io_statx, ptr %0, i32 0, i32 3
  %1742 = load i32, ptr %1741, align 4
  %1743 = getelementptr inbounds %struct.io_statx, ptr %0, i32 0, i32 2
  %1744 = load i32, ptr %1743, align 4
  %1745 = getelementptr inbounds %struct.io_statx, ptr %0, i32 0, i32 5
  %1746 = load ptr, ptr %1745, align 4
  %1747 = tail call i32 @do_statx(i32 noundef %1738, ptr noundef %1740, i32 noundef %1742, i32 noundef %1744, ptr noundef %1746) #21
  %1748 = icmp slt i32 %1747, 0
  br i1 %1748, label %1749, label %1757

1749:                                             ; preds = %1736
  %1750 = load i32, ptr %18, align 4
  %1751 = or i32 %1750, 256
  %1752 = and i32 %1750, 64
  %1753 = icmp eq i32 %1752, 0
  %1754 = and i32 %1751, -4194369
  %1755 = or i32 %1754, 4194304
  %1756 = select i1 %1753, i32 %1751, i32 %1755
  store i32 %1756, ptr %18, align 4
  br label %1757

1757:                                             ; preds = %1749, %1736
  %1758 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1759 = load ptr, ptr %1758, align 8
  %1760 = getelementptr inbounds %struct.io_ring_ctx, ptr %1759, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1760) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1747, i32 noundef 0) #21
  %1761 = getelementptr inbounds %struct.anon.178, ptr %1759, i32 0, i32 3
  %1762 = load i8, ptr %1761, align 16
  %1763 = and i8 %1762, 48
  %1764 = icmp eq i8 %1763, 0
  br i1 %1764, label %1766, label %1765, !prof !10

1765:                                             ; preds = %1757
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1759) #24
  br label %1766

1766:                                             ; preds = %1765, %1757
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1767 = getelementptr inbounds %struct.io_ring_ctx, ptr %1759, i32 0, i32 10
  %1768 = load i32, ptr %1767, align 64
  %1769 = getelementptr inbounds %struct.anon.178, ptr %1759, i32 0, i32 1
  %1770 = load ptr, ptr %1769, align 8
  %1771 = getelementptr inbounds %struct.io_rings, ptr %1770, i32 0, i32 1, i32 2
  store volatile i32 %1768, ptr %1771, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1772 = load i16, ptr %1760, align 4
  %1773 = add i16 %1772, 1
  store i16 %1773, ptr %1760, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1759) #21
  br label %2462

1774:                                             ; preds = %31
  %1775 = icmp sgt i32 %1, -1
  %1776 = getelementptr inbounds %struct.io_fadvise, ptr %0, i32 0, i32 3
  %1777 = load i32, ptr %1776, align 4
  %1778 = icmp ult i32 %1777, 3
  %1779 = select i1 %1775, i1 true, i1 %1778
  br i1 %1779, label %1780, label %2462

1780:                                             ; preds = %1774
  %1781 = load ptr, ptr %0, align 8
  %1782 = getelementptr inbounds %struct.io_fadvise, ptr %0, i32 0, i32 1
  %1783 = load i64, ptr %1782, align 8
  %1784 = getelementptr inbounds %struct.io_fadvise, ptr %0, i32 0, i32 2
  %1785 = load i32, ptr %1784, align 8
  %1786 = zext i32 %1785 to i64
  %1787 = tail call i32 @vfs_fadvise(ptr noundef %1781, i64 noundef %1783, i64 noundef %1786, i32 noundef %1777) #21
  %1788 = icmp slt i32 %1787, 0
  br i1 %1788, label %1789, label %1797

1789:                                             ; preds = %1780
  %1790 = load i32, ptr %18, align 4
  %1791 = or i32 %1790, 256
  %1792 = and i32 %1790, 64
  %1793 = icmp eq i32 %1792, 0
  %1794 = and i32 %1791, -4194369
  %1795 = or i32 %1794, 4194304
  %1796 = select i1 %1793, i32 %1791, i32 %1795
  store i32 %1796, ptr %18, align 4
  br label %1797

1797:                                             ; preds = %1789, %1780
  %1798 = and i32 %1, 1
  %1799 = icmp eq i32 %1798, 0
  br i1 %1799, label %1805, label %1800

1800:                                             ; preds = %1797
  %1801 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1787, ptr %1801, align 8
  %1802 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1802, align 4
  %1803 = load i32, ptr %18, align 4
  %1804 = or i32 %1803, 65536
  store i32 %1804, ptr %18, align 4
  br label %2462

1805:                                             ; preds = %1797
  %1806 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1807 = load ptr, ptr %1806, align 8
  %1808 = getelementptr inbounds %struct.io_ring_ctx, ptr %1807, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1808) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1787, i32 noundef 0) #21
  %1809 = getelementptr inbounds %struct.anon.178, ptr %1807, i32 0, i32 3
  %1810 = load i8, ptr %1809, align 16
  %1811 = and i8 %1810, 48
  %1812 = icmp eq i8 %1811, 0
  br i1 %1812, label %1814, label %1813, !prof !10

1813:                                             ; preds = %1805
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1807) #24
  br label %1814

1814:                                             ; preds = %1813, %1805
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1815 = getelementptr inbounds %struct.io_ring_ctx, ptr %1807, i32 0, i32 10
  %1816 = load i32, ptr %1815, align 64
  %1817 = getelementptr inbounds %struct.anon.178, ptr %1807, i32 0, i32 1
  %1818 = load ptr, ptr %1817, align 8
  %1819 = getelementptr inbounds %struct.io_rings, ptr %1818, i32 0, i32 1, i32 2
  store volatile i32 %1816, ptr %1819, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1820 = load i16, ptr %1808, align 4
  %1821 = add i16 %1820, 1
  store i16 %1821, ptr %1808, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1807) #21
  br label %2462

1822:                                             ; preds = %31
  %1823 = icmp sgt i32 %1, -1
  br i1 %1823, label %1824, label %2462

1824:                                             ; preds = %1822
  %1825 = tail call ptr @llvm.thread.pointer() #21
  %1826 = getelementptr inbounds %struct.task_struct, ptr %1825, i32 0, i32 37
  %1827 = load ptr, ptr %1826, align 4
  %1828 = getelementptr inbounds %struct.io_madvise, ptr %0, i32 0, i32 1
  %1829 = load i64, ptr %1828, align 8
  %1830 = trunc i64 %1829 to i32
  %1831 = getelementptr inbounds %struct.io_madvise, ptr %0, i32 0, i32 2
  %1832 = load i32, ptr %1831, align 8
  %1833 = getelementptr inbounds %struct.io_madvise, ptr %0, i32 0, i32 3
  %1834 = load i32, ptr %1833, align 4
  %1835 = tail call i32 @do_madvise(ptr noundef %1827, i32 noundef %1830, i32 noundef %1832, i32 noundef %1834) #21
  %1836 = icmp slt i32 %1835, 0
  br i1 %1836, label %1837, label %1845

1837:                                             ; preds = %1824
  %1838 = load i32, ptr %18, align 4
  %1839 = or i32 %1838, 256
  %1840 = and i32 %1838, 64
  %1841 = icmp eq i32 %1840, 0
  %1842 = and i32 %1839, -4194369
  %1843 = or i32 %1842, 4194304
  %1844 = select i1 %1841, i32 %1839, i32 %1843
  store i32 %1844, ptr %18, align 4
  br label %1845

1845:                                             ; preds = %1837, %1824
  %1846 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1847 = load ptr, ptr %1846, align 8
  %1848 = getelementptr inbounds %struct.io_ring_ctx, ptr %1847, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1848) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1835, i32 noundef 0) #21
  %1849 = getelementptr inbounds %struct.anon.178, ptr %1847, i32 0, i32 3
  %1850 = load i8, ptr %1849, align 16
  %1851 = and i8 %1850, 48
  %1852 = icmp eq i8 %1851, 0
  br i1 %1852, label %1854, label %1853, !prof !10

1853:                                             ; preds = %1845
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1847) #24
  br label %1854

1854:                                             ; preds = %1853, %1845
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1855 = getelementptr inbounds %struct.io_ring_ctx, ptr %1847, i32 0, i32 10
  %1856 = load i32, ptr %1855, align 64
  %1857 = getelementptr inbounds %struct.anon.178, ptr %1847, i32 0, i32 1
  %1858 = load ptr, ptr %1857, align 8
  %1859 = getelementptr inbounds %struct.io_rings, ptr %1858, i32 0, i32 1, i32 2
  store volatile i32 %1856, ptr %1859, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1860 = load i16, ptr %1848, align 4
  %1861 = add i16 %1860, 1
  store i16 %1861, ptr %1848, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1847) #21
  br label %2462

1862:                                             ; preds = %31
  %1863 = tail call fastcc i32 @io_openat2(ptr noundef %0, i32 noundef %1)
  br label %2462

1864:                                             ; preds = %31
  %1865 = icmp slt i32 %1, 0
  %1866 = getelementptr inbounds %struct.io_epoll, ptr %0, i32 0, i32 1
  %1867 = load i32, ptr %1866, align 4
  %1868 = getelementptr inbounds %struct.io_epoll, ptr %0, i32 0, i32 2
  %1869 = load i32, ptr %1868, align 8
  %1870 = getelementptr inbounds %struct.io_epoll, ptr %0, i32 0, i32 3
  %1871 = load i32, ptr %1870, align 4
  %1872 = getelementptr inbounds %struct.io_epoll, ptr %0, i32 0, i32 4
  %1873 = tail call i32 @do_epoll_ctl(i32 noundef %1867, i32 noundef %1869, i32 noundef %1871, ptr noundef %1872, i1 noundef zeroext %1865) #21
  %1874 = icmp eq i32 %1873, -11
  %1875 = select i1 %1865, i1 %1874, i1 false
  br i1 %1875, label %2462, label %1876

1876:                                             ; preds = %1864
  %1877 = icmp slt i32 %1873, 0
  br i1 %1877, label %1878, label %1886

1878:                                             ; preds = %1876
  %1879 = load i32, ptr %18, align 4
  %1880 = or i32 %1879, 256
  %1881 = and i32 %1879, 64
  %1882 = icmp eq i32 %1881, 0
  %1883 = and i32 %1880, -4194369
  %1884 = or i32 %1883, 4194304
  %1885 = select i1 %1882, i32 %1880, i32 %1884
  store i32 %1885, ptr %18, align 4
  br label %1886

1886:                                             ; preds = %1878, %1876
  %1887 = and i32 %1, 1
  %1888 = icmp eq i32 %1887, 0
  br i1 %1888, label %1894, label %1889

1889:                                             ; preds = %1886
  %1890 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1873, ptr %1890, align 8
  %1891 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %1891, align 4
  %1892 = load i32, ptr %18, align 4
  %1893 = or i32 %1892, 65536
  store i32 %1893, ptr %18, align 4
  br label %2462

1894:                                             ; preds = %1886
  %1895 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1896 = load ptr, ptr %1895, align 8
  %1897 = getelementptr inbounds %struct.io_ring_ctx, ptr %1896, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1897) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1873, i32 noundef 0) #21
  %1898 = getelementptr inbounds %struct.anon.178, ptr %1896, i32 0, i32 3
  %1899 = load i8, ptr %1898, align 16
  %1900 = and i8 %1899, 48
  %1901 = icmp eq i8 %1900, 0
  br i1 %1901, label %1903, label %1902, !prof !10

1902:                                             ; preds = %1894
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1896) #24
  br label %1903

1903:                                             ; preds = %1902, %1894
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1904 = getelementptr inbounds %struct.io_ring_ctx, ptr %1896, i32 0, i32 10
  %1905 = load i32, ptr %1904, align 64
  %1906 = getelementptr inbounds %struct.anon.178, ptr %1896, i32 0, i32 1
  %1907 = load ptr, ptr %1906, align 8
  %1908 = getelementptr inbounds %struct.io_rings, ptr %1907, i32 0, i32 1, i32 2
  store volatile i32 %1905, ptr %1908, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1909 = load i16, ptr %1897, align 4
  %1910 = add i16 %1909, 1
  store i16 %1910, ptr %1897, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1896) #21
  br label %2462

1911:                                             ; preds = %31
  %1912 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 1
  %1913 = load ptr, ptr %1912, align 4
  %1914 = load ptr, ptr %0, align 8
  %1915 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 5
  %1916 = load i32, ptr %1915, align 8
  %1917 = and i32 %1916, 2147483647
  %1918 = icmp sgt i32 %1, -1
  br i1 %1918, label %1919, label %2462

1919:                                             ; preds = %1911
  %1920 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 4
  %1921 = load i64, ptr %1920, align 8
  %1922 = icmp eq i64 %1921, 0
  br i1 %1922, label %1935, label %1923

1923:                                             ; preds = %1919
  %1924 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 2
  %1925 = load i64, ptr %1924, align 8
  %1926 = icmp eq i64 %1925, -1
  %1927 = select i1 %1926, ptr null, ptr %1924
  %1928 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 3
  %1929 = load i64, ptr %1928, align 8
  %1930 = icmp eq i64 %1929, -1
  %1931 = select i1 %1930, ptr null, ptr %1928
  %1932 = trunc i64 %1921 to i32
  %1933 = tail call i32 @do_splice(ptr noundef %1913, ptr noundef %1931, ptr noundef %1914, ptr noundef %1927, i32 noundef %1932, i32 noundef %1917) #21
  %1934 = load i32, ptr %1915, align 8
  br label %1935

1935:                                             ; preds = %1923, %1919
  %1936 = phi i32 [ %1934, %1923 ], [ %1916, %1919 ]
  %1937 = phi i32 [ %1933, %1923 ], [ 0, %1919 ]
  %1938 = icmp slt i32 %1936, 0
  %1939 = icmp eq ptr %1913, null
  %1940 = select i1 %1938, i1 true, i1 %1939
  br i1 %1940, label %1942, label %1941

1941:                                             ; preds = %1935
  tail call void @fput(ptr noundef nonnull %1913) #21
  br label %1942

1942:                                             ; preds = %1941, %1935
  %1943 = load i32, ptr %18, align 4
  %1944 = and i32 %1943, -8193
  store i32 %1944, ptr %18, align 4
  %1945 = sext i32 %1937 to i64
  %1946 = load i64, ptr %1920, align 8
  %1947 = icmp eq i64 %1946, %1945
  br i1 %1947, label %1955, label %1948

1948:                                             ; preds = %1942
  %1949 = or i32 %1944, 256
  %1950 = and i32 %1943, 64
  %1951 = icmp eq i32 %1950, 0
  %1952 = and i32 %1949, -4202561
  %1953 = or i32 %1952, 4194304
  %1954 = select i1 %1951, i32 %1949, i32 %1953
  store i32 %1954, ptr %18, align 4
  br label %1955

1955:                                             ; preds = %1948, %1942
  %1956 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1957 = load ptr, ptr %1956, align 8
  %1958 = getelementptr inbounds %struct.io_ring_ctx, ptr %1957, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %1958) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1937, i32 noundef 0) #21
  %1959 = getelementptr inbounds %struct.anon.178, ptr %1957, i32 0, i32 3
  %1960 = load i8, ptr %1959, align 16
  %1961 = and i8 %1960, 48
  %1962 = icmp eq i8 %1961, 0
  br i1 %1962, label %1964, label %1963, !prof !10

1963:                                             ; preds = %1955
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %1957) #24
  br label %1964

1964:                                             ; preds = %1963, %1955
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %1965 = getelementptr inbounds %struct.io_ring_ctx, ptr %1957, i32 0, i32 10
  %1966 = load i32, ptr %1965, align 64
  %1967 = getelementptr inbounds %struct.anon.178, ptr %1957, i32 0, i32 1
  %1968 = load ptr, ptr %1967, align 8
  %1969 = getelementptr inbounds %struct.io_rings, ptr %1968, i32 0, i32 1, i32 2
  store volatile i32 %1966, ptr %1969, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %1970 = load i16, ptr %1958, align 4
  %1971 = add i16 %1970, 1
  store i16 %1971, ptr %1958, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %1957) #21
  br label %2462

1972:                                             ; preds = %31
  %1973 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %1974 = load ptr, ptr %1973, align 8
  %1975 = and i32 %1, 2
  %1976 = icmp eq i32 %1975, 0
  br i1 %1976, label %1979, label %1977

1977:                                             ; preds = %1972
  %1978 = getelementptr inbounds %struct.io_ring_ctx, ptr %1974, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %1978) #21
  br label %1979

1979:                                             ; preds = %1977, %1972
  %1980 = getelementptr inbounds %struct.io_ring_ctx, ptr %1974, i32 0, i32 1, i32 16
  %1981 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 3
  %1982 = load i32, ptr %1981, align 4
  %1983 = tail call ptr @xa_load(ptr noundef %1980, i32 noundef %1982) #21
  %1984 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 4
  %1985 = load i16, ptr %1984, align 8
  %1986 = icmp eq i16 %1985, 0
  br i1 %1986, label %2057, label %1987

1987:                                             ; preds = %1979
  %1988 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 5
  %1989 = load i16, ptr %1988, align 2
  %1990 = zext i16 %1989 to i32
  %1991 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 1
  %1992 = load i64, ptr %1991, align 8
  %1993 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 2
  br label %1994

1994:                                             ; preds = %2019, %1987
  %1995 = phi ptr [ %1983, %1987 ], [ %2020, %2019 ]
  %1996 = phi i64 [ %1992, %1987 ], [ %2010, %2019 ]
  %1997 = phi i32 [ 0, %1987 ], [ %2022, %2019 ]
  %1998 = phi i32 [ %1990, %1987 ], [ %2011, %2019 ]
  %1999 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %2000 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %1999, i32 noundef 4197568, i32 noundef 24) #25
  %2001 = icmp eq ptr %2000, null
  br i1 %2001, label %2026, label %2002

2002:                                             ; preds = %1994
  %2003 = getelementptr inbounds %struct.io_buffer, ptr %2000, i32 0, i32 1
  store i64 %1996, ptr %2003, align 8
  %2004 = load i32, ptr %1993, align 8
  %2005 = tail call i32 @llvm.umin.i32(i32 %2004, i32 2147479552) #21
  %2006 = getelementptr inbounds %struct.io_buffer, ptr %2000, i32 0, i32 2
  store i32 %2005, ptr %2006, align 8
  %2007 = trunc i32 %1998 to i16
  %2008 = getelementptr inbounds %struct.io_buffer, ptr %2000, i32 0, i32 3
  store i16 %2007, ptr %2008, align 4
  %2009 = zext i32 %2004 to i64
  %2010 = add i64 %1996, %2009
  %2011 = add nuw nsw i32 %1998, 1
  %2012 = icmp eq ptr %1995, null
  br i1 %2012, label %2013, label %2015

2013:                                             ; preds = %2002
  store volatile ptr %2000, ptr %2000, align 8
  %2014 = getelementptr inbounds %struct.list_head, ptr %2000, i32 0, i32 1
  store ptr %2000, ptr %2014, align 4
  br label %2019

2015:                                             ; preds = %2002
  %2016 = getelementptr inbounds %struct.list_head, ptr %1995, i32 0, i32 1
  %2017 = load ptr, ptr %2016, align 4
  store ptr %2000, ptr %2016, align 4
  store ptr %1995, ptr %2000, align 8
  %2018 = getelementptr inbounds %struct.list_head, ptr %2000, i32 0, i32 1
  store ptr %2017, ptr %2018, align 4
  store volatile ptr %2000, ptr %2017, align 4
  br label %2019

2019:                                             ; preds = %2015, %2013
  %2020 = phi ptr [ %2000, %2013 ], [ %1995, %2015 ]
  %2021 = tail call i32 @__cond_resched() #21
  %2022 = add nuw nsw i32 %1997, 1
  %2023 = load i16, ptr %1984, align 8
  %2024 = zext i16 %2023 to i32
  %2025 = icmp ult i32 %2022, %2024
  br i1 %2025, label %1994, label %2028

2026:                                             ; preds = %1994
  %2027 = icmp eq i32 %1997, 0
  br i1 %2027, label %2057, label %2028

2028:                                             ; preds = %2026, %2019
  %2029 = phi ptr [ %1995, %2026 ], [ %2020, %2019 ]
  %2030 = phi i32 [ %1997, %2026 ], [ %2022, %2019 ]
  %2031 = icmp eq ptr %1983, null
  br i1 %2031, label %2032, label %2066

2032:                                             ; preds = %2028
  %2033 = load i32, ptr %1981, align 4
  tail call void @_raw_spin_lock(ptr noundef %1980) #21
  %2034 = tail call i32 @__xa_insert(ptr noundef %1980, i32 noundef %2033, ptr noundef %2029, i32 noundef 3264) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2035 = load i16, ptr %1980, align 4
  %2036 = add i16 %2035, 1
  store i16 %2036, ptr %1980, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %2037 = icmp slt i32 %2034, 0
  br i1 %2037, label %2038, label %2066

2038:                                             ; preds = %2032
  %2039 = load i32, ptr %1981, align 4
  %2040 = load volatile ptr, ptr %2029, align 4
  %2041 = icmp eq ptr %2040, %2029
  br i1 %2041, label %2055, label %2042

2042:                                             ; preds = %2050, %2038
  %2043 = phi ptr [ %2053, %2050 ], [ %2040, %2038 ]
  %2044 = phi i32 [ %2052, %2050 ], [ 1, %2038 ]
  %2045 = getelementptr inbounds %struct.list_head, ptr %2043, i32 0, i32 1
  %2046 = load ptr, ptr %2045, align 4
  %2047 = load ptr, ptr %2043, align 4
  %2048 = getelementptr inbounds %struct.list_head, ptr %2047, i32 0, i32 1
  store ptr %2046, ptr %2048, align 4
  store volatile ptr %2047, ptr %2046, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %2043, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %2045, align 4
  tail call void @kfree(ptr noundef %2043) #21
  %2049 = icmp eq i32 %2044, -1
  br i1 %2049, label %2057, label %2050

2050:                                             ; preds = %2042
  %2051 = tail call i32 @__cond_resched() #21
  %2052 = add nuw i32 %2044, 1
  %2053 = load volatile ptr, ptr %2029, align 4
  %2054 = icmp eq ptr %2053, %2029
  br i1 %2054, label %2055, label %2042

2055:                                             ; preds = %2050, %2038
  tail call void @kfree(ptr noundef %2029) #21
  %2056 = tail call ptr @xa_erase(ptr noundef %1980, i32 noundef %2039) #21
  br label %2057

2057:                                             ; preds = %2055, %2042, %2026, %1979
  %2058 = phi i32 [ -12, %2026 ], [ -12, %1979 ], [ %2034, %2055 ], [ %2034, %2042 ]
  %2059 = load i32, ptr %18, align 4
  %2060 = or i32 %2059, 256
  %2061 = and i32 %2059, 64
  %2062 = icmp eq i32 %2061, 0
  %2063 = and i32 %2060, -4194369
  %2064 = or i32 %2063, 4194304
  %2065 = select i1 %2062, i32 %2060, i32 %2064
  store i32 %2065, ptr %18, align 4
  br label %2066

2066:                                             ; preds = %2057, %2032, %2028
  %2067 = phi i32 [ %2058, %2057 ], [ %2034, %2032 ], [ %2030, %2028 ]
  %2068 = and i32 %1, 1
  %2069 = icmp eq i32 %2068, 0
  br i1 %2069, label %2075, label %2070

2070:                                             ; preds = %2066
  %2071 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %2067, ptr %2071, align 8
  %2072 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %2072, align 4
  %2073 = load i32, ptr %18, align 4
  %2074 = or i32 %2073, 65536
  store i32 %2074, ptr %18, align 4
  br label %2091

2075:                                             ; preds = %2066
  %2076 = load ptr, ptr %1973, align 8
  %2077 = getelementptr inbounds %struct.io_ring_ctx, ptr %2076, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2077) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2067, i32 noundef 0) #21
  %2078 = getelementptr inbounds %struct.anon.178, ptr %2076, i32 0, i32 3
  %2079 = load i8, ptr %2078, align 16
  %2080 = and i8 %2079, 48
  %2081 = icmp eq i8 %2080, 0
  br i1 %2081, label %2083, label %2082, !prof !10

2082:                                             ; preds = %2075
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2076) #24
  br label %2083

2083:                                             ; preds = %2082, %2075
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2084 = getelementptr inbounds %struct.io_ring_ctx, ptr %2076, i32 0, i32 10
  %2085 = load i32, ptr %2084, align 64
  %2086 = getelementptr inbounds %struct.anon.178, ptr %2076, i32 0, i32 1
  %2087 = load ptr, ptr %2086, align 8
  %2088 = getelementptr inbounds %struct.io_rings, ptr %2087, i32 0, i32 1, i32 2
  store volatile i32 %2085, ptr %2088, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2089 = load i16, ptr %2077, align 4
  %2090 = add i16 %2089, 1
  store i16 %2090, ptr %2077, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2076) #21
  br label %2091

2091:                                             ; preds = %2083, %2070
  br i1 %1976, label %2462, label %2092

2092:                                             ; preds = %2091
  %2093 = getelementptr inbounds %struct.io_ring_ctx, ptr %1974, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %2093) #21
  br label %2462

2094:                                             ; preds = %31
  %2095 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2096 = load ptr, ptr %2095, align 8
  %2097 = and i32 %1, 2
  %2098 = icmp eq i32 %2097, 0
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2094
  %2100 = getelementptr inbounds %struct.io_ring_ctx, ptr %2096, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %2100) #21
  br label %2101

2101:                                             ; preds = %2099, %2094
  %2102 = getelementptr inbounds %struct.io_ring_ctx, ptr %2096, i32 0, i32 1, i32 16
  %2103 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 3
  %2104 = load i32, ptr %2103, align 4
  %2105 = tail call ptr @xa_load(ptr noundef %2102, i32 noundef %2104) #21
  %2106 = icmp eq ptr %2105, null
  br i1 %2106, label %2132, label %2107

2107:                                             ; preds = %2101
  %2108 = load i32, ptr %2103, align 4
  %2109 = getelementptr inbounds %struct.io_provide_buf, ptr %0, i32 0, i32 4
  %2110 = load i16, ptr %2109, align 8
  %2111 = zext i16 %2110 to i32
  %2112 = icmp eq i16 %2110, 0
  br i1 %2112, label %2140, label %2113

2113:                                             ; preds = %2107
  %2114 = load volatile ptr, ptr %2105, align 4
  %2115 = icmp eq ptr %2114, %2105
  br i1 %2115, label %2129, label %2116

2116:                                             ; preds = %2124, %2113
  %2117 = phi ptr [ %2127, %2124 ], [ %2114, %2113 ]
  %2118 = phi i32 [ %2126, %2124 ], [ 1, %2113 ]
  %2119 = getelementptr inbounds %struct.list_head, ptr %2117, i32 0, i32 1
  %2120 = load ptr, ptr %2119, align 4
  %2121 = load ptr, ptr %2117, align 4
  %2122 = getelementptr inbounds %struct.list_head, ptr %2121, i32 0, i32 1
  store ptr %2120, ptr %2122, align 4
  store volatile ptr %2121, ptr %2120, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %2117, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %2119, align 4
  tail call void @kfree(ptr noundef %2117) #21
  %2123 = icmp eq i32 %2118, %2111
  br i1 %2123, label %2140, label %2124

2124:                                             ; preds = %2116
  %2125 = tail call i32 @__cond_resched() #21
  %2126 = add nuw nsw i32 %2118, 1
  %2127 = load volatile ptr, ptr %2105, align 4
  %2128 = icmp eq ptr %2127, %2105
  br i1 %2128, label %2129, label %2116

2129:                                             ; preds = %2124, %2113
  %2130 = phi i32 [ 1, %2113 ], [ %2126, %2124 ]
  tail call void @kfree(ptr noundef nonnull %2105) #21
  %2131 = tail call ptr @xa_erase(ptr noundef %2102, i32 noundef %2108) #21
  br label %2140

2132:                                             ; preds = %2101
  %2133 = load i32, ptr %18, align 4
  %2134 = or i32 %2133, 256
  %2135 = and i32 %2133, 64
  %2136 = icmp eq i32 %2135, 0
  %2137 = and i32 %2134, -4194369
  %2138 = or i32 %2137, 4194304
  %2139 = select i1 %2136, i32 %2134, i32 %2138
  store i32 %2139, ptr %18, align 4
  br label %2140

2140:                                             ; preds = %2132, %2129, %2116, %2107
  %2141 = phi i32 [ -2, %2132 ], [ %2130, %2129 ], [ 0, %2107 ], [ %2111, %2116 ]
  %2142 = and i32 %1, 1
  %2143 = icmp eq i32 %2142, 0
  br i1 %2143, label %2149, label %2144

2144:                                             ; preds = %2140
  %2145 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %2141, ptr %2145, align 8
  %2146 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %2146, align 4
  %2147 = load i32, ptr %18, align 4
  %2148 = or i32 %2147, 65536
  store i32 %2148, ptr %18, align 4
  br label %2165

2149:                                             ; preds = %2140
  %2150 = load ptr, ptr %2095, align 8
  %2151 = getelementptr inbounds %struct.io_ring_ctx, ptr %2150, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2151) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2141, i32 noundef 0) #21
  %2152 = getelementptr inbounds %struct.anon.178, ptr %2150, i32 0, i32 3
  %2153 = load i8, ptr %2152, align 16
  %2154 = and i8 %2153, 48
  %2155 = icmp eq i8 %2154, 0
  br i1 %2155, label %2157, label %2156, !prof !10

2156:                                             ; preds = %2149
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2150) #24
  br label %2157

2157:                                             ; preds = %2156, %2149
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2158 = getelementptr inbounds %struct.io_ring_ctx, ptr %2150, i32 0, i32 10
  %2159 = load i32, ptr %2158, align 64
  %2160 = getelementptr inbounds %struct.anon.178, ptr %2150, i32 0, i32 1
  %2161 = load ptr, ptr %2160, align 8
  %2162 = getelementptr inbounds %struct.io_rings, ptr %2161, i32 0, i32 1, i32 2
  store volatile i32 %2159, ptr %2162, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2163 = load i16, ptr %2151, align 4
  %2164 = add i16 %2163, 1
  store i16 %2164, ptr %2151, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2150) #21
  br label %2165

2165:                                             ; preds = %2157, %2144
  br i1 %2098, label %2462, label %2166

2166:                                             ; preds = %2165
  %2167 = getelementptr inbounds %struct.io_ring_ctx, ptr %2096, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %2167) #21
  br label %2462

2168:                                             ; preds = %31
  %2169 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 1
  %2170 = load ptr, ptr %2169, align 4
  %2171 = load ptr, ptr %0, align 8
  %2172 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 5
  %2173 = load i32, ptr %2172, align 8
  %2174 = and i32 %2173, 2147483647
  %2175 = icmp sgt i32 %1, -1
  br i1 %2175, label %2176, label %2462

2176:                                             ; preds = %2168
  %2177 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 4
  %2178 = load i64, ptr %2177, align 8
  %2179 = icmp eq i64 %2178, 0
  br i1 %2179, label %2184, label %2180

2180:                                             ; preds = %2176
  %2181 = trunc i64 %2178 to i32
  %2182 = tail call i32 @do_tee(ptr noundef %2170, ptr noundef %2171, i32 noundef %2181, i32 noundef %2174) #21
  %2183 = load i32, ptr %2172, align 8
  br label %2184

2184:                                             ; preds = %2180, %2176
  %2185 = phi i32 [ %2183, %2180 ], [ %2173, %2176 ]
  %2186 = phi i32 [ %2182, %2180 ], [ 0, %2176 ]
  %2187 = icmp slt i32 %2185, 0
  %2188 = icmp eq ptr %2170, null
  %2189 = select i1 %2187, i1 true, i1 %2188
  br i1 %2189, label %2191, label %2190

2190:                                             ; preds = %2184
  tail call void @fput(ptr noundef nonnull %2170) #21
  br label %2191

2191:                                             ; preds = %2190, %2184
  %2192 = load i32, ptr %18, align 4
  %2193 = and i32 %2192, -8193
  store i32 %2193, ptr %18, align 4
  %2194 = sext i32 %2186 to i64
  %2195 = load i64, ptr %2177, align 8
  %2196 = icmp eq i64 %2195, %2194
  br i1 %2196, label %2204, label %2197

2197:                                             ; preds = %2191
  %2198 = or i32 %2193, 256
  %2199 = and i32 %2192, 64
  %2200 = icmp eq i32 %2199, 0
  %2201 = and i32 %2198, -4202561
  %2202 = or i32 %2201, 4194304
  %2203 = select i1 %2200, i32 %2198, i32 %2202
  store i32 %2203, ptr %18, align 4
  br label %2204

2204:                                             ; preds = %2197, %2191
  %2205 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2206 = load ptr, ptr %2205, align 8
  %2207 = getelementptr inbounds %struct.io_ring_ctx, ptr %2206, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2207) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2186, i32 noundef 0) #21
  %2208 = getelementptr inbounds %struct.anon.178, ptr %2206, i32 0, i32 3
  %2209 = load i8, ptr %2208, align 16
  %2210 = and i8 %2209, 48
  %2211 = icmp eq i8 %2210, 0
  br i1 %2211, label %2213, label %2212, !prof !10

2212:                                             ; preds = %2204
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2206) #24
  br label %2213

2213:                                             ; preds = %2212, %2204
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2214 = getelementptr inbounds %struct.io_ring_ctx, ptr %2206, i32 0, i32 10
  %2215 = load i32, ptr %2214, align 64
  %2216 = getelementptr inbounds %struct.anon.178, ptr %2206, i32 0, i32 1
  %2217 = load ptr, ptr %2216, align 8
  %2218 = getelementptr inbounds %struct.io_rings, ptr %2217, i32 0, i32 1, i32 2
  store volatile i32 %2215, ptr %2218, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2219 = load i16, ptr %2207, align 4
  %2220 = add i16 %2219, 1
  store i16 %2220, ptr %2207, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2206) #21
  br label %2462

2221:                                             ; preds = %31
  %2222 = icmp sgt i32 %1, -1
  br i1 %2222, label %2223, label %2462

2223:                                             ; preds = %2221
  %2224 = load ptr, ptr %0, align 8
  %2225 = tail call ptr @sock_from_file(ptr noundef %2224) #21
  %2226 = icmp eq ptr %2225, null
  br i1 %2226, label %2462, label %2227, !prof !11

2227:                                             ; preds = %2223
  %2228 = getelementptr inbounds %struct.io_shutdown, ptr %0, i32 0, i32 1
  %2229 = load i32, ptr %2228, align 4
  %2230 = tail call i32 @__sys_shutdown_sock(ptr noundef nonnull %2225, i32 noundef %2229) #21
  %2231 = icmp slt i32 %2230, 0
  br i1 %2231, label %2232, label %2240

2232:                                             ; preds = %2227
  %2233 = load i32, ptr %18, align 4
  %2234 = or i32 %2233, 256
  %2235 = and i32 %2233, 64
  %2236 = icmp eq i32 %2235, 0
  %2237 = and i32 %2234, -4194369
  %2238 = or i32 %2237, 4194304
  %2239 = select i1 %2236, i32 %2234, i32 %2238
  store i32 %2239, ptr %18, align 4
  br label %2240

2240:                                             ; preds = %2232, %2227
  %2241 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2242 = load ptr, ptr %2241, align 8
  %2243 = getelementptr inbounds %struct.io_ring_ctx, ptr %2242, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2243) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2230, i32 noundef 0) #21
  %2244 = getelementptr inbounds %struct.anon.178, ptr %2242, i32 0, i32 3
  %2245 = load i8, ptr %2244, align 16
  %2246 = and i8 %2245, 48
  %2247 = icmp eq i8 %2246, 0
  br i1 %2247, label %2249, label %2248, !prof !10

2248:                                             ; preds = %2240
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2242) #24
  br label %2249

2249:                                             ; preds = %2248, %2240
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2250 = getelementptr inbounds %struct.io_ring_ctx, ptr %2242, i32 0, i32 10
  %2251 = load i32, ptr %2250, align 64
  %2252 = getelementptr inbounds %struct.anon.178, ptr %2242, i32 0, i32 1
  %2253 = load ptr, ptr %2252, align 8
  %2254 = getelementptr inbounds %struct.io_rings, ptr %2253, i32 0, i32 1, i32 2
  store volatile i32 %2251, ptr %2254, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2255 = load i16, ptr %2243, align 4
  %2256 = add i16 %2255, 1
  store i16 %2256, ptr %2243, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2242) #21
  br label %2462

2257:                                             ; preds = %31
  %2258 = icmp sgt i32 %1, -1
  br i1 %2258, label %2259, label %2462

2259:                                             ; preds = %2257
  %2260 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 1
  %2261 = load i32, ptr %2260, align 4
  %2262 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 3
  %2263 = load ptr, ptr %2262, align 4
  %2264 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 2
  %2265 = load i32, ptr %2264, align 4
  %2266 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 4
  %2267 = load ptr, ptr %2266, align 4
  %2268 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 5
  %2269 = load i32, ptr %2268, align 4
  %2270 = tail call i32 @do_renameat2(i32 noundef %2261, ptr noundef %2263, i32 noundef %2265, ptr noundef %2267, i32 noundef %2269) #21
  %2271 = load i32, ptr %18, align 4
  %2272 = and i32 %2271, -8193
  %2273 = icmp slt i32 %2270, 0
  br i1 %2273, label %2274, label %2281

2274:                                             ; preds = %2259
  %2275 = or i32 %2272, 256
  %2276 = and i32 %2271, 64
  %2277 = icmp eq i32 %2276, 0
  %2278 = and i32 %2275, -4202561
  %2279 = or i32 %2278, 4194304
  %2280 = select i1 %2277, i32 %2275, i32 %2279
  br label %2281

2281:                                             ; preds = %2274, %2259
  %2282 = phi i32 [ %2280, %2274 ], [ %2272, %2259 ]
  store i32 %2282, ptr %18, align 4
  %2283 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2284 = load ptr, ptr %2283, align 8
  %2285 = getelementptr inbounds %struct.io_ring_ctx, ptr %2284, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2285) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2270, i32 noundef 0) #21
  %2286 = getelementptr inbounds %struct.anon.178, ptr %2284, i32 0, i32 3
  %2287 = load i8, ptr %2286, align 16
  %2288 = and i8 %2287, 48
  %2289 = icmp eq i8 %2288, 0
  br i1 %2289, label %2291, label %2290, !prof !10

2290:                                             ; preds = %2281
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2284) #24
  br label %2291

2291:                                             ; preds = %2290, %2281
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2292 = getelementptr inbounds %struct.io_ring_ctx, ptr %2284, i32 0, i32 10
  %2293 = load i32, ptr %2292, align 64
  %2294 = getelementptr inbounds %struct.anon.178, ptr %2284, i32 0, i32 1
  %2295 = load ptr, ptr %2294, align 8
  %2296 = getelementptr inbounds %struct.io_rings, ptr %2295, i32 0, i32 1, i32 2
  store volatile i32 %2293, ptr %2296, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2297 = load i16, ptr %2285, align 4
  %2298 = add i16 %2297, 1
  store i16 %2298, ptr %2285, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2284) #21
  br label %2462

2299:                                             ; preds = %31
  %2300 = icmp sgt i32 %1, -1
  br i1 %2300, label %2301, label %2462

2301:                                             ; preds = %2299
  %2302 = getelementptr inbounds %struct.io_unlink, ptr %0, i32 0, i32 2
  %2303 = load i32, ptr %2302, align 4
  %2304 = and i32 %2303, 512
  %2305 = icmp eq i32 %2304, 0
  %2306 = getelementptr inbounds %struct.io_unlink, ptr %0, i32 0, i32 1
  %2307 = load i32, ptr %2306, align 4
  %2308 = getelementptr inbounds %struct.io_unlink, ptr %0, i32 0, i32 3
  %2309 = load ptr, ptr %2308, align 4
  br i1 %2305, label %2312, label %2310

2310:                                             ; preds = %2301
  %2311 = tail call i32 @do_rmdir(i32 noundef %2307, ptr noundef %2309) #21
  br label %2314

2312:                                             ; preds = %2301
  %2313 = tail call i32 @do_unlinkat(i32 noundef %2307, ptr noundef %2309) #21
  br label %2314

2314:                                             ; preds = %2312, %2310
  %2315 = phi i32 [ %2311, %2310 ], [ %2313, %2312 ]
  %2316 = load i32, ptr %18, align 4
  %2317 = and i32 %2316, -8193
  %2318 = icmp slt i32 %2315, 0
  br i1 %2318, label %2319, label %2326

2319:                                             ; preds = %2314
  %2320 = or i32 %2317, 256
  %2321 = and i32 %2316, 64
  %2322 = icmp eq i32 %2321, 0
  %2323 = and i32 %2320, -4202561
  %2324 = or i32 %2323, 4194304
  %2325 = select i1 %2322, i32 %2320, i32 %2324
  br label %2326

2326:                                             ; preds = %2319, %2314
  %2327 = phi i32 [ %2325, %2319 ], [ %2317, %2314 ]
  store i32 %2327, ptr %18, align 4
  %2328 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2329 = load ptr, ptr %2328, align 8
  %2330 = getelementptr inbounds %struct.io_ring_ctx, ptr %2329, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2330) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2315, i32 noundef 0) #21
  %2331 = getelementptr inbounds %struct.anon.178, ptr %2329, i32 0, i32 3
  %2332 = load i8, ptr %2331, align 16
  %2333 = and i8 %2332, 48
  %2334 = icmp eq i8 %2333, 0
  br i1 %2334, label %2336, label %2335, !prof !10

2335:                                             ; preds = %2326
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2329) #24
  br label %2336

2336:                                             ; preds = %2335, %2326
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2337 = getelementptr inbounds %struct.io_ring_ctx, ptr %2329, i32 0, i32 10
  %2338 = load i32, ptr %2337, align 64
  %2339 = getelementptr inbounds %struct.anon.178, ptr %2329, i32 0, i32 1
  %2340 = load ptr, ptr %2339, align 8
  %2341 = getelementptr inbounds %struct.io_rings, ptr %2340, i32 0, i32 1, i32 2
  store volatile i32 %2338, ptr %2341, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2342 = load i16, ptr %2330, align 4
  %2343 = add i16 %2342, 1
  store i16 %2343, ptr %2330, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2329) #21
  br label %2462

2344:                                             ; preds = %31
  %2345 = icmp sgt i32 %1, -1
  br i1 %2345, label %2346, label %2462

2346:                                             ; preds = %2344
  %2347 = getelementptr inbounds %struct.io_mkdir, ptr %0, i32 0, i32 1
  %2348 = load i32, ptr %2347, align 4
  %2349 = getelementptr inbounds %struct.io_mkdir, ptr %0, i32 0, i32 3
  %2350 = load ptr, ptr %2349, align 4
  %2351 = getelementptr inbounds %struct.io_mkdir, ptr %0, i32 0, i32 2
  %2352 = load i16, ptr %2351, align 4
  %2353 = tail call i32 @do_mkdirat(i32 noundef %2348, ptr noundef %2350, i16 noundef zeroext %2352) #21
  %2354 = load i32, ptr %18, align 4
  %2355 = and i32 %2354, -8193
  %2356 = icmp slt i32 %2353, 0
  br i1 %2356, label %2357, label %2364

2357:                                             ; preds = %2346
  %2358 = or i32 %2355, 256
  %2359 = and i32 %2354, 64
  %2360 = icmp eq i32 %2359, 0
  %2361 = and i32 %2358, -4202561
  %2362 = or i32 %2361, 4194304
  %2363 = select i1 %2360, i32 %2358, i32 %2362
  br label %2364

2364:                                             ; preds = %2357, %2346
  %2365 = phi i32 [ %2363, %2357 ], [ %2355, %2346 ]
  store i32 %2365, ptr %18, align 4
  %2366 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2367 = load ptr, ptr %2366, align 8
  %2368 = getelementptr inbounds %struct.io_ring_ctx, ptr %2367, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2368) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2353, i32 noundef 0) #21
  %2369 = getelementptr inbounds %struct.anon.178, ptr %2367, i32 0, i32 3
  %2370 = load i8, ptr %2369, align 16
  %2371 = and i8 %2370, 48
  %2372 = icmp eq i8 %2371, 0
  br i1 %2372, label %2374, label %2373, !prof !10

2373:                                             ; preds = %2364
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2367) #24
  br label %2374

2374:                                             ; preds = %2373, %2364
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2375 = getelementptr inbounds %struct.io_ring_ctx, ptr %2367, i32 0, i32 10
  %2376 = load i32, ptr %2375, align 64
  %2377 = getelementptr inbounds %struct.anon.178, ptr %2367, i32 0, i32 1
  %2378 = load ptr, ptr %2377, align 8
  %2379 = getelementptr inbounds %struct.io_rings, ptr %2378, i32 0, i32 1, i32 2
  store volatile i32 %2376, ptr %2379, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2380 = load i16, ptr %2368, align 4
  %2381 = add i16 %2380, 1
  store i16 %2381, ptr %2368, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2367) #21
  br label %2462

2382:                                             ; preds = %31
  %2383 = icmp sgt i32 %1, -1
  br i1 %2383, label %2384, label %2462

2384:                                             ; preds = %2382
  %2385 = getelementptr inbounds %struct.io_symlink, ptr %0, i32 0, i32 2
  %2386 = load ptr, ptr %2385, align 4
  %2387 = getelementptr inbounds %struct.io_symlink, ptr %0, i32 0, i32 1
  %2388 = load i32, ptr %2387, align 4
  %2389 = getelementptr inbounds %struct.io_symlink, ptr %0, i32 0, i32 3
  %2390 = load ptr, ptr %2389, align 4
  %2391 = tail call i32 @do_symlinkat(ptr noundef %2386, i32 noundef %2388, ptr noundef %2390) #21
  %2392 = load i32, ptr %18, align 4
  %2393 = and i32 %2392, -8193
  %2394 = icmp slt i32 %2391, 0
  br i1 %2394, label %2395, label %2402

2395:                                             ; preds = %2384
  %2396 = or i32 %2393, 256
  %2397 = and i32 %2392, 64
  %2398 = icmp eq i32 %2397, 0
  %2399 = and i32 %2396, -4202561
  %2400 = or i32 %2399, 4194304
  %2401 = select i1 %2398, i32 %2396, i32 %2400
  br label %2402

2402:                                             ; preds = %2395, %2384
  %2403 = phi i32 [ %2401, %2395 ], [ %2393, %2384 ]
  store i32 %2403, ptr %18, align 4
  %2404 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2405 = load ptr, ptr %2404, align 8
  %2406 = getelementptr inbounds %struct.io_ring_ctx, ptr %2405, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2406) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2391, i32 noundef 0) #21
  %2407 = getelementptr inbounds %struct.anon.178, ptr %2405, i32 0, i32 3
  %2408 = load i8, ptr %2407, align 16
  %2409 = and i8 %2408, 48
  %2410 = icmp eq i8 %2409, 0
  br i1 %2410, label %2412, label %2411, !prof !10

2411:                                             ; preds = %2402
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2405) #24
  br label %2412

2412:                                             ; preds = %2411, %2402
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2413 = getelementptr inbounds %struct.io_ring_ctx, ptr %2405, i32 0, i32 10
  %2414 = load i32, ptr %2413, align 64
  %2415 = getelementptr inbounds %struct.anon.178, ptr %2405, i32 0, i32 1
  %2416 = load ptr, ptr %2415, align 8
  %2417 = getelementptr inbounds %struct.io_rings, ptr %2416, i32 0, i32 1, i32 2
  store volatile i32 %2414, ptr %2417, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2418 = load i16, ptr %2406, align 4
  %2419 = add i16 %2418, 1
  store i16 %2419, ptr %2406, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2405) #21
  br label %2462

2420:                                             ; preds = %31
  %2421 = icmp sgt i32 %1, -1
  br i1 %2421, label %2422, label %2462

2422:                                             ; preds = %2420
  %2423 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 1
  %2424 = load i32, ptr %2423, align 4
  %2425 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 3
  %2426 = load ptr, ptr %2425, align 4
  %2427 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 2
  %2428 = load i32, ptr %2427, align 4
  %2429 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 4
  %2430 = load ptr, ptr %2429, align 4
  %2431 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 5
  %2432 = load i32, ptr %2431, align 4
  %2433 = tail call i32 @do_linkat(i32 noundef %2424, ptr noundef %2426, i32 noundef %2428, ptr noundef %2430, i32 noundef %2432) #21
  %2434 = load i32, ptr %18, align 4
  %2435 = and i32 %2434, -8193
  %2436 = icmp slt i32 %2433, 0
  br i1 %2436, label %2437, label %2444

2437:                                             ; preds = %2422
  %2438 = or i32 %2435, 256
  %2439 = and i32 %2434, 64
  %2440 = icmp eq i32 %2439, 0
  %2441 = and i32 %2438, -4202561
  %2442 = or i32 %2441, 4194304
  %2443 = select i1 %2440, i32 %2438, i32 %2442
  br label %2444

2444:                                             ; preds = %2437, %2422
  %2445 = phi i32 [ %2443, %2437 ], [ %2435, %2422 ]
  store i32 %2445, ptr %18, align 4
  %2446 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2447 = load ptr, ptr %2446, align 8
  %2448 = getelementptr inbounds %struct.io_ring_ctx, ptr %2447, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %2448) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %2433, i32 noundef 0) #21
  %2449 = getelementptr inbounds %struct.anon.178, ptr %2447, i32 0, i32 3
  %2450 = load i8, ptr %2449, align 16
  %2451 = and i8 %2450, 48
  %2452 = icmp eq i8 %2451, 0
  br i1 %2452, label %2454, label %2453, !prof !10

2453:                                             ; preds = %2444
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %2447) #24
  br label %2454

2454:                                             ; preds = %2453, %2444
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %2455 = getelementptr inbounds %struct.io_ring_ctx, ptr %2447, i32 0, i32 10
  %2456 = load i32, ptr %2455, align 64
  %2457 = getelementptr inbounds %struct.anon.178, ptr %2447, i32 0, i32 1
  %2458 = load ptr, ptr %2457, align 8
  %2459 = getelementptr inbounds %struct.io_rings, ptr %2458, i32 0, i32 1, i32 2
  store volatile i32 %2456, ptr %2459, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %2460 = load i16, ptr %2448, align 4
  %2461 = add i16 %2460, 1
  store i16 %2461, ptr %2448, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %2447) #21
  br label %2462

2462:                                             ; preds = %2454, %2420, %2412, %2382, %2374, %2344, %2336, %2299, %2291, %2257, %2249, %2223, %2221, %2213, %2168, %2166, %2165, %2092, %2091, %1964, %1911, %1903, %1889, %1864, %1862, %1854, %1822, %1814, %1800, %1774, %1766, %1734, %1733, %1674, %1504, %1496, %1467, %1459, %1395, %1298, %1284, %1260, %1238, %1214, %1066, %1008, %895, %766, %696, %603, %574, %573, %443, %435, %402, %400, %269, %57, %45, %35, %31
  %2463 = phi i32 [ %1863, %1862 ], [ 0, %1733 ], [ %1675, %1674 ], [ %1505, %1504 ], [ 0, %1459 ], [ %1396, %1395 ], [ 0, %1214 ], [ 0, %1066 ], [ %1009, %1008 ], [ %896, %895 ], [ %767, %766 ], [ %697, %696 ], [ 0, %573 ], [ 0, %443 ], [ %401, %400 ], [ %270, %269 ], [ -22, %31 ], [ -22, %35 ], [ 0, %45 ], [ 0, %57 ], [ 0, %435 ], [ -11, %402 ], [ 0, %603 ], [ -11, %574 ], [ %1243, %1238 ], [ -11, %1260 ], [ 0, %1284 ], [ 0, %1298 ], [ 0, %1496 ], [ -11, %1467 ], [ 0, %1766 ], [ -11, %1734 ], [ 0, %1800 ], [ 0, %1814 ], [ -11, %1774 ], [ 0, %1854 ], [ -11, %1822 ], [ -11, %1864 ], [ 0, %1889 ], [ 0, %1903 ], [ 0, %1964 ], [ -11, %1911 ], [ 0, %2091 ], [ 0, %2092 ], [ 0, %2165 ], [ 0, %2166 ], [ 0, %2213 ], [ -11, %2168 ], [ 0, %2249 ], [ -11, %2221 ], [ -88, %2223 ], [ 0, %2291 ], [ -11, %2257 ], [ 0, %2336 ], [ -11, %2299 ], [ 0, %2374 ], [ -11, %2344 ], [ 0, %2412 ], [ -11, %2382 ], [ 0, %2454 ], [ -11, %2420 ]
  %2464 = icmp eq ptr %32, null
  br i1 %2464, label %2466, label %2465

2465:                                             ; preds = %2462
  call void @revert_creds(ptr noundef nonnull %32) #21
  br label %2466

2466:                                             ; preds = %2465, %2462
  %2467 = icmp eq i32 %2463, 0
  br i1 %2467, label %2468, label %2536

2468:                                             ; preds = %2466
  %2469 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %2470 = load ptr, ptr %2469, align 8
  %2471 = getelementptr inbounds %struct.anon.178, ptr %2470, i32 0, i32 2
  %2472 = load i32, ptr %2471, align 4
  %2473 = and i32 %2472, 1
  %2474 = icmp eq i32 %2473, 0
  br i1 %2474, label %2536, label %2475

2475:                                             ; preds = %2468
  %2476 = load ptr, ptr %0, align 8
  %2477 = icmp eq ptr %2476, null
  br i1 %2477, label %2536, label %2478

2478:                                             ; preds = %2475
  %2479 = and i32 %1, 2
  %2480 = icmp eq i32 %2479, 0
  br i1 %2480, label %2483, label %2481, !prof !10

2481:                                             ; preds = %2478
  %2482 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 1
  call void @mutex_lock(ptr noundef %2482) #21
  br label %2483

2483:                                             ; preds = %2481, %2478
  %2484 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 11, i32 2
  %2485 = load volatile ptr, ptr %2484, align 8
  %2486 = icmp eq ptr %2485, null
  %2487 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 11, i32 5
  br i1 %2486, label %2501, label %2488

2488:                                             ; preds = %2483
  %2489 = load i8, ptr %2487, align 8, !range !45
  %2490 = icmp eq i8 %2489, 0
  br i1 %2490, label %2491, label %2497

2491:                                             ; preds = %2488
  %2492 = getelementptr i8, ptr %2485, i32 -96
  %2493 = load ptr, ptr %2492, align 8
  %2494 = load ptr, ptr %0, align 8
  %2495 = icmp eq ptr %2493, %2494
  br i1 %2495, label %2497, label %2496

2496:                                             ; preds = %2491
  store i8 1, ptr %2487, align 8
  br label %2497

2497:                                             ; preds = %2496, %2491, %2488
  %2498 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 2
  %2499 = load volatile i8, ptr %2498, align 1
  %2500 = icmp eq i8 %2499, 0
  br i1 %2500, label %2512, label %2505

2501:                                             ; preds = %2483
  store i8 0, ptr %2487, align 8
  %2502 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 2
  %2503 = load volatile i8, ptr %2502, align 1
  %2504 = icmp eq i8 %2503, 0
  br i1 %2504, label %2512, label %2507

2505:                                             ; preds = %2497
  %2506 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  store ptr %2485, ptr %2506, align 4
  br label %2510

2507:                                             ; preds = %2501
  %2508 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  store ptr null, ptr %2508, align 4
  %2509 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 11, i32 2, i32 1
  store ptr %2508, ptr %2509, align 4
  br label %2510

2510:                                             ; preds = %2507, %2505
  %2511 = phi ptr [ %2506, %2505 ], [ %2508, %2507 ]
  store volatile ptr %2511, ptr %2484, align 4
  br label %2520

2512:                                             ; preds = %2501, %2497
  %2513 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  store ptr null, ptr %2513, align 4
  %2514 = load ptr, ptr %2484, align 4
  %2515 = icmp eq ptr %2514, null
  %2516 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 11, i32 2, i32 1
  br i1 %2515, label %2517, label %2518

2517:                                             ; preds = %2512
  store ptr %2513, ptr %2516, align 4
  store volatile ptr %2513, ptr %2484, align 4
  br label %2520

2518:                                             ; preds = %2512
  %2519 = load ptr, ptr %2516, align 4
  store ptr %2513, ptr %2519, align 4
  store ptr %2513, ptr %2516, align 4
  br label %2520

2520:                                             ; preds = %2518, %2517, %2510
  br i1 %2480, label %2536, label %2521, !prof !10

2521:                                             ; preds = %2520
  %2522 = load i32, ptr %2471, align 4
  %2523 = and i32 %2522, 2
  %2524 = icmp eq i32 %2523, 0
  br i1 %2524, label %2534, label %2525

2525:                                             ; preds = %2521
  %2526 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 5
  %2527 = load ptr, ptr %2526, align 16
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !46
  %2528 = getelementptr inbounds %struct.io_sq_data, ptr %2527, i32 0, i32 5, i32 1
  %2529 = load volatile ptr, ptr %2528, align 4
  %2530 = icmp eq ptr %2529, %2528
  br i1 %2530, label %2534, label %2531

2531:                                             ; preds = %2525
  %2532 = load ptr, ptr %2526, align 16
  %2533 = getelementptr inbounds %struct.io_sq_data, ptr %2532, i32 0, i32 5
  call void @__wake_up(ptr noundef %2533, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %2534

2534:                                             ; preds = %2531, %2525, %2521
  %2535 = getelementptr inbounds %struct.io_ring_ctx, ptr %2470, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %2535) #21
  br label %2536

2536:                                             ; preds = %2534, %2520, %2475, %2468, %2466
  ret i32 %2463
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_queue_linked_timeout(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %4) #21
  %5 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 4
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds %struct.io_timeout_data, ptr %10, i32 0, i32 1
  %12 = getelementptr inbounds %struct.io_timeout_data, ptr %10, i32 0, i32 1, i32 2
  store ptr @io_link_timeout_fn, ptr %12, align 8
  %13 = getelementptr inbounds %struct.io_timeout_data, ptr %10, i32 0, i32 2
  %14 = load i64, ptr %13, align 8
  %15 = icmp sgt i64 %14, 9223372035
  br i1 %15, label %22, label %16, !prof !11

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.io_timeout_data, ptr %10, i32 0, i32 2, i32 1
  %18 = load i64, ptr %17, align 8
  %19 = mul i64 %14, 1000000000
  %20 = and i64 %18, 4294967295
  %21 = add i64 %20, %19
  br label %22

22:                                               ; preds = %16, %8
  %23 = phi i64 [ %21, %16 ], [ 9223372036854775807, %8 ]
  %24 = getelementptr inbounds %struct.io_timeout_data, ptr %10, i32 0, i32 3
  %25 = load i32, ptr %24, align 8
  tail call void @hrtimer_start_range_ns(ptr noundef %11, i64 noundef %23, i64 noundef 0, i32 noundef %25) #21
  %26 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3
  %27 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 14
  %28 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 14, i32 1
  %29 = load ptr, ptr %28, align 4
  store ptr %26, ptr %28, align 4
  store ptr %27, ptr %26, align 4
  %30 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3, i32 1
  store ptr %29, ptr %30, align 4
  store volatile ptr %26, ptr %29, align 4
  br label %31

31:                                               ; preds = %22, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %32 = load i16, ptr %4, align 4
  %33 = add i16 %32, 1
  store i16 %33, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  %34 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, 524288
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %53, label %38, !prof !10

38:                                               ; preds = %31
  %39 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  %40 = load volatile i32, ptr %39, align 4
  %41 = add i32 %40, 127
  %42 = icmp ult i32 %41, 128
  %43 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %44 = xor i1 %43, true
  %45 = select i1 %42, i1 %44, i1 false
  br i1 %45, label %46, label %47, !prof !11

46:                                               ; preds = %38
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %47

47:                                               ; preds = %46, %38
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %39) #21, !srcloc !13
  %48 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %39, ptr %39, i32 1, ptr elementtype(i32) %39) #21, !srcloc !35
  %49 = extractvalue { i32, i32 } %48, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %68

51:                                               ; preds = %47
  %52 = load i32, ptr %34, align 4
  br label %53

53:                                               ; preds = %51, %31
  %54 = phi i32 [ %52, %51 ], [ %35, %31 ]
  %55 = and i32 %54, 12
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %67, label %57, !prof !10

57:                                               ; preds = %53
  %58 = and i32 %54, 1052928
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60, !prof !10

60:                                               ; preds = %57
  tail call fastcc void @__io_req_find_next_prep(ptr noundef %0) #21
  br label %61

61:                                               ; preds = %60, %57
  %62 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %63 = load ptr, ptr %62, align 8
  store ptr null, ptr %62, align 8
  %64 = icmp eq ptr %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.io_kiocb, ptr %63, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %66, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %63, i1 noundef zeroext false) #21
  br label %67

67:                                               ; preds = %65, %61, %53
  tail call fastcc void @__io_free_req(ptr noundef %0) #24
  br label %68

68:                                               ; preds = %67, %47
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_queue_sqe_arm_apoll(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 1048576
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %34, label %6, !prof !10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  %10 = load i1, ptr @__io_prep_linked_timeout.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !11

13:                                               ; preds = %6
  store i1 true, ptr @__io_prep_linked_timeout.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1513, i32 noundef 9, ptr noundef null) #21
  br label %14

14:                                               ; preds = %13, %6
  br i1 %9, label %34, label %15

15:                                               ; preds = %14
  %16 = load i32, ptr %2, align 4
  %17 = and i32 %16, -1052673
  %18 = or i32 %17, 4096
  store i32 %18, ptr %2, align 4
  %19 = and i32 %16, 524288
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15
  %22 = or i32 %17, 528384
  store i32 %22, ptr %2, align 4
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  store volatile i32 1, ptr %23, align 4
  br label %24

24:                                               ; preds = %21, %15
  %25 = load ptr, ptr %7, align 8
  %26 = getelementptr inbounds %struct.io_kiocb, ptr %25, i32 0, i32 4
  %27 = load i32, ptr %26, align 4
  %28 = and i32 %27, 524288
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = or i32 %27, 524288
  store i32 %31, ptr %26, align 4
  %32 = getelementptr inbounds %struct.io_kiocb, ptr %25, i32 0, i32 13
  store volatile i32 2, ptr %32, align 4
  %33 = load ptr, ptr %7, align 8
  br label %34

34:                                               ; preds = %30, %24, %14, %1
  %35 = phi ptr [ null, %1 ], [ null, %14 ], [ %25, %24 ], [ %33, %30 ]
  %36 = tail call fastcc i32 @io_arm_poll_handler(ptr noundef %0)
  switch i32 %36, label %40 [
    i32 2, label %37
    i32 1, label %39
  ]

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %38, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %40

39:                                               ; preds = %34
  tail call void @io_queue_async_work(ptr noundef %0, ptr noundef null)
  br label %40

40:                                               ; preds = %39, %37, %34
  %41 = icmp eq ptr %35, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %40
  tail call fastcc void @io_queue_linked_timeout(ptr noundef nonnull %35)
  br label %43

43:                                               ; preds = %42, %40
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @override_creds(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_poll_add(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.io_poll_table, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #21
  %4 = getelementptr inbounds i8, ptr %3, i32 4
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %4, i8 0, i32 16, i1 false), !annotation !9
  store ptr @io_poll_queue_proc, ptr %3, align 4
  %5 = getelementptr inbounds %struct.io_poll_iocb, ptr %0, i32 0, i32 2
  %6 = load i32, ptr %5, align 4
  %7 = call fastcc i32 @__io_arm_poll_handler(ptr noundef %0, ptr noundef %0, ptr noundef nonnull %3, i32 noundef %6)
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %struct.io_poll_table, ptr %3, i32 0, i32 3
  %10 = load i32, ptr %9, align 4
  %11 = select i1 %8, i32 %10, i32 %7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %39, label %13

13:                                               ; preds = %2
  %14 = and i32 %1, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %11, ptr %17, align 8
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %18, align 4
  %19 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = or i32 %20, 65536
  store i32 %21, ptr %19, align 4
  br label %39

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %24 = load ptr, ptr %23, align 8
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %24, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %25) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %11, i32 noundef 0) #21
  %26 = getelementptr inbounds %struct.anon.178, ptr %24, i32 0, i32 3
  %27 = load i8, ptr %26, align 16
  %28 = and i8 %27, 48
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30, !prof !10

30:                                               ; preds = %22
  call fastcc void @__io_commit_cqring_flush(ptr noundef %24) #24
  br label %31

31:                                               ; preds = %30, %22
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %24, i32 0, i32 10
  %33 = load i32, ptr %32, align 64
  %34 = getelementptr inbounds %struct.anon.178, ptr %24, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.io_rings, ptr %35, i32 0, i32 1, i32 2
  store volatile i32 %33, ptr %36, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %37 = load i16, ptr %25, align 4
  %38 = add i16 %37, 1
  store i16 %38, ptr %25, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %24) #21
  br label %39

39:                                               ; preds = %31, %16, %2
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_openat2(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.open_flags, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %3) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %3, i8 0, i32 20, i1 false), !annotation !9
  %4 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 2
  %5 = load i32, ptr %4, align 8
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 4
  %8 = call i32 @build_open_flags(ptr noundef %7, ptr noundef nonnull %3) #21
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %103

10:                                               ; preds = %2
  %11 = load i32, ptr %3, align 4
  %12 = and i32 %11, 2048
  %13 = icmp ne i32 %12, 0
  %14 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 4, i32 2
  %15 = load i64, ptr %14, align 8
  %16 = and i64 %15, 32
  %17 = icmp ne i64 %16, 0
  %18 = icmp sgt i32 %1, -1
  br i1 %18, label %28, label %19

19:                                               ; preds = %10
  %20 = load i64, ptr %7, align 8
  %21 = and i64 %20, 4211264
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %143

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.open_flags, ptr %3, i32 0, i32 4
  %25 = load i32, ptr %24, align 4
  %26 = or i32 %25, 2097152
  store i32 %26, ptr %24, align 4
  %27 = or i32 %11, 2048
  store i32 %27, ptr %3, align 4
  br label %28

28:                                               ; preds = %23, %10
  br i1 %6, label %29, label %36

29:                                               ; preds = %28
  %30 = load i64, ptr %7, align 8
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 5
  %33 = load i32, ptr %32, align 8
  %34 = call i32 @__get_unused_fd_flags(i32 noundef %31, i32 noundef %33) #21
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %103, label %36

36:                                               ; preds = %29, %28
  %37 = phi i32 [ 0, %28 ], [ %34, %29 ]
  %38 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 1
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 3
  %41 = load ptr, ptr %40, align 4
  %42 = call ptr @do_filp_open(i32 noundef %39, ptr noundef %41, ptr noundef nonnull %3) #21
  %43 = icmp ugt ptr %42, inttoptr (i32 -4096 to ptr)
  br i1 %43, label %44, label %52

44:                                               ; preds = %36
  br i1 %6, label %45, label %46

45:                                               ; preds = %44
  call void @put_unused_fd(i32 noundef %37) #21
  br label %46

46:                                               ; preds = %45, %44
  %47 = ptrtoint ptr %42 to i32
  %48 = icmp ne ptr %42, inttoptr (i32 -11 to ptr)
  %49 = select i1 %48, i1 true, i1 %17
  %50 = or i1 %18, %49
  %51 = select i1 %49, i32 %47, i32 -11
  br i1 %50, label %103, label %143

52:                                               ; preds = %36
  %53 = select i1 %18, i1 true, i1 %13
  %54 = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 7
  %55 = load i32, ptr %54, align 4
  br i1 %53, label %58, label %56

56:                                               ; preds = %52
  %57 = and i32 %55, -2049
  store i32 %57, ptr %54, align 4
  br label %58

58:                                               ; preds = %56, %52
  %59 = phi i32 [ %57, %56 ], [ %55, %52 ]
  %60 = and i32 %59, 32
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, i32 32, i32 4128
  %63 = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 8
  %64 = load i32, ptr %63, align 8
  %65 = and i32 %64, 67108864
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %97

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 1
  %69 = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 1, i32 1
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr inbounds %struct.dentry, ptr %70, i32 0, i32 5
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds %struct.inode, ptr %72, i32 0, i32 8
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.super_block, ptr %74, i32 0, i32 42
  %76 = load volatile i32, ptr %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %97, label %78

78:                                               ; preds = %67
  %79 = load i16, ptr %72, align 8
  %80 = and i16 %79, -4096
  %81 = icmp eq i16 %80, 16384
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = or i32 %62, 1073741824
  %84 = load i32, ptr %70, align 8
  %85 = and i32 %84, 16384
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %82, %78
  %88 = phi i32 [ %83, %82 ], [ %62, %78 ]
  %89 = getelementptr inbounds %struct.dentry, ptr %70, i32 0, i32 3
  %90 = load ptr, ptr %89, align 8
  %91 = icmp eq ptr %90, %70
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = call i32 @__fsnotify_parent(ptr noundef %70, i32 noundef %88, ptr noundef %68, i32 noundef 1) #21
  br label %97

94:                                               ; preds = %87, %82
  %95 = phi i32 [ %88, %87 ], [ %83, %82 ]
  %96 = call i32 @fsnotify(i32 noundef %95, ptr noundef %68, i32 noundef 1, ptr noundef null, ptr noundef null, ptr noundef %72, i32 noundef 0) #21
  br label %97

97:                                               ; preds = %94, %92, %67, %58
  br i1 %6, label %98, label %99

98:                                               ; preds = %97
  call void @fd_install(i32 noundef %37, ptr noundef %42) #21
  br label %103

99:                                               ; preds = %97
  %100 = load i32, ptr %4, align 8
  %101 = add i32 %100, -1
  %102 = call fastcc i32 @io_install_fixed_file(ptr noundef %0, ptr noundef %42, i32 noundef %1, i32 noundef %101)
  br label %103

103:                                              ; preds = %99, %98, %46, %29, %2
  %104 = phi i32 [ %8, %2 ], [ %51, %46 ], [ %102, %99 ], [ %37, %98 ], [ %34, %29 ]
  %105 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 3
  %106 = load ptr, ptr %105, align 4
  call void @putname(ptr noundef %106) #21
  %107 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %108 = load i32, ptr %107, align 4
  %109 = and i32 %108, -8193
  %110 = icmp slt i32 %104, 0
  br i1 %110, label %111, label %118

111:                                              ; preds = %103
  %112 = or i32 %109, 256
  %113 = and i32 %108, 64
  %114 = icmp eq i32 %113, 0
  %115 = and i32 %112, -4202561
  %116 = or i32 %115, 4194304
  %117 = select i1 %114, i32 %112, i32 %116
  br label %118

118:                                              ; preds = %111, %103
  %119 = phi i32 [ %117, %111 ], [ %109, %103 ]
  store i32 %119, ptr %107, align 4
  %120 = and i32 %1, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %104, ptr %123, align 8
  %124 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 0, ptr %124, align 4
  %125 = or i32 %119, 65536
  store i32 %125, ptr %107, align 4
  br label %143

126:                                              ; preds = %118
  %127 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds %struct.io_ring_ctx, ptr %128, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %129) #21
  call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %104, i32 noundef 0) #21
  %130 = getelementptr inbounds %struct.anon.178, ptr %128, i32 0, i32 3
  %131 = load i8, ptr %130, align 16
  %132 = and i8 %131, 48
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %135, label %134, !prof !10

134:                                              ; preds = %126
  call fastcc void @__io_commit_cqring_flush(ptr noundef %128) #24
  br label %135

135:                                              ; preds = %134, %126
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %136 = getelementptr inbounds %struct.io_ring_ctx, ptr %128, i32 0, i32 10
  %137 = load i32, ptr %136, align 64
  %138 = getelementptr inbounds %struct.anon.178, ptr %128, i32 0, i32 1
  %139 = load ptr, ptr %138, align 8
  %140 = getelementptr inbounds %struct.io_rings, ptr %139, i32 0, i32 1, i32 2
  store volatile i32 %137, ptr %140, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %141 = load i16, ptr %129, align 4
  %142 = add i16 %141, 1
  store i16 %142, ptr %129, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef %128) #21
  br label %143

143:                                              ; preds = %135, %122, %46, %19
  %144 = phi i32 [ -11, %19 ], [ -11, %46 ], [ 0, %122 ], [ 0, %135 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %3) #21
  ret i32 %144
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @revert_creds(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 64
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %87

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %12 = load i64, ptr %11, align 8
  %13 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 1), align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %38

15:                                               ; preds = %10
  %16 = tail call ptr @llvm.thread.pointer() #21
  %17 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = lshr i32 %18, 5
  %20 = getelementptr i32, ptr @__cpu_online_mask, i32 %19
  %21 = load volatile i32, ptr %20, align 4
  %22 = and i32 %18, 31
  %23 = shl nuw i32 1, %22
  %24 = and i32 %23, %21
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %15
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !56
  %27 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %29, %26
  %30 = phi ptr [ %34, %29 ], [ %27, %26 ]
  %31 = load volatile ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.tracepoint_func, ptr %30, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  tail call void %31(ptr noundef %33, ptr noundef %5, i64 noundef %12, i32 noundef %1, i32 noundef %2) #21
  %34 = getelementptr %struct.tracepoint_func, ptr %30, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %29

37:                                               ; preds = %29, %26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !57
  br label %38

38:                                               ; preds = %37, %15, %10
  %39 = getelementptr inbounds %struct.anon.178, ptr %5, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  %41 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 10, i32 1
  %42 = load i32, ptr %41, align 4
  %43 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 10
  %44 = load i32, ptr %43, align 64
  %45 = getelementptr inbounds %struct.io_rings, ptr %40, i32 0, i32 1
  %46 = load volatile i32, ptr %45, align 64
  %47 = sub i32 %44, %46
  %48 = icmp eq i32 %47, %42
  br i1 %48, label %58, label %49

49:                                               ; preds = %38
  %50 = add i32 %42, -1
  %51 = add i32 %44, 1
  store i32 %51, ptr %43, align 64
  %52 = and i32 %44, %50
  %53 = getelementptr %struct.io_rings, ptr %40, i32 0, i32 11, i32 %52
  %54 = icmp eq ptr %53, null
  br i1 %54, label %58, label %55, !prof !11

55:                                               ; preds = %49
  store volatile i64 %12, ptr %53, align 8
  %56 = getelementptr %struct.io_rings, ptr %40, i32 0, i32 11, i32 %52, i32 1
  store volatile i32 %1, ptr %56, align 8
  %57 = getelementptr %struct.io_rings, ptr %40, i32 0, i32 11, i32 %52, i32 2
  store volatile i32 %2, ptr %57, align 4
  br label %87

58:                                               ; preds = %49, %38
  %59 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %60 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %59, i32 noundef 4196896, i32 noundef 24) #25
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %70

62:                                               ; preds = %58
  %63 = load ptr, ptr %39, align 8
  %64 = getelementptr inbounds %struct.io_rings, ptr %63, i32 0, i32 9
  %65 = load volatile i32, ptr %64, align 4
  %66 = add i32 %65, 1
  store volatile i32 %66, ptr %64, align 4
  %67 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 10, i32 4
  %68 = load i32, ptr %67, align 8
  %69 = add i32 %68, -1
  store i32 %69, ptr %67, align 8
  br label %87

70:                                               ; preds = %58
  %71 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 1, i32 15
  %72 = load volatile ptr, ptr %71, align 4
  %73 = icmp eq ptr %72, %71
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 0, ptr noundef %75) #21
  %76 = load ptr, ptr %39, align 8
  %77 = getelementptr inbounds %struct.io_rings, ptr %76, i32 0, i32 7
  %78 = load i32, ptr %77, align 4
  %79 = or i32 %78, 2
  store volatile i32 %79, ptr %77, align 4
  br label %80

80:                                               ; preds = %74, %70
  store i64 %12, ptr %60, align 8
  %81 = getelementptr inbounds %struct.io_uring_cqe, ptr %60, i32 0, i32 1
  store i32 %1, ptr %81, align 8
  %82 = getelementptr inbounds %struct.io_uring_cqe, ptr %60, i32 0, i32 2
  store i32 %2, ptr %82, align 4
  %83 = getelementptr inbounds %struct.io_overflow_cqe, ptr %60, i32 0, i32 1
  %84 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 1, i32 15, i32 1
  %85 = load ptr, ptr %84, align 4
  store ptr %83, ptr %84, align 4
  store ptr %71, ptr %83, align 8
  %86 = getelementptr inbounds %struct.io_overflow_cqe, ptr %60, i32 0, i32 1, i32 1
  store ptr %85, ptr %86, align 4
  store volatile ptr %83, ptr %85, align 4
  br label %87

87:                                               ; preds = %80, %62, %55, %3
  %88 = load i32, ptr %6, align 4
  %89 = and i32 %88, 524288
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %106, label %91, !prof !10

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  %93 = load volatile i32, ptr %92, align 4
  %94 = add i32 %93, 127
  %95 = icmp ult i32 %94, 128
  %96 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %97 = xor i1 %96, true
  %98 = select i1 %95, i1 %97, i1 false
  br i1 %98, label %99, label %100, !prof !11

99:                                               ; preds = %91
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %100

100:                                              ; preds = %99, %91
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %92) #21, !srcloc !13
  %101 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %92, ptr %92, i32 1, ptr elementtype(i32) %92) #21, !srcloc !35
  %102 = extractvalue { i32, i32 } %101, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %199

104:                                              ; preds = %100
  %105 = load i32, ptr %6, align 4
  br label %106

106:                                              ; preds = %104, %87
  %107 = phi i32 [ %105, %104 ], [ %88, %87 ]
  %108 = and i32 %107, 12
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %106
  %111 = and i32 %107, 1052928
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  %114 = tail call fastcc zeroext i1 @io_disarm_next(ptr noundef %0)
  br label %115

115:                                              ; preds = %113, %110
  %116 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %117 = load ptr, ptr %116, align 8
  %118 = icmp eq ptr %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.io_kiocb, ptr %117, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %120, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %117, i1 noundef zeroext false) #21
  store ptr null, ptr %116, align 8
  br label %121

121:                                              ; preds = %119, %115, %106
  %122 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 10
  %123 = load ptr, ptr %122, align 8
  %124 = icmp eq ptr %123, null
  br i1 %124, label %149, label %125

125:                                              ; preds = %121
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %126 = load volatile i32, ptr %123, align 4
  %127 = and i32 %126, 3
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %138, !prof !10

129:                                              ; preds = %125
  %130 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %131 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %132 = inttoptr i32 %131 to ptr
  %133 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %132) #6, !srcloc !12
  %134 = add i32 %133, %126
  %135 = inttoptr i32 %134 to ptr
  %136 = load i32, ptr %135, align 4
  %137 = add i32 %136, -1
  store i32 %137, ptr %135, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %130) #21, !srcloc !22
  br label %148

138:                                              ; preds = %125
  %139 = getelementptr inbounds %struct.percpu_ref, ptr %123, i32 0, i32 1
  %140 = load ptr, ptr %139, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %140) #21, !srcloc !13
  %141 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %140, ptr %140, i32 1, ptr elementtype(i32) %140) #21, !srcloc !35
  %142 = extractvalue { i32, i32 } %141, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %148, !prof !11

144:                                              ; preds = %138
  %145 = load ptr, ptr %139, align 4
  %146 = getelementptr inbounds %struct.percpu_ref_data, ptr %145, i32 0, i32 1
  %147 = load ptr, ptr %146, align 4
  tail call void %147(ptr noundef nonnull %123) #21
  br label %148

148:                                              ; preds = %144, %138, %129
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %149

149:                                              ; preds = %148, %121
  %150 = load i32, ptr %6, align 4
  %151 = and i32 %150, 2417152
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %154, label %153, !prof !10

153:                                              ; preds = %149
  tail call fastcc void @io_clean_op(ptr noundef %0) #21
  br label %154

154:                                              ; preds = %153, %149
  %155 = and i32 %150, 1
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %161

157:                                              ; preds = %154
  %158 = load ptr, ptr %0, align 8
  %159 = icmp eq ptr %158, null
  br i1 %159, label %161, label %160

160:                                              ; preds = %157
  tail call void @fput(ptr noundef nonnull %158) #21
  br label %161

161:                                              ; preds = %160, %157, %154
  %162 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %163 = load ptr, ptr %162, align 4
  %164 = getelementptr inbounds %struct.task_struct, ptr %163, i32 0, i32 91
  %165 = load ptr, ptr %164, align 8
  %166 = tail call ptr @llvm.thread.pointer() #21
  %167 = icmp eq ptr %166, %163
  br i1 %167, label %168, label %171, !prof !10

168:                                              ; preds = %161
  %169 = load i32, ptr %165, align 8
  %170 = add i32 %169, 1
  store i32 %170, ptr %165, align 8
  br label %188

171:                                              ; preds = %161
  %172 = getelementptr inbounds %struct.io_uring_task, ptr %165, i32 0, i32 5
  %173 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %172, i64 noundef -1, i32 noundef %173) #21
  %174 = getelementptr inbounds %struct.io_uring_task, ptr %165, i32 0, i32 7
  %175 = load volatile i32, ptr %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %179, label %177, !prof !10

177:                                              ; preds = %171
  %178 = getelementptr inbounds %struct.io_uring_task, ptr %165, i32 0, i32 2
  tail call void @__wake_up(ptr noundef %178, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %179

179:                                              ; preds = %177, %171
  %180 = getelementptr inbounds %struct.task_struct, ptr %163, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %180) #21, !srcloc !13
  %181 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %180, ptr %180, i32 1, ptr elementtype(i32) %180) #21, !srcloc !50
  %182 = extractvalue { i32, i32, i32 } %181, 0
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %187, label %184

184:                                              ; preds = %179
  %185 = icmp sgt i32 %182, 0
  br i1 %185, label %188, label %186, !prof !10

186:                                              ; preds = %184
  tail call void @refcount_warn_saturate(ptr noundef %180, i32 noundef 3) #21
  br label %188

187:                                              ; preds = %179
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  tail call void @__put_task_struct(ptr noundef %163) #21
  br label %188

188:                                              ; preds = %187, %186, %184, %168
  %189 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  %190 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 2
  %191 = load ptr, ptr %190, align 4
  store ptr %191, ptr %189, align 4
  %192 = icmp eq ptr %191, null
  br i1 %192, label %193, label %195

193:                                              ; preds = %188
  %194 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 2, i32 1
  store ptr %189, ptr %194, align 4
  br label %195

195:                                              ; preds = %193, %188
  store volatile ptr %189, ptr %190, align 4
  %196 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 3
  %197 = load i32, ptr %196, align 8
  %198 = add i32 %197, 1
  store i32 %198, ptr %196, align 8
  br label %199

199:                                              ; preds = %195, %100
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_clean_op(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 32768
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %8 = load ptr, ptr %7, align 8
  %9 = and i32 %3, -32769
  store i32 %9, ptr %2, align 4
  tail call void @kfree(ptr noundef %8) #21
  store ptr null, ptr %7, align 8
  %10 = load i32, ptr %2, align 4
  br label %11

11:                                               ; preds = %6, %1
  %12 = phi i32 [ %10, %6 ], [ %3, %1 ]
  %13 = and i32 %12, 8192
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %63, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %17 = load i8, ptr %16, align 8
  switch i8 %17, label %63 [
    i8 1, label %18
    i8 4, label %18
    i8 22, label %18
    i8 2, label %18
    i8 5, label %18
    i8 23, label %18
    i8 10, label %23
    i8 9, label %23
    i8 30, label %28
    i8 33, label %28
    i8 18, label %37
    i8 28, label %37
    i8 35, label %42
    i8 36, label %47
    i8 37, label %50
    i8 38, label %53
    i8 39, label %58
  ]

18:                                               ; preds = %15, %15, %15, %15, %15, %15
  %19 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds %struct.io_async_rw, ptr %20, i32 0, i32 1
  %22 = load ptr, ptr %21, align 8
  tail call void @kfree(ptr noundef %22) #21
  br label %63

23:                                               ; preds = %15, %15
  %24 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr inbounds %struct.io_async_msghdr, ptr %25, i32 0, i32 1
  %27 = load ptr, ptr %26, align 8
  tail call void @kfree(ptr noundef %27) #21
  br label %63

28:                                               ; preds = %15, %15
  %29 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 5
  %30 = load i32, ptr %29, align 8
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %32, label %63

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = icmp eq ptr %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %32
  tail call void @fput(ptr noundef nonnull %34) #21
  br label %63

37:                                               ; preds = %15, %15
  %38 = getelementptr inbounds %struct.io_open, ptr %0, i32 0, i32 3
  %39 = load ptr, ptr %38, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %37
  tail call void @putname(ptr noundef nonnull %39) #21
  br label %63

42:                                               ; preds = %15
  %43 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 3
  %44 = load ptr, ptr %43, align 4
  tail call void @putname(ptr noundef %44) #21
  %45 = getelementptr inbounds %struct.io_rename, ptr %0, i32 0, i32 4
  %46 = load ptr, ptr %45, align 8
  tail call void @putname(ptr noundef %46) #21
  br label %63

47:                                               ; preds = %15
  %48 = getelementptr inbounds %struct.io_unlink, ptr %0, i32 0, i32 3
  %49 = load ptr, ptr %48, align 4
  tail call void @putname(ptr noundef %49) #21
  br label %63

50:                                               ; preds = %15
  %51 = getelementptr inbounds %struct.io_mkdir, ptr %0, i32 0, i32 3
  %52 = load ptr, ptr %51, align 4
  tail call void @putname(ptr noundef %52) #21
  br label %63

53:                                               ; preds = %15
  %54 = getelementptr inbounds %struct.io_symlink, ptr %0, i32 0, i32 2
  %55 = load ptr, ptr %54, align 8
  tail call void @putname(ptr noundef %55) #21
  %56 = getelementptr inbounds %struct.io_symlink, ptr %0, i32 0, i32 3
  %57 = load ptr, ptr %56, align 4
  tail call void @putname(ptr noundef %57) #21
  br label %63

58:                                               ; preds = %15
  %59 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 3
  %60 = load ptr, ptr %59, align 4
  tail call void @putname(ptr noundef %60) #21
  %61 = getelementptr inbounds %struct.io_hardlink, ptr %0, i32 0, i32 4
  %62 = load ptr, ptr %61, align 8
  tail call void @putname(ptr noundef %62) #21
  br label %63

63:                                               ; preds = %58, %53, %50, %47, %42, %41, %37, %36, %32, %28, %23, %18, %15, %11
  %64 = load i32, ptr %2, align 4
  %65 = and i32 %64, 16384
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %76, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 17
  %69 = load ptr, ptr %68, align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.async_poll, ptr %69, i32 0, i32 1
  %73 = load ptr, ptr %72, align 4
  tail call void @kfree(ptr noundef %73) #21
  %74 = load ptr, ptr %68, align 4
  tail call void @kfree(ptr noundef %74) #21
  store ptr null, ptr %68, align 4
  %75 = load i32, ptr %2, align 4
  br label %76

76:                                               ; preds = %71, %67, %63
  %77 = phi i32 [ %75, %71 ], [ %64, %67 ], [ %64, %63 ]
  %78 = and i32 %77, 512
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %88, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %82 = load ptr, ptr %81, align 4
  %83 = getelementptr inbounds %struct.task_struct, ptr %82, i32 0, i32 91
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds %struct.io_uring_task, ptr %84, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %85) #21, !srcloc !13
  %86 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %85, ptr %85, i32 1, ptr elementtype(i32) %85) #21, !srcloc !16
  %87 = load i32, ptr %2, align 4
  br label %88

88:                                               ; preds = %80, %76
  %89 = phi i32 [ %87, %80 ], [ %77, %76 ]
  %90 = and i32 %89, 262144
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 20
  %94 = load ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %92
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %94) #21, !srcloc !13
  %97 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %94, ptr nonnull %94, i32 1, ptr nonnull elementtype(i32) %94) #21, !srcloc !35
  %98 = extractvalue { i32, i32 } %97, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  tail call void @__put_cred(ptr noundef nonnull %94) #21
  br label %101

101:                                              ; preds = %100, %96, %92, %88
  %102 = load i32, ptr %2, align 4
  %103 = and i32 %102, 2097152
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %107 = load ptr, ptr %106, align 8
  tail call void @kfree(ptr noundef %107) #21
  store ptr null, ptr %106, align 8
  %108 = load i32, ptr %2, align 4
  br label %109

109:                                              ; preds = %105, %101
  %110 = phi i32 [ %108, %105 ], [ %102, %101 ]
  %111 = and i32 %110, -2417153
  store i32 %111, ptr %2, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @putname(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_import_iovec(i32 noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) unnamed_addr #8 {
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 1
  %10 = load i8, ptr %9, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #21
  %11 = and i8 %10, -2
  %12 = icmp eq i8 %11, 4
  br i1 %12, label %13, label %114

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 11
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %67, !prof !10

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 3
  %19 = load i16, ptr %18, align 2
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 8
  %21 = load ptr, ptr %20, align 8
  %22 = zext i16 %19 to i32
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 10
  %24 = load i32, ptr %23, align 4
  %25 = icmp ugt i32 %24, %22
  br i1 %25, label %26, label %236, !prof !10

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 10
  %28 = load ptr, ptr %27, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %57

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 6
  %32 = load ptr, ptr %31, align 4
  store ptr %32, ptr %27, align 8
  %33 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 7
  %34 = load i32, ptr %33, align 16
  %35 = add i32 %34, -1
  store i32 %35, ptr %33, align 16
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %57, !prof !11

37:                                               ; preds = %30
  %38 = add nsw i32 %34, 99
  store i32 %38, ptr %33, align 16
  %39 = load ptr, ptr %31, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %40 = load volatile i32, ptr %39, align 4
  %41 = and i32 %40, 3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %52, !prof !10

43:                                               ; preds = %37
  %44 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %45 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %46 = inttoptr i32 %45 to ptr
  %47 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %46) #6, !srcloc !12
  %48 = add i32 %47, %40
  %49 = inttoptr i32 %48 to ptr
  %50 = load i32, ptr %49, align 4
  %51 = add i32 %50, 100
  store i32 %51, ptr %49, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %44) #21, !srcloc !22
  br label %56

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.percpu_ref, ptr %39, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %54) #21, !srcloc !13
  %55 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %54, ptr %54, i32 100, ptr elementtype(i32) %54) #21, !srcloc !14
  br label %56

56:                                               ; preds = %52, %43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %57

57:                                               ; preds = %56, %30, %26
  %58 = load i32, ptr %23, align 4
  %59 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %22, i32 %58) #21, !srcloc !40
  %60 = trunc i32 %59 to i16
  %61 = and i16 %19, %60
  %62 = getelementptr inbounds %struct.io_ring_ctx, ptr %21, i32 0, i32 1, i32 11
  %63 = load ptr, ptr %62, align 64
  %64 = zext i16 %61 to i32
  %65 = getelementptr ptr, ptr %63, i32 %64
  %66 = load volatile ptr, ptr %65, align 4
  store ptr %66, ptr %14, align 4
  br label %67

67:                                               ; preds = %57, %13
  %68 = phi ptr [ %15, %13 ], [ %66, %57 ]
  %69 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 2
  %70 = load i64, ptr %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 1
  %73 = load i64, ptr %72, align 8
  %74 = and i64 %70, 4294967295
  %75 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %73, i64 %74) #21
  %76 = extractvalue { i64, i1 } %75, 1
  %77 = extractvalue { i64, i1 } %75, 0
  br i1 %76, label %236, label %78, !prof !11

78:                                               ; preds = %67
  %79 = load i64, ptr %68, align 8
  %80 = icmp ult i64 %73, %79
  br i1 %80, label %236, label %81, !prof !11

81:                                               ; preds = %78
  %82 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %68, i32 0, i32 1
  %83 = load i64, ptr %82, align 8
  %84 = icmp ugt i64 %77, %83
  br i1 %84, label %236, label %85, !prof !11

85:                                               ; preds = %81
  %86 = sub i64 %73, %79
  %87 = trunc i64 %86 to i32
  %88 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %68, i32 0, i32 4
  %89 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %68, i32 0, i32 2
  %90 = load i32, ptr %89, align 8
  %91 = add i32 %87, %71
  tail call void @iov_iter_bvec(ptr noundef %3, i32 noundef %0, ptr noundef %88, i32 noundef %90, i32 noundef %91) #21
  %92 = icmp eq i32 %87, 0
  br i1 %92, label %238, label %93

93:                                               ; preds = %85
  %94 = getelementptr inbounds %struct.bio_vec, ptr %88, i32 0, i32 1
  %95 = load i32, ptr %94, align 4
  %96 = icmp ult i32 %95, %87
  br i1 %96, label %98, label %97

97:                                               ; preds = %93
  tail call void @iov_iter_advance(ptr noundef %3, i32 noundef %87) #21
  br label %238

98:                                               ; preds = %93
  %99 = sub i32 %87, %95
  %100 = lshr i32 %99, 12
  %101 = add nuw nsw i32 %100, 1
  %102 = getelementptr %struct.bio_vec, ptr %88, i32 %101
  %103 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 5
  store ptr %102, ptr %103, align 4
  %104 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 6
  %105 = load i32, ptr %104, align 8
  %106 = sub i32 %105, %101
  store i32 %106, ptr %104, align 8
  %107 = load i32, ptr %94, align 4
  %108 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 4
  %109 = load i32, ptr %108, align 8
  %110 = add i32 %107, %99
  %111 = sub i32 %109, %110
  store i32 %111, ptr %108, align 8
  %112 = and i32 %99, 4095
  %113 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 3
  store i32 %112, ptr %113, align 4
  br label %238

114:                                              ; preds = %5
  %115 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 3
  %116 = load i16, ptr %115, align 2
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 4
  %120 = load i32, ptr %119, align 4
  %121 = and i32 %120, 32
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %236, label %123, !prof !11

123:                                              ; preds = %118, %114
  %124 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 1
  %125 = load i64, ptr %124, align 8
  %126 = trunc i64 %125 to i32
  %127 = inttoptr i32 %126 to ptr
  %128 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 2
  %129 = load i64, ptr %128, align 8
  %130 = trunc i64 %129 to i32
  store i32 %130, ptr %8, align 4
  %131 = icmp eq i8 %11, 22
  br i1 %131, label %132, label %158

132:                                              ; preds = %123
  %133 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 4
  %134 = load i32, ptr %133, align 4
  %135 = and i32 %134, 32
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %152, label %137

137:                                              ; preds = %132
  %138 = zext i16 %116 to i32
  %139 = call fastcc ptr @io_buffer_select(ptr noundef %1, ptr noundef nonnull %8, i32 noundef %138, i32 noundef %4) #21
  %140 = icmp ugt ptr %139, inttoptr (i32 -4096 to ptr)
  br i1 %140, label %146, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.io_buffer, ptr %139, i32 0, i32 1
  %143 = load i64, ptr %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = inttoptr i32 %144 to ptr
  br label %146

146:                                              ; preds = %141, %137
  %147 = phi ptr [ %145, %141 ], [ %139, %137 ]
  %148 = icmp ugt ptr %147, inttoptr (i32 -4096 to ptr)
  br i1 %148, label %239, label %149

149:                                              ; preds = %146
  %150 = load i32, ptr %8, align 4
  %151 = zext i32 %150 to i64
  store i64 %151, ptr %128, align 8
  br label %152

152:                                              ; preds = %149, %132
  %153 = phi i32 [ %150, %149 ], [ %130, %132 ]
  %154 = phi ptr [ %147, %149 ], [ %127, %132 ]
  %155 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 2
  %156 = tail call i32 @import_single_range(i32 noundef %0, ptr noundef %154, i32 noundef %153, ptr noundef %155, ptr noundef %3) #21
  %157 = inttoptr i32 %156 to ptr
  br label %239

158:                                              ; preds = %123
  %159 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 2
  store ptr %159, ptr %7, align 4
  %160 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 4
  %161 = load i32, ptr %160, align 4
  %162 = and i32 %161, 32
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %223, label %164

164:                                              ; preds = %158
  %165 = and i32 %161, 32768
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %177, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 21
  %169 = load ptr, ptr %168, align 8
  %170 = getelementptr inbounds %struct.io_buffer, ptr %169, i32 0, i32 1
  %171 = load i64, ptr %170, align 8
  %172 = trunc i64 %171 to i32
  %173 = inttoptr i32 %172 to ptr
  store ptr %173, ptr %159, align 4
  %174 = getelementptr inbounds %struct.io_buffer, ptr %169, i32 0, i32 2
  %175 = load i32, ptr %174, align 8
  %176 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 2, i32 0, i32 1
  store i32 %175, ptr %176, align 4
  br label %221

177:                                              ; preds = %164
  %178 = icmp eq i64 %129, 1
  br i1 %178, label %179, label %218

179:                                              ; preds = %177
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  %180 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %127, i32 8, i32 -1090519040) #23, !srcloc !27
  %181 = extractvalue { i32, i32 } %180, 0
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %191, !prof !10

183:                                              ; preds = %179
  %184 = tail call ptr @llvm.thread.pointer() #21
  %185 = getelementptr inbounds %struct.thread_info, ptr %184, i32 0, i32 3
  %186 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %185) #6, !srcloc !28
  %187 = and i32 %186, -13
  %188 = or i32 %187, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %188) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %189 = tail call i32 @arm_copy_from_user(ptr noundef %159, ptr noundef %127, i32 noundef 8) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %186) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %195, label %191, !prof !10

191:                                              ; preds = %183, %179
  %192 = phi i32 [ %189, %183 ], [ 8, %179 ]
  %193 = sub i32 8, %192
  %194 = getelementptr i8, ptr %159, i32 %193
  tail call void @llvm.memset.p0.i32(ptr align 1 %194, i8 0, i32 %192, i1 false) #21
  br label %214

195:                                              ; preds = %183
  %196 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 2, i32 0, i32 1
  %197 = load i32, ptr %196, align 4
  store i32 %197, ptr %6, align 4
  %198 = icmp slt i32 %197, 0
  br i1 %198, label %214, label %199

199:                                              ; preds = %195
  %200 = load i16, ptr %115, align 2
  %201 = zext i16 %200 to i32
  %202 = call fastcc ptr @io_buffer_select(ptr noundef %1, ptr noundef nonnull %6, i32 noundef %201, i32 noundef %4) #21
  %203 = icmp ugt ptr %202, inttoptr (i32 -4096 to ptr)
  br i1 %203, label %209, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %struct.io_buffer, ptr %202, i32 0, i32 1
  %206 = load i64, ptr %205, align 8
  %207 = trunc i64 %206 to i32
  %208 = inttoptr i32 %207 to ptr
  br label %209

209:                                              ; preds = %204, %199
  %210 = phi ptr [ %208, %204 ], [ %202, %199 ]
  %211 = icmp ugt ptr %210, inttoptr (i32 -4096 to ptr)
  br i1 %211, label %216, label %212

212:                                              ; preds = %209
  store ptr %210, ptr %159, align 4
  %213 = load i32, ptr %6, align 4
  store i32 %213, ptr %196, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %221

214:                                              ; preds = %195, %191
  %215 = phi i32 [ -14, %191 ], [ -22, %195 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %218

216:                                              ; preds = %209
  %217 = ptrtoint ptr %210 to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  br label %218

218:                                              ; preds = %216, %214, %177
  %219 = phi i32 [ %217, %216 ], [ %215, %214 ], [ -22, %177 ]
  %220 = inttoptr i32 %219 to ptr
  br label %239

221:                                              ; preds = %212, %167
  %222 = phi i32 [ %213, %212 ], [ %175, %167 ]
  tail call void @iov_iter_init(ptr noundef %3, i32 noundef %0, ptr noundef %159, i32 noundef 1, i32 noundef %222) #21
  br label %238

223:                                              ; preds = %158
  %224 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 8
  %225 = load ptr, ptr %224, align 8
  %226 = getelementptr inbounds %struct.anon.178, ptr %225, i32 0, i32 3
  %227 = load i8, ptr %226, align 16
  %228 = and i8 %227, 1
  %229 = icmp ne i8 %228, 0
  %230 = call i32 @__import_iovec(i32 noundef %0, ptr noundef %127, i32 noundef %130, i32 noundef 8, ptr noundef nonnull %7, ptr noundef %3, i1 noundef zeroext %229) #21
  %231 = icmp slt i32 %230, 0
  br i1 %231, label %232, label %234, !prof !11

232:                                              ; preds = %223
  %233 = inttoptr i32 %230 to ptr
  br label %239

234:                                              ; preds = %223
  %235 = load ptr, ptr %7, align 4
  br label %239

236:                                              ; preds = %118, %81, %78, %67, %17
  %237 = phi ptr [ inttoptr (i32 -14 to ptr), %78 ], [ inttoptr (i32 -14 to ptr), %81 ], [ inttoptr (i32 -14 to ptr), %67 ], [ inttoptr (i32 -14 to ptr), %17 ], [ inttoptr (i32 -22 to ptr), %118 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  store ptr %237, ptr %2, align 4
  br label %242

238:                                              ; preds = %221, %98, %97, %85
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  store ptr null, ptr %2, align 4
  br label %245

239:                                              ; preds = %234, %232, %218, %152, %146
  %240 = phi ptr [ %220, %218 ], [ %233, %232 ], [ %235, %234 ], [ %147, %146 ], [ %157, %152 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  store ptr %240, ptr %2, align 4
  %241 = icmp ugt ptr %240, inttoptr (i32 -4096 to ptr)
  br i1 %241, label %242, label %245, !prof !11

242:                                              ; preds = %239, %236
  %243 = phi ptr [ %237, %236 ], [ %240, %239 ]
  %244 = ptrtoint ptr %243 to i32
  br label %255

245:                                              ; preds = %239, %238
  %246 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 1
  %247 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 3
  %248 = load i32, ptr %247, align 4
  store i32 %248, ptr %246, align 4
  %249 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 4
  %250 = load i32, ptr %249, align 8
  %251 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 1, i32 1
  store i32 %250, ptr %251, align 4
  %252 = getelementptr inbounds %struct.iov_iter, ptr %3, i32 0, i32 6
  %253 = load i32, ptr %252, align 8
  %254 = getelementptr inbounds %struct.io_rw_state, ptr %3, i32 0, i32 1, i32 2
  store i32 %253, ptr %254, align 4
  br label %255

255:                                              ; preds = %245, %242
  %256 = phi i32 [ %244, %242 ], [ 0, %245 ]
  ret i32 %256
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iov_iter_restore(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_setup_async_rw(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3) unnamed_addr #0 {
  br i1 %3, label %13, label %5

5:                                                ; preds = %4
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %7 = load i8, ptr %6, align 8
  %8 = zext i8 %7 to i32
  %9 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %8
  %10 = load i16, ptr %9, align 4
  %11 = and i16 %10, 128
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %86, label %13

13:                                               ; preds = %5, %4
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, 2097152
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %86

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %20 = load i8, ptr %19, align 8
  %21 = zext i8 %20 to i32
  %22 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %21, i32 1
  %23 = load i16, ptr %22, align 2
  %24 = icmp eq i16 %23, 0
  %25 = load i1, ptr @io_alloc_async_data.__already_done, align 1
  %26 = xor i1 %25, true
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %33, !prof !11

28:                                               ; preds = %18
  store i1 true, ptr @io_alloc_async_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3482, i32 noundef 9, ptr noundef null) #21
  %29 = load i8, ptr %19, align 8
  %30 = zext i8 %29 to i32
  %31 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %30, i32 1
  %32 = load i16, ptr %31, align 2
  br label %33

33:                                               ; preds = %28, %18
  %34 = phi i16 [ %32, %28 ], [ %23, %18 ]
  %35 = zext i16 %34 to i32
  %36 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %35, i32 noundef 3264) #26
  %37 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  store ptr %36, ptr %37, align 8
  %38 = icmp eq ptr %36, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %33
  %40 = load i32, ptr %14, align 4
  %41 = or i32 %40, 2097152
  store i32 %41, ptr %14, align 4
  %42 = getelementptr inbounds %struct.io_rw_state, ptr %2, i32 0, i32 2
  %43 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 64 dereferenceable(24) %36, ptr noundef align 8 dereferenceable(24) %2, i32 24, i1 false) #21
  %44 = getelementptr inbounds %struct.io_async_rw, ptr %36, i32 0, i32 1
  store ptr %1, ptr %44, align 8
  %45 = getelementptr inbounds %struct.io_async_rw, ptr %36, i32 0, i32 2
  store i32 0, ptr %45, align 4
  %46 = load i8, ptr %2, align 8
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %74, label %48

48:                                               ; preds = %39
  %49 = icmp eq ptr %1, null
  br i1 %49, label %50, label %71

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.io_rw_state, ptr %36, i32 0, i32 2
  %52 = getelementptr inbounds %struct.iov_iter, ptr %36, i32 0, i32 5
  store ptr %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.iov_iter, ptr %2, i32 0, i32 5
  %54 = load ptr, ptr %53, align 4
  %55 = icmp eq ptr %54, %42
  br i1 %55, label %62, label %56

56:                                               ; preds = %50
  %57 = ptrtoint ptr %54 to i32
  %58 = ptrtoint ptr %42 to i32
  %59 = sub i32 %57, %58
  %60 = ashr exact i32 %59, 3
  %61 = getelementptr %struct.iovec, ptr %51, i32 %60
  store ptr %61, ptr %52, align 4
  br label %62

62:                                               ; preds = %56, %50
  %63 = phi i32 [ %60, %56 ], [ 0, %50 ]
  %64 = icmp eq ptr %36, %2
  br i1 %64, label %74, label %65

65:                                               ; preds = %62
  %66 = getelementptr %struct.iovec, ptr %51, i32 %63
  %67 = getelementptr %struct.iovec, ptr %42, i32 %63
  %68 = getelementptr inbounds %struct.iov_iter, ptr %2, i32 0, i32 6
  %69 = load i32, ptr %68, align 8
  %70 = shl i32 %69, 3
  tail call void @llvm.memcpy.p0.p0.i32(ptr align 4 %66, ptr align 4 %67, i32 %70, i1 false) #21
  br label %74

71:                                               ; preds = %48
  %72 = load i32, ptr %14, align 4
  %73 = or i32 %72, 8192
  store i32 %73, ptr %14, align 4
  br label %74

74:                                               ; preds = %71, %65, %62, %39
  %75 = load ptr, ptr %43, align 8
  %76 = getelementptr inbounds %struct.io_rw_state, ptr %75, i32 0, i32 1
  %77 = getelementptr inbounds %struct.iov_iter, ptr %75, i32 0, i32 3
  %78 = load i32, ptr %77, align 4
  store i32 %78, ptr %76, align 4
  %79 = getelementptr inbounds %struct.iov_iter, ptr %75, i32 0, i32 4
  %80 = load i32, ptr %79, align 8
  %81 = getelementptr inbounds %struct.io_rw_state, ptr %75, i32 0, i32 1, i32 1
  store i32 %80, ptr %81, align 4
  %82 = getelementptr inbounds %struct.iov_iter, ptr %75, i32 0, i32 6
  %83 = load i32, ptr %82, align 8
  %84 = getelementptr inbounds %struct.io_rw_state, ptr %75, i32 0, i32 1, i32 2
  store i32 %83, ptr %84, align 4
  br label %86

85:                                               ; preds = %33
  tail call void @kfree(ptr noundef %1) #21
  br label %86

86:                                               ; preds = %85, %74, %13, %5
  %87 = phi i32 [ -12, %85 ], [ 0, %5 ], [ 0, %74 ], [ 0, %13 ]
  ret i32 %87
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rw_verify_area(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iov_iter_advance(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @kiocb_done(ptr noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 2097152
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %3
  %10 = load ptr, ptr %4, align 8
  %11 = getelementptr inbounds %struct.io_async_rw, ptr %10, i32 0, i32 2
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = tail call i32 @llvm.smax.i32(i32 %1, i32 0)
  %16 = add i32 %12, %15
  br label %17

17:                                               ; preds = %14, %9, %3
  %18 = phi i32 [ %1, %9 ], [ %1, %3 ], [ %16, %14 ]
  %19 = and i32 %6, 1024
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 1
  %23 = load i64, ptr %22, align 8
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds %struct.file, ptr %24, i32 0, i32 10
  store i64 %23, ptr %25, align 8
  br label %26

26:                                               ; preds = %21, %17
  %27 = icmp sgt i32 %18, -1
  br i1 %27, label %28, label %74

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 2
  %30 = load ptr, ptr %29, align 8
  %31 = icmp eq ptr %30, @io_complete_rw
  br i1 %31, label %32, label %74

32:                                               ; preds = %28
  %33 = tail call fastcc zeroext i1 @__io_complete_rw_common(ptr noundef %0, i32 noundef %18) #21
  br i1 %33, label %80, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %36 = load i32, ptr %35, align 8
  %37 = load i32, ptr %5, align 4
  %38 = and i32 %37, 32768
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %49, label %40, !prof !10

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr inbounds %struct.io_buffer, ptr %42, i32 0, i32 3
  %44 = load i16, ptr %43, align 4
  %45 = zext i16 %44 to i32
  %46 = shl nuw i32 %45, 16
  %47 = or i32 %46, 1
  %48 = and i32 %37, -32769
  store i32 %48, ptr %5, align 4
  tail call void @kfree(ptr noundef %42) #21
  store ptr null, ptr %41, align 8
  br label %49

49:                                               ; preds = %40, %34
  %50 = phi i32 [ %47, %40 ], [ 0, %34 ]
  %51 = and i32 %2, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  store i32 %36, ptr %35, align 8
  %54 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 %50, ptr %54, align 4
  %55 = load i32, ptr %5, align 4
  %56 = or i32 %55, 65536
  store i32 %56, ptr %5, align 4
  br label %80

57:                                               ; preds = %49
  %58 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %59 = load ptr, ptr %58, align 8
  %60 = getelementptr inbounds %struct.io_ring_ctx, ptr %59, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %60) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %36, i32 noundef %50) #21
  %61 = getelementptr inbounds %struct.anon.178, ptr %59, i32 0, i32 3
  %62 = load i8, ptr %61, align 16
  %63 = and i8 %62, 48
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65, !prof !10

65:                                               ; preds = %57
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %59) #24
  br label %66

66:                                               ; preds = %65, %57
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %67 = getelementptr inbounds %struct.io_ring_ctx, ptr %59, i32 0, i32 10
  %68 = load i32, ptr %67, align 64
  %69 = getelementptr inbounds %struct.anon.178, ptr %59, i32 0, i32 1
  %70 = load ptr, ptr %69, align 8
  %71 = getelementptr inbounds %struct.io_rings, ptr %70, i32 0, i32 1, i32 2
  store volatile i32 %68, ptr %71, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %72 = load i16, ptr %60, align 4
  %73 = add i16 %72, 1
  store i16 %73, ptr %60, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %59) #21
  br label %80

74:                                               ; preds = %28, %26
  switch i32 %18, label %76 [
    i32 -529, label %80
    i32 -512, label %75
    i32 -513, label %75
    i32 -514, label %75
    i32 -516, label %75
  ]

75:                                               ; preds = %74, %74, %74, %74
  br label %76

76:                                               ; preds = %75, %74
  %77 = phi i32 [ %18, %74 ], [ -4, %75 ]
  %78 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 2
  %79 = load ptr, ptr %78, align 8
  tail call void %79(ptr noundef %0, i32 noundef %77) #21
  br label %80

80:                                               ; preds = %76, %74, %66, %53, %32
  %81 = load i32, ptr %5, align 4
  %82 = and i32 %81, 131072
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %106, label %84

84:                                               ; preds = %80
  %85 = and i32 %81, -131073
  store i32 %85, ptr %5, align 4
  %86 = and i32 %81, 2097152
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %84
  %89 = load ptr, ptr %4, align 8
  %90 = getelementptr inbounds %struct.io_rw_state, ptr %89, i32 0, i32 1
  tail call void @iov_iter_restore(ptr noundef %89, ptr noundef %90) #21
  br label %94

91:                                               ; preds = %84
  %92 = tail call fastcc i32 @io_req_prep_async(ptr noundef %0) #21
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %91, %88
  %95 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_queue_async_work, ptr %95, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %106

96:                                               ; preds = %91
  %97 = load i32, ptr %5, align 4
  %98 = or i32 %97, 256
  %99 = and i32 %97, 64
  %100 = icmp eq i32 %99, 0
  %101 = and i32 %98, -4194369
  %102 = or i32 %101, 4194304
  %103 = select i1 %100, i32 %98, i32 %102
  store i32 %103, ptr %5, align 4
  %104 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %18, ptr %104, align 8
  %105 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_req_task_complete, ptr %105, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false)
  br label %106

106:                                              ; preds = %96, %94, %80
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @import_single_range(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iov_iter_init(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__import_iovec(i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_get_many(ptr noundef %0, i32 noundef %1) unnamed_addr #8 {
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %3 = load volatile i32, ptr %0, align 4
  %4 = and i32 %3, 3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %15, !prof !10

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %8 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %9 = inttoptr i32 %8 to ptr
  %10 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %9) #6, !srcloc !12
  %11 = add i32 %10, %3
  %12 = inttoptr i32 %11 to ptr
  %13 = load i32, ptr %12, align 4
  %14 = add i32 %13, %1
  store i32 %14, ptr %12, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #21, !srcloc !22
  br label %19

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.percpu_ref, ptr %0, i32 0, i32 1
  %17 = load ptr, ptr %16, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %17) #21, !srcloc !13
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %17, ptr %17, i32 %1, ptr elementtype(i32) %17) #21, !srcloc !14
  br label %19

19:                                               ; preds = %15, %6
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @iov_iter_bvec(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @io_buffer_select(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %6 = and i32 %3, 2
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 32768
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %4
  %13 = load ptr, ptr %5, align 8
  br label %53

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  br i1 %7, label %19, label %16

16:                                               ; preds = %14
  %17 = load ptr, ptr %15, align 8
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %17, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %18) #21
  br label %19

19:                                               ; preds = %16, %14
  %20 = load ptr, ptr %15, align 8
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %20, i32 0, i32 1, i32 16
  %22 = tail call ptr @xa_load(ptr noundef %21, i32 noundef %2) #21
  %23 = icmp eq ptr %22, null
  br i1 %23, label %48, label %24

24:                                               ; preds = %19
  %25 = load volatile ptr, ptr %22, align 4
  %26 = icmp eq ptr %25, %22
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %31 = load ptr, ptr %30, align 4
  %32 = load ptr, ptr %29, align 4
  %33 = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  store ptr %31, ptr %33, align 4
  store volatile ptr %32, ptr %31, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %29, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %30, align 4
  br label %38

34:                                               ; preds = %24
  %35 = load ptr, ptr %15, align 8
  %36 = getelementptr inbounds %struct.io_ring_ctx, ptr %35, i32 0, i32 1, i32 16
  %37 = tail call ptr @xa_erase(ptr noundef %36, i32 noundef %2) #21
  br label %38

38:                                               ; preds = %34, %27
  %39 = phi ptr [ %22, %34 ], [ %29, %27 ]
  %40 = load i32, ptr %1, align 4
  %41 = getelementptr inbounds %struct.io_buffer, ptr %39, i32 0, i32 2
  %42 = load i32, ptr %41, align 8
  %43 = icmp ugt i32 %40, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 %42, ptr %1, align 4
  br label %45

45:                                               ; preds = %44, %38
  %46 = load i32, ptr %8, align 4
  %47 = or i32 %46, 32768
  store i32 %47, ptr %8, align 4
  store ptr %39, ptr %5, align 8
  br label %48

48:                                               ; preds = %45, %19
  %49 = phi ptr [ %39, %45 ], [ inttoptr (i32 -105 to ptr), %19 ]
  br i1 %7, label %53, label %50

50:                                               ; preds = %48
  %51 = load ptr, ptr %15, align 8
  %52 = getelementptr inbounds %struct.io_ring_ctx, ptr %51, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %52) #21
  br label %53

53:                                               ; preds = %50, %48, %12
  %54 = phi ptr [ %13, %12 ], [ %49, %48 ], [ %49, %50 ]
  ret ptr %54
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_load(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_erase(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_alloc_async_data(ptr nocapture noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 8
  %4 = zext i8 %3 to i32
  %5 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %4, i32 1
  %6 = load i16, ptr %5, align 2
  %7 = icmp eq i16 %6, 0
  %8 = load i1, ptr @io_alloc_async_data.__already_done, align 1
  %9 = xor i1 %8, true
  %10 = select i1 %7, i1 %9, i1 false
  br i1 %10, label %11, label %16, !prof !11

11:                                               ; preds = %1
  store i1 true, ptr @io_alloc_async_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3482, i32 noundef 9, ptr noundef null) #21
  %12 = load i8, ptr %2, align 8
  %13 = zext i8 %12 to i32
  %14 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %13, i32 1
  %15 = load i16, ptr %14, align 2
  br label %16

16:                                               ; preds = %11, %1
  %17 = phi i16 [ %15, %11 ], [ %6, %1 ]
  %18 = zext i16 %17 to i32
  %19 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %18, i32 noundef 3264) #26
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  store ptr %19, ptr %20, align 8
  %21 = icmp eq ptr %19, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %24 = load i32, ptr %23, align 4
  %25 = or i32 %24, 2097152
  store i32 %25, ptr %23, align 4
  br label %26

26:                                               ; preds = %22, %16
  ret i1 %21
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #14

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @loop_rw_iter(i32 noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #0 {
  %4 = load ptr, ptr %1, align 8
  %5 = getelementptr inbounds %struct.kiocb, ptr %1, i32 0, i32 4
  %6 = load i32, ptr %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %80

9:                                                ; preds = %3
  %10 = and i32 %6, 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 7
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, 2048
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %80, label %17

17:                                               ; preds = %12, %9
  %18 = getelementptr inbounds %struct.iov_iter, ptr %2, i32 0, i32 4
  %19 = getelementptr inbounds %struct.iov_iter, ptr %2, i32 0, i32 5
  %20 = getelementptr inbounds %struct.iov_iter, ptr %2, i32 0, i32 3
  %21 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 1
  %22 = getelementptr inbounds %struct.io_rw, ptr %1, i32 0, i32 2
  %23 = icmp eq i32 %0, 0
  %24 = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 3
  %25 = getelementptr inbounds %struct.kiocb, ptr %1, i32 0, i32 1
  br label %26

26:                                               ; preds = %77, %17
  %27 = phi i32 [ 0, %17 ], [ %78, %77 ]
  %28 = load i32, ptr %18, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %80, label %30

30:                                               ; preds = %26
  %31 = load i8, ptr %2, align 8
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = load ptr, ptr %19, align 4, !noalias !67
  %35 = load ptr, ptr %34, align 4, !noalias !67
  %36 = load i32, ptr %20, align 4, !noalias !67
  %37 = getelementptr i8, ptr %35, i32 %36
  %38 = getelementptr inbounds %struct.iovec, ptr %34, i32 0, i32 1
  %39 = load i32, ptr %38, align 4, !noalias !67
  %40 = sub i32 %39, %36
  %41 = tail call i32 @llvm.umin.i32(i32 %28, i32 %40) #21
  br label %48

42:                                               ; preds = %30
  %43 = load i64, ptr %21, align 8
  %44 = trunc i64 %43 to i32
  %45 = inttoptr i32 %44 to ptr
  %46 = load i64, ptr %22, align 8
  %47 = trunc i64 %46 to i32
  br label %48

48:                                               ; preds = %42, %33
  %49 = phi ptr [ %45, %42 ], [ %37, %33 ]
  %50 = phi i32 [ %47, %42 ], [ %41, %33 ]
  %51 = load ptr, ptr %24, align 4
  %52 = getelementptr inbounds %struct.file_operations, ptr %51, i32 0, i32 3
  %53 = getelementptr inbounds %struct.file_operations, ptr %51, i32 0, i32 2
  %54 = select i1 %23, ptr %53, ptr %52
  %55 = load ptr, ptr %54, align 4
  %56 = load ptr, ptr %1, align 8
  %57 = getelementptr inbounds %struct.file, ptr %56, i32 0, i32 8
  %58 = load i32, ptr %57, align 8
  %59 = and i32 %58, 2097152
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, ptr %25, ptr null
  %62 = tail call i32 %55(ptr noundef %4, ptr noundef %49, i32 noundef %50, ptr noundef %61) #21
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %48
  %65 = icmp eq i32 %27, 0
  %66 = select i1 %65, i32 %62, i32 %27
  br label %80

67:                                               ; preds = %48
  %68 = load i8, ptr %2, align 8
  %69 = icmp eq i8 %68, 2
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  tail call void @iov_iter_advance(ptr noundef %2, i32 noundef %62) #21
  br label %77

71:                                               ; preds = %67
  %72 = zext i32 %62 to i64
  %73 = load i64, ptr %22, align 8
  %74 = sub i64 %73, %72
  store i64 %74, ptr %22, align 8
  %75 = load i64, ptr %21, align 8
  %76 = add i64 %75, %72
  store i64 %76, ptr %21, align 8
  br label %77

77:                                               ; preds = %71, %70
  %78 = add i32 %62, %27
  %79 = icmp eq i32 %62, %50
  br i1 %79, label %26, label %80

80:                                               ; preds = %77, %64, %26, %12, %3
  %81 = phi i32 [ -95, %3 ], [ -11, %12 ], [ %66, %64 ], [ %78, %77 ], [ %27, %26 ]
  ret i32 %81
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_async_buf_func(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr nocapture noundef %3) #0 {
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr i8, ptr %0, i32 -8
  %8 = load ptr, ptr %7, align 4
  %9 = load ptr, ptr %3, align 4
  %10 = icmp eq ptr %8, %9
  br i1 %10, label %11, label %28

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.wait_page_key, ptr %3, i32 0, i32 2
  store i32 1, ptr %12, align 4
  %13 = getelementptr i8, ptr %0, i32 -4
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr inbounds %struct.wait_page_key, ptr %3, i32 0, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %28

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.kiocb, ptr %6, i32 0, i32 4
  %20 = load i32, ptr %19, align 8
  %21 = and i32 %20, -524289
  store i32 %21, ptr %19, align 8
  %22 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3
  %23 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = load ptr, ptr %22, align 4
  %26 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  store ptr %24, ptr %26, align 4
  store volatile ptr %25, ptr %24, align 4
  store volatile ptr %22, ptr %22, align 4
  store ptr %22, ptr %23, align 4
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %27, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %6, i1 noundef zeroext false) #21
  br label %28

28:                                               ; preds = %18, %11, %4
  %29 = phi i32 [ 1, %18 ], [ 0, %11 ], [ 0, %4 ]
  ret i32 %29
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_complete_rw(ptr noundef %0, i32 noundef %1) #0 {
  %3 = tail call fastcc zeroext i1 @__io_complete_rw_common(ptr noundef %0, i32 noundef %1)
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1, ptr %5, align 8
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_req_task_complete, ptr %6, align 4
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.anon.178, ptr %8, i32 0, i32 2
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp ne i32 %11, 0
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext %12)
  br label %13

13:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_req_task_complete(ptr noundef %0, ptr nocapture noundef readonly %1) #8 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 32768
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 21
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr inbounds %struct.io_buffer, ptr %9, i32 0, i32 3
  %11 = load i16, ptr %10, align 4
  %12 = zext i16 %11 to i32
  %13 = shl nuw i32 %12, 16
  %14 = or i32 %13, 1
  %15 = and i32 %4, -32769
  store i32 %15, ptr %3, align 4
  tail call void @kfree(ptr noundef %9) #21
  store ptr null, ptr %8, align 8
  br label %16

16:                                               ; preds = %7, %2
  %17 = phi i32 [ %14, %7 ], [ 0, %2 ]
  %18 = load i8, ptr %1, align 1, !range !45
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 7
  store i32 %17, ptr %21, align 4
  %22 = load i32, ptr %3, align 4
  %23 = or i32 %22, 65536
  store i32 %23, ptr %3, align 4
  %24 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %25 = load ptr, ptr %24, align 8
  %26 = and i32 %22, 64
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.io_ring_ctx, ptr %25, i32 0, i32 1, i32 12, i32 5
  store i8 1, ptr %29, align 2
  br label %30

30:                                               ; preds = %28, %20
  %31 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %25, i32 0, i32 1, i32 12, i32 1
  store ptr null, ptr %31, align 4
  %33 = load ptr, ptr %32, align 4
  %34 = icmp eq ptr %33, null
  %35 = getelementptr inbounds %struct.io_ring_ctx, ptr %25, i32 0, i32 1, i32 12, i32 1, i32 1
  br i1 %34, label %36, label %37

36:                                               ; preds = %30
  store ptr %31, ptr %35, align 4
  store volatile ptr %31, ptr %32, align 4
  br label %58

37:                                               ; preds = %30
  %38 = load ptr, ptr %35, align 4
  store ptr %31, ptr %38, align 4
  store ptr %31, ptr %35, align 4
  br label %58

39:                                               ; preds = %16
  %40 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %41 = load i32, ptr %40, align 8
  %42 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %43 = load ptr, ptr %42, align 8
  %44 = getelementptr inbounds %struct.io_ring_ctx, ptr %43, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %44) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %41, i32 noundef %17) #21
  %45 = getelementptr inbounds %struct.anon.178, ptr %43, i32 0, i32 3
  %46 = load i8, ptr %45, align 16
  %47 = and i8 %46, 48
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %50, label %49, !prof !10

49:                                               ; preds = %39
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %43) #24
  br label %50

50:                                               ; preds = %49, %39
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %51 = getelementptr inbounds %struct.io_ring_ctx, ptr %43, i32 0, i32 10
  %52 = load i32, ptr %51, align 64
  %53 = getelementptr inbounds %struct.anon.178, ptr %43, i32 0, i32 1
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds %struct.io_rings, ptr %54, i32 0, i32 1, i32 2
  store volatile i32 %52, ptr %55, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %56 = load i16, ptr %44, align 4
  %57 = add i16 %56, 1
  store i16 %57, ptr %44, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %43) #21
  br label %58

58:                                               ; preds = %50, %37, %36
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__io_complete_rw_common(ptr nocapture noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 262144
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 16777216
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %48, label %12

12:                                               ; preds = %7
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds %struct.file, ptr %13, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.inode, ptr %15, i32 0, i32 8
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !70
  %19 = load volatile i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33, !prof !10

21:                                               ; preds = %12
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %23 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #6, !srcloc !12
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = load i32, ptr %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, ptr %30, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #21, !srcloc !22
  br label %47

33:                                               ; preds = %12
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !71
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %35 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 1
  %36 = load ptr, ptr %35, align 4
  %37 = ptrtoint ptr %36 to i32
  %38 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %39 = inttoptr i32 %38 to ptr
  %40 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %39) #6, !srcloc !12
  %41 = add i32 %40, %37
  %42 = inttoptr i32 %41 to ptr
  %43 = load i32, ptr %42, align 4
  %44 = add i32 %43, -1
  store i32 %44, ptr %42, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #21, !srcloc !22
  %45 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 2
  %46 = tail call i32 @rcuwait_wake_up(ptr noundef %45) #21
  br label %47

47:                                               ; preds = %33, %21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !72
  br label %48

48:                                               ; preds = %47, %7, %2
  %49 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %68, label %52, !prof !10

52:                                               ; preds = %48
  switch i32 %1, label %59 [
    i32 -11, label %53
    i32 -95, label %53
  ]

53:                                               ; preds = %52, %52
  %54 = tail call fastcc zeroext i1 @io_rw_should_reissue(ptr noundef %0)
  br i1 %54, label %55, label %59

55:                                               ; preds = %53
  %56 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %57 = load i32, ptr %56, align 4
  %58 = or i32 %57, 131072
  store i32 %58, ptr %56, align 4
  br label %68

59:                                               ; preds = %53, %52
  %60 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %61 = load i32, ptr %60, align 4
  %62 = or i32 %61, 256
  %63 = and i32 %61, 64
  %64 = icmp eq i32 %63, 0
  %65 = and i32 %62, -4194369
  %66 = or i32 %65, 4194304
  %67 = select i1 %64, i32 %62, i32 %66
  store i32 %67, ptr %60, align 4
  store i32 %1, ptr %49, align 8
  br label %68

68:                                               ; preds = %59, %55, %48
  %69 = phi i1 [ true, %55 ], [ false, %59 ], [ false, %48 ]
  ret i1 %69
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @io_rw_should_reissue(ptr nocapture noundef readonly %0) unnamed_addr #15 {
  %2 = load ptr, ptr %0, align 8
  %3 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load i16, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %7 = load ptr, ptr %6, align 8
  %8 = and i16 %5, -4096
  switch i16 %8, label %62 [
    i16 24576, label %9
    i16 -32768, label %9
  ]

9:                                                ; preds = %1, %1
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %11 = load i32, ptr %10, align 4
  %12 = and i32 %11, 2048
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %62

14:                                               ; preds = %9
  %15 = tail call ptr @llvm.thread.pointer() #21
  %16 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %17 = load volatile i32, ptr %16, align 4
  %18 = and i32 %17, 15728640
  %19 = load volatile i32, ptr %16, align 4
  %20 = and i32 %19, 983040
  %21 = or i32 %20, %18
  %22 = load volatile i32, ptr %16, align 4
  %23 = and i32 %22, 256
  %24 = or i32 %21, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %14
  %27 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 4
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 69
  %33 = load ptr, ptr %32, align 64
  %34 = icmp eq ptr %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.anon.178, ptr %7, i32 0, i32 2
  %37 = load i32, ptr %36, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %62, label %40

40:                                               ; preds = %35, %31, %26, %14
  %41 = load i32, ptr %7, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %62

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %46 = load ptr, ptr %45, align 4
  %47 = getelementptr inbounds %struct.task_struct, ptr %46, i32 0, i32 93
  %48 = load ptr, ptr %47, align 16
  %49 = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 93
  %50 = load ptr, ptr %49, align 16
  %51 = icmp eq ptr %48, %50
  br i1 %51, label %52, label %62

52:                                               ; preds = %44
  %53 = load volatile i32, ptr %16, align 4
  %54 = and i32 %53, 15728640
  %55 = load volatile i32, ptr %16, align 4
  %56 = and i32 %55, 983040
  %57 = or i32 %56, %54
  %58 = load volatile i32, ptr %16, align 4
  %59 = and i32 %58, 256
  %60 = or i32 %57, %59
  %61 = icmp eq i32 %60, 0
  br label %62

62:                                               ; preds = %52, %44, %40, %35, %9, %1
  %63 = phi i1 [ false, %1 ], [ false, %35 ], [ false, %9 ], [ false, %40 ], [ false, %44 ], [ %61, %52 ]
  ret i1 %63
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_req_prep_async(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca ptr, align 4
  %3 = alloca ptr, align 4
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %5 = load i8, ptr %4, align 8
  %6 = zext i8 %5 to i32
  %7 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %6
  %8 = load i16, ptr %7, align 4
  %9 = and i16 %8, 128
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %101, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %13 = load i32, ptr %12, align 4
  %14 = and i32 %13, 2097152
  %15 = icmp ne i32 %14, 0
  %16 = load i1, ptr @io_req_prep_async.__already_done, align 1
  %17 = xor i1 %16, true
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %20, !prof !11

19:                                               ; preds = %11
  store i1 true, ptr @io_req_prep_async.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6582, i32 noundef 9, ptr noundef null) #21
  br label %20

20:                                               ; preds = %19, %11
  br i1 %15, label %101, label %21

21:                                               ; preds = %20
  %22 = load i8, ptr %4, align 8
  %23 = zext i8 %22 to i32
  %24 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %23, i32 1
  %25 = load i16, ptr %24, align 2
  %26 = icmp eq i16 %25, 0
  %27 = load i1, ptr @io_alloc_async_data.__already_done, align 1
  %28 = xor i1 %27, true
  %29 = select i1 %26, i1 %28, i1 false
  br i1 %29, label %30, label %35, !prof !11

30:                                               ; preds = %21
  store i1 true, ptr @io_alloc_async_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3482, i32 noundef 9, ptr noundef null) #21
  %31 = load i8, ptr %4, align 8
  %32 = zext i8 %31 to i32
  %33 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %32, i32 1
  %34 = load i16, ptr %33, align 2
  br label %35

35:                                               ; preds = %30, %21
  %36 = phi i16 [ %34, %30 ], [ %25, %21 ]
  %37 = zext i16 %36 to i32
  %38 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %37, i32 noundef 3264) #26
  %39 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  store ptr %38, ptr %39, align 8
  %40 = icmp eq ptr %38, null
  br i1 %40, label %101, label %41

41:                                               ; preds = %35
  %42 = load i8, ptr %4, align 8
  %43 = load i32, ptr %12, align 4
  %44 = or i32 %43, 2097152
  store i32 %44, ptr %12, align 4
  switch i8 %42, label %96 [
    i8 1, label %45
    i8 2, label %58
    i8 9, label %71
    i8 10, label %84
    i8 16, label %90
  ]

45:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  store ptr null, ptr %3, align 4, !annotation !9
  %46 = call fastcc i32 @io_import_iovec(i32 noundef 0, ptr noundef %0, ptr noundef nonnull %3, ptr noundef nonnull %38, i32 noundef 0) #21
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %56, label %48, !prof !11

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.io_async_rw, ptr %38, i32 0, i32 2
  store i32 0, ptr %49, align 4
  %50 = load ptr, ptr %3, align 4
  %51 = getelementptr inbounds %struct.io_async_rw, ptr %38, i32 0, i32 1
  store ptr %50, ptr %51, align 8
  %52 = icmp eq ptr %50, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = load i32, ptr %12, align 4
  %55 = or i32 %54, 8192
  store i32 %55, ptr %12, align 4
  br label %56

56:                                               ; preds = %53, %48, %45
  %57 = phi i32 [ %46, %45 ], [ 0, %53 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  br label %101

58:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #21
  store ptr null, ptr %2, align 4, !annotation !9
  %59 = call fastcc i32 @io_import_iovec(i32 noundef 1, ptr noundef %0, ptr noundef nonnull %2, ptr noundef nonnull %38, i32 noundef 0) #21
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %69, label %61, !prof !11

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.io_async_rw, ptr %38, i32 0, i32 2
  store i32 0, ptr %62, align 4
  %63 = load ptr, ptr %2, align 4
  %64 = getelementptr inbounds %struct.io_async_rw, ptr %38, i32 0, i32 1
  store ptr %63, ptr %64, align 8
  %65 = icmp eq ptr %63, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = load i32, ptr %12, align 4
  %68 = or i32 %67, 8192
  store i32 %68, ptr %12, align 4
  br label %69

69:                                               ; preds = %66, %61, %58
  %70 = phi i32 [ %59, %58 ], [ 0, %66 ], [ 0, %61 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #21
  br label %101

71:                                               ; preds = %41
  %72 = getelementptr inbounds %struct.io_async_msghdr, ptr %38, i32 0, i32 4
  %73 = getelementptr inbounds %struct.io_async_msghdr, ptr %38, i32 0, i32 3
  store ptr %72, ptr %73, align 8
  %74 = getelementptr inbounds %struct.io_async_msghdr, ptr %38, i32 0, i32 1
  store ptr %38, ptr %74, align 64
  %75 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %78 = load i32, ptr %77, align 8
  %79 = tail call i32 @sendmsg_copy_msghdr(ptr noundef %73, ptr noundef %76, i32 noundef %78, ptr noundef %74) #21
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %101

81:                                               ; preds = %71
  %82 = load i32, ptr %12, align 4
  %83 = or i32 %82, 8192
  store i32 %83, ptr %12, align 4
  br label %101

84:                                               ; preds = %41
  %85 = tail call fastcc i32 @io_recvmsg_copy_hdr(ptr noundef %0, ptr noundef nonnull %38) #21
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %101

87:                                               ; preds = %84
  %88 = load i32, ptr %12, align 4
  %89 = or i32 %88, 8192
  store i32 %89, ptr %12, align 4
  br label %101

90:                                               ; preds = %41
  %91 = getelementptr inbounds %struct.io_connect, ptr %0, i32 0, i32 1
  %92 = load ptr, ptr %91, align 4
  %93 = getelementptr inbounds %struct.io_connect, ptr %0, i32 0, i32 2
  %94 = load i32, ptr %93, align 4
  %95 = tail call i32 @move_addr_to_kernel(ptr noundef %92, i32 noundef %94, ptr noundef nonnull %38) #21
  br label %101

96:                                               ; preds = %41
  %97 = load i1, ptr @io_req_prep_async.__already_done.71, align 1
  br i1 %97, label %101, label %98, !prof !10

98:                                               ; preds = %96
  store i1 true, ptr @io_req_prep_async.__already_done.71, align 1
  %99 = zext i8 %42 to i32
  %100 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.72, i32 noundef %99) #24
  br label %101

101:                                              ; preds = %98, %96, %90, %87, %84, %81, %71, %69, %56, %35, %20, %1
  %102 = phi i32 [ %95, %90 ], [ %70, %69 ], [ %57, %56 ], [ 0, %1 ], [ -14, %20 ], [ -14, %98 ], [ -14, %96 ], [ %79, %71 ], [ 0, %81 ], [ %85, %84 ], [ 0, %87 ], [ -11, %35 ]
  ret i32 %102
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sendmsg_copy_msghdr(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_recvmsg_copy_hdr(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = alloca ptr, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 4
  %6 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 3
  store ptr %5, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  store ptr null, ptr %3, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #21
  store i32 0, ptr %4, align 4, !annotation !9
  %7 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 1
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 2
  %10 = call i32 @__copy_msghdr_from_user(ptr noundef %6, ptr noundef %8, ptr noundef %9, ptr noundef nonnull %3, ptr noundef nonnull %4) #21
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %49

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %14 = load i32, ptr %13, align 4
  %15 = and i32 %14, 32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %12
  %18 = load i32, ptr %4, align 4
  %19 = icmp ugt i32 %18, 1
  br i1 %19, label %49, label %20

20:                                               ; preds = %17
  %21 = load ptr, ptr %3, align 4
  %22 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %21, i32 8, i32 -1090519040) #23, !srcloc !27
  %23 = extractvalue { i32, i32 } %22, 0
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %33, !prof !10

25:                                               ; preds = %20
  %26 = tail call ptr @llvm.thread.pointer() #21
  %27 = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 3
  %28 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %27) #6, !srcloc !28
  %29 = and i32 %28, -13
  %30 = or i32 %29, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %30) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %31 = call i32 @arm_copy_from_user(ptr noundef %1, ptr noundef %21, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %28) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33, !prof !10

33:                                               ; preds = %25, %20
  %34 = phi i32 [ %31, %25 ], [ 8, %20 ]
  %35 = sub i32 8, %34
  %36 = getelementptr i8, ptr %1, i32 %35
  call void @llvm.memset.p0.i32(ptr align 1 %36, i8 0, i32 %34, i1 false) #21
  br label %49

37:                                               ; preds = %25
  %38 = getelementptr inbounds %struct.iovec, ptr %1, i32 0, i32 1
  %39 = load i32, ptr %38, align 4
  %40 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 4
  store i32 %39, ptr %40, align 4
  %41 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 1
  store ptr null, ptr %41, align 8
  br label %49

42:                                               ; preds = %12
  %43 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 1
  store ptr %1, ptr %43, align 8
  %44 = load ptr, ptr %3, align 4
  %45 = load i32, ptr %4, align 4
  %46 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 3, i32 2
  %47 = call i32 @__import_iovec(i32 noundef 0, ptr noundef %44, i32 noundef %45, i32 noundef 8, ptr noundef %43, ptr noundef %46, i1 noundef zeroext false) #21
  %48 = call i32 @llvm.smin.i32(i32 %47, i32 0) #21
  br label %49

49:                                               ; preds = %42, %37, %33, %17, %2
  %50 = phi i32 [ %10, %2 ], [ -22, %17 ], [ 0, %37 ], [ %48, %42 ], [ -14, %33 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  ret i32 %50
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__copy_msghdr_from_user(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @move_addr_to_kernel(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_queue_async_work(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %6 = load i32, ptr %5, align 4
  %7 = and i32 %6, 1048576
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !10

9:                                                ; preds = %2
  %10 = tail call fastcc ptr @__io_prep_linked_timeout(ptr noundef %0) #21
  br label %11

11:                                               ; preds = %9, %2
  %12 = phi ptr [ %10, %9 ], [ null, %2 ]
  %13 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 91
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %19, !prof !11

18:                                               ; preds = %11
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/io_uring.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1597, 0\0A.popsection", ""() #21, !srcloc !73
  unreachable

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.io_uring_task, ptr %16, i32 0, i32 4
  %21 = load ptr, ptr %20, align 8
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %24, !prof !11

23:                                               ; preds = %19
  tail call void asm sideeffect "1:\09.long ((0xe7f001f2) & 0xFFFFFFFF)\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/io_uring.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1598, 0\0A.popsection", ""() #21, !srcloc !74
  unreachable

24:                                               ; preds = %19
  %25 = load i32, ptr %5, align 4
  %26 = and i32 %25, 4096
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = icmp eq ptr %0, null
  br i1 %29, label %47, label %42

30:                                               ; preds = %24
  %31 = load ptr, ptr %3, align 8
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %31, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %32) #21
  %33 = icmp eq ptr %0, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %34, %30
  %35 = phi ptr [ %37, %34 ], [ %0, %30 ]
  tail call fastcc void @io_prep_async_work(ptr noundef nonnull %35) #21
  %36 = getelementptr inbounds %struct.io_kiocb, ptr %35, i32 0, i32 14
  %37 = load ptr, ptr %36, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %34

39:                                               ; preds = %34, %30
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %40 = load i16, ptr %32, align 4
  %41 = add i16 %40, 1
  store i16 %41, ptr %32, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %47

42:                                               ; preds = %42, %28
  %43 = phi ptr [ %45, %42 ], [ %0, %28 ]
  tail call fastcc void @io_prep_async_work(ptr noundef nonnull %43) #21
  %44 = getelementptr inbounds %struct.io_kiocb, ptr %43, i32 0, i32 14
  %45 = load ptr, ptr %44, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42, %39, %28
  %48 = load ptr, ptr %13, align 4
  %49 = tail call ptr @llvm.thread.pointer() #21
  %50 = getelementptr inbounds %struct.task_struct, ptr %48, i32 0, i32 93
  %51 = load ptr, ptr %50, align 16
  %52 = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 93
  %53 = load ptr, ptr %52, align 16
  %54 = icmp eq ptr %51, %53
  %55 = load i1, ptr @io_queue_async_work.__already_done, align 1
  %56 = select i1 %54, i1 true, i1 %55
  br i1 %56, label %58, label %57, !prof !10

57:                                               ; preds = %47
  store i1 true, ptr @io_queue_async_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1610, i32 noundef 9, ptr noundef null) #21
  br label %58

58:                                               ; preds = %57, %47
  %59 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 19, i32 1
  %60 = load i32, ptr %59, align 4
  br i1 %54, label %63, label %61

61:                                               ; preds = %58
  %62 = or i32 %60, 1
  store i32 %62, ptr %59, align 4
  br label %63

63:                                               ; preds = %61, %58
  %64 = phi i32 [ %62, %61 ], [ %60, %58 ]
  %65 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 19
  %66 = lshr i32 %64, 1
  %67 = and i32 %66, 1
  %68 = load i32, ptr %5, align 4
  %69 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_queue_async_work, i32 0, i32 1), align 4
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %63
  %72 = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 2
  %73 = load i32, ptr %72, align 8
  %74 = lshr i32 %73, 5
  %75 = getelementptr i32, ptr @__cpu_online_mask, i32 %74
  %76 = load volatile i32, ptr %75, align 4
  %77 = and i32 %73, 31
  %78 = shl nuw i32 1, %77
  %79 = and i32 %78, %76
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %93, label %81

81:                                               ; preds = %71
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !75
  %82 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_queue_async_work, i32 0, i32 7), align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %92, label %84

84:                                               ; preds = %84, %81
  %85 = phi ptr [ %89, %84 ], [ %82, %81 ]
  %86 = load volatile ptr, ptr %85, align 4
  %87 = getelementptr inbounds %struct.tracepoint_func, ptr %85, i32 0, i32 1
  %88 = load ptr, ptr %87, align 4
  tail call void %86(ptr noundef %88, ptr noundef %4, i32 noundef %67, ptr noundef %0, ptr noundef %65, i32 noundef %68) #21
  %89 = getelementptr %struct.tracepoint_func, ptr %85, i32 1
  %90 = load ptr, ptr %89, align 4
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %84

92:                                               ; preds = %84, %81
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !76
  br label %93

93:                                               ; preds = %92, %71, %63
  %94 = load ptr, ptr %20, align 8
  tail call void @io_wq_enqueue(ptr noundef %94, ptr noundef %65) #21
  %95 = icmp eq ptr %12, null
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  tail call fastcc void @io_queue_linked_timeout(ptr noundef nonnull %12)
  br label %97

97:                                               ; preds = %96, %93
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_wq_enqueue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_prep_async_work(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 8
  %4 = zext i8 %3 to i32
  %5 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %4
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 262144
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %1
  %13 = or i32 %9, 262144
  store i32 %13, ptr %8, align 4
  %14 = tail call ptr @llvm.thread.pointer() #21
  %15 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 83
  %16 = load ptr, ptr %15, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.cred, ptr %16, i32 0, i32 24
  store i32 0, ptr %19, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %16) #21, !srcloc !13
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %16, ptr nonnull %16, i32 1, ptr nonnull elementtype(i32) %16) #21, !srcloc !14
  %21 = load i32, ptr %8, align 4
  br label %22

22:                                               ; preds = %18, %12
  %23 = phi i32 [ %13, %12 ], [ %21, %18 ]
  %24 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 20
  store ptr %16, ptr %24, align 4
  br label %25

25:                                               ; preds = %22, %1
  %26 = phi i32 [ %23, %22 ], [ %9, %1 ]
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 19
  store ptr null, ptr %27, align 4
  %28 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 19, i32 1
  %29 = and i32 %26, 16
  store i32 %29, ptr %28, align 4
  %30 = and i32 %26, 16777216
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %25
  %33 = load i16, ptr %5, align 4
  %34 = and i16 %33, 4
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.anon.178, ptr %7, i32 0, i32 2
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %60, label %41

41:                                               ; preds = %36, %32
  %42 = load ptr, ptr %0, align 8
  %43 = getelementptr inbounds %struct.file, ptr %42, i32 0, i32 2
  %44 = load ptr, ptr %43, align 8
  tail call void @io_wq_hash_work(ptr noundef %27, ptr noundef %44) #21
  br label %60

45:                                               ; preds = %25
  %46 = load ptr, ptr %0, align 8
  %47 = icmp eq ptr %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.file, ptr %46, i32 0, i32 2
  %50 = load ptr, ptr %49, align 8
  %51 = load i16, ptr %50, align 8
  %52 = and i16 %51, -4096
  %53 = icmp eq i16 %52, 24576
  br i1 %53, label %60, label %54

54:                                               ; preds = %48, %45
  %55 = load i16, ptr %5, align 4
  %56 = and i16 %55, 8
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = or i32 %29, 4
  store i32 %59, ptr %28, align 4
  br label %60

60:                                               ; preds = %58, %54, %48, %41, %36
  %61 = load i8, ptr %2, align 8
  switch i8 %61, label %73 [
    i8 30, label %62
    i8 33, label %62
  ]

62:                                               ; preds = %60, %60
  %63 = getelementptr inbounds %struct.io_splice, ptr %0, i32 0, i32 1
  %64 = load ptr, ptr %63, align 4
  %65 = getelementptr inbounds %struct.file, ptr %64, i32 0, i32 2
  %66 = load ptr, ptr %65, align 8
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, -4096
  %69 = icmp eq i16 %68, -32768
  br i1 %69, label %73, label %70

70:                                               ; preds = %62
  %71 = load i32, ptr %28, align 4
  %72 = or i32 %71, 4
  store i32 %72, ptr %28, align 4
  br label %73

73:                                               ; preds = %70, %62, %60
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_wq_hash_work(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_fsync_range(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_poll_queue_proc(ptr nocapture noundef readnone %0, ptr noundef %1, ptr nocapture noundef %2) #0 {
  %4 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %5, i32 0, i32 18
  tail call fastcc void @__io_queue_proc(ptr noundef %5, ptr noundef %2, ptr noundef %1, ptr noundef %6)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__io_arm_poll_handler(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %6 = load ptr, ptr %5, align 8
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16
  store ptr null, ptr %7, align 4
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16, i32 1
  store ptr null, ptr %8, align 4
  %9 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 1
  store ptr null, ptr %9, align 4
  %10 = or i32 %3, 8248
  %11 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 2
  store i32 %10, ptr %11, align 4
  %12 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 3
  %13 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 3, i32 3
  store volatile ptr %13, ptr %13, align 4
  %14 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 3, i32 3, i32 1
  store ptr %13, ptr %14, align 4
  store i32 0, ptr %12, align 4
  %15 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 3, i32 1
  store ptr null, ptr %15, align 4
  %16 = getelementptr inbounds %struct.io_poll_iocb, ptr %1, i32 0, i32 3, i32 2
  store ptr @io_poll_wake, ptr %16, align 4
  %17 = load ptr, ptr %0, align 8
  store ptr %17, ptr %1, align 4
  store ptr %0, ptr %15, align 4
  %18 = getelementptr inbounds %struct.poll_table_struct, ptr %2, i32 0, i32 1
  store i32 %3, ptr %18, align 4
  %19 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 1
  store ptr %0, ptr %19, align 4
  %20 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 3
  store i32 0, ptr %20, align 4
  %21 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 2
  store i32 0, ptr %21, align 4
  %22 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 22
  store volatile i32 1, ptr %22, align 4
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds %struct.file, ptr %23, i32 0, i32 3
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.file_operations, ptr %25, i32 0, i32 9
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %31, label %29, !prof !11

29:                                               ; preds = %4
  %30 = tail call i32 %27(ptr noundef %23, ptr noundef %2) #21
  br label %31

31:                                               ; preds = %29, %4
  %32 = phi i32 [ %30, %29 ], [ 325, %4 ]
  %33 = load i32, ptr %11, align 4
  %34 = and i32 %33, %32
  %35 = icmp eq i32 %34, 0
  %36 = and i32 %33, 1073741824
  %37 = icmp eq i32 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %31
  tail call fastcc void @io_poll_remove_entries(ptr noundef %0)
  br label %141

40:                                               ; preds = %31
  br i1 %35, label %41, label %51

41:                                               ; preds = %40
  %42 = load i32, ptr %20, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47, !prof !10

44:                                               ; preds = %41
  %45 = load i32, ptr %21, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %115, !prof !11

47:                                               ; preds = %44, %41
  tail call fastcc void @io_poll_remove_entries(ptr noundef %0)
  %48 = load i32, ptr %20, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %141

50:                                               ; preds = %47
  store i32 -22, ptr %20, align 4
  br label %141

51:                                               ; preds = %40
  %52 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %52) #21
  %53 = load ptr, ptr %5, align 8
  %54 = getelementptr inbounds %struct.io_ring_ctx, ptr %53, i32 0, i32 11, i32 3
  %55 = load ptr, ptr %54, align 16
  %56 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %57 = load i64, ptr %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = getelementptr inbounds %struct.io_ring_ctx, ptr %53, i32 0, i32 11, i32 4
  %60 = load i32, ptr %59, align 4
  %61 = mul i32 %58, 1640531527
  %62 = sub i32 32, %60
  %63 = lshr i32 %61, %62
  %64 = getelementptr %struct.hlist_head, ptr %55, i32 %63
  %65 = load ptr, ptr %64, align 4
  store volatile ptr %65, ptr %7, align 4
  %66 = icmp eq ptr %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %51
  %68 = getelementptr inbounds %struct.hlist_node, ptr %65, i32 0, i32 1
  store volatile ptr %7, ptr %68, align 4
  br label %69

69:                                               ; preds = %67, %51
  store volatile ptr %7, ptr %64, align 4
  store volatile ptr %64, ptr %8, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %70 = load i16, ptr %52, align 4
  %71 = add i16 %70, 1
  store i16 %71, ptr %52, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %72 = load i32, ptr %20, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77, !prof !10

74:                                               ; preds = %69
  %75 = load i32, ptr %21, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80, !prof !11

77:                                               ; preds = %74, %69
  %78 = load i32, ptr %11, align 4
  %79 = or i32 %78, 1073741824
  store i32 %79, ptr %11, align 4
  br label %80

80:                                               ; preds = %77, %74
  %81 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %34, ptr %81, align 8
  %82 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %83 = load i8, ptr %82, align 8
  %84 = icmp eq i8 %83, 6
  %85 = select i1 %84, ptr @io_poll_task_func, ptr @io_apoll_task_func
  %86 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr %85, ptr %86, align 4
  %87 = load ptr, ptr %5, align 8
  %88 = load i64, ptr %56, align 8
  %89 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 1), align 4
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %114

91:                                               ; preds = %80
  %92 = tail call ptr @llvm.thread.pointer() #21
  %93 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 2
  %94 = load i32, ptr %93, align 8
  %95 = lshr i32 %94, 5
  %96 = getelementptr i32, ptr @__cpu_online_mask, i32 %95
  %97 = load volatile i32, ptr %96, align 4
  %98 = and i32 %94, 31
  %99 = shl nuw i32 1, %98
  %100 = and i32 %99, %97
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %91
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !77
  %103 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %104 = icmp eq ptr %103, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %105, %102
  %106 = phi ptr [ %110, %105 ], [ %103, %102 ]
  %107 = load volatile ptr, ptr %106, align 4
  %108 = getelementptr inbounds %struct.tracepoint_func, ptr %106, i32 0, i32 1
  %109 = load ptr, ptr %108, align 4
  tail call void %107(ptr noundef %109, ptr noundef %87, i8 noundef zeroext %83, i64 noundef %88, i32 noundef %34) #21
  %110 = getelementptr %struct.tracepoint_func, ptr %106, i32 1
  %111 = load ptr, ptr %110, align 4
  %112 = icmp eq ptr %111, null
  br i1 %112, label %113, label %105

113:                                              ; preds = %105, %102
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !78
  br label %114

114:                                              ; preds = %113, %91, %80
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %141

115:                                              ; preds = %44
  %116 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %116) #21
  %117 = load ptr, ptr %5, align 8
  %118 = getelementptr inbounds %struct.io_ring_ctx, ptr %117, i32 0, i32 11, i32 3
  %119 = load ptr, ptr %118, align 16
  %120 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %121 = load i64, ptr %120, align 8
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds %struct.io_ring_ctx, ptr %117, i32 0, i32 11, i32 4
  %124 = load i32, ptr %123, align 4
  %125 = mul i32 %122, 1640531527
  %126 = sub i32 32, %124
  %127 = lshr i32 %125, %126
  %128 = getelementptr %struct.hlist_head, ptr %119, i32 %127
  %129 = load ptr, ptr %128, align 4
  store volatile ptr %129, ptr %7, align 4
  %130 = icmp eq ptr %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %115
  %132 = getelementptr inbounds %struct.hlist_node, ptr %129, i32 0, i32 1
  store volatile ptr %7, ptr %132, align 4
  br label %133

133:                                              ; preds = %131, %115
  store volatile ptr %7, ptr %128, align 4
  store volatile ptr %128, ptr %8, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %134 = load i16, ptr %116, align 4
  %135 = add i16 %134, 1
  store i16 %135, ptr %116, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %22) #21, !srcloc !13
  %136 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %22, ptr %22, i32 1, ptr elementtype(i32) %22) #21, !srcloc !35
  %137 = extractvalue { i32, i32 } %136, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %138 = and i32 %137, 1048575
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %141, label %140, !prof !10

140:                                              ; preds = %133
  tail call fastcc void @__io_poll_execute(ptr noundef %0, i32 noundef 0)
  br label %141

141:                                              ; preds = %140, %133, %114, %50, %47, %39
  %142 = phi i32 [ %34, %39 ], [ 0, %114 ], [ 0, %50 ], [ 0, %47 ], [ 0, %140 ], [ 0, %133 ]
  ret i32 %142
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_queue_proc(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr nocapture noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.io_poll_table, ptr %1, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.io_poll_table, ptr %1, i32 0, i32 2
  %8 = load i32, ptr %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %49, label %10, !prof !10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.io_poll_iocb, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %2
  br i1 %13, label %62, label %14

14:                                               ; preds = %10
  %15 = load ptr, ptr %3, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.io_poll_iocb, ptr %15, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, %2
  br i1 %20, label %62, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.io_poll_table, ptr %1, i32 0, i32 3
  store i32 -22, ptr %22, align 4
  br label %62

23:                                               ; preds = %14
  %24 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %25 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %24, i32 noundef 2592, i32 noundef 32) #25
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %29

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.io_poll_table, ptr %1, i32 0, i32 3
  store i32 -12, ptr %28, align 4
  br label %62

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.io_poll_iocb, ptr %0, i32 0, i32 2
  %31 = load i32, ptr %30, align 4
  %32 = getelementptr inbounds %struct.io_poll_iocb, ptr %0, i32 0, i32 3, i32 2
  %33 = load ptr, ptr %32, align 4
  %34 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 1
  store ptr null, ptr %34, align 4
  %35 = or i32 %31, 8248
  %36 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 2
  store i32 %35, ptr %36, align 8
  %37 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 3
  %38 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 3, i32 3
  store volatile ptr %38, ptr %38, align 8
  %39 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 3, i32 3, i32 1
  store ptr %38, ptr %39, align 4
  store i32 0, ptr %37, align 4
  %40 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 3, i32 1
  store ptr null, ptr %40, align 8
  %41 = getelementptr inbounds %struct.io_poll_iocb, ptr %25, i32 0, i32 3, i32 2
  store ptr %33, ptr %41, align 4
  store ptr %25, ptr %3, align 4
  %42 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 1
  %43 = load i8, ptr %42, align 8
  %44 = icmp eq i8 %43, 6
  br i1 %44, label %45, label %49

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 4
  %47 = load i32, ptr %46, align 4
  %48 = or i32 %47, 2097152
  store i32 %48, ptr %46, align 4
  br label %49

49:                                               ; preds = %45, %29, %4
  %50 = phi ptr [ %0, %4 ], [ %25, %45 ], [ %25, %29 ]
  %51 = load i32, ptr %7, align 4
  %52 = add i32 %51, 1
  store i32 %52, ptr %7, align 4
  %53 = getelementptr inbounds %struct.io_poll_iocb, ptr %50, i32 0, i32 1
  store ptr %2, ptr %53, align 4
  %54 = getelementptr inbounds %struct.io_poll_iocb, ptr %50, i32 0, i32 3
  %55 = getelementptr inbounds %struct.io_poll_iocb, ptr %50, i32 0, i32 3, i32 1
  store ptr %6, ptr %55, align 4
  %56 = getelementptr inbounds %struct.io_poll_iocb, ptr %50, i32 0, i32 2
  %57 = load i32, ptr %56, align 4
  %58 = and i32 %57, 268435456
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %49
  tail call void @add_wait_queue_exclusive(ptr noundef %2, ptr noundef %54) #21
  br label %62

61:                                               ; preds = %49
  tail call void @add_wait_queue(ptr noundef %2, ptr noundef %54) #21
  br label %62

62:                                               ; preds = %61, %60, %27, %21, %17, %10
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue_exclusive(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_poll_wake(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = ptrtoint ptr %3 to i32
  %8 = and i32 %7, 16384
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %19, label %10, !prof !10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #21, !srcloc !13
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_or\0A1:\09ldrex\09$0, [$3]\0A\09orr\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %11, ptr %11, i32 -2147483648, ptr elementtype(i32) %11) #21, !srcloc !79
  tail call fastcc void @io_poll_execute(ptr noundef %6)
  %13 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3
  %14 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = load ptr, ptr %13, align 4
  %17 = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  store ptr %15, ptr %17, align 4
  store volatile ptr %16, ptr %15, align 4
  store volatile ptr %13, ptr %13, align 4
  store ptr %13, ptr %14, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !80
  %18 = getelementptr i8, ptr %0, i32 -8
  store volatile ptr null, ptr %18, align 4
  br label %82

19:                                               ; preds = %4
  %20 = icmp eq ptr %3, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %19
  %22 = getelementptr i8, ptr %0, i32 -4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, %7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %82, label %26

26:                                               ; preds = %21, %19
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !64
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %27) #21, !srcloc !13
  %28 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %27, ptr %27, i32 1, ptr elementtype(i32) %27) #21, !srcloc !65
  %29 = extractvalue { i32, i32, i32 } %28, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !66
  %30 = and i32 %29, 1048575
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %82

32:                                               ; preds = %26
  br i1 %20, label %45, label %33

33:                                               ; preds = %32
  %34 = getelementptr i8, ptr %0, i32 -4
  %35 = load i32, ptr %34, align 4
  %36 = and i32 %35, 1073741824
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3
  %40 = getelementptr inbounds %struct.wait_queue_entry, ptr %0, i32 0, i32 3, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = load ptr, ptr %39, align 4
  %43 = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  store ptr %41, ptr %43, align 4
  store volatile ptr %42, ptr %41, align 4
  store volatile ptr %39, ptr %39, align 4
  store ptr %39, ptr %40, align 4
  %44 = getelementptr i8, ptr %0, i32 -8
  store ptr null, ptr %44, align 4
  br label %45

45:                                               ; preds = %38, %33, %32
  %46 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 6
  store i32 %7, ptr %46, align 8
  %47 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 1
  %48 = load i8, ptr %47, align 8
  %49 = icmp eq i8 %48, 6
  %50 = select i1 %49, ptr @io_poll_task_func, ptr @io_apoll_task_func
  %51 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 15, i32 1
  store ptr %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 8
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %struct.io_kiocb, ptr %6, i32 0, i32 5
  %55 = load i64, ptr %54, align 8
  %56 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 1), align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %81

58:                                               ; preds = %45
  %59 = tail call ptr @llvm.thread.pointer() #21
  %60 = getelementptr inbounds %struct.thread_info, ptr %59, i32 0, i32 2
  %61 = load i32, ptr %60, align 8
  %62 = lshr i32 %61, 5
  %63 = getelementptr i32, ptr @__cpu_online_mask, i32 %62
  %64 = load volatile i32, ptr %63, align 4
  %65 = and i32 %61, 31
  %66 = shl nuw i32 1, %65
  %67 = and i32 %66, %64
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %81, label %69

69:                                               ; preds = %58
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !77
  %70 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %71 = icmp eq ptr %70, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %72, %69
  %73 = phi ptr [ %77, %72 ], [ %70, %69 ]
  %74 = load volatile ptr, ptr %73, align 4
  %75 = getelementptr inbounds %struct.tracepoint_func, ptr %73, i32 0, i32 1
  %76 = load ptr, ptr %75, align 4
  tail call void %74(ptr noundef %76, ptr noundef %53, i8 noundef zeroext %48, i64 noundef %55, i32 noundef %7) #21
  %77 = getelementptr %struct.tracepoint_func, ptr %73, i32 1
  %78 = load ptr, ptr %77, align 4
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %72

80:                                               ; preds = %72, %69
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !78
  br label %81

81:                                               ; preds = %80, %58, %45
  tail call fastcc void @io_req_task_work_add(ptr noundef %6, i1 noundef zeroext false) #21
  br label %82

82:                                               ; preds = %81, %26, %21, %10
  %83 = phi i32 [ 1, %10 ], [ 0, %21 ], [ 1, %81 ], [ 1, %26 ]
  ret i32 %83
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_poll_remove_entries(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %3 = load i8, ptr %2, align 8
  %4 = icmp eq i8 %3, 6
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  br label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 17
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.async_poll, ptr %9, i32 0, i32 1
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi ptr [ %0, %5 ], [ %9, %7 ]
  %13 = phi ptr [ %6, %5 ], [ %10, %7 ]
  %14 = load ptr, ptr %13, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %15 = getelementptr inbounds %struct.io_poll_iocb, ptr %12, i32 0, i32 1
  %16 = load volatile ptr, ptr %15, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !81
  %17 = icmp eq ptr %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %11
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull %16) #21
  %19 = getelementptr inbounds %struct.io_poll_iocb, ptr %12, i32 0, i32 3, i32 3
  %20 = getelementptr inbounds %struct.io_poll_iocb, ptr %12, i32 0, i32 3, i32 3, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %19, align 4
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  store ptr %21, ptr %23, align 4
  store volatile ptr %22, ptr %21, align 4
  store volatile ptr %19, ptr %19, align 4
  store ptr %19, ptr %20, align 4
  store ptr null, ptr %15, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %24 = load i16, ptr %16, align 4
  %25 = add i16 %24, 1
  store i16 %25, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %26

26:                                               ; preds = %18, %11
  %27 = icmp eq ptr %14, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.io_poll_iocb, ptr %14, i32 0, i32 1
  %30 = load volatile ptr, ptr %29, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !81
  %31 = icmp eq ptr %30, null
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull %30) #21
  %33 = getelementptr inbounds %struct.io_poll_iocb, ptr %14, i32 0, i32 3, i32 3
  %34 = getelementptr inbounds %struct.io_poll_iocb, ptr %14, i32 0, i32 3, i32 3, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = load ptr, ptr %33, align 4
  %37 = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  store ptr %35, ptr %37, align 4
  store volatile ptr %36, ptr %35, align 4
  store volatile ptr %33, ptr %33, align 4
  store ptr %33, ptr %34, align 4
  store ptr null, ptr %29, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %38 = load i16, ptr %30, align 4
  %39 = add i16 %38, 1
  store i16 %39, ptr %30, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %40

40:                                               ; preds = %32, %28, %26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_poll_execute(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 %1, ptr %3, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %5 = load i8, ptr %4, align 8
  %6 = icmp eq i8 %5, 6
  %7 = select i1 %6, ptr @io_poll_task_func, ptr @io_apoll_task_func
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr %7, ptr %8, align 4
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %12 = load i64, ptr %11, align 8
  %13 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 1), align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %38

15:                                               ; preds = %2
  %16 = tail call ptr @llvm.thread.pointer() #21
  %17 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 2
  %18 = load i32, ptr %17, align 8
  %19 = lshr i32 %18, 5
  %20 = getelementptr i32, ptr @__cpu_online_mask, i32 %19
  %21 = load volatile i32, ptr %20, align 4
  %22 = and i32 %18, 31
  %23 = shl nuw i32 1, %22
  %24 = and i32 %23, %21
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %15
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !77
  %27 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %29, %26
  %30 = phi ptr [ %34, %29 ], [ %27, %26 ]
  %31 = load volatile ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.tracepoint_func, ptr %30, i32 0, i32 1
  %33 = load ptr, ptr %32, align 4
  tail call void %31(ptr noundef %33, ptr noundef %10, i8 noundef zeroext %5, i64 noundef %12, i32 noundef %1) #21
  %34 = getelementptr %struct.tracepoint_func, ptr %30, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %29

37:                                               ; preds = %29, %26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !78
  br label %38

38:                                               ; preds = %37, %15, %2
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_poll_execute(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 22
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !64
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #21, !srcloc !13
  %3 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #21, !srcloc !65
  %4 = extractvalue { i32, i32, i32 } %3, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !66
  %5 = and i32 %4, 1048575
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %44

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 0, ptr %8, align 8
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %10 = load i8, ptr %9, align 8
  %11 = icmp eq i8 %10, 6
  %12 = select i1 %11, ptr @io_poll_task_func, ptr @io_apoll_task_func
  %13 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr %12, ptr %13, align 4
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %17 = load i64, ptr %16, align 8
  %18 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 1), align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %43

20:                                               ; preds = %7
  %21 = tail call ptr @llvm.thread.pointer() #21
  %22 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 2
  %23 = load i32, ptr %22, align 8
  %24 = lshr i32 %23, 5
  %25 = getelementptr i32, ptr @__cpu_online_mask, i32 %24
  %26 = load volatile i32, ptr %25, align 4
  %27 = and i32 %23, 31
  %28 = shl nuw i32 1, %27
  %29 = and i32 %28, %26
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %20
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !77
  %32 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %34, %31
  %35 = phi ptr [ %39, %34 ], [ %32, %31 ]
  %36 = load volatile ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.tracepoint_func, ptr %35, i32 0, i32 1
  %38 = load ptr, ptr %37, align 4
  tail call void %36(ptr noundef %38, ptr noundef %15, i8 noundef zeroext %10, i64 noundef %17, i32 noundef 0) #21
  %39 = getelementptr %struct.tracepoint_func, ptr %35, i32 1
  %40 = load ptr, ptr %39, align 4
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %34

42:                                               ; preds = %34, %31
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !78
  br label %43

43:                                               ; preds = %42, %20, %7
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %44

44:                                               ; preds = %43, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_poll_task_func(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = tail call fastcc i32 @io_poll_check_events(ptr noundef %0)
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %53, label %7

7:                                                ; preds = %2
  %8 = icmp eq i32 %5, 0
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  br i1 %8, label %10, label %16

10:                                               ; preds = %7
  %11 = load i32, ptr %9, align 8
  %12 = getelementptr inbounds %struct.io_poll_iocb, ptr %0, i32 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = and i32 %11, 10239
  %15 = and i32 %14, %13
  store i32 %15, ptr %9, align 8
  br label %25

16:                                               ; preds = %7
  store i32 %5, ptr %9, align 8
  %17 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %18 = load i32, ptr %17, align 4
  %19 = or i32 %18, 256
  %20 = and i32 %18, 64
  %21 = icmp eq i32 %20, 0
  %22 = and i32 %19, -4194369
  %23 = or i32 %22, 4194304
  %24 = select i1 %21, i32 %19, i32 %23
  store i32 %24, ptr %17, align 4
  br label %25

25:                                               ; preds = %16, %10
  tail call fastcc void @io_poll_remove_entries(ptr noundef %0)
  %26 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %26) #21
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16
  %28 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16, i32 1
  %29 = load ptr, ptr %28, align 4
  %30 = icmp eq ptr %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %25
  %32 = load ptr, ptr %27, align 4
  store volatile ptr %32, ptr %29, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.hlist_node, ptr %32, i32 0, i32 1
  store volatile ptr %29, ptr %35, align 4
  br label %36

36:                                               ; preds = %34, %31
  store ptr null, ptr %27, align 4
  store ptr null, ptr %28, align 4
  br label %37

37:                                               ; preds = %36, %25
  %38 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %39 = load i32, ptr %38, align 8
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %39, i32 noundef 0)
  %40 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 3
  %41 = load i8, ptr %40, align 16
  %42 = and i8 %41, 48
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44, !prof !10

44:                                               ; preds = %37
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %4) #24
  br label %45

45:                                               ; preds = %44, %37
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %46 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 10
  %47 = load i32, ptr %46, align 64
  %48 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 1
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds %struct.io_rings, ptr %49, i32 0, i32 1, i32 2
  store volatile i32 %47, ptr %50, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %51 = load i16, ptr %26, align 4
  %52 = add i16 %51, 1
  store i16 %52, ptr %26, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %4)
  br label %53

53:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_apoll_task_func(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = tail call fastcc i32 @io_poll_check_events(ptr noundef %0)
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  tail call fastcc void @io_poll_remove_entries(ptr noundef %0)
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %8) #21
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 16, i32 1
  %11 = load ptr, ptr %10, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %7
  %14 = load ptr, ptr %9, align 4
  store volatile ptr %14, ptr %11, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.hlist_node, ptr %14, i32 0, i32 1
  store volatile ptr %11, ptr %17, align 4
  br label %18

18:                                               ; preds = %16, %13
  store ptr null, ptr %9, align 4
  store ptr null, ptr %10, align 4
  br label %19

19:                                               ; preds = %18, %7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %20 = load i16, ptr %8, align 4
  %21 = add i16 %20, 1
  store i16 %21, ptr %8, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %22 = icmp eq i32 %5, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  tail call void @io_req_task_submit(ptr noundef %0, ptr noundef %1)
  br label %25

24:                                               ; preds = %19
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %5)
  br label %25

25:                                               ; preds = %24, %23, %2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_poll_check_events(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.poll_table_struct, align 8
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %6 = load i8, ptr %5, align 8
  %7 = icmp eq i8 %6, 6
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 17
  %10 = load ptr, ptr %9, align 4
  br label %11

11:                                               ; preds = %8, %1
  %12 = phi ptr [ %10, %8 ], [ %0, %1 ]
  %13 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 4
  %16 = load i32, ptr %15, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19, !prof !10

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %20) #21, !srcloc !13
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_or\0A1:\09ldrex\09$0, [$3]\0A\09orr\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 -2147483648, ptr elementtype(i32) %20) #21, !srcloc !79
  br label %22

22:                                               ; preds = %19, %11
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 22
  %24 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %25 = getelementptr inbounds %struct.poll_table_struct, ptr %2, i32 0, i32 1
  %26 = getelementptr inbounds %struct.io_poll_iocb, ptr %12, i32 0, i32 2
  %27 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 11
  %28 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %29 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 3
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 10
  %31 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 1
  br label %32

32:                                               ; preds = %83, %22
  %33 = load volatile i32, ptr %23, align 4
  %34 = and i32 %33, 1048575
  %35 = icmp eq i32 %34, 0
  %36 = load i1, ptr @io_poll_check_events.__already_done, align 1
  %37 = xor i1 %36, true
  %38 = select i1 %35, i1 %37, i1 false
  br i1 %38, label %39, label %40, !prof !11

39:                                               ; preds = %32
  store i1 true, ptr @io_poll_check_events.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5524, i32 noundef 9, ptr noundef null) #21
  br label %40

40:                                               ; preds = %39, %32
  br i1 %35, label %87, label %41

41:                                               ; preds = %40
  %42 = icmp sgt i32 %33, -1
  br i1 %42, label %43, label %87

43:                                               ; preds = %41
  %44 = load i32, ptr %24, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %43
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  store ptr null, ptr %2, align 8
  %47 = load i32, ptr %26, align 4
  store i32 %47, ptr %25, align 4
  %48 = load ptr, ptr %0, align 8
  %49 = getelementptr inbounds %struct.file, ptr %48, i32 0, i32 3
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.file_operations, ptr %50, i32 0, i32 9
  %52 = load ptr, ptr %51, align 4
  %53 = icmp eq ptr %52, null
  br i1 %53, label %57, label %54, !prof !11

54:                                               ; preds = %46
  %55 = call i32 %52(ptr noundef %48, ptr noundef nonnull %2) #21
  %56 = load i32, ptr %26, align 4
  br label %57

57:                                               ; preds = %54, %46
  %58 = phi i32 [ %56, %54 ], [ %47, %46 ]
  %59 = phi i32 [ %55, %54 ], [ 325, %46 ]
  %60 = and i32 %58, %59
  store i32 %60, ptr %24, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #21
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %83, label %62

62:                                               ; preds = %57, %43
  %63 = phi i32 [ %60, %57 ], [ %44, %43 ]
  %64 = load i32, ptr %26, align 4
  %65 = and i32 %64, 1073741824
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %87

67:                                               ; preds = %62
  %68 = and i32 %63, 10239
  %69 = and i32 %68, %64
  call void @_raw_spin_lock(ptr noundef %27) #21
  %70 = load i64, ptr %28, align 8
  %71 = call fastcc zeroext i1 @io_fill_cqe_aux(ptr noundef %4, i64 noundef %70, i32 noundef %69, i32 noundef 2)
  %72 = load i8, ptr %29, align 16
  %73 = and i8 %72, 48
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %76, label %75, !prof !10

75:                                               ; preds = %67
  call fastcc void @__io_commit_cqring_flush(ptr noundef %4) #24
  br label %76

76:                                               ; preds = %75, %67
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %77 = load i32, ptr %30, align 64
  %78 = load ptr, ptr %31, align 8
  %79 = getelementptr inbounds %struct.io_rings, ptr %78, i32 0, i32 1, i32 2
  store volatile i32 %77, ptr %79, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %80 = load i16, ptr %27, align 4
  %81 = add i16 %80, 1
  store i16 %81, ptr %27, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br i1 %71, label %82, label %87, !prof !10

82:                                               ; preds = %76
  call fastcc void @io_cqring_ev_posted(ptr noundef %4)
  br label %83

83:                                               ; preds = %82, %57
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %23) #21, !srcloc !13
  %84 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %23, ptr %23, i32 %34, ptr elementtype(i32) %23) #21, !srcloc !35
  %85 = extractvalue { i32, i32 } %84, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %32

87:                                               ; preds = %83, %76, %62, %41, %40
  %88 = phi i32 [ 0, %40 ], [ -125, %41 ], [ 1, %83 ], [ -125, %76 ], [ 0, %62 ]
  ret i32 %88
}

; Function Attrs: noinline nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @io_fill_cqe_aux(ptr noundef %0, i64 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #13 {
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 4
  %6 = load i32, ptr %5, align 8
  %7 = add i32 %6, 1
  store i32 %7, ptr %5, align 8
  %8 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 1), align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %4
  %11 = tail call ptr @llvm.thread.pointer() #21
  %12 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 2
  %13 = load i32, ptr %12, align 8
  %14 = lshr i32 %13, 5
  %15 = getelementptr i32, ptr @__cpu_online_mask, i32 %14
  %16 = load volatile i32, ptr %15, align 4
  %17 = and i32 %13, 31
  %18 = shl nuw i32 1, %17
  %19 = and i32 %18, %16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %33, label %21

21:                                               ; preds = %10
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !56
  %22 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %23 = icmp eq ptr %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %24, %21
  %25 = phi ptr [ %29, %24 ], [ %22, %21 ]
  %26 = load volatile ptr, ptr %25, align 4
  %27 = getelementptr inbounds %struct.tracepoint_func, ptr %25, i32 0, i32 1
  %28 = load ptr, ptr %27, align 4
  tail call void %26(ptr noundef %28, ptr noundef %0, i64 noundef %1, i32 noundef %2, i32 noundef %3) #21
  %29 = getelementptr %struct.tracepoint_func, ptr %25, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %24

32:                                               ; preds = %24, %21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !57
  br label %33

33:                                               ; preds = %32, %10, %4
  %34 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %37 = load i32, ptr %36, align 4
  %38 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %39 = load i32, ptr %38, align 64
  %40 = getelementptr inbounds %struct.io_rings, ptr %35, i32 0, i32 1
  %41 = load volatile i32, ptr %40, align 64
  %42 = sub i32 %39, %41
  %43 = icmp eq i32 %42, %37
  br i1 %43, label %53, label %44

44:                                               ; preds = %33
  %45 = add i32 %37, -1
  %46 = add i32 %39, 1
  store i32 %46, ptr %38, align 64
  %47 = and i32 %39, %45
  %48 = getelementptr %struct.io_rings, ptr %35, i32 0, i32 11, i32 %47
  %49 = icmp eq ptr %48, null
  br i1 %49, label %53, label %50, !prof !11

50:                                               ; preds = %44
  store volatile i64 %1, ptr %48, align 8
  %51 = getelementptr %struct.io_rings, ptr %35, i32 0, i32 11, i32 %47, i32 1
  store volatile i32 %2, ptr %51, align 8
  %52 = getelementptr %struct.io_rings, ptr %35, i32 0, i32 11, i32 %47, i32 2
  store volatile i32 %3, ptr %52, align 4
  br label %83

53:                                               ; preds = %44, %33
  %54 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %55 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %54, i32 noundef 4196896, i32 noundef 24) #25
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %53
  %58 = load ptr, ptr %34, align 8
  %59 = getelementptr inbounds %struct.io_rings, ptr %58, i32 0, i32 9
  %60 = load volatile i32, ptr %59, align 4
  %61 = add i32 %60, 1
  store volatile i32 %61, ptr %59, align 4
  %62 = load i32, ptr %5, align 8
  %63 = add i32 %62, -1
  store i32 %63, ptr %5, align 8
  br label %81

64:                                               ; preds = %53
  %65 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15
  %66 = load volatile ptr, ptr %65, align 4
  %67 = icmp eq ptr %66, %65
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 0, ptr noundef %69) #21
  %70 = load ptr, ptr %34, align 8
  %71 = getelementptr inbounds %struct.io_rings, ptr %70, i32 0, i32 7
  %72 = load i32, ptr %71, align 4
  %73 = or i32 %72, 2
  store volatile i32 %73, ptr %71, align 4
  br label %74

74:                                               ; preds = %68, %64
  store i64 %1, ptr %55, align 8
  %75 = getelementptr inbounds %struct.io_uring_cqe, ptr %55, i32 0, i32 1
  store i32 %2, ptr %75, align 8
  %76 = getelementptr inbounds %struct.io_uring_cqe, ptr %55, i32 0, i32 2
  store i32 %3, ptr %76, align 4
  %77 = getelementptr inbounds %struct.io_overflow_cqe, ptr %55, i32 0, i32 1
  %78 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15, i32 1
  %79 = load ptr, ptr %78, align 4
  store ptr %77, ptr %78, align 4
  store ptr %65, ptr %77, align 8
  %80 = getelementptr inbounds %struct.io_overflow_cqe, ptr %55, i32 0, i32 1, i32 1
  store ptr %79, ptr %80, align 4
  store volatile ptr %77, ptr %79, align 4
  br label %81

81:                                               ; preds = %74, %57
  %82 = xor i1 %56, true
  br label %83

83:                                               ; preds = %81, %50
  %84 = phi i1 [ true, %50 ], [ %82, %81 ]
  ret i1 %84
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sync_file_range(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sock_from_file(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sys_sendmsg_sock(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_setup_async_msg(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %40

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %8 = load i8, ptr %7, align 8
  %9 = zext i8 %8 to i32
  %10 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %9, i32 1
  %11 = load i16, ptr %10, align 2
  %12 = icmp eq i16 %11, 0
  %13 = load i1, ptr @io_alloc_async_data.__already_done, align 1
  %14 = xor i1 %13, true
  %15 = select i1 %12, i1 %14, i1 false
  br i1 %15, label %16, label %21, !prof !11

16:                                               ; preds = %6
  store i1 true, ptr @io_alloc_async_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3482, i32 noundef 9, ptr noundef null) #21
  %17 = load i8, ptr %7, align 8
  %18 = zext i8 %17 to i32
  %19 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %18, i32 1
  %20 = load i16, ptr %19, align 2
  br label %21

21:                                               ; preds = %16, %6
  %22 = phi i16 [ %20, %16 ], [ %11, %6 ]
  %23 = zext i16 %22 to i32
  %24 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %23, i32 noundef 3264) #26
  store ptr %24, ptr %3, align 8
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.io_async_msghdr, ptr %1, i32 0, i32 1
  %28 = load ptr, ptr %27, align 8
  tail call void @kfree(ptr noundef %28) #21
  br label %40

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %31 = load i32, ptr %30, align 4
  %32 = or i32 %31, 2105344
  store i32 %32, ptr %30, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 64 dereferenceable(256) %24, ptr noundef align 8 dereferenceable(256) %1, i32 256, i1 false)
  %33 = getelementptr inbounds %struct.io_async_msghdr, ptr %24, i32 0, i32 4
  %34 = getelementptr inbounds %struct.io_async_msghdr, ptr %24, i32 0, i32 3
  store ptr %33, ptr %34, align 8
  %35 = getelementptr inbounds %struct.io_async_msghdr, ptr %24, i32 0, i32 1
  %36 = load ptr, ptr %35, align 64
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.io_async_msghdr, ptr %24, i32 0, i32 3, i32 2, i32 5
  store ptr %24, ptr %39, align 4
  br label %40

40:                                               ; preds = %38, %29, %26, %2
  %41 = phi i32 [ -12, %26 ], [ -11, %2 ], [ -11, %38 ], [ -11, %29 ]
  ret i32 %41
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_sendmsg(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sys_recvmsg_sock(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_recvmsg(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_timeout_fn(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11, i32 1
  %7 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %6) #21
  %8 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 3
  %9 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 3, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = load ptr, ptr %8, align 4
  %12 = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  store ptr %10, ptr %12, align 4
  store volatile ptr %11, ptr %10, align 4
  store volatile ptr %8, ptr %8, align 4
  store ptr %8, ptr %9, align 4
  %13 = load ptr, ptr %4, align 8
  %14 = getelementptr inbounds %struct.io_ring_ctx, ptr %13, i32 0, i32 10, i32 5
  %15 = load volatile i32, ptr %14, align 4
  %16 = add i32 %15, 1
  store volatile i32 %16, ptr %14, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %6, i32 noundef %7) #21
  %17 = getelementptr i8, ptr %0, i32 68
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %30

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = or i32 %23, 256
  %25 = and i32 %23, 64
  %26 = icmp eq i32 %25, 0
  %27 = and i32 %24, -4194369
  %28 = or i32 %27, 4194304
  %29 = select i1 %26, i32 %24, i32 %28
  store i32 %29, ptr %22, align 4
  br label %30

30:                                               ; preds = %21, %1
  %31 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 6
  store i32 -62, ptr %31, align 8
  %32 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 15, i32 1
  store ptr @io_req_task_complete, ptr %32, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %3, i1 noundef zeroext false)
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_start_range_ns(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_timeout_cancel(ptr noundef readonly %0, i64 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 13
  br label %4

4:                                                ; preds = %8, %2
  %5 = phi ptr [ %3, %2 ], [ %6, %8 ]
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, %3
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr i8, ptr %6, i32 52
  %10 = load i64, ptr %9, align 8
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %12, label %4

12:                                               ; preds = %8
  %13 = getelementptr i8, ptr %6, i32 116
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr inbounds %struct.io_timeout_data, ptr %14, i32 0, i32 1
  %16 = tail call i32 @hrtimer_try_to_cancel(ptr noundef %15) #21
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr i8, ptr %6, i32 -12
  %20 = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = load ptr, ptr %6, align 4
  %23 = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  store ptr %21, ptr %23, align 4
  store volatile ptr %22, ptr %21, align 4
  store volatile ptr %6, ptr %6, align 4
  store ptr %6, ptr %20, align 4
  %24 = icmp ugt ptr %19, inttoptr (i32 -4096 to ptr)
  br i1 %24, label %25, label %28

25:                                               ; preds = %18, %12, %4
  %26 = phi ptr [ %19, %18 ], [ inttoptr (i32 -114 to ptr), %12 ], [ inttoptr (i32 -2 to ptr), %4 ]
  %27 = ptrtoint ptr %26 to i32
  br label %55

28:                                               ; preds = %18
  %29 = getelementptr i8, ptr %6, i32 48
  %30 = load i32, ptr %29, align 4
  %31 = or i32 %30, 256
  %32 = and i32 %30, 64
  %33 = icmp eq i32 %32, 0
  %34 = and i32 %31, -4194369
  %35 = or i32 %34, 4194304
  %36 = select i1 %33, i32 %31, i32 %35
  store i32 %36, ptr %29, align 4
  tail call fastcc void @io_fill_cqe_req(ptr noundef %19, i32 noundef -125)
  %37 = load i32, ptr %29, align 4
  %38 = and i32 %37, 524288
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %53, label %40, !prof !10

40:                                               ; preds = %28
  %41 = getelementptr i8, ptr %6, i32 88
  %42 = load volatile i32, ptr %41, align 4
  %43 = add i32 %42, 127
  %44 = icmp ult i32 %43, 128
  %45 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %46 = xor i1 %45, true
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %48, label %49, !prof !11

48:                                               ; preds = %40
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %49

49:                                               ; preds = %48, %40
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %41) #21, !srcloc !13
  %50 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %41, ptr %41, i32 1, ptr elementtype(i32) %41) #21, !srcloc !35
  %51 = extractvalue { i32, i32 } %50, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %49, %28
  %54 = getelementptr i8, ptr %6, i32 100
  store ptr @io_free_req_work, ptr %54, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %19, i1 noundef zeroext false) #21
  br label %55

55:                                               ; preds = %53, %49, %25
  %56 = phi i32 [ %27, %25 ], [ 0, %49 ], [ 0, %53 ]
  ret i32 %56
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @hrtimer_init(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_timeout_get_clock(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_timeout_data, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 12
  switch i32 %4, label %6 [
    i32 4, label %10
    i32 8, label %5
    i32 0, label %9
  ]

5:                                                ; preds = %1
  br label %10

6:                                                ; preds = %1
  %7 = load i1, ptr @io_timeout_get_clock.__already_done, align 1
  br i1 %7, label %9, label %8, !prof !10

8:                                                ; preds = %6
  store i1 true, ptr @io_timeout_get_clock.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6111, i32 noundef 9, ptr noundef null) #21
  br label %9

9:                                                ; preds = %8, %6, %1
  br label %10

10:                                               ; preds = %9, %5, %1
  %11 = phi i32 [ 1, %9 ], [ 0, %5 ], [ 7, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_link_timeout_fn(ptr nocapture noundef readonly %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11, i32 1
  %7 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %6) #21
  %8 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  store ptr null, ptr %8, align 4
  %10 = icmp eq ptr %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %9, i32 0, i32 14
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %13, i32 0, i32 14
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %12, align 8
  store ptr null, ptr %14, align 8
  %16 = getelementptr inbounds %struct.io_kiocb, ptr %9, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = and i32 %17, 524288
  %19 = icmp eq i32 %18, 0
  %20 = load i1, ptr @req_ref_inc_not_zero.__already_done, align 1
  %21 = xor i1 %20, true
  %22 = select i1 %19, i1 %21, i1 false
  br i1 %22, label %23, label %24, !prof !11

23:                                               ; preds = %11
  store i1 true, ptr @req_ref_inc_not_zero.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1182, i32 noundef 9, ptr noundef null) #21
  br label %24

24:                                               ; preds = %23, %11
  %25 = getelementptr inbounds %struct.io_kiocb, ptr %9, i32 0, i32 13
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %25) #21, !srcloc !13
  %26 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %25, ptr %25, i32 0, i32 1, ptr elementtype(i32) %25) #21, !srcloc !25
  %27 = extractvalue { i32, i32, i32 } %26, 0
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !26
  br label %30

30:                                               ; preds = %29, %24, %1
  %31 = phi ptr [ null, %1 ], [ null, %24 ], [ %9, %29 ]
  %32 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 3
  %33 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 3, i32 1
  %34 = load ptr, ptr %33, align 4
  %35 = load ptr, ptr %32, align 4
  %36 = getelementptr inbounds %struct.list_head, ptr %35, i32 0, i32 1
  store ptr %34, ptr %36, align 4
  store volatile ptr %35, ptr %34, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %32, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %33, align 4
  %37 = getelementptr inbounds %struct.io_timeout, ptr %3, i32 0, i32 5
  store ptr %31, ptr %37, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %6, i32 noundef %7) #21
  %38 = getelementptr inbounds %struct.io_kiocb, ptr %3, i32 0, i32 15, i32 1
  store ptr @io_req_task_link_timeout, ptr %38, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %3, i1 noundef zeroext false)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_req_task_link_timeout(ptr noundef %0, ptr nocapture noundef readnone %1) #0 {
  %3 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 5
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %8 = load ptr, ptr %7, align 4
  %9 = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 4
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %4, i32 0, i32 5
  %15 = load i64, ptr %14, align 8
  %16 = tail call fastcc i32 @io_try_cancel_userdata(ptr noundef %0, i64 noundef %15)
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 -62, i32 %16
  br label %19

19:                                               ; preds = %13, %6
  %20 = phi i32 [ -2, %6 ], [ %18, %13 ]
  %21 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %22 = load ptr, ptr %21, align 8
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %22, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %23) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef %20, i32 noundef 0) #21
  %24 = getelementptr inbounds %struct.anon.178, ptr %22, i32 0, i32 3
  %25 = load i8, ptr %24, align 16
  %26 = and i8 %25, 48
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %29, label %28, !prof !10

28:                                               ; preds = %19
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %22) #24
  br label %29

29:                                               ; preds = %28, %19
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %22, i32 0, i32 10
  %31 = load i32, ptr %30, align 64
  %32 = getelementptr inbounds %struct.anon.178, ptr %22, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds %struct.io_rings, ptr %33, i32 0, i32 1, i32 2
  store volatile i32 %31, ptr %34, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %35 = load i16, ptr %23, align 4
  %36 = add i16 %35, 1
  store i16 %36, ptr %23, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %22) #21
  %37 = getelementptr inbounds %struct.io_kiocb, ptr %4, i32 0, i32 4
  %38 = load i32, ptr %37, align 4
  %39 = and i32 %38, 524288
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %56, label %41, !prof !10

41:                                               ; preds = %29
  %42 = getelementptr inbounds %struct.io_kiocb, ptr %4, i32 0, i32 13
  %43 = load volatile i32, ptr %42, align 4
  %44 = add i32 %43, 127
  %45 = icmp ult i32 %44, 128
  %46 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %47 = xor i1 %46, true
  %48 = select i1 %45, i1 %47, i1 false
  br i1 %48, label %49, label %50, !prof !11

49:                                               ; preds = %41
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %50

50:                                               ; preds = %49, %41
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %42) #21, !srcloc !13
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %42, ptr %42, i32 1, ptr elementtype(i32) %42) #21, !srcloc !35
  %52 = extractvalue { i32, i32 } %51, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %88

54:                                               ; preds = %50
  %55 = load i32, ptr %37, align 4
  br label %56

56:                                               ; preds = %54, %29
  %57 = phi i32 [ %55, %54 ], [ %38, %29 ]
  %58 = and i32 %57, 12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %70, label %60, !prof !10

60:                                               ; preds = %56
  %61 = and i32 %57, 1052928
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !10

63:                                               ; preds = %60
  tail call fastcc void @__io_req_find_next_prep(ptr noundef nonnull %4) #21
  br label %64

64:                                               ; preds = %63, %60
  %65 = getelementptr inbounds %struct.io_kiocb, ptr %4, i32 0, i32 14
  %66 = load ptr, ptr %65, align 8
  store ptr null, ptr %65, align 8
  %67 = icmp eq ptr %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.io_kiocb, ptr %66, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %69, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef nonnull %66, i1 noundef zeroext false) #21
  br label %70

70:                                               ; preds = %68, %64, %56
  tail call fastcc void @__io_free_req(ptr noundef nonnull %4) #24
  br label %88

71:                                               ; preds = %2
  %72 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %73 = load ptr, ptr %72, align 8
  %74 = getelementptr inbounds %struct.io_ring_ctx, ptr %73, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %74) #21
  tail call fastcc void @__io_req_complete_post(ptr noundef %0, i32 noundef -62, i32 noundef 0) #21
  %75 = getelementptr inbounds %struct.anon.178, ptr %73, i32 0, i32 3
  %76 = load i8, ptr %75, align 16
  %77 = and i8 %76, 48
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %80, label %79, !prof !10

79:                                               ; preds = %71
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %73) #24
  br label %80

80:                                               ; preds = %79, %71
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %81 = getelementptr inbounds %struct.io_ring_ctx, ptr %73, i32 0, i32 10
  %82 = load i32, ptr %81, align 64
  %83 = getelementptr inbounds %struct.anon.178, ptr %73, i32 0, i32 1
  %84 = load ptr, ptr %83, align 8
  %85 = getelementptr inbounds %struct.io_rings, ptr %84, i32 0, i32 1, i32 2
  store volatile i32 %82, ptr %85, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %86 = load i16, ptr %74, align 4
  %87 = add i16 %86, 1
  store i16 %87, ptr %74, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %73) #21
  br label %88

88:                                               ; preds = %80, %70, %50
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_try_cancel_userdata(ptr nocapture noundef readonly %0, i64 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.io_cancel_data, align 8
  %4 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %5 = load ptr, ptr %4, align 8
  %6 = tail call ptr @llvm.thread.pointer() #21
  %7 = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 15728640
  %10 = load volatile i32, ptr %7, align 4
  %11 = and i32 %10, 983040
  %12 = or i32 %11, %9
  %13 = load volatile i32, ptr %7, align 4
  %14 = and i32 %13, 256
  %15 = or i32 %12, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 4
  %19 = load i32, ptr %18, align 4
  %20 = and i32 %19, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 69
  %24 = load ptr, ptr %23, align 64
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %34

26:                                               ; preds = %22, %17, %2
  %27 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %28 = load ptr, ptr %27, align 4
  %29 = icmp ne ptr %28, %6
  %30 = load i1, ptr @io_try_cancel_userdata.__already_done, align 1
  %31 = xor i1 %30, true
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %34, !prof !11

33:                                               ; preds = %26
  store i1 true, ptr @io_try_cancel_userdata.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6386, i32 noundef 9, ptr noundef null) #21
  br label %34

34:                                               ; preds = %33, %26, %22
  %35 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 9
  %36 = load ptr, ptr %35, align 4
  %37 = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 91
  %38 = load ptr, ptr %37, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  store i64 0, ptr %3, align 8, !annotation !9
  store ptr %5, ptr %3, align 8
  %39 = getelementptr inbounds %struct.io_cancel_data, ptr %3, i32 0, i32 1
  store i64 %1, ptr %39, align 8
  %40 = icmp eq ptr %38, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.io_uring_task, ptr %38, i32 0, i32 4
  %43 = load ptr, ptr %42, align 8
  %44 = icmp eq ptr %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = call i32 @io_wq_cancel_cb(ptr noundef nonnull %43, ptr noundef nonnull @io_cancel_cb, ptr noundef nonnull %3, i1 noundef zeroext false) #21
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %49

48:                                               ; preds = %45, %41, %34
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  br label %51

49:                                               ; preds = %45
  %50 = icmp eq i32 %46, 1
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  br i1 %50, label %51, label %89

51:                                               ; preds = %49, %48
  %52 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %52) #21
  %53 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11, i32 3
  %54 = load ptr, ptr %53, align 16
  %55 = trunc i64 %1 to i32
  %56 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11, i32 4
  %57 = load i32, ptr %56, align 4
  %58 = mul i32 %55, 1640531527
  %59 = sub i32 32, %57
  %60 = lshr i32 %58, %59
  %61 = getelementptr %struct.hlist_head, ptr %54, i32 %60
  %62 = load ptr, ptr %61, align 4
  %63 = icmp eq ptr %62, null
  %64 = getelementptr i8, ptr %62, i32 -116
  %65 = icmp eq ptr %64, null
  %66 = or i1 %63, %65
  br i1 %66, label %80, label %67

67:                                               ; preds = %72, %51
  %68 = phi ptr [ %76, %72 ], [ %64, %51 ]
  %69 = getelementptr inbounds %struct.io_kiocb, ptr %68, i32 0, i32 5
  %70 = load i64, ptr %69, align 8
  %71 = icmp eq i64 %70, %1
  br i1 %71, label %79, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.io_kiocb, ptr %68, i32 0, i32 16
  %74 = load ptr, ptr %73, align 4
  %75 = icmp eq ptr %74, null
  %76 = getelementptr i8, ptr %74, i32 -116
  %77 = icmp eq ptr %76, null
  %78 = or i1 %75, %77
  br i1 %78, label %80, label %67

79:                                               ; preds = %67
  call fastcc void @io_poll_cancel_req(ptr noundef nonnull %68) #21
  br label %85

80:                                               ; preds = %72, %51
  %81 = getelementptr inbounds %struct.io_ring_ctx, ptr %5, i32 0, i32 11, i32 1
  call void @_raw_spin_lock_irq(ptr noundef %81) #21
  %82 = call fastcc i32 @io_timeout_cancel(ptr noundef %5, i64 noundef %1)
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %83 = load i16, ptr %81, align 4
  %84 = add i16 %83, 1
  store i16 %84, ptr %81, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %85

85:                                               ; preds = %80, %79
  %86 = phi i32 [ 0, %79 ], [ %82, %80 ]
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %87 = load i16, ptr %52, align 4
  %88 = add i16 %87, 1
  store i16 %88, ptr %52, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %89

89:                                               ; preds = %85, %49
  %90 = phi i32 [ %86, %85 ], [ 0, %49 ]
  ret i32 %90
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync)
define internal zeroext i1 @io_cancel_cb(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #17 {
  %3 = getelementptr i8, ptr %0, i32 -52
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %1, align 8
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr i8, ptr %0, i32 -68
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds %struct.io_cancel_data, ptr %1, i32 0, i32 1
  %11 = load i64, ptr %10, align 8
  %12 = icmp eq i64 %9, %11
  br label %13

13:                                               ; preds = %7, %2
  %14 = phi i1 [ false, %2 ], [ %12, %7 ]
  ret i1 %14
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_poll_cancel_req(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 22
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #21, !srcloc !13
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_or\0A1:\09ldrex\09$0, [$3]\0A\09orr\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 -2147483648, ptr elementtype(i32) %2) #21, !srcloc !79
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !64
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #21, !srcloc !13
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %2, ptr %2, i32 1, ptr elementtype(i32) %2) #21, !srcloc !65
  %5 = extractvalue { i32, i32, i32 } %4, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !66
  %6 = and i32 %5, 1048575
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %45

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  store i32 0, ptr %9, align 8
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %11 = load i8, ptr %10, align 8
  %12 = icmp eq i8 %11, 6
  %13 = select i1 %12, ptr @io_poll_task_func, ptr @io_apoll_task_func
  %14 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr %13, ptr %14, align 4
  %15 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %18 = load i64, ptr %17, align 8
  %19 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 1), align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %8
  %22 = tail call ptr @llvm.thread.pointer() #21
  %23 = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 2
  %24 = load i32, ptr %23, align 8
  %25 = lshr i32 %24, 5
  %26 = getelementptr i32, ptr @__cpu_online_mask, i32 %25
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %24, 31
  %29 = shl nuw i32 1, %28
  %30 = and i32 %29, %27
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !77
  %33 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_task_add, i32 0, i32 7), align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %35, %32
  %36 = phi ptr [ %40, %35 ], [ %33, %32 ]
  %37 = load volatile ptr, ptr %36, align 4
  %38 = getelementptr inbounds %struct.tracepoint_func, ptr %36, i32 0, i32 1
  %39 = load ptr, ptr %38, align 4
  tail call void %37(ptr noundef %39, ptr noundef %16, i8 noundef zeroext %11, i64 noundef %18, i32 noundef 0) #21
  %40 = getelementptr %struct.tracepoint_func, ptr %36, i32 1
  %41 = load ptr, ptr %40, align 4
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %35

43:                                               ; preds = %35, %32
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !78
  br label %44

44:                                               ; preds = %43, %21, %8
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %45

45:                                               ; preds = %44, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_unused_fd_flags(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @do_accept(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_unused_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fd_install(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_install_fixed_file(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %6 = load ptr, ptr %5, align 8
  %7 = and i32 %2, 2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %10) #21
  br label %11

11:                                               ; preds = %9, %4
  %12 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 3
  %13 = load ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, @io_uring_fops
  br i1 %14, label %145, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 13, i32 2
  %17 = load ptr, ptr %16, align 8
  %18 = icmp eq ptr %17, null
  br i1 %18, label %145, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 1, i32 9
  %21 = load i32, ptr %20, align 8
  %22 = icmp ugt i32 %21, %3
  br i1 %22, label %23, label %145

23:                                               ; preds = %19
  %24 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %3, i32 %21) #21, !srcloc !40
  %25 = and i32 %24, %3
  %26 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 1, i32 8
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr %struct.io_fixed_file, ptr %27, i32 %25
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = and i32 %25, 511
  %33 = lshr i32 %25, 9
  br label %79

34:                                               ; preds = %23
  %35 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 13
  %36 = load ptr, ptr %35, align 16
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %54

38:                                               ; preds = %34
  %39 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %40 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %39, i32 noundef 3520, i32 noundef 36) #25
  %41 = icmp eq ptr %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = tail call i32 @percpu_ref_init(ptr noundef nonnull %40, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  tail call void @kfree(ptr noundef nonnull %40) #21
  br label %46

46:                                               ; preds = %45, %38
  store ptr null, ptr %35, align 16
  br label %145

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.io_rsrc_node, ptr %40, i32 0, i32 1
  store volatile ptr %48, ptr %48, align 8
  %49 = getelementptr inbounds %struct.io_rsrc_node, ptr %40, i32 0, i32 1, i32 1
  store ptr %48, ptr %49, align 4
  %50 = getelementptr inbounds %struct.io_rsrc_node, ptr %40, i32 0, i32 2
  store volatile ptr %50, ptr %50, align 8
  %51 = getelementptr inbounds %struct.io_rsrc_node, ptr %40, i32 0, i32 2, i32 1
  store ptr %50, ptr %51, align 4
  %52 = getelementptr inbounds %struct.io_rsrc_node, ptr %40, i32 0, i32 5
  store i8 0, ptr %52, align 8
  store ptr %40, ptr %35, align 16
  %53 = load i32, ptr %28, align 4
  br label %54

54:                                               ; preds = %47, %34
  %55 = phi i32 [ %53, %47 ], [ %29, %34 ]
  %56 = load ptr, ptr %16, align 8
  %57 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 1, i32 6
  %58 = load ptr, ptr %57, align 4
  %59 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %60 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %59, i32 noundef 3520, i32 noundef 24) #25
  %61 = icmp eq ptr %60, null
  br i1 %61, label %145, label %62

62:                                               ; preds = %54
  %63 = and i32 %55, -4
  %64 = inttoptr i32 %63 to ptr
  %65 = and i32 %25, 511
  %66 = lshr i32 %25, 9
  %67 = getelementptr inbounds %struct.io_rsrc_data, ptr %56, i32 0, i32 1
  %68 = load ptr, ptr %67, align 4
  %69 = getelementptr ptr, ptr %68, i32 %66
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr i64, ptr %70, i32 %65
  %72 = load i64, ptr %71, align 8
  %73 = getelementptr inbounds %struct.io_rsrc_put, ptr %60, i32 0, i32 1
  store i64 %72, ptr %73, align 8
  %74 = getelementptr inbounds %struct.io_rsrc_put, ptr %60, i32 0, i32 2
  store ptr %64, ptr %74, align 8
  %75 = getelementptr inbounds %struct.io_rsrc_node, ptr %58, i32 0, i32 2
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr inbounds %struct.list_head, ptr %76, i32 0, i32 1
  store ptr %60, ptr %77, align 4
  store ptr %76, ptr %60, align 8
  %78 = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  store ptr %75, ptr %78, align 4
  store volatile ptr %60, ptr %75, align 4
  store i32 0, ptr %28, align 4
  br label %79

79:                                               ; preds = %62, %31
  %80 = phi i32 [ %33, %31 ], [ %66, %62 ]
  %81 = phi i32 [ %32, %31 ], [ %65, %62 ]
  %82 = load ptr, ptr %16, align 8
  %83 = getelementptr inbounds %struct.io_rsrc_data, ptr %82, i32 0, i32 1
  %84 = load ptr, ptr %83, align 4
  %85 = getelementptr ptr, ptr %84, i32 %80
  %86 = load ptr, ptr %85, align 4
  %87 = getelementptr i64, ptr %86, i32 %81
  store i64 0, ptr %87, align 8
  %88 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 2
  %89 = load ptr, ptr %88, align 8
  %90 = load i16, ptr %89, align 8
  %91 = and i16 %90, -4096
  %92 = icmp eq i16 %91, -32768
  %93 = select i1 %92, i32 2, i32 0
  switch i16 %91, label %116 [
    i16 24576, label %94
    i16 -16384, label %133
    i16 -32768, label %100
  ]

94:                                               ; preds = %79
  %95 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 17
  %96 = load ptr, ptr %95, align 8
  %97 = load ptr, ptr %96, align 4
  %98 = tail call ptr @I_BDEV(ptr noundef %97) #21
  %99 = icmp eq ptr %98, null
  br i1 %99, label %133, label %126

100:                                              ; preds = %79
  %101 = getelementptr inbounds %struct.inode, ptr %89, i32 0, i32 8
  %102 = load ptr, ptr %101, align 4
  %103 = getelementptr inbounds %struct.super_block, ptr %102, i32 0, i32 20
  %104 = load ptr, ptr %103, align 4
  %105 = icmp eq ptr %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.block_device, ptr %104, i32 0, i32 18
  %108 = load ptr, ptr %107, align 4
  %109 = getelementptr inbounds %struct.request_queue, ptr %108, i32 0, i32 11
  %110 = load volatile i32, ptr %109, align 4
  %111 = and i32 %110, 536870912
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %135, label %113

113:                                              ; preds = %106, %100
  %114 = load ptr, ptr %12, align 4
  %115 = icmp eq ptr %114, @io_uring_fops
  br i1 %115, label %135, label %133

116:                                              ; preds = %79
  %117 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 7
  %118 = load i32, ptr %117, align 4
  %119 = and i32 %118, 2048
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %133

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 8
  %123 = load i32, ptr %122, align 8
  %124 = and i32 %123, 134217728
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %135, label %133

126:                                              ; preds = %94
  %127 = getelementptr inbounds %struct.block_device, ptr %98, i32 0, i32 18
  %128 = load ptr, ptr %127, align 4
  %129 = getelementptr inbounds %struct.request_queue, ptr %128, i32 0, i32 11
  %130 = load volatile i32, ptr %129, align 4
  %131 = and i32 %130, 536870912
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %126, %121, %116, %113, %94, %79
  %134 = or i32 %93, 1
  br label %135

135:                                              ; preds = %133, %126, %121, %113, %106
  %136 = phi i32 [ %134, %133 ], [ %93, %126 ], [ %93, %121 ], [ %93, %106 ], [ %93, %113 ]
  %137 = ptrtoint ptr %1 to i32
  %138 = or i32 %136, %137
  store i32 %138, ptr %28, align 4
  %139 = tail call fastcc i32 @io_sqe_file_register(ptr noundef %6, ptr noundef %1, i32 noundef %25)
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %135
  store i32 0, ptr %28, align 4
  br i1 %30, label %145, label %143

142:                                              ; preds = %135
  br i1 %30, label %145, label %143

143:                                              ; preds = %142, %141
  %144 = load ptr, ptr %16, align 8
  tail call fastcc void @io_rsrc_node_switch(ptr noundef %6, ptr noundef %144)
  br label %145

145:                                              ; preds = %143, %142, %141, %54, %46, %19, %15, %11
  %146 = phi i32 [ %139, %143 ], [ 0, %142 ], [ %139, %141 ], [ -6, %15 ], [ -22, %19 ], [ -9, %11 ], [ -12, %54 ], [ -12, %46 ]
  br i1 %8, label %149, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %148) #21
  br label %149

149:                                              ; preds = %147, %145
  %150 = icmp eq i32 %146, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %149
  tail call void @fput(ptr noundef %1) #21
  br label %152

152:                                              ; preds = %151, %149
  ret i32 %146
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_rsrc_node_switch_start(ptr nocapture noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %3 = load ptr, ptr %2, align 16
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 36) #25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @percpu_ref_init(ptr noundef nonnull %7, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @kfree(ptr noundef nonnull %7) #21
  br label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.io_rsrc_node, ptr %7, i32 0, i32 1
  store volatile ptr %14, ptr %14, align 8
  %15 = getelementptr inbounds %struct.io_rsrc_node, ptr %7, i32 0, i32 1, i32 1
  store ptr %14, ptr %15, align 4
  %16 = getelementptr inbounds %struct.io_rsrc_node, ptr %7, i32 0, i32 2
  store volatile ptr %16, ptr %16, align 8
  %17 = getelementptr inbounds %struct.io_rsrc_node, ptr %7, i32 0, i32 2, i32 1
  store ptr %16, ptr %17, align 4
  %18 = getelementptr inbounds %struct.io_rsrc_node, ptr %7, i32 0, i32 5
  store i8 0, ptr %18, align 8
  br label %19

19:                                               ; preds = %13, %12, %5
  %20 = phi ptr [ null, %12 ], [ %7, %13 ], [ null, %5 ]
  store ptr %20, ptr %2, align 16
  %21 = icmp eq ptr %20, null
  %22 = select i1 %21, i32 -12, i32 0
  br label %23

23:                                               ; preds = %19, %1
  %24 = phi i32 [ %22, %19 ], [ 0, %1 ]
  ret i32 %24
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_fixed_file_set(ptr nocapture noundef writeonly %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 2
  %4 = load ptr, ptr %3, align 8
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, -4096
  %7 = icmp eq i16 %6, -32768
  %8 = select i1 %7, i32 2, i32 0
  switch i16 %6, label %32 [
    i16 24576, label %9
    i16 -16384, label %49
    i16 -32768, label %15
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 17
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 4
  %13 = tail call ptr @I_BDEV(ptr noundef %12) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %49, label %42

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 8
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr inbounds %struct.super_block, ptr %17, i32 0, i32 20
  %19 = load ptr, ptr %18, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.block_device, ptr %19, i32 0, i32 18
  %23 = load ptr, ptr %22, align 4
  %24 = getelementptr inbounds %struct.request_queue, ptr %23, i32 0, i32 11
  %25 = load volatile i32, ptr %24, align 4
  %26 = and i32 %25, 536870912
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %21, %15
  %29 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, @io_uring_fops
  br i1 %31, label %51, label %49

32:                                               ; preds = %2
  %33 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 7
  %34 = load i32, ptr %33, align 4
  %35 = and i32 %34, 2048
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 8
  %39 = load i32, ptr %38, align 8
  %40 = and i32 %39, 134217728
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %51, label %49

42:                                               ; preds = %9
  %43 = getelementptr inbounds %struct.block_device, ptr %13, i32 0, i32 18
  %44 = load ptr, ptr %43, align 4
  %45 = getelementptr inbounds %struct.request_queue, ptr %44, i32 0, i32 11
  %46 = load volatile i32, ptr %45, align 4
  %47 = and i32 %46, 536870912
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %42, %37, %32, %28, %9, %2
  %50 = or i32 %8, 1
  br label %51

51:                                               ; preds = %49, %42, %37, %28, %21
  %52 = phi i32 [ %50, %49 ], [ %8, %42 ], [ %8, %37 ], [ %8, %21 ], [ %8, %28 ]
  %53 = ptrtoint ptr %1 to i32
  %54 = or i32 %52, %53
  store i32 %54, ptr %0, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_sqe_file_register(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 4
  %7 = load ptr, ptr %6, align 16
  %8 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 8
  %9 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 8, i32 2
  tail call void @_raw_spin_lock_irq(ptr noundef %9) #21
  %10 = load ptr, ptr %8, align 4
  %11 = icmp eq ptr %10, %8
  %12 = icmp eq ptr %10, null
  %13 = or i1 %11, %12
  br i1 %13, label %48, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.sk_buff, ptr %10, i32 0, i32 3, i32 12
  %16 = load ptr, ptr %15, align 4
  %17 = load i16, ptr %16, align 4
  %18 = icmp slt i16 %17, 253
  br i1 %18, label %19, label %51

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 8, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = add i32 %21, -1
  store volatile i32 %22, ptr %20, align 4
  %23 = load ptr, ptr %10, align 8
  %24 = getelementptr inbounds %struct.anon.58, ptr %10, i32 0, i32 1
  %25 = load ptr, ptr %24, align 4
  store ptr null, ptr %24, align 4
  store ptr null, ptr %10, align 8
  %26 = getelementptr inbounds %struct.anon.58, ptr %23, i32 0, i32 1
  store volatile ptr %25, ptr %26, align 4
  store volatile ptr %23, ptr %25, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %27 = load i16, ptr %9, align 4
  %28 = add i16 %27, 1
  store i16 %28, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  %29 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %29) #21, !srcloc !13
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %29, ptr %29, i32 1, ptr elementtype(i32) %29) #21, !srcloc !14
  %31 = load i16, ptr %16, align 4
  %32 = sext i16 %31 to i32
  %33 = getelementptr %struct.scm_fp_list, ptr %16, i32 0, i32 3, i32 %32
  store ptr %1, ptr %33, align 4
  %34 = getelementptr inbounds %struct.scm_fp_list, ptr %16, i32 0, i32 2
  %35 = load ptr, ptr %34, align 4
  %36 = load i16, ptr %16, align 4
  %37 = sext i16 %36 to i32
  %38 = getelementptr %struct.scm_fp_list, ptr %16, i32 0, i32 3, i32 %37
  %39 = load ptr, ptr %38, align 4
  tail call void @unix_inflight(ptr noundef %35, ptr noundef %39) #21
  %40 = load i16, ptr %16, align 4
  %41 = add i16 %40, 1
  store i16 %41, ptr %16, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef %9) #21
  %42 = load ptr, ptr %8, align 4
  store volatile ptr %42, ptr %10, align 8
  store volatile ptr %8, ptr %24, align 4
  %43 = getelementptr inbounds %struct.sk_buff_list, ptr %42, i32 0, i32 1
  store volatile ptr %10, ptr %43, align 4
  store volatile ptr %10, ptr %8, align 4
  %44 = load i32, ptr %20, align 4
  %45 = add i32 %44, 1
  store volatile i32 %45, ptr %20, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %46 = load i16, ptr %9, align 4
  %47 = add i16 %46, 1
  store i16 %47, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  tail call void @fput(ptr noundef %1) #21
  br label %56

48:                                               ; preds = %3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %49 = load i16, ptr %9, align 4
  %50 = add i16 %49, 1
  store i16 %50, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %54

51:                                               ; preds = %14
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %52 = load i16, ptr %9, align 4
  %53 = add i16 %52, 1
  store i16 %53, ptr %9, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %54

54:                                               ; preds = %51, %48
  %55 = tail call fastcc i32 @__io_sqe_files_scm(ptr noundef %0, i32 noundef 1, i32 noundef %2)
  br label %56

56:                                               ; preds = %54, %19
  %57 = phi i32 [ 0, %19 ], [ %55, %54 ]
  ret i32 %57
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_rsrc_node_switch(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %4 = load ptr, ptr %3, align 16
  %5 = icmp eq ptr %4, null
  %6 = load i1, ptr @io_rsrc_node_switch.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %2
  store i1 true, ptr @io_rsrc_node_switch.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 7873, i32 noundef 9, ptr noundef null) #21
  br label %10

10:                                               ; preds = %9, %2
  %11 = icmp eq ptr %1, null
  br i1 %11, label %33, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  %16 = load i1, ptr @io_rsrc_node_switch.__already_done.73, align 1
  %17 = xor i1 %16, true
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %20, !prof !11

19:                                               ; preds = %12
  store i1 true, ptr @io_rsrc_node_switch.__already_done.73, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 7874, i32 noundef 9, ptr noundef null) #21
  br label %20

20:                                               ; preds = %19, %12
  tail call fastcc void @io_rsrc_refs_drop(ptr noundef %0) #22
  %21 = load ptr, ptr %13, align 4
  %22 = getelementptr inbounds %struct.io_rsrc_node, ptr %21, i32 0, i32 3
  store ptr %1, ptr %22, align 4
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 7
  tail call void @_raw_spin_lock_irq(ptr noundef %23) #21
  %24 = getelementptr inbounds %struct.io_rsrc_node, ptr %21, i32 0, i32 1
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 6
  %26 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 6, i32 1
  %27 = load ptr, ptr %26, align 4
  store ptr %24, ptr %26, align 4
  store ptr %25, ptr %24, align 4
  %28 = getelementptr inbounds %struct.io_rsrc_node, ptr %21, i32 0, i32 1, i32 1
  store ptr %27, ptr %28, align 4
  store volatile ptr %24, ptr %27, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %29 = load i16, ptr %23, align 4
  %30 = add i16 %29, 1
  store i16 %30, ptr %23, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  %31 = getelementptr inbounds %struct.io_rsrc_data, ptr %1, i32 0, i32 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %31) #21, !srcloc !13
  %32 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %31, ptr %31, i32 1, ptr elementtype(i32) %31) #21, !srcloc !14
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %21, ptr noundef null) #21
  br label %37

33:                                               ; preds = %10
  tail call fastcc void @io_rsrc_refs_drop(ptr noundef %0) #22
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %33, %20
  %38 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %39 = load ptr, ptr %3, align 16
  store ptr %39, ptr %38, align 4
  store ptr null, ptr %3, align 16
  br label %40

40:                                               ; preds = %37, %33
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @percpu_ref_init(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_rsrc_node_ref_zero(ptr nocapture noundef %0) #4 {
  %2 = getelementptr inbounds %struct.io_rsrc_node, ptr %0, i32 0, i32 3
  %3 = load ptr, ptr %2, align 4
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 13, i32 7
  %6 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %5) #21
  %7 = getelementptr inbounds %struct.io_rsrc_node, ptr %0, i32 0, i32 5
  store i8 1, ptr %7, align 4
  %8 = load ptr, ptr %2, align 4
  %9 = getelementptr inbounds %struct.io_rsrc_data, ptr %8, i32 0, i32 6
  %10 = load i8, ptr %9, align 4, !range !45
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 100, i32 0
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 13, i32 6
  %14 = load volatile ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, %13
  br i1 %15, label %40, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 13, i32 5
  br label %18

18:                                               ; preds = %24, %16
  %19 = phi ptr [ %14, %16 ], [ %32, %24 ]
  %20 = phi i1 [ false, %16 ], [ %31, %24 ]
  %21 = getelementptr i8, ptr %19, i32 24
  %22 = load i8, ptr %21, align 4, !range !45
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = load ptr, ptr %19, align 4
  %28 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  store ptr %26, ptr %28, align 4
  store volatile ptr %27, ptr %26, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %19, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %25, align 4
  %29 = getelementptr i8, ptr %19, i32 20
  %30 = tail call zeroext i1 @llist_add_batch(ptr noundef %29, ptr noundef %29, ptr noundef %17) #21
  %31 = or i1 %20, %30
  %32 = load volatile ptr, ptr %13, align 4
  %33 = icmp eq ptr %32, %13
  br i1 %33, label %34, label %18

34:                                               ; preds = %24, %18
  %35 = phi i1 [ %20, %18 ], [ %31, %24 ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %5, i32 noundef %6) #21
  br i1 %35, label %36, label %41

36:                                               ; preds = %34
  %37 = load ptr, ptr @system_wq, align 4
  %38 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 13, i32 4
  %39 = tail call zeroext i1 @mod_delayed_work_on(i32 noundef 16, ptr noundef %37, ptr noundef %38, i32 noundef %12) #21
  br label %41

40:                                               ; preds = %1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %5, i32 noundef %6) #21
  br label %41

41:                                               ; preds = %40, %36, %34
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mod_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @I_BDEV(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unix_inflight(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__io_sqe_files_scm(ptr nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.socket, ptr %5, i32 0, i32 4
  %7 = load ptr, ptr %6, align 16
  %8 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %9 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 1020) #25
  %10 = icmp eq ptr %9, null
  br i1 %10, label %86, label %11

11:                                               ; preds = %3
  %12 = tail call ptr @__alloc_skb(i32 noundef 0, i32 noundef 3264, i32 noundef 0, i32 noundef -1) #21
  %13 = icmp eq ptr %12, null
  br i1 %13, label %84, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 1
  store ptr %7, ptr %15, align 4
  %16 = tail call ptr @llvm.thread.pointer() #21
  %17 = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 83
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds %struct.cred, ptr %18, i32 0, i32 20
  %20 = load ptr, ptr %19, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %20) #21, !srcloc !13
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 1, ptr elementtype(i32) %20) #21, !srcloc !65
  %22 = extractvalue { i32, i32, i32 } %21, 0
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24, !prof !11

24:                                               ; preds = %14
  %25 = add i32 %22, 1
  %26 = or i32 %25, %22
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %30, label %28, !prof !10

28:                                               ; preds = %24, %14
  %29 = phi i32 [ 2, %14 ], [ 1, %24 ]
  tail call void @refcount_warn_saturate(ptr noundef %20, i32 noundef %29) #21
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %struct.scm_fp_list, ptr %9, i32 0, i32 2
  store ptr %20, ptr %31, align 4
  %32 = icmp sgt i32 %1, 0
  br i1 %32, label %33, label %83

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  br label %35

35:                                               ; preds = %51, %33
  %36 = phi i32 [ 0, %33 ], [ %52, %51 ]
  %37 = phi i32 [ 0, %33 ], [ %53, %51 ]
  %38 = add i32 %37, %2
  %39 = load ptr, ptr %34, align 4
  %40 = getelementptr %struct.io_fixed_file, ptr %39, i32 %38
  %41 = load i32, ptr %40, align 4
  %42 = and i32 %41, -4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %35
  %45 = inttoptr i32 %42 to ptr
  %46 = getelementptr inbounds %struct.file, ptr %45, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %46) #21, !srcloc !13
  %47 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %46, ptr %46, i32 1, ptr elementtype(i32) %46) #21, !srcloc !14
  %48 = getelementptr %struct.scm_fp_list, ptr %9, i32 0, i32 3, i32 %36
  store ptr %45, ptr %48, align 4
  %49 = load ptr, ptr %31, align 4
  tail call void @unix_inflight(ptr noundef %49, ptr noundef nonnull %45) #21
  %50 = add i32 %36, 1
  br label %51

51:                                               ; preds = %44, %35
  %52 = phi i32 [ %50, %44 ], [ %36, %35 ]
  %53 = add nuw nsw i32 %37, 1
  %54 = icmp eq i32 %53, %1
  br i1 %54, label %55, label %35

55:                                               ; preds = %51
  %56 = icmp eq i32 %52, 0
  br i1 %56, label %83, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct.scm_fp_list, ptr %9, i32 0, i32 1
  store i16 253, ptr %58, align 2
  %59 = trunc i32 %52 to i16
  store i16 %59, ptr %9, align 8
  %60 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 3, i32 12
  store ptr %9, ptr %60, align 4
  %61 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 4, i32 0, i32 1
  store ptr @unix_destruct_scm, ptr %61, align 4
  %62 = getelementptr inbounds %struct.sk_buff, ptr %12, i32 0, i32 18
  %63 = load i32, ptr %62, align 8
  %64 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 23
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %64) #21, !srcloc !13
  %65 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %64, ptr %64, i32 %63, ptr elementtype(i32) %64) #21, !srcloc !65
  %66 = extractvalue { i32, i32, i32 } %65, 0
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %72, label %68, !prof !11

68:                                               ; preds = %57
  %69 = add i32 %66, %63
  %70 = or i32 %69, %66
  %71 = icmp sgt i32 %70, -1
  br i1 %71, label %74, label %72, !prof !10

72:                                               ; preds = %68, %57
  %73 = phi i32 [ 2, %57 ], [ 1, %68 ]
  tail call void @refcount_warn_saturate(ptr noundef %64, i32 noundef %73) #21
  br label %74

74:                                               ; preds = %72, %68
  %75 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 8
  tail call void @skb_queue_head(ptr noundef %75, ptr noundef nonnull %12) #21
  %76 = icmp sgt i32 %52, 0
  br i1 %76, label %77, label %86

77:                                               ; preds = %77, %74
  %78 = phi i32 [ %81, %77 ], [ 0, %74 ]
  %79 = getelementptr %struct.scm_fp_list, ptr %9, i32 0, i32 3, i32 %78
  %80 = load ptr, ptr %79, align 4
  tail call void @fput(ptr noundef %80) #21
  %81 = add nuw nsw i32 %78, 1
  %82 = icmp eq i32 %81, %52
  br i1 %82, label %86, label %77

83:                                               ; preds = %55, %30
  tail call void @kfree_skb_reason(ptr noundef nonnull %12, i32 noundef 0) #21
  br label %84

84:                                               ; preds = %83, %11
  %85 = phi i32 [ 0, %83 ], [ -12, %11 ]
  tail call void @kfree(ptr noundef nonnull %9) #21
  br label %86

86:                                               ; preds = %84, %77, %74, %3
  %87 = phi i32 [ -12, %3 ], [ 0, %74 ], [ %85, %84 ], [ 0, %77 ]
  ret i32 %87
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @get_uid(ptr noundef returned %0) unnamed_addr #8 {
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #21, !srcloc !13
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #21, !srcloc !65
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5, !prof !11

5:                                                ; preds = %1
  %6 = add i32 %3, 1
  %7 = or i32 %6, %3
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %11, label %9, !prof !10

9:                                                ; preds = %5, %1
  %10 = phi i32 [ 2, %1 ], [ 1, %5 ]
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef %10) #21
  br label %11

11:                                               ; preds = %9, %5
  ret ptr %0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unix_destruct_scm(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_queue_head(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_skb(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree_skb_reason(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_rsrc_refs_drop(ptr nocapture noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 7
  %3 = load i32, ptr %2, align 16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %7 = load ptr, ptr %6, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %8 = load volatile i32, ptr %7, align 4
  %9 = and i32 %8, 3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20, !prof !10

11:                                               ; preds = %5
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #6, !srcloc !12
  %16 = add i32 %15, %8
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = sub i32 %18, %3
  store i32 %19, ptr %17, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #21, !srcloc !22
  br label %30

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.percpu_ref, ptr %7, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %22) #21, !srcloc !13
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %22, ptr %22, i32 %3, ptr elementtype(i32) %22) #21, !srcloc !35
  %24 = extractvalue { i32, i32 } %23, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30, !prof !11

26:                                               ; preds = %20
  %27 = load ptr, ptr %21, align 4
  %28 = getelementptr inbounds %struct.percpu_ref_data, ptr %27, i32 0, i32 1
  %29 = load ptr, ptr %28, align 4
  tail call void %29(ptr noundef %7) #21
  br label %30

30:                                               ; preds = %26, %20, %11
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  store i32 0, ptr %2, align 16
  br label %31

31:                                               ; preds = %30, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_kill_and_confirm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sys_connect_file(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_fallocate(ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__close_fd_get_file(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filp_close(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__io_register_rsrc_update(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #0 {
  %5 = alloca %struct.iovec, align 8
  %6 = alloca ptr, align 4
  %7 = alloca ptr, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %2, i32 0, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %390

14:                                               ; preds = %4
  %15 = load i32, ptr %2, align 8
  %16 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %15, i32 %3)
  %17 = extractvalue { i32, i1 } %16, 1
  br i1 %17, label %390, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %20 = load ptr, ptr %19, align 16
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %37

22:                                               ; preds = %18
  %23 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %24 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %23, i32 noundef 3520, i32 noundef 36) #25
  %25 = icmp eq ptr %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = tail call i32 @percpu_ref_init(ptr noundef nonnull %24, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  tail call void @kfree(ptr noundef nonnull %24) #21
  br label %30

30:                                               ; preds = %29, %22
  store ptr null, ptr %19, align 16
  br label %390

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.io_rsrc_node, ptr %24, i32 0, i32 1
  store volatile ptr %32, ptr %32, align 8
  %33 = getelementptr inbounds %struct.io_rsrc_node, ptr %24, i32 0, i32 1, i32 1
  store ptr %32, ptr %33, align 4
  %34 = getelementptr inbounds %struct.io_rsrc_node, ptr %24, i32 0, i32 2
  store volatile ptr %34, ptr %34, align 8
  %35 = getelementptr inbounds %struct.io_rsrc_node, ptr %24, i32 0, i32 2, i32 1
  store ptr %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.io_rsrc_node, ptr %24, i32 0, i32 5
  store i8 0, ptr %36, align 8
  store ptr %24, ptr %19, align 16
  br label %37

37:                                               ; preds = %31, %18
  switch i32 %1, label %390 [
    i32 0, label %38
    i32 1, label %233
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %2, i32 0, i32 3
  %40 = load i64, ptr %39, align 8
  %41 = trunc i64 %40 to i32
  %42 = inttoptr i32 %41 to ptr
  %43 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %2, i32 0, i32 2
  %44 = load i64, ptr %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = inttoptr i32 %45 to ptr
  %47 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 2
  %48 = load ptr, ptr %47, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #21
  store i32 0, ptr %9, align 4, !annotation !9
  %49 = icmp eq ptr %48, null
  br i1 %49, label %231, label %50

50:                                               ; preds = %38
  %51 = load i32, ptr %2, align 8
  %52 = add i32 %51, %3
  %53 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  %54 = load i32, ptr %53, align 8
  %55 = icmp ugt i32 %52, %54
  br i1 %55, label %231, label %56

56:                                               ; preds = %50
  %57 = icmp eq i32 %3, 0
  br i1 %57, label %229, label %58

58:                                               ; preds = %56
  %59 = icmp eq i32 %41, 0
  %60 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  %61 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %62 = getelementptr inbounds %struct.io_rsrc_data, ptr %48, i32 0, i32 1
  br label %63

63:                                               ; preds = %217, %58
  %64 = phi i1 [ false, %58 ], [ %218, %217 ]
  %65 = phi i32 [ 0, %58 ], [ %219, %217 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #21
  store i64 0, ptr %10, align 8
  br i1 %59, label %80, label %66

66:                                               ; preds = %63
  %67 = getelementptr i64, ptr %42, i32 %65
  %68 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %67, i32 8, i32 -1090519040) #23, !srcloc !27
  %69 = extractvalue { i32, i32 } %68, 0
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %79, !prof !10

71:                                               ; preds = %66
  %72 = tail call ptr @llvm.thread.pointer() #21
  %73 = getelementptr inbounds %struct.thread_info, ptr %72, i32 0, i32 3
  %74 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %73) #6, !srcloc !28
  %75 = and i32 %74, -13
  %76 = or i32 %75, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %76) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %77 = call i32 @arm_copy_from_user(ptr noundef nonnull %10, ptr noundef %67, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %74) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79, !prof !10

79:                                               ; preds = %71, %66
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br i1 %64, label %222, label %225

80:                                               ; preds = %71, %63
  %81 = getelementptr i32, ptr %46, i32 %65
  %82 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %81, i32 4, i32 -1090519040) #23, !srcloc !27
  %83 = extractvalue { i32, i32 } %82, 0
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %93, !prof !10

85:                                               ; preds = %80
  %86 = tail call ptr @llvm.thread.pointer() #21
  %87 = getelementptr inbounds %struct.thread_info, ptr %86, i32 0, i32 3
  %88 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %87) #6, !srcloc !28
  %89 = and i32 %88, -13
  %90 = or i32 %89, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %90) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %91 = call i32 @arm_copy_from_user(ptr noundef nonnull %9, ptr noundef %81, i32 noundef 4) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %88) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93, !prof !10

93:                                               ; preds = %85, %80
  %94 = phi i32 [ %91, %85 ], [ 4, %80 ]
  %95 = sub i32 4, %94
  %96 = getelementptr i8, ptr %9, i32 %95
  call void @llvm.memset.p0.i32(ptr align 1 %96, i8 0, i32 %94, i1 false) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br i1 %64, label %222, label %225

97:                                               ; preds = %85
  %98 = load i32, ptr %9, align 4
  %99 = icmp ugt i32 %98, -3
  %100 = load i64, ptr %10, align 8
  %101 = icmp ne i64 %100, 0
  %102 = select i1 %99, i1 %101, i1 false
  br i1 %102, label %214, label %103

103:                                              ; preds = %97
  %104 = icmp eq i32 %98, -2
  br i1 %104, label %217, label %105

105:                                              ; preds = %103
  %106 = load i32, ptr %2, align 8
  %107 = add i32 %106, %65
  %108 = load i32, ptr %53, align 8
  %109 = call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %107, i32 %108) #21, !srcloc !40
  %110 = and i32 %109, %107
  %111 = load ptr, ptr %60, align 4
  %112 = getelementptr %struct.io_fixed_file, ptr %111, i32 %110
  %113 = load i32, ptr %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %138, label %115

115:                                              ; preds = %105
  %116 = load i32, ptr %2, align 8
  %117 = load ptr, ptr %61, align 4
  %118 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %119 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %118, i32 noundef 3520, i32 noundef 24) #25
  %120 = icmp eq ptr %119, null
  br i1 %120, label %214, label %121

121:                                              ; preds = %115
  %122 = add i32 %116, %65
  %123 = and i32 %113, -4
  %124 = inttoptr i32 %123 to ptr
  %125 = and i32 %122, 511
  %126 = lshr i32 %122, 9
  %127 = load ptr, ptr %62, align 4
  %128 = getelementptr ptr, ptr %127, i32 %126
  %129 = load ptr, ptr %128, align 4
  %130 = getelementptr i64, ptr %129, i32 %125
  %131 = load i64, ptr %130, align 8
  %132 = getelementptr inbounds %struct.io_rsrc_put, ptr %119, i32 0, i32 1
  store i64 %131, ptr %132, align 8
  %133 = getelementptr inbounds %struct.io_rsrc_put, ptr %119, i32 0, i32 2
  store ptr %124, ptr %133, align 8
  %134 = getelementptr inbounds %struct.io_rsrc_node, ptr %117, i32 0, i32 2
  %135 = load ptr, ptr %134, align 4
  %136 = getelementptr inbounds %struct.list_head, ptr %135, i32 0, i32 1
  store ptr %119, ptr %136, align 4
  store ptr %135, ptr %119, align 8
  %137 = getelementptr inbounds %struct.list_head, ptr %119, i32 0, i32 1
  store ptr %134, ptr %137, align 4
  store volatile ptr %119, ptr %134, align 4
  store i32 0, ptr %112, align 4
  br label %138

138:                                              ; preds = %121, %105
  %139 = phi i1 [ true, %121 ], [ %64, %105 ]
  %140 = load i32, ptr %9, align 4
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %217, label %142

142:                                              ; preds = %138
  %143 = call ptr @fget(i32 noundef %140) #21
  %144 = icmp eq ptr %143, null
  br i1 %144, label %214, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.file, ptr %143, i32 0, i32 3
  %147 = load ptr, ptr %146, align 4
  %148 = icmp eq ptr %147, @io_uring_fops
  br i1 %148, label %149, label %150

149:                                              ; preds = %145
  call void @fput(ptr noundef nonnull %143) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br i1 %139, label %222, label %225

150:                                              ; preds = %145
  %151 = load i64, ptr %10, align 8
  %152 = load i32, ptr %2, align 8
  %153 = add i32 %152, %65
  %154 = and i32 %153, 511
  %155 = lshr i32 %153, 9
  %156 = load ptr, ptr %62, align 4
  %157 = getelementptr ptr, ptr %156, i32 %155
  %158 = load ptr, ptr %157, align 4
  %159 = getelementptr i64, ptr %158, i32 %154
  store i64 %151, ptr %159, align 8
  %160 = getelementptr inbounds %struct.file, ptr %143, i32 0, i32 2
  %161 = load ptr, ptr %160, align 8
  %162 = load i16, ptr %161, align 8
  %163 = and i16 %162, -4096
  %164 = icmp eq i16 %163, -32768
  %165 = select i1 %164, i32 2, i32 0
  switch i16 %163, label %188 [
    i16 24576, label %166
    i16 -16384, label %205
    i16 -32768, label %172
  ]

166:                                              ; preds = %150
  %167 = getelementptr inbounds %struct.file, ptr %143, i32 0, i32 17
  %168 = load ptr, ptr %167, align 8
  %169 = load ptr, ptr %168, align 4
  %170 = call ptr @I_BDEV(ptr noundef %169) #21
  %171 = icmp eq ptr %170, null
  br i1 %171, label %205, label %198

172:                                              ; preds = %150
  %173 = getelementptr inbounds %struct.inode, ptr %161, i32 0, i32 8
  %174 = load ptr, ptr %173, align 4
  %175 = getelementptr inbounds %struct.super_block, ptr %174, i32 0, i32 20
  %176 = load ptr, ptr %175, align 4
  %177 = icmp eq ptr %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %struct.block_device, ptr %176, i32 0, i32 18
  %180 = load ptr, ptr %179, align 4
  %181 = getelementptr inbounds %struct.request_queue, ptr %180, i32 0, i32 11
  %182 = load volatile i32, ptr %181, align 4
  %183 = and i32 %182, 536870912
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %207, label %185

185:                                              ; preds = %178, %172
  %186 = load ptr, ptr %146, align 4
  %187 = icmp eq ptr %186, @io_uring_fops
  br i1 %187, label %207, label %205

188:                                              ; preds = %150
  %189 = getelementptr inbounds %struct.file, ptr %143, i32 0, i32 7
  %190 = load i32, ptr %189, align 4
  %191 = and i32 %190, 2048
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = getelementptr inbounds %struct.file, ptr %143, i32 0, i32 8
  %195 = load i32, ptr %194, align 8
  %196 = and i32 %195, 134217728
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %207, label %205

198:                                              ; preds = %166
  %199 = getelementptr inbounds %struct.block_device, ptr %170, i32 0, i32 18
  %200 = load ptr, ptr %199, align 4
  %201 = getelementptr inbounds %struct.request_queue, ptr %200, i32 0, i32 11
  %202 = load volatile i32, ptr %201, align 4
  %203 = and i32 %202, 536870912
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %198, %193, %188, %185, %166, %150
  %206 = or i32 %165, 1
  br label %207

207:                                              ; preds = %205, %198, %193, %185, %178
  %208 = phi i32 [ %206, %205 ], [ %165, %198 ], [ %165, %193 ], [ %165, %178 ], [ %165, %185 ]
  %209 = ptrtoint ptr %143 to i32
  %210 = or i32 %208, %209
  store i32 %210, ptr %112, align 4
  %211 = call fastcc i32 @io_sqe_file_register(ptr noundef %0, ptr noundef nonnull %143, i32 noundef %110) #21
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %217, label %213

213:                                              ; preds = %207
  store i32 0, ptr %112, align 4
  call void @fput(ptr noundef nonnull %143) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br i1 %139, label %222, label %225

214:                                              ; preds = %142, %115, %97
  %215 = phi i32 [ -12, %115 ], [ -9, %142 ], [ -22, %97 ]
  %216 = phi i1 [ %64, %115 ], [ %139, %142 ], [ %64, %97 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  br i1 %216, label %222, label %225

217:                                              ; preds = %207, %138, %103
  %218 = phi i1 [ %64, %103 ], [ %139, %207 ], [ %139, %138 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #21
  %219 = add nuw i32 %65, 1
  %220 = icmp eq i32 %219, %3
  br i1 %220, label %221, label %63

221:                                              ; preds = %217
  br i1 %218, label %222, label %225

222:                                              ; preds = %221, %214, %213, %149, %93, %79
  %223 = phi i32 [ %65, %214 ], [ %3, %221 ], [ %65, %213 ], [ %65, %149 ], [ %65, %79 ], [ %65, %93 ]
  %224 = phi i32 [ %215, %214 ], [ 0, %221 ], [ %211, %213 ], [ -9, %149 ], [ -14, %79 ], [ -14, %93 ]
  call fastcc void @io_rsrc_node_switch(ptr noundef %0, ptr noundef nonnull %48) #21
  br label %225

225:                                              ; preds = %222, %221, %214, %213, %149, %93, %79
  %226 = phi i32 [ %65, %214 ], [ %223, %222 ], [ %3, %221 ], [ %65, %213 ], [ %65, %149 ], [ %65, %79 ], [ %65, %93 ]
  %227 = phi i32 [ %215, %214 ], [ %224, %222 ], [ 0, %221 ], [ %211, %213 ], [ -9, %149 ], [ -14, %79 ], [ -14, %93 ]
  %228 = icmp eq i32 %226, 0
  br i1 %228, label %229, label %231

229:                                              ; preds = %225, %56
  %230 = phi i32 [ %227, %225 ], [ 0, %56 ]
  br label %231

231:                                              ; preds = %229, %225, %50, %38
  %232 = phi i32 [ -6, %38 ], [ -22, %50 ], [ %230, %229 ], [ %226, %225 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #21
  br label %390

233:                                              ; preds = %37
  %234 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %2, i32 0, i32 3
  %235 = load i64, ptr %234, align 8
  %236 = trunc i64 %235 to i32
  %237 = inttoptr i32 %236 to ptr
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #21
  store i64 0, ptr %5, align 8, !annotation !9
  %238 = getelementptr inbounds %struct.io_uring_rsrc_update2, ptr %2, i32 0, i32 2
  %239 = load i64, ptr %238, align 8
  %240 = trunc i64 %239 to i32
  %241 = inttoptr i32 %240 to ptr
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4
  %242 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 3
  %243 = load ptr, ptr %242, align 4
  %244 = icmp eq ptr %243, null
  br i1 %244, label %388, label %245

245:                                              ; preds = %233
  %246 = load i32, ptr %2, align 8
  %247 = add i32 %246, %3
  %248 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  %249 = load i32, ptr %248, align 4
  %250 = icmp ugt i32 %247, %249
  br i1 %250, label %388, label %251

251:                                              ; preds = %245
  %252 = icmp eq i32 %3, 0
  br i1 %252, label %386, label %253

253:                                              ; preds = %251
  %254 = icmp eq i32 %236, 0
  %255 = getelementptr inbounds %struct.iovec, ptr %5, i32 0, i32 1
  %256 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  %257 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %258 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store ptr null, ptr %7, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  store i64 0, ptr %8, align 8
  %259 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %241, i32 8, i32 -1090519040) #23, !srcloc !27
  %260 = extractvalue { i32, i32 } %259, 0
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %263, label %262, !prof !10

262:                                              ; preds = %253
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br label %386

263:                                              ; preds = %253
  %264 = tail call ptr @llvm.thread.pointer() #21
  %265 = getelementptr inbounds %struct.thread_info, ptr %264, i32 0, i32 3
  br label %266

266:                                              ; preds = %370, %263
  %267 = phi ptr [ %241, %263 ], [ %373, %370 ]
  %268 = phi i32 [ %246, %263 ], [ %372, %370 ]
  %269 = phi i32 [ 0, %263 ], [ %368, %370 ]
  %270 = phi i1 [ false, %263 ], [ %358, %370 ]
  %271 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %265) #6, !srcloc !28
  %272 = and i32 %271, -13
  %273 = or i32 %272, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %273) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %274 = call i32 @arm_copy_from_user(ptr noundef nonnull %5, ptr noundef %267, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %271) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %282, label %276, !prof !10

276:                                              ; preds = %370, %266
  %277 = phi i1 [ %358, %370 ], [ %270, %266 ]
  %278 = phi i32 [ %368, %370 ], [ %269, %266 ]
  %279 = phi i32 [ 8, %370 ], [ %274, %266 ]
  %280 = sub i32 8, %279
  %281 = getelementptr i8, ptr %5, i32 %280
  call void @llvm.memset.p0.i32(ptr align 1 %281, i8 0, i32 %279, i1 false) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br i1 %277, label %378, label %382

282:                                              ; preds = %266
  br i1 %254, label %295, label %283

283:                                              ; preds = %282
  %284 = getelementptr i64, ptr %237, i32 %269
  %285 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %284, i32 8, i32 -1090519040) #23, !srcloc !27
  %286 = extractvalue { i32, i32 } %285, 0
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %294, !prof !10

288:                                              ; preds = %283
  %289 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %265) #6, !srcloc !28
  %290 = and i32 %289, -13
  %291 = or i32 %290, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %291) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %292 = call i32 @arm_copy_from_user(ptr noundef nonnull %8, ptr noundef %284, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %289) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %295, label %294, !prof !10

294:                                              ; preds = %288, %283
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br i1 %270, label %378, label %382

295:                                              ; preds = %288, %282
  %296 = load i32, ptr %255, align 4
  %297 = add i32 %296, 4095
  %298 = load ptr, ptr %5, align 8
  %299 = icmp eq ptr %298, null
  br i1 %299, label %300, label %302

300:                                              ; preds = %295
  %301 = icmp eq i32 %296, 0
  br i1 %301, label %309, label %352

302:                                              ; preds = %295
  %303 = add i32 %296, -1073741825
  %304 = icmp ult i32 %303, -1073741824
  br i1 %304, label %352, label %305

305:                                              ; preds = %302
  %306 = ptrtoint ptr %298 to i32
  %307 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %306, i32 %297) #21
  %308 = extractvalue { i32, i1 } %307, 1
  br i1 %308, label %352, label %312

309:                                              ; preds = %300
  %310 = load i64, ptr %8, align 8
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %352

312:                                              ; preds = %309, %305
  %313 = call fastcc i32 @io_sqe_buffer_register(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %7, ptr noundef nonnull %6) #21
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %352

315:                                              ; preds = %312
  %316 = load i32, ptr %248, align 4
  %317 = call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %268, i32 %316) #21, !srcloc !40
  %318 = and i32 %317, %268
  %319 = load ptr, ptr %256, align 64
  %320 = getelementptr ptr, ptr %319, i32 %318
  %321 = load ptr, ptr %320, align 4
  %322 = load ptr, ptr %257, align 4
  %323 = icmp eq ptr %321, %322
  br i1 %323, label %324, label %327

324:                                              ; preds = %315
  %325 = and i32 %268, 511
  %326 = lshr i32 %268, 9
  br label %354

327:                                              ; preds = %315
  %328 = load ptr, ptr %242, align 4
  %329 = load ptr, ptr %258, align 4
  %330 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %331 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %330, i32 noundef 3520, i32 noundef 24) #25
  %332 = icmp eq ptr %331, null
  br i1 %332, label %333, label %334

333:                                              ; preds = %327
  call fastcc void @io_buffer_unmap(ptr noundef %0, ptr noundef nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br i1 %270, label %378, label %382

334:                                              ; preds = %327
  %335 = and i32 %268, 511
  %336 = lshr i32 %268, 9
  %337 = getelementptr inbounds %struct.io_rsrc_data, ptr %328, i32 0, i32 1
  %338 = load ptr, ptr %337, align 4
  %339 = getelementptr ptr, ptr %338, i32 %336
  %340 = load ptr, ptr %339, align 4
  %341 = getelementptr i64, ptr %340, i32 %335
  %342 = load i64, ptr %341, align 8
  %343 = getelementptr inbounds %struct.io_rsrc_put, ptr %331, i32 0, i32 1
  store i64 %342, ptr %343, align 8
  %344 = getelementptr inbounds %struct.io_rsrc_put, ptr %331, i32 0, i32 2
  store ptr %321, ptr %344, align 8
  %345 = getelementptr inbounds %struct.io_rsrc_node, ptr %329, i32 0, i32 2
  %346 = load ptr, ptr %345, align 4
  %347 = getelementptr inbounds %struct.list_head, ptr %346, i32 0, i32 1
  store ptr %331, ptr %347, align 4
  store ptr %346, ptr %331, align 8
  %348 = getelementptr inbounds %struct.list_head, ptr %331, i32 0, i32 1
  store ptr %345, ptr %348, align 4
  store volatile ptr %331, ptr %345, align 4
  %349 = load ptr, ptr %256, align 64
  %350 = getelementptr ptr, ptr %349, i32 %318
  store ptr null, ptr %350, align 4
  %351 = load ptr, ptr %256, align 64
  br label %354

352:                                              ; preds = %312, %309, %305, %302, %300
  %353 = phi i32 [ %313, %312 ], [ -22, %309 ], [ -75, %305 ], [ -14, %302 ], [ -14, %300 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  br i1 %270, label %378, label %382

354:                                              ; preds = %334, %324
  %355 = phi i32 [ %326, %324 ], [ %336, %334 ]
  %356 = phi i32 [ %325, %324 ], [ %335, %334 ]
  %357 = phi ptr [ %319, %324 ], [ %351, %334 ]
  %358 = phi i1 [ %270, %324 ], [ true, %334 ]
  %359 = load ptr, ptr %7, align 4
  %360 = getelementptr ptr, ptr %357, i32 %318
  store ptr %359, ptr %360, align 4
  %361 = load i64, ptr %8, align 8
  %362 = load ptr, ptr %242, align 4
  %363 = getelementptr inbounds %struct.io_rsrc_data, ptr %362, i32 0, i32 1
  %364 = load ptr, ptr %363, align 4
  %365 = getelementptr ptr, ptr %364, i32 %355
  %366 = load ptr, ptr %365, align 4
  %367 = getelementptr i64, ptr %366, i32 %356
  store i64 %361, ptr %367, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #21
  %368 = add nuw i32 %269, 1
  %369 = icmp eq i32 %368, %3
  br i1 %369, label %377, label %370

370:                                              ; preds = %354
  %371 = load i32, ptr %2, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #21
  store ptr null, ptr %7, align 4, !annotation !9
  %372 = add i32 %368, %371
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #21
  store i64 0, ptr %8, align 8
  %373 = getelementptr %struct.iovec, ptr %241, i32 %368
  %374 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %373, i32 8, i32 -1090519040) #23, !srcloc !27
  %375 = extractvalue { i32, i32 } %374, 0
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %266, label %276, !prof !10

377:                                              ; preds = %354
  br i1 %358, label %378, label %382

378:                                              ; preds = %377, %352, %333, %294, %276
  %379 = phi i32 [ %353, %352 ], [ 0, %377 ], [ -12, %333 ], [ -14, %276 ], [ -14, %294 ]
  %380 = phi i32 [ %269, %352 ], [ %3, %377 ], [ %269, %333 ], [ %278, %276 ], [ %269, %294 ]
  %381 = load ptr, ptr %242, align 4
  call fastcc void @io_rsrc_node_switch(ptr noundef %0, ptr noundef %381) #21
  br label %382

382:                                              ; preds = %378, %377, %352, %333, %294, %276
  %383 = phi i32 [ %379, %378 ], [ 0, %377 ], [ %353, %352 ], [ -12, %333 ], [ -14, %276 ], [ -14, %294 ]
  %384 = phi i32 [ %380, %378 ], [ %3, %377 ], [ %269, %352 ], [ %269, %333 ], [ %278, %276 ], [ %269, %294 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %388

386:                                              ; preds = %382, %262, %251
  %387 = phi i32 [ %383, %382 ], [ 0, %251 ], [ -14, %262 ]
  br label %388

388:                                              ; preds = %386, %382, %245, %233
  %389 = phi i32 [ -6, %233 ], [ -22, %245 ], [ %387, %386 ], [ %384, %382 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #21
  br label %390

390:                                              ; preds = %388, %231, %37, %30, %14, %4
  %391 = phi i32 [ %389, %388 ], [ %232, %231 ], [ -22, %4 ], [ -75, %14 ], [ -22, %37 ], [ -12, %30 ]
  ret i32 %391
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fget(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_copy_iov(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #0 {
  %4 = getelementptr %struct.iovec, ptr %1, i32 %2
  %5 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %4, i32 8, i32 -1090519040) #23, !srcloc !27
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16, !prof !10

8:                                                ; preds = %3
  %9 = tail call ptr @llvm.thread.pointer() #21
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %11 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %10) #6, !srcloc !28
  %12 = and i32 %11, -13
  %13 = or i32 %12, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %13) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %14 = tail call i32 @arm_copy_from_user(ptr noundef %0, ptr noundef %4, i32 noundef 8) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16, !prof !10

16:                                               ; preds = %8, %3
  %17 = phi i32 [ %14, %8 ], [ 8, %3 ]
  %18 = sub i32 8, %17
  %19 = getelementptr i8, ptr %0, i32 %18
  tail call void @llvm.memset.p0.i32(ptr align 1 %19, i8 0, i32 %17, i1 false) #21
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ 0, %8 ], [ -14, %16 ]
  ret i32 %21
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_sqe_buffer_register(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef %3) unnamed_addr #0 {
  %5 = load ptr, ptr %1, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %9 = load ptr, ptr %8, align 4
  store ptr %9, ptr %2, align 4
  br label %280

10:                                               ; preds = %4
  %11 = ptrtoint ptr %5 to i32
  %12 = getelementptr inbounds %struct.iovec, ptr %1, i32 0, i32 1
  %13 = load i32, ptr %12, align 4
  %14 = add i32 %11, 4095
  %15 = add i32 %14, %13
  %16 = lshr i32 %15, 12
  %17 = lshr i32 %11, 12
  %18 = sub nsw i32 %16, %17
  store ptr null, ptr %2, align 4
  %19 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %18, i32 4) #21
  %20 = extractvalue { i32, i1 } %19, 1
  br i1 %20, label %271, label %21, !prof !11

21:                                               ; preds = %10
  %22 = extractvalue { i32, i1 } %19, 0
  %23 = tail call noalias ptr @kvmalloc_node(i32 noundef %22, i32 noundef 3264, i32 noundef -1) #26
  %24 = icmp eq ptr %23, null
  br i1 %24, label %271, label %25

25:                                               ; preds = %21
  %26 = tail call noalias ptr @kvmalloc_node(i32 noundef %22, i32 noundef 3264, i32 noundef -1) #26
  %27 = icmp eq ptr %26, null
  br i1 %27, label %271, label %28

28:                                               ; preds = %25
  %29 = mul nuw nsw i32 %18, 12
  %30 = add nuw nsw i32 %29, 24
  %31 = tail call noalias ptr @kvmalloc_node(i32 noundef %30, i32 noundef 3264, i32 noundef -1) #26
  %32 = icmp eq ptr %31, null
  br i1 %32, label %271, label %33

33:                                               ; preds = %28
  %34 = tail call ptr @llvm.thread.pointer() #21
  %35 = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 37
  %36 = load ptr, ptr %35, align 4
  %37 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_start_locking, i32 0, i32 1), align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %33
  tail call void @__mmap_lock_do_trace_start_locking(ptr noundef %36, i1 noundef zeroext false) #21
  br label %40

40:                                               ; preds = %39, %33
  %41 = getelementptr inbounds %struct.anon.17, ptr %36, i32 0, i32 15
  tail call void @down_read(ptr noundef %41) #21
  %42 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_acquire_returned, i32 0, i32 1), align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @__mmap_lock_do_trace_acquire_returned(ptr noundef %36, i1 noundef zeroext false, i1 noundef zeroext true) #21
  br label %45

45:                                               ; preds = %44, %40
  %46 = tail call i32 @pin_user_pages(i32 noundef %11, i32 noundef %18, i32 noundef 65537, ptr noundef nonnull %23, ptr noundef nonnull %26) #21
  %47 = icmp eq i32 %46, %18
  br i1 %47, label %48, label %62

48:                                               ; preds = %45
  %49 = icmp eq i32 %16, %17
  br i1 %49, label %65, label %50

50:                                               ; preds = %59, %48
  %51 = phi i32 [ %60, %59 ], [ 0, %48 ]
  %52 = getelementptr ptr, ptr %26, i32 %51
  %53 = load ptr, ptr %52, align 4
  %54 = tail call zeroext i1 @vma_is_shmem(ptr noundef %53) #21
  br i1 %54, label %59, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.vm_area_struct, ptr %53, i32 0, i32 14
  %57 = load ptr, ptr %56, align 4
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %65

59:                                               ; preds = %55, %50
  %60 = add nuw nsw i32 %51, 1
  %61 = icmp eq i32 %60, %18
  br i1 %61, label %65, label %50

62:                                               ; preds = %45
  %63 = icmp slt i32 %46, 0
  %64 = select i1 %63, i32 %46, i32 -14
  br label %65

65:                                               ; preds = %62, %59, %55, %48
  %66 = phi i32 [ %64, %62 ], [ 0, %48 ], [ 0, %59 ], [ -95, %55 ]
  %67 = load ptr, ptr %35, align 4
  %68 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_mmap_lock_released, i32 0, i32 1), align 4
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %65
  tail call void @__mmap_lock_do_trace_released(ptr noundef %67, i1 noundef zeroext false) #21
  br label %71

71:                                               ; preds = %70, %65
  %72 = getelementptr inbounds %struct.anon.17, ptr %67, i32 0, i32 15
  tail call void @up_read(ptr noundef %72) #21
  %73 = icmp eq i32 %66, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = icmp sgt i32 %46, 0
  br i1 %75, label %269, label %271

76:                                               ; preds = %71
  %77 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %31, i32 0, i32 3
  store i32 0, ptr %77, align 4
  %78 = icmp sgt i32 %46, 0
  br i1 %78, label %79, label %237

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  %81 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  br label %82

82:                                               ; preds = %199, %79
  %83 = phi i32 [ 0, %79 ], [ %200, %199 ]
  %84 = phi i32 [ 0, %79 ], [ %201, %199 ]
  %85 = getelementptr ptr, ptr %23, i32 %84
  %86 = load ptr, ptr %85, align 4
  %87 = load volatile i32, ptr %86, align 4
  %88 = and i32 %87, 65536
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %82
  %91 = getelementptr inbounds %struct.page, ptr %86, i32 0, i32 1
  %92 = load volatile i32, ptr %91, align 4
  %93 = and i32 %92, 1
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %195, label %95

95:                                               ; preds = %90, %82
  %96 = getelementptr inbounds %struct.page, ptr %86, i32 0, i32 1
  %97 = load volatile i32, ptr %96, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %102, label %100, !prof !10

100:                                              ; preds = %95
  %101 = add i32 %97, -1
  br label %104

102:                                              ; preds = %95
  %103 = ptrtoint ptr %86 to i32
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i32 [ %101, %100 ], [ %103, %102 ]
  %106 = inttoptr i32 %105 to ptr
  %107 = load ptr, ptr %3, align 4
  %108 = icmp eq ptr %107, %106
  br i1 %108, label %199, label %109

109:                                              ; preds = %104
  store ptr %106, ptr %3, align 4
  %110 = icmp eq i32 %84, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %141, %109
  %112 = load i32, ptr %80, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %182, label %114

114:                                              ; preds = %111
  %115 = load ptr, ptr %81, align 64
  br label %144

116:                                              ; preds = %141, %109
  %117 = phi i32 [ %142, %141 ], [ 0, %109 ]
  %118 = getelementptr ptr, ptr %23, i32 %117
  %119 = load ptr, ptr %118, align 4
  %120 = load volatile i32, ptr %119, align 4
  %121 = and i32 %120, 65536
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %128

123:                                              ; preds = %116
  %124 = getelementptr inbounds %struct.page, ptr %119, i32 0, i32 1
  %125 = load volatile i32, ptr %124, align 4
  %126 = and i32 %125, 1
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %141, label %128

128:                                              ; preds = %123, %116
  %129 = getelementptr inbounds %struct.page, ptr %119, i32 0, i32 1
  %130 = load volatile i32, ptr %129, align 4
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %135, label %133, !prof !10

133:                                              ; preds = %128
  %134 = add i32 %130, -1
  br label %137

135:                                              ; preds = %128
  %136 = ptrtoint ptr %119 to i32
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i32 [ %134, %133 ], [ %136, %135 ]
  %139 = inttoptr i32 %138 to ptr
  %140 = icmp eq ptr %139, %106
  br i1 %140, label %199, label %141

141:                                              ; preds = %137, %123
  %142 = add nuw nsw i32 %117, 1
  %143 = icmp eq i32 %142, %84
  br i1 %143, label %111, label %116

144:                                              ; preds = %179, %114
  %145 = phi i32 [ 0, %114 ], [ %180, %179 ]
  %146 = getelementptr ptr, ptr %115, i32 %145
  %147 = load ptr, ptr %146, align 4
  %148 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %147, i32 0, i32 2
  %149 = load i32, ptr %148, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %179, label %151

151:                                              ; preds = %176, %144
  %152 = phi i32 [ %177, %176 ], [ 0, %144 ]
  %153 = getelementptr %struct.io_mapped_ubuf, ptr %147, i32 0, i32 4, i32 %152
  %154 = load ptr, ptr %153, align 4
  %155 = load volatile i32, ptr %154, align 4
  %156 = and i32 %155, 65536
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %163

158:                                              ; preds = %151
  %159 = getelementptr inbounds %struct.page, ptr %154, i32 0, i32 1
  %160 = load volatile i32, ptr %159, align 4
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %176, label %163

163:                                              ; preds = %158, %151
  %164 = getelementptr inbounds %struct.page, ptr %154, i32 0, i32 1
  %165 = load volatile i32, ptr %164, align 4
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %170, label %168, !prof !10

168:                                              ; preds = %163
  %169 = add i32 %165, -1
  br label %172

170:                                              ; preds = %163
  %171 = ptrtoint ptr %154 to i32
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i32 [ %169, %168 ], [ %171, %170 ]
  %174 = inttoptr i32 %173 to ptr
  %175 = icmp eq ptr %174, %106
  br i1 %175, label %199, label %176

176:                                              ; preds = %172, %158
  %177 = add nuw i32 %152, 1
  %178 = icmp eq i32 %177, %149
  br i1 %178, label %179, label %151

179:                                              ; preds = %176, %144
  %180 = add nuw i32 %145, 1
  %181 = icmp eq i32 %180, %112
  br i1 %181, label %182, label %144

182:                                              ; preds = %179, %111
  %183 = load volatile i32, ptr %106, align 4
  %184 = and i32 %183, 65536
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %182
  %187 = getelementptr %struct.page, ptr %106, i32 1, i32 1
  %188 = getelementptr inbounds %struct.anon.13, ptr %187, i32 0, i32 2
  %189 = load i8, ptr %188, align 1
  %190 = zext i8 %189 to i32
  br label %191

191:                                              ; preds = %186, %182
  %192 = phi i32 [ %190, %186 ], [ 0, %182 ]
  %193 = shl i32 4096, %192
  %194 = lshr exact i32 %193, 12
  br label %195

195:                                              ; preds = %191, %90
  %196 = phi i32 [ %83, %191 ], [ 1, %90 ]
  %197 = phi i32 [ %194, %191 ], [ %83, %90 ]
  %198 = add i32 %197, %196
  store i32 %198, ptr %77, align 4
  br label %199

199:                                              ; preds = %195, %172, %137, %104
  %200 = phi i32 [ %198, %195 ], [ %83, %104 ], [ %83, %172 ], [ %83, %137 ]
  %201 = add nuw nsw i32 %84, 1
  %202 = icmp eq i32 %201, %46
  br i1 %202, label %203, label %82

203:                                              ; preds = %199
  %204 = icmp eq i32 %200, 0
  br i1 %204, label %237, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 2
  %207 = load ptr, ptr %206, align 4
  %208 = icmp eq ptr %207, null
  br i1 %208, label %228, label %209

209:                                              ; preds = %205
  %210 = getelementptr inbounds %struct.task_struct, ptr %34, i32 0, i32 93
  %211 = load ptr, ptr %210, align 16
  %212 = getelementptr %struct.signal_struct, ptr %211, i32 0, i32 50, i32 8
  %213 = load volatile i32, ptr %212, align 8
  %214 = lshr i32 %213, 12
  %215 = getelementptr inbounds %struct.user_struct, ptr %207, i32 0, i32 6
  br label %216

216:                                              ; preds = %225, %209
  %217 = load volatile i32, ptr %215, align 4
  %218 = add i32 %217, %200
  %219 = icmp ugt i32 %218, %214
  br i1 %219, label %236, label %220

220:                                              ; preds = %216
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !82
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %215) #21, !srcloc !13
  br label %221

221:                                              ; preds = %221, %220
  %222 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %215, ptr %215, i32 %217, i32 %218, ptr elementtype(i32) %215) #21, !srcloc !83
  %223 = extractvalue { i32, i32 } %222, 0
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %221

225:                                              ; preds = %221
  %226 = extractvalue { i32, i32 } %222, 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !84
  %227 = icmp eq i32 %226, %217
  br i1 %227, label %228, label %216

228:                                              ; preds = %225, %205
  %229 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 3
  %230 = load ptr, ptr %229, align 4
  %231 = icmp eq ptr %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = zext i32 %200 to i64
  %234 = getelementptr inbounds %struct.anon.17, ptr %230, i32 0, i32 21
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %234) #21, !srcloc !13
  %235 = tail call { i64, i32 } asm sideeffect "@ atomic64_add\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09adds ${0:Q}, ${0:Q}, ${4:Q}\0A\09adc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %234, ptr %234, i64 %233, ptr elementtype(i64) %234) #21, !srcloc !85
  br label %237

236:                                              ; preds = %216
  store i32 0, ptr %77, align 4
  br label %269

237:                                              ; preds = %232, %228, %203, %76
  %238 = load i32, ptr %12, align 4
  %239 = icmp sgt i32 %18, 0
  br i1 %239, label %240, label %263

240:                                              ; preds = %237
  %241 = and i32 %11, 4095
  %242 = sub nuw nsw i32 4096, %241
  %243 = tail call i32 @llvm.umin.i32(i32 %238, i32 %242)
  %244 = load ptr, ptr %23, align 4
  %245 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 0
  store ptr %244, ptr %245, align 4
  %246 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 0, i32 1
  store i32 %243, ptr %246, align 4
  %247 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 0, i32 2
  store i32 %241, ptr %247, align 4
  %248 = icmp eq i32 %18, 1
  br i1 %248, label %263, label %249

249:                                              ; preds = %240
  %250 = sub i32 %238, %243
  br label %251

251:                                              ; preds = %251, %249
  %252 = phi i32 [ %261, %251 ], [ 1, %249 ]
  %253 = phi i32 [ %260, %251 ], [ %250, %249 ]
  %254 = tail call i32 @llvm.umin.i32(i32 %253, i32 4096)
  %255 = getelementptr ptr, ptr %23, i32 %252
  %256 = load ptr, ptr %255, align 4
  %257 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 %252
  store ptr %256, ptr %257, align 4
  %258 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 %252, i32 1
  store i32 %254, ptr %258, align 4
  %259 = getelementptr %struct.io_mapped_ubuf, ptr %31, i32 0, i32 4, i32 %252, i32 2
  store i32 0, ptr %259, align 4
  %260 = sub i32 %253, %254
  %261 = add nuw nsw i32 %252, 1
  %262 = icmp eq i32 %261, %18
  br i1 %262, label %263, label %251, !llvm.loop !86

263:                                              ; preds = %251, %240, %237
  %264 = zext i32 %11 to i64
  store i64 %264, ptr %31, align 8
  %265 = add i32 %238, %11
  %266 = zext i32 %265 to i64
  %267 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %31, i32 0, i32 1
  store i64 %266, ptr %267, align 8
  %268 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %31, i32 0, i32 2
  store i32 %18, ptr %268, align 8
  store ptr %31, ptr %2, align 4
  br label %276

269:                                              ; preds = %236, %74
  %270 = phi i32 [ -12, %236 ], [ %66, %74 ]
  tail call void @unpin_user_pages(ptr noundef nonnull %23, i32 noundef %46) #21
  br label %271

271:                                              ; preds = %269, %74, %28, %25, %21, %10
  %272 = phi ptr [ null, %21 ], [ %23, %25 ], [ %23, %28 ], [ %23, %74 ], [ null, %10 ], [ %23, %269 ]
  %273 = phi i32 [ -12, %21 ], [ -12, %25 ], [ -12, %28 ], [ %66, %74 ], [ -12, %10 ], [ %270, %269 ]
  %274 = phi ptr [ null, %21 ], [ null, %25 ], [ %26, %28 ], [ %26, %74 ], [ null, %10 ], [ %26, %269 ]
  %275 = phi ptr [ null, %21 ], [ null, %25 ], [ null, %28 ], [ %31, %74 ], [ null, %10 ], [ %31, %269 ]
  tail call void @kvfree(ptr noundef %275) #21
  br label %276

276:                                              ; preds = %271, %263
  %277 = phi ptr [ %274, %271 ], [ %26, %263 ]
  %278 = phi i32 [ %273, %271 ], [ 0, %263 ]
  %279 = phi ptr [ %272, %271 ], [ %23, %263 ]
  tail call void @kvfree(ptr noundef %279) #21
  tail call void @kvfree(ptr noundef %277) #21
  br label %280

280:                                              ; preds = %276, %7
  %281 = phi i32 [ %278, %276 ], [ 0, %7 ]
  ret i32 %281
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_buffer_unmap(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) unnamed_addr #0 {
  %3 = load ptr, ptr %1, align 4
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %3, %5
  br i1 %6, label %38, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %3, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %11, %7
  %12 = phi i32 [ %15, %11 ], [ 0, %7 ]
  %13 = getelementptr %struct.io_mapped_ubuf, ptr %3, i32 0, i32 4, i32 %12
  %14 = load ptr, ptr %13, align 4
  tail call void @unpin_user_page(ptr noundef %14) #21
  %15 = add nuw i32 %12, 1
  %16 = load i32, ptr %8, align 8
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %11, label %18

18:                                               ; preds = %11, %7
  %19 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %3, i32 0, i32 3
  %20 = load i32, ptr %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 2
  %24 = load ptr, ptr %23, align 4
  %25 = icmp eq ptr %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.user_struct, ptr %24, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %27) #21, !srcloc !13
  %28 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %27, ptr %27, i32 %20, ptr elementtype(i32) %27) #21, !srcloc !16
  br label %29

29:                                               ; preds = %26, %22
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 3
  %31 = load ptr, ptr %30, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = zext i32 %20 to i64
  %35 = getelementptr inbounds %struct.anon.17, ptr %31, i32 0, i32 21
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %35) #21, !srcloc !13
  %36 = tail call { i64, i32 } asm sideeffect "@ atomic64_sub\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09subs ${0:Q}, ${0:Q}, ${4:Q}\0A\09sbc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %35, ptr %35, i64 %34, ptr elementtype(i64) %35) #21, !srcloc !88
  br label %37

37:                                               ; preds = %33, %29, %18
  tail call void @kvfree(ptr noundef %3) #21
  br label %38

38:                                               ; preds = %37, %2
  store ptr null, ptr %1, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pin_user_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @vma_is_shmem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unpin_user_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #12

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_start_locking(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_acquire_returned(ptr noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmap_lock_do_trace_released(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unpin_user_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_statx(i32 noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_fadvise(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_madvise(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @build_open_flags(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @do_filp_open(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fsnotify_parent(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsnotify(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_epoll_ctl(i32 noundef, i32 noundef, i32 noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_splice(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__xa_insert(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_tee(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sys_shutdown_sock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_renameat2(i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_rmdir(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_unlinkat(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_mkdirat(i32 noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_symlinkat(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_linkat(i32 noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @__io_prep_linked_timeout(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  %5 = load i1, ptr @__io_prep_linked_timeout.__already_done, align 1
  %6 = xor i1 %5, true
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %9, !prof !11

8:                                                ; preds = %1
  store i1 true, ptr @__io_prep_linked_timeout.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1513, i32 noundef 9, ptr noundef null) #21
  br label %9

9:                                                ; preds = %8, %1
  br i1 %4, label %30, label %10

10:                                               ; preds = %9
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %12 = load i32, ptr %11, align 4
  %13 = and i32 %12, -1052673
  %14 = or i32 %13, 4096
  store i32 %14, ptr %11, align 4
  %15 = and i32 %12, 524288
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %10
  %18 = or i32 %13, 528384
  store i32 %18, ptr %11, align 4
  %19 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 13
  store volatile i32 1, ptr %19, align 4
  br label %20

20:                                               ; preds = %17, %10
  %21 = load ptr, ptr %2, align 8
  %22 = getelementptr inbounds %struct.io_kiocb, ptr %21, i32 0, i32 4
  %23 = load i32, ptr %22, align 4
  %24 = and i32 %23, 524288
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = or i32 %23, 524288
  store i32 %27, ptr %22, align 4
  %28 = getelementptr inbounds %struct.io_kiocb, ptr %21, i32 0, i32 13
  store volatile i32 2, ptr %28, align 4
  %29 = load ptr, ptr %2, align 8
  br label %30

30:                                               ; preds = %26, %20, %9
  %31 = phi ptr [ null, %9 ], [ %21, %20 ], [ %29, %26 ]
  ret ptr %31
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_arm_poll_handler(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.io_poll_table, align 4
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 1
  %4 = load i8, ptr %3, align 8
  %5 = zext i8 %4 to i32
  %6 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %5
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %2) #21
  %9 = getelementptr inbounds i8, ptr %2, i32 4
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(20) %9, i8 0, i32 16, i1 false), !annotation !9
  %10 = load i16, ptr %6, align 4
  %11 = and i16 %10, 16
  %12 = icmp eq i16 %11, 0
  %13 = and i16 %10, 48
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %85, label %15

15:                                               ; preds = %1
  %16 = load ptr, ptr %0, align 8
  %17 = getelementptr inbounds %struct.file, ptr %16, i32 0, i32 3
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.file_operations, ptr %18, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %85, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %24 = load i32, ptr %23, align 4
  %25 = and i32 %24, 16384
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %85

27:                                               ; preds = %22
  br i1 %12, label %36, label %28

28:                                               ; preds = %27
  %29 = icmp eq i8 %4, 10
  br i1 %29, label %30, label %36

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.io_sr_msg, ptr %0, i32 0, i32 2
  %32 = load i32, ptr %31, align 8
  %33 = and i32 %32, 8192
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 1073741899, i32 1073741898
  br label %36

36:                                               ; preds = %30, %28, %27
  %37 = phi i32 [ 1073741899, %28 ], [ %35, %30 ], [ 1073742094, %27 ]
  %38 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %39 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %38, i32 noundef 2592, i32 noundef 36) #25
  %40 = icmp eq ptr %39, null
  br i1 %40, label %85, label %41, !prof !11

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.async_poll, ptr %39, i32 0, i32 1
  store ptr null, ptr %42, align 8
  %43 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 17
  store ptr %39, ptr %43, align 4
  %44 = load i32, ptr %23, align 4
  %45 = or i32 %44, 16384
  store i32 %45, ptr %23, align 4
  store ptr @io_async_queue_proc, ptr %2, align 4
  %46 = call fastcc i32 @__io_arm_poll_handler(ptr noundef %0, ptr noundef nonnull %39, ptr noundef nonnull %2, i32 noundef %37)
  %47 = icmp ne i32 %46, 0
  %48 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 3
  %49 = load i32, ptr %48, align 4
  %50 = icmp ne i32 %49, 0
  %51 = select i1 %47, i1 true, i1 %50
  br i1 %51, label %52, label %54

52:                                               ; preds = %41
  %53 = select i1 %47, i32 2, i32 1
  br label %85

54:                                               ; preds = %41
  %55 = load i8, ptr %3, align 8
  %56 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %57 = load i64, ptr %56, align 8
  %58 = getelementptr inbounds %struct.io_poll_iocb, ptr %39, i32 0, i32 2
  %59 = load i32, ptr %58, align 8
  %60 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_poll_arm, i32 0, i32 1), align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %85

62:                                               ; preds = %54
  %63 = tail call ptr @llvm.thread.pointer() #21
  %64 = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 2
  %65 = load i32, ptr %64, align 8
  %66 = lshr i32 %65, 5
  %67 = getelementptr i32, ptr @__cpu_online_mask, i32 %66
  %68 = load volatile i32, ptr %67, align 4
  %69 = and i32 %65, 31
  %70 = shl nuw i32 1, %69
  %71 = and i32 %70, %68
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %62
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !89
  %74 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_poll_arm, i32 0, i32 7), align 4
  %75 = icmp eq ptr %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %76, %73
  %77 = phi ptr [ %81, %76 ], [ %74, %73 ]
  %78 = load volatile ptr, ptr %77, align 4
  %79 = getelementptr inbounds %struct.tracepoint_func, ptr %77, i32 0, i32 1
  %80 = load ptr, ptr %79, align 4
  call void %78(ptr noundef %80, ptr noundef %8, ptr noundef %0, i8 noundef zeroext %55, i64 noundef %57, i32 noundef %37, i32 noundef %59) #21
  %81 = getelementptr %struct.tracepoint_func, ptr %77, i32 1
  %82 = load ptr, ptr %81, align 4
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %76

84:                                               ; preds = %76, %73
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !90
  br label %85

85:                                               ; preds = %84, %62, %54, %52, %36, %22, %15, %1
  %86 = phi i32 [ %53, %52 ], [ 1, %1 ], [ 1, %22 ], [ 1, %15 ], [ 1, %36 ], [ 0, %54 ], [ 0, %62 ], [ 0, %84 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %2) #21
  ret i32 %86
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_async_queue_proc(ptr nocapture noundef readnone %0, ptr noundef %1, ptr nocapture noundef %2) #0 {
  %4 = getelementptr inbounds %struct.io_poll_table, ptr %2, i32 0, i32 1
  %5 = load ptr, ptr %4, align 4
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %5, i32 0, i32 17
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.async_poll, ptr %7, i32 0, i32 1
  tail call fastcc void @__io_queue_proc(ptr noundef %7, ptr noundef %2, ptr noundef %1, ptr noundef %8)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @task_work_add(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @task_work_run() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_del_tctx_node(i32 noundef %0) unnamed_addr #4 {
  %2 = tail call ptr @llvm.thread.pointer() #21
  %3 = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 91
  %4 = load ptr, ptr %3, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_uring_task, ptr %4, i32 0, i32 1
  %8 = tail call ptr @xa_erase(ptr noundef %7, i32 noundef %0) #21
  %9 = icmp eq ptr %8, null
  br i1 %9, label %41, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.io_tctx_node, ptr %8, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = icmp ne ptr %2, %12
  %14 = load i1, ptr @io_uring_del_tctx_node.__already_done, align 1
  %15 = xor i1 %14, true
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %18, !prof !11

17:                                               ; preds = %10
  store i1 true, ptr @io_uring_del_tctx_node.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9872, i32 noundef 9, ptr noundef null) #21
  br label %18

18:                                               ; preds = %17, %10
  %19 = load volatile ptr, ptr %8, align 4
  %20 = icmp eq ptr %19, %8
  %21 = load i1, ptr @io_uring_del_tctx_node.__already_done.74, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %18
  store i1 true, ptr @io_uring_del_tctx_node.__already_done.74, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9873, i32 noundef 9, ptr noundef null) #21
  br label %25

25:                                               ; preds = %24, %18
  %26 = getelementptr inbounds %struct.io_tctx_node, ptr %8, i32 0, i32 2
  %27 = load ptr, ptr %26, align 4
  %28 = getelementptr inbounds %struct.io_ring_ctx, ptr %27, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %28) #21
  %29 = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = load ptr, ptr %8, align 4
  %32 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  store ptr %30, ptr %32, align 4
  store volatile ptr %31, ptr %30, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %8, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %29, align 4
  %33 = load ptr, ptr %26, align 4
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %33, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %34) #21
  %35 = getelementptr inbounds %struct.io_uring_task, ptr %4, i32 0, i32 3
  %36 = load ptr, ptr %35, align 4
  %37 = load ptr, ptr %26, align 4
  %38 = icmp eq ptr %36, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %25
  store ptr null, ptr %35, align 4
  br label %40

40:                                               ; preds = %39, %25
  tail call void @kfree(ptr noundef nonnull %8) #21
  br label %41

41:                                               ; preds = %40, %6, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @io_wq_put_and_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_submit_sqes(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = alloca %struct.open_how, align 8
  %4 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_uring, ptr %5, i32 0, i32 2
  %7 = load volatile i32, ptr %6, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !91
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 3
  %9 = load i32, ptr %8, align 4
  %10 = icmp eq i32 %7, %9
  br i1 %10, label %1742, label %11, !prof !11

11:                                               ; preds = %2
  %12 = sub i32 %7, %9
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 4
  %14 = load i32, ptr %13, align 32
  %15 = tail call i32 @llvm.umin.i32(i32 %14, i32 %1)
  %16 = tail call i32 @llvm.umin.i32(i32 %15, i32 %12)
  %17 = tail call ptr @llvm.thread.pointer() #21
  %18 = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 91
  %19 = load ptr, ptr %18, align 8
  %20 = load i32, ptr %19, align 8
  %21 = sub i32 %20, %16
  store i32 %21, ptr %19, align 8
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24, !prof !11

23:                                               ; preds = %11
  tail call fastcc void @io_task_refs_refill(ptr noundef %19) #21
  br label %24

24:                                               ; preds = %23, %11
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12
  %26 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 3
  store i8 0, ptr %26, align 4
  %27 = icmp ugt i32 %16, 2
  %28 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 4
  %29 = zext i1 %27 to i8
  store i8 %29, ptr %28, align 1
  %30 = trunc i32 %16 to i16
  %31 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 6
  store i16 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 2
  store ptr null, ptr %32, align 4
  %33 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 1
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 2
  %35 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %36 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 1
  %37 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 3
  %38 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 2
  %39 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 7
  %40 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 17
  %41 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 3
  %42 = getelementptr inbounds %struct.task_struct, ptr %17, i32 0, i32 93
  %43 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %44 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %45 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 2, i32 1
  br label %46

46:                                               ; preds = %1720, %24
  %47 = phi i32 [ 0, %24 ], [ %86, %1720 ]
  %48 = load ptr, ptr %25, align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %57, !prof !11

50:                                               ; preds = %46
  %51 = call fastcc zeroext i1 @__io_alloc_req_refill(ptr noundef %0) #24
  br i1 %51, label %52, label %54, !prof !10

52:                                               ; preds = %50
  %53 = load ptr, ptr %25, align 4
  br label %57

54:                                               ; preds = %50
  %55 = icmp eq i32 %47, 0
  %56 = select i1 %55, i32 -11, i32 %47
  br label %1721

57:                                               ; preds = %52, %46
  %58 = phi ptr [ %53, %52 ], [ %48, %46 ]
  %59 = load ptr, ptr %58, align 4
  store ptr %59, ptr %25, align 4
  %60 = getelementptr i8, ptr %58, i32 -96
  %61 = load i32, ptr %13, align 32
  %62 = add i32 %61, -1
  %63 = load i32, ptr %8, align 4
  %64 = add i32 %63, 1
  store i32 %64, ptr %8, align 4
  %65 = and i32 %63, %62
  %66 = load ptr, ptr %33, align 4
  %67 = getelementptr i32, ptr %66, i32 %65
  %68 = load volatile i32, ptr %67, align 4
  %69 = icmp ult i32 %68, %61
  br i1 %69, label %79, label %70, !prof !10

70:                                               ; preds = %57
  %71 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 4
  %72 = load i32, ptr %71, align 8
  %73 = add i32 %72, -1
  store i32 %73, ptr %71, align 8
  %74 = load ptr, ptr %4, align 8
  %75 = getelementptr inbounds %struct.io_rings, ptr %74, i32 0, i32 6
  %76 = load volatile i32, ptr %75, align 16
  %77 = add i32 %76, 1
  store volatile i32 %77, ptr %75, align 16
  %78 = load ptr, ptr %25, align 4
  br label %83

79:                                               ; preds = %57
  %80 = load ptr, ptr %34, align 8
  %81 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %85, !prof !11

83:                                               ; preds = %79, %70
  %84 = phi ptr [ %78, %70 ], [ %59, %79 ]
  store ptr %84, ptr %58, align 4
  store ptr %58, ptr %25, align 4
  br label %1721

85:                                               ; preds = %79
  %86 = add nuw i32 %47, 1
  %87 = load volatile i8, ptr %81, align 8
  %88 = getelementptr i8, ptr %58, i32 -40
  store i8 %87, ptr %88, align 8
  %89 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 1
  %90 = load volatile i8, ptr %89, align 1
  %91 = zext i8 %90 to i32
  %92 = getelementptr i8, ptr %58, i32 -36
  store i32 %91, ptr %92, align 4
  %93 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 8
  %94 = load volatile i64, ptr %93, align 8
  %95 = getelementptr i8, ptr %58, i32 -32
  store i64 %94, ptr %95, align 8
  store ptr null, ptr %60, align 8
  %96 = getelementptr i8, ptr %58, i32 -8
  store ptr null, ptr %96, align 8
  %97 = getelementptr i8, ptr %58, i32 -12
  store ptr %17, ptr %97, align 4
  %98 = zext i8 %87 to i32
  %99 = icmp ugt i8 %87, 39
  br i1 %99, label %100, label %101, !prof !11

100:                                              ; preds = %85
  store i8 0, ptr %88, align 8
  br label %1561

101:                                              ; preds = %85
  %102 = and i32 %91, 226
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %143, label %104, !prof !10

104:                                              ; preds = %101
  %105 = and i32 %91, 128
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %1561

107:                                              ; preds = %104
  %108 = and i32 %91, 32
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %107
  %111 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %98
  %112 = load i16, ptr %111, align 4
  %113 = and i16 %112, 64
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %1561, label %115

115:                                              ; preds = %110, %107
  %116 = and i32 %91, 64
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %115
  %119 = load i8, ptr %35, align 16
  %120 = or i8 %119, 64
  store i8 %120, ptr %35, align 16
  br label %121

121:                                              ; preds = %118, %115
  %122 = and i32 %91, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %143, label %124

124:                                              ; preds = %121
  %125 = load i8, ptr %35, align 16
  %126 = and i8 %125, 64
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %1561

128:                                              ; preds = %124
  %129 = getelementptr i8, ptr %58, i32 -16
  %130 = load ptr, ptr %129, align 8
  %131 = getelementptr inbounds %struct.io_ring_ctx, ptr %130, i32 0, i32 1, i32 12, i32 2
  %132 = load ptr, ptr %131, align 4
  %133 = getelementptr inbounds %struct.anon.178, ptr %130, i32 0, i32 3
  %134 = load i8, ptr %133, align 16
  %135 = or i8 %134, 32
  store i8 %135, ptr %133, align 16
  %136 = icmp eq ptr %132, null
  br i1 %136, label %143, label %137

137:                                              ; preds = %128
  %138 = getelementptr inbounds %struct.io_kiocb, ptr %132, i32 0, i32 4
  %139 = load i32, ptr %138, align 4
  %140 = or i32 %139, 18
  store i32 %140, ptr %138, align 4
  %141 = load i8, ptr %133, align 16
  %142 = or i8 %141, 2
  store i8 %142, ptr %133, align 16
  br label %143

143:                                              ; preds = %137, %128, %121, %101
  %144 = load i8, ptr %35, align 16
  %145 = and i8 %144, 42
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %190, label %147, !prof !92

147:                                              ; preds = %143
  %148 = and i8 %144, 8
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %171, label %150

150:                                              ; preds = %147
  %151 = load i8, ptr %88, align 8
  %152 = zext i8 %151 to i32
  %153 = lshr i32 %152, 5
  %154 = getelementptr i32, ptr %36, i32 %153
  %155 = load volatile i32, ptr %154, align 4
  %156 = and i32 %152, 31
  %157 = shl nuw i32 1, %156
  %158 = and i32 %157, %155
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %1561, label %160

160:                                              ; preds = %150
  %161 = load i8, ptr %37, align 1
  %162 = and i8 %161, %90
  %163 = icmp eq i8 %162, %161
  br i1 %163, label %164, label %1561

164:                                              ; preds = %160
  %165 = load i8, ptr %38, align 4
  %166 = or i8 %165, %161
  %167 = zext i8 %166 to i32
  %168 = xor i32 %167, -1
  %169 = and i32 %168, %91
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %1561

171:                                              ; preds = %164, %147
  %172 = and i8 %144, 32
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %178, label %174

174:                                              ; preds = %171
  %175 = load i32, ptr %92, align 4
  %176 = or i32 %175, 16
  store i32 %176, ptr %92, align 4
  %177 = load i8, ptr %35, align 16
  br label %178

178:                                              ; preds = %174, %171
  %179 = phi i8 [ %177, %174 ], [ %144, %171 ]
  %180 = and i8 %179, 2
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %190, label %182, !prof !10

182:                                              ; preds = %178
  %183 = load ptr, ptr %32, align 4
  %184 = icmp eq ptr %183, null
  br i1 %184, label %185, label %190

185:                                              ; preds = %182
  %186 = and i8 %179, -35
  %187 = or i8 %186, 32
  store i8 %187, ptr %35, align 16
  %188 = load i32, ptr %92, align 4
  %189 = or i32 %188, 18
  store i32 %189, ptr %92, align 4
  br label %190

190:                                              ; preds = %185, %182, %178, %143
  %191 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %98
  %192 = load i16, ptr %191, align 4
  %193 = and i16 %192, 1
  %194 = icmp eq i16 %193, 0
  br i1 %194, label %210, label %195

195:                                              ; preds = %190
  %196 = load i8, ptr %28, align 1, !range !45
  %197 = icmp eq i8 %196, 0
  %198 = and i16 %192, 2
  %199 = icmp eq i16 %198, 0
  %200 = select i1 %197, i1 true, i1 %199
  br i1 %200, label %203, label %201

201:                                              ; preds = %195
  store i8 1, ptr %26, align 4
  store i8 0, ptr %28, align 1
  %202 = load i16, ptr %31, align 4
  call void @blk_start_plug_nr_ios(ptr noundef %39, i16 noundef zeroext %202) #21
  br label %203

203:                                              ; preds = %201, %195
  %204 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %205 = load volatile i32, ptr %204, align 4
  %206 = and i32 %91, 1
  %207 = icmp ne i32 %206, 0
  %208 = call fastcc ptr @io_file_get(ptr noundef %0, ptr noundef %60, i32 noundef %205, i1 noundef zeroext %207) #21
  store ptr %208, ptr %60, align 8
  %209 = icmp eq ptr %208, null
  br i1 %209, label %1561, label %210

210:                                              ; preds = %203, %190
  %211 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 10
  %212 = load volatile i16, ptr %211, align 2
  %213 = icmp eq i16 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %210
  %215 = zext i16 %212 to i32
  %216 = call ptr @xa_load(ptr noundef %40, i32 noundef %215) #21
  %217 = getelementptr i8, ptr %58, i32 44
  store ptr %216, ptr %217, align 4
  %218 = icmp eq ptr %216, null
  br i1 %218, label %1561, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %struct.cred, ptr %216, i32 0, i32 24
  store i32 0, ptr %220, align 4
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %216) #21, !srcloc !13
  %221 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %216, ptr nonnull %216, i32 1, ptr nonnull elementtype(i32) %216) #21, !srcloc !14
  %222 = load i32, ptr %92, align 4
  %223 = or i32 %222, 262144
  store i32 %223, ptr %92, align 4
  br label %224

224:                                              ; preds = %219, %210
  %225 = load i8, ptr %88, align 8
  switch i8 %225, label %1553 [
    i8 0, label %1615
    i8 1, label %226
    i8 4, label %226
    i8 22, label %226
    i8 2, label %234
    i8 5, label %234
    i8 23, label %234
    i8 6, label %256
    i8 7, label %305
    i8 3, label %362
    i8 8, label %401
    i8 9, label %435
    i8 26, label %435
    i8 10, label %460
    i8 27, label %460
    i8 16, label %489
    i8 11, label %526
    i8 12, label %528
    i8 14, label %594
    i8 15, label %629
    i8 13, label %631
    i8 17, label %685
    i8 18, label %718
    i8 19, label %772
    i8 20, label %817
    i8 21, label %846
    i8 24, label %889
    i8 25, label %922
    i8 28, label %955
    i8 29, label %1035
    i8 30, label %1085
    i8 31, label %1118
    i8 32, label %1167
    i8 33, label %1203
    i8 34, label %1238
    i8 35, label %1273
    i8 36, label %1330
    i8 37, label %1383
    i8 38, label %1434
    i8 39, label %1493
  ]

226:                                              ; preds = %224, %224, %224
  %227 = load ptr, ptr %60, align 8
  %228 = getelementptr inbounds %struct.file, ptr %227, i32 0, i32 8
  %229 = load i32, ptr %228, align 8
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %1561, label %232, !prof !11

232:                                              ; preds = %226
  %233 = call fastcc i32 @io_prep_rw(ptr noundef %60, ptr noundef nonnull %81) #21
  br label %1558

234:                                              ; preds = %224, %224, %224
  %235 = load ptr, ptr %60, align 8
  %236 = getelementptr inbounds %struct.file, ptr %235, i32 0, i32 8
  %237 = load i32, ptr %236, align 8
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %1561, label %240, !prof !11

240:                                              ; preds = %234
  %241 = getelementptr inbounds %struct.file, ptr %235, i32 0, i32 5
  %242 = load i32, ptr %241, align 4
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %250

244:                                              ; preds = %240
  %245 = getelementptr inbounds %struct.file, ptr %235, i32 0, i32 2
  %246 = load ptr, ptr %245, align 8
  %247 = getelementptr inbounds %struct.inode, ptr %246, i32 0, i32 20
  %248 = load i8, ptr %247, align 1
  %249 = zext i8 %248 to i32
  br label %250

250:                                              ; preds = %244, %240
  %251 = phi i32 [ %249, %244 ], [ %242, %240 ]
  %252 = call i32 @llvm.umin.i32(i32 %251, i32 65536) #21
  %253 = trunc i32 %252 to i16
  %254 = getelementptr i8, ptr %58, i32 -68
  store i16 %253, ptr %254, align 4
  %255 = call fastcc i32 @io_prep_rw(ptr noundef %60, ptr noundef nonnull %81) #21
  br label %1558

256:                                              ; preds = %224
  %257 = getelementptr i8, ptr %58, i32 -16
  %258 = load ptr, ptr %257, align 8
  %259 = getelementptr inbounds %struct.anon.178, ptr %258, i32 0, i32 2
  %260 = load i32, ptr %259, align 4
  %261 = and i32 %260, 1
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %1561, !prof !10

263:                                              ; preds = %256
  %264 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %265 = load i16, ptr %264, align 2
  %266 = icmp eq i16 %265, 0
  br i1 %266, label %267, label %1561

267:                                              ; preds = %263
  %268 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %269 = load i16, ptr %268, align 8
  %270 = icmp eq i16 %269, 0
  br i1 %270, label %271, label %1561

271:                                              ; preds = %267
  %272 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %273 = load i64, ptr %272, align 8
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %1561

275:                                              ; preds = %271
  %276 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %277 = load i64, ptr %276, align 8
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %1561

279:                                              ; preds = %275
  %280 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %281 = load volatile i32, ptr %280, align 8
  %282 = icmp ult i32 %281, 2
  br i1 %282, label %283, label %1561

283:                                              ; preds = %279
  %284 = icmp eq i32 %281, 0
  %285 = load i32, ptr %92, align 4
  %286 = and i32 %285, 64
  %287 = icmp eq i32 %286, 0
  %288 = select i1 %284, i1 true, i1 %287
  br i1 %288, label %289, label %1561

289:                                              ; preds = %283
  %290 = and i32 %285, 524288
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %289
  %293 = or i32 %285, 524288
  store i32 %293, ptr %92, align 4
  %294 = getelementptr i8, ptr %58, i32 4
  store volatile i32 1, ptr %294, align 4
  br label %295

295:                                              ; preds = %292, %289
  %296 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %297 = load volatile i32, ptr %296, align 4
  %298 = shl nuw nsw i32 %281, 30
  %299 = xor i32 %298, 1073741824
  %300 = or i32 %297, %299
  %301 = and i32 %297, 10239
  %302 = and i32 %300, 1342177280
  %303 = or i32 %302, %301
  %304 = getelementptr i8, ptr %58, i32 -88
  store i32 %303, ptr %304, align 4
  br label %1615

305:                                              ; preds = %224
  %306 = getelementptr i8, ptr %58, i32 -16
  %307 = load ptr, ptr %306, align 8
  %308 = getelementptr inbounds %struct.anon.178, ptr %307, i32 0, i32 2
  %309 = load i32, ptr %308, align 4
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %1561, !prof !10

312:                                              ; preds = %305
  %313 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %314 = load i16, ptr %313, align 2
  %315 = icmp eq i16 %314, 0
  br i1 %315, label %316, label %1561

316:                                              ; preds = %312
  %317 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %318 = load i16, ptr %317, align 8
  %319 = icmp eq i16 %318, 0
  br i1 %319, label %320, label %1561

320:                                              ; preds = %316
  %321 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %322 = load i32, ptr %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %1561

324:                                              ; preds = %320
  %325 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %326 = load volatile i32, ptr %325, align 8
  %327 = icmp ugt i32 %326, 7
  %328 = icmp eq i32 %326, 1
  %329 = or i1 %327, %328
  br i1 %329, label %1561, label %330

330:                                              ; preds = %324
  %331 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %332 = load volatile i64, ptr %331, align 8
  %333 = getelementptr i8, ptr %58, i32 -88
  store i64 %332, ptr %333, align 8
  %334 = getelementptr i8, ptr %58, i32 -68
  %335 = trunc i32 %326 to i8
  %336 = lshr i8 %335, 1
  %337 = and i8 %336, 1
  store i8 %337, ptr %334, align 4
  %338 = getelementptr i8, ptr %58, i32 -67
  %339 = lshr i8 %335, 2
  store i8 %339, ptr %338, align 1
  %340 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %341 = load volatile i64, ptr %340, align 8
  %342 = getelementptr i8, ptr %58, i32 -80
  store i64 %341, ptr %342, align 8
  %343 = and i8 %335, 4
  %344 = icmp ne i8 %343, 0
  %345 = icmp eq i64 %341, 0
  %346 = select i1 %344, i1 true, i1 %345
  br i1 %346, label %347, label %1561

347:                                              ; preds = %330
  %348 = icmp eq i8 %337, 0
  %349 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  br i1 %348, label %359, label %350

350:                                              ; preds = %347
  %351 = load volatile i32, ptr %349, align 4
  %352 = shl i32 %326, 30
  %353 = xor i32 %352, 1073741824
  %354 = or i32 %351, %353
  %355 = and i32 %351, 10239
  %356 = and i32 %354, 1342177280
  %357 = or i32 %356, %355
  %358 = getelementptr i8, ptr %58, i32 -72
  store i32 %357, ptr %358, align 8
  br label %1615

359:                                              ; preds = %347
  %360 = load i32, ptr %349, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %1615, label %1561

362:                                              ; preds = %224
  %363 = load ptr, ptr %60, align 8
  %364 = icmp eq ptr %363, null
  br i1 %364, label %1561, label %365

365:                                              ; preds = %362
  %366 = getelementptr i8, ptr %58, i32 -16
  %367 = load ptr, ptr %366, align 8
  %368 = getelementptr inbounds %struct.anon.178, ptr %367, i32 0, i32 2
  %369 = load i32, ptr %368, align 4
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %1561, !prof !10

372:                                              ; preds = %365
  %373 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %374 = load i64, ptr %373, align 8
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %376, label %1561, !prof !10

376:                                              ; preds = %372
  %377 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %378 = load i16, ptr %377, align 2
  %379 = icmp eq i16 %378, 0
  br i1 %379, label %380, label %1561, !prof !10

380:                                              ; preds = %376
  %381 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %382 = load i16, ptr %381, align 8
  %383 = icmp eq i16 %382, 0
  br i1 %383, label %384, label %1561, !prof !10

384:                                              ; preds = %380
  %385 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %386 = load i32, ptr %385, align 4
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %1561, !prof !10

388:                                              ; preds = %384
  %389 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %390 = load volatile i32, ptr %389, align 4
  %391 = getelementptr i8, ptr %58, i32 -72
  store i32 %390, ptr %391, align 8
  %392 = icmp ult i32 %390, 2
  br i1 %392, label %393, label %1561, !prof !10

393:                                              ; preds = %388
  %394 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %395 = load volatile i64, ptr %394, align 8
  %396 = getelementptr i8, ptr %58, i32 -80
  store i64 %395, ptr %396, align 8
  %397 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %398 = load volatile i32, ptr %397, align 8
  %399 = zext i32 %398 to i64
  %400 = getelementptr i8, ptr %58, i32 -88
  store i64 %399, ptr %400, align 8
  br label %1615

401:                                              ; preds = %224
  %402 = getelementptr i8, ptr %58, i32 -16
  %403 = load ptr, ptr %402, align 8
  %404 = getelementptr inbounds %struct.anon.178, ptr %403, i32 0, i32 2
  %405 = load i32, ptr %404, align 4
  %406 = and i32 %405, 1
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %1561, !prof !10

408:                                              ; preds = %401
  %409 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %410 = load i64, ptr %409, align 8
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %412, label %1561, !prof !10

412:                                              ; preds = %408
  %413 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %414 = load i16, ptr %413, align 2
  %415 = icmp eq i16 %414, 0
  br i1 %415, label %416, label %1561, !prof !10

416:                                              ; preds = %412
  %417 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %418 = load i16, ptr %417, align 8
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %420, label %1561, !prof !10

420:                                              ; preds = %416
  %421 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %422 = load i32, ptr %421, align 4
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %1561, !prof !10

424:                                              ; preds = %420
  %425 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %426 = load volatile i64, ptr %425, align 8
  %427 = getelementptr i8, ptr %58, i32 -80
  store i64 %426, ptr %427, align 8
  %428 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %429 = load volatile i32, ptr %428, align 8
  %430 = zext i32 %429 to i64
  %431 = getelementptr i8, ptr %58, i32 -88
  store i64 %430, ptr %431, align 8
  %432 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %433 = load volatile i32, ptr %432, align 4
  %434 = getelementptr i8, ptr %58, i32 -72
  store i32 %433, ptr %434, align 8
  br label %1615

435:                                              ; preds = %224, %224
  %436 = getelementptr i8, ptr %58, i32 -16
  %437 = load ptr, ptr %436, align 8
  %438 = getelementptr inbounds %struct.anon.178, ptr %437, i32 0, i32 2
  %439 = load i32, ptr %438, align 4
  %440 = and i32 %439, 1
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %1561, !prof !10

442:                                              ; preds = %435
  %443 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %444 = load volatile i64, ptr %443, align 8
  %445 = trunc i64 %444 to i32
  %446 = inttoptr i32 %445 to ptr
  %447 = getelementptr i8, ptr %58, i32 -92
  store ptr %446, ptr %447, align 4
  %448 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %449 = load volatile i32, ptr %448, align 8
  %450 = getelementptr i8, ptr %58, i32 -80
  store i32 %449, ptr %450, align 4
  %451 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %452 = load volatile i32, ptr %451, align 4
  %453 = or i32 %452, 16384
  %454 = getelementptr i8, ptr %58, i32 -88
  store i32 %453, ptr %454, align 4
  %455 = and i32 %452, 64
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %1615, label %457

457:                                              ; preds = %442
  %458 = load i32, ptr %92, align 4
  %459 = or i32 %458, 2048
  store i32 %459, ptr %92, align 4
  br label %1615

460:                                              ; preds = %224, %224
  %461 = getelementptr i8, ptr %58, i32 -16
  %462 = load ptr, ptr %461, align 8
  %463 = getelementptr inbounds %struct.anon.178, ptr %462, i32 0, i32 2
  %464 = load i32, ptr %463, align 4
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %1561, !prof !10

467:                                              ; preds = %460
  %468 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %469 = load volatile i64, ptr %468, align 8
  %470 = trunc i64 %469 to i32
  %471 = inttoptr i32 %470 to ptr
  %472 = getelementptr i8, ptr %58, i32 -92
  store ptr %471, ptr %472, align 4
  %473 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %474 = load volatile i32, ptr %473, align 8
  %475 = getelementptr i8, ptr %58, i32 -80
  store i32 %474, ptr %475, align 4
  %476 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %477 = load volatile i16, ptr %476, align 8
  %478 = zext i16 %477 to i32
  %479 = getelementptr i8, ptr %58, i32 -84
  store i32 %478, ptr %479, align 4
  %480 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %481 = load volatile i32, ptr %480, align 4
  %482 = or i32 %481, 16384
  %483 = getelementptr i8, ptr %58, i32 -88
  store i32 %482, ptr %483, align 4
  %484 = and i32 %481, 64
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %1615, label %486

486:                                              ; preds = %467
  %487 = load i32, ptr %92, align 4
  %488 = or i32 %487, 2048
  store i32 %488, ptr %92, align 4
  br label %1615

489:                                              ; preds = %224
  %490 = getelementptr i8, ptr %58, i32 -16
  %491 = load ptr, ptr %490, align 8
  %492 = getelementptr inbounds %struct.anon.178, ptr %491, i32 0, i32 2
  %493 = load i32, ptr %492, align 4
  %494 = and i32 %493, 1
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %1561, !prof !10

496:                                              ; preds = %489
  %497 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %498 = load i16, ptr %497, align 2
  %499 = icmp eq i16 %498, 0
  br i1 %499, label %500, label %1561

500:                                              ; preds = %496
  %501 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %502 = load i32, ptr %501, align 8
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %504, label %1561

504:                                              ; preds = %500
  %505 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %506 = load i16, ptr %505, align 8
  %507 = icmp eq i16 %506, 0
  br i1 %507, label %508, label %1561

508:                                              ; preds = %504
  %509 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %510 = load i32, ptr %509, align 4
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %512, label %1561

512:                                              ; preds = %508
  %513 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %514 = load i32, ptr %513, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %1561

516:                                              ; preds = %512
  %517 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %518 = load volatile i64, ptr %517, align 8
  %519 = trunc i64 %518 to i32
  %520 = inttoptr i32 %519 to ptr
  %521 = getelementptr i8, ptr %58, i32 -92
  store ptr %520, ptr %521, align 4
  %522 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %523 = load volatile i64, ptr %522, align 8
  %524 = trunc i64 %523 to i32
  %525 = getelementptr i8, ptr %58, i32 -88
  store i32 %524, ptr %525, align 4
  br label %1615

526:                                              ; preds = %224
  %527 = call fastcc i32 @io_timeout_prep(ptr noundef %60, ptr noundef nonnull %81, i1 noundef zeroext false) #21
  br label %1558

528:                                              ; preds = %224
  %529 = getelementptr i8, ptr %58, i32 -16
  %530 = load ptr, ptr %529, align 8
  %531 = getelementptr inbounds %struct.anon.178, ptr %530, i32 0, i32 2
  %532 = load i32, ptr %531, align 4
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %1561, !prof !10

535:                                              ; preds = %528
  %536 = load i32, ptr %92, align 4
  %537 = and i32 %536, 33
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %1561, !prof !10

539:                                              ; preds = %535
  %540 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %541 = load i16, ptr %540, align 2
  %542 = icmp eq i16 %541, 0
  br i1 %542, label %543, label %1561

543:                                              ; preds = %539
  %544 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %545 = load i16, ptr %544, align 8
  %546 = icmp eq i16 %545, 0
  br i1 %546, label %547, label %1561

547:                                              ; preds = %543
  %548 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %549 = load i32, ptr %548, align 8
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %551, label %1561

551:                                              ; preds = %547
  %552 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %553 = load i32, ptr %552, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %1561

555:                                              ; preds = %551
  %556 = getelementptr i8, ptr %58, i32 -60
  store i8 0, ptr %556, align 4
  %557 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %558 = load volatile i64, ptr %557, align 8
  %559 = getelementptr i8, ptr %58, i32 -88
  store i64 %558, ptr %559, align 8
  %560 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %561 = load volatile i32, ptr %560, align 4
  %562 = getelementptr i8, ptr %58, i32 -64
  store i32 %561, ptr %562, align 8
  %563 = and i32 %561, 18
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %592, label %565

565:                                              ; preds = %555
  %566 = and i32 %561, 12
  %567 = call i32 @__sw_hweight32(i32 noundef %566) #21
  %568 = icmp ugt i32 %567, 1
  br i1 %568, label %1561, label %569

569:                                              ; preds = %565
  %570 = load i32, ptr %562, align 8
  %571 = and i32 %570, 16
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %574, label %573

573:                                              ; preds = %569
  store i8 1, ptr %556, align 4
  br label %574

574:                                              ; preds = %573, %569
  %575 = and i32 %570, -20
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %1561

577:                                              ; preds = %574
  %578 = getelementptr i8, ptr %58, i32 -80
  %579 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %580 = load i64, ptr %579, align 8
  %581 = trunc i64 %580 to i32
  %582 = inttoptr i32 %581 to ptr
  %583 = call i32 @get_timespec64(ptr noundef %578, ptr noundef %582) #21
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %1561

585:                                              ; preds = %577
  %586 = load i64, ptr %578, align 8
  %587 = icmp slt i64 %586, 0
  br i1 %587, label %1561, label %588

588:                                              ; preds = %585
  %589 = getelementptr i8, ptr %58, i32 -72
  %590 = load i32, ptr %589, align 8
  %591 = icmp slt i32 %590, 0
  br i1 %591, label %1561, label %1615

592:                                              ; preds = %555
  %593 = icmp eq i32 %561, 0
  br i1 %593, label %1615, label %1561

594:                                              ; preds = %224
  %595 = getelementptr i8, ptr %58, i32 -16
  %596 = load ptr, ptr %595, align 8
  %597 = getelementptr inbounds %struct.anon.178, ptr %596, i32 0, i32 2
  %598 = load i32, ptr %597, align 4
  %599 = and i32 %598, 1
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %1561, !prof !10

601:                                              ; preds = %594
  %602 = load i32, ptr %92, align 4
  %603 = and i32 %602, 33
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %1561, !prof !10

605:                                              ; preds = %601
  %606 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %607 = load i16, ptr %606, align 2
  %608 = icmp eq i16 %607, 0
  br i1 %608, label %609, label %1561

609:                                              ; preds = %605
  %610 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %611 = load i64, ptr %610, align 8
  %612 = icmp eq i64 %611, 0
  br i1 %612, label %613, label %1561

613:                                              ; preds = %609
  %614 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %615 = load i32, ptr %614, align 8
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %1561

617:                                              ; preds = %613
  %618 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %619 = load i32, ptr %618, align 4
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %621, label %1561

621:                                              ; preds = %617
  %622 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %623 = load i32, ptr %622, align 4
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %625, label %1561

625:                                              ; preds = %621
  %626 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %627 = load volatile i64, ptr %626, align 8
  %628 = getelementptr i8, ptr %58, i32 -88
  store i64 %627, ptr %628, align 8
  br label %1615

629:                                              ; preds = %224
  %630 = call fastcc i32 @io_timeout_prep(ptr noundef %60, ptr noundef nonnull %81, i1 noundef zeroext true) #21
  br label %1558

631:                                              ; preds = %224
  %632 = getelementptr i8, ptr %58, i32 -16
  %633 = load ptr, ptr %632, align 8
  %634 = getelementptr inbounds %struct.anon.178, ptr %633, i32 0, i32 2
  %635 = load i32, ptr %634, align 4
  %636 = and i32 %635, 1
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %638, label %1561, !prof !10

638:                                              ; preds = %631
  %639 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %640 = load i16, ptr %639, align 2
  %641 = icmp eq i16 %640, 0
  br i1 %641, label %642, label %1561

642:                                              ; preds = %638
  %643 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %644 = load i32, ptr %643, align 8
  %645 = icmp eq i32 %644, 0
  br i1 %645, label %646, label %1561

646:                                              ; preds = %642
  %647 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %648 = load i16, ptr %647, align 8
  %649 = icmp eq i16 %648, 0
  br i1 %649, label %650, label %1561

650:                                              ; preds = %646
  %651 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %652 = load volatile i64, ptr %651, align 8
  %653 = trunc i64 %652 to i32
  %654 = inttoptr i32 %653 to ptr
  %655 = getelementptr i8, ptr %58, i32 -92
  store ptr %654, ptr %655, align 4
  %656 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %657 = load volatile i64, ptr %656, align 8
  %658 = trunc i64 %657 to i32
  %659 = inttoptr i32 %658 to ptr
  %660 = getelementptr i8, ptr %58, i32 -88
  store ptr %659, ptr %660, align 4
  %661 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %662 = load volatile i32, ptr %661, align 4
  %663 = getelementptr i8, ptr %58, i32 -84
  store i32 %662, ptr %663, align 4
  %664 = load ptr, ptr %42, align 16
  %665 = getelementptr %struct.signal_struct, ptr %664, i32 0, i32 50, i32 7
  %666 = load volatile i32, ptr %665, align 8
  %667 = getelementptr i8, ptr %58, i32 -76
  store i32 %666, ptr %667, align 4
  %668 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %669 = load volatile i32, ptr %668, align 4
  %670 = getelementptr i8, ptr %58, i32 -80
  store i32 %669, ptr %670, align 4
  %671 = icmp eq i32 %669, 0
  br i1 %671, label %682, label %672

672:                                              ; preds = %650
  %673 = load i64, ptr %670, align 8
  %674 = and i64 %673, 524288
  %675 = icmp eq i64 %674, 0
  %676 = and i32 %662, 524288
  %677 = icmp eq i32 %676, 0
  %678 = select i1 %675, i1 %677, i1 false
  %679 = and i32 %662, -526337
  %680 = icmp eq i32 %679, 0
  %681 = select i1 %678, i1 %680, i1 false
  br i1 %681, label %1615, label %1561

682:                                              ; preds = %650
  %683 = and i32 %662, -526337
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %1615, label %1561

685:                                              ; preds = %224
  %686 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %687 = load i16, ptr %686, align 2
  %688 = icmp eq i16 %687, 0
  br i1 %688, label %689, label %1561

689:                                              ; preds = %685
  %690 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %691 = load i16, ptr %690, align 8
  %692 = icmp eq i16 %691, 0
  br i1 %692, label %693, label %1561

693:                                              ; preds = %689
  %694 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %695 = load i32, ptr %694, align 4
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %1561

697:                                              ; preds = %693
  %698 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %699 = load i32, ptr %698, align 4
  %700 = icmp eq i32 %699, 0
  br i1 %700, label %701, label %1561

701:                                              ; preds = %697
  %702 = getelementptr i8, ptr %58, i32 -16
  %703 = load ptr, ptr %702, align 8
  %704 = getelementptr inbounds %struct.anon.178, ptr %703, i32 0, i32 2
  %705 = load i32, ptr %704, align 4
  %706 = and i32 %705, 1
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %708, label %1561, !prof !10

708:                                              ; preds = %701
  %709 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %710 = load volatile i64, ptr %709, align 8
  %711 = getelementptr i8, ptr %58, i32 -80
  store i64 %710, ptr %711, align 8
  %712 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %713 = load volatile i64, ptr %712, align 8
  %714 = getelementptr i8, ptr %58, i32 -88
  store i64 %713, ptr %714, align 8
  %715 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %716 = load volatile i32, ptr %715, align 8
  %717 = getelementptr i8, ptr %58, i32 -68
  store i32 %716, ptr %717, align 4
  br label %1615

718:                                              ; preds = %224
  %719 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %720 = load volatile i32, ptr %719, align 8
  %721 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %722 = load volatile i32, ptr %721, align 4
  %723 = getelementptr i8, ptr %58, i32 -80
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #21
  %724 = trunc i32 %720 to i16
  call void @build_open_how(ptr nonnull sret(%struct.open_how) align 8 %3, i32 noundef %722, i16 noundef zeroext %724) #21
  call void @llvm.memcpy.p0.p0.i32(ptr noundef align 8 dereferenceable(24) %723, ptr noundef nonnull align 8 dereferenceable(24) %3, i32 24, i1 false) #21
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #21
  %725 = getelementptr i8, ptr %58, i32 -16
  %726 = load ptr, ptr %725, align 8
  %727 = getelementptr inbounds %struct.anon.178, ptr %726, i32 0, i32 2
  %728 = load i32, ptr %727, align 4
  %729 = and i32 %728, 1
  %730 = icmp eq i32 %729, 0
  br i1 %730, label %731, label %1561, !prof !10

731:                                              ; preds = %718
  %732 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %733 = load i16, ptr %732, align 2
  %734 = icmp eq i16 %733, 0
  br i1 %734, label %735, label %1561, !prof !10

735:                                              ; preds = %731
  %736 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %737 = load i16, ptr %736, align 8
  %738 = icmp eq i16 %737, 0
  br i1 %738, label %739, label %1561, !prof !10

739:                                              ; preds = %735
  %740 = load i32, ptr %92, align 4
  %741 = and i32 %740, 1
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %743, label %1561, !prof !10

743:                                              ; preds = %739
  %744 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %745 = load volatile i32, ptr %744, align 4
  %746 = getelementptr i8, ptr %58, i32 -92
  store i32 %745, ptr %746, align 4
  %747 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %748 = load volatile i64, ptr %747, align 8
  %749 = trunc i64 %748 to i32
  %750 = inttoptr i32 %749 to ptr
  %751 = call ptr @getname(ptr noundef %750) #21
  %752 = getelementptr i8, ptr %58, i32 -84
  store ptr %751, ptr %752, align 4
  %753 = icmp ugt ptr %751, inttoptr (i32 -4096 to ptr)
  br i1 %753, label %754, label %756

754:                                              ; preds = %743
  %755 = ptrtoint ptr %751 to i32
  store ptr null, ptr %752, align 4
  br label %1558

756:                                              ; preds = %743
  %757 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %758 = load volatile i32, ptr %757, align 4
  %759 = getelementptr i8, ptr %58, i32 -88
  store i32 %758, ptr %759, align 8
  %760 = icmp eq i32 %758, 0
  br i1 %760, label %765, label %761

761:                                              ; preds = %756
  %762 = load i64, ptr %723, align 8
  %763 = and i64 %762, 524288
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %765, label %1561

765:                                              ; preds = %761, %756
  %766 = load ptr, ptr %42, align 16
  %767 = getelementptr %struct.signal_struct, ptr %766, i32 0, i32 50, i32 7
  %768 = load volatile i32, ptr %767, align 8
  %769 = getelementptr i8, ptr %58, i32 -56
  store i32 %768, ptr %769, align 8
  %770 = load i32, ptr %92, align 4
  %771 = or i32 %770, 8192
  store i32 %771, ptr %92, align 4
  br label %1615

772:                                              ; preds = %224
  %773 = getelementptr i8, ptr %58, i32 -16
  %774 = load ptr, ptr %773, align 8
  %775 = getelementptr inbounds %struct.anon.178, ptr %774, i32 0, i32 2
  %776 = load i32, ptr %775, align 4
  %777 = and i32 %776, 1
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %1561, !prof !10

779:                                              ; preds = %772
  %780 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %781 = load i16, ptr %780, align 2
  %782 = icmp eq i16 %781, 0
  br i1 %782, label %783, label %1561

783:                                              ; preds = %779
  %784 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %785 = load i64, ptr %784, align 8
  %786 = icmp eq i64 %785, 0
  br i1 %786, label %787, label %1561

787:                                              ; preds = %783
  %788 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %789 = load i64, ptr %788, align 8
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %791, label %1561

791:                                              ; preds = %787
  %792 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %793 = load i32, ptr %792, align 8
  %794 = icmp eq i32 %793, 0
  br i1 %794, label %795, label %1561

795:                                              ; preds = %791
  %796 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %797 = load i32, ptr %796, align 4
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %1561

799:                                              ; preds = %795
  %800 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %801 = load i16, ptr %800, align 8
  %802 = icmp eq i16 %801, 0
  br i1 %802, label %803, label %1561

803:                                              ; preds = %799
  %804 = load i32, ptr %92, align 4
  %805 = and i32 %804, 1
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %807, label %1561

807:                                              ; preds = %803
  %808 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %809 = load volatile i32, ptr %808, align 4
  %810 = getelementptr i8, ptr %58, i32 -92
  store i32 %809, ptr %810, align 4
  %811 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %812 = load volatile i32, ptr %811, align 4
  %813 = getelementptr i8, ptr %58, i32 -88
  store i32 %812, ptr %813, align 8
  %814 = icmp eq i32 %812, 0
  %815 = icmp eq i32 %809, 0
  %816 = select i1 %814, i1 true, i1 %815
  br i1 %816, label %1615, label %1561

817:                                              ; preds = %224
  %818 = load i32, ptr %92, align 4
  %819 = and i32 %818, 33
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %821, label %1561, !prof !10

821:                                              ; preds = %817
  %822 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %823 = load i16, ptr %822, align 2
  %824 = icmp eq i16 %823, 0
  br i1 %824, label %825, label %1561

825:                                              ; preds = %821
  %826 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %827 = load i32, ptr %826, align 4
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %829, label %1561

829:                                              ; preds = %825
  %830 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %831 = load i32, ptr %830, align 4
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %1561

833:                                              ; preds = %829
  %834 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %835 = load volatile i64, ptr %834, align 8
  %836 = trunc i64 %835 to i32
  %837 = getelementptr i8, ptr %58, i32 -76
  store i32 %836, ptr %837, align 4
  %838 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %839 = load volatile i32, ptr %838, align 8
  %840 = getelementptr i8, ptr %58, i32 -80
  store i32 %839, ptr %840, align 8
  %841 = icmp eq i32 %839, 0
  br i1 %841, label %1561, label %842

842:                                              ; preds = %833
  %843 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %844 = load volatile i64, ptr %843, align 8
  %845 = getelementptr i8, ptr %58, i32 -88
  store i64 %844, ptr %845, align 8
  br label %1615

846:                                              ; preds = %224
  %847 = getelementptr i8, ptr %58, i32 -16
  %848 = load ptr, ptr %847, align 8
  %849 = getelementptr inbounds %struct.anon.178, ptr %848, i32 0, i32 2
  %850 = load i32, ptr %849, align 4
  %851 = and i32 %850, 1
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %1561, !prof !10

853:                                              ; preds = %846
  %854 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %855 = load i16, ptr %854, align 2
  %856 = icmp eq i16 %855, 0
  br i1 %856, label %857, label %1561

857:                                              ; preds = %853
  %858 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %859 = load i16, ptr %858, align 8
  %860 = icmp eq i16 %859, 0
  br i1 %860, label %861, label %1561

861:                                              ; preds = %857
  %862 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %863 = load i32, ptr %862, align 4
  %864 = icmp eq i32 %863, 0
  br i1 %864, label %865, label %1561

865:                                              ; preds = %861
  %866 = load i32, ptr %92, align 4
  %867 = and i32 %866, 1
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %1561

869:                                              ; preds = %865
  %870 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %871 = load volatile i32, ptr %870, align 4
  %872 = getelementptr i8, ptr %58, i32 -92
  store i32 %871, ptr %872, align 4
  %873 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %874 = load volatile i32, ptr %873, align 8
  %875 = getelementptr i8, ptr %58, i32 -88
  store i32 %874, ptr %875, align 8
  %876 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %877 = load volatile i64, ptr %876, align 8
  %878 = trunc i64 %877 to i32
  %879 = inttoptr i32 %878 to ptr
  %880 = getelementptr i8, ptr %58, i32 -80
  store ptr %879, ptr %880, align 8
  %881 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %882 = load volatile i64, ptr %881, align 8
  %883 = trunc i64 %882 to i32
  %884 = inttoptr i32 %883 to ptr
  %885 = getelementptr i8, ptr %58, i32 -76
  store ptr %884, ptr %885, align 4
  %886 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %887 = load volatile i32, ptr %886, align 4
  %888 = getelementptr i8, ptr %58, i32 -84
  store i32 %887, ptr %888, align 4
  br label %1615

889:                                              ; preds = %224
  %890 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %891 = load i16, ptr %890, align 2
  %892 = icmp eq i16 %891, 0
  br i1 %892, label %893, label %1561

893:                                              ; preds = %889
  %894 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %895 = load i16, ptr %894, align 8
  %896 = icmp eq i16 %895, 0
  br i1 %896, label %897, label %1561

897:                                              ; preds = %893
  %898 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %899 = load i64, ptr %898, align 8
  %900 = icmp eq i64 %899, 0
  br i1 %900, label %901, label %1561

901:                                              ; preds = %897
  %902 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %903 = load i32, ptr %902, align 4
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %1561

905:                                              ; preds = %901
  %906 = getelementptr i8, ptr %58, i32 -16
  %907 = load ptr, ptr %906, align 8
  %908 = getelementptr inbounds %struct.anon.178, ptr %907, i32 0, i32 2
  %909 = load i32, ptr %908, align 4
  %910 = and i32 %909, 1
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %1561, !prof !10

912:                                              ; preds = %905
  %913 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %914 = load volatile i64, ptr %913, align 8
  %915 = getelementptr i8, ptr %58, i32 -88
  store i64 %914, ptr %915, align 8
  %916 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %917 = load volatile i32, ptr %916, align 8
  %918 = getelementptr i8, ptr %58, i32 -80
  store i32 %917, ptr %918, align 8
  %919 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %920 = load volatile i32, ptr %919, align 4
  %921 = getelementptr i8, ptr %58, i32 -76
  store i32 %920, ptr %921, align 4
  br label %1615

922:                                              ; preds = %224
  %923 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %924 = load i16, ptr %923, align 2
  %925 = icmp eq i16 %924, 0
  br i1 %925, label %926, label %1561

926:                                              ; preds = %922
  %927 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %928 = load i16, ptr %927, align 8
  %929 = icmp eq i16 %928, 0
  br i1 %929, label %930, label %1561

930:                                              ; preds = %926
  %931 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %932 = load i64, ptr %931, align 8
  %933 = icmp eq i64 %932, 0
  br i1 %933, label %934, label %1561

934:                                              ; preds = %930
  %935 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %936 = load i32, ptr %935, align 4
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %1561

938:                                              ; preds = %934
  %939 = getelementptr i8, ptr %58, i32 -16
  %940 = load ptr, ptr %939, align 8
  %941 = getelementptr inbounds %struct.anon.178, ptr %940, i32 0, i32 2
  %942 = load i32, ptr %941, align 4
  %943 = and i32 %942, 1
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %1561, !prof !10

945:                                              ; preds = %938
  %946 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %947 = load volatile i64, ptr %946, align 8
  %948 = getelementptr i8, ptr %58, i32 -88
  store i64 %947, ptr %948, align 8
  %949 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %950 = load volatile i32, ptr %949, align 8
  %951 = getelementptr i8, ptr %58, i32 -80
  store i32 %950, ptr %951, align 8
  %952 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %953 = load volatile i32, ptr %952, align 4
  %954 = getelementptr i8, ptr %58, i32 -76
  store i32 %953, ptr %954, align 4
  br label %1615

955:                                              ; preds = %224
  %956 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %957 = load volatile i64, ptr %956, align 8
  %958 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %959 = load volatile i32, ptr %958, align 8
  %960 = icmp ult i32 %959, 24
  br i1 %960, label %1561, label %961

961:                                              ; preds = %955
  %962 = trunc i64 %957 to i32
  %963 = inttoptr i32 %962 to ptr
  %964 = getelementptr i8, ptr %58, i32 -80
  %965 = icmp eq i32 %959, 24
  br i1 %965, label %973, label %966

966:                                              ; preds = %961
  %967 = add i32 %959, -24
  %968 = getelementptr i8, ptr %963, i32 24
  %969 = call i32 @check_zeroed_user(ptr noundef %968, i32 noundef %967) #21
  %970 = icmp slt i32 %969, 1
  %971 = icmp eq i32 %969, 0
  %972 = select i1 %971, i32 -7, i32 %969
  br i1 %970, label %1561, label %973

973:                                              ; preds = %966, %961
  %974 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %963, i32 24, i32 -1090519040) #23, !srcloc !27
  %975 = extractvalue { i32, i32 } %974, 0
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %983, !prof !10

977:                                              ; preds = %973
  %978 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %41) #6, !srcloc !28
  %979 = and i32 %978, -13
  %980 = or i32 %979, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %980) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %981 = call i32 @arm_copy_from_user(ptr noundef %964, ptr noundef %963, i32 noundef 24) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %978) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %987, label %983, !prof !10

983:                                              ; preds = %977, %973
  %984 = phi i32 [ %981, %977 ], [ 24, %973 ]
  %985 = sub i32 24, %984
  %986 = getelementptr i8, ptr %964, i32 %985
  call void @llvm.memset.p0.i32(ptr align 1 %986, i8 0, i32 %984, i1 false) #21
  br label %1561

987:                                              ; preds = %977
  %988 = getelementptr i8, ptr %58, i32 -16
  %989 = load ptr, ptr %988, align 8
  %990 = getelementptr inbounds %struct.anon.178, ptr %989, i32 0, i32 2
  %991 = load i32, ptr %990, align 4
  %992 = and i32 %991, 1
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %994, label %1561, !prof !10

994:                                              ; preds = %987
  %995 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %996 = load i16, ptr %995, align 2
  %997 = icmp eq i16 %996, 0
  br i1 %997, label %998, label %1561, !prof !10

998:                                              ; preds = %994
  %999 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1000 = load i16, ptr %999, align 8
  %1001 = icmp eq i16 %1000, 0
  br i1 %1001, label %1002, label %1561, !prof !10

1002:                                             ; preds = %998
  %1003 = load i32, ptr %92, align 4
  %1004 = and i32 %1003, 1
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %1006, label %1561, !prof !10

1006:                                             ; preds = %1002
  %1007 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1008 = load volatile i32, ptr %1007, align 4
  %1009 = getelementptr i8, ptr %58, i32 -92
  store i32 %1008, ptr %1009, align 4
  %1010 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1011 = load volatile i64, ptr %1010, align 8
  %1012 = trunc i64 %1011 to i32
  %1013 = inttoptr i32 %1012 to ptr
  %1014 = call ptr @getname(ptr noundef %1013) #21
  %1015 = getelementptr i8, ptr %58, i32 -84
  store ptr %1014, ptr %1015, align 4
  %1016 = icmp ugt ptr %1014, inttoptr (i32 -4096 to ptr)
  br i1 %1016, label %1017, label %1019

1017:                                             ; preds = %1006
  %1018 = ptrtoint ptr %1014 to i32
  store ptr null, ptr %1015, align 4
  br label %1558

1019:                                             ; preds = %1006
  %1020 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1021 = load volatile i32, ptr %1020, align 4
  %1022 = getelementptr i8, ptr %58, i32 -88
  store i32 %1021, ptr %1022, align 8
  %1023 = icmp eq i32 %1021, 0
  br i1 %1023, label %1028, label %1024

1024:                                             ; preds = %1019
  %1025 = load i64, ptr %964, align 8
  %1026 = and i64 %1025, 524288
  %1027 = icmp eq i64 %1026, 0
  br i1 %1027, label %1028, label %1561

1028:                                             ; preds = %1024, %1019
  %1029 = load ptr, ptr %42, align 16
  %1030 = getelementptr %struct.signal_struct, ptr %1029, i32 0, i32 50, i32 7
  %1031 = load volatile i32, ptr %1030, align 8
  %1032 = getelementptr i8, ptr %58, i32 -56
  store i32 %1031, ptr %1032, align 8
  %1033 = load i32, ptr %92, align 4
  %1034 = or i32 %1033, 8192
  store i32 %1034, ptr %92, align 4
  br label %1615

1035:                                             ; preds = %224
  %1036 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1037 = load i16, ptr %1036, align 2
  %1038 = icmp eq i16 %1037, 0
  br i1 %1038, label %1039, label %1561

1039:                                             ; preds = %1035
  %1040 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1041 = load i16, ptr %1040, align 8
  %1042 = icmp eq i16 %1041, 0
  br i1 %1042, label %1043, label %1561

1043:                                             ; preds = %1039
  %1044 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1045 = load i32, ptr %1044, align 4
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %1561

1047:                                             ; preds = %1043
  %1048 = getelementptr i8, ptr %58, i32 -16
  %1049 = load ptr, ptr %1048, align 8
  %1050 = getelementptr inbounds %struct.anon.178, ptr %1049, i32 0, i32 2
  %1051 = load i32, ptr %1050, align 4
  %1052 = and i32 %1051, 1
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1054, label %1561, !prof !10

1054:                                             ; preds = %1047
  %1055 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1056 = load volatile i32, ptr %1055, align 4
  %1057 = getelementptr i8, ptr %58, i32 -92
  store i32 %1056, ptr %1057, align 4
  %1058 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1059 = load volatile i32, ptr %1058, align 8
  %1060 = getelementptr i8, ptr %58, i32 -88
  store i32 %1059, ptr %1060, align 8
  %1061 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1062 = load volatile i64, ptr %1061, align 8
  %1063 = trunc i64 %1062 to i32
  %1064 = getelementptr i8, ptr %58, i32 -84
  store i32 %1063, ptr %1064, align 4
  %1065 = icmp eq i32 %1059, 2
  br i1 %1065, label %1615, label %1066

1066:                                             ; preds = %1054
  %1067 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1068 = load volatile i64, ptr %1067, align 8
  %1069 = trunc i64 %1068 to i32
  %1070 = inttoptr i32 %1069 to ptr
  %1071 = getelementptr i8, ptr %58, i32 -80
  %1072 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1070, i32 16, i32 -1090519040) #23, !srcloc !27
  %1073 = extractvalue { i32, i32 } %1072, 0
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1081, !prof !10

1075:                                             ; preds = %1066
  %1076 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %41) #6, !srcloc !28
  %1077 = and i32 %1076, -13
  %1078 = or i32 %1077, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %1078) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %1079 = call i32 @arm_copy_from_user(ptr noundef %1071, ptr noundef %1070, i32 noundef 16) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %1076) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1615, label %1081, !prof !10

1081:                                             ; preds = %1075, %1066
  %1082 = phi i32 [ %1079, %1075 ], [ 16, %1066 ]
  %1083 = sub i32 16, %1082
  %1084 = getelementptr i8, ptr %1071, i32 %1083
  call void @llvm.memset.p0.i32(ptr align 1 %1084, i8 0, i32 %1082, i1 false) #21
  br label %1561

1085:                                             ; preds = %224
  %1086 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1087 = load volatile i64, ptr %1086, align 8
  %1088 = getelementptr i8, ptr %58, i32 -80
  store i64 %1087, ptr %1088, align 8
  %1089 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1090 = load volatile i64, ptr %1089, align 8
  %1091 = getelementptr i8, ptr %58, i32 -88
  store i64 %1090, ptr %1091, align 8
  %1092 = getelementptr i8, ptr %58, i32 -16
  %1093 = load ptr, ptr %1092, align 8
  %1094 = getelementptr inbounds %struct.anon.178, ptr %1093, i32 0, i32 2
  %1095 = load i32, ptr %1094, align 4
  %1096 = and i32 %1095, 1
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1561, !prof !10

1098:                                             ; preds = %1085
  %1099 = getelementptr i8, ptr %58, i32 -92
  store ptr null, ptr %1099, align 4
  %1100 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1101 = load volatile i32, ptr %1100, align 8
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr i8, ptr %58, i32 -72
  store i64 %1102, ptr %1103, align 8
  %1104 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1105 = load volatile i32, ptr %1104, align 4
  %1106 = getelementptr i8, ptr %58, i32 -64
  store i32 %1105, ptr %1106, align 8
  %1107 = and i32 %1105, 2147483632
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1561, !prof !10

1109:                                             ; preds = %1098
  %1110 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1111 = load volatile i32, ptr %1110, align 4
  %1112 = icmp slt i32 %1105, 0
  %1113 = call fastcc ptr @io_file_get(ptr noundef %1093, ptr noundef %60, i32 noundef %1111, i1 noundef zeroext %1112) #21
  store ptr %1113, ptr %1099, align 4
  %1114 = icmp eq ptr %1113, null
  br i1 %1114, label %1561, label %1115

1115:                                             ; preds = %1109
  %1116 = load i32, ptr %92, align 4
  %1117 = or i32 %1116, 8192
  store i32 %1117, ptr %92, align 4
  br label %1615

1118:                                             ; preds = %224
  %1119 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1120 = load i16, ptr %1119, align 2
  %1121 = icmp eq i16 %1120, 0
  br i1 %1121, label %1122, label %1561

1122:                                             ; preds = %1118
  %1123 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1124 = load i32, ptr %1123, align 4
  %1125 = icmp eq i32 %1124, 0
  br i1 %1125, label %1126, label %1561

1126:                                             ; preds = %1122
  %1127 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1128 = load i32, ptr %1127, align 4
  %1129 = icmp eq i32 %1128, 0
  br i1 %1129, label %1130, label %1561

1130:                                             ; preds = %1126
  %1131 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1132 = load volatile i32, ptr %1131, align 4
  %1133 = add i32 %1132, -65536
  %1134 = icmp ult i32 %1133, -65535
  br i1 %1134, label %1561, label %1135

1135:                                             ; preds = %1130
  %1136 = trunc i32 %1132 to i16
  %1137 = getelementptr i8, ptr %58, i32 -72
  store i16 %1136, ptr %1137, align 8
  %1138 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1139 = load volatile i64, ptr %1138, align 8
  %1140 = getelementptr i8, ptr %58, i32 -88
  store i64 %1139, ptr %1140, align 8
  %1141 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1142 = load volatile i32, ptr %1141, align 8
  %1143 = getelementptr i8, ptr %58, i32 -80
  store i32 %1142, ptr %1143, align 8
  %1144 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %1142, i32 %1132) #21
  %1145 = extractvalue { i32, i1 } %1144, 1
  br i1 %1145, label %1561, label %1146

1146:                                             ; preds = %1135
  %1147 = extractvalue { i32, i1 } %1144, 0
  %1148 = trunc i64 %1139 to i32
  %1149 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %1148, i32 %1147) #21
  %1150 = extractvalue { i32, i1 } %1149, 1
  br i1 %1150, label %1561, label %1151

1151:                                             ; preds = %1146
  %1152 = inttoptr i32 %1148 to ptr
  %1153 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1152, i32 %1147, i32 -1090519040) #23, !srcloc !93
  %1154 = extractvalue { i32, i32 } %1153, 0
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1156, label %1561

1156:                                             ; preds = %1151
  %1157 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1158 = load volatile i16, ptr %1157, align 8
  %1159 = zext i16 %1158 to i32
  %1160 = getelementptr i8, ptr %58, i32 -76
  store i32 %1159, ptr %1160, align 4
  %1161 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1162 = load volatile i64, ptr %1161, align 8
  %1163 = icmp ugt i64 %1162, 65535
  br i1 %1163, label %1561, label %1164

1164:                                             ; preds = %1156
  %1165 = trunc i64 %1162 to i16
  %1166 = getelementptr i8, ptr %58, i32 -70
  store i16 %1165, ptr %1166, align 2
  br label %1615

1167:                                             ; preds = %224
  %1168 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1169 = load i16, ptr %1168, align 2
  %1170 = icmp eq i16 %1169, 0
  br i1 %1170, label %1171, label %1561

1171:                                             ; preds = %1167
  %1172 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1173 = load i32, ptr %1172, align 4
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1175, label %1561

1175:                                             ; preds = %1171
  %1176 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1177 = load i64, ptr %1176, align 8
  %1178 = icmp eq i64 %1177, 0
  br i1 %1178, label %1179, label %1561

1179:                                             ; preds = %1175
  %1180 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1181 = load i32, ptr %1180, align 8
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1183, label %1561

1183:                                             ; preds = %1179
  %1184 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1185 = load i64, ptr %1184, align 8
  %1186 = icmp eq i64 %1185, 0
  br i1 %1186, label %1187, label %1561

1187:                                             ; preds = %1183
  %1188 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1189 = load i32, ptr %1188, align 4
  %1190 = icmp eq i32 %1189, 0
  br i1 %1190, label %1191, label %1561

1191:                                             ; preds = %1187
  %1192 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1193 = load volatile i32, ptr %1192, align 4
  %1194 = add i32 %1193, -65536
  %1195 = icmp ult i32 %1194, -65535
  br i1 %1195, label %1561, label %1196

1196:                                             ; preds = %1191
  call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(32) %60, i8 0, i32 32, i1 false) #21
  %1197 = trunc i32 %1193 to i16
  %1198 = getelementptr i8, ptr %58, i32 -72
  store i16 %1197, ptr %1198, align 8
  %1199 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1200 = load volatile i16, ptr %1199, align 8
  %1201 = zext i16 %1200 to i32
  %1202 = getelementptr i8, ptr %58, i32 -76
  store i32 %1201, ptr %1202, align 4
  br label %1615

1203:                                             ; preds = %224
  %1204 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1205 = load volatile i64, ptr %1204, align 8
  %1206 = icmp eq i64 %1205, 0
  br i1 %1206, label %1207, label %1561

1207:                                             ; preds = %1203
  %1208 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1209 = load volatile i64, ptr %1208, align 8
  %1210 = icmp eq i64 %1209, 0
  br i1 %1210, label %1211, label %1561

1211:                                             ; preds = %1207
  %1212 = getelementptr i8, ptr %58, i32 -16
  %1213 = load ptr, ptr %1212, align 8
  %1214 = getelementptr inbounds %struct.anon.178, ptr %1213, i32 0, i32 2
  %1215 = load i32, ptr %1214, align 4
  %1216 = and i32 %1215, 1
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1218, label %1561, !prof !10

1218:                                             ; preds = %1211
  %1219 = getelementptr i8, ptr %58, i32 -92
  store ptr null, ptr %1219, align 4
  %1220 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1221 = load volatile i32, ptr %1220, align 8
  %1222 = zext i32 %1221 to i64
  %1223 = getelementptr i8, ptr %58, i32 -72
  store i64 %1222, ptr %1223, align 8
  %1224 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1225 = load volatile i32, ptr %1224, align 4
  %1226 = getelementptr i8, ptr %58, i32 -64
  store i32 %1225, ptr %1226, align 8
  %1227 = and i32 %1225, 2147483632
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1229, label %1561, !prof !10

1229:                                             ; preds = %1218
  %1230 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1231 = load volatile i32, ptr %1230, align 4
  %1232 = icmp slt i32 %1225, 0
  %1233 = call fastcc ptr @io_file_get(ptr noundef %1213, ptr noundef %60, i32 noundef %1231, i1 noundef zeroext %1232) #21
  store ptr %1233, ptr %1219, align 4
  %1234 = icmp eq ptr %1233, null
  br i1 %1234, label %1561, label %1235

1235:                                             ; preds = %1229
  %1236 = load i32, ptr %92, align 4
  %1237 = or i32 %1236, 8192
  store i32 %1237, ptr %92, align 4
  br label %1615

1238:                                             ; preds = %224
  %1239 = getelementptr i8, ptr %58, i32 -16
  %1240 = load ptr, ptr %1239, align 8
  %1241 = getelementptr inbounds %struct.anon.178, ptr %1240, i32 0, i32 2
  %1242 = load i32, ptr %1241, align 4
  %1243 = and i32 %1242, 1
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1245, label %1561, !prof !10

1245:                                             ; preds = %1238
  %1246 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1247 = load i16, ptr %1246, align 2
  %1248 = icmp eq i16 %1247, 0
  br i1 %1248, label %1249, label %1561, !prof !10

1249:                                             ; preds = %1245
  %1250 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1251 = load i64, ptr %1250, align 8
  %1252 = icmp eq i64 %1251, 0
  br i1 %1252, label %1253, label %1561, !prof !10

1253:                                             ; preds = %1249
  %1254 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1255 = load i64, ptr %1254, align 8
  %1256 = icmp eq i64 %1255, 0
  br i1 %1256, label %1257, label %1561, !prof !10

1257:                                             ; preds = %1253
  %1258 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1259 = load i32, ptr %1258, align 4
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1261, label %1561, !prof !10

1261:                                             ; preds = %1257
  %1262 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1263 = load i16, ptr %1262, align 8
  %1264 = icmp eq i16 %1263, 0
  br i1 %1264, label %1265, label %1561, !prof !10

1265:                                             ; preds = %1261
  %1266 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1267 = load i32, ptr %1266, align 4
  %1268 = icmp eq i32 %1267, 0
  br i1 %1268, label %1269, label %1561, !prof !10

1269:                                             ; preds = %1265
  %1270 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1271 = load volatile i32, ptr %1270, align 8
  %1272 = getelementptr i8, ptr %58, i32 -92
  store i32 %1271, ptr %1272, align 4
  br label %1615

1273:                                             ; preds = %224
  %1274 = getelementptr i8, ptr %58, i32 -16
  %1275 = load ptr, ptr %1274, align 8
  %1276 = getelementptr inbounds %struct.anon.178, ptr %1275, i32 0, i32 2
  %1277 = load i32, ptr %1276, align 4
  %1278 = and i32 %1277, 1
  %1279 = icmp eq i32 %1278, 0
  br i1 %1279, label %1280, label %1561, !prof !10

1280:                                             ; preds = %1273
  %1281 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1282 = load i16, ptr %1281, align 2
  %1283 = icmp eq i16 %1282, 0
  br i1 %1283, label %1284, label %1561

1284:                                             ; preds = %1280
  %1285 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1286 = load i16, ptr %1285, align 8
  %1287 = icmp eq i16 %1286, 0
  br i1 %1287, label %1288, label %1561

1288:                                             ; preds = %1284
  %1289 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1290 = load i32, ptr %1289, align 4
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1292, label %1561

1292:                                             ; preds = %1288
  %1293 = load i32, ptr %92, align 4
  %1294 = and i32 %1293, 1
  %1295 = icmp eq i32 %1294, 0
  br i1 %1295, label %1296, label %1561, !prof !10

1296:                                             ; preds = %1292
  %1297 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1298 = load volatile i32, ptr %1297, align 4
  %1299 = getelementptr i8, ptr %58, i32 -92
  store i32 %1298, ptr %1299, align 4
  %1300 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1301 = load volatile i64, ptr %1300, align 8
  %1302 = trunc i64 %1301 to i32
  %1303 = inttoptr i32 %1302 to ptr
  %1304 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1305 = load volatile i64, ptr %1304, align 8
  %1306 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1307 = load volatile i32, ptr %1306, align 8
  %1308 = getelementptr i8, ptr %58, i32 -88
  store i32 %1307, ptr %1308, align 4
  %1309 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1310 = load volatile i32, ptr %1309, align 4
  %1311 = getelementptr i8, ptr %58, i32 -76
  store i32 %1310, ptr %1311, align 4
  %1312 = call ptr @getname(ptr noundef %1303) #21
  %1313 = getelementptr i8, ptr %58, i32 -84
  store ptr %1312, ptr %1313, align 4
  %1314 = icmp ugt ptr %1312, inttoptr (i32 -4096 to ptr)
  br i1 %1314, label %1315, label %1317

1315:                                             ; preds = %1296
  %1316 = ptrtoint ptr %1312 to i32
  br label %1558

1317:                                             ; preds = %1296
  %1318 = trunc i64 %1305 to i32
  %1319 = inttoptr i32 %1318 to ptr
  %1320 = call ptr @getname(ptr noundef %1319) #21
  %1321 = getelementptr i8, ptr %58, i32 -80
  store ptr %1320, ptr %1321, align 4
  %1322 = icmp ugt ptr %1320, inttoptr (i32 -4096 to ptr)
  br i1 %1322, label %1323, label %1327

1323:                                             ; preds = %1317
  %1324 = load ptr, ptr %1313, align 4
  call void @putname(ptr noundef %1324) #21
  %1325 = load ptr, ptr %1321, align 4
  %1326 = ptrtoint ptr %1325 to i32
  br label %1558

1327:                                             ; preds = %1317
  %1328 = load i32, ptr %92, align 4
  %1329 = or i32 %1328, 8192
  store i32 %1329, ptr %92, align 4
  br label %1615

1330:                                             ; preds = %224
  %1331 = getelementptr i8, ptr %58, i32 -16
  %1332 = load ptr, ptr %1331, align 8
  %1333 = getelementptr inbounds %struct.anon.178, ptr %1332, i32 0, i32 2
  %1334 = load i32, ptr %1333, align 4
  %1335 = and i32 %1334, 1
  %1336 = icmp eq i32 %1335, 0
  br i1 %1336, label %1337, label %1561, !prof !10

1337:                                             ; preds = %1330
  %1338 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1339 = load i16, ptr %1338, align 2
  %1340 = icmp eq i16 %1339, 0
  br i1 %1340, label %1341, label %1561

1341:                                             ; preds = %1337
  %1342 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1343 = load i64, ptr %1342, align 8
  %1344 = icmp eq i64 %1343, 0
  br i1 %1344, label %1345, label %1561

1345:                                             ; preds = %1341
  %1346 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1347 = load i32, ptr %1346, align 8
  %1348 = icmp eq i32 %1347, 0
  br i1 %1348, label %1349, label %1561

1349:                                             ; preds = %1345
  %1350 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1351 = load i16, ptr %1350, align 8
  %1352 = icmp eq i16 %1351, 0
  br i1 %1352, label %1353, label %1561

1353:                                             ; preds = %1349
  %1354 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1355 = load i32, ptr %1354, align 4
  %1356 = icmp eq i32 %1355, 0
  br i1 %1356, label %1357, label %1561

1357:                                             ; preds = %1353
  %1358 = load i32, ptr %92, align 4
  %1359 = and i32 %1358, 1
  %1360 = icmp eq i32 %1359, 0
  br i1 %1360, label %1361, label %1561, !prof !10

1361:                                             ; preds = %1357
  %1362 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1363 = load volatile i32, ptr %1362, align 4
  %1364 = getelementptr i8, ptr %58, i32 -92
  store i32 %1363, ptr %1364, align 4
  %1365 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1366 = load volatile i32, ptr %1365, align 4
  %1367 = getelementptr i8, ptr %58, i32 -88
  store i32 %1366, ptr %1367, align 4
  %1368 = and i32 %1366, -513
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1370, label %1561

1370:                                             ; preds = %1361
  %1371 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1372 = load volatile i64, ptr %1371, align 8
  %1373 = trunc i64 %1372 to i32
  %1374 = inttoptr i32 %1373 to ptr
  %1375 = call ptr @getname(ptr noundef %1374) #21
  %1376 = getelementptr i8, ptr %58, i32 -84
  store ptr %1375, ptr %1376, align 4
  %1377 = icmp ugt ptr %1375, inttoptr (i32 -4096 to ptr)
  br i1 %1377, label %1378, label %1380

1378:                                             ; preds = %1370
  %1379 = ptrtoint ptr %1375 to i32
  br label %1558

1380:                                             ; preds = %1370
  %1381 = load i32, ptr %92, align 4
  %1382 = or i32 %1381, 8192
  store i32 %1382, ptr %92, align 4
  br label %1615

1383:                                             ; preds = %224
  %1384 = getelementptr i8, ptr %58, i32 -16
  %1385 = load ptr, ptr %1384, align 8
  %1386 = getelementptr inbounds %struct.anon.178, ptr %1385, i32 0, i32 2
  %1387 = load i32, ptr %1386, align 4
  %1388 = and i32 %1387, 1
  %1389 = icmp eq i32 %1388, 0
  br i1 %1389, label %1390, label %1561, !prof !10

1390:                                             ; preds = %1383
  %1391 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1392 = load i16, ptr %1391, align 2
  %1393 = icmp eq i16 %1392, 0
  br i1 %1393, label %1394, label %1561

1394:                                             ; preds = %1390
  %1395 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1396 = load i64, ptr %1395, align 8
  %1397 = icmp eq i64 %1396, 0
  br i1 %1397, label %1398, label %1561

1398:                                             ; preds = %1394
  %1399 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1400 = load i32, ptr %1399, align 4
  %1401 = icmp eq i32 %1400, 0
  br i1 %1401, label %1402, label %1561

1402:                                             ; preds = %1398
  %1403 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1404 = load i16, ptr %1403, align 8
  %1405 = icmp eq i16 %1404, 0
  br i1 %1405, label %1406, label %1561

1406:                                             ; preds = %1402
  %1407 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1408 = load i32, ptr %1407, align 4
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %1410, label %1561

1410:                                             ; preds = %1406
  %1411 = load i32, ptr %92, align 4
  %1412 = and i32 %1411, 1
  %1413 = icmp eq i32 %1412, 0
  br i1 %1413, label %1414, label %1561, !prof !10

1414:                                             ; preds = %1410
  %1415 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1416 = load volatile i32, ptr %1415, align 4
  %1417 = getelementptr i8, ptr %58, i32 -92
  store i32 %1416, ptr %1417, align 4
  %1418 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1419 = load volatile i32, ptr %1418, align 8
  %1420 = trunc i32 %1419 to i16
  %1421 = getelementptr i8, ptr %58, i32 -88
  store i16 %1420, ptr %1421, align 4
  %1422 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1423 = load volatile i64, ptr %1422, align 8
  %1424 = trunc i64 %1423 to i32
  %1425 = inttoptr i32 %1424 to ptr
  %1426 = call ptr @getname(ptr noundef %1425) #21
  %1427 = getelementptr i8, ptr %58, i32 -84
  store ptr %1426, ptr %1427, align 4
  %1428 = icmp ugt ptr %1426, inttoptr (i32 -4096 to ptr)
  br i1 %1428, label %1429, label %1431

1429:                                             ; preds = %1414
  %1430 = ptrtoint ptr %1426 to i32
  br label %1558

1431:                                             ; preds = %1414
  %1432 = load i32, ptr %92, align 4
  %1433 = or i32 %1432, 8192
  store i32 %1433, ptr %92, align 4
  br label %1615

1434:                                             ; preds = %224
  %1435 = getelementptr i8, ptr %58, i32 -16
  %1436 = load ptr, ptr %1435, align 8
  %1437 = getelementptr inbounds %struct.anon.178, ptr %1436, i32 0, i32 2
  %1438 = load i32, ptr %1437, align 4
  %1439 = and i32 %1438, 1
  %1440 = icmp eq i32 %1439, 0
  br i1 %1440, label %1441, label %1561, !prof !10

1441:                                             ; preds = %1434
  %1442 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1443 = load i16, ptr %1442, align 2
  %1444 = icmp eq i16 %1443, 0
  br i1 %1444, label %1445, label %1561

1445:                                             ; preds = %1441
  %1446 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1447 = load i32, ptr %1446, align 8
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1449, label %1561

1449:                                             ; preds = %1445
  %1450 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1451 = load i32, ptr %1450, align 4
  %1452 = icmp eq i32 %1451, 0
  br i1 %1452, label %1453, label %1561

1453:                                             ; preds = %1449
  %1454 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1455 = load i16, ptr %1454, align 8
  %1456 = icmp eq i16 %1455, 0
  br i1 %1456, label %1457, label %1561

1457:                                             ; preds = %1453
  %1458 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1459 = load i32, ptr %1458, align 4
  %1460 = icmp eq i32 %1459, 0
  br i1 %1460, label %1461, label %1561

1461:                                             ; preds = %1457
  %1462 = load i32, ptr %92, align 4
  %1463 = and i32 %1462, 1
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %1465, label %1561, !prof !10

1465:                                             ; preds = %1461
  %1466 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1467 = load volatile i32, ptr %1466, align 4
  %1468 = getelementptr i8, ptr %58, i32 -92
  store i32 %1467, ptr %1468, align 4
  %1469 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1470 = load volatile i64, ptr %1469, align 8
  %1471 = trunc i64 %1470 to i32
  %1472 = inttoptr i32 %1471 to ptr
  %1473 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1474 = load volatile i64, ptr %1473, align 8
  %1475 = call ptr @getname(ptr noundef %1472) #21
  %1476 = getelementptr i8, ptr %58, i32 -88
  store ptr %1475, ptr %1476, align 4
  %1477 = icmp ugt ptr %1475, inttoptr (i32 -4096 to ptr)
  br i1 %1477, label %1478, label %1480

1478:                                             ; preds = %1465
  %1479 = ptrtoint ptr %1475 to i32
  br label %1558

1480:                                             ; preds = %1465
  %1481 = trunc i64 %1474 to i32
  %1482 = inttoptr i32 %1481 to ptr
  %1483 = call ptr @getname(ptr noundef %1482) #21
  %1484 = getelementptr i8, ptr %58, i32 -84
  store ptr %1483, ptr %1484, align 4
  %1485 = icmp ugt ptr %1483, inttoptr (i32 -4096 to ptr)
  br i1 %1485, label %1486, label %1490

1486:                                             ; preds = %1480
  %1487 = load ptr, ptr %1476, align 4
  call void @putname(ptr noundef %1487) #21
  %1488 = load ptr, ptr %1484, align 4
  %1489 = ptrtoint ptr %1488 to i32
  br label %1558

1490:                                             ; preds = %1480
  %1491 = load i32, ptr %92, align 4
  %1492 = or i32 %1491, 8192
  store i32 %1492, ptr %92, align 4
  br label %1615

1493:                                             ; preds = %224
  %1494 = getelementptr i8, ptr %58, i32 -16
  %1495 = load ptr, ptr %1494, align 8
  %1496 = getelementptr inbounds %struct.anon.178, ptr %1495, i32 0, i32 2
  %1497 = load i32, ptr %1496, align 4
  %1498 = and i32 %1497, 1
  %1499 = icmp eq i32 %1498, 0
  br i1 %1499, label %1500, label %1561, !prof !10

1500:                                             ; preds = %1493
  %1501 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 2
  %1502 = load i16, ptr %1501, align 2
  %1503 = icmp eq i16 %1502, 0
  br i1 %1503, label %1504, label %1561

1504:                                             ; preds = %1500
  %1505 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 7
  %1506 = load i32, ptr %1505, align 4
  %1507 = icmp eq i32 %1506, 0
  br i1 %1507, label %1508, label %1561

1508:                                             ; preds = %1504
  %1509 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 9
  %1510 = load i16, ptr %1509, align 8
  %1511 = icmp eq i16 %1510, 0
  br i1 %1511, label %1512, label %1561

1512:                                             ; preds = %1508
  %1513 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 11
  %1514 = load i32, ptr %1513, align 4
  %1515 = icmp eq i32 %1514, 0
  br i1 %1515, label %1516, label %1561

1516:                                             ; preds = %1512
  %1517 = load i32, ptr %92, align 4
  %1518 = and i32 %1517, 1
  %1519 = icmp eq i32 %1518, 0
  br i1 %1519, label %1520, label %1561, !prof !10

1520:                                             ; preds = %1516
  %1521 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 3
  %1522 = load volatile i32, ptr %1521, align 4
  %1523 = getelementptr i8, ptr %58, i32 -92
  store i32 %1522, ptr %1523, align 4
  %1524 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 6
  %1525 = load volatile i32, ptr %1524, align 8
  %1526 = getelementptr i8, ptr %58, i32 -88
  store i32 %1525, ptr %1526, align 4
  %1527 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 5
  %1528 = load volatile i64, ptr %1527, align 8
  %1529 = trunc i64 %1528 to i32
  %1530 = inttoptr i32 %1529 to ptr
  %1531 = getelementptr %struct.io_uring_sqe, ptr %80, i32 %68, i32 4
  %1532 = load volatile i64, ptr %1531, align 8
  %1533 = load volatile i32, ptr %1505, align 4
  %1534 = getelementptr i8, ptr %58, i32 -76
  store i32 %1533, ptr %1534, align 4
  %1535 = call ptr @getname(ptr noundef %1530) #21
  %1536 = getelementptr i8, ptr %58, i32 -84
  store ptr %1535, ptr %1536, align 4
  %1537 = icmp ugt ptr %1535, inttoptr (i32 -4096 to ptr)
  br i1 %1537, label %1538, label %1540

1538:                                             ; preds = %1520
  %1539 = ptrtoint ptr %1535 to i32
  br label %1558

1540:                                             ; preds = %1520
  %1541 = trunc i64 %1532 to i32
  %1542 = inttoptr i32 %1541 to ptr
  %1543 = call ptr @getname(ptr noundef %1542) #21
  %1544 = getelementptr i8, ptr %58, i32 -80
  store ptr %1543, ptr %1544, align 4
  %1545 = icmp ugt ptr %1543, inttoptr (i32 -4096 to ptr)
  br i1 %1545, label %1546, label %1550

1546:                                             ; preds = %1540
  %1547 = load ptr, ptr %1536, align 4
  call void @putname(ptr noundef %1547) #21
  %1548 = load ptr, ptr %1544, align 4
  %1549 = ptrtoint ptr %1548 to i32
  br label %1558

1550:                                             ; preds = %1540
  %1551 = load i32, ptr %92, align 4
  %1552 = or i32 %1551, 8192
  store i32 %1552, ptr %92, align 4
  br label %1615

1553:                                             ; preds = %224
  %1554 = load i1, ptr @io_req_prep.__already_done, align 1
  br i1 %1554, label %1561, label %1555, !prof !10

1555:                                             ; preds = %1553
  store i1 true, ptr @io_req_prep.__already_done, align 1
  %1556 = zext i8 %225 to i32
  %1557 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.79, i32 noundef %1556) #24
  br label %1561

1558:                                             ; preds = %1546, %1538, %1486, %1478, %1429, %1378, %1323, %1315, %1017, %754, %629, %526, %250, %232
  %1559 = phi i32 [ %630, %629 ], [ %527, %526 ], [ %233, %232 ], [ %255, %250 ], [ %755, %754 ], [ %1018, %1017 ], [ %1316, %1315 ], [ %1326, %1323 ], [ %1379, %1378 ], [ %1430, %1429 ], [ %1479, %1478 ], [ %1489, %1486 ], [ %1539, %1538 ], [ %1549, %1546 ]
  %1560 = icmp eq i32 %1559, 0
  br i1 %1560, label %1615, label %1561, !prof !10

1561:                                             ; preds = %1558, %1555, %1553, %1516, %1512, %1508, %1504, %1500, %1493, %1461, %1457, %1453, %1449, %1445, %1441, %1434, %1410, %1406, %1402, %1398, %1394, %1390, %1383, %1361, %1357, %1353, %1349, %1345, %1341, %1337, %1330, %1292, %1288, %1284, %1280, %1273, %1265, %1261, %1257, %1253, %1249, %1245, %1238, %1229, %1218, %1211, %1207, %1203, %1191, %1187, %1183, %1179, %1175, %1171, %1167, %1156, %1151, %1146, %1135, %1130, %1126, %1122, %1118, %1109, %1098, %1085, %1081, %1047, %1043, %1039, %1035, %1024, %1002, %998, %994, %987, %983, %966, %955, %938, %934, %930, %926, %922, %905, %901, %897, %893, %889, %865, %861, %857, %853, %846, %833, %829, %825, %821, %817, %807, %803, %799, %795, %791, %787, %783, %779, %772, %761, %739, %735, %731, %718, %701, %697, %693, %689, %685, %682, %672, %646, %642, %638, %631, %621, %617, %613, %609, %605, %601, %594, %592, %588, %585, %577, %574, %565, %551, %547, %543, %539, %535, %528, %512, %508, %504, %500, %496, %489, %460, %435, %420, %416, %412, %408, %401, %388, %384, %380, %376, %372, %365, %362, %359, %330, %324, %320, %316, %312, %305, %283, %279, %275, %271, %267, %263, %256, %234, %226, %214, %203, %164, %160, %150, %124, %110, %104, %100
  %1562 = phi i32 [ %1559, %1558 ], [ -22, %214 ], [ -9, %1516 ], [ -22, %1500 ], [ -22, %1504 ], [ -22, %1508 ], [ -22, %1512 ], [ -22, %1493 ], [ -9, %1461 ], [ -22, %1441 ], [ -22, %1445 ], [ -22, %1449 ], [ -22, %1453 ], [ -22, %1457 ], [ -22, %1434 ], [ -9, %1410 ], [ -22, %1390 ], [ -22, %1394 ], [ -22, %1398 ], [ -22, %1402 ], [ -22, %1406 ], [ -22, %1383 ], [ -22, %1361 ], [ -9, %1357 ], [ -22, %1337 ], [ -22, %1341 ], [ -22, %1345 ], [ -22, %1349 ], [ -22, %1353 ], [ -22, %1330 ], [ -9, %1292 ], [ -22, %1280 ], [ -22, %1284 ], [ -22, %1288 ], [ -22, %1273 ], [ -22, %1245 ], [ -22, %1249 ], [ -22, %1253 ], [ -22, %1257 ], [ -22, %1261 ], [ -22, %1265 ], [ -22, %1238 ], [ -9, %1229 ], [ -22, %1218 ], [ -22, %1211 ], [ -22, %1203 ], [ -22, %1207 ], [ -22, %1191 ], [ -22, %1167 ], [ -22, %1171 ], [ -22, %1175 ], [ -22, %1179 ], [ -22, %1183 ], [ -22, %1187 ], [ -7, %1156 ], [ -14, %1151 ], [ -75, %1146 ], [ -75, %1135 ], [ -7, %1130 ], [ -22, %1118 ], [ -22, %1122 ], [ -22, %1126 ], [ -9, %1109 ], [ -22, %1098 ], [ -22, %1085 ], [ -14, %1081 ], [ -22, %1047 ], [ -22, %1035 ], [ -22, %1039 ], [ -22, %1043 ], [ %972, %966 ], [ -14, %983 ], [ -22, %994 ], [ -22, %1024 ], [ -9, %1002 ], [ -22, %998 ], [ -22, %987 ], [ -22, %955 ], [ -22, %938 ], [ -22, %922 ], [ -22, %926 ], [ -22, %930 ], [ -22, %934 ], [ -22, %905 ], [ -22, %889 ], [ -22, %893 ], [ -22, %897 ], [ -22, %901 ], [ -9, %865 ], [ -22, %853 ], [ -22, %857 ], [ -22, %861 ], [ -22, %846 ], [ -22, %833 ], [ -22, %821 ], [ -22, %825 ], [ -22, %829 ], [ -22, %817 ], [ -22, %807 ], [ -9, %803 ], [ -22, %779 ], [ -22, %783 ], [ -22, %787 ], [ -22, %791 ], [ -22, %795 ], [ -22, %799 ], [ -22, %772 ], [ -22, %731 ], [ -22, %761 ], [ -9, %739 ], [ -22, %735 ], [ -22, %718 ], [ -22, %701 ], [ -22, %685 ], [ -22, %689 ], [ -22, %693 ], [ -22, %697 ], [ -22, %682 ], [ -22, %672 ], [ -22, %638 ], [ -22, %642 ], [ -22, %646 ], [ -22, %631 ], [ -22, %605 ], [ -22, %609 ], [ -22, %613 ], [ -22, %617 ], [ -22, %621 ], [ -22, %601 ], [ -22, %594 ], [ -22, %592 ], [ -22, %585 ], [ -22, %588 ], [ -14, %577 ], [ -22, %574 ], [ -22, %565 ], [ -22, %539 ], [ -22, %543 ], [ -22, %547 ], [ -22, %551 ], [ -22, %535 ], [ -22, %528 ], [ -22, %496 ], [ -22, %500 ], [ -22, %504 ], [ -22, %508 ], [ -22, %512 ], [ -22, %489 ], [ -22, %460 ], [ -22, %435 ], [ -22, %408 ], [ -22, %412 ], [ -22, %416 ], [ -22, %420 ], [ -22, %401 ], [ -22, %372 ], [ -22, %376 ], [ -22, %380 ], [ -22, %388 ], [ -22, %384 ], [ -22, %365 ], [ -9, %362 ], [ -22, %359 ], [ -22, %330 ], [ -22, %324 ], [ -22, %312 ], [ -22, %316 ], [ -22, %320 ], [ -22, %305 ], [ -22, %283 ], [ -22, %279 ], [ -22, %263 ], [ -22, %267 ], [ -22, %271 ], [ -22, %275 ], [ -22, %256 ], [ -9, %234 ], [ -9, %226 ], [ -22, %1553 ], [ -22, %1555 ], [ -13, %164 ], [ -95, %124 ], [ -95, %110 ], [ -22, %104 ], [ -9, %203 ], [ -22, %100 ], [ -13, %150 ], [ -13, %160 ]
  %1563 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_req_failed, i32 0, i32 1), align 4
  %1564 = icmp sgt i32 %1563, 0
  br i1 %1564, label %1565, label %1586

1565:                                             ; preds = %1561
  %1566 = load i32, ptr %43, align 8
  %1567 = lshr i32 %1566, 5
  %1568 = getelementptr i32, ptr @__cpu_online_mask, i32 %1567
  %1569 = load volatile i32, ptr %1568, align 4
  %1570 = and i32 %1566, 31
  %1571 = shl nuw i32 1, %1570
  %1572 = and i32 %1571, %1569
  %1573 = icmp eq i32 %1572, 0
  br i1 %1573, label %1586, label %1574

1574:                                             ; preds = %1565
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !94
  %1575 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_req_failed, i32 0, i32 7), align 4
  %1576 = icmp eq ptr %1575, null
  br i1 %1576, label %1585, label %1577

1577:                                             ; preds = %1577, %1574
  %1578 = phi ptr [ %1582, %1577 ], [ %1575, %1574 ]
  %1579 = load volatile ptr, ptr %1578, align 4
  %1580 = getelementptr inbounds %struct.tracepoint_func, ptr %1578, i32 0, i32 1
  %1581 = load ptr, ptr %1580, align 4
  call void %1579(ptr noundef %1581, ptr noundef nonnull %81, i32 noundef %1562) #21
  %1582 = getelementptr %struct.tracepoint_func, ptr %1578, i32 1
  %1583 = load ptr, ptr %1582, align 4
  %1584 = icmp eq ptr %1583, null
  br i1 %1584, label %1585, label %1577

1585:                                             ; preds = %1577, %1574
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !95
  br label %1586

1586:                                             ; preds = %1585, %1565, %1561
  %1587 = load ptr, ptr %32, align 4
  %1588 = icmp eq ptr %1587, null
  br i1 %1588, label %1602, label %1589

1589:                                             ; preds = %1586
  %1590 = getelementptr inbounds %struct.io_kiocb, ptr %1587, i32 0, i32 4
  %1591 = load i32, ptr %1590, align 4
  %1592 = and i32 %1591, 256
  %1593 = icmp eq i32 %1592, 0
  br i1 %1593, label %1594, label %1606

1594:                                             ; preds = %1589
  %1595 = or i32 %1591, 256
  %1596 = and i32 %1591, 64
  %1597 = icmp eq i32 %1596, 0
  %1598 = and i32 %1595, -4194369
  %1599 = or i32 %1598, 4194304
  %1600 = select i1 %1597, i32 %1595, i32 %1599
  store i32 %1600, ptr %1590, align 4
  %1601 = getelementptr inbounds %struct.io_kiocb, ptr %1587, i32 0, i32 6
  store i32 -125, ptr %1601, align 8
  br label %1606

1602:                                             ; preds = %1586
  %1603 = load i32, ptr %92, align 4
  %1604 = and i32 %1603, 12
  %1605 = icmp eq i32 %1604, 0
  br i1 %1605, label %1714, label %1606

1606:                                             ; preds = %1602, %1594, %1589
  %1607 = load i32, ptr %92, align 4
  %1608 = or i32 %1607, 256
  %1609 = and i32 %1607, 64
  %1610 = icmp eq i32 %1609, 0
  %1611 = and i32 %1608, -4194369
  %1612 = or i32 %1611, 4194304
  %1613 = select i1 %1610, i32 %1608, i32 %1612
  store i32 %1613, ptr %92, align 4
  %1614 = getelementptr i8, ptr %58, i32 -24
  store i32 %1562, ptr %1614, align 8
  br label %1615

1615:                                             ; preds = %1606, %1558, %1550, %1490, %1431, %1380, %1327, %1269, %1235, %1196, %1164, %1115, %1075, %1054, %1028, %945, %912, %869, %842, %807, %765, %708, %682, %672, %625, %592, %588, %516, %486, %467, %457, %442, %424, %393, %359, %350, %295, %224
  %1616 = load i8, ptr %88, align 8
  %1617 = load i64, ptr %95, align 8
  %1618 = load i32, ptr %92, align 4
  %1619 = load i32, ptr %44, align 4
  %1620 = and i32 %1619, 2
  %1621 = icmp ne i32 %1620, 0
  %1622 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_submit_sqe, i32 0, i32 1), align 4
  %1623 = icmp sgt i32 %1622, 0
  br i1 %1623, label %1624, label %1646

1624:                                             ; preds = %1615
  %1625 = load i32, ptr %43, align 8
  %1626 = lshr i32 %1625, 5
  %1627 = getelementptr i32, ptr @__cpu_online_mask, i32 %1626
  %1628 = load volatile i32, ptr %1627, align 4
  %1629 = and i32 %1625, 31
  %1630 = shl nuw i32 1, %1629
  %1631 = and i32 %1630, %1628
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1646, label %1633

1633:                                             ; preds = %1624
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !96
  %1634 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_submit_sqe, i32 0, i32 7), align 4
  %1635 = icmp eq ptr %1634, null
  br i1 %1635, label %1644, label %1636

1636:                                             ; preds = %1636, %1633
  %1637 = phi ptr [ %1641, %1636 ], [ %1634, %1633 ]
  %1638 = load volatile ptr, ptr %1637, align 4
  %1639 = getelementptr inbounds %struct.tracepoint_func, ptr %1637, i32 0, i32 1
  %1640 = load ptr, ptr %1639, align 4
  call void %1638(ptr noundef %1640, ptr noundef %0, ptr noundef %60, i8 noundef zeroext %1616, i64 noundef %1617, i32 noundef %1618, i1 noundef zeroext true, i1 noundef zeroext %1621) #21
  %1641 = getelementptr %struct.tracepoint_func, ptr %1637, i32 1
  %1642 = load ptr, ptr %1641, align 4
  %1643 = icmp eq ptr %1642, null
  br i1 %1643, label %1644, label %1636

1644:                                             ; preds = %1636, %1633
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !97
  %1645 = load i32, ptr %92, align 4
  br label %1646

1646:                                             ; preds = %1644, %1624, %1615
  %1647 = phi i32 [ %1645, %1644 ], [ %1618, %1624 ], [ %1618, %1615 ]
  %1648 = load ptr, ptr %32, align 4
  %1649 = icmp eq ptr %1648, null
  br i1 %1649, label %1708, label %1650

1650:                                             ; preds = %1646
  %1651 = and i32 %1647, 256
  %1652 = icmp eq i32 %1651, 0
  br i1 %1652, label %1653, label %1677

1653:                                             ; preds = %1650
  %1654 = call fastcc i32 @io_req_prep_async(ptr noundef %60) #21
  %1655 = icmp eq i32 %1654, 0
  br i1 %1655, label %1677, label %1656, !prof !10

1656:                                             ; preds = %1653
  %1657 = load i32, ptr %92, align 4
  %1658 = or i32 %1657, 256
  %1659 = and i32 %1657, 64
  %1660 = icmp eq i32 %1659, 0
  %1661 = and i32 %1658, -4194369
  %1662 = or i32 %1661, 4194304
  %1663 = select i1 %1660, i32 %1658, i32 %1662
  store i32 %1663, ptr %92, align 4
  %1664 = getelementptr i8, ptr %58, i32 -24
  store i32 %1654, ptr %1664, align 8
  %1665 = getelementptr inbounds %struct.io_kiocb, ptr %1648, i32 0, i32 4
  %1666 = load i32, ptr %1665, align 4
  %1667 = and i32 %1666, 256
  %1668 = icmp eq i32 %1667, 0
  br i1 %1668, label %1669, label %1677

1669:                                             ; preds = %1656
  %1670 = or i32 %1666, 256
  %1671 = and i32 %1666, 64
  %1672 = icmp eq i32 %1671, 0
  %1673 = and i32 %1670, -4194369
  %1674 = or i32 %1673, 4194304
  %1675 = select i1 %1672, i32 %1670, i32 %1674
  store i32 %1675, ptr %1665, align 4
  %1676 = getelementptr inbounds %struct.io_kiocb, ptr %1648, i32 0, i32 6
  store i32 -125, ptr %1676, align 8
  br label %1677

1677:                                             ; preds = %1669, %1656, %1653, %1650
  %1678 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_link, i32 0, i32 1), align 4
  %1679 = icmp sgt i32 %1678, 0
  br i1 %1679, label %1680, label %1701

1680:                                             ; preds = %1677
  %1681 = load i32, ptr %43, align 8
  %1682 = lshr i32 %1681, 5
  %1683 = getelementptr i32, ptr @__cpu_online_mask, i32 %1682
  %1684 = load volatile i32, ptr %1683, align 4
  %1685 = and i32 %1681, 31
  %1686 = shl nuw i32 1, %1685
  %1687 = and i32 %1686, %1684
  %1688 = icmp eq i32 %1687, 0
  br i1 %1688, label %1701, label %1689

1689:                                             ; preds = %1680
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !98
  %1690 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_link, i32 0, i32 7), align 4
  %1691 = icmp eq ptr %1690, null
  br i1 %1691, label %1700, label %1692

1692:                                             ; preds = %1692, %1689
  %1693 = phi ptr [ %1697, %1692 ], [ %1690, %1689 ]
  %1694 = load volatile ptr, ptr %1693, align 4
  %1695 = getelementptr inbounds %struct.tracepoint_func, ptr %1693, i32 0, i32 1
  %1696 = load ptr, ptr %1695, align 4
  call void %1694(ptr noundef %1696, ptr noundef %0, ptr noundef %60, ptr noundef nonnull %1648) #21
  %1697 = getelementptr %struct.tracepoint_func, ptr %1693, i32 1
  %1698 = load ptr, ptr %1697, align 4
  %1699 = icmp eq ptr %1698, null
  br i1 %1699, label %1700, label %1692

1700:                                             ; preds = %1692, %1689
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !99
  br label %1701

1701:                                             ; preds = %1700, %1680, %1677
  %1702 = load ptr, ptr %45, align 4
  %1703 = getelementptr inbounds %struct.io_kiocb, ptr %1702, i32 0, i32 14
  store ptr %60, ptr %1703, align 8
  store ptr %60, ptr %45, align 4
  %1704 = load i32, ptr %92, align 4
  %1705 = and i32 %1704, 12
  %1706 = icmp eq i32 %1705, 0
  br i1 %1706, label %1707, label %1718

1707:                                             ; preds = %1701
  store ptr null, ptr %32, align 4
  br label %1712

1708:                                             ; preds = %1646
  %1709 = and i32 %1647, 12
  %1710 = icmp eq i32 %1709, 0
  br i1 %1710, label %1712, label %1711

1711:                                             ; preds = %1708
  store ptr %60, ptr %32, align 4
  store ptr %60, ptr %45, align 4
  br label %1718

1712:                                             ; preds = %1708, %1707
  %1713 = phi ptr [ %60, %1708 ], [ %1648, %1707 ]
  call fastcc void @io_queue_sqe(ptr noundef %1713) #21
  br label %1718

1714:                                             ; preds = %1602
  call fastcc void @io_req_complete_failed(ptr noundef %60, i32 noundef %1562) #21
  %1715 = icmp eq i32 %1562, 0
  %1716 = icmp ult i32 %86, %16
  %1717 = select i1 %1715, i1 %1716, i1 false
  br i1 %1717, label %1720, label %1721

1718:                                             ; preds = %1712, %1711, %1701
  %1719 = icmp ult i32 %86, %16
  br i1 %1719, label %1720, label %1721

1720:                                             ; preds = %1718, %1714
  br label %46

1721:                                             ; preds = %1718, %1714, %83, %54
  %1722 = phi i32 [ %47, %83 ], [ %56, %54 ], [ %86, %1718 ], [ %86, %1714 ]
  %1723 = icmp eq i32 %1722, %16
  br i1 %1723, label %1731, label %1724, !prof !10

1724:                                             ; preds = %1721
  %1725 = icmp eq i32 %1722, -11
  %1726 = select i1 %1725, i32 0, i32 %1722
  %1727 = sub i32 %16, %1726
  %1728 = load ptr, ptr %18, align 8
  %1729 = load i32, ptr %1728, align 8
  %1730 = add i32 %1727, %1729
  store i32 %1730, ptr %1728, align 8
  br label %1731

1731:                                             ; preds = %1724, %1721
  %1732 = load ptr, ptr %32, align 4
  %1733 = icmp eq ptr %1732, null
  br i1 %1733, label %1735, label %1734

1734:                                             ; preds = %1731
  call fastcc void @io_queue_sqe(ptr noundef nonnull %1732) #21
  br label %1735

1735:                                             ; preds = %1734, %1731
  call fastcc void @io_submit_flush_completions(ptr noundef %0) #21
  %1736 = load i8, ptr %26, align 4, !range !45
  %1737 = icmp eq i8 %1736, 0
  br i1 %1737, label %1739, label %1738

1738:                                             ; preds = %1735
  call void @blk_finish_plug(ptr noundef %39) #21
  br label %1739

1739:                                             ; preds = %1738, %1735
  %1740 = load ptr, ptr %4, align 8
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !100
  %1741 = load i32, ptr %8, align 4
  store volatile i32 %1741, ptr %1740, align 64
  br label %1742

1742:                                             ; preds = %1739, %2
  %1743 = phi i32 [ %1722, %1739 ], [ 0, %2 ]
  ret i32 %1743
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #0 {
  br i1 %1, label %14, label %3

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %5 = load i32, ptr %4, align 64
  %6 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.io_rings, ptr %7, i32 0, i32 1
  %9 = load volatile i32, ptr %8, align 64
  %10 = sub i32 %5, %9
  %11 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %89, label %14

14:                                               ; preds = %3, %2
  %15 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %15) #21
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15
  %17 = load volatile ptr, ptr %16, align 4
  %18 = icmp eq ptr %17, %16
  br i1 %18, label %60, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %22 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 4
  br label %24

24:                                               ; preds = %53, %19
  %25 = phi ptr [ %17, %19 ], [ %58, %53 ]
  %26 = phi i1 [ false, %19 ], [ true, %53 ]
  %27 = load ptr, ptr %20, align 8
  %28 = load i32, ptr %21, align 4
  %29 = load i32, ptr %22, align 64
  %30 = getelementptr inbounds %struct.io_rings, ptr %27, i32 0, i32 1
  %31 = load volatile i32, ptr %30, align 64
  %32 = sub i32 %29, %31
  %33 = icmp eq i32 %32, %28
  br i1 %33, label %39, label %34

34:                                               ; preds = %24
  %35 = add i32 %28, -1
  %36 = add i32 %29, 1
  store i32 %36, ptr %22, align 64
  %37 = and i32 %29, %35
  %38 = getelementptr %struct.io_rings, ptr %27, i32 0, i32 11, i32 %37
  br label %39

39:                                               ; preds = %34, %24
  %40 = phi ptr [ %38, %34 ], [ null, %24 ]
  %41 = icmp eq ptr %40, null
  %42 = xor i1 %41, true
  %43 = or i1 %42, %1
  br i1 %43, label %44, label %60

44:                                               ; preds = %39
  %45 = getelementptr i8, ptr %25, i32 -16
  br i1 %41, label %47, label %46

46:                                               ; preds = %44
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef nonnull align 8 dereferenceable(16) %40, ptr noundef align 8 dereferenceable(16) %45, i32 16, i1 false)
  br label %53

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.io_rings, ptr %27, i32 0, i32 9
  %49 = load volatile i32, ptr %48, align 4
  %50 = add i32 %49, 1
  store volatile i32 %50, ptr %48, align 4
  %51 = load i32, ptr %23, align 8
  %52 = add i32 %51, -1
  store i32 %52, ptr %23, align 8
  br label %53

53:                                               ; preds = %47, %46
  %54 = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %55 = load ptr, ptr %54, align 4
  %56 = load ptr, ptr %25, align 4
  %57 = getelementptr inbounds %struct.list_head, ptr %56, i32 0, i32 1
  store ptr %55, ptr %57, align 4
  store volatile ptr %56, ptr %55, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %25, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %54, align 4
  tail call void @kfree(ptr noundef %45) #21
  %58 = load volatile ptr, ptr %16, align 4
  %59 = icmp eq ptr %58, %16
  br i1 %59, label %60, label %24

60:                                               ; preds = %53, %39, %14
  %61 = phi i1 [ false, %14 ], [ %26, %39 ], [ true, %53 ]
  %62 = load volatile ptr, ptr %16, align 4
  %63 = icmp eq ptr %62, %16
  br i1 %63, label %64, label %71

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 8
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %65) #21
  %66 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %struct.io_rings, ptr %67, i32 0, i32 7
  %69 = load i32, ptr %68, align 4
  %70 = and i32 %69, -3
  store volatile i32 %70, ptr %68, align 4
  br label %71

71:                                               ; preds = %64, %60
  br i1 %61, label %72, label %86

72:                                               ; preds = %71
  %73 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %74 = load i8, ptr %73, align 16
  %75 = and i8 %74, 48
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %78, label %77, !prof !10

77:                                               ; preds = %72
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %0) #24
  br label %78

78:                                               ; preds = %77, %72
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %79 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %80 = load i32, ptr %79, align 64
  %81 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %82 = load ptr, ptr %81, align 8
  %83 = getelementptr inbounds %struct.io_rings, ptr %82, i32 0, i32 1, i32 2
  store volatile i32 %80, ptr %83, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %84 = load i16, ptr %15, align 4
  %85 = add i16 %84, 1
  store i16 %85, ptr %15, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %0)
  br label %89

86:                                               ; preds = %71
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %87 = load i16, ptr %15, align 4
  %88 = add i16 %87, 1
  store i16 %88, ptr %15, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %89

89:                                               ; preds = %86, %78, %3
  %90 = phi i1 [ false, %3 ], [ %63, %86 ], [ %63, %78 ]
  ret i1 %90
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @__io_uring_add_tctx_node(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca [2 x i32], align 8
  %3 = tail call ptr @llvm.thread.pointer() #21
  %4 = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 91
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %25, !prof !11

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @io_uring_alloc_task_context(ptr noundef %3, ptr noundef %0) #22
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %56, !prof !10

10:                                               ; preds = %7
  %11 = load ptr, ptr %4, align 8
  %12 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 10
  %13 = load i8, ptr %12, align 4, !range !45
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %15

15:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #21
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 9
  %17 = load i32, ptr %16, align 4
  store i32 %17, ptr %2, align 8
  %18 = getelementptr inbounds i32, ptr %2, i32 1
  %19 = getelementptr %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 9, i32 1
  %20 = load i32, ptr %19, align 4
  store i32 %20, ptr %18, align 4
  %21 = getelementptr inbounds %struct.io_uring_task, ptr %11, i32 0, i32 4
  %22 = load ptr, ptr %21, align 8
  %23 = call i32 @io_wq_max_workers(ptr noundef %22, ptr noundef nonnull %2) #21
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #21
  br i1 %24, label %25, label %56

25:                                               ; preds = %15, %10, %1
  %26 = phi ptr [ %11, %15 ], [ %11, %10 ], [ %5, %1 ]
  %27 = getelementptr inbounds %struct.io_uring_task, ptr %26, i32 0, i32 1
  %28 = ptrtoint ptr %0 to i32
  %29 = call ptr @xa_load(ptr noundef %27, i32 noundef %28) #21
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %54

31:                                               ; preds = %25
  %32 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %33 = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %32, i32 noundef 3264, i32 noundef 16) #25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.io_tctx_node, ptr %33, i32 0, i32 2
  store ptr %0, ptr %36, align 4
  %37 = getelementptr inbounds %struct.io_tctx_node, ptr %33, i32 0, i32 1
  store ptr %3, ptr %37, align 8
  %38 = call ptr @xa_store(ptr noundef %27, i32 noundef %28, ptr noundef nonnull %33, i32 noundef 3264) #21
  %39 = ptrtoint ptr %38 to i32
  %40 = and i32 %39, 3
  %41 = icmp eq i32 %40, 2
  %42 = icmp uge ptr %38, inttoptr (i32 -16378 to ptr)
  %43 = and i1 %42, %41
  %44 = ashr i32 %39, 2
  %45 = select i1 %43, i32 %44, i32 0
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %35
  call void @kfree(ptr noundef nonnull %33) #21
  br label %56

48:                                               ; preds = %35
  %49 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  call void @mutex_lock(ptr noundef %49) #21
  %50 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 7
  %51 = load ptr, ptr %50, align 4
  %52 = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  store ptr %33, ptr %52, align 4
  store ptr %51, ptr %33, align 8
  %53 = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  store ptr %50, ptr %53, align 4
  store volatile ptr %33, ptr %50, align 4
  call void @mutex_unlock(ptr noundef %49) #21
  br label %54

54:                                               ; preds = %48, %25
  %55 = getelementptr inbounds %struct.io_uring_task, ptr %26, i32 0, i32 3
  store ptr %0, ptr %55, align 4
  br label %56

56:                                               ; preds = %54, %47, %31, %15, %7
  %57 = phi i32 [ 0, %54 ], [ %45, %47 ], [ %23, %15 ], [ %8, %7 ], [ -12, %31 ]
  ret i32 %57
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_uring_alloc_task_context(ptr noundef %0, ptr noundef %1) unnamed_addr #4 {
  %3 = alloca %struct.io_wq_data, align 4
  %4 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %5 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 112) #25
  %6 = icmp eq ptr %5, null
  br i1 %6, label %53, label %7, !prof !11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 5
  %9 = tail call i32 @__percpu_counter_init(ptr noundef %8, i64 noundef 0, i32 noundef 3264, ptr noundef nonnull @io_uring_alloc_task_context.__key) #21
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !10

11:                                               ; preds = %7
  tail call void @kfree(ptr noundef nonnull %5) #21
  br label %53

12:                                               ; preds = %7
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %1, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %13) #21
  %14 = getelementptr inbounds %struct.io_ring_ctx, ptr %1, i32 0, i32 14, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %25

17:                                               ; preds = %12
  %18 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %19 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %18, i32 noundef 3520, i32 noundef 20) #25
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  tail call void @mutex_unlock(ptr noundef %13) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  %22 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 4
  store ptr inttoptr (i32 -12 to ptr), ptr %22, align 8
  br label %38

23:                                               ; preds = %17
  store volatile i32 1, ptr %19, align 8
  %24 = getelementptr inbounds %struct.io_wq_hash, ptr %19, i32 0, i32 2
  tail call void @__init_waitqueue_head(ptr noundef %24, ptr noundef nonnull @.str.77, ptr noundef nonnull @io_init_wq_offload.__key) #21
  store ptr %19, ptr %14, align 4
  br label %25

25:                                               ; preds = %23, %12
  %26 = phi ptr [ %15, %12 ], [ %19, %23 ]
  tail call void @mutex_unlock(ptr noundef %13) #21
  store ptr %26, ptr %3, align 4
  %27 = getelementptr inbounds %struct.io_wq_data, ptr %3, i32 0, i32 1
  store ptr %0, ptr %27, align 4
  %28 = getelementptr inbounds %struct.io_wq_data, ptr %3, i32 0, i32 3
  store ptr @io_wq_free_work, ptr %28, align 4
  %29 = getelementptr inbounds %struct.io_wq_data, ptr %3, i32 0, i32 2
  store ptr @io_wq_submit_work, ptr %29, align 4
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %1, i32 0, i32 1, i32 4
  %31 = load i32, ptr %30, align 32
  %32 = load volatile i32, ptr @__num_online_cpus, align 4
  %33 = shl i32 %32, 2
  %34 = tail call i32 @llvm.umin.i32(i32 %31, i32 %33) #21
  %35 = call ptr @io_wq_create(i32 noundef %34, ptr noundef nonnull %3) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  %36 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 4
  store ptr %35, ptr %36, align 8
  %37 = icmp ugt ptr %35, inttoptr (i32 -4096 to ptr)
  br i1 %37, label %38, label %41

38:                                               ; preds = %25, %21
  %39 = phi ptr [ inttoptr (i32 -12 to ptr), %21 ], [ %35, %25 ]
  %40 = ptrtoint ptr %39 to i32
  call void @percpu_counter_destroy(ptr noundef %8) #21
  call void @kfree(ptr noundef nonnull %5) #21
  br label %53

41:                                               ; preds = %25
  %42 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 1
  store i32 0, ptr %42, align 4
  %43 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 1, i32 1
  store i32 0, ptr %43, align 8
  %44 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 1, i32 2
  store ptr null, ptr %44, align 4
  %45 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 2
  call void @__init_waitqueue_head(ptr noundef %45, ptr noundef nonnull @.str.76, ptr noundef nonnull @io_uring_alloc_task_context.__key.75) #21
  %46 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 7
  store volatile i32 0, ptr %46, align 4
  %47 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 6
  store volatile i32 0, ptr %47, align 8
  %48 = getelementptr inbounds %struct.task_struct, ptr %0, i32 0, i32 91
  store ptr %5, ptr %48, align 8
  %49 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 8
  store i32 0, ptr %49, align 8
  %50 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 9
  store ptr null, ptr %50, align 4
  %51 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 10
  store ptr null, ptr %51, align 4
  %52 = getelementptr inbounds %struct.io_uring_task, ptr %5, i32 0, i32 11, i32 1
  store ptr @tctx_task_work, ptr %52, align 8
  br label %53

53:                                               ; preds = %41, %38, %11, %2
  %54 = phi i32 [ %9, %11 ], [ %40, %38 ], [ 0, %41 ], [ -12, %2 ]
  ret i32 %54
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @io_wq_max_workers(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xa_store(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__percpu_counter_init(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @tctx_task_work(ptr noundef %0) #0 {
  %2 = alloca i8, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #21
  store i8 0, ptr %2, align 1
  %3 = getelementptr i8, ptr %0, i32 -16
  %4 = getelementptr i8, ptr %0, i32 -8
  %5 = getelementptr i8, ptr %0, i32 -20
  br label %6

6:                                                ; preds = %225, %1
  %7 = phi ptr [ null, %1 ], [ %226, %225 ]
  %8 = load ptr, ptr %3, align 4
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = load ptr, ptr %4, align 4
  %12 = icmp ne ptr %11, null
  %13 = load i8, ptr %2, align 1
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %12, i1 true, i1 %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  call fastcc void @io_submit_flush_completions(ptr noundef %7)
  br label %17

17:                                               ; preds = %16, %10, %6
  call void @_raw_spin_lock_irq(ptr noundef %5) #21
  %18 = load ptr, ptr %4, align 4
  %19 = load ptr, ptr %3, align 4
  store ptr null, ptr %3, align 4
  store ptr null, ptr %4, align 4
  %20 = icmp ne ptr %19, null
  %21 = icmp ne ptr %18, null
  %22 = select i1 %20, i1 true, i1 %21
  br i1 %22, label %23, label %228

23:                                               ; preds = %17
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %24 = load i16, ptr %5, align 4
  %25 = add i16 %24, 1
  store i16 %25, ptr %5, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br i1 %21, label %26, label %155

26:                                               ; preds = %23
  %27 = icmp ne ptr %7, null
  %28 = load i8, ptr %2, align 1
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %27, i1 %29, i1 false
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %7, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %32) #21
  br label %33

33:                                               ; preds = %31, %26
  br label %34

34:                                               ; preds = %148, %33
  %35 = phi ptr [ %149, %148 ], [ %7, %33 ]
  %36 = phi ptr [ %37, %148 ], [ %18, %33 ]
  %37 = load ptr, ptr %36, align 4
  %38 = getelementptr i8, ptr %36, i32 -108
  %39 = getelementptr i8, ptr %36, i32 -28
  %40 = load ptr, ptr %39, align 8
  %41 = icmp eq ptr %40, %35
  br i1 %41, label %122, label %42

42:                                               ; preds = %34
  %43 = load i8, ptr %2, align 1, !range !45
  %44 = icmp eq i8 %43, 0
  %45 = icmp ne ptr %35, null
  %46 = select i1 %44, i1 %45, i1 false
  br i1 %46, label %47, label %63, !prof !11

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.anon.178, ptr %35, i32 0, i32 3
  %49 = load i8, ptr %48, align 16
  %50 = and i8 %49, 48
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52, !prof !10

52:                                               ; preds = %47
  call fastcc void @__io_commit_cqring_flush(ptr noundef nonnull %35) #24
  br label %53

53:                                               ; preds = %52, %47
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %54 = getelementptr inbounds %struct.io_ring_ctx, ptr %35, i32 0, i32 10
  %55 = load i32, ptr %54, align 64
  %56 = getelementptr inbounds %struct.anon.178, ptr %35, i32 0, i32 1
  %57 = load ptr, ptr %56, align 8
  %58 = getelementptr inbounds %struct.io_rings, ptr %57, i32 0, i32 1, i32 2
  store volatile i32 %55, ptr %58, align 64
  %59 = getelementptr inbounds %struct.io_ring_ctx, ptr %35, i32 0, i32 11
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %60 = load i16, ptr %59, align 4
  %61 = add i16 %60, 1
  store i16 %61, ptr %59, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_cqring_ev_posted(ptr noundef nonnull %35) #21
  %62 = load i8, ptr %2, align 1, !range !45
  br label %65

63:                                               ; preds = %42
  %64 = icmp eq ptr %35, null
  br i1 %64, label %95, label %65

65:                                               ; preds = %63, %53
  %66 = phi i8 [ %62, %53 ], [ %43, %63 ]
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  call fastcc void @io_submit_flush_completions(ptr noundef nonnull %35) #21
  %69 = getelementptr inbounds %struct.io_ring_ctx, ptr %35, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %69) #21
  store i8 0, ptr %2, align 1
  br label %70

70:                                               ; preds = %68, %65
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %71 = load volatile i32, ptr %35, align 4
  %72 = and i32 %71, 3
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %83, !prof !10

74:                                               ; preds = %70
  %75 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %76 = call i32 @llvm.read_register.i32(metadata !0) #21
  %77 = inttoptr i32 %76 to ptr
  %78 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %77) #6, !srcloc !12
  %79 = add i32 %78, %71
  %80 = inttoptr i32 %79 to ptr
  %81 = load i32, ptr %80, align 4
  %82 = add i32 %81, -1
  store i32 %82, ptr %80, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %75) #21, !srcloc !22
  br label %93

83:                                               ; preds = %70
  %84 = getelementptr inbounds %struct.percpu_ref, ptr %35, i32 0, i32 1
  %85 = load ptr, ptr %84, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %85) #21, !srcloc !13
  %86 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %85, ptr %85, i32 1, ptr elementtype(i32) %85) #21, !srcloc !35
  %87 = extractvalue { i32, i32 } %86, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %93, !prof !11

89:                                               ; preds = %83
  %90 = load ptr, ptr %84, align 4
  %91 = getelementptr inbounds %struct.percpu_ref_data, ptr %90, i32 0, i32 1
  %92 = load ptr, ptr %91, align 4
  call void %92(ptr noundef nonnull %35) #21
  br label %93

93:                                               ; preds = %89, %83, %74
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  %94 = load ptr, ptr %39, align 8
  br label %95

95:                                               ; preds = %93, %63
  %96 = phi ptr [ %94, %93 ], [ %40, %63 ]
  %97 = getelementptr inbounds %struct.io_ring_ctx, ptr %96, i32 0, i32 1
  %98 = call i32 @mutex_trylock(ptr noundef %97) #21
  %99 = icmp ne i32 %98, 0
  %100 = zext i1 %99 to i8
  store i8 %100, ptr %2, align 1
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %101 = load volatile i32, ptr %96, align 4
  %102 = and i32 %101, 3
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %113, !prof !10

104:                                              ; preds = %95
  %105 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %106 = call i32 @llvm.read_register.i32(metadata !0) #21
  %107 = inttoptr i32 %106 to ptr
  %108 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %107) #6, !srcloc !12
  %109 = add i32 %108, %101
  %110 = inttoptr i32 %109 to ptr
  %111 = load i32, ptr %110, align 4
  %112 = add i32 %111, 1
  store i32 %112, ptr %110, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %105) #21, !srcloc !22
  br label %117

113:                                              ; preds = %95
  %114 = getelementptr inbounds %struct.percpu_ref, ptr %96, i32 0, i32 1
  %115 = load ptr, ptr %114, align 4
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %115) #21, !srcloc !13
  %116 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %115, ptr %115, i32 1, ptr elementtype(i32) %115) #21, !srcloc !14
  br label %117

117:                                              ; preds = %113, %104
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  %118 = load i8, ptr %2, align 1, !range !45
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %126, !prof !11

120:                                              ; preds = %117
  %121 = getelementptr inbounds %struct.io_ring_ctx, ptr %96, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %121) #21
  br label %122

122:                                              ; preds = %120, %34
  %123 = phi ptr [ %35, %34 ], [ %96, %120 ]
  %124 = load i8, ptr %2, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %130, label %126, !prof !11

126:                                              ; preds = %122, %117
  %127 = phi ptr [ %123, %122 ], [ %96, %117 ]
  %128 = getelementptr inbounds %struct.io_task_work, ptr %36, i32 0, i32 1
  %129 = load ptr, ptr %128, align 4
  call void %129(ptr noundef %38, ptr noundef nonnull %2) #21
  br label %148

130:                                              ; preds = %122
  %131 = getelementptr i8, ptr %36, i32 -36
  %132 = load i32, ptr %131, align 8
  %133 = getelementptr i8, ptr %36, i32 -48
  %134 = load i32, ptr %133, align 4
  %135 = and i32 %134, 32768
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %146, label %137, !prof !10

137:                                              ; preds = %130
  %138 = getelementptr i8, ptr %36, i32 36
  %139 = load ptr, ptr %138, align 8
  %140 = getelementptr inbounds %struct.io_buffer, ptr %139, i32 0, i32 3
  %141 = load i16, ptr %140, align 4
  %142 = zext i16 %141 to i32
  %143 = shl nuw i32 %142, 16
  %144 = or i32 %143, 1
  %145 = and i32 %134, -32769
  store i32 %145, ptr %133, align 4
  call void @kfree(ptr noundef %139) #21
  store ptr null, ptr %138, align 8
  br label %146

146:                                              ; preds = %137, %130
  %147 = phi i32 [ %144, %137 ], [ 0, %130 ]
  call fastcc void @__io_req_complete_post(ptr noundef %38, i32 noundef %132, i32 noundef %147) #21
  br label %148

148:                                              ; preds = %146, %126
  %149 = phi ptr [ %123, %146 ], [ %127, %126 ]
  %150 = icmp eq ptr %37, null
  br i1 %150, label %151, label %34

151:                                              ; preds = %148
  %152 = load i8, ptr %2, align 1, !range !45
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %155, !prof !11

154:                                              ; preds = %151
  call fastcc void @ctx_commit_and_unlock(ptr noundef %149) #21
  br label %155

155:                                              ; preds = %154, %151, %23
  %156 = phi ptr [ %7, %23 ], [ %149, %151 ], [ %149, %154 ]
  br i1 %20, label %157, label %225

157:                                              ; preds = %220, %155
  %158 = phi ptr [ %221, %220 ], [ %156, %155 ]
  %159 = phi ptr [ %160, %220 ], [ %19, %155 ]
  %160 = load ptr, ptr %159, align 4
  %161 = getelementptr i8, ptr %159, i32 -108
  %162 = getelementptr i8, ptr %159, i32 -28
  %163 = load ptr, ptr %162, align 8
  %164 = icmp eq ptr %163, %158
  br i1 %164, label %220, label %165

165:                                              ; preds = %157
  %166 = icmp eq ptr %158, null
  br i1 %166, label %197, label %167

167:                                              ; preds = %165
  %168 = load i8, ptr %2, align 1, !range !45
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %172, label %170

170:                                              ; preds = %167
  call fastcc void @io_submit_flush_completions(ptr noundef nonnull %158) #21
  %171 = getelementptr inbounds %struct.io_ring_ctx, ptr %158, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %171) #21
  store i8 0, ptr %2, align 1
  br label %172

172:                                              ; preds = %170, %167
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %173 = load volatile i32, ptr %158, align 4
  %174 = and i32 %173, 3
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %185, !prof !10

176:                                              ; preds = %172
  %177 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %178 = call i32 @llvm.read_register.i32(metadata !0) #21
  %179 = inttoptr i32 %178 to ptr
  %180 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %179) #6, !srcloc !12
  %181 = add i32 %180, %173
  %182 = inttoptr i32 %181 to ptr
  %183 = load i32, ptr %182, align 4
  %184 = add i32 %183, -1
  store i32 %184, ptr %182, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %177) #21, !srcloc !22
  br label %195

185:                                              ; preds = %172
  %186 = getelementptr inbounds %struct.percpu_ref, ptr %158, i32 0, i32 1
  %187 = load ptr, ptr %186, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %187) #21, !srcloc !13
  %188 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %187, ptr %187, i32 1, ptr elementtype(i32) %187) #21, !srcloc !35
  %189 = extractvalue { i32, i32 } %188, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %195, !prof !11

191:                                              ; preds = %185
  %192 = load ptr, ptr %186, align 4
  %193 = getelementptr inbounds %struct.percpu_ref_data, ptr %192, i32 0, i32 1
  %194 = load ptr, ptr %193, align 4
  call void %194(ptr noundef nonnull %158) #21
  br label %195

195:                                              ; preds = %191, %185, %176
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  %196 = load ptr, ptr %162, align 8
  br label %197

197:                                              ; preds = %195, %165
  %198 = phi ptr [ %163, %165 ], [ %196, %195 ]
  %199 = getelementptr inbounds %struct.io_ring_ctx, ptr %198, i32 0, i32 1
  %200 = call i32 @mutex_trylock(ptr noundef %199) #21
  %201 = icmp ne i32 %200, 0
  %202 = zext i1 %201 to i8
  store i8 %202, ptr %2, align 1
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %203 = load volatile i32, ptr %198, align 4
  %204 = and i32 %203, 3
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %215, !prof !10

206:                                              ; preds = %197
  %207 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %208 = call i32 @llvm.read_register.i32(metadata !0) #21
  %209 = inttoptr i32 %208 to ptr
  %210 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %209) #6, !srcloc !12
  %211 = add i32 %210, %203
  %212 = inttoptr i32 %211 to ptr
  %213 = load i32, ptr %212, align 4
  %214 = add i32 %213, 1
  store i32 %214, ptr %212, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %207) #21, !srcloc !22
  br label %219

215:                                              ; preds = %197
  %216 = getelementptr inbounds %struct.percpu_ref, ptr %198, i32 0, i32 1
  %217 = load ptr, ptr %216, align 4
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %217) #21, !srcloc !13
  %218 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %217, ptr %217, i32 1, ptr elementtype(i32) %217) #21, !srcloc !14
  br label %219

219:                                              ; preds = %215, %206
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %220

220:                                              ; preds = %219, %157
  %221 = phi ptr [ %158, %157 ], [ %198, %219 ]
  %222 = getelementptr inbounds %struct.io_task_work, ptr %159, i32 0, i32 1
  %223 = load ptr, ptr %222, align 4
  call void %223(ptr noundef %161, ptr noundef nonnull %2) #21
  %224 = icmp eq ptr %160, null
  br i1 %224, label %225, label %157

225:                                              ; preds = %220, %155
  %226 = phi ptr [ %156, %155 ], [ %221, %220 ]
  %227 = call i32 @__cond_resched() #21
  br label %6

228:                                              ; preds = %17
  %229 = getelementptr i8, ptr %0, i32 8
  store i8 0, ptr %229, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %230 = load i16, ptr %5, align 4
  %231 = add i16 %230, 1
  store i16 %231, ptr %5, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  %232 = icmp eq ptr %7, null
  br i1 %232, label %262, label %233

233:                                              ; preds = %228
  %234 = load i8, ptr %2, align 1, !range !45
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %233
  call fastcc void @io_submit_flush_completions(ptr noundef nonnull %7) #21
  %237 = getelementptr inbounds %struct.io_ring_ctx, ptr %7, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %237) #21
  store i8 0, ptr %2, align 1
  br label %238

238:                                              ; preds = %236, %233
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %239 = load volatile i32, ptr %7, align 4
  %240 = and i32 %239, 3
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %251, !prof !10

242:                                              ; preds = %238
  %243 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %244 = call i32 @llvm.read_register.i32(metadata !0) #21
  %245 = inttoptr i32 %244 to ptr
  %246 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %245) #6, !srcloc !12
  %247 = add i32 %246, %239
  %248 = inttoptr i32 %247 to ptr
  %249 = load i32, ptr %248, align 4
  %250 = add i32 %249, -1
  store i32 %250, ptr %248, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %243) #21, !srcloc !22
  br label %261

251:                                              ; preds = %238
  %252 = getelementptr inbounds %struct.percpu_ref, ptr %7, i32 0, i32 1
  %253 = load ptr, ptr %252, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %253) #21, !srcloc !13
  %254 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %253, ptr %253, i32 1, ptr elementtype(i32) %253) #21, !srcloc !35
  %255 = extractvalue { i32, i32 } %254, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %261, !prof !11

257:                                              ; preds = %251
  %258 = load ptr, ptr %252, align 4
  %259 = getelementptr inbounds %struct.percpu_ref_data, ptr %258, i32 0, i32 1
  %260 = load ptr, ptr %259, align 4
  call void %260(ptr noundef nonnull %7) #21
  br label %261

261:                                              ; preds = %257, %251, %242
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %262

262:                                              ; preds = %261, %228
  %263 = getelementptr i8, ptr %0, i32 -24
  %264 = load volatile i32, ptr %263, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %268, label %266, !prof !10

266:                                              ; preds = %262
  %267 = tail call ptr @llvm.thread.pointer() #21
  call fastcc void @io_uring_drop_tctx_refs(ptr noundef %267) #22
  br label %268

268:                                              ; preds = %266, %262
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal ptr @io_wq_free_work(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -132
  %3 = getelementptr i8, ptr %0, i32 -72
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 524288
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %22, label %7, !prof !10

7:                                                ; preds = %1
  %8 = getelementptr i8, ptr %0, i32 -32
  %9 = load volatile i32, ptr %8, align 4
  %10 = add i32 %9, 127
  %11 = icmp ult i32 %10, 128
  %12 = load i1, ptr @req_ref_put_and_test.__already_done, align 1
  %13 = xor i1 %12, true
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %16, !prof !11

15:                                               ; preds = %7
  store i1 true, ptr @req_ref_put_and_test.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1191, i32 noundef 9, ptr noundef null) #21
  br label %16

16:                                               ; preds = %15, %7
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #21, !srcloc !13
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 1, ptr elementtype(i32) %8) #21, !srcloc !35
  %18 = extractvalue { i32, i32 } %17, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %16
  %21 = load i32, ptr %3, align 4
  br label %22

22:                                               ; preds = %20, %1
  %23 = phi i32 [ %21, %20 ], [ %4, %1 ]
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %33, label %26, !prof !10

26:                                               ; preds = %22
  %27 = and i32 %23, 1052928
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29, !prof !10

29:                                               ; preds = %26
  tail call fastcc void @__io_req_find_next_prep(ptr noundef %2) #21
  br label %30

30:                                               ; preds = %29, %26
  %31 = getelementptr i8, ptr %0, i32 -28
  %32 = load ptr, ptr %31, align 8
  store ptr null, ptr %31, align 8
  br label %33

33:                                               ; preds = %30, %22
  %34 = phi ptr [ %32, %30 ], [ null, %22 ]
  tail call fastcc void @__io_free_req(ptr noundef %2) #24
  br label %35

35:                                               ; preds = %33, %16
  %36 = phi ptr [ %34, %33 ], [ null, %16 ]
  %37 = icmp eq ptr %36, null
  %38 = getelementptr inbounds %struct.io_kiocb, ptr %36, i32 0, i32 19
  %39 = select i1 %37, ptr null, ptr %38
  ret ptr %39
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_wq_submit_work(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 -132
  %3 = getelementptr i8, ptr %0, i32 -72
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 524288
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = or i32 %4, 524288
  store i32 %8, ptr %3, align 4
  %9 = getelementptr i8, ptr %0, i32 -32
  store volatile i32 2, ptr %9, align 4
  br label %22

10:                                               ; preds = %1
  %11 = load i1, ptr @req_ref_get.__already_done.78, align 1
  %12 = xor i1 %11, true
  %13 = getelementptr i8, ptr %0, i32 -32
  %14 = load volatile i32, ptr %13, align 4
  %15 = add i32 %14, 127
  %16 = icmp ult i32 %15, 128
  %17 = select i1 %16, i1 %12, i1 false
  br i1 %17, label %18, label %19, !prof !11

18:                                               ; preds = %10
  store i1 true, ptr @req_ref_get.__already_done.78, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1198, i32 noundef 9, ptr noundef null) #21
  br label %19

19:                                               ; preds = %18, %10
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %13) #21, !srcloc !13
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #21, !srcloc !14
  %21 = load i32, ptr %3, align 4
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i32 [ %8, %7 ], [ %21, %19 ]
  %24 = and i32 %23, 1048576
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26, !prof !10

26:                                               ; preds = %22
  %27 = tail call fastcc ptr @__io_prep_linked_timeout(ptr noundef %2) #21
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call fastcc void @io_queue_linked_timeout(ptr noundef nonnull %27)
  br label %30

30:                                               ; preds = %29, %26, %22
  %31 = getelementptr inbounds %struct.io_wq_work, ptr %0, i32 0, i32 1
  %32 = load i32, ptr %31, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %70

35:                                               ; preds = %30
  %36 = load i32, ptr %3, align 4
  %37 = and i32 %36, 16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %55, label %39

39:                                               ; preds = %35
  %40 = getelementptr i8, ptr %0, i32 -76
  %41 = load i8, ptr %40, align 8
  %42 = zext i8 %41 to i32
  %43 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %42
  %44 = load i16, ptr %43, align 4
  %45 = and i16 %44, 48
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %39
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds %struct.file, ptr %48, i32 0, i32 3
  %50 = load ptr, ptr %49, align 4
  %51 = getelementptr inbounds %struct.file_operations, ptr %50, i32 0, i32 9
  %52 = load ptr, ptr %51, align 4
  %53 = icmp ne ptr %52, null
  %54 = select i1 %53, i32 -2147483646, i32 2
  br label %55

55:                                               ; preds = %47, %39, %35
  %56 = phi i32 [ %54, %47 ], [ 2, %39 ], [ 2, %35 ]
  %57 = phi i1 [ %53, %47 ], [ false, %39 ], [ false, %35 ]
  br label %58

58:                                               ; preds = %67, %55
  %59 = phi i32 [ %56, %55 ], [ 2, %67 ]
  %60 = phi i1 [ %57, %55 ], [ false, %67 ]
  br label %61

61:                                               ; preds = %65, %58
  %62 = phi i1 [ false, %65 ], [ %60, %58 ]
  %63 = tail call fastcc i32 @io_issue_sqe(ptr noundef %2, i32 noundef %59)
  switch i32 %63, label %70 [
    i32 -11, label %64
    i32 0, label %74
  ]

64:                                               ; preds = %61
  br i1 %62, label %67, label %65

65:                                               ; preds = %64
  %66 = tail call i32 @__cond_resched() #21
  br label %61

67:                                               ; preds = %64
  %68 = tail call fastcc i32 @io_arm_poll_handler(ptr noundef %2)
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %58

70:                                               ; preds = %61, %30
  %71 = phi i32 [ -125, %30 ], [ %63, %61 ]
  %72 = getelementptr i8, ptr %0, i32 -60
  store i32 %71, ptr %72, align 8
  %73 = getelementptr i8, ptr %0, i32 -20
  store ptr @io_req_task_cancel, ptr %73, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %2, i1 noundef zeroext false) #21
  br label %74

74:                                               ; preds = %70, %67, %61
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @io_wq_create(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_req_task_cancel(ptr noundef %0, ptr nocapture noundef %1) #0 {
  %3 = load i8, ptr %1, align 1, !range !45
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %7, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %8) #21
  store i8 1, ptr %1, align 1
  br label %9

9:                                                ; preds = %5, %2
  %10 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %11 = load i32, ptr %10, align 8
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %11)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_submit_flush_completions(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 1
  %3 = load volatile ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %121, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12, i32 5
  %7 = load i8, ptr %6, align 2, !range !45
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %119, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %10) #21
  %11 = load ptr, ptr %2, align 4
  %12 = icmp eq ptr %11, null
  br i1 %12, label %104, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %15 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %17 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 8
  %19 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15, i32 1
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 4
  br label %21

21:                                               ; preds = %101, %13
  %22 = phi ptr [ %11, %13 ], [ %102, %101 ]
  %23 = getelementptr i8, ptr %22, i32 -36
  %24 = load i32, ptr %23, align 4
  %25 = and i32 %24, 64
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %101

27:                                               ; preds = %21
  %28 = getelementptr i8, ptr %22, i32 -32
  %29 = load i64, ptr %28, align 8
  %30 = getelementptr i8, ptr %22, i32 -24
  %31 = load i32, ptr %30, align 8
  %32 = getelementptr i8, ptr %22, i32 -20
  %33 = load i32, ptr %32, align 4
  %34 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 1), align 4
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %59

36:                                               ; preds = %27
  %37 = tail call ptr @llvm.thread.pointer() #21
  %38 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 2
  %39 = load i32, ptr %38, align 8
  %40 = lshr i32 %39, 5
  %41 = getelementptr i32, ptr @__cpu_online_mask, i32 %40
  %42 = load volatile i32, ptr %41, align 4
  %43 = and i32 %39, 31
  %44 = shl nuw i32 1, %43
  %45 = and i32 %44, %42
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %36
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !56
  %48 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_complete, i32 0, i32 7), align 4
  %49 = icmp eq ptr %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %50, %47
  %51 = phi ptr [ %55, %50 ], [ %48, %47 ]
  %52 = load volatile ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.tracepoint_func, ptr %51, i32 0, i32 1
  %54 = load ptr, ptr %53, align 4
  tail call void %52(ptr noundef %54, ptr noundef %0, i64 noundef %29, i32 noundef %31, i32 noundef %33) #21
  %55 = getelementptr %struct.tracepoint_func, ptr %51, i32 1
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %50

58:                                               ; preds = %50, %47
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !57
  br label %59

59:                                               ; preds = %58, %36, %27
  %60 = load ptr, ptr %14, align 8
  %61 = load i32, ptr %15, align 4
  %62 = load i32, ptr %16, align 64
  %63 = getelementptr inbounds %struct.io_rings, ptr %60, i32 0, i32 1
  %64 = load volatile i32, ptr %63, align 64
  %65 = sub i32 %62, %64
  %66 = icmp eq i32 %65, %61
  br i1 %66, label %76, label %67

67:                                               ; preds = %59
  %68 = add i32 %61, -1
  %69 = add i32 %62, 1
  store i32 %69, ptr %16, align 64
  %70 = and i32 %62, %68
  %71 = getelementptr %struct.io_rings, ptr %60, i32 0, i32 11, i32 %70
  %72 = icmp eq ptr %71, null
  br i1 %72, label %76, label %73, !prof !11

73:                                               ; preds = %67
  store volatile i64 %29, ptr %71, align 8
  %74 = getelementptr %struct.io_rings, ptr %60, i32 0, i32 11, i32 %70, i32 1
  store volatile i32 %31, ptr %74, align 8
  %75 = getelementptr %struct.io_rings, ptr %60, i32 0, i32 11, i32 %70, i32 2
  store volatile i32 %33, ptr %75, align 4
  br label %101

76:                                               ; preds = %67, %59
  %77 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %78 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %77, i32 noundef 4196896, i32 noundef 24) #25
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = load ptr, ptr %14, align 8
  %82 = getelementptr inbounds %struct.io_rings, ptr %81, i32 0, i32 9
  %83 = load volatile i32, ptr %82, align 4
  %84 = add i32 %83, 1
  store volatile i32 %84, ptr %82, align 4
  %85 = load i32, ptr %20, align 8
  %86 = add i32 %85, -1
  store i32 %86, ptr %20, align 8
  br label %101

87:                                               ; preds = %76
  %88 = load volatile ptr, ptr %17, align 4
  %89 = icmp eq ptr %88, %17
  br i1 %89, label %90, label %95

90:                                               ; preds = %87
  tail call void @_set_bit(i32 noundef 0, ptr noundef %18) #21
  %91 = load ptr, ptr %14, align 8
  %92 = getelementptr inbounds %struct.io_rings, ptr %91, i32 0, i32 7
  %93 = load i32, ptr %92, align 4
  %94 = or i32 %93, 2
  store volatile i32 %94, ptr %92, align 4
  br label %95

95:                                               ; preds = %90, %87
  store i64 %29, ptr %78, align 8
  %96 = getelementptr inbounds %struct.io_uring_cqe, ptr %78, i32 0, i32 1
  store i32 %31, ptr %96, align 8
  %97 = getelementptr inbounds %struct.io_uring_cqe, ptr %78, i32 0, i32 2
  store i32 %33, ptr %97, align 4
  %98 = getelementptr inbounds %struct.io_overflow_cqe, ptr %78, i32 0, i32 1
  %99 = load ptr, ptr %19, align 4
  store ptr %98, ptr %19, align 4
  store ptr %17, ptr %98, align 8
  %100 = getelementptr inbounds %struct.io_overflow_cqe, ptr %78, i32 0, i32 1, i32 1
  store ptr %99, ptr %100, align 4
  store volatile ptr %98, ptr %99, align 4
  br label %101

101:                                              ; preds = %95, %80, %73, %21
  %102 = load ptr, ptr %22, align 4
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %21

104:                                              ; preds = %101, %9
  %105 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %106 = load i8, ptr %105, align 16
  %107 = and i8 %106, 48
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %110, label %109, !prof !10

109:                                              ; preds = %104
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %0) #24
  br label %110

110:                                              ; preds = %109, %104
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %111 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %112 = load i32, ptr %111, align 64
  %113 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %114 = load ptr, ptr %113, align 8
  %115 = getelementptr inbounds %struct.io_rings, ptr %114, i32 0, i32 1, i32 2
  store volatile i32 %112, ptr %115, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %116 = load i16, ptr %10, align 4
  %117 = add i16 %116, 1
  store i16 %117, ptr %10, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %0) #21
  store i8 0, ptr %6, align 2
  %118 = load ptr, ptr %2, align 4
  br label %119

119:                                              ; preds = %110, %5
  %120 = phi ptr [ %3, %5 ], [ %118, %110 ]
  tail call fastcc void @io_free_batch_list(ptr noundef %0, ptr noundef %120) #21
  store ptr null, ptr %2, align 4
  br label %121

121:                                              ; preds = %119, %1
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @ctx_commit_and_unlock(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 3
  %3 = load i8, ptr %2, align 16
  %4 = and i8 %3, 48
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !10

6:                                                ; preds = %1
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %0) #24
  br label %7

7:                                                ; preds = %6, %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %9 = load i32, ptr %8, align 64
  %10 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %struct.io_rings, ptr %11, i32 0, i32 1, i32 2
  store volatile i32 %9, ptr %12, align 64
  %13 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %14 = load i16, ptr %13, align 4
  %15 = add i16 %14, 1
  store i16 %15, ptr %13, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %0)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_task_refs_refill(ptr noundef %0) unnamed_addr #0 {
  %2 = load i32, ptr %0, align 8
  %3 = sub i32 1024, %2
  %4 = getelementptr inbounds %struct.io_uring_task, ptr %0, i32 0, i32 5
  %5 = zext i32 %3 to i64
  %6 = load i32, ptr @percpu_counter_batch, align 4
  tail call void @percpu_counter_add_batch(ptr noundef %4, i64 noundef %5, i32 noundef %6) #21
  %7 = tail call ptr @llvm.thread.pointer() #21
  %8 = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 3
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #21, !srcloc !13
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 %3, ptr elementtype(i32) %8) #21, !srcloc !65
  %10 = extractvalue { i32, i32, i32 } %9, 0
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12, !prof !11

12:                                               ; preds = %1
  %13 = add i32 %10, %3
  %14 = or i32 %13, %10
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %18, label %16, !prof !10

16:                                               ; preds = %12, %1
  %17 = phi i32 [ 2, %1 ], [ 1, %12 ]
  tail call void @refcount_warn_saturate(ptr noundef %8, i32 noundef %17) #21
  br label %18

18:                                               ; preds = %16, %12
  %19 = load i32, ptr %0, align 8
  %20 = add i32 %19, %3
  store i32 %20, ptr %0, align 8
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__io_alloc_req_refill(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca [8 x ptr], align 4
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(32) %2, i8 0, i32 32, i1 false), !annotation !9
  %4 = load ptr, ptr %3, align 4
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %47

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 3
  %8 = load volatile i32, ptr %7, align 8
  %9 = icmp ugt i32 %8, 32
  br i1 %9, label %10, label %25, !prof !101

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %11) #21
  %12 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 2
  %13 = load volatile ptr, ptr %12, align 4
  %14 = icmp eq ptr %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = load ptr, ptr %3, align 4
  %17 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 2, i32 1
  %18 = load ptr, ptr %17, align 4
  store ptr %16, ptr %18, align 4
  %19 = load ptr, ptr %12, align 4
  store ptr %19, ptr %3, align 4
  store ptr null, ptr %12, align 4
  br label %20

20:                                               ; preds = %15, %10
  store i32 0, ptr %7, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %21 = load i16, ptr %11, align 4
  %22 = add i16 %21, 1
  store i16 %22, ptr %11, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %23 = load ptr, ptr %3, align 4
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %47, !prof !11

25:                                               ; preds = %20, %6
  %26 = load ptr, ptr @req_cachep, align 4
  %27 = call i32 @kmem_cache_alloc_bulk(ptr noundef %26, i32 noundef 11456, i32 noundef 8, ptr noundef nonnull %2) #21
  %28 = icmp slt i32 %27, 1
  br i1 %28, label %29, label %33, !prof !11

29:                                               ; preds = %25
  %30 = load ptr, ptr @req_cachep, align 4
  %31 = call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %30, i32 noundef 11456) #21
  store ptr %31, ptr %2, align 4
  %32 = icmp eq ptr %31, null
  br i1 %32, label %47, label %33

33:                                               ; preds = %29, %25
  %34 = phi i32 [ %27, %25 ], [ 1, %29 ]
  call fastcc void @percpu_ref_get_many(ptr noundef %0, i32 noundef %34)
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i32 [ %45, %35 ], [ 0, %33 ]
  %37 = getelementptr [8 x ptr], ptr %2, i32 0, i32 %36
  %38 = load ptr, ptr %37, align 4
  %39 = getelementptr inbounds %struct.io_kiocb, ptr %38, i32 0, i32 8
  store ptr %0, ptr %39, align 8
  %40 = getelementptr inbounds %struct.io_kiocb, ptr %38, i32 0, i32 14
  store ptr null, ptr %40, align 8
  %41 = getelementptr inbounds %struct.io_kiocb, ptr %38, i32 0, i32 18
  store ptr null, ptr %41, align 8
  %42 = getelementptr inbounds %struct.io_kiocb, ptr %38, i32 0, i32 6
  store i32 0, ptr %42, align 8
  %43 = getelementptr inbounds %struct.io_kiocb, ptr %38, i32 0, i32 12
  %44 = load ptr, ptr %3, align 4
  store ptr %44, ptr %43, align 4
  store ptr %43, ptr %3, align 4
  %45 = add nuw nsw i32 %36, 1
  %46 = icmp eq i32 %45, %34
  br i1 %46, label %47, label %35

47:                                               ; preds = %35, %29, %20, %1
  %48 = phi i1 [ true, %20 ], [ false, %29 ], [ true, %1 ], [ true, %35 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #21
  ret i1 %48
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kmem_cache_alloc_bulk(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_queue_sqe(ptr noundef %0) unnamed_addr #8 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 272
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %40, !prof !10

6:                                                ; preds = %1
  %7 = tail call fastcc i32 @io_issue_sqe(ptr noundef %0, i32 noundef -2147483647) #21
  %8 = load i32, ptr %2, align 4
  %9 = and i32 %8, 65536
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %13 = load ptr, ptr %12, align 8
  %14 = and i32 %8, 64
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.io_ring_ctx, ptr %13, i32 0, i32 1, i32 12, i32 5
  store i8 1, ptr %17, align 2
  br label %18

18:                                               ; preds = %16, %11
  %19 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 12
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %13, i32 0, i32 1, i32 12, i32 1
  store ptr null, ptr %19, align 4
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %13, i32 0, i32 1, i32 12, i32 1, i32 1
  br i1 %22, label %24, label %25

24:                                               ; preds = %18
  store ptr %19, ptr %23, align 4
  store volatile ptr %19, ptr %20, align 4
  br label %41

25:                                               ; preds = %18
  %26 = load ptr, ptr %23, align 4
  store ptr %19, ptr %26, align 4
  store ptr %19, ptr %23, align 4
  br label %41

27:                                               ; preds = %6
  switch i32 %7, label %39 [
    i32 0, label %28
    i32 -11, label %35
  ], !prof !61

28:                                               ; preds = %27
  %29 = and i32 %8, 1048576
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %41, label %31, !prof !10

31:                                               ; preds = %28
  %32 = tail call fastcc ptr @__io_prep_linked_timeout(ptr noundef %0) #21
  %33 = icmp eq ptr %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %31
  tail call fastcc void @io_queue_linked_timeout(ptr noundef nonnull %32) #21
  br label %41

35:                                               ; preds = %27
  %36 = and i32 %8, 2048
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call fastcc void @io_queue_sqe_arm_apoll(ptr noundef %0) #21
  br label %41

39:                                               ; preds = %35, %27
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %7) #21
  br label %41

40:                                               ; preds = %1
  tail call fastcc void @io_queue_sqe_fallback(ptr noundef %0)
  br label %41

41:                                               ; preds = %40, %39, %38, %34, %31, %28, %25, %24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_start_plug_nr_ios(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @io_file_get(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2, i1 noundef zeroext %3) unnamed_addr #8 {
  br i1 %3, label %5, label %53

5:                                                ; preds = %4
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  %7 = load i32, ptr %6, align 8
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %9, label %98, !prof !10

9:                                                ; preds = %5
  %10 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A.inst\090xe320f014", "=r,r,Ir,~{cc}"(i32 %2, i32 %7) #21, !srcloc !40
  %11 = and i32 %10, %2
  %12 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  %13 = load ptr, ptr %12, align 4
  %14 = getelementptr %struct.io_fixed_file, ptr %13, i32 %11
  %15 = load i32, ptr %14, align 4
  %16 = and i32 %15, -4
  %17 = inttoptr i32 %16 to ptr
  %18 = shl i32 %15, 23
  %19 = and i32 %18, 25165824
  %20 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 4
  %21 = load i32, ptr %20, align 4
  %22 = or i32 %19, %21
  store i32 %22, ptr %20, align 4
  %23 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 10
  %24 = load ptr, ptr %23, align 8
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %98

26:                                               ; preds = %9
  %27 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %28 = load ptr, ptr %27, align 4
  store ptr %28, ptr %23, align 8
  %29 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 7
  %30 = load i32, ptr %29, align 16
  %31 = add i32 %30, -1
  store i32 %31, ptr %29, align 16
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %98, !prof !11

33:                                               ; preds = %26
  %34 = add nsw i32 %30, 99
  store i32 %34, ptr %29, align 16
  %35 = load ptr, ptr %27, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %36, 3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %48, !prof !10

39:                                               ; preds = %33
  %40 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %41 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %42 = inttoptr i32 %41 to ptr
  %43 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %42) #6, !srcloc !12
  %44 = add i32 %43, %36
  %45 = inttoptr i32 %44 to ptr
  %46 = load i32, ptr %45, align 4
  %47 = add i32 %46, 100
  store i32 %47, ptr %45, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %40) #21, !srcloc !22
  br label %52

48:                                               ; preds = %33
  %49 = getelementptr inbounds %struct.percpu_ref, ptr %35, i32 0, i32 1
  %50 = load ptr, ptr %49, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %50) #21, !srcloc !13
  %51 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %50, ptr %50, i32 100, ptr elementtype(i32) %50) #21, !srcloc !14
  br label %52

52:                                               ; preds = %48, %39
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %98

53:                                               ; preds = %4
  %54 = tail call ptr @fget(i32 noundef %2) #21
  %55 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_file_get, i32 0, i32 1), align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %80

57:                                               ; preds = %53
  %58 = tail call ptr @llvm.thread.pointer() #21
  %59 = getelementptr inbounds %struct.thread_info, ptr %58, i32 0, i32 2
  %60 = load i32, ptr %59, align 8
  %61 = lshr i32 %60, 5
  %62 = getelementptr i32, ptr @__cpu_online_mask, i32 %61
  %63 = load volatile i32, ptr %62, align 4
  %64 = and i32 %60, 31
  %65 = shl nuw i32 1, %64
  %66 = and i32 %65, %63
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %80, label %68

68:                                               ; preds = %57
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !102
  %69 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_file_get, i32 0, i32 7), align 4
  %70 = icmp eq ptr %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %71, %68
  %72 = phi ptr [ %76, %71 ], [ %69, %68 ]
  %73 = load volatile ptr, ptr %72, align 4
  %74 = getelementptr inbounds %struct.tracepoint_func, ptr %72, i32 0, i32 1
  %75 = load ptr, ptr %74, align 4
  tail call void %73(ptr noundef %75, ptr noundef %0, i32 noundef %2) #21
  %76 = getelementptr %struct.tracepoint_func, ptr %72, i32 1
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %79, label %71

79:                                               ; preds = %71, %68
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !103
  br label %80

80:                                               ; preds = %79, %57, %53
  %81 = icmp eq ptr %54, null
  br i1 %81, label %98, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.file, ptr %54, i32 0, i32 3
  %84 = load ptr, ptr %83, align 4
  %85 = icmp eq ptr %84, @io_uring_fops
  br i1 %85, label %86, label %98, !prof !11

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.io_kiocb, ptr %1, i32 0, i32 4
  %88 = load i32, ptr %87, align 4
  %89 = and i32 %88, 512
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = or i32 %88, 512
  store i32 %92, ptr %87, align 4
  %93 = tail call ptr @llvm.thread.pointer() #21
  %94 = getelementptr inbounds %struct.task_struct, ptr %93, i32 0, i32 91
  %95 = load ptr, ptr %94, align 8
  %96 = getelementptr inbounds %struct.io_uring_task, ptr %95, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %96) #21, !srcloc !13
  %97 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %96, ptr %96, i32 1, ptr elementtype(i32) %96) #21, !srcloc !14
  br label %98

98:                                               ; preds = %91, %86, %82, %80, %52, %26, %9, %5
  %99 = phi ptr [ null, %5 ], [ %17, %9 ], [ %17, %26 ], [ %17, %52 ], [ null, %80 ], [ %54, %82 ], [ %54, %86 ], [ %54, %91 ]
  ret ptr %99
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_timeout_prep(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 4
  %5 = load volatile i64, ptr %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.anon.178, ptr %8, i32 0, i32 2
  %10 = load i32, ptr %9, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %108, !prof !10

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 2
  %15 = load i16, ptr %14, align 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %108

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 9
  %19 = load i16, ptr %18, align 8
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %108

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 6
  %23 = load i32, ptr %22, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %108

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 11
  %27 = load i32, ptr %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %108

29:                                               ; preds = %25
  %30 = icmp eq i32 %6, 0
  %31 = xor i1 %2, true
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %108

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 7
  %35 = load volatile i32, ptr %34, align 4
  %36 = and i32 %35, -46
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %108

38:                                               ; preds = %33
  %39 = and i32 %35, 12
  %40 = tail call i32 @__sw_hweight32(i32 noundef %39) #21
  %41 = icmp ugt i32 %40, 1
  br i1 %41, label %108, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3
  store volatile ptr %43, ptr %43, align 4
  %44 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 3, i32 1
  store ptr %43, ptr %44, align 4
  %45 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 1
  store i32 %6, ptr %45, align 4
  br i1 %30, label %54, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %7, align 8
  %48 = getelementptr inbounds %struct.anon.178, ptr %47, i32 0, i32 3
  %49 = load i8, ptr %48, align 16
  %50 = and i8 %49, 16
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %54, !prof !11

52:                                               ; preds = %46
  %53 = or i8 %49, 16
  store i8 %53, ptr %48, align 16
  br label %54

54:                                               ; preds = %52, %46, %42
  %55 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %56 = load i32, ptr %55, align 4
  %57 = and i32 %56, 2097152
  %58 = icmp ne i32 %57, 0
  %59 = load i1, ptr @io_timeout_prep.__already_done, align 1
  %60 = xor i1 %59, true
  %61 = select i1 %58, i1 %60, i1 false
  br i1 %61, label %62, label %63, !prof !11

62:                                               ; preds = %54
  store i1 true, ptr @io_timeout_prep.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6261, i32 noundef 9, ptr noundef null) #21
  br label %63

63:                                               ; preds = %62, %54
  br i1 %58, label %108, label %64

64:                                               ; preds = %63
  %65 = tail call fastcc zeroext i1 @io_alloc_async_data(ptr noundef %0)
  br i1 %65, label %108, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 18
  %68 = load ptr, ptr %67, align 8
  store ptr %0, ptr %68, align 8
  %69 = getelementptr inbounds %struct.io_timeout_data, ptr %68, i32 0, i32 4
  store i32 %35, ptr %69, align 4
  %70 = getelementptr inbounds %struct.io_timeout_data, ptr %68, i32 0, i32 2
  %71 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 5
  %72 = load i64, ptr %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = inttoptr i32 %73 to ptr
  %75 = tail call i32 @get_timespec64(ptr noundef %70, ptr noundef %74) #21
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %108

77:                                               ; preds = %66
  %78 = load i64, ptr %70, align 8
  %79 = icmp slt i64 %78, 0
  br i1 %79, label %108, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.io_timeout_data, ptr %68, i32 0, i32 2, i32 1
  %82 = load i32, ptr %81, align 8
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %108, label %84

84:                                               ; preds = %80
  %85 = and i32 %35, 1
  %86 = xor i32 %85, 1
  %87 = getelementptr inbounds %struct.io_timeout_data, ptr %68, i32 0, i32 3
  store i32 %86, ptr %87, align 8
  %88 = getelementptr inbounds %struct.io_timeout_data, ptr %68, i32 0, i32 1
  %89 = tail call fastcc i32 @io_timeout_get_clock(ptr noundef %68), !range !104
  %90 = load i32, ptr %87, align 8
  tail call void @hrtimer_init(ptr noundef %88, i32 noundef %89, i32 noundef %90) #21
  br i1 %2, label %91, label %108

91:                                               ; preds = %84
  %92 = load ptr, ptr %7, align 8
  %93 = getelementptr inbounds %struct.io_ring_ctx, ptr %92, i32 0, i32 1, i32 12, i32 2
  %94 = load ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, null
  br i1 %95, label %108, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %struct.io_ring_ctx, ptr %92, i32 0, i32 1, i32 12, i32 2, i32 1
  %98 = load ptr, ptr %97, align 4
  %99 = getelementptr inbounds %struct.io_kiocb, ptr %98, i32 0, i32 1
  %100 = load i8, ptr %99, align 8
  %101 = icmp eq i8 %100, 15
  br i1 %101, label %108, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %struct.io_timeout, ptr %0, i32 0, i32 4
  store ptr %98, ptr %103, align 4
  %104 = load ptr, ptr %97, align 4
  %105 = getelementptr inbounds %struct.io_kiocb, ptr %104, i32 0, i32 4
  %106 = load i32, ptr %105, align 4
  %107 = or i32 %106, 1048576
  store i32 %107, ptr %105, align 4
  br label %108

108:                                              ; preds = %102, %96, %91, %84, %80, %77, %66, %64, %63, %38, %33, %29, %25, %21, %17, %13, %3
  %109 = phi i32 [ -22, %3 ], [ -22, %25 ], [ -22, %21 ], [ -22, %17 ], [ -22, %13 ], [ -22, %29 ], [ -22, %33 ], [ -22, %38 ], [ -14, %63 ], [ -12, %64 ], [ -14, %66 ], [ -22, %80 ], [ -22, %77 ], [ -22, %96 ], [ -22, %91 ], [ 0, %102 ], [ 0, %84 ]
  ret i32 %109
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_prep_rw(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %0, align 8
  %6 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %7 = load i32, ptr %6, align 4
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %64

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 2
  %12 = load ptr, ptr %11, align 8
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, -4096
  %15 = icmp eq i16 %14, -32768
  %16 = select i1 %15, i32 2, i32 0
  switch i16 %14, label %40 [
    i16 24576, label %17
    i16 -16384, label %57
    i16 -32768, label %23
  ]

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 17
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %19, align 4
  %21 = tail call ptr @I_BDEV(ptr noundef %20) #21
  %22 = icmp eq ptr %21, null
  br i1 %22, label %57, label %50

23:                                               ; preds = %10
  %24 = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 8
  %25 = load ptr, ptr %24, align 4
  %26 = getelementptr inbounds %struct.super_block, ptr %25, i32 0, i32 20
  %27 = load ptr, ptr %26, align 4
  %28 = icmp eq ptr %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.block_device, ptr %27, i32 0, i32 18
  %31 = load ptr, ptr %30, align 4
  %32 = getelementptr inbounds %struct.request_queue, ptr %31, i32 0, i32 11
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %33, 536870912
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %59, label %36

36:                                               ; preds = %29, %23
  %37 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 3
  %38 = load ptr, ptr %37, align 4
  %39 = icmp eq ptr %38, @io_uring_fops
  br i1 %39, label %59, label %57

40:                                               ; preds = %10
  %41 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 7
  %42 = load i32, ptr %41, align 4
  %43 = and i32 %42, 2048
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 8
  %47 = load i32, ptr %46, align 8
  %48 = and i32 %47, 134217728
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %59, label %57

50:                                               ; preds = %17
  %51 = getelementptr inbounds %struct.block_device, ptr %21, i32 0, i32 18
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.request_queue, ptr %52, i32 0, i32 11
  %54 = load volatile i32, ptr %53, align 4
  %55 = and i32 %54, 536870912
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %50, %45, %40, %36, %17, %10
  %58 = or i32 %16, 1
  br label %59

59:                                               ; preds = %57, %50, %45, %36, %29
  %60 = phi i32 [ %58, %57 ], [ %16, %50 ], [ %16, %45 ], [ %16, %29 ], [ %16, %36 ]
  %61 = shl i32 %60, 23
  %62 = load i32, ptr %6, align 4
  %63 = or i32 %62, %61
  store i32 %63, ptr %6, align 4
  br label %64

64:                                               ; preds = %59, %2
  %65 = phi i32 [ %7, %2 ], [ %63, %59 ]
  %66 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 4
  %67 = load volatile i64, ptr %66, align 8
  %68 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 1
  store i64 %67, ptr %68, align 8
  %69 = icmp eq i64 %67, -1
  br i1 %69, label %70, label %82

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 8
  %72 = load i32, ptr %71, align 8
  %73 = and i32 %72, 2097152
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %70
  %76 = or i32 %65, 1024
  store i32 %76, ptr %6, align 4
  %77 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 10
  %78 = load i64, ptr %77, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i64 [ %78, %75 ], [ 0, %70 ]
  %81 = phi i32 [ %76, %75 ], [ %65, %70 ]
  store i64 %80, ptr %68, align 8
  br label %82

82:                                               ; preds = %79, %64
  %83 = phi i32 [ %65, %64 ], [ %81, %79 ]
  %84 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 7
  %85 = load i32, ptr %84, align 4
  %86 = lshr i32 %85, 6
  %87 = and i32 %86, 16
  %88 = shl i32 %85, 1
  %89 = and i32 %88, 131072
  %90 = or i32 %89, %87
  %91 = and i32 %85, 4096
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %108

93:                                               ; preds = %82
  %94 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 17
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %95, align 4
  %97 = getelementptr inbounds %struct.inode, ptr %96, i32 0, i32 8
  %98 = load ptr, ptr %97, align 4
  %99 = getelementptr inbounds %struct.super_block, ptr %98, i32 0, i32 10
  %100 = load i32, ptr %99, align 4
  %101 = and i32 %100, 16
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %108

103:                                              ; preds = %93
  %104 = getelementptr inbounds %struct.inode, ptr %96, i32 0, i32 4
  %105 = load i32, ptr %104, align 4
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %103, %93, %82
  %109 = or i32 %90, 2
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i32 [ %109, %108 ], [ %90, %103 ]
  %112 = lshr i32 %85, 18
  %113 = and i32 %112, 4
  %114 = or i32 %111, %113
  %115 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  store i32 %114, ptr %115, align 8
  %116 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 7
  %117 = load volatile i32, ptr %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %137, label %119

119:                                              ; preds = %110
  %120 = icmp ult i32 %117, 32
  br i1 %120, label %121, label %203, !prof !10

121:                                              ; preds = %119
  %122 = and i32 %117, 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %130, label %124

124:                                              ; preds = %121
  %125 = load ptr, ptr %0, align 8
  %126 = getelementptr inbounds %struct.file, ptr %125, i32 0, i32 8
  %127 = load i32, ptr %126, align 8
  %128 = and i32 %127, 134217728
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %203, label %130

130:                                              ; preds = %124, %121
  %131 = phi i32 [ 0, %121 ], [ 1048576, %124 ]
  %132 = lshr i32 %117, 1
  %133 = and i32 %132, 2
  %134 = or i32 %117, %114
  %135 = or i32 %134, %133
  %136 = or i32 %135, %131
  store i32 %136, ptr %115, align 8
  br label %137

137:                                              ; preds = %130, %110
  %138 = phi i32 [ %136, %130 ], [ %114, %110 ]
  %139 = and i32 %138, 8
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %148

141:                                              ; preds = %137
  %142 = load i32, ptr %84, align 4
  %143 = and i32 %142, 2048
  %144 = icmp ne i32 %143, 0
  %145 = and i32 %83, 8388608
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %144, i1 %146, i1 false
  br i1 %147, label %148, label %150

148:                                              ; preds = %141, %137
  %149 = or i32 %83, 2048
  store i32 %149, ptr %6, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 2
  %152 = load i32, ptr %151, align 4
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %168, label %155

155:                                              ; preds = %150
  %156 = and i32 %138, 131072
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %203, label %158

158:                                              ; preds = %155
  %159 = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 3
  %160 = load ptr, ptr %159, align 4
  %161 = getelementptr inbounds %struct.file_operations, ptr %160, i32 0, i32 6
  %162 = load ptr, ptr %161, align 4
  %163 = icmp eq ptr %162, null
  br i1 %163, label %203, label %164

164:                                              ; preds = %158
  %165 = or i32 %138, 2097153
  store i32 %165, ptr %115, align 8
  %166 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 2
  store ptr @io_complete_rw_iopoll, ptr %166, align 8
  %167 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 2
  store i8 0, ptr %167, align 1
  br label %173

168:                                              ; preds = %150
  %169 = and i32 %138, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %203

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 2
  store ptr @io_complete_rw, ptr %172, align 8
  br label %173

173:                                              ; preds = %171, %164
  %174 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 2
  %175 = load volatile i16, ptr %174, align 2
  %176 = icmp eq i16 %175, 0
  br i1 %176, label %181, label %177

177:                                              ; preds = %173
  %178 = zext i16 %175 to i32
  %179 = tail call i32 @ioprio_check_cap(i32 noundef %178) #21
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %189, label %203

181:                                              ; preds = %173
  %182 = tail call ptr @llvm.thread.pointer() #21
  %183 = getelementptr inbounds %struct.task_struct, ptr %182, i32 0, i32 118
  %184 = load ptr, ptr %183, align 32
  %185 = icmp eq ptr %184, null
  br i1 %185, label %189, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.io_context, ptr %184, i32 0, i32 2
  %188 = load i16, ptr %187, align 4
  br label %189

189:                                              ; preds = %186, %181, %177
  %190 = phi i16 [ %175, %177 ], [ %188, %186 ], [ 16388, %181 ]
  %191 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 6
  store i16 %190, ptr %191, align 2
  %192 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 11
  store ptr null, ptr %192, align 4
  %193 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 5
  %194 = load volatile i64, ptr %193, align 8
  %195 = getelementptr inbounds %struct.io_rw, ptr %0, i32 0, i32 1
  store i64 %194, ptr %195, align 8
  %196 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 6
  %197 = load volatile i32, ptr %196, align 8
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds %struct.io_rw, ptr %0, i32 0, i32 2
  store i64 %198, ptr %199, align 8
  %200 = getelementptr inbounds %struct.io_uring_sqe, ptr %1, i32 0, i32 9
  %201 = load volatile i16, ptr %200, align 8
  %202 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 3
  store i16 %201, ptr %202, align 2
  br label %203

203:                                              ; preds = %189, %177, %168, %158, %155, %124, %119
  %204 = phi i32 [ 0, %189 ], [ -95, %158 ], [ -95, %155 ], [ -22, %168 ], [ %179, %177 ], [ -95, %119 ], [ -95, %124 ]
  ret i32 %204
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_complete_rw_iopoll(ptr noundef %0, i32 noundef %1) #0 {
  %3 = getelementptr inbounds %struct.kiocb, ptr %0, i32 0, i32 4
  %4 = load i32, ptr %3, align 8
  %5 = and i32 %4, 262144
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %9 = load i32, ptr %8, align 4
  %10 = and i32 %9, 16777216
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %48, label %12

12:                                               ; preds = %7
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds %struct.file, ptr %13, i32 0, i32 2
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.inode, ptr %15, i32 0, i32 8
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !70
  %19 = load volatile i32, ptr %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33, !prof !10

21:                                               ; preds = %12
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %23 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %27 = inttoptr i32 %26 to ptr
  %28 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %27) #6, !srcloc !12
  %29 = add i32 %28, %25
  %30 = inttoptr i32 %29 to ptr
  %31 = load i32, ptr %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, ptr %30, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %22) #21, !srcloc !22
  br label %47

33:                                               ; preds = %12
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !71
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %35 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 1
  %36 = load ptr, ptr %35, align 4
  %37 = ptrtoint ptr %36 to i32
  %38 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %39 = inttoptr i32 %38 to ptr
  %40 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %39) #6, !srcloc !12
  %41 = add i32 %40, %37
  %42 = inttoptr i32 %41 to ptr
  %43 = load i32, ptr %42, align 4
  %44 = add i32 %43, -1
  store i32 %44, ptr %42, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #21, !srcloc !22
  %45 = getelementptr %struct.super_block, ptr %17, i32 0, i32 26, i32 2, i32 0, i32 2
  %46 = tail call i32 @rcuwait_wake_up(ptr noundef %45) #21
  br label %47

47:                                               ; preds = %33, %21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !72
  br label %48

48:                                               ; preds = %47, %7, %2
  %49 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %50 = load i32, ptr %49, align 8
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %61, label %52, !prof !10

52:                                               ; preds = %48
  %53 = icmp eq i32 %1, -11
  br i1 %53, label %54, label %60

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i1 @io_rw_should_reissue(ptr noundef %0)
  br i1 %55, label %56, label %60

56:                                               ; preds = %54
  %57 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %58 = load i32, ptr %57, align 4
  %59 = or i32 %58, 131072
  store i32 %59, ptr %57, align 4
  br label %63

60:                                               ; preds = %54, %52
  store i32 %1, ptr %49, align 8
  br label %61

61:                                               ; preds = %60, %48
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !105
  %62 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 2
  store volatile i8 1, ptr %62, align 1
  br label %63

63:                                               ; preds = %61, %56
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ioprio_check_cap(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_timespec64(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @build_open_how(ptr sret(%struct.open_how) align 8, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @getname(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @check_zeroed_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_queue_sqe_fallback(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %3 = load i32, ptr %2, align 4
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = and i32 %3, -13
  %8 = or i32 %7, 4
  store i32 %8, ptr %2, align 4
  %9 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 6
  %10 = load i32, ptr %9, align 8
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %10) #21
  br label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr inbounds %struct.anon.178, ptr %13, i32 0, i32 3
  %15 = load i8, ptr %14, align 16
  %16 = and i8 %15, 32
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18, !prof !10

18:                                               ; preds = %11
  tail call fastcc void @io_drain_req(ptr noundef %0) #22
  br label %24

19:                                               ; preds = %11
  %20 = tail call fastcc i32 @io_req_prep_async(ptr noundef %0)
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !10

22:                                               ; preds = %19
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %20)
  br label %24

23:                                               ; preds = %19
  tail call void @io_queue_async_work(ptr noundef %0, ptr noundef null)
  br label %24

24:                                               ; preds = %23, %22, %18, %6
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_drain_req(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 3
  %5 = load i32, ptr %4, align 4
  %6 = icmp eq ptr %0, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %7, %1
  %8 = phi i32 [ %10, %7 ], [ %5, %1 ]
  %9 = phi ptr [ %12, %7 ], [ %0, %1 ]
  %10 = add i32 %8, -1
  %11 = getelementptr inbounds %struct.io_kiocb, ptr %9, i32 0, i32 14
  %12 = load ptr, ptr %11, align 8
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %7

14:                                               ; preds = %7, %1
  %15 = phi i32 [ %5, %1 ], [ %10, %7 ]
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %16) #21
  %17 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 4
  %18 = load i32, ptr %17, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %29, label %21, !prof !10

21:                                               ; preds = %14
  %22 = load ptr, ptr %2, align 8
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %22, i32 0, i32 10
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %22, i32 0, i32 10, i32 4
  %25 = load volatile i32, ptr %24, align 8
  %26 = add i32 %25, %15
  %27 = load i32, ptr %23, align 64
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %21, %14
  %30 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5
  %31 = load volatile ptr, ptr %30, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !106
  %32 = icmp eq ptr %31, %30
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5, i32 1
  %35 = load ptr, ptr %34, align 4
  %36 = icmp eq ptr %35, %30
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %38 = load i16, ptr %16, align 4
  %39 = add i16 %38, 1
  store i16 %39, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %40

40:                                               ; preds = %93, %37
  %41 = getelementptr inbounds %struct.anon.178, ptr %3, i32 0, i32 3
  %42 = load i8, ptr %41, align 16
  %43 = and i8 %42, -33
  store i8 %43, ptr %41, align 16
  %44 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 15, i32 1
  store ptr @io_req_task_submit, ptr %44, align 4
  tail call fastcc void @io_req_task_work_add(ptr noundef %0, i1 noundef zeroext false) #21
  br label %133

45:                                               ; preds = %33, %29, %21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %46 = load i16, ptr %16, align 4
  %47 = add i16 %46, 1
  store i16 %47, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %48 = tail call fastcc i32 @io_req_prep_async(ptr noundef %0)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %73, %45
  %51 = phi i32 [ %48, %45 ], [ -12, %73 ]
  tail call fastcc void @io_req_complete_failed(ptr noundef %0, i32 noundef %51)
  br label %133

52:                                               ; preds = %45
  %53 = load i32, ptr %17, align 4
  %54 = and i32 %53, 4096
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %52
  br i1 %6, label %73, label %68

57:                                               ; preds = %52
  %58 = load ptr, ptr %2, align 8
  %59 = getelementptr inbounds %struct.io_ring_ctx, ptr %58, i32 0, i32 11, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %59) #21
  br i1 %6, label %65, label %60

60:                                               ; preds = %60, %57
  %61 = phi ptr [ %63, %60 ], [ %0, %57 ]
  tail call fastcc void @io_prep_async_work(ptr noundef nonnull %61) #21
  %62 = getelementptr inbounds %struct.io_kiocb, ptr %61, i32 0, i32 14
  %63 = load ptr, ptr %62, align 8
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %60

65:                                               ; preds = %60, %57
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %66 = load i16, ptr %59, align 4
  %67 = add i16 %66, 1
  store i16 %67, ptr %59, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %73

68:                                               ; preds = %68, %56
  %69 = phi ptr [ %71, %68 ], [ %0, %56 ]
  tail call fastcc void @io_prep_async_work(ptr noundef nonnull %69) #21
  %70 = getelementptr inbounds %struct.io_kiocb, ptr %69, i32 0, i32 14
  %71 = load ptr, ptr %70, align 8
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %68

73:                                               ; preds = %68, %65, %56
  %74 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %75 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %74, i32 noundef 3264, i32 noundef 16) #25
  %76 = icmp eq ptr %75, null
  br i1 %76, label %50, label %77

77:                                               ; preds = %73
  tail call void @_raw_spin_lock(ptr noundef %16) #21
  %78 = load i32, ptr %17, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %89, label %81, !prof !10

81:                                               ; preds = %77
  %82 = load ptr, ptr %2, align 8
  %83 = getelementptr inbounds %struct.io_ring_ctx, ptr %82, i32 0, i32 10
  %84 = getelementptr inbounds %struct.io_ring_ctx, ptr %82, i32 0, i32 10, i32 4
  %85 = load volatile i32, ptr %84, align 8
  %86 = add i32 %85, %15
  %87 = load i32, ptr %83, align 64
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %81, %77
  %90 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5
  %91 = load volatile ptr, ptr %90, align 4
  %92 = icmp eq ptr %91, %90
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %94 = load i16, ptr %16, align 4
  %95 = add i16 %94, 1
  store i16 %95, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call void @kfree(ptr noundef nonnull %75) #21
  br label %40

96:                                               ; preds = %89, %81
  %97 = getelementptr inbounds %struct.io_kiocb, ptr %0, i32 0, i32 5
  %98 = load i64, ptr %97, align 8
  %99 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_defer, i32 0, i32 1), align 4
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %101, label %124

101:                                              ; preds = %96
  %102 = tail call ptr @llvm.thread.pointer() #21
  %103 = getelementptr inbounds %struct.thread_info, ptr %102, i32 0, i32 2
  %104 = load i32, ptr %103, align 8
  %105 = lshr i32 %104, 5
  %106 = getelementptr i32, ptr @__cpu_online_mask, i32 %105
  %107 = load volatile i32, ptr %106, align 4
  %108 = and i32 %104, 31
  %109 = shl nuw i32 1, %108
  %110 = and i32 %109, %107
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %124, label %112

112:                                              ; preds = %101
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !107
  %113 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_defer, i32 0, i32 7), align 4
  %114 = icmp eq ptr %113, null
  br i1 %114, label %123, label %115

115:                                              ; preds = %115, %112
  %116 = phi ptr [ %120, %115 ], [ %113, %112 ]
  %117 = load volatile ptr, ptr %116, align 4
  %118 = getelementptr inbounds %struct.tracepoint_func, ptr %116, i32 0, i32 1
  %119 = load ptr, ptr %118, align 4
  tail call void %117(ptr noundef %119, ptr noundef %3, ptr noundef %0, i64 noundef %98) #21
  %120 = getelementptr %struct.tracepoint_func, ptr %116, i32 1
  %121 = load ptr, ptr %120, align 4
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %115

123:                                              ; preds = %115, %112
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !108
  br label %124

124:                                              ; preds = %123, %101, %96
  %125 = getelementptr inbounds %struct.io_defer_entry, ptr %75, i32 0, i32 1
  store ptr %0, ptr %125, align 8
  %126 = getelementptr inbounds %struct.io_defer_entry, ptr %75, i32 0, i32 2
  store i32 %15, ptr %126, align 4
  %127 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5
  %128 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5, i32 1
  %129 = load ptr, ptr %128, align 4
  store ptr %75, ptr %128, align 4
  store ptr %127, ptr %75, align 8
  %130 = getelementptr inbounds %struct.list_head, ptr %75, i32 0, i32 1
  store ptr %129, ptr %130, align 4
  store volatile ptr %75, ptr %129, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %131 = load i16, ptr %16, align 4
  %132 = add i16 %131, 1
  store i16 %132, ptr %16, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  br label %133

133:                                              ; preds = %124, %50, %40
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_finish_plug(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_user_sigmask(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_wake_function(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #0 {
  %5 = getelementptr inbounds %struct.io_wait_queue, ptr %0, i32 0, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 10
  %8 = load i32, ptr %7, align 64
  %9 = getelementptr inbounds %struct.io_wait_queue, ptr %0, i32 0, i32 2
  %10 = load i32, ptr %9, align 4
  %11 = sub i32 %8, %10
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 10, i32 5
  %15 = load volatile i32, ptr %14, align 4
  %16 = getelementptr inbounds %struct.io_wait_queue, ptr %0, i32 0, i32 3
  %17 = load i32, ptr %16, align 4
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %6, i32 0, i32 8
  %21 = load volatile i32, ptr %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19, %13, %4
  %25 = tail call i32 @autoremove_wake_function(ptr noundef %0, i32 noundef %1, i32 noundef %2, ptr noundef %3) #21
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i32 [ %25, %24 ], [ -1, %19 ]
  ret i32 %27
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @prepare_to_wait_exclusive(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_run_task_work_sig() unnamed_addr #0 {
  %1 = tail call ptr @llvm.thread.pointer() #21
  %2 = load volatile i32, ptr %1, align 4
  %3 = and i32 %2, 256
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 102
  %7 = load ptr, ptr %6, align 4
  %8 = icmp eq ptr %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5, %0
  %10 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 1
  store volatile i32 0, ptr %10, align 8
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %1) #21
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %11 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 102
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %9
  tail call void @task_work_run() #21
  br label %28

15:                                               ; preds = %5
  %16 = load volatile i32, ptr %1, align 4
  %17 = and i32 %16, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23, !prof !10

19:                                               ; preds = %15
  %20 = load volatile i32, ptr %1, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %19, %15
  %24 = load volatile i32, ptr %1, align 4
  %25 = and i32 %24, 256
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 -4, i32 -512
  br label %28

28:                                               ; preds = %23, %19, %14, %9
  %29 = phi i32 [ 0, %19 ], [ %27, %23 ], [ 1, %9 ], [ 1, %14 ]
  ret i32 %29
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_hrtimeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__set_current_blocked(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_uring_poll(ptr noundef %0, ptr noundef %1) #0 {
  %3 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 10, i32 3
  %6 = icmp eq ptr %1, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = load ptr, ptr %1, align 4
  %9 = icmp ne ptr %8, null
  %10 = icmp ne ptr %5, null
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void %8(ptr noundef %0, ptr noundef nonnull %5, ptr noundef nonnull %1) #21
  br label %13

13:                                               ; preds = %12, %7, %2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !109
  %14 = getelementptr inbounds %struct.anon.178, ptr %4, i32 0, i32 1
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds %struct.io_uring, ptr %15, i32 0, i32 2
  %17 = load volatile i32, ptr %16, align 64
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 1, i32 3
  %19 = load i32, ptr %18, align 4
  %20 = sub i32 %17, %19
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 1, i32 4
  %22 = load i32, ptr %21, align 32
  %23 = icmp eq i32 %20, %22
  %24 = select i1 %23, i32 0, i32 260
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !31
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 10
  %26 = load i32, ptr %25, align 64
  %27 = load ptr, ptr %14, align 8
  %28 = getelementptr inbounds %struct.io_rings, ptr %27, i32 0, i32 1
  %29 = load volatile i32, ptr %28, align 64
  %30 = icmp eq i32 %26, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %13
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %4, i32 0, i32 8
  %33 = load volatile i32, ptr %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31, %13
  %37 = or i32 %24, 65
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i32 [ %37, %36 ], [ %24, %31 ]
  ret i32 %39
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal i32 @io_uring_mmap(ptr nocapture noundef readonly %0, ptr noundef %1) #4 {
  %3 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 1
  %4 = load i32, ptr %3, align 4
  %5 = load i32, ptr %1, align 4
  %6 = sub i32 %4, %5
  %7 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 13
  %8 = load i32, ptr %7, align 4
  %9 = zext i32 %8 to i44
  %10 = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 15
  %11 = load ptr, ptr %10, align 8
  %12 = shl nuw i44 %9, 12
  switch i44 %12, label %50 [
    i44 0, label %13
    i44 134217728, label %13
    i44 268435456, label %15
  ]

13:                                               ; preds = %2, %2
  %14 = getelementptr inbounds %struct.anon.178, ptr %11, i32 0, i32 1
  br label %17

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %11, i32 0, i32 1, i32 2
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi ptr [ %16, %15 ], [ %14, %13 ]
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr @mem_map, align 4
  %21 = ptrtoint ptr %19 to i32
  %22 = add i32 %21, 1073741824
  %23 = lshr i32 %22, 12
  %24 = getelementptr %struct.page, ptr %20, i32 %23, i32 1
  %25 = load volatile i32, ptr %24, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28, !prof !10

28:                                               ; preds = %17
  %29 = add i32 %25, -1
  br label %33

30:                                               ; preds = %17
  %31 = getelementptr %struct.page, ptr %20, i32 %23
  %32 = ptrtoint ptr %31 to i32
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi i32 [ %29, %28 ], [ %32, %30 ]
  %35 = inttoptr i32 %34 to ptr
  %36 = load volatile i32, ptr %35, align 4
  %37 = and i32 %36, 65536
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = getelementptr %struct.page, ptr %35, i32 1, i32 1
  %41 = getelementptr inbounds %struct.anon.13, ptr %40, i32 0, i32 2
  %42 = load i8, ptr %41, align 1
  %43 = zext i8 %42 to i32
  br label %44

44:                                               ; preds = %39, %33
  %45 = phi i32 [ %43, %39 ], [ 0, %33 ]
  %46 = shl i32 4096, %45
  %47 = icmp ult i32 %46, %6
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = icmp ugt ptr %19, inttoptr (i32 -4096 to ptr)
  br i1 %49, label %50, label %53

50:                                               ; preds = %48, %44, %2
  %51 = phi ptr [ %19, %48 ], [ inttoptr (i32 -22 to ptr), %2 ], [ inttoptr (i32 -22 to ptr), %44 ]
  %52 = ptrtoint ptr %51 to i32
  br label %59

53:                                               ; preds = %48
  %54 = tail call i32 asm "@ __pv_stub\0A1:\09add\09$0, $1, $2\0A2:\09add\09$0, $0, $3\0A\09.pushsection .pv_table,\22a\22\0A\09.long\091b - ., 2b - .\0A\09.popsection\0A", "=r,r,I,I"(i32 %21, i32 -2130706432, i32 8454144) #23, !srcloc !110
  %55 = lshr i32 %54, 12
  %56 = getelementptr inbounds %struct.vm_area_struct, ptr %1, i32 0, i32 7
  %57 = load i32, ptr %56, align 4
  %58 = tail call i32 @remap_pfn_range(ptr noundef %1, i32 noundef %5, i32 noundef %55, i32 noundef %6, i32 noundef %57) #21
  br label %59

59:                                               ; preds = %53, %50
  %60 = phi i32 [ %52, %50 ], [ %58, %53 ]
  ret i32 %60
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_uring_release(ptr nocapture noundef readnone %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  store ptr null, ptr %3, align 8
  tail call fastcc void @io_ring_ctx_wait_and_kill(ptr noundef %4) #22
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_uring_show_fdinfo(ptr noundef %0, ptr nocapture noundef readonly %1) #4 {
  %3 = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 15
  %4 = load ptr, ptr %3, align 8
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %5 = load volatile i32, ptr %4, align 4
  %6 = and i32 %5, 3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %17, !prof !10

8:                                                ; preds = %2
  %9 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %10 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %11 = inttoptr i32 %10 to ptr
  %12 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %11) #6, !srcloc !12
  %13 = add i32 %12, %5
  %14 = inttoptr i32 %13 to ptr
  %15 = load i32, ptr %14, align 4
  %16 = add i32 %15, 1
  store i32 %16, ptr %14, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %9) #21, !srcloc !22
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.percpu_ref, ptr %4, i32 0, i32 1
  %19 = load ptr, ptr %18, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %19) #21, !srcloc !13
  %20 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %19, ptr %19, i32 0, i32 1, ptr elementtype(i32) %19) #21, !srcloc !25
  %21 = extractvalue { i32, i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %25

24:                                               ; preds = %17
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %49

25:                                               ; preds = %23, %8
  tail call fastcc void @__io_uring_show_fdinfo(ptr noundef %4, ptr noundef %0) #22
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %26 = load volatile i32, ptr %4, align 4
  %27 = and i32 %26, 3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %38, !prof !10

29:                                               ; preds = %25
  %30 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %31 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %32 = inttoptr i32 %31 to ptr
  %33 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %32) #6, !srcloc !12
  %34 = add i32 %33, %26
  %35 = inttoptr i32 %34 to ptr
  %36 = load i32, ptr %35, align 4
  %37 = add i32 %36, -1
  store i32 %37, ptr %35, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %30) #21, !srcloc !22
  br label %48

38:                                               ; preds = %25
  %39 = getelementptr inbounds %struct.percpu_ref, ptr %4, i32 0, i32 1
  %40 = load ptr, ptr %39, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %40) #21, !srcloc !13
  %41 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %40, ptr %40, i32 1, ptr elementtype(i32) %40) #21, !srcloc !35
  %42 = extractvalue { i32, i32 } %41, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %48, !prof !11

44:                                               ; preds = %38
  %45 = load ptr, ptr %39, align 4
  %46 = getelementptr inbounds %struct.percpu_ref_data, ptr %45, i32 0, i32 1
  %47 = load ptr, ptr %46, align 4
  tail call void %47(ptr noundef %4) #21
  br label %48

48:                                               ; preds = %44, %38, %29
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %49

49:                                               ; preds = %48, %24
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @remap_pfn_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_ring_ctx_wait_and_kill(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #21
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %3) #21
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %0, ptr noundef null) #21
  %4 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = icmp eq ptr %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = tail call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %0, i1 noundef zeroext true)
  br label %9

9:                                                ; preds = %7, %1
  store i32 0, ptr %2, align 4
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 17
  %11 = call ptr @xa_find(ptr noundef %10, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %12 = icmp eq ptr %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %13, %9
  %14 = load i32, ptr %2, align 4
  %15 = call fastcc i32 @io_unregister_personality(ptr noundef %0, i32 noundef %14)
  %16 = call ptr @xa_find_after(ptr noundef %10, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %13

18:                                               ; preds = %13, %9
  call void @mutex_unlock(ptr noundef %3) #21
  %19 = call fastcc zeroext i1 @io_kill_timeouts(ptr noundef %0, ptr noundef null, i1 noundef zeroext true) #22
  %20 = call fastcc zeroext i1 @io_poll_remove_all(ptr noundef %0, ptr noundef null, i1 noundef zeroext true) #22
  call fastcc void @io_iopoll_try_reap_events(ptr noundef %0) #22
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 6
  store i32 -32, ptr %21, align 4
  %22 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 6, i32 1
  store volatile ptr %22, ptr %22, align 4
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 6, i32 1, i32 1
  store ptr %22, ptr %23, align 4
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 6, i32 2
  store ptr @io_ring_exit_work, ptr %24, align 4
  %25 = load ptr, ptr @system_unbound_wq, align 4
  %26 = call zeroext i1 @queue_work_on(i32 noundef 16, ptr noundef %25, ptr noundef %21) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_unregister_personality(ptr noundef %0, i32 noundef %1) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 17
  %4 = tail call ptr @xa_erase(ptr noundef %3, i32 noundef %1) #21
  %5 = icmp eq ptr %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %4) #21, !srcloc !13
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %4, ptr nonnull %4, i32 1, ptr nonnull elementtype(i32) %4) #21, !srcloc !35
  %8 = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @__put_cred(ptr noundef nonnull %4) #21
  br label %11

11:                                               ; preds = %10, %6, %2
  %12 = phi i32 [ -22, %2 ], [ 0, %6 ], [ 0, %10 ]
  ret i32 %12
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_ring_exit_work(ptr noundef %0) #4 {
  %2 = alloca %struct.io_tctx_exit, align 4
  %3 = getelementptr i8, ptr %0, i32 -604
  %4 = load volatile i32, ptr @jiffies, align 64
  %5 = add i32 %4, 30000
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %2) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(28) %2, i8 0, i32 28, i1 false), !annotation !9
  %6 = getelementptr i8, ptr %0, i32 -332
  %7 = getelementptr i8, ptr %0, i32 24
  br label %8

8:                                                ; preds = %35, %1
  %9 = phi i32 [ 5, %1 ], [ %36, %35 ]
  tail call fastcc void @io_uring_try_cancel_requests(ptr noundef %3, ptr noundef null, i1 noundef zeroext true)
  %10 = load ptr, ptr %6, align 16
  %11 = icmp eq ptr %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %8
  tail call fastcc void @io_sq_thread_park(ptr noundef nonnull %10)
  %13 = getelementptr inbounds %struct.io_sq_data, ptr %10, i32 0, i32 4
  %14 = load ptr, ptr %13, align 4
  %15 = icmp eq ptr %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 91
  %18 = load ptr, ptr %17, align 8
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.io_uring_task, ptr %18, i32 0, i32 4
  %22 = load ptr, ptr %21, align 8
  %23 = icmp eq ptr %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = tail call i32 @io_wq_cancel_cb(ptr noundef nonnull %22, ptr noundef nonnull @io_cancel_ctx_cb, ptr noundef %3, i1 noundef zeroext true) #21
  br label %26

26:                                               ; preds = %24, %20, %16, %12
  tail call fastcc void @io_sq_thread_unpark(ptr noundef nonnull %10)
  br label %27

27:                                               ; preds = %26, %8
  tail call fastcc void @io_req_caches_free(ptr noundef %3)
  %28 = load volatile i32, ptr @jiffies, align 64
  %29 = sub i32 %5, %28
  %30 = icmp slt i32 %29, 0
  %31 = load i1, ptr @io_ring_exit_work.__already_done, align 1
  %32 = xor i1 %31, true
  %33 = select i1 %30, i1 %32, i1 false
  br i1 %33, label %34, label %35, !prof !11

34:                                               ; preds = %27
  store i1 true, ptr @io_ring_exit_work.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9596, i32 noundef 9, ptr noundef null) #21
  br label %35

35:                                               ; preds = %34, %27
  %36 = select i1 %30, i32 6000, i32 %9
  %37 = tail call i32 @wait_for_completion_timeout(ptr noundef %7, i32 noundef %36) #21
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %8, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.io_tctx_exit, ptr %2, i32 0, i32 1
  store i32 0, ptr %40, align 4
  %41 = getelementptr inbounds %struct.io_tctx_exit, ptr %2, i32 0, i32 1, i32 1
  call void @__init_swait_queue_head(ptr noundef %41, ptr noundef nonnull @.str.83, ptr noundef nonnull @init_completion.__key) #21
  %42 = getelementptr inbounds %struct.callback_head, ptr %2, i32 0, i32 1
  store ptr @io_tctx_exit_cb, ptr %42, align 4
  %43 = getelementptr inbounds %struct.io_tctx_exit, ptr %2, i32 0, i32 2
  store ptr %3, ptr %43, align 4
  %44 = getelementptr i8, ptr %0, i32 -540
  call void @mutex_lock(ptr noundef %44) #21
  %45 = getelementptr i8, ptr %0, i32 16
  %46 = load volatile ptr, ptr %45, align 4
  %47 = icmp eq ptr %46, %45
  br i1 %47, label %84, label %48

48:                                               ; preds = %39
  %49 = getelementptr i8, ptr %0, i32 20
  br label %50

50:                                               ; preds = %81, %48
  %51 = phi ptr [ %46, %48 ], [ %82, %81 ]
  %52 = load volatile i32, ptr @jiffies, align 64
  %53 = sub i32 %5, %52
  %54 = icmp slt i32 %53, 0
  %55 = load i1, ptr @io_ring_exit_work.__already_done.81, align 1
  %56 = xor i1 %55, true
  %57 = select i1 %54, i1 %56, i1 false
  br i1 %57, label %58, label %60, !prof !11

58:                                               ; preds = %50
  store i1 true, ptr @io_ring_exit_work.__already_done.81, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9613, i32 noundef 9, ptr noundef null) #21
  %59 = load ptr, ptr %45, align 4
  br label %60

60:                                               ; preds = %58, %50
  %61 = phi ptr [ %59, %58 ], [ %51, %50 ]
  %62 = load volatile ptr, ptr %45, align 4
  %63 = icmp eq ptr %62, %45
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %66 = load ptr, ptr %65, align 4
  %67 = load ptr, ptr %62, align 4
  %68 = getelementptr inbounds %struct.list_head, ptr %67, i32 0, i32 1
  store ptr %66, ptr %68, align 4
  store volatile ptr %67, ptr %66, align 4
  %69 = load ptr, ptr %49, align 4
  store ptr %62, ptr %49, align 4
  store ptr %45, ptr %62, align 4
  store ptr %69, ptr %65, align 4
  store volatile ptr %62, ptr %69, align 4
  br label %70

70:                                               ; preds = %64, %60
  %71 = getelementptr inbounds %struct.io_tctx_node, ptr %61, i32 0, i32 1
  %72 = load ptr, ptr %71, align 4
  %73 = call i32 @task_work_add(ptr noundef %72, ptr noundef nonnull %2, i32 noundef 2) #21
  %74 = icmp ne i32 %73, 0
  %75 = load i1, ptr @io_ring_exit_work.__already_done.82, align 1
  %76 = xor i1 %75, true
  %77 = select i1 %74, i1 %76, i1 false
  br i1 %77, label %78, label %79, !prof !11

78:                                               ; preds = %70
  store i1 true, ptr @io_ring_exit_work.__already_done.82, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9620, i32 noundef 9, ptr noundef null) #21
  br label %79

79:                                               ; preds = %78, %70
  br i1 %74, label %81, label %80

80:                                               ; preds = %79
  call void @mutex_unlock(ptr noundef %44) #21
  call void @wait_for_completion(ptr noundef %40) #21
  call void @mutex_lock(ptr noundef %44) #21
  br label %81

81:                                               ; preds = %80, %79
  %82 = load volatile ptr, ptr %45, align 4
  %83 = icmp eq ptr %82, %45
  br i1 %83, label %84, label %50

84:                                               ; preds = %81, %39
  call void @mutex_unlock(ptr noundef %44) #21
  %85 = getelementptr i8, ptr %0, i32 -220
  call void @_raw_spin_lock(ptr noundef %85) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %86 = load i16, ptr %85, align 4
  %87 = add i16 %86, 1
  store i16 %87, ptr %85, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  call fastcc void @io_ring_ctx_free(ptr noundef %3) #22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %2) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_sq_thread_park(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = tail call ptr @llvm.thread.pointer() #21
  %5 = icmp eq ptr %3, %4
  %6 = load i1, ptr @io_sq_thread_park.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %1
  store i1 true, ptr @io_sq_thread_park.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8080, i32 noundef 9, ptr noundef null) #21
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %11) #21, !srcloc !13
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %11, ptr %11, i32 1, ptr elementtype(i32) %11) #21, !srcloc !14
  %13 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 1, ptr noundef %13) #21
  %14 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %14) #21
  %15 = load ptr, ptr %2, align 4
  %16 = icmp eq ptr %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = tail call i32 @wake_up_process(ptr noundef nonnull %15) #21
  br label %19

19:                                               ; preds = %17, %10
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_sq_thread_unpark(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 4
  %3 = load ptr, ptr %2, align 4
  %4 = tail call ptr @llvm.thread.pointer() #21
  %5 = icmp eq ptr %3, %4
  %6 = load i1, ptr @io_sq_thread_unpark.__already_done, align 1
  %7 = xor i1 %6, true
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %10, !prof !11

9:                                                ; preds = %1
  store i1 true, ptr @io_sq_thread_unpark.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8065, i32 noundef 9, ptr noundef null) #21
  br label %10

10:                                               ; preds = %9, %1
  %11 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %11) #21
  %12 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %12) #21, !srcloc !13
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %12, ptr %12, i32 1, ptr elementtype(i32) %12) #21, !srcloc !35
  %14 = extractvalue { i32, i32 } %13, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %10
  tail call void @_set_bit(i32 noundef 1, ptr noundef %11) #21
  br label %17

17:                                               ; preds = %16, %10
  %18 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 2
  tail call void @mutex_unlock(ptr noundef %18) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_req_caches_free(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 12
  tail call void @mutex_lock(ptr noundef %2) #21
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  tail call void @_raw_spin_lock(ptr noundef %4) #21
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 2
  %6 = load volatile ptr, ptr %5, align 4
  %7 = icmp eq ptr %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 4
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 2, i32 1
  %11 = load ptr, ptr %10, align 4
  store ptr %9, ptr %11, align 4
  %12 = load ptr, ptr %5, align 4
  store ptr %12, ptr %3, align 4
  store ptr null, ptr %5, align 4
  br label %13

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 3
  store i32 0, ptr %14, align 8
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %15 = load i16, ptr %4, align 4
  %16 = add i16 %15, 1
  store i16 %16, ptr %4, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %17 = load ptr, ptr %3, align 4
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %19, %13
  %20 = phi ptr [ %26, %19 ], [ %17, %13 ]
  %21 = phi i32 [ %25, %19 ], [ 0, %13 ]
  %22 = load ptr, ptr %20, align 4
  store ptr %22, ptr %3, align 4
  %23 = getelementptr i8, ptr %20, i32 -96
  %24 = load ptr, ptr @req_cachep, align 4
  tail call void @kmem_cache_free(ptr noundef %24, ptr noundef %23) #21
  %25 = add i32 %21, 1
  %26 = load ptr, ptr %3, align 4
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %19

28:                                               ; preds = %19
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %54, label %30

30:                                               ; preds = %28
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %31 = load volatile i32, ptr %0, align 4
  %32 = and i32 %31, 3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %43, !prof !10

34:                                               ; preds = %30
  %35 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %36 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %37 = inttoptr i32 %36 to ptr
  %38 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %37) #6, !srcloc !12
  %39 = add i32 %38, %31
  %40 = inttoptr i32 %39 to ptr
  %41 = load i32, ptr %40, align 4
  %42 = sub i32 %41, %25
  store i32 %42, ptr %40, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %35) #21, !srcloc !22
  br label %53

43:                                               ; preds = %30
  %44 = getelementptr inbounds %struct.percpu_ref, ptr %0, i32 0, i32 1
  %45 = load ptr, ptr %44, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %45) #21, !srcloc !13
  %46 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %45, ptr %45, i32 %25, ptr elementtype(i32) %45) #21, !srcloc !35
  %47 = extractvalue { i32, i32 } %46, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %53, !prof !11

49:                                               ; preds = %43
  %50 = load ptr, ptr %44, align 4
  %51 = getelementptr inbounds %struct.percpu_ref_data, ptr %50, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  tail call void %52(ptr noundef %0) #21
  br label %53

53:                                               ; preds = %49, %43, %34
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %54

54:                                               ; preds = %53, %28, %13
  tail call void @mutex_unlock(ptr noundef %2) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_tctx_exit_cb(ptr noundef %0) #4 {
  %2 = tail call ptr @llvm.thread.pointer() #21
  %3 = getelementptr inbounds %struct.task_struct, ptr %2, i32 0, i32 91
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr inbounds %struct.io_uring_task, ptr %4, i32 0, i32 7
  %6 = load volatile i32, ptr %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.io_tctx_exit, ptr %0, i32 0, i32 2
  %10 = load ptr, ptr %9, align 4
  %11 = ptrtoint ptr %10 to i32
  tail call fastcc void @io_uring_del_tctx_node(i32 noundef %11)
  br label %12

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %struct.io_tctx_exit, ptr %0, i32 0, i32 1
  tail call void @complete(ptr noundef %13) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_ring_ctx_free(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca i32, align 4
  tail call fastcc void @io_sq_thread_finish(ptr noundef %0)
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 3
  %5 = load ptr, ptr %4, align 4
  %6 = icmp eq ptr %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.anon.17, ptr %5, i32 0, i32 11
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %8) #21, !srcloc !13
  %9 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %8, ptr %8, i32 1, ptr elementtype(i32) %8) #21, !srcloc !35
  %10 = extractvalue { i32, i32 } %9, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13, !prof !11

12:                                               ; preds = %7
  tail call void @__mmdrop(ptr noundef nonnull %5) #21
  br label %13

13:                                               ; preds = %12, %7
  store ptr null, ptr %4, align 4
  br label %14

14:                                               ; preds = %13, %1
  tail call fastcc void @io_rsrc_refs_drop(ptr noundef %0) #22
  %15 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 3
  %17 = load ptr, ptr %16, align 4
  tail call fastcc void @io_wait_rsrc_data(ptr noundef %17)
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 2
  %19 = load ptr, ptr %18, align 8
  tail call fastcc void @io_wait_rsrc_data(ptr noundef %19)
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  tail call void @mutex_lock(ptr noundef %20) #21
  %21 = load ptr, ptr %16, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %14
  tail call fastcc void @__io_sqe_buffers_unregister(ptr noundef %0)
  br label %24

24:                                               ; preds = %23, %14
  %25 = load ptr, ptr %18, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  tail call fastcc void @__io_sqe_files_unregister(ptr noundef %0)
  br label %28

28:                                               ; preds = %27, %24
  %29 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 8
  %31 = icmp eq ptr %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = tail call fastcc zeroext i1 @__io_cqring_overflow_flush(ptr noundef %0, i1 noundef zeroext true)
  br label %34

34:                                               ; preds = %32, %28
  tail call void @mutex_unlock(ptr noundef %20) #21
  %35 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 2
  %36 = load ptr, ptr %35, align 8
  %37 = icmp eq ptr %36, null
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @eventfd_ctx_put(ptr noundef nonnull %36) #21
  store ptr null, ptr %35, align 8
  br label %39

39:                                               ; preds = %38, %34
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #21
  store i32 0, ptr %2, align 4
  %40 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 16
  %41 = call ptr @xa_find(ptr noundef %40, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %42 = icmp eq ptr %41, null
  br i1 %42, label %66, label %43

43:                                               ; preds = %63, %39
  %44 = phi ptr [ %64, %63 ], [ %41, %39 ]
  %45 = load i32, ptr %2, align 4
  %46 = load volatile ptr, ptr %44, align 4
  %47 = icmp eq ptr %46, %44
  br i1 %47, label %61, label %48

48:                                               ; preds = %56, %43
  %49 = phi ptr [ %59, %56 ], [ %46, %43 ]
  %50 = phi i32 [ %58, %56 ], [ 1, %43 ]
  %51 = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %52 = load ptr, ptr %51, align 4
  %53 = load ptr, ptr %49, align 4
  %54 = getelementptr inbounds %struct.list_head, ptr %53, i32 0, i32 1
  store ptr %52, ptr %54, align 4
  store volatile ptr %53, ptr %52, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %49, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %51, align 4
  call void @kfree(ptr noundef %49) #21
  %55 = icmp eq i32 %50, -1
  br i1 %55, label %63, label %56

56:                                               ; preds = %48
  %57 = call i32 @__cond_resched() #21
  %58 = add nuw i32 %50, 1
  %59 = load volatile ptr, ptr %44, align 4
  %60 = icmp eq ptr %59, %44
  br i1 %60, label %61, label %48

61:                                               ; preds = %56, %43
  call void @kfree(ptr noundef nonnull %44) #21
  %62 = call ptr @xa_erase(ptr noundef %40, i32 noundef %45) #21
  br label %63

63:                                               ; preds = %61, %48
  %64 = call ptr @xa_find_after(ptr noundef %40, ptr noundef nonnull %2, i32 noundef -1, i32 noundef 8) #21
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %43

66:                                               ; preds = %63, %39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #21
  %67 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 4
  %68 = load ptr, ptr %67, align 4
  %69 = icmp eq ptr %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %68) #21, !srcloc !13
  %71 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %68, ptr nonnull %68, i32 1, ptr nonnull elementtype(i32) %68) #21, !srcloc !35
  %72 = extractvalue { i32, i32 } %71, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  call void @__put_cred(ptr noundef nonnull %68) #21
  br label %75

75:                                               ; preds = %74, %70, %66
  %76 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 6
  %77 = load ptr, ptr %76, align 4
  %78 = icmp eq ptr %77, null
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  call void @percpu_ref_exit(ptr noundef nonnull %77) #21
  call void @kfree(ptr noundef nonnull %77) #21
  br label %80

80:                                               ; preds = %79, %75
  %81 = load ptr, ptr %15, align 16
  %82 = icmp eq ptr %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  call void @percpu_ref_exit(ptr noundef nonnull %81) #21
  call void @kfree(ptr noundef nonnull %81) #21
  br label %84

84:                                               ; preds = %83, %80
  %85 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 4
  %86 = call zeroext i1 @flush_delayed_work(ptr noundef %85) #21
  %87 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 5
  %88 = call zeroext i1 @flush_delayed_work(ptr noundef %87) #21
  %89 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 6
  %90 = load volatile ptr, ptr %89, align 4
  %91 = icmp ne ptr %90, %89
  %92 = load i1, ptr @io_ring_ctx_free.__already_done, align 1
  %93 = xor i1 %92, true
  %94 = select i1 %91, i1 %93, i1 false
  br i1 %94, label %95, label %96, !prof !11

95:                                               ; preds = %84
  store i1 true, ptr @io_ring_ctx_free.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9467, i32 noundef 9, ptr noundef null) #21
  br label %96

96:                                               ; preds = %95, %84
  %97 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 5
  %98 = load volatile ptr, ptr %97, align 4
  %99 = icmp eq ptr %98, null
  %100 = load i1, ptr @io_ring_ctx_free.__already_done.84, align 1
  %101 = select i1 %99, i1 true, i1 %100
  br i1 %101, label %103, label %102, !prof !10

102:                                              ; preds = %96
  store i1 true, ptr @io_ring_ctx_free.__already_done.84, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9468, i32 noundef 9, ptr noundef null) #21
  br label %103

103:                                              ; preds = %102, %96
  %104 = load ptr, ptr %3, align 4
  %105 = icmp eq ptr %104, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.socket, ptr %104, i32 0, i32 3
  store ptr null, ptr %107, align 4
  %108 = load ptr, ptr %3, align 4
  call void @sock_release(ptr noundef %108) #21
  br label %109

109:                                              ; preds = %106, %103
  %110 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 14
  %111 = load volatile ptr, ptr %110, align 4
  %112 = icmp ne ptr %111, %110
  %113 = load i1, ptr @io_ring_ctx_free.__already_done.85, align 1
  %114 = xor i1 %113, true
  %115 = select i1 %112, i1 %114, i1 false
  br i1 %115, label %116, label %117, !prof !11

116:                                              ; preds = %109
  store i1 true, ptr @io_ring_ctx_free.__already_done.85, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9476, i32 noundef 9, ptr noundef null) #21
  br label %117

117:                                              ; preds = %116, %109
  %118 = load ptr, ptr %29, align 8
  call fastcc void @io_mem_free(ptr noundef %118)
  %119 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 2
  %120 = load ptr, ptr %119, align 8
  call fastcc void @io_mem_free(ptr noundef %120)
  call void @percpu_ref_exit(ptr noundef %0) #21
  %121 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 2
  %122 = load ptr, ptr %121, align 4
  call void @free_uid(ptr noundef %122) #21
  call fastcc void @io_req_caches_free(ptr noundef %0)
  %123 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 1
  %124 = load ptr, ptr %123, align 4
  %125 = icmp eq ptr %124, null
  br i1 %125, label %134, label %126

126:                                              ; preds = %117
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %124) #21, !srcloc !13
  %127 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %124, ptr nonnull %124, i32 1, ptr nonnull elementtype(i32) %124) #21, !srcloc !50
  %128 = extractvalue { i32, i32, i32 } %127, 0
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = icmp sgt i32 %128, 0
  br i1 %131, label %134, label %132, !prof !10

132:                                              ; preds = %130
  call void @refcount_warn_saturate(ptr noundef nonnull %124, i32 noundef 3) #21
  br label %134

133:                                              ; preds = %126
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  call void @kfree(ptr noundef nonnull %124) #21
  br label %134

134:                                              ; preds = %133, %132, %130, %117
  %135 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 3
  %136 = load ptr, ptr %135, align 16
  call void @kfree(ptr noundef %136) #21
  %137 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %138 = load ptr, ptr %137, align 4
  call void @kfree(ptr noundef %138) #21
  call void @kfree(ptr noundef %0) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_sq_thread_finish(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 5
  %3 = load ptr, ptr %2, align 16
  %4 = icmp eq ptr %3, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 4
  %7 = load ptr, ptr %6, align 4
  %8 = tail call ptr @llvm.thread.pointer() #21
  %9 = icmp eq ptr %7, %8
  %10 = load i1, ptr @io_sq_thread_park.__already_done, align 1
  %11 = xor i1 %10, true
  %12 = select i1 %9, i1 %11, i1 false
  br i1 %12, label %13, label %14, !prof !11

13:                                               ; preds = %5
  store i1 true, ptr @io_sq_thread_park.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8080, i32 noundef 9, ptr noundef null) #21
  br label %14

14:                                               ; preds = %13, %5
  %15 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 1
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %15) #21, !srcloc !13
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %15, ptr %15, i32 1, ptr elementtype(i32) %15) #21, !srcloc !14
  %17 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 1, ptr noundef %17) #21
  %18 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %18) #21
  %19 = load ptr, ptr %6, align 4
  %20 = icmp eq ptr %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %14
  %22 = tail call i32 @wake_up_process(ptr noundef nonnull %19) #21
  br label %23

23:                                               ; preds = %21, %14
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 7
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 7, i32 1
  %26 = load ptr, ptr %25, align 4
  %27 = load ptr, ptr %24, align 4
  %28 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  store ptr %26, ptr %28, align 4
  store volatile ptr %27, ptr %26, align 4
  store volatile ptr %24, ptr %24, align 4
  store ptr %24, ptr %25, align 4
  %29 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 3
  %30 = load ptr, ptr %29, align 4
  %31 = icmp eq ptr %30, %29
  br i1 %31, label %40, label %32

32:                                               ; preds = %32, %23
  %33 = phi ptr [ %38, %32 ], [ %30, %23 ]
  %34 = phi i32 [ %37, %32 ], [ 0, %23 ]
  %35 = getelementptr i8, ptr %33, i32 -52
  %36 = load i32, ptr %35, align 4
  %37 = tail call i32 @llvm.umax.i32(i32 %34, i32 %36) #21
  %38 = load ptr, ptr %33, align 4
  %39 = icmp eq ptr %38, %29
  br i1 %39, label %40, label %32

40:                                               ; preds = %32, %23
  %41 = phi i32 [ 0, %23 ], [ %37, %32 ]
  %42 = getelementptr inbounds %struct.io_sq_data, ptr %3, i32 0, i32 6
  store i32 %41, ptr %42, align 4
  tail call fastcc void @io_sq_thread_unpark(ptr noundef nonnull %3)
  tail call fastcc void @io_put_sq_data(ptr noundef nonnull %3)
  store ptr null, ptr %2, align 16
  br label %43

43:                                               ; preds = %40, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_wait_rsrc_data(ptr noundef %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %4) #21, !srcloc !13
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %4, ptr %4, i32 1, ptr elementtype(i32) %4) #21, !srcloc !35
  %6 = extractvalue { i32, i32 } %5, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 5
  tail call void @wait_for_completion(ptr noundef %9) #21
  br label %10

10:                                               ; preds = %8, %3, %1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_sqe_buffers_unregister(ptr nocapture noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  %3 = load i32, ptr %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %50, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 2
  %9 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 3
  br label %10

10:                                               ; preds = %46, %5
  %11 = phi i32 [ 0, %5 ], [ %47, %46 ]
  %12 = load ptr, ptr %6, align 64
  %13 = getelementptr ptr, ptr %12, i32 %11
  %14 = load ptr, ptr %13, align 4
  %15 = load ptr, ptr %7, align 4
  %16 = icmp eq ptr %14, %15
  br i1 %16, label %46, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %14, i32 0, i32 2
  %19 = load i32, ptr %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %21, %17
  %22 = phi i32 [ %25, %21 ], [ 0, %17 ]
  %23 = getelementptr %struct.io_mapped_ubuf, ptr %14, i32 0, i32 4, i32 %22
  %24 = load ptr, ptr %23, align 4
  tail call void @unpin_user_page(ptr noundef %24) #21
  %25 = add nuw i32 %22, 1
  %26 = load i32, ptr %18, align 8
  %27 = icmp ult i32 %25, %26
  br i1 %27, label %21, label %28

28:                                               ; preds = %21, %17
  %29 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %14, i32 0, i32 3
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = load ptr, ptr %8, align 4
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.user_struct, ptr %33, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %36) #21, !srcloc !13
  %37 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %36, ptr %36, i32 %30, ptr elementtype(i32) %36) #21, !srcloc !16
  br label %38

38:                                               ; preds = %35, %32
  %39 = load ptr, ptr %9, align 4
  %40 = icmp eq ptr %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = zext i32 %30 to i64
  %43 = getelementptr inbounds %struct.anon.17, ptr %39, i32 0, i32 21
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %43) #21, !srcloc !13
  %44 = tail call { i64, i32 } asm sideeffect "@ atomic64_sub\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09subs ${0:Q}, ${0:Q}, ${4:Q}\0A\09sbc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %43, ptr %43, i64 %42, ptr elementtype(i64) %43) #21, !srcloc !88
  br label %45

45:                                               ; preds = %41, %38, %28
  tail call void @kvfree(ptr noundef %14) #21
  br label %46

46:                                               ; preds = %45, %10
  store ptr null, ptr %13, align 4
  %47 = add nuw i32 %11, 1
  %48 = load i32, ptr %2, align 4
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %10, label %50

50:                                               ; preds = %46, %1
  %51 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  %52 = load ptr, ptr %51, align 64
  tail call void @kfree(ptr noundef %52) #21
  %53 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 3
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.io_rsrc_data, ptr %54, i32 0, i32 1
  %56 = load ptr, ptr %55, align 4
  %57 = icmp eq ptr %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %struct.io_rsrc_data, ptr %54, i32 0, i32 2
  %60 = load i32, ptr %59, align 4
  %61 = shl i32 %60, 3
  %62 = add i32 %61, 4095
  %63 = icmp ult i32 %62, 4096
  br i1 %63, label %72, label %64

64:                                               ; preds = %58
  %65 = lshr i32 %62, 12
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i32 [ %70, %66 ], [ 0, %64 ]
  %68 = getelementptr ptr, ptr %56, i32 %67
  %69 = load ptr, ptr %68, align 4
  tail call void @kfree(ptr noundef %69) #21
  %70 = add nuw nsw i32 %67, 1
  %71 = icmp eq i32 %70, %65
  br i1 %71, label %72, label %66

72:                                               ; preds = %66, %58
  tail call void @kfree(ptr noundef nonnull %56) #21
  br label %73

73:                                               ; preds = %72, %50
  tail call void @kfree(ptr noundef %54) #21
  store ptr null, ptr %51, align 64
  store ptr null, ptr %53, align 4
  store i32 0, ptr %2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @__io_sqe_files_unregister(ptr nocapture noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.socket, ptr %3, i32 0, i32 4
  %7 = load ptr, ptr %6, align 16
  %8 = getelementptr inbounds %struct.sock, ptr %7, i32 0, i32 8
  %9 = tail call ptr @skb_dequeue(ptr noundef %8) #21
  %10 = icmp eq ptr %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %11, %5
  %12 = phi ptr [ %13, %11 ], [ %9, %5 ]
  tail call void @kfree_skb_reason(ptr noundef nonnull %12, i32 noundef 0) #21
  %13 = tail call ptr @skb_dequeue(ptr noundef %8) #21
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %5, %1
  %16 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  %17 = load ptr, ptr %16, align 4
  tail call void @kvfree(ptr noundef %17) #21
  store ptr null, ptr %16, align 4
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 2
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr inbounds %struct.io_rsrc_data, ptr %19, i32 0, i32 1
  %21 = load ptr, ptr %20, align 4
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %struct.io_rsrc_data, ptr %19, i32 0, i32 2
  %25 = load i32, ptr %24, align 4
  %26 = shl i32 %25, 3
  %27 = add i32 %26, 4095
  %28 = icmp ult i32 %27, 4096
  br i1 %28, label %37, label %29

29:                                               ; preds = %23
  %30 = lshr i32 %27, 12
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i32 [ %35, %31 ], [ 0, %29 ]
  %33 = getelementptr ptr, ptr %21, i32 %32
  %34 = load ptr, ptr %33, align 4
  tail call void @kfree(ptr noundef %34) #21
  %35 = add nuw nsw i32 %32, 1
  %36 = icmp eq i32 %35, %30
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %23
  tail call void @kfree(ptr noundef nonnull %21) #21
  br label %38

38:                                               ; preds = %37, %15
  tail call void @kfree(ptr noundef %19) #21
  store ptr null, ptr %18, align 8
  %39 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  store i32 0, ptr %39, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @flush_delayed_work(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sock_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_mem_free(ptr noundef %0) unnamed_addr #0 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr @mem_map, align 4
  %5 = ptrtoint ptr %0 to i32
  %6 = add i32 %5, 1073741824
  %7 = lshr i32 %6, 12
  %8 = getelementptr %struct.page, ptr %4, i32 %7, i32 1
  %9 = load volatile i32, ptr %8, align 4
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12, !prof !10

12:                                               ; preds = %3
  %13 = add i32 %9, -1
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr %struct.page, ptr %4, i32 %7
  %16 = ptrtoint ptr %15 to i32
  br label %17

17:                                               ; preds = %14, %12
  %18 = phi i32 [ %13, %12 ], [ %16, %14 ]
  %19 = inttoptr i32 %18 to ptr
  %20 = getelementptr inbounds %struct.page, ptr %19, i32 0, i32 3
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %20) #21, !srcloc !13
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 1, ptr elementtype(i32) %20) #21, !srcloc !35
  %22 = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  tail call void @free_compound_page(ptr noundef %19) #21
  br label %25

25:                                               ; preds = %24, %17, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_uid(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_put_sq_data(ptr noundef %0) unnamed_addr #0 {
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !49
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %0) #21, !srcloc !13
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %0, ptr %0, i32 1, ptr elementtype(i32) %0) #21, !srcloc !50
  %3 = extractvalue { i32, i32, i32 } %2, 0
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = icmp sgt i32 %3, 0
  br i1 %6, label %42, label %7, !prof !10

7:                                                ; preds = %5
  tail call void @refcount_warn_saturate(ptr noundef %0, i32 noundef 3) #21
  br label %42

8:                                                ; preds = %1
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !51
  %9 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 1
  %10 = load volatile i32, ptr %9, align 4
  %11 = icmp ne i32 %10, 0
  %12 = load i1, ptr @io_put_sq_data.__already_done, align 1
  %13 = xor i1 %12, true
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %15, label %16, !prof !11

15:                                               ; preds = %8
  store i1 true, ptr @io_put_sq_data.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8105, i32 noundef 9, ptr noundef null) #21
  br label %16

16:                                               ; preds = %15, %8
  %17 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 4
  %18 = load ptr, ptr %17, align 4
  %19 = tail call ptr @llvm.thread.pointer() #21
  %20 = icmp eq ptr %18, %19
  %21 = load i1, ptr @io_sq_thread_stop.__already_done, align 1
  %22 = xor i1 %21, true
  %23 = select i1 %20, i1 %22, i1 false
  br i1 %23, label %24, label %25, !prof !11

24:                                               ; preds = %16
  store i1 true, ptr @io_sq_thread_stop.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8091, i32 noundef 9, ptr noundef null) #21
  br label %25

25:                                               ; preds = %24, %16
  %26 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 10
  %27 = load volatile i32, ptr %26, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  %30 = load i1, ptr @io_sq_thread_stop.__already_done.86, align 1
  %31 = xor i1 %30, true
  %32 = select i1 %29, i1 %31, i1 false
  br i1 %32, label %33, label %34, !prof !11

33:                                               ; preds = %25
  store i1 true, ptr @io_sq_thread_stop.__already_done.86, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 8092, i32 noundef 9, ptr noundef null) #21
  br label %34

34:                                               ; preds = %33, %25
  tail call void @_set_bit(i32 noundef 0, ptr noundef %26) #21
  %35 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 2
  tail call void @mutex_lock(ptr noundef %35) #21
  %36 = load ptr, ptr %17, align 4
  %37 = icmp eq ptr %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  %39 = tail call i32 @wake_up_process(ptr noundef nonnull %36) #21
  br label %40

40:                                               ; preds = %38, %34
  tail call void @mutex_unlock(ptr noundef %35) #21
  %41 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 11
  tail call void @wait_for_completion(ptr noundef %41) #21
  tail call void @kfree(ptr noundef %0) #21
  br label %42

42:                                               ; preds = %40, %7, %5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mmdrop(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @io_rsrc_data_free(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 1
  %3 = load ptr, ptr %2, align 4
  %4 = icmp eq ptr %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 2
  %7 = load i32, ptr %6, align 4
  %8 = shl i32 %7, 3
  %9 = add i32 %8, 4095
  %10 = icmp ult i32 %9, 4096
  br i1 %10, label %19, label %11

11:                                               ; preds = %5
  %12 = lshr i32 %9, 12
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i32 [ %17, %13 ], [ 0, %11 ]
  %15 = getelementptr ptr, ptr %3, i32 %14
  %16 = load ptr, ptr %15, align 4
  tail call void @kfree(ptr noundef %16) #21
  %17 = add nuw nsw i32 %14, 1
  %18 = icmp eq i32 %17, %12
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  tail call void @kfree(ptr noundef nonnull %3) #21
  br label %20

20:                                               ; preds = %19, %1
  tail call void @kfree(ptr noundef %0) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_dequeue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @eventfd_ctx_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_compound_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @__io_uring_show_fdinfo(ptr noundef %0, ptr noundef %1) unnamed_addr #4 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 4
  %8 = load i32, ptr %7, align 32
  %9 = add i32 %8, -1
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10
  %11 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = add i32 %12, -1
  %14 = load volatile i32, ptr %5, align 64
  %15 = getelementptr inbounds %struct.io_uring, ptr %5, i32 0, i32 2
  %16 = load volatile i32, ptr %15, align 64
  %17 = getelementptr inbounds %struct.io_rings, ptr %5, i32 0, i32 1
  %18 = load volatile i32, ptr %17, align 64
  %19 = getelementptr inbounds %struct.io_rings, ptr %5, i32 0, i32 1, i32 2
  %20 = load volatile i32, ptr %19, align 64
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.87, i32 noundef %9) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.88, i32 noundef %14) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.89, i32 noundef %16) #21
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 3
  %22 = load i32, ptr %21, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.90, i32 noundef %22) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.91, i32 noundef %13) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.92, i32 noundef %18) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.93, i32 noundef %20) #21
  %23 = load i32, ptr %10, align 64
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.94, i32 noundef %23) #21
  %24 = load i32, ptr %21, align 4
  %25 = sub i32 %16, %24
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.95, i32 noundef %25) #21
  %26 = sub i32 %16, %14
  %27 = load i32, ptr %7, align 32
  %28 = tail call i32 @llvm.umin.i32(i32 %26, i32 %27)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 1
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 2
  br label %33

33:                                               ; preds = %53, %30
  %34 = phi i32 [ 0, %30 ], [ %54, %53 ]
  %35 = add i32 %34, %14
  %36 = load ptr, ptr %31, align 4
  %37 = and i32 %35, %9
  %38 = getelementptr i32, ptr %36, i32 %37
  %39 = load volatile i32, ptr %38, align 4
  %40 = icmp ugt i32 %39, %9
  br i1 %40, label %53, label %41

41:                                               ; preds = %33
  %42 = load ptr, ptr %32, align 8
  %43 = getelementptr %struct.io_uring_sqe, ptr %42, i32 %39
  %44 = load i8, ptr %43, align 8
  %45 = zext i8 %44 to i32
  %46 = getelementptr %struct.io_uring_sqe, ptr %42, i32 %39, i32 3
  %47 = load i32, ptr %46, align 4
  %48 = getelementptr %struct.io_uring_sqe, ptr %42, i32 %39, i32 1
  %49 = load i8, ptr %48, align 1
  %50 = zext i8 %49 to i32
  %51 = getelementptr %struct.io_uring_sqe, ptr %42, i32 %39, i32 8
  %52 = load i64, ptr %51, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.96, i32 noundef %39, i32 noundef %45, i32 noundef %47, i32 noundef %50, i64 noundef %52) #21
  br label %53

53:                                               ; preds = %41, %33
  %54 = add nuw i32 %34, 1
  %55 = icmp eq i32 %54, %28
  br i1 %55, label %56, label %33

56:                                               ; preds = %53, %2
  %57 = sub i32 %20, %18
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.97, i32 noundef %57) #21
  %58 = load i32, ptr %11, align 4
  %59 = tail call i32 @llvm.umin.i32(i32 %57, i32 %58)
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %61, %56
  %62 = phi i32 [ %71, %61 ], [ 0, %56 ]
  %63 = add i32 %62, %18
  %64 = and i32 %63, %13
  %65 = getelementptr %struct.io_rings, ptr %5, i32 0, i32 11, i32 %64
  %66 = load i64, ptr %65, align 8
  %67 = getelementptr %struct.io_rings, ptr %5, i32 0, i32 11, i32 %64, i32 1
  %68 = load i32, ptr %67, align 8
  %69 = getelementptr %struct.io_rings, ptr %5, i32 0, i32 11, i32 %64, i32 2
  %70 = load i32, ptr %69, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.98, i32 noundef %64, i64 noundef %66, i32 noundef %68, i32 noundef %70) #21
  %71 = add nuw i32 %62, 1
  %72 = icmp eq i32 %71, %59
  br i1 %72, label %73, label %61

73:                                               ; preds = %61, %56
  %74 = tail call i32 @mutex_trylock(ptr noundef %6) #21
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %95, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %78 = load i32, ptr %77, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %95, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 5
  %83 = load ptr, ptr %82, align 16
  %84 = getelementptr inbounds %struct.io_sq_data, ptr %83, i32 0, i32 4
  %85 = load ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, null
  %87 = icmp eq ptr %83, null
  %88 = select i1 %86, i1 true, i1 %87
  br i1 %88, label %95, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %struct.task_struct, ptr %85, i32 0, i32 52
  %91 = load i32, ptr %90, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.99, i32 noundef %91) #21
  %92 = load ptr, ptr %84, align 4
  %93 = getelementptr inbounds %struct.thread_info, ptr %92, i32 0, i32 2
  %94 = load volatile i32, ptr %93, align 8
  br label %96

95:                                               ; preds = %81, %76, %73
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.99, i32 noundef -1) #21
  br label %96

96:                                               ; preds = %95, %89
  %97 = phi i32 [ %94, %89 ], [ -1, %95 ]
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.100, i32 noundef %97) #21
  %98 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  %99 = load i32, ptr %98, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.101, i32 noundef %99) #21
  br i1 %75, label %100, label %103

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  %102 = load i32, ptr %101, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.104, i32 noundef %102) #21
  br label %172

103:                                              ; preds = %96
  %104 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  %105 = load i32, ptr %98, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %137, label %107

107:                                              ; preds = %133, %103
  %108 = phi i32 [ %134, %133 ], [ 0, %103 ]
  %109 = load ptr, ptr %104, align 4
  %110 = getelementptr %struct.io_fixed_file, ptr %109, i32 %108
  %111 = load i32, ptr %110, align 4
  %112 = and i32 %111, -4
  %113 = inttoptr i32 %112 to ptr
  %114 = icmp eq i32 %112, 0
  br i1 %114, label %132, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %struct.file, ptr %113, i32 0, i32 1, i32 1
  %117 = load ptr, ptr %116, align 4
  %118 = load i32, ptr %117, align 8
  %119 = and i32 %118, 67108864
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %129, label %121, !prof !10

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct.file, ptr %113, i32 0, i32 2
  %123 = load ptr, ptr %122, align 8
  %124 = getelementptr inbounds %struct.dentry, ptr %117, i32 0, i32 8
  %125 = load ptr, ptr %124, align 8
  %126 = getelementptr inbounds %struct.dentry_operations, ptr %125, i32 0, i32 12
  %127 = load ptr, ptr %126, align 16
  %128 = tail call ptr %127(ptr noundef %117, ptr noundef %123) #21
  br label %129

129:                                              ; preds = %121, %115
  %130 = phi ptr [ %128, %121 ], [ %117, %115 ]
  %131 = getelementptr inbounds %struct.dentry, ptr %130, i32 0, i32 6
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.102, i32 noundef %108, ptr noundef %131) #21
  br label %133

132:                                              ; preds = %107
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.103, i32 noundef %108) #21
  br label %133

133:                                              ; preds = %132, %129
  %134 = add nuw i32 %108, 1
  %135 = load i32, ptr %98, align 8
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %107, label %137

137:                                              ; preds = %133, %103
  %138 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  %139 = load i32, ptr %138, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.104, i32 noundef %139) #21
  br i1 %75, label %172, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  %142 = load i32, ptr %138, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %144, %140
  %145 = phi i32 [ %154, %144 ], [ 0, %140 ]
  %146 = load ptr, ptr %141, align 64
  %147 = getelementptr ptr, ptr %146, i32 %145
  %148 = load ptr, ptr %147, align 4
  %149 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %148, i32 0, i32 1
  %150 = load i64, ptr %149, align 8
  %151 = load i64, ptr %148, align 8
  %152 = sub i64 %150, %151
  %153 = trunc i64 %152 to i32
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.105, i32 noundef %145, i64 noundef %151, i32 noundef %153) #21
  %154 = add nuw i32 %145, 1
  %155 = load i32, ptr %138, align 4
  %156 = icmp ult i32 %154, %155
  br i1 %156, label %144, label %157

157:                                              ; preds = %144, %140
  %158 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 17
  %159 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 17, i32 2
  %160 = load ptr, ptr %159, align 4
  %161 = icmp eq ptr %160, null
  br i1 %161, label %171, label %162

162:                                              ; preds = %157
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.106) #21
  store i32 0, ptr %3, align 4
  %163 = call ptr @xa_find(ptr noundef %158, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 8) #21
  %164 = icmp eq ptr %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %165, %162
  %166 = phi ptr [ %168, %165 ], [ %163, %162 ]
  %167 = load i32, ptr %3, align 4
  call fastcc void @io_uring_show_cred(ptr noundef %1, i32 noundef %167, ptr noundef nonnull %166) #22
  %168 = call ptr @xa_find_after(ptr noundef %158, ptr noundef nonnull %3, i32 noundef -1, i32 noundef 8) #21
  %169 = icmp eq ptr %168, null
  br i1 %169, label %170, label %165

170:                                              ; preds = %165, %162
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  br label %171

171:                                              ; preds = %170, %157
  call void @mutex_unlock(ptr noundef %6) #21
  br label %172

172:                                              ; preds = %171, %137, %100
  call void @seq_puts(ptr noundef %1, ptr noundef nonnull @.str.107) #21
  %173 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11
  call void @_raw_spin_lock(ptr noundef %173) #21
  %174 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 4
  %175 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 11, i32 3
  br label %176

176:                                              ; preds = %202, %172
  %177 = phi i32 [ 0, %172 ], [ %203, %202 ]
  %178 = load ptr, ptr %175, align 16
  %179 = getelementptr %struct.hlist_head, ptr %178, i32 %177
  %180 = load ptr, ptr %179, align 4
  %181 = icmp eq ptr %180, null
  %182 = getelementptr i8, ptr %180, i32 -116
  %183 = icmp eq ptr %182, null
  %184 = or i1 %181, %183
  br i1 %184, label %202, label %185

185:                                              ; preds = %185, %176
  %186 = phi ptr [ %199, %185 ], [ %182, %176 ]
  %187 = getelementptr inbounds %struct.io_kiocb, ptr %186, i32 0, i32 1
  %188 = load i8, ptr %187, align 8
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds %struct.io_kiocb, ptr %186, i32 0, i32 9
  %191 = load ptr, ptr %190, align 4
  %192 = getelementptr inbounds %struct.task_struct, ptr %191, i32 0, i32 102
  %193 = load ptr, ptr %192, align 4
  %194 = icmp ne ptr %193, null
  %195 = zext i1 %194 to i32
  call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.108, i32 noundef %189, i32 noundef %195) #21
  %196 = getelementptr inbounds %struct.io_kiocb, ptr %186, i32 0, i32 16
  %197 = load ptr, ptr %196, align 4
  %198 = icmp eq ptr %197, null
  %199 = getelementptr i8, ptr %197, i32 -116
  %200 = icmp eq ptr %199, null
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %185

202:                                              ; preds = %185, %176
  %203 = add i32 %177, 1
  %204 = load i32, ptr %174, align 4
  %205 = lshr i32 %203, %204
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %176, label %207

207:                                              ; preds = %202
  call void @seq_puts(ptr noundef %1, ptr noundef nonnull @.str.109) #21
  %208 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 15
  %209 = load ptr, ptr %208, align 8
  %210 = icmp eq ptr %209, %208
  br i1 %210, label %221, label %211

211:                                              ; preds = %211, %207
  %212 = phi ptr [ %219, %211 ], [ %209, %207 ]
  %213 = getelementptr i8, ptr %212, i32 -16
  %214 = load i64, ptr %213, align 8
  %215 = getelementptr i8, ptr %212, i32 -8
  %216 = load i32, ptr %215, align 8
  %217 = getelementptr i8, ptr %212, i32 -4
  %218 = load i32, ptr %217, align 4
  call void (ptr, ptr, ...) @seq_printf(ptr noundef %1, ptr noundef nonnull @.str.110, i64 noundef %214, i32 noundef %216, i32 noundef %218) #21
  %219 = load ptr, ptr %212, align 8
  %220 = icmp eq ptr %219, %208
  br i1 %220, label %221, label %211

221:                                              ; preds = %211, %207
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %222 = load i16, ptr %173, align 4
  %223 = add i16 %222, 1
  store i16 %223, ptr %173, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc void @io_uring_show_cred(ptr noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #4 {
  %4 = alloca %struct.kernel_cap_struct, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %0, ptr noundef nonnull @.str.111, i32 noundef %1) #21
  %5 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 1
  %6 = load i32, ptr %5, align 4
  %7 = icmp eq i32 %6, -1
  %8 = load i32, ptr @overflowuid, align 4
  %9 = select i1 %7, i32 %8, i32 %6
  %10 = zext i32 %9 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.112, i64 noundef %10) #21
  %11 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 5
  %12 = load i32, ptr %11, align 4
  %13 = icmp eq i32 %12, -1
  %14 = load i32, ptr @overflowuid, align 4
  %15 = select i1 %13, i32 %14, i32 %12
  %16 = zext i32 %15 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %16) #21
  %17 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq i32 %18, -1
  %20 = load i32, ptr @overflowuid, align 4
  %21 = select i1 %19, i32 %20, i32 %18
  %22 = zext i32 %21 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %22) #21
  %23 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 7
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq i32 %24, -1
  %26 = load i32, ptr @overflowuid, align 4
  %27 = select i1 %25, i32 %26, i32 %24
  %28 = zext i32 %27 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %28) #21
  %29 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 2
  %30 = load i32, ptr %29, align 4
  %31 = icmp eq i32 %30, -1
  %32 = load i32, ptr @overflowgid, align 4
  %33 = select i1 %31, i32 %32, i32 %30
  %34 = zext i32 %33 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.114, i64 noundef %34) #21
  %35 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 6
  %36 = load i32, ptr %35, align 4
  %37 = icmp eq i32 %36, -1
  %38 = load i32, ptr @overflowgid, align 4
  %39 = select i1 %37, i32 %38, i32 %36
  %40 = zext i32 %39 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %40) #21
  %41 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 4
  %42 = load i32, ptr %41, align 4
  %43 = icmp eq i32 %42, -1
  %44 = load i32, ptr @overflowgid, align 4
  %45 = select i1 %43, i32 %44, i32 %42
  %46 = zext i32 %45 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %46) #21
  %47 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 8
  %48 = load i32, ptr %47, align 4
  %49 = icmp eq i32 %48, -1
  %50 = load i32, ptr @overflowgid, align 4
  %51 = select i1 %49, i32 %50, i32 %48
  %52 = zext i32 %51 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull @.str.113, i64 noundef %52) #21
  tail call void @seq_puts(ptr noundef %0, ptr noundef nonnull @.str.115) #21
  %53 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 23
  %54 = load ptr, ptr %53, align 4
  %55 = getelementptr inbounds %struct.group_info, ptr %54, i32 0, i32 1
  %56 = load i32, ptr %55, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %58, %3
  %59 = phi i32 [ %68, %58 ], [ 0, %3 ]
  %60 = icmp eq i32 %59, 0
  %61 = select i1 %60, ptr @.str.117, ptr @.str.116
  %62 = getelementptr %struct.group_info, ptr %54, i32 0, i32 2, i32 %59
  %63 = load i32, ptr %62, align 4
  %64 = icmp eq i32 %63, -1
  %65 = load i32, ptr @overflowgid, align 4
  %66 = select i1 %64, i32 %65, i32 %63
  %67 = zext i32 %66 to i64
  tail call void @seq_put_decimal_ull(ptr noundef %0, ptr noundef nonnull %61, i64 noundef %67) #21
  %68 = add nuw nsw i32 %59, 1
  %69 = load i32, ptr %55, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %58, label %71

71:                                               ; preds = %58, %3
  tail call void @seq_puts(ptr noundef %0, ptr noundef nonnull @.str.118) #21
  %72 = getelementptr inbounds %struct.cred, ptr %2, i32 0, i32 12
  %73 = load i64, ptr %72, align 4
  store i64 %73, ptr %4, align 8
  %74 = getelementptr inbounds [2 x i32], ptr %4, i32 0, i32 1
  %75 = load i32, ptr %74, align 4
  %76 = zext i32 %75 to i64
  tail call void @seq_put_hex_ll(ptr noundef %0, ptr noundef null, i64 noundef %76, i32 noundef 8) #21
  %77 = load i32, ptr %4, align 8
  %78 = zext i32 %77 to i64
  tail call void @seq_put_hex_ll(ptr noundef %0, ptr noundef null, i64 noundef %78, i32 noundef 8) #21
  tail call void @seq_putc(ptr noundef %0, i8 noundef zeroext 10) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_put_decimal_ull(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_put_hex_ll(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_putc(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_uring_create(i32 noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #4 {
  %4 = icmp eq i32 %0, 0
  br i1 %4, label %126, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i32 %0, 32768
  br i1 %6, label %7, label %12

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 2
  %9 = load i32, ptr %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %126, label %12

12:                                               ; preds = %7, %5
  %13 = phi i32 [ %0, %5 ], [ 32768, %7 ]
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i32 %14, 0
  %16 = tail call i32 @llvm.ctlz.i32(i32 %14, i1 false) #21, !range !111
  %17 = sub nuw nsw i32 32, %16
  %18 = shl nuw i32 1, %17
  %19 = select i1 %15, i32 1, i32 %18
  store i32 %19, ptr %1, align 8
  %20 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 2
  %21 = load i32, ptr %20, align 8
  %22 = and i32 %21, 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %126, label %28

28:                                               ; preds = %24
  %29 = icmp ugt i32 %26, 65536
  br i1 %29, label %30, label %33

30:                                               ; preds = %28
  %31 = and i32 %21, 16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %126, label %33

33:                                               ; preds = %30, %28
  %34 = phi i32 [ %26, %28 ], [ 65536, %30 ]
  %35 = add nsw i32 %34, -1
  %36 = icmp eq i32 %35, 0
  %37 = tail call i32 @llvm.ctlz.i32(i32 %35, i1 false) #21, !range !111
  %38 = sub nuw nsw i32 32, %37
  %39 = shl nuw i32 1, %38
  %40 = select i1 %36, i32 1, i32 %39
  store i32 %40, ptr %25, align 4
  %41 = icmp ult i32 %40, %19
  br i1 %41, label %126, label %45

42:                                               ; preds = %12
  %43 = shl i32 %19, 1
  %44 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 1
  store i32 %43, ptr %44, align 4
  br label %45

45:                                               ; preds = %42, %33
  %46 = tail call fastcc ptr @io_ring_ctx_alloc(ptr noundef %1) #22
  %47 = icmp eq ptr %46, null
  br i1 %47, label %126, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.anon.178, ptr %46, i32 0, i32 3
  %50 = load i8, ptr %49, align 16
  %51 = and i8 %50, -2
  store i8 %51, ptr %49, align 16
  %52 = tail call zeroext i1 @capable(i32 noundef 14) #21
  %53 = tail call ptr @llvm.thread.pointer() #21
  br i1 %52, label %61, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.task_struct, ptr %53, i32 0, i32 83
  %56 = load ptr, ptr %55, align 8
  %57 = getelementptr inbounds %struct.cred, ptr %56, i32 0, i32 20
  %58 = load ptr, ptr %57, align 4
  %59 = tail call fastcc ptr @get_uid(ptr noundef %58)
  %60 = getelementptr inbounds %struct.io_ring_ctx, ptr %46, i32 0, i32 14, i32 2
  store ptr %58, ptr %60, align 4
  br label %61

61:                                               ; preds = %54, %48
  %62 = getelementptr inbounds %struct.task_struct, ptr %53, i32 0, i32 37
  %63 = load ptr, ptr %62, align 4
  %64 = getelementptr inbounds %struct.anon.17, ptr %63, i32 0, i32 11
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %64) #21, !srcloc !13
  %65 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %64, ptr %64, i32 1, ptr elementtype(i32) %64) #21, !srcloc !14
  %66 = load ptr, ptr %62, align 4
  %67 = getelementptr inbounds %struct.io_ring_ctx, ptr %46, i32 0, i32 14, i32 3
  store ptr %66, ptr %67, align 4
  %68 = tail call fastcc i32 @io_allocate_scq_urings(ptr noundef nonnull %46, ptr noundef %1) #22
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %124

70:                                               ; preds = %61
  %71 = tail call fastcc i32 @io_sq_offload_create(ptr noundef nonnull %46, ptr noundef %1) #22
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %124

73:                                               ; preds = %70
  %74 = tail call fastcc i32 @io_rsrc_node_switch_start(ptr noundef nonnull %46)
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %124

76:                                               ; preds = %73
  tail call fastcc void @io_rsrc_node_switch(ptr noundef nonnull %46, ptr noundef null)
  %77 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8
  %78 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 1
  call void @llvm.memset.p0.i64(ptr noundef align 8 dereferenceable(40) %77, i8 0, i64 40, i1 false)
  store i32 64, ptr %78, align 4
  %79 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 2
  store i32 256, ptr %79, align 8
  %80 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 3
  store i32 264, ptr %80, align 4
  %81 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 4
  store i32 276, ptr %81, align 8
  %82 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 5
  store i32 272, ptr %82, align 4
  %83 = getelementptr inbounds %struct.io_ring_ctx, ptr %46, i32 0, i32 1, i32 1
  %84 = load ptr, ptr %83, align 4
  %85 = getelementptr inbounds %struct.anon.178, ptr %46, i32 0, i32 1
  %86 = load ptr, ptr %85, align 8
  %87 = ptrtoint ptr %84 to i32
  %88 = ptrtoint ptr %86 to i32
  %89 = sub i32 %87, %88
  %90 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 8, i32 6
  store i32 %89, ptr %90, align 8
  %91 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9
  %92 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 6
  tail call void @llvm.memset.p0.i32(ptr noundef align 8 dereferenceable(40) %92, i8 0, i32 16, i1 false)
  store i32 128, ptr %91, align 8
  %93 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 1
  store i32 192, ptr %93, align 4
  %94 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 2
  store i32 260, ptr %94, align 8
  %95 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 3
  store i32 268, ptr %95, align 4
  %96 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 4
  store i32 284, ptr %96, align 8
  %97 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 5
  store i32 320, ptr %97, align 4
  %98 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 9, i32 6
  store i32 280, ptr %98, align 8
  %99 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 5
  store i32 4095, ptr %99, align 4
  %100 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %2, i32 120, i32 -1090519040) #23, !srcloc !112
  %101 = extractvalue { i32, i32 } %100, 0
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %124

103:                                              ; preds = %76
  %104 = getelementptr inbounds %struct.thread_info, ptr %53, i32 0, i32 3
  %105 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %104) #6, !srcloc !28
  %106 = and i32 %105, -13
  %107 = or i32 %106, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %107) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %108 = tail call i32 @arm_copy_to_user(ptr noundef %2, ptr noundef %1, i32 noundef 120) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %105) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %103
  %111 = tail call fastcc ptr @io_uring_get_file(ptr noundef nonnull %46)
  %112 = icmp ugt ptr %111, inttoptr (i32 -4096 to ptr)
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = ptrtoint ptr %111 to i32
  br label %124

115:                                              ; preds = %110
  %116 = tail call fastcc i32 @io_uring_install_fd(ptr noundef nonnull %46, ptr noundef %111)
  %117 = icmp slt i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @fput(ptr noundef %111) #21
  br label %126

119:                                              ; preds = %115
  %120 = load i32, ptr %1, align 8
  %121 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 1
  %122 = load i32, ptr %121, align 4
  %123 = load i32, ptr %20, align 8
  tail call fastcc void @trace_io_uring_create(i32 noundef %116, ptr noundef nonnull %46, i32 noundef %120, i32 noundef %122, i32 noundef %123)
  br label %126

124:                                              ; preds = %113, %103, %76, %73, %70, %61
  %125 = phi i32 [ %68, %61 ], [ %71, %70 ], [ %74, %73 ], [ %114, %113 ], [ -14, %103 ], [ -14, %76 ]
  tail call fastcc void @io_ring_ctx_wait_and_kill(ptr noundef nonnull %46) #22
  br label %126

126:                                              ; preds = %124, %119, %118, %45, %33, %30, %24, %7, %3
  %127 = phi i32 [ %125, %124 ], [ %116, %118 ], [ %116, %119 ], [ -22, %3 ], [ -22, %7 ], [ -22, %24 ], [ -22, %30 ], [ -22, %33 ], [ -12, %45 ]
  ret i32 %127
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc ptr @io_ring_ctx_alloc(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %3 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 704) #25
  %4 = icmp eq ptr %3, null
  br i1 %4, label %78, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.io_uring_params, ptr %0, i32 0, i32 1
  %7 = load i32, ptr %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #21, !range !111
  %10 = sub nsw i32 31, %9
  %11 = call i32 @llvm.smax.i32(i32 %10, i32 6)
  %12 = add nsw i32 %11, -5
  %13 = select i1 %8, i32 1, i32 %12
  %14 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11
  %15 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11, i32 4
  store i32 %13, ptr %15, align 4
  %16 = shl i32 4, %13
  %17 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %16, i32 noundef 3264) #26
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11, i32 3
  store ptr %17, ptr %18, align 16
  %19 = icmp eq ptr %17, null
  br i1 %19, label %74, label %20

20:                                               ; preds = %5
  tail call void @llvm.memset.p0.i32(ptr nonnull align 64 %17, i8 0, i32 %16, i1 false) #21
  %21 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %22 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %21, i32 noundef 3520, i32 noundef 24) #25
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 1
  store ptr %22, ptr %23, align 4
  %24 = icmp eq ptr %22, null
  br i1 %24, label %74, label %25

25:                                               ; preds = %20
  store i64 4294967295, ptr %22, align 8
  %26 = tail call i32 @percpu_ref_init(ptr noundef nonnull %3, ptr noundef nonnull @io_ring_ctx_ref_free, i32 noundef 4, i32 noundef 3264) #21
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %74

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.io_uring_params, ptr %0, i32 0, i32 2
  %30 = load i32, ptr %29, align 8
  %31 = getelementptr inbounds %struct.anon.178, ptr %3, i32 0, i32 2
  store i32 %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 6
  tail call void @__init_waitqueue_head(ptr noundef %32, ptr noundef nonnull @.str.119, ptr noundef nonnull @io_ring_ctx_alloc.__key) #21
  %33 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 7
  store volatile ptr %33, ptr %33, align 8
  %34 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 7, i32 1
  store ptr %33, ptr %34, align 4
  %35 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1
  %36 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 15
  store volatile ptr %36, ptr %36, align 8
  %37 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 15, i32 1
  store ptr %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 8
  store i32 0, ptr %38, align 4
  %39 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 8, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %39, ptr noundef nonnull @.str.83, ptr noundef nonnull @init_completion.__key) #21
  %40 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 16
  store i32 0, ptr %40, align 8
  %41 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 16, i32 1
  store i32 12, ptr %41, align 4
  %42 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 16, i32 2
  store ptr null, ptr %42, align 8
  %43 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 17
  store i32 0, ptr %43, align 4
  %44 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 17, i32 1
  store i32 12, ptr %44, align 8
  %45 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 17, i32 2
  store ptr null, ptr %45, align 4
  tail call void @__mutex_init(ptr noundef %35, ptr noundef nonnull @.str.121, ptr noundef nonnull @io_ring_ctx_alloc.__key.120) #21
  %46 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 10, i32 3
  tail call void @__init_waitqueue_head(ptr noundef %46, ptr noundef nonnull @.str.123, ptr noundef nonnull @io_ring_ctx_alloc.__key.122) #21
  store i32 0, ptr %14, align 64
  %47 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11, i32 1
  store i32 0, ptr %47, align 4
  %48 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 11, i32 2
  store ptr null, ptr %48, align 8
  %49 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5
  store volatile ptr %49, ptr %49, align 4
  %50 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 5, i32 1
  store ptr %49, ptr %50, align 8
  %51 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 13
  store volatile ptr %51, ptr %51, align 8
  %52 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 13, i32 1
  store ptr %51, ptr %52, align 4
  %53 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 14
  store volatile ptr %53, ptr %53, align 8
  %54 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 14, i32 1
  store ptr %53, ptr %54, align 4
  %55 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 7
  store i32 0, ptr %55, align 8
  %56 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 6
  store volatile ptr %56, ptr %56, align 8
  %57 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 6, i32 1
  store ptr %56, ptr %57, align 4
  %58 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 4
  store i32 -32, ptr %58, align 16
  %59 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 4, i32 0, i32 1
  store volatile ptr %59, ptr %59, align 4
  %60 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 4, i32 0, i32 1, i32 1
  store ptr %59, ptr %60, align 8
  %61 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 4, i32 0, i32 2
  store ptr @io_rsrc_put_work, ptr %61, align 4
  %62 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 4, i32 1
  tail call void @init_timer_key(ptr noundef %62, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #21
  %63 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 5
  store ptr null, ptr %63, align 4
  %64 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 7
  store volatile ptr %64, ptr %64, align 4
  %65 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 7, i32 1
  store ptr %64, ptr %65, align 8
  %66 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 12
  store ptr null, ptr %66, align 4
  %67 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 2
  store ptr null, ptr %67, align 64
  %68 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 5
  store i32 -32, ptr %68, align 8
  %69 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 5, i32 0, i32 1
  store volatile ptr %69, ptr %69, align 4
  %70 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 5, i32 0, i32 1, i32 1
  store ptr %69, ptr %70, align 8
  %71 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 5, i32 0, i32 2
  store ptr @io_fallback_req_func, ptr %71, align 4
  %72 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 14, i32 5, i32 1
  tail call void @init_timer_key(ptr noundef %72, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef null, ptr noundef null) #21
  %73 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 1, i32 12, i32 1
  store ptr null, ptr %73, align 8
  br label %78

74:                                               ; preds = %25, %20, %5
  %75 = getelementptr inbounds %struct.io_ring_ctx, ptr %3, i32 0, i32 13, i32 1
  %76 = load ptr, ptr %75, align 4
  tail call void @kfree(ptr noundef %76) #21
  %77 = load ptr, ptr %18, align 16
  tail call void @kfree(ptr noundef %77) #21
  tail call void @kfree(ptr noundef nonnull %3) #21
  br label %78

78:                                               ; preds = %74, %28, %1
  %79 = phi ptr [ null, %74 ], [ %3, %28 ], [ null, %1 ]
  ret ptr %79
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_allocate_scq_urings(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #4 {
  %3 = load i32, ptr %1, align 8
  %4 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 4
  store i32 %3, ptr %4, align 32
  %5 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 1
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 10, i32 1
  store i32 %6, ptr %7, align 4
  %8 = load i32, ptr %1, align 8
  %9 = load i32, ptr %5, align 4
  %10 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %9, i32 16) #21
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = tail call i32 @llvm.uadd.sat.i32(i32 %12, i32 320) #21
  %14 = icmp eq i32 %13, -1
  %15 = select i1 %11, i1 true, i1 %14
  br i1 %15, label %69, label %16

16:                                               ; preds = %2
  %17 = add i32 %13, 63
  %18 = and i32 %17, -64
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %69, label %20

20:                                               ; preds = %16
  %21 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %8, i32 4) #21
  %22 = extractvalue { i32, i1 } %21, 1
  br i1 %22, label %69, label %23

23:                                               ; preds = %20
  %24 = extractvalue { i32, i1 } %21, 0
  %25 = tail call i32 @llvm.uadd.sat.i32(i32 %18, i32 %24) #21
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %69, label %27

27:                                               ; preds = %23
  %28 = add i32 %25, -1
  %29 = icmp ult i32 %28, 4096
  %30 = lshr i32 %28, 12
  %31 = tail call i32 @llvm.ctlz.i32(i32 %30, i1 false) #21, !range !111
  %32 = sub nuw nsw i32 32, %31
  %33 = select i1 %29, i32 0, i32 %32
  %34 = tail call i32 @__get_free_pages(i32 noundef 4468160, i32 noundef %33) #21
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %69, label %36

36:                                               ; preds = %27
  %37 = inttoptr i32 %34 to ptr
  %38 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 1
  store ptr %37, ptr %38, align 8
  %39 = getelementptr i8, ptr %37, i32 %18
  %40 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 1
  store ptr %39, ptr %40, align 4
  %41 = load i32, ptr %1, align 8
  %42 = add i32 %41, -1
  %43 = getelementptr inbounds %struct.io_rings, ptr %37, i32 0, i32 2
  store i32 %42, ptr %43, align 64
  %44 = load i32, ptr %5, align 4
  %45 = add i32 %44, -1
  %46 = getelementptr inbounds %struct.io_rings, ptr %37, i32 0, i32 3
  store i32 %45, ptr %46, align 4
  %47 = load i32, ptr %1, align 8
  %48 = getelementptr inbounds %struct.io_rings, ptr %37, i32 0, i32 4
  store i32 %47, ptr %48, align 8
  %49 = load i32, ptr %5, align 4
  %50 = getelementptr inbounds %struct.io_rings, ptr %37, i32 0, i32 5
  store i32 %49, ptr %50, align 4
  %51 = load i32, ptr %1, align 8
  %52 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %51, i32 64) #21
  %53 = extractvalue { i32, i1 } %52, 1
  br i1 %53, label %66, label %54

54:                                               ; preds = %36
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = add i32 %55, -1
  %57 = icmp ult i32 %56, 4096
  %58 = lshr i32 %56, 12
  %59 = tail call i32 @llvm.ctlz.i32(i32 %58, i1 false) #21, !range !111
  %60 = sub nuw nsw i32 32, %59
  %61 = select i1 %57, i32 0, i32 %60
  %62 = tail call i32 @__get_free_pages(i32 noundef 4468160, i32 noundef %61) #21
  %63 = inttoptr i32 %62 to ptr
  %64 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 2
  store ptr %63, ptr %64, align 8
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %54, %36
  %67 = phi i32 [ -75, %36 ], [ -12, %54 ]
  %68 = load ptr, ptr %38, align 8
  tail call fastcc void @io_mem_free(ptr noundef %68)
  store ptr null, ptr %38, align 8
  br label %69

69:                                               ; preds = %66, %54, %27, %23, %20, %16, %2
  %70 = phi i32 [ -75, %23 ], [ -12, %27 ], [ 0, %54 ], [ -75, %2 ], [ -75, %16 ], [ -75, %20 ], [ %67, %66 ]
  ret i32 %70
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_sq_offload_create(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %4 = load i32, ptr %3, align 4
  %5 = and i32 %4, 34
  %6 = icmp eq i32 %5, 32
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 6
  %9 = load i32, ptr %8, align 8
  %10 = tail call i32 @__fdget(i32 noundef %9) #21, !noalias !113
  %11 = and i32 %10, -4
  %12 = inttoptr i32 %11 to ptr
  %13 = icmp eq i32 %11, 0
  br i1 %13, label %186, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.file, ptr %12, i32 0, i32 3
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, @io_uring_fops
  %18 = and i32 %10, 1
  %19 = icmp eq i32 %18, 0
  br i1 %17, label %22, label %20

20:                                               ; preds = %14
  br i1 %19, label %186, label %21

21:                                               ; preds = %20
  tail call void @fput(ptr noundef nonnull %12) #21
  br label %186

22:                                               ; preds = %14
  br i1 %19, label %24, label %23

23:                                               ; preds = %22
  tail call void @fput(ptr noundef nonnull %12) #21
  br label %24

24:                                               ; preds = %23, %22, %2
  %25 = load i32, ptr %3, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 2
  %29 = load i32, ptr %28, align 8
  br i1 %27, label %177, label %30

30:                                               ; preds = %24
  %31 = and i32 %29, 32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %86, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 6
  %35 = load i32, ptr %34, align 8
  %36 = tail call i32 @__fdget(i32 noundef %35) #21, !noalias !116
  %37 = and i32 %36, -4
  %38 = inttoptr i32 %37 to ptr
  %39 = icmp eq i32 %37, 0
  br i1 %39, label %102, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.file, ptr %38, i32 0, i32 3
  %42 = load ptr, ptr %41, align 4
  %43 = icmp eq ptr %42, @io_uring_fops
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = and i32 %36, 1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %102, label %79

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.file, ptr %38, i32 0, i32 15
  %49 = load ptr, ptr %48, align 8
  %50 = getelementptr inbounds %struct.io_ring_ctx, ptr %49, i32 0, i32 5
  %51 = load ptr, ptr %50, align 16
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = and i32 %36, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %102, label %79

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.io_sq_data, ptr %51, i32 0, i32 9
  %58 = load i32, ptr %57, align 4
  %59 = tail call ptr @llvm.thread.pointer() #21
  %60 = getelementptr inbounds %struct.task_struct, ptr %59, i32 0, i32 53
  %61 = load i32, ptr %60, align 4
  %62 = icmp eq i32 %58, %61
  br i1 %62, label %66, label %63

63:                                               ; preds = %56
  %64 = and i32 %36, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %86, label %79

66:                                               ; preds = %56
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %51) #21, !srcloc !13
  %67 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %51, ptr nonnull %51, i32 1, ptr nonnull elementtype(i32) %51) #21, !srcloc !65
  %68 = extractvalue { i32, i32, i32 } %67, 0
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %74, label %70, !prof !11

70:                                               ; preds = %66
  %71 = add i32 %68, 1
  %72 = or i32 %71, %68
  %73 = icmp sgt i32 %72, -1
  br i1 %73, label %76, label %74, !prof !10

74:                                               ; preds = %70, %66
  %75 = phi i32 [ 2, %66 ], [ 1, %70 ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %51, i32 noundef %75) #21
  br label %76

76:                                               ; preds = %74, %70
  %77 = and i32 %36, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %76, %63, %53, %44
  %80 = phi ptr [ inttoptr (i32 -22 to ptr), %44 ], [ inttoptr (i32 -22 to ptr), %53 ], [ inttoptr (i32 -1 to ptr), %63 ], [ %51, %76 ]
  tail call void @fput(ptr noundef nonnull %38) #21
  br label %81

81:                                               ; preds = %79, %76
  %82 = phi ptr [ %51, %76 ], [ %80, %79 ]
  %83 = icmp ugt ptr %82, inttoptr (i32 -4096 to ptr)
  br i1 %83, label %84, label %98

84:                                               ; preds = %81
  %85 = icmp eq ptr %82, inttoptr (i32 -1 to ptr)
  br i1 %85, label %86, label %98

86:                                               ; preds = %84, %63, %30
  %87 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %88 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %87, i32 noundef 3520, i32 noundef 88) #25
  %89 = icmp eq ptr %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 1
  store volatile i32 0, ptr %91, align 4
  store volatile i32 1, ptr %88, align 8
  %92 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 3
  store volatile ptr %92, ptr %92, align 4
  %93 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 3, i32 1
  store ptr %92, ptr %93, align 8
  %94 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 2
  tail call void @__mutex_init(ptr noundef %94, ptr noundef nonnull @.str.124, ptr noundef nonnull @io_get_sq_data.__key) #21
  %95 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 5
  tail call void @__init_waitqueue_head(ptr noundef %95, ptr noundef nonnull @.str.126, ptr noundef nonnull @io_get_sq_data.__key.125) #21
  %96 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 11
  store i32 0, ptr %96, align 8
  %97 = getelementptr inbounds %struct.io_sq_data, ptr %88, i32 0, i32 11, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %97, ptr noundef nonnull @.str.83, ptr noundef nonnull @init_completion.__key) #21
  br label %98

98:                                               ; preds = %90, %84, %81
  %99 = phi i1 [ false, %81 ], [ true, %84 ], [ true, %90 ]
  %100 = phi ptr [ %82, %81 ], [ %82, %84 ], [ %88, %90 ]
  %101 = icmp ugt ptr %100, inttoptr (i32 -4096 to ptr)
  br i1 %101, label %102, label %105

102:                                              ; preds = %98, %86, %53, %44, %33
  %103 = phi ptr [ %100, %98 ], [ inttoptr (i32 -22 to ptr), %53 ], [ inttoptr (i32 -22 to ptr), %44 ], [ inttoptr (i32 -6 to ptr), %33 ], [ inttoptr (i32 -12 to ptr), %86 ]
  %104 = ptrtoint ptr %103 to i32
  br label %184

105:                                              ; preds = %98
  %106 = tail call ptr @llvm.thread.pointer() #21
  %107 = getelementptr inbounds %struct.task_struct, ptr %106, i32 0, i32 83
  %108 = load ptr, ptr %107, align 8
  %109 = icmp eq ptr %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.cred, ptr %108, i32 0, i32 24
  store i32 0, ptr %111, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %108) #21, !srcloc !13
  %112 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %108, ptr nonnull %108, i32 1, ptr nonnull elementtype(i32) %108) #21, !srcloc !14
  br label %113

113:                                              ; preds = %110, %105
  %114 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 4
  store ptr %108, ptr %114, align 4
  %115 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 5
  store ptr %100, ptr %115, align 16
  %116 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 4
  %117 = load i32, ptr %116, align 8
  %118 = tail call i32 @__msecs_to_jiffies(i32 noundef %117) #21
  %119 = icmp eq i32 %118, 0
  %120 = select i1 %119, i32 100, i32 %118
  %121 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 19
  store i32 %120, ptr %121, align 4
  tail call fastcc void @io_sq_thread_park(ptr noundef %100)
  %122 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 7
  %123 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 3
  %124 = load ptr, ptr %123, align 4
  %125 = getelementptr inbounds %struct.list_head, ptr %124, i32 0, i32 1
  store ptr %122, ptr %125, align 4
  store ptr %124, ptr %122, align 4
  %126 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 7, i32 1
  store ptr %123, ptr %126, align 4
  store volatile ptr %122, ptr %123, align 4
  %127 = icmp eq ptr %122, %123
  br i1 %127, label %136, label %128

128:                                              ; preds = %128, %113
  %129 = phi ptr [ %134, %128 ], [ %122, %113 ]
  %130 = phi i32 [ %133, %128 ], [ 0, %113 ]
  %131 = getelementptr i8, ptr %129, i32 -52
  %132 = load i32, ptr %131, align 4
  %133 = tail call i32 @llvm.umax.i32(i32 %130, i32 %132) #21
  %134 = load ptr, ptr %129, align 4
  %135 = icmp eq ptr %134, %123
  br i1 %135, label %136, label %128

136:                                              ; preds = %128, %113
  %137 = phi i32 [ 0, %113 ], [ %133, %128 ]
  %138 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 6
  store i32 %137, ptr %138, align 4
  br i1 %99, label %143, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 4
  %141 = load ptr, ptr %140, align 4
  %142 = icmp eq ptr %141, null
  tail call fastcc void @io_sq_thread_unpark(ptr noundef %100)
  br i1 %142, label %184, label %186

143:                                              ; preds = %136
  tail call fastcc void @io_sq_thread_unpark(ptr noundef %100)
  %144 = load i32, ptr %28, align 8
  %145 = and i32 %144, 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.io_uring_params, ptr %1, i32 0, i32 3
  %149 = load i32, ptr %148, align 4
  %150 = load i32, ptr @nr_cpu_ids, align 4
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %152, label %180

152:                                              ; preds = %147
  %153 = lshr i32 %149, 5
  %154 = getelementptr i32, ptr @__cpu_online_mask, i32 %153
  %155 = load volatile i32, ptr %154, align 4
  %156 = and i32 %149, 31
  %157 = shl nuw i32 1, %156
  %158 = and i32 %155, %157
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %180, label %160

160:                                              ; preds = %152, %143
  %161 = phi i32 [ %149, %152 ], [ -1, %143 ]
  %162 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 7
  store i32 %161, ptr %162, align 4
  %163 = getelementptr inbounds %struct.task_struct, ptr %106, i32 0, i32 52
  %164 = load i32, ptr %163, align 8
  %165 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 8
  store i32 %164, ptr %165, align 4
  %166 = getelementptr inbounds %struct.task_struct, ptr %106, i32 0, i32 53
  %167 = load i32, ptr %166, align 4
  %168 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 9
  store i32 %167, ptr %168, align 4
  %169 = tail call ptr @create_io_thread(ptr noundef nonnull @io_sq_thread, ptr noundef %100, i32 noundef -1) #21
  %170 = icmp ugt ptr %169, inttoptr (i32 -4096 to ptr)
  br i1 %170, label %171, label %173

171:                                              ; preds = %160
  %172 = ptrtoint ptr %169 to i32
  br label %180

173:                                              ; preds = %160
  %174 = getelementptr inbounds %struct.io_sq_data, ptr %100, i32 0, i32 4
  store ptr %169, ptr %174, align 4
  %175 = tail call fastcc i32 @io_uring_alloc_task_context(ptr noundef %169, ptr noundef %0) #22
  tail call void @wake_up_new_task(ptr noundef %169) #21
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %186, label %184

177:                                              ; preds = %24
  %178 = and i32 %29, 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %186, label %184

180:                                              ; preds = %171, %152, %147
  %181 = phi i32 [ %172, %171 ], [ -22, %152 ], [ -22, %147 ]
  %182 = load ptr, ptr %115, align 16
  %183 = getelementptr inbounds %struct.io_sq_data, ptr %182, i32 0, i32 11
  tail call void @complete(ptr noundef %183) #21
  br label %184

184:                                              ; preds = %180, %177, %173, %139, %102
  %185 = phi i32 [ %181, %180 ], [ -22, %177 ], [ %175, %173 ], [ %104, %102 ], [ -6, %139 ]
  tail call fastcc void @io_sq_thread_finish(ptr noundef %0)
  br label %186

186:                                              ; preds = %184, %177, %173, %139, %21, %20, %7
  %187 = phi i32 [ %185, %184 ], [ 0, %173 ], [ 0, %177 ], [ -22, %21 ], [ -22, %20 ], [ -6, %7 ], [ 0, %139 ]
  ret i32 %187
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc ptr @io_uring_get_file(ptr noundef %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %3 = tail call i32 @sock_create_kern(ptr noundef nonnull @init_net, i32 noundef 1, i32 noundef 3, i32 noundef 0, ptr noundef %2) #21
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = inttoptr i32 %3 to ptr
  br label %14

7:                                                ; preds = %1
  %8 = tail call ptr @anon_inode_getfile_secure(ptr noundef nonnull @.str.128, ptr noundef nonnull @io_uring_fops, ptr noundef %0, i32 noundef 524290, ptr noundef null) #21
  %9 = icmp ugt ptr %8, inttoptr (i32 -4096 to ptr)
  %10 = load ptr, ptr %2, align 4
  br i1 %9, label %11, label %12

11:                                               ; preds = %7
  tail call void @sock_release(ptr noundef %10) #21
  store ptr null, ptr %2, align 4
  br label %14

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.socket, ptr %10, i32 0, i32 3
  store ptr %8, ptr %13, align 4
  br label %14

14:                                               ; preds = %12, %11, %5
  %15 = phi ptr [ %6, %5 ], [ %8, %12 ], [ %8, %11 ]
  ret ptr %15
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_uring_install_fd(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = tail call i32 @get_unused_fd_flags(i32 noundef 524290) #21
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = tail call ptr @llvm.thread.pointer() #21
  %7 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 91
  %8 = load ptr, ptr %7, align 8
  %9 = icmp eq ptr %8, null
  br i1 %9, label %14, label %10, !prof !11

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.io_uring_task, ptr %8, i32 0, i32 3
  %12 = load ptr, ptr %11, align 4
  %13 = icmp eq ptr %12, %0
  br i1 %13, label %18, label %14, !prof !10

14:                                               ; preds = %10, %5
  %15 = tail call fastcc i32 @__io_uring_add_tctx_node(ptr noundef %0) #21
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @put_unused_fd(i32 noundef %3) #21
  br label %19

18:                                               ; preds = %14, %10
  tail call void @fd_install(i32 noundef %3, ptr noundef %1) #21
  br label %19

19:                                               ; preds = %18, %17, %2
  %20 = phi i32 [ %15, %17 ], [ %3, %18 ], [ %3, %2 ]
  ret i32 %20
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc void @trace_io_uring_create(i32 noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #8 {
  %6 = load volatile i32, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_create, i32 0, i32 1), align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %31

8:                                                ; preds = %5
  %9 = tail call ptr @llvm.thread.pointer() #21
  %10 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %11 = load i32, ptr %10, align 8
  %12 = lshr i32 %11, 5
  %13 = getelementptr i32, ptr @__cpu_online_mask, i32 %12
  %14 = load volatile i32, ptr %13, align 4
  %15 = and i32 %11, 31
  %16 = shl nuw i32 1, %15
  %17 = and i32 %16, %14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %8
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !119
  %20 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_io_uring_create, i32 0, i32 7), align 4
  %21 = icmp eq ptr %20, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %22, %19
  %23 = phi ptr [ %27, %22 ], [ %20, %19 ]
  %24 = load volatile ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.tracepoint_func, ptr %23, i32 0, i32 1
  %26 = load ptr, ptr %25, align 4
  tail call void %24(ptr noundef %26, i32 noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #21
  %27 = getelementptr %struct.tracepoint_func, ptr %23, i32 1
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %22

30:                                               ; preds = %22, %19
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !120
  br label %31

31:                                               ; preds = %30, %8, %5
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_ring_ctx_ref_free(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 8
  tail call void @complete(ptr noundef %2) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_rsrc_put_work(ptr noundef %0) #0 {
  %2 = getelementptr i8, ptr %0, i32 44
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !121
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %2) #21, !srcloc !13
  %3 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %2) #21, !srcloc !122
  %4 = extractvalue { i32, i32 } %3, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !123
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %66, label %6

6:                                                ; preds = %1
  %7 = inttoptr i32 %4 to ptr
  br label %8

8:                                                ; preds = %64, %6
  %9 = phi ptr [ %10, %64 ], [ %7, %6 ]
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr i8, ptr %9, i32 -28
  %12 = getelementptr i8, ptr %9, i32 -4
  %13 = load ptr, ptr %12, align 4
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %9, i32 -12
  %16 = load ptr, ptr %15, align 4
  %17 = icmp eq ptr %16, %15
  br i1 %17, label %57, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.anon.178, ptr %14, i32 0, i32 2
  %20 = getelementptr inbounds %struct.io_ring_ctx, ptr %14, i32 0, i32 1
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %14, i32 0, i32 11
  %22 = getelementptr inbounds %struct.anon.178, ptr %14, i32 0, i32 3
  %23 = getelementptr inbounds %struct.io_ring_ctx, ptr %14, i32 0, i32 10
  %24 = getelementptr inbounds %struct.anon.178, ptr %14, i32 0, i32 1
  %25 = getelementptr inbounds %struct.io_rsrc_data, ptr %13, i32 0, i32 3
  br label %26

26:                                               ; preds = %54, %18
  %27 = phi ptr [ %16, %18 ], [ %28, %54 ]
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  store ptr %30, ptr %31, align 4
  store volatile ptr %28, ptr %30, align 4
  store ptr inttoptr (i32 256 to ptr), ptr %27, align 4
  store ptr inttoptr (i32 290 to ptr), ptr %29, align 4
  %32 = getelementptr inbounds %struct.io_rsrc_put, ptr %27, i32 0, i32 1
  %33 = load i64, ptr %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %54, label %35

35:                                               ; preds = %26
  %36 = load i32, ptr %19, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  tail call void @mutex_lock(ptr noundef %20) #21
  br label %40

40:                                               ; preds = %39, %35
  tail call void @_raw_spin_lock(ptr noundef %21) #21
  %41 = load i64, ptr %32, align 8
  %42 = tail call fastcc zeroext i1 @io_fill_cqe_aux(ptr noundef %14, i64 noundef %41, i32 noundef 0, i32 noundef 0) #21
  %43 = load i8, ptr %22, align 16
  %44 = and i8 %43, 48
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %47, label %46, !prof !10

46:                                               ; preds = %40
  tail call fastcc void @__io_commit_cqring_flush(ptr noundef %14) #24
  br label %47

47:                                               ; preds = %46, %40
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !54
  %48 = load i32, ptr %23, align 64
  %49 = load ptr, ptr %24, align 8
  %50 = getelementptr inbounds %struct.io_rings, ptr %49, i32 0, i32 1, i32 2
  store volatile i32 %48, ptr %50, align 64
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %51 = load i16, ptr %21, align 4
  %52 = add i16 %51, 1
  store i16 %52, ptr %21, align 4
  tail call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  tail call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  tail call fastcc void @io_cqring_ev_posted(ptr noundef %14) #21
  br i1 %38, label %54, label %53

53:                                               ; preds = %47
  tail call void @mutex_unlock(ptr noundef %20) #21
  br label %54

54:                                               ; preds = %53, %47, %26
  %55 = load ptr, ptr %25, align 4
  tail call void %55(ptr noundef %14, ptr noundef %27) #21
  tail call void @kfree(ptr noundef %27) #21
  %56 = icmp eq ptr %28, %15
  br i1 %56, label %57, label %26

57:                                               ; preds = %54, %8
  tail call void @percpu_ref_exit(ptr noundef %11) #21
  tail call void @kfree(ptr noundef %11) #21
  %58 = getelementptr inbounds %struct.io_rsrc_data, ptr %13, i32 0, i32 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %58) #21, !srcloc !13
  %59 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %58, ptr %58, i32 1, ptr elementtype(i32) %58) #21, !srcloc !35
  %60 = extractvalue { i32, i32 } %59, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.io_rsrc_data, ptr %13, i32 0, i32 5
  tail call void @complete(ptr noundef %63) #21
  br label %64

64:                                               ; preds = %62, %57
  %65 = icmp eq ptr %10, null
  br i1 %65, label %66, label %8

66:                                               ; preds = %64, %1
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal void @io_fallback_req_func(ptr noundef %0) #4 {
  %2 = alloca i8, align 1
  %3 = getelementptr i8, ptr %0, i32 -560
  %4 = getelementptr i8, ptr %0, i32 -4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !121
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %4) #21, !srcloc !13
  %5 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %4) #21, !srcloc !122
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = inttoptr i32 %6 to ptr
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !123
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %2) #21
  store i8 0, ptr %2, align 1
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %8 = load volatile i32, ptr %3, align 4
  %9 = and i32 %8, 3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %20, !prof !10

11:                                               ; preds = %1
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %13 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %14 = inttoptr i32 %13 to ptr
  %15 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %14) #6, !srcloc !12
  %16 = add i32 %15, %8
  %17 = inttoptr i32 %16 to ptr
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %18, 1
  store i32 %19, ptr %17, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #21, !srcloc !22
  br label %24

20:                                               ; preds = %1
  %21 = getelementptr i8, ptr %0, i32 -556
  %22 = load ptr, ptr %21, align 4
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %22) #21, !srcloc !13
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %22, ptr %22, i32 1, ptr elementtype(i32) %22) #21, !srcloc !14
  br label %24

24:                                               ; preds = %20, %11
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  %25 = getelementptr i8, ptr %7, i32 -108
  %26 = icmp eq ptr %25, inttoptr (i32 -108 to ptr)
  br i1 %26, label %40, label %27

27:                                               ; preds = %27, %24
  %28 = phi ptr [ %33, %27 ], [ %25, %24 ]
  %29 = phi ptr [ %30, %27 ], [ %7, %24 ]
  %30 = load ptr, ptr %29, align 4
  %31 = getelementptr inbounds %struct.io_task_work, ptr %29, i32 0, i32 1
  %32 = load ptr, ptr %31, align 4
  call void %32(ptr noundef %28, ptr noundef nonnull %2) #21
  %33 = getelementptr i8, ptr %30, i32 -108
  %34 = icmp eq ptr %33, inttoptr (i32 -108 to ptr)
  br i1 %34, label %35, label %27

35:                                               ; preds = %27
  %36 = load i8, ptr %2, align 1, !range !45
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  call fastcc void @io_submit_flush_completions(ptr noundef %3)
  %39 = getelementptr i8, ptr %0, i32 -496
  call void @mutex_unlock(ptr noundef %39) #21
  br label %40

40:                                               ; preds = %38, %35, %24
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %41 = load volatile i32, ptr %3, align 4
  %42 = and i32 %41, 3
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %53, !prof !10

44:                                               ; preds = %40
  %45 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %46 = call i32 @llvm.read_register.i32(metadata !0) #21
  %47 = inttoptr i32 %46 to ptr
  %48 = call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %47) #6, !srcloc !12
  %49 = add i32 %48, %41
  %50 = inttoptr i32 %49 to ptr
  %51 = load i32, ptr %50, align 4
  %52 = add i32 %51, -1
  store i32 %52, ptr %50, align 4
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %45) #21, !srcloc !22
  br label %63

53:                                               ; preds = %40
  %54 = getelementptr i8, ptr %0, i32 -556
  %55 = load ptr, ptr %54, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %55) #21, !srcloc !13
  %56 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %55, ptr %55, i32 1, ptr elementtype(i32) %55) #21, !srcloc !35
  %57 = extractvalue { i32, i32 } %56, 0
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63, !prof !11

59:                                               ; preds = %53
  %60 = load ptr, ptr %54, align 4
  %61 = getelementptr inbounds %struct.percpu_ref_data, ptr %60, i32 0, i32 1
  %62 = load ptr, ptr %61, align 4
  call void %62(ptr noundef %3) #21
  br label %63

63:                                               ; preds = %59, %53, %44
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %2) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__get_free_pages(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @create_io_thread(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noreturn nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal i32 @io_sq_thread(ptr noundef %0) #18 {
  %2 = alloca %struct.ksignal, align 4
  %3 = alloca [16 x i8], align 1
  %4 = alloca %struct.wait_queue_entry, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 1 dereferenceable(16) %3, i8 0, i32 16, i1 false), !annotation !9
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %4) #21
  %5 = getelementptr inbounds %struct.wait_queue_entry, ptr %4, i32 0, i32 1
  %6 = tail call ptr @llvm.thread.pointer() #21
  store i32 0, ptr %4, align 4
  store ptr %6, ptr %5, align 4
  %7 = getelementptr inbounds %struct.wait_queue_entry, ptr %4, i32 0, i32 2
  store ptr @autoremove_wake_function, ptr %7, align 4
  %8 = getelementptr inbounds %struct.wait_queue_entry, ptr %4, i32 0, i32 3
  store ptr %8, ptr %8, align 4
  %9 = getelementptr inbounds %struct.wait_queue_entry, ptr %4, i32 0, i32 3, i32 1
  store ptr %8, ptr %9, align 4
  %10 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 8
  %11 = load i32, ptr %10, align 4
  %12 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %3, i32 noundef 16, ptr noundef nonnull @.str.127, i32 noundef %11)
  call void @__set_task_comm(ptr noundef %6, ptr noundef nonnull %3, i1 noundef zeroext false) #21
  %13 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 7
  %14 = load i32, ptr %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %24, label %16

16:                                               ; preds = %1
  %17 = and i32 %14, 31
  %18 = add nuw nsw i32 %17, 1
  %19 = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %18
  %20 = lshr i32 %14, 5
  %21 = sub nsw i32 0, %20
  %22 = getelementptr i32, ptr %19, i32 %21
  %23 = call i32 @set_cpus_allowed_ptr(ptr noundef %6, ptr noundef %22) #21
  br label %26

24:                                               ; preds = %1
  %25 = call i32 @set_cpus_allowed_ptr(ptr noundef %6, ptr noundef nonnull @__cpu_online_mask) #21
  br label %26

26:                                               ; preds = %24, %16
  %27 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 4
  %28 = load i32, ptr %27, align 4
  %29 = or i32 %28, 67108864
  store i32 %29, ptr %27, align 4
  %30 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 2
  call void @mutex_lock(ptr noundef %30) #21
  %31 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 10
  %32 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 3
  %34 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 3, i32 1
  %35 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 83
  %36 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 102
  %37 = getelementptr inbounds %struct.task_struct, ptr %6, i32 0, i32 1
  %38 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 5
  br label %39

39:                                               ; preds = %183, %26
  %40 = phi i32 [ 0, %26 ], [ %184, %183 ]
  %41 = load volatile i32, ptr %31, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %39
  %44 = load volatile i32, ptr %6, align 4
  %45 = and i32 %44, 256
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51, !prof !10

47:                                               ; preds = %43
  %48 = load volatile i32, ptr %6, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %85, label %51

51:                                               ; preds = %47, %43, %39
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %2) #21
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 4 dereferenceable(56) %2, i8 0, i32 56, i1 false) #21, !annotation !9
  %52 = load volatile i32, ptr %31, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = load volatile i32, ptr %6, align 4
  %57 = and i32 %56, 256
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63, !prof !10

59:                                               ; preds = %55
  %60 = load volatile i32, ptr %6, align 4
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %59, %55, %51
  call void @mutex_unlock(ptr noundef %30) #21
  %64 = load volatile i32, ptr %6, align 4
  %65 = and i32 %64, 256
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %71, !prof !10

67:                                               ; preds = %63
  %68 = load volatile i32, ptr %6, align 4
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %67, %63
  %72 = call zeroext i1 @get_signal(ptr noundef nonnull %2) #21
  %73 = call i32 @__cond_resched() #21
  call void @mutex_lock(ptr noundef %30) #21
  br i1 %72, label %74, label %77

74:                                               ; preds = %71
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %2) #21
  br label %241

75:                                               ; preds = %67
  %76 = call i32 @__cond_resched() #21
  call void @mutex_lock(ptr noundef %30) #21
  br label %77

77:                                               ; preds = %75, %71, %59
  %78 = load volatile i32, ptr %31, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %2) #21
  br i1 %80, label %81, label %241

81:                                               ; preds = %77
  %82 = load volatile i32, ptr @jiffies, align 64
  %83 = load i32, ptr %32, align 4
  %84 = add i32 %83, %82
  br label %85

85:                                               ; preds = %81, %47
  %86 = phi i32 [ %84, %81 ], [ %40, %47 ]
  %87 = load volatile ptr, ptr %33, align 4
  %88 = icmp eq ptr %87, %33
  br i1 %88, label %161, label %89

89:                                               ; preds = %85
  %90 = load ptr, ptr %34, align 4
  %91 = icmp ne ptr %87, %90
  br label %92

92:                                               ; preds = %157, %89
  %93 = phi ptr [ %159, %157 ], [ %87, %89 ]
  %94 = phi i1 [ %158, %157 ], [ false, %89 ]
  %95 = getelementptr i8, ptr %93, i32 -288
  %96 = getelementptr i8, ptr %93, i32 -280
  %97 = load ptr, ptr %96, align 8
  %98 = getelementptr inbounds %struct.io_uring, ptr %97, i32 0, i32 2
  %99 = load volatile i32, ptr %98, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !91
  %100 = getelementptr i8, ptr %93, i32 -196
  %101 = load i32, ptr %100, align 4
  %102 = sub i32 %99, %101
  %103 = icmp ugt i32 %102, 8
  %104 = select i1 %91, i1 %103, i1 false
  %105 = select i1 %104, i32 8, i32 %102
  %106 = getelementptr i8, ptr %93, i32 104
  %107 = load volatile ptr, ptr %106, align 8
  %108 = icmp ne ptr %107, null
  %109 = icmp ne i32 %105, 0
  %110 = select i1 %108, i1 true, i1 %109
  br i1 %110, label %111, label %150

111:                                              ; preds = %92
  %112 = getelementptr i8, ptr %93, i32 -20
  %113 = load ptr, ptr %112, align 4
  %114 = load ptr, ptr %35, align 8
  %115 = icmp eq ptr %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %111
  %117 = call ptr @override_creds(ptr noundef %113) #21
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi ptr [ %117, %116 ], [ null, %111 ]
  %120 = getelementptr i8, ptr %93, i32 -224
  call void @mutex_lock(ptr noundef %120) #21
  %121 = load volatile ptr, ptr %106, align 8
  %122 = icmp eq ptr %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %118
  %124 = call fastcc i32 @io_do_iopoll(ptr noundef %95, i1 noundef zeroext true) #21
  br label %125

125:                                              ; preds = %123, %118
  br i1 %109, label %126, label %137

126:                                              ; preds = %125
  %127 = load i32, ptr %95, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %138, !prof !10

130:                                              ; preds = %126
  %131 = getelementptr i8, ptr %93, i32 -276
  %132 = load i32, ptr %131, align 4
  %133 = and i32 %132, 64
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = call fastcc i32 @io_submit_sqes(ptr noundef %95, i32 noundef %105) #21
  br label %138

137:                                              ; preds = %125
  call void @mutex_unlock(ptr noundef %120) #21
  br label %145

138:                                              ; preds = %135, %130, %126
  %139 = phi i32 [ 0, %126 ], [ %136, %135 ], [ 0, %130 ]
  call void @mutex_unlock(ptr noundef %120) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !46
  %140 = getelementptr i8, ptr %93, i32 -8
  %141 = load volatile ptr, ptr %140, align 4
  %142 = icmp eq ptr %141, %140
  br i1 %142, label %145, label %143

143:                                              ; preds = %138
  %144 = getelementptr i8, ptr %93, i32 -12
  call void @__wake_up(ptr noundef %144, i32 noundef 3, i32 noundef 1, ptr noundef null) #21
  br label %145

145:                                              ; preds = %143, %138, %137
  %146 = phi i32 [ %139, %143 ], [ %139, %138 ], [ 0, %137 ]
  %147 = icmp eq ptr %119, null
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  call void @revert_creds(ptr noundef nonnull %119) #21
  br label %149

149:                                              ; preds = %148, %145
  br i1 %94, label %157, label %151

150:                                              ; preds = %92
  br i1 %94, label %157, label %153

151:                                              ; preds = %149
  %152 = icmp sgt i32 %146, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %151, %150
  %154 = load volatile ptr, ptr %106, align 8
  %155 = icmp eq ptr %154, null
  br i1 %155, label %157, label %156

156:                                              ; preds = %153, %151
  br label %157

157:                                              ; preds = %156, %153, %150, %149
  %158 = phi i1 [ true, %149 ], [ true, %156 ], [ false, %153 ], [ true, %150 ]
  %159 = load ptr, ptr %93, align 4
  %160 = icmp eq ptr %159, %33
  br i1 %160, label %161, label %92

161:                                              ; preds = %157, %85
  %162 = phi i1 [ false, %85 ], [ %158, %157 ]
  %163 = load volatile i32, ptr %6, align 4
  %164 = and i32 %163, 256
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = load ptr, ptr %36, align 4
  %168 = icmp eq ptr %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %166, %161
  store volatile i32 0, ptr %37, align 8
  call void @_clear_bit(i32 noundef 8, ptr noundef %6) #21
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !15
  %170 = load ptr, ptr %36, align 4
  %171 = icmp eq ptr %170, null
  br i1 %171, label %178, label %172

172:                                              ; preds = %169
  call void @task_work_run() #21
  br label %178

173:                                              ; preds = %166
  br i1 %162, label %178, label %174

174:                                              ; preds = %173
  %175 = load volatile i32, ptr @jiffies, align 64
  %176 = sub i32 %86, %175
  %177 = icmp slt i32 %176, 0
  br i1 %177, label %187, label %185

178:                                              ; preds = %173, %172, %169
  %179 = call i32 @__cond_resched() #21
  %180 = load volatile i32, ptr @jiffies, align 64
  %181 = load i32, ptr %32, align 4
  %182 = add i32 %181, %180
  br label %183

183:                                              ; preds = %237, %185, %178
  %184 = phi i32 [ %240, %237 ], [ %182, %178 ], [ %86, %185 ]
  br label %39

185:                                              ; preds = %174
  %186 = call i32 @__cond_resched() #21
  br label %183

187:                                              ; preds = %174
  call void @prepare_to_wait(ptr noundef %38, ptr noundef nonnull %4, i32 noundef 1) #21
  %188 = load volatile i32, ptr %31, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %237

190:                                              ; preds = %187
  %191 = load ptr, ptr %36, align 4
  %192 = icmp eq ptr %191, null
  br i1 %192, label %193, label %237

193:                                              ; preds = %214, %190
  %194 = phi ptr [ %195, %214 ], [ %33, %190 ]
  %195 = load ptr, ptr %194, align 4
  %196 = icmp eq ptr %195, %33
  br i1 %196, label %221, label %197

197:                                              ; preds = %193
  %198 = getelementptr i8, ptr %195, i32 96
  call void @_raw_spin_lock(ptr noundef %198) #21
  %199 = getelementptr i8, ptr %195, i32 -280
  %200 = load ptr, ptr %199, align 8
  %201 = getelementptr inbounds %struct.io_rings, ptr %200, i32 0, i32 7
  %202 = load i32, ptr %201, align 4
  %203 = or i32 %202, 1
  store volatile i32 %203, ptr %201, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %204 = load i16, ptr %198, align 4
  %205 = add i16 %204, 1
  store i16 %205, ptr %198, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %206 = getelementptr i8, ptr %195, i32 -276
  %207 = load i32, ptr %206, align 4
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %214, label %210

210:                                              ; preds = %197
  %211 = getelementptr i8, ptr %195, i32 104
  %212 = load volatile ptr, ptr %211, align 8
  %213 = icmp eq ptr %212, null
  br i1 %213, label %214, label %222

214:                                              ; preds = %210, %197
  %215 = load ptr, ptr %199, align 8
  %216 = getelementptr inbounds %struct.io_uring, ptr %215, i32 0, i32 2
  %217 = load volatile i32, ptr %216, align 64
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !91
  %218 = getelementptr i8, ptr %195, i32 -196
  %219 = load i32, ptr %218, align 4
  %220 = icmp eq i32 %217, %219
  br i1 %220, label %193, label %222

221:                                              ; preds = %193
  call void @mutex_unlock(ptr noundef %30) #21
  call void @schedule() #21
  call void @mutex_lock(ptr noundef %30) #21
  br label %222

222:                                              ; preds = %221, %214, %210
  %223 = load ptr, ptr %33, align 4
  %224 = icmp eq ptr %223, %33
  br i1 %224, label %237, label %225

225:                                              ; preds = %225, %222
  %226 = phi ptr [ %235, %225 ], [ %223, %222 ]
  %227 = getelementptr i8, ptr %226, i32 96
  call void @_raw_spin_lock(ptr noundef %227) #21
  %228 = getelementptr i8, ptr %226, i32 -280
  %229 = load ptr, ptr %228, align 8
  %230 = getelementptr inbounds %struct.io_rings, ptr %229, i32 0, i32 7
  %231 = load i32, ptr %230, align 4
  %232 = and i32 %231, -2
  store volatile i32 %232, ptr %230, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %233 = load i16, ptr %227, align 4
  %234 = add i16 %233, 1
  store i16 %234, ptr %227, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %235 = load ptr, ptr %226, align 4
  %236 = icmp eq ptr %235, %33
  br i1 %236, label %237, label %225

237:                                              ; preds = %225, %222, %190, %187
  call void @finish_wait(ptr noundef %38, ptr noundef nonnull %4) #21
  %238 = load volatile i32, ptr @jiffies, align 64
  %239 = load i32, ptr %32, align 4
  %240 = add i32 %239, %238
  br label %183

241:                                              ; preds = %77, %74
  call fastcc void @io_uring_cancel_generic(i1 noundef zeroext true, ptr noundef %0)
  %242 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 4
  store ptr null, ptr %242, align 4
  %243 = load ptr, ptr %33, align 4
  %244 = icmp eq ptr %243, %33
  br i1 %244, label %257, label %245

245:                                              ; preds = %245, %241
  %246 = phi ptr [ %255, %245 ], [ %243, %241 ]
  %247 = getelementptr i8, ptr %246, i32 96
  call void @_raw_spin_lock(ptr noundef %247) #21
  %248 = getelementptr i8, ptr %246, i32 -280
  %249 = load ptr, ptr %248, align 8
  %250 = getelementptr inbounds %struct.io_rings, ptr %249, i32 0, i32 7
  %251 = load i32, ptr %250, align 4
  %252 = or i32 %251, 1
  store volatile i32 %252, ptr %250, align 4
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %253 = load i16, ptr %247, align 4
  %254 = add i16 %253, 1
  store i16 %254, ptr %247, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !44
  %255 = load ptr, ptr %246, align 4
  %256 = icmp eq ptr %255, %33
  br i1 %256, label %257, label %245

257:                                              ; preds = %245, %241
  %258 = call fastcc zeroext i1 @io_run_task_work()
  call void @mutex_unlock(ptr noundef %30) #21
  %259 = getelementptr inbounds %struct.io_sq_data, ptr %0, i32 0, i32 11
  call void @complete(ptr noundef %259) #21
  call void @do_exit(i32 noundef 0) #27
  unreachable
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_new_task(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_cpus_allowed_ptr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noreturn null_pointer_is_valid
declare dso_local void @do_exit(i32 noundef) local_unnamed_addr #20

; Function Attrs: null_pointer_is_valid
declare dso_local void @__set_task_comm(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @get_signal(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_create_kern(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @anon_inode_getfile_secure(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_unused_fd_flags(i32 noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_ctx_quiesce(ptr noundef %0) unnamed_addr #4 {
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %0, ptr noundef null) #21
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %2) #21
  %3 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 8
  br label %4

4:                                                ; preds = %7, %1
  %5 = tail call i32 @wait_for_completion_interruptible_timeout(ptr noundef %3, i32 noundef 100) #21
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @io_run_task_work_sig()
  tail call fastcc void @io_req_caches_free(ptr noundef %0)
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %4, label %10

10:                                               ; preds = %7
  tail call void @mutex_lock(ptr noundef %2) #21
  br label %14

11:                                               ; preds = %4
  %12 = tail call i32 @llvm.smin.i32(i32 %5, i32 0)
  tail call void @mutex_lock(ptr noundef %2) #21
  %13 = icmp sgt i32 %5, -1
  br i1 %13, label %60, label %14

14:                                               ; preds = %11, %10
  %15 = phi i32 [ %8, %10 ], [ %12, %11 ]
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %16 = load volatile i32, ptr %0, align 4
  %17 = and i32 %16, 3
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %28, !prof !10

19:                                               ; preds = %14
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %21 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %22 = inttoptr i32 %21 to ptr
  %23 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %22) #6, !srcloc !12
  %24 = add i32 %23, %16
  %25 = inttoptr i32 %24 to ptr
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, 1
  store i32 %27, ptr %25, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %20) #21, !srcloc !22
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %36

28:                                               ; preds = %14
  %29 = getelementptr inbounds %struct.percpu_ref, ptr %0, i32 0, i32 1
  %30 = load ptr, ptr %29, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !24
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %30) #21, !srcloc !13
  %31 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %30, ptr %30, i32 0, i32 1, ptr elementtype(i32) %30) #21, !srcloc !25
  %32 = extractvalue { i32, i32, i32 } %31, 0
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %28
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !26
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %36

35:                                               ; preds = %28
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  tail call void @wait_for_completion(ptr noundef %3) #21
  tail call void @percpu_ref_resurrect(ptr noundef %0) #21
  br label %60

36:                                               ; preds = %34, %19
  tail call void @percpu_ref_resurrect(ptr noundef %0) #21
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !20
  %37 = load volatile i32, ptr %0, align 4
  %38 = and i32 %37, 3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %49, !prof !10

40:                                               ; preds = %36
  %41 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !21
  %42 = tail call i32 @llvm.read_register.i32(metadata !0) #21
  %43 = inttoptr i32 %42 to ptr
  %44 = tail call i32 asm "mrc p15, 0, $0, c13, c0, 4", "=r,*Q"(ptr elementtype(i32) %43) #6, !srcloc !12
  %45 = add i32 %44, %37
  %46 = inttoptr i32 %45 to ptr
  %47 = load i32, ptr %46, align 4
  %48 = add i32 %47, -1
  store i32 %48, ptr %46, align 4
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %41) #21, !srcloc !22
  br label %59

49:                                               ; preds = %36
  %50 = getelementptr inbounds %struct.percpu_ref, ptr %0, i32 0, i32 1
  %51 = load ptr, ptr %50, align 4
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %51) #21, !srcloc !13
  %52 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %51, ptr %51, i32 1, ptr elementtype(i32) %51) #21, !srcloc !35
  %53 = extractvalue { i32, i32 } %52, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %59, !prof !11

55:                                               ; preds = %49
  %56 = load ptr, ptr %50, align 4
  %57 = getelementptr inbounds %struct.percpu_ref_data, ptr %56, i32 0, i32 1
  %58 = load ptr, ptr %57, align 4
  tail call void %58(ptr noundef %0) #21
  br label %59

59:                                               ; preds = %55, %49, %40
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !23
  br label %60

60:                                               ; preds = %59, %35, %11
  %61 = phi i32 [ 0, %11 ], [ %15, %35 ], [ %15, %59 ]
  ret i32 %61
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_sqe_buffers_register(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = alloca ptr, align 4
  %6 = alloca ptr, align 4
  %7 = alloca %struct.iovec, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store ptr null, ptr %5, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #21
  store ptr null, ptr %6, align 4, !annotation !9
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #21
  store i64 0, ptr %7, align 8, !annotation !9
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 11
  %9 = load ptr, ptr %8, align 64
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %98

11:                                               ; preds = %4
  %12 = add i32 %2, -16385
  %13 = icmp ult i32 %12, -16384
  br i1 %13, label %98, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %16 = load ptr, ptr %15, align 16
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %33

18:                                               ; preds = %14
  %19 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %20 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3520, i32 noundef 36) #25
  %21 = icmp eq ptr %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = tail call i32 @percpu_ref_init(ptr noundef nonnull %20, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  tail call void @kfree(ptr noundef nonnull %20) #21
  br label %26

26:                                               ; preds = %25, %18
  store ptr null, ptr %15, align 16
  br label %98

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.io_rsrc_node, ptr %20, i32 0, i32 1
  store volatile ptr %28, ptr %28, align 8
  %29 = getelementptr inbounds %struct.io_rsrc_node, ptr %20, i32 0, i32 1, i32 1
  store ptr %28, ptr %29, align 4
  %30 = getelementptr inbounds %struct.io_rsrc_node, ptr %20, i32 0, i32 2
  store volatile ptr %30, ptr %30, align 8
  %31 = getelementptr inbounds %struct.io_rsrc_node, ptr %20, i32 0, i32 2, i32 1
  store ptr %30, ptr %31, align 4
  %32 = getelementptr inbounds %struct.io_rsrc_node, ptr %20, i32 0, i32 5
  store i8 0, ptr %32, align 8
  store ptr %20, ptr %15, align 16
  br label %33

33:                                               ; preds = %27, %14
  %34 = call fastcc i32 @io_rsrc_data_alloc(ptr noundef %0, ptr noundef nonnull @io_rsrc_buf_put, ptr noundef %3, i32 noundef %2, ptr noundef nonnull %6) #22
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %98

36:                                               ; preds = %33
  %37 = shl nuw nsw i32 %2, 2
  %38 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %37, i32 noundef 3520) #26
  store ptr %38, ptr %8, align 64
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.iovec, ptr %7, i32 0, i32 1
  %42 = load ptr, ptr %6, align 4
  %43 = getelementptr inbounds %struct.io_rsrc_data, ptr %42, i32 0, i32 1
  %44 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 10
  br label %47

45:                                               ; preds = %36
  %46 = load ptr, ptr %6, align 4
  tail call fastcc void @io_rsrc_data_free(ptr noundef %46)
  br label %98

47:                                               ; preds = %79, %40
  %48 = phi i32 [ 0, %40 ], [ %80, %79 ]
  %49 = call fastcc i32 @io_copy_iov(ptr noundef nonnull %7, ptr noundef %1, i32 noundef %48)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %84

51:                                               ; preds = %47
  %52 = load i32, ptr %41, align 4
  %53 = add i32 %52, 4095
  %54 = load ptr, ptr %7, align 8
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  %57 = icmp eq i32 %52, 0
  br i1 %57, label %65, label %84

58:                                               ; preds = %51
  %59 = add i32 %52, -1073741825
  %60 = icmp ult i32 %59, -1073741824
  br i1 %60, label %84, label %61

61:                                               ; preds = %58
  %62 = ptrtoint ptr %54 to i32
  %63 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %62, i32 %53) #21
  %64 = extractvalue { i32, i1 } %63, 1
  br i1 %64, label %84, label %74

65:                                               ; preds = %56
  %66 = and i32 %48, 511
  %67 = lshr i32 %48, 9
  %68 = load ptr, ptr %43, align 4
  %69 = getelementptr ptr, ptr %68, i32 %67
  %70 = load ptr, ptr %69, align 4
  %71 = getelementptr i64, ptr %70, i32 %66
  %72 = load i64, ptr %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %65, %61
  %75 = load ptr, ptr %8, align 64
  %76 = getelementptr ptr, ptr %75, i32 %48
  %77 = call fastcc i32 @io_sqe_buffer_register(ptr noundef %0, ptr noundef nonnull %7, ptr noundef %76, ptr noundef nonnull %5)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = add nuw i32 %48, 1
  %81 = load i32, ptr %44, align 4
  %82 = add i32 %81, 1
  store i32 %82, ptr %44, align 4
  %83 = icmp eq i32 %80, %2
  br i1 %83, label %84, label %47

84:                                               ; preds = %79, %74, %65, %61, %58, %56, %47
  %85 = phi i32 [ 0, %79 ], [ %49, %47 ], [ %77, %74 ], [ -22, %65 ], [ -14, %56 ], [ -14, %58 ], [ -75, %61 ]
  %86 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 3
  %87 = load ptr, ptr %86, align 4
  %88 = icmp ne ptr %87, null
  %89 = load i1, ptr @io_sqe_buffers_register.__already_done, align 1
  %90 = xor i1 %89, true
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %92, label %93, !prof !11

92:                                               ; preds = %84
  store i1 true, ptr @io_sqe_buffers_register.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 9292, i32 noundef 9, ptr noundef null) #21
  br label %93

93:                                               ; preds = %92, %84
  %94 = load ptr, ptr %6, align 4
  store ptr %94, ptr %86, align 4
  %95 = icmp eq i32 %85, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  call fastcc void @__io_sqe_buffers_unregister(ptr noundef %0)
  br label %98

97:                                               ; preds = %93
  call fastcc void @io_rsrc_node_switch(ptr noundef %0, ptr noundef null)
  br label %98

98:                                               ; preds = %97, %96, %45, %33, %26, %11, %4
  %99 = phi i32 [ -12, %45 ], [ -16, %4 ], [ -22, %11 ], [ %34, %33 ], [ 0, %97 ], [ %85, %96 ], [ -12, %26 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  ret i32 %99
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_sqe_files_register(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #21
  store i32 0, ptr %5, align 4, !annotation !9
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 2
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %125

9:                                                ; preds = %4
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %125, label %11

11:                                               ; preds = %9
  %12 = icmp ugt i32 %2, 32768
  br i1 %12, label %125, label %13

13:                                               ; preds = %11
  %14 = tail call ptr @llvm.thread.pointer() #21
  %15 = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 93
  %16 = load ptr, ptr %15, align 16
  %17 = getelementptr %struct.signal_struct, ptr %16, i32 0, i32 50, i32 7
  %18 = load volatile i32, ptr %17, align 8
  %19 = icmp ult i32 %18, %2
  br i1 %19, label %125, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13
  %22 = load ptr, ptr %21, align 16
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %39

24:                                               ; preds = %20
  %25 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %26 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 36) #25
  %27 = icmp eq ptr %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %24
  %29 = tail call i32 @percpu_ref_init(ptr noundef nonnull %26, ptr noundef nonnull @io_rsrc_node_ref_zero, i32 noundef 0, i32 noundef 3264) #21
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  tail call void @kfree(ptr noundef nonnull %26) #21
  br label %32

32:                                               ; preds = %31, %24
  store ptr null, ptr %21, align 16
  br label %125

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.io_rsrc_node, ptr %26, i32 0, i32 1
  store volatile ptr %34, ptr %34, align 8
  %35 = getelementptr inbounds %struct.io_rsrc_node, ptr %26, i32 0, i32 1, i32 1
  store ptr %34, ptr %35, align 4
  %36 = getelementptr inbounds %struct.io_rsrc_node, ptr %26, i32 0, i32 2
  store volatile ptr %36, ptr %36, align 8
  %37 = getelementptr inbounds %struct.io_rsrc_node, ptr %26, i32 0, i32 2, i32 1
  store ptr %36, ptr %37, align 4
  %38 = getelementptr inbounds %struct.io_rsrc_node, ptr %26, i32 0, i32 5
  store i8 0, ptr %38, align 8
  store ptr %26, ptr %21, align 16
  br label %39

39:                                               ; preds = %33, %20
  %40 = tail call fastcc i32 @io_rsrc_data_alloc(ptr noundef %0, ptr noundef nonnull @io_rsrc_file_put, ptr noundef %3, i32 noundef %2, ptr noundef %6) #22
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %125

42:                                               ; preds = %39
  %43 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  %44 = shl nuw nsw i32 %2, 2
  %45 = tail call noalias ptr @kvmalloc_node(i32 noundef %44, i32 noundef 4197824, i32 noundef -1) #26
  store ptr %45, ptr %43, align 4
  %46 = icmp eq ptr %45, null
  br i1 %46, label %122, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %49 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  br label %50

50:                                               ; preds = %91, %47
  %51 = phi i32 [ 0, %47 ], [ %92, %91 ]
  %52 = getelementptr i32, ptr %1, i32 %51
  %53 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %52, i32 4, i32 -1090519040) #23, !srcloc !27
  %54 = extractvalue { i32, i32 } %53, 0
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %62, !prof !10

56:                                               ; preds = %50
  %57 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %48) #6, !srcloc !28
  %58 = and i32 %57, -13
  %59 = or i32 %58, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %59) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %60 = call i32 @arm_copy_from_user(ptr noundef nonnull %5, ptr noundef %52, i32 noundef 4) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %57) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62, !prof !10

62:                                               ; preds = %56, %50
  %63 = phi i32 [ %60, %56 ], [ 4, %50 ]
  %64 = sub i32 4, %63
  %65 = getelementptr i8, ptr %5, i32 %64
  call void @llvm.memset.p0.i32(ptr align 1 %65, i8 0, i32 %63, i1 false) #21
  br label %101

66:                                               ; preds = %56
  %67 = load i32, ptr %5, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %80

69:                                               ; preds = %66
  %70 = load ptr, ptr %6, align 8
  %71 = and i32 %51, 511
  %72 = lshr i32 %51, 9
  %73 = getelementptr inbounds %struct.io_rsrc_data, ptr %70, i32 0, i32 1
  %74 = load ptr, ptr %73, align 4
  %75 = getelementptr ptr, ptr %74, i32 %72
  %76 = load ptr, ptr %75, align 4
  %77 = getelementptr i64, ptr %76, i32 %71
  %78 = load i64, ptr %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %91, label %101, !prof !10

80:                                               ; preds = %66
  %81 = call ptr @fget(i32 noundef %67) #21
  %82 = icmp eq ptr %81, null
  br i1 %82, label %101, label %83, !prof !11

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.file, ptr %81, i32 0, i32 3
  %85 = load ptr, ptr %84, align 4
  %86 = icmp eq ptr %85, @io_uring_fops
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  call void @fput(ptr noundef nonnull %81) #21
  br label %101

88:                                               ; preds = %83
  %89 = load ptr, ptr %43, align 4
  %90 = getelementptr %struct.io_fixed_file, ptr %89, i32 %51
  call fastcc void @io_fixed_file_set(ptr noundef %90, ptr noundef nonnull %81)
  br label %91

91:                                               ; preds = %88, %69
  %92 = add nuw i32 %51, 1
  %93 = load i32, ptr %49, align 8
  %94 = add i32 %93, 1
  store i32 %94, ptr %49, align 8
  %95 = icmp eq i32 %92, %2
  br i1 %95, label %96, label %50

96:                                               ; preds = %91
  %97 = call fastcc i32 @io_sqe_files_scm(ptr noundef %0)
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %96
  call fastcc void @__io_sqe_files_unregister(ptr noundef %0)
  br label %125

100:                                              ; preds = %96
  call fastcc void @io_rsrc_node_switch(ptr noundef %0, ptr noundef null)
  br label %125

101:                                              ; preds = %87, %80, %69, %62
  %102 = phi i32 [ -9, %87 ], [ -14, %62 ], [ -9, %80 ], [ -22, %69 ]
  %103 = load i32, ptr %49, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %120, label %105

105:                                              ; preds = %116, %101
  %106 = phi i32 [ %117, %116 ], [ %103, %101 ]
  %107 = phi i32 [ %118, %116 ], [ 0, %101 ]
  %108 = load ptr, ptr %43, align 4
  %109 = getelementptr %struct.io_fixed_file, ptr %108, i32 %107
  %110 = load i32, ptr %109, align 4
  %111 = and i32 %110, -4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %105
  %114 = inttoptr i32 %111 to ptr
  call void @fput(ptr noundef nonnull %114) #21
  %115 = load i32, ptr %49, align 8
  br label %116

116:                                              ; preds = %113, %105
  %117 = phi i32 [ %106, %105 ], [ %115, %113 ]
  %118 = add nuw i32 %107, 1
  %119 = icmp ult i32 %118, %117
  br i1 %119, label %105, label %120

120:                                              ; preds = %116, %101
  %121 = load ptr, ptr %43, align 4
  call void @kvfree(ptr noundef %121) #21
  store ptr null, ptr %43, align 4
  store i32 0, ptr %49, align 8
  br label %122

122:                                              ; preds = %120, %42
  %123 = phi i32 [ %102, %120 ], [ -12, %42 ]
  %124 = load ptr, ptr %6, align 8
  call fastcc void @io_rsrc_data_free(ptr noundef %124)
  store ptr null, ptr %6, align 8
  br label %125

125:                                              ; preds = %122, %100, %99, %39, %32, %13, %11, %9, %4
  %126 = phi i32 [ %123, %122 ], [ %97, %99 ], [ 0, %100 ], [ -16, %4 ], [ -22, %9 ], [ -24, %11 ], [ -24, %13 ], [ %40, %39 ], [ -12, %32 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #21
  ret i32 %126
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_probe(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %1, i32 8) #21
  %4 = extractvalue { i32, i1 } %3, 1
  %5 = extractvalue { i32, i1 } %3, 0
  %6 = tail call i32 @llvm.uadd.sat.i32(i32 %5, i32 16) #21
  %7 = icmp eq i32 %6, -1
  %8 = select i1 %4, i1 true, i1 %7
  br i1 %8, label %67, label %9

9:                                                ; preds = %2
  %10 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %6, i32 noundef 3520) #26
  %11 = icmp eq ptr %10, null
  br i1 %11, label %67, label %12

12:                                               ; preds = %9
  %13 = icmp slt i32 %6, 0
  %14 = load i1, ptr @check_copy_size.__already_done, align 1
  %15 = xor i1 %14, true
  %16 = select i1 %13, i1 %15, i1 false
  br i1 %16, label %17, label %18, !prof !11

17:                                               ; preds = %12
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.69, i32 noundef 230, i32 noundef 9, ptr noundef null) #21
  br label %18

18:                                               ; preds = %17, %12
  br i1 %13, label %65, label %19, !prof !11

19:                                               ; preds = %18
  %20 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %6, i32 -1090519040) #23
  %21 = extractvalue { i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31, !prof !10

23:                                               ; preds = %19
  %24 = tail call ptr @llvm.thread.pointer() #21
  %25 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %26 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %25) #6, !srcloc !28
  %27 = and i32 %26, -13
  %28 = or i32 %27, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %28) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %29 = tail call i32 @arm_copy_from_user(ptr noundef nonnull %10, ptr noundef %0, i32 noundef %6) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %26) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31, !prof !10

31:                                               ; preds = %23, %19
  %32 = phi i32 [ %29, %23 ], [ %6, %19 ]
  %33 = sub i32 %6, %32
  %34 = getelementptr i8, ptr %10, i32 %33
  tail call void @llvm.memset.p0.i32(ptr align 1 %34, i8 0, i32 %32, i1 false) #21
  br label %65

35:                                               ; preds = %23
  %36 = tail call ptr @memchr_inv(ptr noundef nonnull %10, i32 noundef 0, i32 noundef %6) #21
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %65

38:                                               ; preds = %35
  store i8 39, ptr %10, align 64
  %39 = tail call i32 @llvm.umin.i32(i32 %1, i32 40)
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %56, label %41

41:                                               ; preds = %51, %38
  %42 = phi i32 [ %52, %51 ], [ 0, %38 ]
  %43 = trunc i32 %42 to i8
  %44 = getelementptr %struct.io_uring_probe, ptr %10, i32 0, i32 4, i32 %42
  store i8 %43, ptr %44, align 8
  %45 = getelementptr [40 x %struct.io_op_def], ptr @io_op_defs, i32 0, i32 %42
  %46 = load i16, ptr %45, align 4
  %47 = and i16 %46, 256
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %41
  %50 = getelementptr %struct.io_uring_probe, ptr %10, i32 0, i32 4, i32 %42, i32 2
  store i16 1, ptr %50, align 2
  br label %51

51:                                               ; preds = %49, %41
  %52 = add nuw nsw i32 %42, 1
  %53 = icmp eq i32 %52, %39
  br i1 %53, label %54, label %41

54:                                               ; preds = %51
  %55 = trunc i32 %39 to i8
  br label %56

56:                                               ; preds = %54, %38
  %57 = phi i8 [ 0, %38 ], [ %55, %54 ]
  %58 = getelementptr inbounds %struct.io_uring_probe, ptr %10, i32 0, i32 1
  store i8 %57, ptr %58, align 1
  %59 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %25) #6, !srcloc !28
  %60 = and i32 %59, -13
  %61 = or i32 %60, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %61) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %62 = tail call i32 @arm_copy_to_user(ptr noundef %0, ptr noundef nonnull %10, i32 noundef %6) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %59) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %63 = icmp eq i32 %62, 0
  %64 = select i1 %63, i32 0, i32 -14
  br label %65

65:                                               ; preds = %56, %35, %31, %18
  %66 = phi i32 [ -22, %35 ], [ %64, %56 ], [ -14, %18 ], [ -14, %31 ]
  tail call void @kfree(ptr noundef nonnull %10) #21
  br label %67

67:                                               ; preds = %65, %9, %2
  %68 = phi i32 [ %66, %65 ], [ -75, %2 ], [ -12, %9 ]
  ret i32 %68
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_register_restrictions(ptr nocapture noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %5 = load i32, ptr %4, align 4
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %69, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12
  %10 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 4
  %11 = load i8, ptr %10, align 2, !range !45
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %69

13:                                               ; preds = %8
  %14 = icmp eq ptr %1, null
  %15 = icmp ugt i32 %2, 64
  %16 = or i1 %14, %15
  br i1 %16, label %69, label %17

17:                                               ; preds = %13
  %18 = shl nuw nsw i32 %2, 4
  %19 = tail call ptr @memdup_user(ptr noundef nonnull %1, i32 noundef %18) #21
  %20 = icmp ugt ptr %19, inttoptr (i32 -4096 to ptr)
  br i1 %20, label %27, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %2, 0
  br i1 %22, label %66, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 3
  %25 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 2
  %26 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 12, i32 1
  br label %29

27:                                               ; preds = %17
  %28 = ptrtoint ptr %19 to i32
  br label %69

29:                                               ; preds = %62, %23
  %30 = phi i32 [ 0, %23 ], [ %63, %62 ]
  %31 = getelementptr %struct.io_uring_restriction, ptr %19, i32 %30
  %32 = load i16, ptr %31, align 4
  switch i16 %32, label %65 [
    i16 0, label %33
    i16 1, label %44
    i16 2, label %56
    i16 3, label %59
  ]

33:                                               ; preds = %29
  %34 = getelementptr %struct.io_uring_restriction, ptr %19, i32 %30, i32 1
  %35 = load i8, ptr %34, align 2
  %36 = icmp ugt i8 %35, 19
  br i1 %36, label %65, label %37

37:                                               ; preds = %33
  %38 = zext i8 %35 to i32
  %39 = shl nuw nsw i32 1, %38
  %40 = lshr i32 %38, 5
  %41 = getelementptr i32, ptr %9, i32 %40
  %42 = load i32, ptr %41, align 4
  %43 = or i32 %42, %39
  store i32 %43, ptr %41, align 4
  br label %62

44:                                               ; preds = %29
  %45 = getelementptr %struct.io_uring_restriction, ptr %19, i32 %30, i32 1
  %46 = load i8, ptr %45, align 2
  %47 = icmp ugt i8 %46, 39
  br i1 %47, label %65, label %48

48:                                               ; preds = %44
  %49 = zext i8 %46 to i32
  %50 = and i32 %49, 31
  %51 = shl nuw i32 1, %50
  %52 = lshr i32 %49, 5
  %53 = getelementptr i32, ptr %26, i32 %52
  %54 = load i32, ptr %53, align 4
  %55 = or i32 %54, %51
  store i32 %55, ptr %53, align 4
  br label %62

56:                                               ; preds = %29
  %57 = getelementptr %struct.io_uring_restriction, ptr %19, i32 %30, i32 1
  %58 = load i8, ptr %57, align 2
  store i8 %58, ptr %25, align 4
  br label %62

59:                                               ; preds = %29
  %60 = getelementptr %struct.io_uring_restriction, ptr %19, i32 %30, i32 1
  %61 = load i8, ptr %60, align 2
  store i8 %61, ptr %24, align 1
  br label %62

62:                                               ; preds = %59, %56, %48, %37
  %63 = add nuw i32 %30, 1
  %64 = icmp eq i32 %63, %2
  br i1 %64, label %66, label %29

65:                                               ; preds = %44, %33, %29
  tail call void @llvm.memset.p0.i32(ptr noundef align 64 dereferenceable(16) %9, i8 0, i32 16, i1 false)
  br label %67

66:                                               ; preds = %62, %21
  store i8 1, ptr %10, align 2
  br label %67

67:                                               ; preds = %66, %65
  %68 = phi i32 [ 0, %66 ], [ -22, %65 ]
  tail call void @kfree(ptr noundef %19) #21
  br label %69

69:                                               ; preds = %67, %27, %13, %8, %3
  %70 = phi i32 [ %28, %27 ], [ %68, %67 ], [ -77, %3 ], [ -16, %8 ], [ -22, %13 ]
  ret i32 %70
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_register_rsrc(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 {
  %5 = alloca %struct.io_uring_rsrc_register, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %5) #21
  %6 = icmp eq i32 %2, 32
  br i1 %6, label %7, label %55

7:                                                ; preds = %4
  call void @llvm.memset.p0.i32(ptr noundef nonnull align 8 dereferenceable(32) %5, i8 0, i32 32, i1 false)
  %8 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 32, i32 -1090519040) #23, !srcloc !27
  %9 = extractvalue { i32, i32 } %8, 0
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %19, !prof !10

11:                                               ; preds = %7
  %12 = tail call ptr @llvm.thread.pointer() #21
  %13 = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %14 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %13) #6, !srcloc !28
  %15 = and i32 %14, -13
  %16 = or i32 %15, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %16) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %17 = call i32 @arm_copy_from_user(ptr noundef nonnull %5, ptr noundef %1, i32 noundef 32) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %14) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19, !prof !10

19:                                               ; preds = %11, %7
  %20 = phi i32 [ %17, %11 ], [ 32, %7 ]
  %21 = sub i32 32, %20
  %22 = getelementptr i8, ptr %5, i32 %21
  call void @llvm.memset.p0.i32(ptr align 1 %22, i8 0, i32 %20, i1 false) #21
  br label %55

23:                                               ; preds = %11
  %24 = load i32, ptr %5, align 8
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 1
  %27 = load i32, ptr %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = select i1 %25, i1 true, i1 %28
  br i1 %29, label %55, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 2
  %32 = load i64, ptr %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  switch i32 %3, label %55 [
    i32 0, label %35
    i32 1, label %45
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 3
  %37 = load i64, ptr %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = inttoptr i32 %38 to ptr
  %40 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 4
  %41 = load i64, ptr %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = inttoptr i32 %42 to ptr
  %44 = call fastcc i32 @io_sqe_files_register(ptr noundef %0, ptr noundef %39, i32 noundef %24, ptr noundef %43)
  br label %55

45:                                               ; preds = %34
  %46 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 3
  %47 = load i64, ptr %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = inttoptr i32 %48 to ptr
  %50 = getelementptr inbounds %struct.io_uring_rsrc_register, ptr %5, i32 0, i32 4
  %51 = load i64, ptr %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = inttoptr i32 %52 to ptr
  %54 = call fastcc i32 @io_sqe_buffers_register(ptr noundef %0, ptr noundef %49, i32 noundef %24, ptr noundef %53)
  br label %55

55:                                               ; preds = %45, %35, %34, %30, %23, %19, %4
  %56 = phi i32 [ %54, %45 ], [ %44, %35 ], [ -22, %4 ], [ -22, %30 ], [ -22, %23 ], [ -22, %34 ], [ -14, %19 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %5) #21
  ret i32 %56
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_register_iowq_aff(ptr noundef %0, i32 noundef %1) unnamed_addr #4 {
  %3 = alloca [1 x %struct.cpumask], align 4
  %4 = tail call ptr @llvm.thread.pointer() #21
  %5 = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 91
  %6 = load ptr, ptr %5, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #21
  %7 = icmp eq ptr %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.io_uring_task, ptr %6, i32 0, i32 4
  %10 = load ptr, ptr %9, align 8
  %11 = icmp eq ptr %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  store i32 0, ptr %3, align 4
  %13 = tail call i32 @llvm.umin.i32(i32 %1, i32 4)
  %14 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %13, i32 -1090519040) #23, !srcloc !27
  %15 = extractvalue { i32, i32 } %14, 0
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23, !prof !10

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %19 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %18) #6, !srcloc !28
  %20 = and i32 %19, -13
  %21 = or i32 %20, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %21) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %22 = call i32 @arm_copy_from_user(ptr noundef nonnull %3, ptr noundef %0, i32 noundef %13) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %19) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  br label %23

23:                                               ; preds = %17, %12
  %24 = phi i32 [ %22, %17 ], [ %13, %12 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26, !prof !10

26:                                               ; preds = %23
  %27 = sub i32 %13, %24
  %28 = getelementptr i8, ptr %3, i32 %27
  call void @llvm.memset.p0.i32(ptr align 1 %28, i8 0, i32 %24, i1 false) #21
  br label %32

29:                                               ; preds = %23
  %30 = load ptr, ptr %9, align 8
  %31 = call i32 @io_wq_cpu_affinity(ptr noundef %30, ptr noundef nonnull %3) #21
  br label %32

32:                                               ; preds = %29, %26, %8, %2
  %33 = phi i32 [ %31, %29 ], [ -22, %8 ], [ -22, %2 ], [ -14, %26 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #21
  ret i32 %33
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_unregister_iowq_aff() unnamed_addr #4 {
  %1 = tail call ptr @llvm.thread.pointer() #21
  %2 = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 91
  %3 = load ptr, ptr %2, align 8
  %4 = icmp eq ptr %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.io_uring_task, ptr %3, i32 0, i32 4
  %7 = load ptr, ptr %6, align 8
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 @io_wq_cpu_affinity(ptr noundef nonnull %7, ptr noundef null) #21
  br label %11

11:                                               ; preds = %9, %5, %0
  %12 = phi i32 [ %10, %9 ], [ -22, %5 ], [ -22, %0 ]
  ret i32 %12
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_register_iowq_max_workers(ptr noundef %0, ptr noundef %1) unnamed_addr #4 {
  %3 = alloca [2 x i32], align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #21
  store i64 0, ptr %3, align 8, !annotation !9
  %4 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %1, i32 8, i32 -1090519040) #23
  %5 = extractvalue { i32, i32 } %4, 0
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %22, !prof !10

7:                                                ; preds = %2
  %8 = tail call ptr @llvm.thread.pointer() #21
  %9 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %10 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %9) #6, !srcloc !28
  %11 = and i32 %10, -13
  %12 = or i32 %11, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %12) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %13 = call i32 @arm_copy_from_user(ptr noundef nonnull %3, ptr noundef %1, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %10) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22, !prof !10

15:                                               ; preds = %7
  %16 = load i32, ptr %3, align 8
  %17 = icmp slt i32 %16, 0
  %18 = getelementptr inbounds [2 x i32], ptr %3, i32 0, i32 1
  %19 = load i32, ptr %18, align 4
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %17, i1 true, i1 %20
  br i1 %21, label %123, label %26

22:                                               ; preds = %7, %2
  %23 = phi i32 [ %13, %7 ], [ 8, %2 ]
  %24 = sub i32 8, %23
  %25 = getelementptr i8, ptr %3, i32 %24
  call void @llvm.memset.p0.i32(ptr align 1 %25, i8 0, i32 %23, i1 false) #21
  br label %123

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.anon.178, ptr %0, i32 0, i32 2
  %28 = load i32, ptr %27, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %51, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 5
  %33 = load ptr, ptr %32, align 16
  %34 = icmp eq ptr %33, null
  br i1 %34, label %56, label %35

35:                                               ; preds = %31
  call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr nonnull %33) #21, !srcloc !13
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %33, ptr nonnull %33, i32 1, ptr nonnull elementtype(i32) %33) #21, !srcloc !65
  %37 = extractvalue { i32, i32, i32 } %36, 0
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %43, label %39, !prof !11

39:                                               ; preds = %35
  %40 = add i32 %37, 1
  %41 = or i32 %40, %37
  %42 = icmp sgt i32 %41, -1
  br i1 %42, label %45, label %43, !prof !10

43:                                               ; preds = %39, %35
  %44 = phi i32 [ 2, %35 ], [ 1, %39 ]
  call void @refcount_warn_saturate(ptr noundef nonnull %33, i32 noundef %44) #21
  br label %45

45:                                               ; preds = %43, %39
  %46 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %46) #21
  %47 = getelementptr inbounds %struct.io_sq_data, ptr %33, i32 0, i32 2
  call void @mutex_lock(ptr noundef %47) #21
  call void @mutex_lock(ptr noundef %46) #21
  %48 = getelementptr inbounds %struct.io_sq_data, ptr %33, i32 0, i32 4
  %49 = load ptr, ptr %48, align 4
  %50 = icmp eq ptr %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %45, %26
  %52 = phi ptr [ %49, %45 ], [ %8, %26 ]
  %53 = phi ptr [ %33, %45 ], [ null, %26 ]
  %54 = getelementptr inbounds %struct.task_struct, ptr %52, i32 0, i32 91
  %55 = load ptr, ptr %54, align 8
  br label %56

56:                                               ; preds = %51, %45, %31
  %57 = phi ptr [ %33, %45 ], [ null, %31 ], [ %53, %51 ]
  %58 = phi ptr [ null, %45 ], [ null, %31 ], [ %55, %51 ]
  br label %59

59:                                               ; preds = %67, %56
  %60 = phi i1 [ true, %56 ], [ false, %67 ]
  %61 = phi i32 [ 0, %56 ], [ 1, %67 ]
  %62 = getelementptr [2 x i32], ptr %3, i32 0, i32 %61
  %63 = load i32, ptr %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = getelementptr %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 9, i32 %61
  store i32 %63, ptr %66, align 4
  br label %67

67:                                               ; preds = %65, %59
  br i1 %60, label %59, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 10
  store i8 1, ptr %69, align 4
  %70 = icmp eq ptr %58, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.io_uring_task, ptr %58, i32 0, i32 4
  %73 = load ptr, ptr %72, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = call i32 @io_wq_max_workers(ptr noundef nonnull %73, ptr noundef nonnull %3) #21
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %119

78:                                               ; preds = %71, %68
  store i64 0, ptr %3, align 8
  br label %79

79:                                               ; preds = %78, %75
  %80 = icmp eq ptr %57, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.io_sq_data, ptr %57, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %82) #21
  call fastcc void @io_put_sq_data(ptr noundef nonnull %57)
  br label %83

83:                                               ; preds = %81, %79
  %84 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %9) #6, !srcloc !28
  %85 = and i32 %84, -13
  %86 = or i32 %85, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %86) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %87 = call i32 @arm_copy_to_user(ptr noundef %1, ptr noundef nonnull %3, i32 noundef 8) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %84) #21, !srcloc !29
  call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %88 = icmp ne i32 %87, 0
  %89 = xor i1 %80, true
  %90 = select i1 %88, i1 true, i1 %89
  %91 = select i1 %88, i32 -14, i32 0
  br i1 %90, label %123, label %92

92:                                               ; preds = %83
  %93 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 7
  %94 = load ptr, ptr %93, align 4
  %95 = icmp eq ptr %94, %93
  br i1 %95, label %123, label %96

96:                                               ; preds = %92
  %97 = getelementptr i8, ptr %0, i32 644
  br label %98

98:                                               ; preds = %116, %96
  %99 = phi ptr [ %117, %116 ], [ %94, %96 ]
  %100 = getelementptr inbounds %struct.io_tctx_node, ptr %99, i32 0, i32 1
  %101 = load ptr, ptr %100, align 4
  %102 = getelementptr inbounds %struct.task_struct, ptr %101, i32 0, i32 91
  %103 = load ptr, ptr %102, align 8
  %104 = getelementptr inbounds %struct.io_uring_task, ptr %103, i32 0, i32 4
  %105 = load ptr, ptr %104, align 8
  %106 = icmp eq ptr %105, null
  %107 = load i1, ptr @io_register_iowq_max_workers.__already_done, align 1
  %108 = xor i1 %107, true
  %109 = select i1 %106, i1 %108, i1 false
  br i1 %109, label %110, label %111, !prof !11

110:                                              ; preds = %98
  store i1 true, ptr @io_register_iowq_max_workers.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 10946, i32 noundef 9, ptr noundef null) #21
  br label %111

111:                                              ; preds = %110, %98
  br i1 %106, label %116, label %112

112:                                              ; preds = %111
  %113 = load i64, ptr %97, align 4
  store i64 %113, ptr %3, align 8
  %114 = load ptr, ptr %104, align 8
  %115 = call i32 @io_wq_max_workers(ptr noundef %114, ptr noundef nonnull %3) #21
  br label %116

116:                                              ; preds = %112, %111
  %117 = load ptr, ptr %99, align 4
  %118 = icmp eq ptr %117, %93
  br i1 %118, label %123, label %98

119:                                              ; preds = %75
  %120 = icmp eq ptr %57, null
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %struct.io_sq_data, ptr %57, i32 0, i32 2
  call void @mutex_unlock(ptr noundef %122) #21
  call fastcc void @io_put_sq_data(ptr noundef nonnull %57)
  br label %123

123:                                              ; preds = %121, %119, %116, %92, %83, %22, %15
  %124 = phi i32 [ %91, %83 ], [ %76, %121 ], [ %76, %119 ], [ -14, %22 ], [ 0, %92 ], [ -22, %15 ], [ 0, %116 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #21
  ret i32 %124
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_reinit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_interruptible_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_resurrect(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_rsrc_data_alloc(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef writeonly %4) unnamed_addr #4 {
  %6 = load ptr, ptr getelementptr inbounds ([3 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 6), align 4
  %7 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 40) #25
  %8 = icmp eq ptr %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = shl i32 %3, 3
  %11 = tail call fastcc ptr @io_alloc_page_table(i32 noundef %10) #22
  %12 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 1
  store ptr %11, ptr %12, align 4
  %13 = icmp eq ptr %11, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @kfree(ptr noundef nonnull %7) #21
  br label %51

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 2
  store i32 %3, ptr %16, align 8
  store ptr %0, ptr %7, align 8
  %17 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 3
  store ptr %1, ptr %17, align 4
  %18 = icmp ne ptr %2, null
  %19 = icmp ne i32 %3, 0
  %20 = and i1 %18, %19
  br i1 %20, label %24, label %47

21:                                               ; preds = %35
  %22 = add nuw i32 %25, 1
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %47, label %24

24:                                               ; preds = %21, %15
  %25 = phi i32 [ %22, %21 ], [ 0, %15 ]
  %26 = and i32 %25, 511
  %27 = lshr i32 %25, 9
  %28 = getelementptr ptr, ptr %11, i32 %27
  %29 = load ptr, ptr %28, align 4
  %30 = getelementptr i64, ptr %29, i32 %26
  %31 = getelementptr i64, ptr %2, i32 %25
  %32 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %31, i32 8, i32 -1090519040) #23, !srcloc !27
  %33 = extractvalue { i32, i32 } %32, 0
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %43, !prof !10

35:                                               ; preds = %24
  %36 = tail call ptr @llvm.thread.pointer() #21
  %37 = getelementptr inbounds %struct.thread_info, ptr %36, i32 0, i32 3
  %38 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %37) #6, !srcloc !28
  %39 = and i32 %38, -13
  %40 = or i32 %39, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %40) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %41 = tail call i32 @arm_copy_from_user(ptr noundef %30, ptr noundef %31, i32 noundef 8) #21
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %38) #21, !srcloc !29
  tail call void asm sideeffect "isb ", "~{memory}"() #21, !srcloc !30
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %21, label %43, !prof !10

43:                                               ; preds = %35, %24
  %44 = phi i32 [ %41, %35 ], [ 8, %24 ]
  %45 = sub i32 8, %44
  %46 = getelementptr i8, ptr %30, i32 %45
  tail call void @llvm.memset.p0.i32(ptr align 1 %46, i8 0, i32 %44, i1 false) #21
  tail call fastcc void @io_rsrc_data_free(ptr noundef nonnull %7)
  br label %51

47:                                               ; preds = %21, %15
  %48 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 4
  store volatile i32 1, ptr %48, align 8
  %49 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 5
  store i32 0, ptr %49, align 4
  %50 = getelementptr inbounds %struct.io_rsrc_data, ptr %7, i32 0, i32 5, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %50, ptr noundef nonnull @.str.83, ptr noundef nonnull @init_completion.__key) #21
  store ptr %7, ptr %4, align 4
  br label %51

51:                                               ; preds = %47, %43, %14, %5
  %52 = phi i32 [ -14, %43 ], [ 0, %47 ], [ -12, %14 ], [ -12, %5 ]
  ret i32 %52
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_rsrc_buf_put(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) #0 {
  %3 = getelementptr inbounds %struct.io_rsrc_put, ptr %1, i32 0, i32 2
  %4 = load ptr, ptr %3, align 4
  %5 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 13, i32 1
  %6 = load ptr, ptr %5, align 4
  %7 = icmp eq ptr %4, %6
  br i1 %7, label %39, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %4, i32 0, i32 2
  %10 = load i32, ptr %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %19, label %12

12:                                               ; preds = %12, %8
  %13 = phi i32 [ %16, %12 ], [ 0, %8 ]
  %14 = getelementptr %struct.io_mapped_ubuf, ptr %4, i32 0, i32 4, i32 %13
  %15 = load ptr, ptr %14, align 4
  tail call void @unpin_user_page(ptr noundef %15) #21
  %16 = add nuw i32 %13, 1
  %17 = load i32, ptr %9, align 8
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %8
  %20 = getelementptr inbounds %struct.io_mapped_ubuf, ptr %4, i32 0, i32 3
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 2
  %25 = load ptr, ptr %24, align 4
  %26 = icmp eq ptr %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.user_struct, ptr %25, i32 0, i32 6
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %28) #21, !srcloc !13
  %29 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %28, ptr %28, i32 %21, ptr elementtype(i32) %28) #21, !srcloc !16
  br label %30

30:                                               ; preds = %27, %23
  %31 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14, i32 3
  %32 = load ptr, ptr %31, align 4
  %33 = icmp eq ptr %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = zext i32 %21 to i64
  %36 = getelementptr inbounds %struct.anon.17, ptr %32, i32 0, i32 21
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %36) #21, !srcloc !13
  %37 = tail call { i64, i32 } asm sideeffect "@ atomic64_sub\0A1:\09ldrexd\09$0, ${0:H}, [$3]\0A\09subs ${0:Q}, ${0:Q}, ${4:Q}\0A\09sbc ${0:R}, ${0:R}, ${4:R}\0A\09strexd\09$1, $0, ${0:H}, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,r,*Qo,~{cc}"(ptr elementtype(i64) %36, ptr %36, i64 %35, ptr elementtype(i64) %36) #21, !srcloc !88
  br label %38

38:                                               ; preds = %34, %30, %19
  tail call void @kvfree(ptr noundef %4) #21
  br label %39

39:                                               ; preds = %38, %2
  store ptr null, ptr %3, align 8
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc ptr @io_alloc_page_table(i32 noundef %0) unnamed_addr #4 {
  %2 = add i32 %0, 4095
  %3 = lshr i32 %2, 12
  %4 = shl nuw nsw i32 %3, 2
  %5 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %4, i32 noundef 4197824) #26
  %6 = icmp eq ptr %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = icmp ult i32 %2, 4096
  br i1 %8, label %29, label %9

9:                                                ; preds = %7
  %10 = call i32 @llvm.umax.i32(i32 %3, i32 1)
  br label %11

11:                                               ; preds = %25, %9
  %12 = phi i32 [ %0, %9 ], [ %26, %25 ]
  %13 = phi i32 [ 0, %9 ], [ %27, %25 ]
  %14 = tail call i32 @llvm.umin.i32(i32 %12, i32 4096)
  %15 = tail call noalias align 64 ptr @__kmalloc(i32 noundef %14, i32 noundef 4197824) #26
  %16 = getelementptr ptr, ptr %5, i32 %13
  store ptr %15, ptr %16, align 4
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %25

18:                                               ; preds = %18, %11
  %19 = phi i32 [ %22, %18 ], [ 0, %11 ]
  %20 = getelementptr ptr, ptr %5, i32 %19
  %21 = load ptr, ptr %20, align 4
  tail call void @kfree(ptr noundef %21) #21
  %22 = add nuw nsw i32 %19, 1
  %23 = icmp eq i32 %22, %3
  br i1 %23, label %24, label %18

24:                                               ; preds = %18
  tail call void @kfree(ptr noundef nonnull %5) #21
  br label %29

25:                                               ; preds = %11
  %26 = sub i32 %12, %14
  %27 = add nuw nsw i32 %13, 1
  %28 = icmp eq i32 %27, %10
  br i1 %28, label %29, label %11

29:                                               ; preds = %25, %24, %7, %1
  %30 = phi ptr [ null, %1 ], [ %5, %7 ], [ null, %24 ], [ %5, %25 ]
  ret ptr %30
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync)
define internal fastcc i32 @io_rsrc_ref_quiesce(ptr noundef %0, ptr noundef %1) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 6
  %4 = load i8, ptr %3, align 4, !range !45
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %33

6:                                                ; preds = %2
  store i8 1, ptr %3, align 4
  %7 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 4
  %8 = getelementptr inbounds %struct.io_ring_ctx, ptr %1, i32 0, i32 1
  %9 = getelementptr inbounds %struct.io_ring_ctx, ptr %1, i32 0, i32 13, i32 4
  %10 = getelementptr inbounds %struct.io_rsrc_data, ptr %0, i32 0, i32 5
  br label %11

11:                                               ; preds = %26, %6
  %12 = tail call fastcc i32 @io_rsrc_node_switch_start(ptr noundef %1)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %31

14:                                               ; preds = %11
  tail call fastcc void @io_rsrc_node_switch(ptr noundef %1, ptr noundef %0)
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !34
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #21, !srcloc !13
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %7, ptr %7, i32 1, ptr elementtype(i32) %7) #21, !srcloc !35
  %16 = extractvalue { i32, i32 } %15, 0
  tail call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !36
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  tail call void @mutex_unlock(ptr noundef %8) #21
  %19 = tail call zeroext i1 @flush_delayed_work(ptr noundef %9) #21
  %20 = tail call i32 @wait_for_completion_interruptible(ptr noundef %10) #21
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  tail call void @mutex_lock(ptr noundef %8) #21
  %23 = load volatile i32, ptr %7, align 4
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %22
  tail call void @mutex_unlock(ptr noundef %8) #21
  br label %26

26:                                               ; preds = %25, %18
  tail call void asm sideeffect ".arch_extension\09mp\0A9998:\09pldw\09${0:a}\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09pld\09${0:a}\0A\09.popsection\0A", "r"(ptr %7) #21, !srcloc !13
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %7, ptr %7, i32 1, ptr elementtype(i32) %7) #21, !srcloc !14
  %28 = tail call zeroext i1 @flush_delayed_work(ptr noundef %9) #21
  store i32 0, ptr %10, align 4
  %29 = tail call fastcc i32 @io_run_task_work_sig()
  tail call void @mutex_lock(ptr noundef %8) #21
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %11, label %31

31:                                               ; preds = %26, %22, %14, %11
  %32 = phi i32 [ %12, %11 ], [ 0, %14 ], [ %29, %26 ], [ 0, %22 ]
  store i8 0, ptr %3, align 4
  br label %33

33:                                               ; preds = %31, %2
  %34 = phi i32 [ %32, %31 ], [ -6, %2 ]
  ret i32 %34
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_interruptible(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal void @io_rsrc_file_put(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #0 {
  %3 = alloca %struct.sk_buff_head, align 4
  %4 = getelementptr inbounds %struct.io_rsrc_put, ptr %1, i32 0, i32 2
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 14
  %7 = load ptr, ptr %6, align 4
  %8 = getelementptr inbounds %struct.socket, ptr %7, i32 0, i32 4
  %9 = load ptr, ptr %8, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #21
  %10 = getelementptr inbounds i8, ptr %3, i32 12
  store i32 0, ptr %10, align 4, !annotation !9
  %11 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 8
  store ptr %3, ptr %3, align 4
  %12 = getelementptr inbounds %struct.anon.86, ptr %3, i32 0, i32 1
  store ptr %3, ptr %12, align 4
  %13 = getelementptr inbounds %struct.sk_buff_head, ptr %3, i32 0, i32 1
  store i32 0, ptr %13, align 4
  %14 = call ptr @skb_dequeue(ptr noundef %11) #21
  %15 = icmp eq ptr %14, null
  br i1 %15, label %65, label %16

16:                                               ; preds = %2
  %17 = icmp eq ptr %5, null
  br label %18

18:                                               ; preds = %58, %16
  %19 = phi ptr [ %14, %16 ], [ %63, %58 ]
  %20 = getelementptr inbounds %struct.sk_buff, ptr %19, i32 0, i32 3, i32 12
  %21 = load ptr, ptr %20, align 4
  %22 = load i16, ptr %21, align 4
  %23 = sext i16 %22 to i32
  %24 = icmp sgt i16 %22, 0
  br i1 %24, label %25, label %57

25:                                               ; preds = %54, %18
  %26 = phi i32 [ %55, %54 ], [ 0, %18 ]
  %27 = getelementptr %struct.scm_fp_list, ptr %21, i32 0, i32 3, i32 %26
  %28 = load ptr, ptr %27, align 4
  %29 = icmp eq ptr %28, %5
  br i1 %29, label %30, label %54

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.scm_fp_list, ptr %21, i32 0, i32 2
  %32 = load ptr, ptr %31, align 4
  call void @unix_notinflight(ptr noundef %32, ptr noundef %5) #21
  %33 = load i16, ptr %21, align 4
  %34 = sext i16 %33 to i32
  %35 = xor i32 %26, -1
  %36 = add i32 %34, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %30
  %39 = add nuw nsw i32 %26, 1
  %40 = getelementptr %struct.scm_fp_list, ptr %21, i32 0, i32 3, i32 %39
  %41 = shl i32 %36, 2
  call void @llvm.memmove.p0.p0.i32(ptr align 4 %27, ptr align 4 %40, i32 %41, i1 false)
  %42 = load i16, ptr %21, align 4
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i16 [ %42, %38 ], [ %33, %30 ]
  %45 = add i16 %44, -1
  store i16 %45, ptr %21, align 4
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %43
  call void @kfree_skb_reason(ptr noundef nonnull %19, i32 noundef 0) #21
  br label %53

48:                                               ; preds = %43
  %49 = load ptr, ptr %12, align 4
  store volatile ptr %3, ptr %19, align 8
  %50 = getelementptr inbounds %struct.anon.58, ptr %19, i32 0, i32 1
  store volatile ptr %49, ptr %50, align 4
  store volatile ptr %19, ptr %12, align 4
  store volatile ptr %19, ptr %49, align 4
  %51 = load i32, ptr %13, align 4
  %52 = add i32 %51, 1
  store volatile i32 %52, ptr %13, align 4
  br label %53

53:                                               ; preds = %48, %47
  call void @fput(ptr noundef %5) #21
  br label %65

54:                                               ; preds = %25
  %55 = add nuw nsw i32 %26, 1
  %56 = icmp eq i32 %55, %23
  br i1 %56, label %57, label %25

57:                                               ; preds = %54, %18
  br i1 %17, label %65, label %58

58:                                               ; preds = %57
  %59 = load ptr, ptr %12, align 4
  store volatile ptr %3, ptr %19, align 8
  %60 = getelementptr inbounds %struct.anon.58, ptr %19, i32 0, i32 1
  store volatile ptr %59, ptr %60, align 4
  store volatile ptr %19, ptr %12, align 4
  store volatile ptr %19, ptr %59, align 4
  %61 = load i32, ptr %13, align 4
  %62 = add i32 %61, 1
  store volatile i32 %62, ptr %13, align 4
  %63 = call ptr @skb_dequeue(ptr noundef %11) #21
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %18

65:                                               ; preds = %58, %57, %53, %2
  %66 = load ptr, ptr %3, align 4
  %67 = icmp eq ptr %66, %3
  %68 = icmp eq ptr %66, null
  %69 = or i1 %67, %68
  br i1 %69, label %97, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 8, i32 2
  call void @_raw_spin_lock_irq(ptr noundef %71) #21
  %72 = load ptr, ptr %3, align 4
  %73 = icmp eq ptr %72, %3
  %74 = icmp eq ptr %72, null
  %75 = or i1 %73, %74
  br i1 %75, label %94, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 8, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %struct.sock, ptr %9, i32 0, i32 8, i32 1
  br label %79

79:                                               ; preds = %79, %76
  %80 = phi ptr [ %72, %76 ], [ %90, %79 ]
  %81 = load i32, ptr %13, align 4
  %82 = add i32 %81, -1
  store volatile i32 %82, ptr %13, align 4
  %83 = load ptr, ptr %80, align 8
  %84 = getelementptr inbounds %struct.anon.58, ptr %80, i32 0, i32 1
  %85 = load ptr, ptr %84, align 4
  store ptr null, ptr %84, align 4
  store ptr null, ptr %80, align 8
  %86 = getelementptr inbounds %struct.anon.58, ptr %83, i32 0, i32 1
  store volatile ptr %85, ptr %86, align 4
  store volatile ptr %83, ptr %85, align 8
  %87 = load ptr, ptr %77, align 4
  store volatile ptr %11, ptr %80, align 8
  store volatile ptr %87, ptr %84, align 4
  store volatile ptr %80, ptr %77, align 4
  store volatile ptr %80, ptr %87, align 4
  %88 = load i32, ptr %78, align 4
  %89 = add i32 %88, 1
  store volatile i32 %89, ptr %78, align 4
  %90 = load ptr, ptr %3, align 4
  %91 = icmp eq ptr %90, %3
  %92 = icmp eq ptr %90, null
  %93 = or i1 %91, %92
  br i1 %93, label %94, label %79

94:                                               ; preds = %79, %70
  call void asm sideeffect "dmb ish", "~{memory}"() #21, !srcloc !41
  %95 = load i16, ptr %71, align 4
  %96 = add i16 %95, 1
  store i16 %96, ptr %71, align 4
  call void asm sideeffect "dsb ishst", "~{memory}"() #21, !srcloc !42
  call void asm sideeffect "9998:\09sev\0A\09.pushsection \22.alt.smp.init\22, \22a\22\0A\09.align\092\0A\09.long\099998b - .\0A\09nop\0A\09.popsection\0A", ""() #21, !srcloc !43
  call void asm sideeffect "\09cpsie i\09\09\09@ arch_local_irq_enable", "~{memory},~{cc}"() #21, !srcloc !52
  call void asm sideeffect "", "~{memory}"() #21, !srcloc !53
  br label %97

97:                                               ; preds = %94, %65
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @io_sqe_files_scm(ptr nocapture noundef readonly %0) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 9
  %3 = load i32, ptr %2, align 8
  br label %4

4:                                                ; preds = %8, %1
  %5 = phi i32 [ 0, %1 ], [ %13, %8 ]
  %6 = phi i32 [ %3, %1 ], [ %12, %8 ]
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %4
  %9 = tail call i32 @llvm.umin.i32(i32 %6, i32 253)
  %10 = tail call fastcc i32 @__io_sqe_files_scm(ptr noundef %0, i32 noundef %9, i32 noundef %5)
  %11 = icmp eq i32 %10, 0
  %12 = sub i32 %6, %9
  %13 = add i32 %9, %5
  br i1 %11, label %4, label %14

14:                                               ; preds = %8
  %15 = load i32, ptr %2, align 8
  %16 = icmp ult i32 %5, %15
  br i1 %16, label %17, label %34

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.io_ring_ctx, ptr %0, i32 0, i32 1, i32 8
  br label %19

19:                                               ; preds = %30, %17
  %20 = phi i32 [ %15, %17 ], [ %31, %30 ]
  %21 = phi i32 [ %5, %17 ], [ %32, %30 ]
  %22 = load ptr, ptr %18, align 4
  %23 = getelementptr %struct.io_fixed_file, ptr %22, i32 %21
  %24 = load i32, ptr %23, align 4
  %25 = and i32 %24, -4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = inttoptr i32 %25 to ptr
  tail call void @fput(ptr noundef nonnull %28) #21
  %29 = load i32, ptr %2, align 8
  br label %30

30:                                               ; preds = %27, %19
  %31 = phi i32 [ %29, %27 ], [ %20, %19 ]
  %32 = add nuw i32 %21, 1
  %33 = icmp ult i32 %32, %31
  br i1 %33, label %19, label %34

34:                                               ; preds = %30, %14, %4
  %35 = phi i32 [ %10, %14 ], [ %10, %30 ], [ 0, %4 ]
  ret i32 %35
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unix_notinflight(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i32(ptr nocapture writeonly, ptr nocapture readonly, i32, i1 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @eventfd_ctx_fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memchr_inv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__xa_alloc_cyclic(ptr noundef, ptr noundef, ptr noundef, [2 x i32], ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @io_wq_cpu_affinity(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #12

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold nounwind null_pointer_is_valid optsize sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly nofree nounwind willreturn writeonly }
attributes #6 = { nounwind readonly }
attributes #7 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { null_pointer_is_valid allocsize(2) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #13 = { noinline nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly nofree nounwind willreturn }
attributes #15 = { mustprogress nofree nounwind null_pointer_is_valid sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { cold null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sspstrong willreturn uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { noreturn nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { nofree nounwind null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { noreturn null_pointer_is_valid "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nounwind }
attributes #22 = { cold }
attributes #23 = { nounwind readnone }
attributes #24 = { cold nounwind }
attributes #25 = { nounwind allocsize(2) }
attributes #26 = { nounwind allocsize(0) }
attributes #27 = { noreturn nounwind }

!llvm.named.register.sp = !{!0}
!llvm.module.flags = !{!1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{!"sp"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 1, !"min_enum_size", i32 4}
!3 = !{i32 8, !"branch-target-enforcement", i32 0}
!4 = !{i32 8, !"sign-return-address", i32 0}
!5 = !{i32 8, !"sign-return-address-all", i32 0}
!6 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 7, !"uwtable", i32 1}
!8 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!9 = !{!"auto-init"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = !{i64 607396}
!13 = !{i64 693457, i64 2148183428, i64 2148183454, i64 2148183501, i64 2148183523, i64 2148183551, i64 2148183571}
!14 = !{i64 2148195640, i64 2148195666, i64 2148195695, i64 2148195729, i64 2148195760, i64 2148195783}
!15 = !{i64 2156824858}
!16 = !{i64 2148197997, i64 2148198023, i64 2148198052, i64 2148198086, i64 2148198117, i64 2148198140}
!17 = !{!18}
!18 = distinct !{!18, !19, !"fdget: argument 0"}
!19 = distinct !{!19, !"fdget"}
!20 = !{i64 2149492245}
!21 = !{i64 588696, i64 588757}
!22 = !{i64 591713}
!23 = !{i64 2149492462}
!24 = !{i64 2148195147}
!25 = !{i64 680026, i64 680051, i64 680073, i64 680089, i64 680101, i64 680121, i64 680145, i64 680161, i64 680173}
!26 = !{i64 2148195273}
!27 = !{i64 2151304596, i64 2151304621}
!28 = !{i64 3800708}
!29 = !{i64 3800905}
!30 = !{i64 2151286184}
!31 = !{i64 2158241686}
!32 = !{i64 2156984482}
!33 = !{i64 2156984664}
!34 = !{i64 2148296295}
!35 = !{i64 2148198681, i64 2148198713, i64 2148198742, i64 2148198776, i64 2148198807, i64 2148198830}
!36 = !{i64 2148296498}
!37 = !{!38}
!38 = distinct !{!38, !39, !"fdget: argument 0"}
!39 = distinct !{!39, !"fdget"}
!40 = !{i64 644546, i64 644563, i64 2148128633}
!41 = !{i64 2149339541}
!42 = !{i64 2149335365}
!43 = !{i64 2149335440, i64 2149335467, i64 2149335514, i64 2149335536, i64 2149335564, i64 2149335584}
!44 = !{i64 2149362544}
!45 = !{i8 0, i8 2}
!46 = !{i64 2149394516}
!47 = !{i64 2156897017}
!48 = !{i64 2156897251}
!49 = !{i64 2148297296}
!50 = !{i64 2148199455, i64 2148199487, i64 2148199516, i64 2148199550, i64 2148199581, i64 2148199604}
!51 = !{i64 2150099517}
!52 = !{i64 588941}
!53 = !{i64 2149363685}
!54 = !{i64 2158193091}
!55 = !{i64 2158265621}
!56 = !{i64 2157017556}
!57 = !{i64 2157017756}
!58 = !{i64 2158205267}
!59 = !{i64 2157000836}
!60 = !{i64 2157001002}
!61 = !{!"branch_weights", i32 1, i32 4000, i32 1}
!62 = !{i64 2151469172}
!63 = !{i64 2151476789}
!64 = !{i64 2148294878}
!65 = !{i64 2148197098, i64 2148197130, i64 2148197159, i64 2148197193, i64 2148197224, i64 2148197247}
!66 = !{i64 2148295080}
!67 = !{!68}
!68 = distinct !{!68, !69, !"iov_iter_iovec: argument 0"}
!69 = distinct !{!69, !"iov_iter_iovec"}
!70 = !{i64 2151485254}
!71 = !{i64 2151493565}
!72 = !{i64 2151501783}
!73 = !{i64 2158184544, i64 2158185023, i64 2158184581, i64 2158184637, i64 2158184671, i64 2158184695, i64 2158184736, i64 2158184757, i64 2158184785, i64 2158184819}
!74 = !{i64 2158185545, i64 2158186024, i64 2158185582, i64 2158185638, i64 2158185672, i64 2158185696, i64 2158185737, i64 2158185758, i64 2158185786, i64 2158185820}
!75 = !{i64 2156930780}
!76 = !{i64 2156930992}
!77 = !{i64 2157095206}
!78 = !{i64 2157095408}
!79 = !{i64 2148203418, i64 2148203444, i64 2148203473, i64 2148203507, i64 2148203538, i64 2148203561}
!80 = !{i64 2158637569}
!81 = !{i64 2158628709}
!82 = !{i64 2148309042}
!83 = !{i64 679520, i64 679544, i64 679565, i64 679582, i64 679599}
!84 = !{i64 2148309242}
!85 = !{i64 2148206872, i64 2148206900, i64 2148206934, i64 2148206968, i64 2148207002, i64 2148207038, i64 2148207061}
!86 = distinct !{!86, !87}
!87 = !{!"llvm.loop.peeled.count", i32 1}
!88 = !{i64 2148209358, i64 2148209386, i64 2148209420, i64 2148209454, i64 2148209488, i64 2148209524, i64 2148209547}
!89 = !{i64 2157057287}
!90 = !{i64 2157057515}
!91 = !{i64 2158247698}
!92 = !{!"branch_weights", i32 -294967296, i32 6003000}
!93 = !{i64 2158490282, i64 2158490307}
!94 = !{i64 2157128673}
!95 = !{i64 2157128843}
!96 = !{i64 2157039525}
!97 = !{i64 2157039797}
!98 = !{i64 2156968254}
!99 = !{i64 2156968432}
!100 = !{i64 2158741757}
!101 = !{!"branch_weights", i32 2146410443, i32 1073205}
!102 = !{i64 2156913460}
!103 = !{i64 2156913620}
!104 = !{i32 0, i32 8}
!105 = !{i64 2158281644}
!106 = !{i64 2148977971}
!107 = !{i64 2156947934}
!108 = !{i64 2156948112}
!109 = !{i64 2158882077}
!110 = !{i64 2149145135, i64 2149145158, i64 2149145190, i64 2149145222, i64 2149145260, i64 2149145290}
!111 = !{i32 0, i32 33}
!112 = !{i64 2151305174, i64 2151305199}
!113 = !{!114}
!114 = distinct !{!114, !115, !"fdget: argument 0"}
!115 = distinct !{!115, !"fdget"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"fdget: argument 0"}
!118 = distinct !{!118, !"fdget"}
!119 = !{i64 2156875363}
!120 = !{i64 2156875581}
!121 = !{i64 2149317386}
!122 = !{i64 702904, i64 702921, i64 702945, i64 702971, i64 702989}
!123 = !{i64 2149317713}
