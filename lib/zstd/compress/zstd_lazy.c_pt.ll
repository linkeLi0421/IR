; ModuleID = '/llk/IR/lib/zstd/compress/zstd_lazy.c_pt.bc'
source_filename = "../lib/zstd/compress/zstd_lazy.c"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabi"

%struct.ZSTD_matchState_t = type { %struct.ZSTD_window_t, i32, i32, i32, ptr, ptr, ptr, i32, %struct.optState_t, ptr, %struct.ZSTD_compressionParameters, ptr }
%struct.ZSTD_window_t = type { ptr, ptr, ptr, i32, i32 }
%struct.optState_t = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32 }
%struct.ZSTD_compressionParameters = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.seqStore_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.seqDef_s = type { i32, i16, i16 }

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_insertAndFindFirstIndex(ptr nocapture noundef %0, ptr noundef %1) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %4 = load i32, ptr %3, align 4
  %5 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %6 = load ptr, ptr %5, align 4
  %7 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %8 = load i32, ptr %7, align 4
  %9 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = shl nsw i32 -1, %12
  %14 = xor i32 %13, -1
  %15 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = ptrtoint ptr %1 to i32
  %18 = ptrtoint ptr %16 to i32
  %19 = sub i32 %17, %18
  %20 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %21 = load i32, ptr %20, align 4
  %22 = icmp ult i32 %21, %19
  br i1 %22, label %23, label %62

23:                                               ; preds = %2
  %24 = sub i32 64, %8
  %25 = zext i32 %24 to i64
  %26 = sub i32 32, %8
  br label %27

27:                                               ; preds = %54, %23
  %28 = phi i32 [ %21, %23 ], [ %60, %54 ]
  %29 = getelementptr i8, ptr %16, i32 %28
  switch i32 %4, label %30 [
    i32 8, label %49
    i32 5, label %34
    i32 6, label %39
    i32 7, label %44
  ]

30:                                               ; preds = %27
  %31 = load i32, ptr %29, align 1
  %32 = mul i32 %31, -1640531535
  %33 = lshr i32 %32, %26
  br label %54

34:                                               ; preds = %27
  %35 = load i64, ptr %29, align 1
  %36 = mul i64 %35, -3523014627271114752
  %37 = lshr i64 %36, %25
  %38 = trunc i64 %37 to i32
  br label %54

39:                                               ; preds = %27
  %40 = load i64, ptr %29, align 1
  %41 = mul i64 %40, -3523014627193847808
  %42 = lshr i64 %41, %25
  %43 = trunc i64 %42 to i32
  br label %54

44:                                               ; preds = %27
  %45 = load i64, ptr %29, align 1
  %46 = mul i64 %45, -3523014627193167104
  %47 = lshr i64 %46, %25
  %48 = trunc i64 %47 to i32
  br label %54

49:                                               ; preds = %27
  %50 = load i64, ptr %29, align 1
  %51 = mul i64 %50, -3523014627327384477
  %52 = lshr i64 %51, %25
  %53 = trunc i64 %52 to i32
  br label %54

54:                                               ; preds = %49, %44, %39, %34, %30
  %55 = phi i32 [ %33, %30 ], [ %48, %44 ], [ %43, %39 ], [ %38, %34 ], [ %53, %49 ]
  %56 = getelementptr i32, ptr %6, i32 %55
  %57 = load i32, ptr %56, align 4
  %58 = and i32 %28, %14
  %59 = getelementptr i32, ptr %10, i32 %58
  store i32 %57, ptr %59, align 4
  store i32 %28, ptr %56, align 4
  %60 = add nuw i32 %28, 1
  %61 = icmp ult i32 %60, %19
  br i1 %61, label %27, label %62

62:                                               ; preds = %54, %2
  store i32 %19, ptr %20, align 4
  switch i32 %4, label %63 [
    i32 8, label %89
    i32 5, label %68
    i32 6, label %75
    i32 7, label %82
  ]

63:                                               ; preds = %62
  %64 = load i32, ptr %1, align 1
  %65 = mul i32 %64, -1640531535
  %66 = sub i32 32, %8
  %67 = lshr i32 %65, %66
  br label %96

68:                                               ; preds = %62
  %69 = load i64, ptr %1, align 1
  %70 = mul i64 %69, -3523014627271114752
  %71 = sub i32 64, %8
  %72 = zext i32 %71 to i64
  %73 = lshr i64 %70, %72
  %74 = trunc i64 %73 to i32
  br label %96

75:                                               ; preds = %62
  %76 = load i64, ptr %1, align 1
  %77 = mul i64 %76, -3523014627193847808
  %78 = sub i32 64, %8
  %79 = zext i32 %78 to i64
  %80 = lshr i64 %77, %79
  %81 = trunc i64 %80 to i32
  br label %96

82:                                               ; preds = %62
  %83 = load i64, ptr %1, align 1
  %84 = mul i64 %83, -3523014627193167104
  %85 = sub i32 64, %8
  %86 = zext i32 %85 to i64
  %87 = lshr i64 %84, %86
  %88 = trunc i64 %87 to i32
  br label %96

89:                                               ; preds = %62
  %90 = load i64, ptr %1, align 1
  %91 = mul i64 %90, -3523014627327384477
  %92 = sub i32 64, %8
  %93 = zext i32 %92 to i64
  %94 = lshr i64 %91, %93
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %89, %82, %75, %68, %63
  %97 = phi i32 [ %67, %63 ], [ %88, %82 ], [ %81, %75 ], [ %74, %68 ], [ %95, %89 ]
  %98 = getelementptr i32, ptr %6, i32 %97
  %99 = load i32, ptr %98, align 4
  ret i32 %99
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local void @ZSTD_dedicatedDictSearch_lazy_loadDictionary(ptr nocapture noundef %0, ptr noundef %1) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %4 = load ptr, ptr %3, align 4
  %5 = ptrtoint ptr %1 to i32
  %6 = ptrtoint ptr %4 to i32
  %7 = sub i32 %5, %6
  %8 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %11 = load ptr, ptr %10, align 4
  %12 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %13 = load i32, ptr %12, align 4
  %14 = shl nuw i32 1, %13
  %15 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %16 = load i32, ptr %15, align 4
  %17 = icmp ugt i32 %7, %14
  %18 = sub i32 %7, %14
  %19 = select i1 %17, i32 %18, i32 %16
  %20 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %21 = load i32, ptr %20, align 4
  %22 = shl nuw i32 1, %21
  %23 = add i32 %22, -3
  %24 = tail call i32 @llvm.umin.i32(i32 %23, i32 255)
  %25 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, -2
  %28 = shl nuw i32 1, %27
  %29 = getelementptr i32, ptr %9, i32 %28
  %30 = shl i32 3, %27
  %31 = icmp ugt i32 %7, %30
  %32 = sub i32 %7, %30
  %33 = select i1 %31, i32 %32, i32 %16
  %34 = icmp ult i32 %16, %7
  br i1 %34, label %35, label %40

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %37 = sub i32 66, %26
  %38 = zext i32 %37 to i64
  %39 = sub i32 34, %26
  br label %42

40:                                               ; preds = %78, %2
  %41 = icmp eq i32 %24, 0
  br label %82

42:                                               ; preds = %78, %35
  %43 = phi i32 [ %16, %35 ], [ %80, %78 ]
  %44 = getelementptr i8, ptr %4, i32 %43
  %45 = load i32, ptr %36, align 4
  switch i32 %45, label %46 [
    i32 8, label %65
    i32 5, label %50
    i32 6, label %55
    i32 7, label %60
  ]

46:                                               ; preds = %42
  %47 = load i32, ptr %44, align 1
  %48 = mul i32 %47, -1640531535
  %49 = lshr i32 %48, %39
  br label %70

50:                                               ; preds = %42
  %51 = load i64, ptr %44, align 1
  %52 = mul i64 %51, -3523014627271114752
  %53 = lshr i64 %52, %38
  %54 = trunc i64 %53 to i32
  br label %70

55:                                               ; preds = %42
  %56 = load i64, ptr %44, align 1
  %57 = mul i64 %56, -3523014627193847808
  %58 = lshr i64 %57, %38
  %59 = trunc i64 %58 to i32
  br label %70

60:                                               ; preds = %42
  %61 = load i64, ptr %44, align 1
  %62 = mul i64 %61, -3523014627193167104
  %63 = lshr i64 %62, %38
  %64 = trunc i64 %63 to i32
  br label %70

65:                                               ; preds = %42
  %66 = load i64, ptr %44, align 1
  %67 = mul i64 %66, -3523014627327384477
  %68 = lshr i64 %67, %38
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %65, %60, %55, %50, %46
  %71 = phi i32 [ %49, %46 ], [ %64, %60 ], [ %59, %55 ], [ %54, %50 ], [ %69, %65 ]
  %72 = icmp ult i32 %43, %33
  br i1 %72, label %78, label %73

73:                                               ; preds = %70
  %74 = getelementptr i32, ptr %9, i32 %71
  %75 = load i32, ptr %74, align 4
  %76 = sub i32 %43, %33
  %77 = getelementptr i32, ptr %29, i32 %76
  store i32 %75, ptr %77, align 4
  br label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr i32, ptr %9, i32 %71
  store i32 %43, ptr %79, align 4
  %80 = add nuw i32 %43, 1
  %81 = icmp ult i32 %80, %7
  br i1 %81, label %42, label %40

82:                                               ; preds = %149, %40
  %83 = phi i32 [ 0, %40 ], [ %150, %149 ]
  %84 = phi i32 [ 0, %40 ], [ %152, %149 ]
  %85 = getelementptr i32, ptr %9, i32 %84
  %86 = load i32, ptr %85, align 4
  %87 = icmp ult i32 %86, %33
  br i1 %87, label %147, label %88

88:                                               ; preds = %82
  %89 = icmp ult i32 %86, %19
  %90 = zext i1 %89 to i32
  %91 = sub i32 %86, %33
  %92 = getelementptr i32, ptr %29, i32 %91
  %93 = load i32, ptr %92, align 4
  %94 = icmp ult i32 %93, %33
  br i1 %94, label %110, label %95

95:                                               ; preds = %88
  %96 = icmp ult i32 %93, %19
  %97 = zext i1 %96 to i32
  %98 = add nuw nsw i32 %90, %97
  %99 = sub i32 %93, %33
  %100 = getelementptr i32, ptr %29, i32 %99
  %101 = load i32, ptr %100, align 4
  %102 = icmp ult i32 %101, %33
  br i1 %102, label %110, label %103

103:                                              ; preds = %95
  %104 = icmp ult i32 %101, %19
  %105 = zext i1 %104 to i32
  %106 = add nuw nsw i32 %98, %105
  %107 = sub i32 %101, %33
  %108 = getelementptr i32, ptr %29, i32 %107
  %109 = load i32, ptr %108, align 4
  br label %110

110:                                              ; preds = %103, %95, %88
  %111 = phi i32 [ %90, %88 ], [ %98, %95 ], [ %106, %103 ]
  %112 = phi i1 [ true, %88 ], [ true, %95 ], [ %41, %103 ]
  %113 = phi i32 [ %93, %88 ], [ %101, %95 ], [ %109, %103 ]
  br i1 %112, label %147, label %114

114:                                              ; preds = %135, %110
  %115 = phi i32 [ %138, %135 ], [ %113, %110 ]
  %116 = phi i32 [ %126, %135 ], [ %111, %110 ]
  %117 = phi i32 [ %129, %135 ], [ 0, %110 ]
  %118 = phi i32 [ %127, %135 ], [ %83, %110 ]
  %119 = icmp ult i32 %115, %19
  br i1 %119, label %120, label %125

120:                                              ; preds = %114
  %121 = icmp eq i32 %115, 0
  %122 = add i32 %116, 1
  %123 = icmp ugt i32 %116, 3
  %124 = select i1 %121, i1 true, i1 %123
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %114
  %126 = phi i32 [ %116, %114 ], [ %122, %120 ]
  %127 = add i32 %118, 1
  %128 = getelementptr i32, ptr %11, i32 %118
  store i32 %115, ptr %128, align 4
  %129 = add nuw nsw i32 %117, 1
  %130 = icmp ult i32 %115, %33
  br i1 %130, label %131, label %135

131:                                              ; preds = %125
  %132 = sub i32 %127, %129
  %133 = shl i32 %132, 8
  %134 = add i32 %133, %129
  br label %149

135:                                              ; preds = %125
  %136 = sub i32 %115, %33
  %137 = getelementptr i32, ptr %29, i32 %136
  %138 = load i32, ptr %137, align 4
  %139 = icmp eq i32 %129, %24
  br i1 %139, label %140, label %114

140:                                              ; preds = %135, %120
  %141 = phi i32 [ %118, %120 ], [ %127, %135 ]
  %142 = phi i32 [ %117, %120 ], [ %24, %135 ]
  %143 = icmp eq i32 %142, 0
  %144 = sub i32 %141, %142
  %145 = shl i32 %144, 8
  %146 = add i32 %145, %142
  br i1 %143, label %147, label %149

147:                                              ; preds = %140, %110, %82
  %148 = phi i32 [ %141, %140 ], [ %83, %110 ], [ %83, %82 ]
  br label %149

149:                                              ; preds = %147, %140, %131
  %150 = phi i32 [ %148, %147 ], [ %141, %140 ], [ %127, %131 ]
  %151 = phi i32 [ 0, %147 ], [ %146, %140 ], [ %134, %131 ]
  store i32 %151, ptr %85, align 4
  %152 = add nuw i32 %84, 1
  %153 = icmp eq i32 %152, %28
  br i1 %153, label %154, label %82

154:                                              ; preds = %149
  %155 = shl i32 %28, 4
  %156 = add i32 %155, -16
  br label %157

157:                                              ; preds = %157, %154
  %158 = phi i32 [ 0, %154 ], [ %170, %157 ]
  %159 = phi i32 [ %28, %154 ], [ %163, %157 ]
  %160 = mul i32 %158, -16
  %161 = add i32 %156, %160
  %162 = getelementptr i8, ptr %9, i32 %161
  %163 = add i32 %159, -1
  %164 = getelementptr i32, ptr %9, i32 %163
  %165 = load i32, ptr %164, align 4
  call void @llvm.memset.p0.i32(ptr noundef align 4 dereferenceable(12) %162, i8 0, i32 12, i1 false)
  %166 = shl i32 %163, 2
  %167 = or i32 %166, 3
  %168 = getelementptr i32, ptr %9, i32 %167
  store i32 %165, ptr %168, align 4
  %169 = icmp eq i32 %163, 0
  %170 = add i32 %158, 1
  br i1 %169, label %171, label %157

171:                                              ; preds = %157
  %172 = load i32, ptr %15, align 4
  %173 = icmp ult i32 %172, %7
  br i1 %173, label %174, label %221

174:                                              ; preds = %171
  %175 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %176 = sub i32 66, %26
  %177 = zext i32 %176 to i64
  %178 = sub i32 34, %26
  br label %179

179:                                              ; preds = %207, %174
  %180 = phi i32 [ %172, %174 ], [ %219, %207 ]
  %181 = getelementptr i8, ptr %4, i32 %180
  %182 = load i32, ptr %175, align 4
  switch i32 %182, label %183 [
    i32 8, label %202
    i32 5, label %187
    i32 6, label %192
    i32 7, label %197
  ]

183:                                              ; preds = %179
  %184 = load i32, ptr %181, align 1
  %185 = mul i32 %184, -1640531535
  %186 = lshr i32 %185, %178
  br label %207

187:                                              ; preds = %179
  %188 = load i64, ptr %181, align 1
  %189 = mul i64 %188, -3523014627271114752
  %190 = lshr i64 %189, %177
  %191 = trunc i64 %190 to i32
  br label %207

192:                                              ; preds = %179
  %193 = load i64, ptr %181, align 1
  %194 = mul i64 %193, -3523014627193847808
  %195 = lshr i64 %194, %177
  %196 = trunc i64 %195 to i32
  br label %207

197:                                              ; preds = %179
  %198 = load i64, ptr %181, align 1
  %199 = mul i64 %198, -3523014627193167104
  %200 = lshr i64 %199, %177
  %201 = trunc i64 %200 to i32
  br label %207

202:                                              ; preds = %179
  %203 = load i64, ptr %181, align 1
  %204 = mul i64 %203, -3523014627327384477
  %205 = lshr i64 %204, %177
  %206 = trunc i64 %205 to i32
  br label %207

207:                                              ; preds = %202, %197, %192, %187, %183
  %208 = phi i32 [ %186, %183 ], [ %201, %197 ], [ %196, %192 ], [ %191, %187 ], [ %206, %202 ]
  %209 = shl i32 %208, 2
  %210 = or i32 %209, 2
  %211 = or i32 %209, 1
  %212 = getelementptr i32, ptr %9, i32 %211
  %213 = load i32, ptr %212, align 4
  %214 = getelementptr i32, ptr %9, i32 %210
  store i32 %213, ptr %214, align 4
  %215 = or i32 %209, 1
  %216 = getelementptr i32, ptr %9, i32 %209
  %217 = load i32, ptr %216, align 4
  %218 = getelementptr i32, ptr %9, i32 %215
  store i32 %217, ptr %218, align 4
  store i32 %180, ptr %216, align 4
  %219 = add nuw i32 %180, 1
  %220 = icmp ult i32 %219, %7
  br i1 %220, label %179, label %221

221:                                              ; preds = %207, %171
  store i32 %7, ptr %15, align 4
  ret void
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_btlazy2(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = icmp eq ptr %15, %3
  %20 = zext i1 %19 to i32
  %21 = getelementptr i8, ptr %3, i32 %20
  %22 = ptrtoint ptr %21 to i32
  %23 = ptrtoint ptr %12 to i32
  %24 = sub i32 %22, %23
  %25 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %26 = load i32, ptr %25, align 4
  %27 = shl nuw i32 1, %26
  %28 = sub i32 %24, %14
  %29 = icmp ugt i32 %28, %27
  %30 = sub i32 %24, %27
  %31 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %32 = load i32, ptr %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i1 %29, i1 false
  %35 = select i1 %34, i32 %30, i32 %14
  %36 = sub i32 %24, %35
  %37 = icmp ugt i32 %18, %36
  %38 = select i1 %37, i32 0, i32 %18
  %39 = icmp ugt i32 %16, %36
  %40 = select i1 %39, i32 0, i32 %16
  %41 = icmp ult ptr %21, %10
  br i1 %41, label %42, label %589

42:                                               ; preds = %5
  %43 = getelementptr i8, ptr %9, i32 -3
  %44 = getelementptr i8, ptr %9, i32 -1
  %45 = getelementptr i8, ptr %9, i32 -32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %47 = ptrtoint ptr %45 to i32
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  br label %51

51:                                               ; preds = %583, %42
  %52 = phi ptr [ %21, %42 ], [ %587, %583 ]
  %53 = phi ptr [ %3, %42 ], [ %586, %583 ]
  %54 = phi i32 [ %40, %42 ], [ %585, %583 ]
  %55 = phi i32 [ %38, %42 ], [ %584, %583 ]
  %56 = sub i32 0, %54
  %57 = getelementptr i8, ptr %52, i32 1
  %58 = icmp ne i32 %54, 0
  %59 = getelementptr i8, ptr %57, i32 %56
  %60 = load i32, ptr %59, align 1
  %61 = load i32, ptr %57, align 1
  %62 = icmp eq i32 %60, %61
  %63 = and i1 %58, %62
  br i1 %63, label %64, label %123

64:                                               ; preds = %51
  %65 = getelementptr i8, ptr %52, i32 5
  %66 = getelementptr i8, ptr %65, i32 %56
  %67 = icmp ugt ptr %43, %65
  br i1 %67, label %68, label %94

68:                                               ; preds = %64
  %69 = load i32, ptr %66, align 1
  %70 = load i32, ptr %65, align 1
  %71 = xor i32 %70, %69
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %68
  %74 = tail call i32 @llvm.cttz.i32(i32 %71, i1 true) #7, !range !8
  %75 = lshr i32 %74, 3
  br label %120

76:                                               ; preds = %82, %68
  %77 = phi ptr [ %80, %82 ], [ %65, %68 ]
  %78 = phi ptr [ %79, %82 ], [ %66, %68 ]
  %79 = getelementptr i8, ptr %78, i32 4
  %80 = getelementptr i8, ptr %77, i32 4
  %81 = icmp ult ptr %80, %43
  br i1 %81, label %82, label %94

82:                                               ; preds = %76
  %83 = load i32, ptr %79, align 1
  %84 = load i32, ptr %80, align 1
  %85 = xor i32 %84, %83
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %76, label %87

87:                                               ; preds = %82
  %88 = tail call i32 @llvm.cttz.i32(i32 %85, i1 true) #7, !range !8
  %89 = lshr i32 %88, 3
  %90 = getelementptr i8, ptr %80, i32 %89
  %91 = ptrtoint ptr %90 to i32
  %92 = ptrtoint ptr %65 to i32
  %93 = sub i32 %91, %92
  br label %120

94:                                               ; preds = %76, %64
  %95 = phi ptr [ %65, %64 ], [ %80, %76 ]
  %96 = phi ptr [ %66, %64 ], [ %79, %76 ]
  %97 = icmp ult ptr %95, %44
  br i1 %97, label %98, label %105

98:                                               ; preds = %94
  %99 = load i16, ptr %96, align 1
  %100 = load i16, ptr %95, align 1
  %101 = icmp eq i16 %99, %100
  br i1 %101, label %102, label %105

102:                                              ; preds = %98
  %103 = getelementptr i8, ptr %95, i32 2
  %104 = getelementptr i8, ptr %96, i32 2
  br label %105

105:                                              ; preds = %102, %98, %94
  %106 = phi ptr [ %103, %102 ], [ %95, %98 ], [ %95, %94 ]
  %107 = phi ptr [ %104, %102 ], [ %96, %98 ], [ %96, %94 ]
  %108 = icmp ult ptr %106, %9
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = load i8, ptr %107, align 1
  %111 = load i8, ptr %106, align 1
  %112 = icmp eq i8 %110, %111
  %113 = zext i1 %112 to i32
  %114 = getelementptr i8, ptr %106, i32 %113
  br label %115

115:                                              ; preds = %109, %105
  %116 = phi ptr [ %106, %105 ], [ %114, %109 ]
  %117 = ptrtoint ptr %116 to i32
  %118 = ptrtoint ptr %65 to i32
  %119 = sub i32 %117, %118
  br label %120

120:                                              ; preds = %115, %87, %73
  %121 = phi i32 [ %119, %115 ], [ %75, %73 ], [ %93, %87 ]
  %122 = add i32 %121, 4
  br label %123

123:                                              ; preds = %120, %51
  %124 = phi i32 [ %122, %120 ], [ 0, %51 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %125 = call fastcc i32 @ZSTD_BtFindBestMatch_selectMLS(ptr noundef %0, ptr noundef %52, ptr noundef %9, ptr noundef nonnull %6) #7
  %126 = load i32, ptr %6, align 4
  %127 = tail call i32 @llvm.umax.i32(i32 %125, i32 %124) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %128 = icmp ult i32 %127, 4
  br i1 %128, label %129, label %136

129:                                              ; preds = %123
  %130 = ptrtoint ptr %52 to i32
  %131 = ptrtoint ptr %53 to i32
  %132 = sub i32 %130, %131
  %133 = ashr i32 %132, 8
  %134 = add nsw i32 %133, 1
  %135 = getelementptr i8, ptr %52, i32 %134
  br label %583

136:                                              ; preds = %123
  %137 = icmp ugt i32 %125, %124
  %138 = select i1 %137, ptr %52, ptr %57
  %139 = select i1 %137, i32 %126, i32 0
  %140 = icmp ult ptr %52, %10
  br i1 %140, label %141, label %353

141:                                              ; preds = %245, %136
  %142 = phi ptr [ %248, %245 ], [ %52, %136 ]
  %143 = phi ptr [ %248, %245 ], [ %138, %136 ]
  %144 = phi i32 [ %247, %245 ], [ %139, %136 ]
  %145 = phi i32 [ %246, %245 ], [ %127, %136 ]
  %146 = getelementptr i8, ptr %142, i32 1
  %147 = icmp eq i32 %144, 0
  br i1 %147, label %223, label %148

148:                                              ; preds = %141
  %149 = load i32, ptr %146, align 1
  %150 = getelementptr i8, ptr %146, i32 %56
  %151 = load i32, ptr %150, align 1
  %152 = icmp eq i32 %149, %151
  %153 = and i1 %58, %152
  br i1 %153, label %154, label %223

154:                                              ; preds = %148
  %155 = getelementptr i8, ptr %142, i32 5
  %156 = getelementptr i8, ptr %155, i32 %56
  %157 = icmp ugt ptr %43, %155
  br i1 %157, label %158, label %183

158:                                              ; preds = %154
  %159 = load i32, ptr %156, align 1
  %160 = load i32, ptr %155, align 1
  %161 = xor i32 %160, %159
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %168, label %163

163:                                              ; preds = %158
  %164 = tail call i32 @llvm.cttz.i32(i32 %161, i1 true) #7, !range !8
  %165 = lshr i32 %164, 3
  %166 = add i32 %144, 1
  %167 = tail call i32 @llvm.ctlz.i32(i32 %166, i1 false) #7, !range !8
  br label %212

168:                                              ; preds = %174, %158
  %169 = phi ptr [ %172, %174 ], [ %155, %158 ]
  %170 = phi ptr [ %171, %174 ], [ %156, %158 ]
  %171 = getelementptr i8, ptr %170, i32 4
  %172 = getelementptr i8, ptr %169, i32 4
  %173 = icmp ult ptr %172, %43
  br i1 %173, label %174, label %183

174:                                              ; preds = %168
  %175 = load i32, ptr %171, align 1
  %176 = load i32, ptr %172, align 1
  %177 = xor i32 %176, %175
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %168, label %179

179:                                              ; preds = %174
  %180 = tail call i32 @llvm.cttz.i32(i32 %177, i1 true) #7, !range !8
  %181 = lshr i32 %180, 3
  %182 = getelementptr i8, ptr %172, i32 %181
  br label %204

183:                                              ; preds = %168, %154
  %184 = phi ptr [ %155, %154 ], [ %172, %168 ]
  %185 = phi ptr [ %156, %154 ], [ %171, %168 ]
  %186 = icmp ult ptr %184, %44
  br i1 %186, label %187, label %194

187:                                              ; preds = %183
  %188 = load i16, ptr %185, align 1
  %189 = load i16, ptr %184, align 1
  %190 = icmp eq i16 %188, %189
  br i1 %190, label %191, label %194

191:                                              ; preds = %187
  %192 = getelementptr i8, ptr %184, i32 2
  %193 = getelementptr i8, ptr %185, i32 2
  br label %194

194:                                              ; preds = %191, %187, %183
  %195 = phi ptr [ %192, %191 ], [ %184, %187 ], [ %184, %183 ]
  %196 = phi ptr [ %193, %191 ], [ %185, %187 ], [ %185, %183 ]
  %197 = icmp ult ptr %195, %9
  br i1 %197, label %198, label %204

198:                                              ; preds = %194
  %199 = load i8, ptr %196, align 1
  %200 = load i8, ptr %195, align 1
  %201 = icmp eq i8 %199, %200
  %202 = zext i1 %201 to i32
  %203 = getelementptr i8, ptr %195, i32 %202
  br label %204

204:                                              ; preds = %198, %194, %179
  %205 = phi ptr [ %182, %179 ], [ %195, %194 ], [ %203, %198 ]
  %206 = ptrtoint ptr %205 to i32
  %207 = ptrtoint ptr %155 to i32
  %208 = sub i32 %206, %207
  %209 = add i32 %144, 1
  %210 = tail call i32 @llvm.ctlz.i32(i32 %209, i1 false) #7, !range !8
  %211 = icmp ult i32 %208, -4
  br i1 %211, label %212, label %223

212:                                              ; preds = %204, %163
  %213 = phi i32 [ %167, %163 ], [ %210, %204 ]
  %214 = phi i32 [ %165, %163 ], [ %208, %204 ]
  %215 = add nuw i32 %214, 4
  %216 = xor i32 %213, -32
  %217 = mul i32 %145, 3
  %218 = add i32 %217, 2
  %219 = add i32 %218, %216
  %220 = mul i32 %215, 3
  %221 = icmp sgt i32 %220, %219
  br i1 %221, label %222, label %223

222:                                              ; preds = %212
  br label %223

223:                                              ; preds = %222, %212, %204, %148, %141
  %224 = phi i32 [ %145, %148 ], [ %145, %141 ], [ %215, %222 ], [ %145, %212 ], [ %145, %204 ]
  %225 = phi i32 [ %144, %148 ], [ 0, %141 ], [ 0, %222 ], [ %144, %212 ], [ %144, %204 ]
  %226 = phi ptr [ %143, %148 ], [ %143, %141 ], [ %146, %222 ], [ %143, %212 ], [ %143, %204 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %227 = call fastcc i32 @ZSTD_BtFindBestMatch_selectMLS(ptr noundef %0, ptr noundef %146, ptr noundef %9, ptr noundef nonnull %7) #7
  %228 = load i32, ptr %7, align 4
  %229 = icmp ugt i32 %227, 3
  br i1 %229, label %230, label %250

230:                                              ; preds = %223
  %231 = add i32 %225, 1
  %232 = tail call i32 @llvm.ctlz.i32(i32 %231, i1 false) #7, !range !8
  %233 = xor i32 %232, -32
  %234 = add i32 %228, 1
  %235 = tail call i32 @llvm.ctlz.i32(i32 %234, i1 false) #7, !range !8
  %236 = xor i32 %235, -32
  %237 = shl i32 %224, 2
  %238 = add i32 %237, 5
  %239 = add i32 %238, %233
  %240 = shl i32 %227, 2
  %241 = or i32 %240, 1
  %242 = add i32 %241, %236
  %243 = icmp sgt i32 %242, %239
  br i1 %243, label %244, label %250

244:                                              ; preds = %230
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  br label %245

245:                                              ; preds = %352, %244
  %246 = phi i32 [ %227, %244 ], [ %334, %352 ]
  %247 = phi i32 [ %228, %244 ], [ %335, %352 ]
  %248 = phi ptr [ %146, %244 ], [ %253, %352 ]
  %249 = icmp ult ptr %248, %10
  br i1 %249, label %141, label %353

250:                                              ; preds = %230, %223
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %251 = icmp ult ptr %146, %10
  br i1 %251, label %252, label %353

252:                                              ; preds = %250
  %253 = getelementptr i8, ptr %142, i32 2
  %254 = icmp eq i32 %225, 0
  br i1 %254, label %330, label %255

255:                                              ; preds = %252
  %256 = load i32, ptr %253, align 1
  %257 = getelementptr i8, ptr %253, i32 %56
  %258 = load i32, ptr %257, align 1
  %259 = icmp eq i32 %256, %258
  %260 = and i1 %58, %259
  br i1 %260, label %261, label %330

261:                                              ; preds = %255
  %262 = getelementptr i8, ptr %142, i32 6
  %263 = getelementptr i8, ptr %262, i32 %56
  %264 = icmp ugt ptr %43, %262
  br i1 %264, label %265, label %290

265:                                              ; preds = %261
  %266 = load i32, ptr %263, align 1
  %267 = load i32, ptr %262, align 1
  %268 = xor i32 %267, %266
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %265
  %271 = tail call i32 @llvm.cttz.i32(i32 %268, i1 true) #7, !range !8
  %272 = lshr i32 %271, 3
  %273 = add i32 %225, 1
  %274 = tail call i32 @llvm.ctlz.i32(i32 %273, i1 false) #7, !range !8
  br label %319

275:                                              ; preds = %281, %265
  %276 = phi ptr [ %279, %281 ], [ %262, %265 ]
  %277 = phi ptr [ %278, %281 ], [ %263, %265 ]
  %278 = getelementptr i8, ptr %277, i32 4
  %279 = getelementptr i8, ptr %276, i32 4
  %280 = icmp ult ptr %279, %43
  br i1 %280, label %281, label %290

281:                                              ; preds = %275
  %282 = load i32, ptr %278, align 1
  %283 = load i32, ptr %279, align 1
  %284 = xor i32 %283, %282
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %275, label %286

286:                                              ; preds = %281
  %287 = tail call i32 @llvm.cttz.i32(i32 %284, i1 true) #7, !range !8
  %288 = lshr i32 %287, 3
  %289 = getelementptr i8, ptr %279, i32 %288
  br label %311

290:                                              ; preds = %275, %261
  %291 = phi ptr [ %262, %261 ], [ %279, %275 ]
  %292 = phi ptr [ %263, %261 ], [ %278, %275 ]
  %293 = icmp ult ptr %291, %44
  br i1 %293, label %294, label %301

294:                                              ; preds = %290
  %295 = load i16, ptr %292, align 1
  %296 = load i16, ptr %291, align 1
  %297 = icmp eq i16 %295, %296
  br i1 %297, label %298, label %301

298:                                              ; preds = %294
  %299 = getelementptr i8, ptr %291, i32 2
  %300 = getelementptr i8, ptr %292, i32 2
  br label %301

301:                                              ; preds = %298, %294, %290
  %302 = phi ptr [ %299, %298 ], [ %291, %294 ], [ %291, %290 ]
  %303 = phi ptr [ %300, %298 ], [ %292, %294 ], [ %292, %290 ]
  %304 = icmp ult ptr %302, %9
  br i1 %304, label %305, label %311

305:                                              ; preds = %301
  %306 = load i8, ptr %303, align 1
  %307 = load i8, ptr %302, align 1
  %308 = icmp eq i8 %306, %307
  %309 = zext i1 %308 to i32
  %310 = getelementptr i8, ptr %302, i32 %309
  br label %311

311:                                              ; preds = %305, %301, %286
  %312 = phi ptr [ %289, %286 ], [ %302, %301 ], [ %310, %305 ]
  %313 = ptrtoint ptr %312 to i32
  %314 = ptrtoint ptr %262 to i32
  %315 = sub i32 %313, %314
  %316 = add i32 %225, 1
  %317 = tail call i32 @llvm.ctlz.i32(i32 %316, i1 false) #7, !range !8
  %318 = icmp ult i32 %315, -4
  br i1 %318, label %319, label %330

319:                                              ; preds = %311, %270
  %320 = phi i32 [ %274, %270 ], [ %317, %311 ]
  %321 = phi i32 [ %272, %270 ], [ %315, %311 ]
  %322 = add nuw i32 %321, 4
  %323 = xor i32 %320, -32
  %324 = shl i32 %224, 2
  %325 = or i32 %324, 2
  %326 = add i32 %325, %323
  %327 = shl i32 %322, 2
  %328 = icmp sgt i32 %327, %326
  br i1 %328, label %329, label %330

329:                                              ; preds = %319
  br label %330

330:                                              ; preds = %329, %319, %311, %255, %252
  %331 = phi i32 [ %224, %255 ], [ %224, %252 ], [ %322, %329 ], [ %224, %319 ], [ %224, %311 ]
  %332 = phi i32 [ %225, %255 ], [ 0, %252 ], [ 0, %329 ], [ %225, %319 ], [ %225, %311 ]
  %333 = phi ptr [ %226, %255 ], [ %226, %252 ], [ %253, %329 ], [ %226, %319 ], [ %226, %311 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %334 = call fastcc i32 @ZSTD_BtFindBestMatch_selectMLS(ptr noundef %0, ptr noundef %253, ptr noundef %9, ptr noundef nonnull %8) #7
  %335 = load i32, ptr %8, align 4
  %336 = icmp ugt i32 %334, 3
  br i1 %336, label %337, label %351

337:                                              ; preds = %330
  %338 = add i32 %332, 1
  %339 = tail call i32 @llvm.ctlz.i32(i32 %338, i1 false) #7, !range !8
  %340 = xor i32 %339, -32
  %341 = add i32 %335, 1
  %342 = tail call i32 @llvm.ctlz.i32(i32 %341, i1 false) #7, !range !8
  %343 = xor i32 %342, -32
  %344 = shl i32 %331, 2
  %345 = add i32 %344, 8
  %346 = add i32 %345, %340
  %347 = shl i32 %334, 2
  %348 = or i32 %347, 1
  %349 = add i32 %348, %343
  %350 = icmp sgt i32 %349, %346
  br i1 %350, label %352, label %351

351:                                              ; preds = %337, %330
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %353

352:                                              ; preds = %337
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %245

353:                                              ; preds = %351, %250, %245, %136
  %354 = phi i32 [ %127, %136 ], [ %331, %351 ], [ %246, %245 ], [ %224, %250 ]
  %355 = phi i32 [ %139, %136 ], [ %332, %351 ], [ %247, %245 ], [ %225, %250 ]
  %356 = phi ptr [ %138, %136 ], [ %333, %351 ], [ %248, %245 ], [ %226, %250 ]
  %357 = icmp eq i32 %355, 0
  br i1 %357, label %383, label %358

358:                                              ; preds = %353
  %359 = sub i32 2, %355
  %360 = icmp ugt ptr %356, %53
  %361 = getelementptr i8, ptr %356, i32 %359
  %362 = icmp ugt ptr %361, %15
  %363 = and i1 %360, %362
  br i1 %363, label %364, label %379

364:                                              ; preds = %373, %358
  %365 = phi ptr [ %368, %373 ], [ %356, %358 ]
  %366 = phi i32 [ %374, %373 ], [ %354, %358 ]
  %367 = getelementptr i8, ptr %365, i32 %359
  %368 = getelementptr i8, ptr %365, i32 -1
  %369 = load i8, ptr %368, align 1
  %370 = getelementptr i8, ptr %367, i32 -1
  %371 = load i8, ptr %370, align 1
  %372 = icmp eq i8 %369, %371
  br i1 %372, label %373, label %379

373:                                              ; preds = %364
  %374 = add i32 %366, 1
  %375 = icmp ugt ptr %368, %53
  %376 = getelementptr i8, ptr %368, i32 %359
  %377 = icmp ugt ptr %376, %15
  %378 = and i1 %375, %377
  br i1 %378, label %364, label %379

379:                                              ; preds = %373, %364, %358
  %380 = phi i32 [ %354, %358 ], [ %366, %364 ], [ %374, %373 ]
  %381 = phi ptr [ %356, %358 ], [ %365, %364 ], [ %368, %373 ]
  %382 = add i32 %355, -2
  br label %383

383:                                              ; preds = %379, %353
  %384 = phi i32 [ %54, %379 ], [ %55, %353 ]
  %385 = phi i32 [ %382, %379 ], [ %54, %353 ]
  %386 = phi i32 [ %380, %379 ], [ %354, %353 ]
  %387 = phi ptr [ %381, %379 ], [ %356, %353 ]
  %388 = ptrtoint ptr %387 to i32
  %389 = ptrtoint ptr %53 to i32
  %390 = sub i32 %388, %389
  %391 = add i32 %386, -3
  %392 = getelementptr i8, ptr %53, i32 %390
  %393 = icmp ugt ptr %392, %45
  %394 = load ptr, ptr %46, align 4
  br i1 %393, label %416, label %395

395:                                              ; preds = %383
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %394, ptr noundef align 1 dereferenceable(16) %53, i32 16, i1 false) #7
  %396 = icmp ugt i32 %390, 16
  %397 = load ptr, ptr %46, align 4
  br i1 %396, label %400, label %398

398:                                              ; preds = %395
  %399 = getelementptr i8, ptr %397, i32 %390
  store ptr %399, ptr %46, align 4
  br label %459

400:                                              ; preds = %395
  %401 = getelementptr i8, ptr %397, i32 16
  %402 = getelementptr i8, ptr %53, i32 16
  %403 = add i32 %390, -16
  %404 = getelementptr i8, ptr %397, i32 %390
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %401, ptr noundef align 1 dereferenceable(16) %402, i32 16, i1 false) #7
  %405 = icmp slt i32 %403, 17
  br i1 %405, label %448, label %406

406:                                              ; preds = %400
  %407 = getelementptr i8, ptr %397, i32 32
  br label %408

408:                                              ; preds = %408, %406
  %409 = phi ptr [ %402, %406 ], [ %413, %408 ]
  %410 = phi ptr [ %407, %406 ], [ %414, %408 ]
  %411 = getelementptr i8, ptr %409, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %410, ptr noundef align 1 dereferenceable(16) %411, i32 16, i1 false) #7
  %412 = getelementptr i8, ptr %410, i32 16
  %413 = getelementptr i8, ptr %409, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %412, ptr noundef align 1 dereferenceable(16) %413, i32 16, i1 false) #7
  %414 = getelementptr i8, ptr %410, i32 32
  %415 = icmp ult ptr %414, %404
  br i1 %415, label %408, label %448

416:                                              ; preds = %383
  %417 = ptrtoint ptr %392 to i32
  %418 = icmp ult ptr %45, %53
  br i1 %418, label %433, label %419

419:                                              ; preds = %416
  %420 = sub i32 %47, %389
  %421 = getelementptr i8, ptr %394, i32 %420
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %394, ptr noundef align 1 dereferenceable(16) %53, i32 16, i1 false) #7
  %422 = icmp slt i32 %420, 17
  br i1 %422, label %433, label %423

423:                                              ; preds = %419
  %424 = getelementptr i8, ptr %394, i32 16
  br label %425

425:                                              ; preds = %425, %423
  %426 = phi ptr [ %53, %423 ], [ %430, %425 ]
  %427 = phi ptr [ %424, %423 ], [ %431, %425 ]
  %428 = getelementptr i8, ptr %426, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %427, ptr noundef align 1 dereferenceable(16) %428, i32 16, i1 false) #7
  %429 = getelementptr i8, ptr %427, i32 16
  %430 = getelementptr i8, ptr %426, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %429, ptr noundef align 1 dereferenceable(16) %430, i32 16, i1 false) #7
  %431 = getelementptr i8, ptr %427, i32 32
  %432 = icmp ult ptr %431, %421
  br i1 %432, label %425, label %433

433:                                              ; preds = %425, %419, %416
  %434 = phi ptr [ %45, %419 ], [ %53, %416 ], [ %45, %425 ]
  %435 = phi ptr [ %421, %419 ], [ %394, %416 ], [ %421, %425 ]
  %436 = icmp ult ptr %434, %392
  br i1 %436, label %437, label %448

437:                                              ; preds = %433
  %438 = ptrtoint ptr %434 to i32
  %439 = sub i32 %417, %438
  %440 = getelementptr i8, ptr %434, i32 %439
  br label %441

441:                                              ; preds = %441, %437
  %442 = phi ptr [ %446, %441 ], [ %435, %437 ]
  %443 = phi ptr [ %444, %441 ], [ %434, %437 ]
  %444 = getelementptr i8, ptr %443, i32 1
  %445 = load i8, ptr %443, align 1
  %446 = getelementptr i8, ptr %442, i32 1
  store i8 %445, ptr %442, align 1
  %447 = icmp eq ptr %444, %440
  br i1 %447, label %448, label %441

448:                                              ; preds = %441, %433, %408, %400
  %449 = load ptr, ptr %46, align 4
  %450 = getelementptr i8, ptr %449, i32 %390
  store ptr %450, ptr %46, align 4
  %451 = icmp ugt i32 %390, 65535
  br i1 %451, label %452, label %459

452:                                              ; preds = %448
  store i32 1, ptr %48, align 4
  %453 = load ptr, ptr %49, align 4
  %454 = load ptr, ptr %1, align 4
  %455 = ptrtoint ptr %453 to i32
  %456 = ptrtoint ptr %454 to i32
  %457 = sub i32 %455, %456
  %458 = ashr exact i32 %457, 3
  store i32 %458, ptr %50, align 4
  br label %459

459:                                              ; preds = %452, %448, %398
  %460 = trunc i32 %390 to i16
  %461 = load ptr, ptr %49, align 4
  %462 = getelementptr inbounds %struct.seqDef_s, ptr %461, i32 0, i32 1
  store i16 %460, ptr %462, align 4
  %463 = add i32 %355, 1
  %464 = load ptr, ptr %49, align 4
  store i32 %463, ptr %464, align 4
  %465 = icmp ugt i32 %391, 65535
  br i1 %465, label %468, label %466

466:                                              ; preds = %459
  %467 = load ptr, ptr %49, align 4
  br label %475

468:                                              ; preds = %459
  store i32 2, ptr %48, align 4
  %469 = load ptr, ptr %49, align 4
  %470 = load ptr, ptr %1, align 4
  %471 = ptrtoint ptr %469 to i32
  %472 = ptrtoint ptr %470 to i32
  %473 = sub i32 %471, %472
  %474 = ashr exact i32 %473, 3
  store i32 %474, ptr %50, align 4
  br label %475

475:                                              ; preds = %468, %466
  %476 = phi ptr [ %467, %466 ], [ %469, %468 ]
  %477 = trunc i32 %391 to i16
  %478 = getelementptr inbounds %struct.seqDef_s, ptr %476, i32 0, i32 2
  store i16 %477, ptr %478, align 2
  %479 = load ptr, ptr %49, align 4
  %480 = getelementptr %struct.seqDef_s, ptr %479, i32 1
  store ptr %480, ptr %49, align 4
  %481 = getelementptr i8, ptr %387, i32 %386
  %482 = icmp ule ptr %481, %10
  %483 = icmp ne i32 %384, 0
  %484 = and i1 %483, %482
  br i1 %484, label %485, label %583

485:                                              ; preds = %573, %475
  %486 = phi ptr [ %578, %573 ], [ %480, %475 ]
  %487 = phi ptr [ %579, %573 ], [ %481, %475 ]
  %488 = phi i32 [ %489, %573 ], [ %385, %475 ]
  %489 = phi i32 [ %488, %573 ], [ %384, %475 ]
  %490 = load i32, ptr %487, align 1
  %491 = sub i32 0, %489
  %492 = getelementptr i8, ptr %487, i32 %491
  %493 = load i32, ptr %492, align 1
  %494 = icmp eq i32 %490, %493
  br i1 %494, label %495, label %583

495:                                              ; preds = %485
  %496 = getelementptr i8, ptr %487, i32 4
  %497 = getelementptr i8, ptr %496, i32 %491
  %498 = icmp ugt ptr %43, %496
  br i1 %498, label %499, label %525

499:                                              ; preds = %495
  %500 = load i32, ptr %497, align 1
  %501 = load i32, ptr %496, align 1
  %502 = xor i32 %501, %500
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = tail call i32 @llvm.cttz.i32(i32 %502, i1 true) #7, !range !8
  %506 = lshr i32 %505, 3
  br label %551

507:                                              ; preds = %513, %499
  %508 = phi ptr [ %511, %513 ], [ %496, %499 ]
  %509 = phi ptr [ %510, %513 ], [ %497, %499 ]
  %510 = getelementptr i8, ptr %509, i32 4
  %511 = getelementptr i8, ptr %508, i32 4
  %512 = icmp ult ptr %511, %43
  br i1 %512, label %513, label %525

513:                                              ; preds = %507
  %514 = load i32, ptr %510, align 1
  %515 = load i32, ptr %511, align 1
  %516 = xor i32 %515, %514
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %507, label %518

518:                                              ; preds = %513
  %519 = tail call i32 @llvm.cttz.i32(i32 %516, i1 true) #7, !range !8
  %520 = lshr i32 %519, 3
  %521 = getelementptr i8, ptr %511, i32 %520
  %522 = ptrtoint ptr %521 to i32
  %523 = ptrtoint ptr %496 to i32
  %524 = sub i32 %522, %523
  br label %551

525:                                              ; preds = %507, %495
  %526 = phi ptr [ %496, %495 ], [ %511, %507 ]
  %527 = phi ptr [ %497, %495 ], [ %510, %507 ]
  %528 = icmp ult ptr %526, %44
  br i1 %528, label %529, label %536

529:                                              ; preds = %525
  %530 = load i16, ptr %527, align 1
  %531 = load i16, ptr %526, align 1
  %532 = icmp eq i16 %530, %531
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  %534 = getelementptr i8, ptr %526, i32 2
  %535 = getelementptr i8, ptr %527, i32 2
  br label %536

536:                                              ; preds = %533, %529, %525
  %537 = phi ptr [ %534, %533 ], [ %526, %529 ], [ %526, %525 ]
  %538 = phi ptr [ %535, %533 ], [ %527, %529 ], [ %527, %525 ]
  %539 = icmp ult ptr %537, %9
  br i1 %539, label %540, label %546

540:                                              ; preds = %536
  %541 = load i8, ptr %538, align 1
  %542 = load i8, ptr %537, align 1
  %543 = icmp eq i8 %541, %542
  %544 = zext i1 %543 to i32
  %545 = getelementptr i8, ptr %537, i32 %544
  br label %546

546:                                              ; preds = %540, %536
  %547 = phi ptr [ %537, %536 ], [ %545, %540 ]
  %548 = ptrtoint ptr %547 to i32
  %549 = ptrtoint ptr %496 to i32
  %550 = sub i32 %548, %549
  br label %551

551:                                              ; preds = %546, %518, %504
  %552 = phi i32 [ %550, %546 ], [ %506, %504 ], [ %524, %518 ]
  %553 = add i32 %552, 4
  %554 = add i32 %552, 1
  %555 = icmp ugt ptr %487, %45
  br i1 %555, label %559, label %556

556:                                              ; preds = %551
  %557 = load ptr, ptr %46, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %557, ptr noundef align 1 dereferenceable(16) %487, i32 16, i1 false) #7
  %558 = load ptr, ptr %49, align 4
  br label %559

559:                                              ; preds = %556, %551
  %560 = phi ptr [ %486, %551 ], [ %558, %556 ]
  %561 = getelementptr inbounds %struct.seqDef_s, ptr %560, i32 0, i32 1
  store i16 0, ptr %561, align 4
  %562 = load ptr, ptr %49, align 4
  store i32 1, ptr %562, align 4
  %563 = icmp ugt i32 %554, 65535
  br i1 %563, label %566, label %564

564:                                              ; preds = %559
  %565 = load ptr, ptr %49, align 4
  br label %573

566:                                              ; preds = %559
  store i32 2, ptr %48, align 4
  %567 = load ptr, ptr %49, align 4
  %568 = load ptr, ptr %1, align 4
  %569 = ptrtoint ptr %567 to i32
  %570 = ptrtoint ptr %568 to i32
  %571 = sub i32 %569, %570
  %572 = ashr exact i32 %571, 3
  store i32 %572, ptr %50, align 4
  br label %573

573:                                              ; preds = %566, %564
  %574 = phi ptr [ %565, %564 ], [ %567, %566 ]
  %575 = trunc i32 %554 to i16
  %576 = getelementptr inbounds %struct.seqDef_s, ptr %574, i32 0, i32 2
  store i16 %575, ptr %576, align 2
  %577 = load ptr, ptr %49, align 4
  %578 = getelementptr %struct.seqDef_s, ptr %577, i32 1
  store ptr %578, ptr %49, align 4
  %579 = getelementptr i8, ptr %487, i32 %553
  %580 = icmp ule ptr %579, %10
  %581 = icmp ne i32 %488, 0
  %582 = and i1 %581, %580
  br i1 %582, label %485, label %583

583:                                              ; preds = %573, %485, %475, %129
  %584 = phi i32 [ %55, %129 ], [ %384, %475 ], [ %488, %573 ], [ %489, %485 ]
  %585 = phi i32 [ %54, %129 ], [ %385, %475 ], [ %489, %573 ], [ %488, %485 ]
  %586 = phi ptr [ %53, %129 ], [ %481, %475 ], [ %579, %573 ], [ %487, %485 ]
  %587 = phi ptr [ %135, %129 ], [ %481, %475 ], [ %579, %573 ], [ %487, %485 ]
  %588 = icmp ult ptr %587, %10
  br i1 %588, label %51, label %589

589:                                              ; preds = %583, %5
  %590 = phi ptr [ %3, %5 ], [ %586, %583 ]
  %591 = phi i32 [ %38, %5 ], [ %584, %583 ]
  %592 = phi i32 [ %40, %5 ], [ %585, %583 ]
  %593 = ptrtoint ptr %590 to i32
  %594 = select i1 %37, i32 %18, i32 0
  %595 = select i1 %39, i32 %16, i32 %594
  %596 = icmp eq i32 %592, 0
  %597 = select i1 %596, i32 %595, i32 %592
  store i32 %597, ptr %2, align 4
  %598 = icmp eq i32 %591, 0
  %599 = select i1 %598, i32 %595, i32 %591
  store i32 %599, ptr %17, align 4
  %600 = ptrtoint ptr %9 to i32
  %601 = sub i32 %600, %593
  ret i32 %601
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy2(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = load i32, ptr %2, align 4
  %14 = getelementptr i32, ptr %2, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq ptr %12, %3
  %17 = zext i1 %16 to i32
  %18 = getelementptr i8, ptr %3, i32 %17
  %19 = ptrtoint ptr %18 to i32
  %20 = ptrtoint ptr %9 to i32
  %21 = sub i32 %19, %20
  %22 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = shl nuw i32 1, %23
  %25 = sub i32 %21, %11
  %26 = icmp ugt i32 %25, %24
  %27 = sub i32 %21, %24
  %28 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i1 %26, i1 false
  %32 = select i1 %31, i32 %27, i32 %11
  %33 = sub i32 %21, %32
  %34 = icmp ugt i32 %15, %33
  %35 = select i1 %34, i32 0, i32 %15
  %36 = icmp ugt i32 %13, %33
  %37 = select i1 %36, i32 0, i32 %13
  %38 = icmp ult ptr %18, %7
  br i1 %38, label %39, label %1800

39:                                               ; preds = %5
  %40 = getelementptr i8, ptr %6, i32 -3
  %41 = getelementptr i8, ptr %6, i32 -1
  %42 = getelementptr i8, ptr %6, i32 -32
  %43 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %44 = ptrtoint ptr %42 to i32
  %45 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %48 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %49 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %51 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %52 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %53 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %54 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %55 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %56

56:                                               ; preds = %1794, %39
  %57 = phi ptr [ %18, %39 ], [ %1798, %1794 ]
  %58 = phi ptr [ %3, %39 ], [ %1797, %1794 ]
  %59 = phi i32 [ %37, %39 ], [ %1796, %1794 ]
  %60 = phi i32 [ %35, %39 ], [ %1795, %1794 ]
  %61 = sub i32 0, %59
  %62 = getelementptr i8, ptr %57, i32 1
  %63 = icmp ne i32 %59, 0
  %64 = getelementptr i8, ptr %62, i32 %61
  %65 = load i32, ptr %64, align 1
  %66 = load i32, ptr %62, align 1
  %67 = icmp eq i32 %65, %66
  %68 = and i1 %63, %67
  br i1 %68, label %69, label %128

69:                                               ; preds = %56
  %70 = getelementptr i8, ptr %57, i32 5
  %71 = getelementptr i8, ptr %70, i32 %61
  %72 = icmp ugt ptr %40, %70
  br i1 %72, label %73, label %99

73:                                               ; preds = %69
  %74 = load i32, ptr %71, align 1
  %75 = load i32, ptr %70, align 1
  %76 = xor i32 %75, %74
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = tail call i32 @llvm.cttz.i32(i32 %76, i1 true) #7, !range !8
  %80 = lshr i32 %79, 3
  br label %125

81:                                               ; preds = %87, %73
  %82 = phi ptr [ %85, %87 ], [ %70, %73 ]
  %83 = phi ptr [ %84, %87 ], [ %71, %73 ]
  %84 = getelementptr i8, ptr %83, i32 4
  %85 = getelementptr i8, ptr %82, i32 4
  %86 = icmp ult ptr %85, %40
  br i1 %86, label %87, label %99

87:                                               ; preds = %81
  %88 = load i32, ptr %84, align 1
  %89 = load i32, ptr %85, align 1
  %90 = xor i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %81, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !8
  %94 = lshr i32 %93, 3
  %95 = getelementptr i8, ptr %85, i32 %94
  %96 = ptrtoint ptr %95 to i32
  %97 = ptrtoint ptr %70 to i32
  %98 = sub i32 %96, %97
  br label %125

99:                                               ; preds = %81, %69
  %100 = phi ptr [ %70, %69 ], [ %85, %81 ]
  %101 = phi ptr [ %71, %69 ], [ %84, %81 ]
  %102 = icmp ult ptr %100, %41
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = load i16, ptr %101, align 1
  %105 = load i16, ptr %100, align 1
  %106 = icmp eq i16 %104, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = getelementptr i8, ptr %100, i32 2
  %109 = getelementptr i8, ptr %101, i32 2
  br label %110

110:                                              ; preds = %107, %103, %99
  %111 = phi ptr [ %108, %107 ], [ %100, %103 ], [ %100, %99 ]
  %112 = phi ptr [ %109, %107 ], [ %101, %103 ], [ %101, %99 ]
  %113 = icmp ult ptr %111, %6
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = load i8, ptr %112, align 1
  %116 = load i8, ptr %111, align 1
  %117 = icmp eq i8 %115, %116
  %118 = zext i1 %117 to i32
  %119 = getelementptr i8, ptr %111, i32 %118
  br label %120

120:                                              ; preds = %114, %110
  %121 = phi ptr [ %111, %110 ], [ %119, %114 ]
  %122 = ptrtoint ptr %121 to i32
  %123 = ptrtoint ptr %70 to i32
  %124 = sub i32 %122, %123
  br label %125

125:                                              ; preds = %120, %92, %78
  %126 = phi i32 [ %124, %120 ], [ %80, %78 ], [ %98, %92 ]
  %127 = add i32 %126, 4
  br label %128

128:                                              ; preds = %125, %56
  %129 = phi i32 [ %127, %125 ], [ 0, %56 ]
  %130 = load i32, ptr %48, align 4
  switch i32 %130, label %131 [
    i32 6, label %397
    i32 5, label %262
    i32 7, label %397
  ]

131:                                              ; preds = %128
  %132 = load ptr, ptr %49, align 4
  %133 = load i32, ptr %50, align 4
  %134 = shl nuw i32 1, %133
  %135 = add i32 %134, -1
  %136 = load ptr, ptr %8, align 4
  %137 = ptrtoint ptr %57 to i32
  %138 = ptrtoint ptr %136 to i32
  %139 = sub i32 %137, %138
  %140 = load i32, ptr %22, align 4
  %141 = shl nuw i32 1, %140
  %142 = load i32, ptr %51, align 4
  %143 = sub i32 %139, %142
  %144 = icmp ugt i32 %143, %141
  %145 = sub i32 %139, %141
  %146 = load i32, ptr %28, align 4
  %147 = icmp eq i32 %146, 0
  %148 = select i1 %147, i1 %144, i1 false
  %149 = select i1 %148, i32 %145, i32 %142
  %150 = tail call i32 @llvm.usub.sat.i32(i32 %139, i32 %134) #7
  %151 = load i32, ptr %52, align 4
  %152 = shl nuw i32 1, %151
  %153 = load ptr, ptr %53, align 4
  %154 = load i32, ptr %54, align 4
  %155 = shl nsw i32 -1, %133
  %156 = xor i32 %155, -1
  %157 = load i32, ptr %55, align 4
  %158 = icmp ult i32 %157, %139
  %159 = sub i32 32, %154
  br i1 %158, label %160, label %172

160:                                              ; preds = %160, %131
  %161 = phi i32 [ %170, %160 ], [ %157, %131 ]
  %162 = getelementptr i8, ptr %136, i32 %161
  %163 = load i32, ptr %162, align 1
  %164 = mul i32 %163, -1640531535
  %165 = lshr i32 %164, %159
  %166 = getelementptr i32, ptr %153, i32 %165
  %167 = load i32, ptr %166, align 4
  %168 = and i32 %161, %156
  %169 = getelementptr i32, ptr %132, i32 %168
  store i32 %167, ptr %169, align 4
  store i32 %161, ptr %166, align 4
  %170 = add nuw i32 %161, 1
  %171 = icmp ult i32 %170, %139
  br i1 %171, label %160, label %172

172:                                              ; preds = %160, %131
  store i32 %139, ptr %55, align 4
  %173 = load i32, ptr %57, align 1
  %174 = mul i32 %173, -1640531535
  %175 = lshr i32 %174, %159
  %176 = getelementptr i32, ptr %153, i32 %175
  %177 = load i32, ptr %176, align 4
  %178 = icmp ult i32 %177, %149
  br i1 %178, label %532, label %179

179:                                              ; preds = %172
  %180 = icmp ugt ptr %40, %57
  %181 = add i32 %139, 2
  br label %182

182:                                              ; preds = %254, %179
  %183 = phi i32 [ 999999999, %179 ], [ %251, %254 ]
  %184 = phi i32 [ %177, %179 ], [ %258, %254 ]
  %185 = phi i32 [ 3, %179 ], [ %252, %254 ]
  %186 = phi i32 [ %152, %179 ], [ %257, %254 ]
  %187 = getelementptr i8, ptr %136, i32 %184
  %188 = getelementptr i8, ptr %187, i32 %185
  %189 = load i8, ptr %188, align 1
  %190 = getelementptr i8, ptr %57, i32 %185
  %191 = load i8, ptr %190, align 1
  %192 = icmp eq i8 %189, %191
  br i1 %192, label %193, label %250

193:                                              ; preds = %182
  br i1 %180, label %194, label %218

194:                                              ; preds = %193
  %195 = load i32, ptr %187, align 1
  %196 = xor i32 %195, %173
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = tail call i32 @llvm.cttz.i32(i32 %196, i1 true) #7, !range !8
  %200 = lshr i32 %199, 3
  br label %243

201:                                              ; preds = %207, %194
  %202 = phi ptr [ %205, %207 ], [ %57, %194 ]
  %203 = phi ptr [ %204, %207 ], [ %187, %194 ]
  %204 = getelementptr i8, ptr %203, i32 4
  %205 = getelementptr i8, ptr %202, i32 4
  %206 = icmp ult ptr %205, %40
  br i1 %206, label %207, label %218

207:                                              ; preds = %201
  %208 = load i32, ptr %204, align 1
  %209 = load i32, ptr %205, align 1
  %210 = xor i32 %209, %208
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %201, label %212

212:                                              ; preds = %207
  %213 = tail call i32 @llvm.cttz.i32(i32 %210, i1 true) #7, !range !8
  %214 = lshr i32 %213, 3
  %215 = getelementptr i8, ptr %205, i32 %214
  %216 = ptrtoint ptr %215 to i32
  %217 = sub i32 %216, %137
  br label %243

218:                                              ; preds = %201, %193
  %219 = phi ptr [ %57, %193 ], [ %205, %201 ]
  %220 = phi ptr [ %187, %193 ], [ %204, %201 ]
  %221 = icmp ult ptr %219, %41
  br i1 %221, label %222, label %229

222:                                              ; preds = %218
  %223 = load i16, ptr %220, align 1
  %224 = load i16, ptr %219, align 1
  %225 = icmp eq i16 %223, %224
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  %227 = getelementptr i8, ptr %219, i32 2
  %228 = getelementptr i8, ptr %220, i32 2
  br label %229

229:                                              ; preds = %226, %222, %218
  %230 = phi ptr [ %227, %226 ], [ %219, %222 ], [ %219, %218 ]
  %231 = phi ptr [ %228, %226 ], [ %220, %222 ], [ %220, %218 ]
  %232 = icmp ult ptr %230, %6
  br i1 %232, label %233, label %239

233:                                              ; preds = %229
  %234 = load i8, ptr %231, align 1
  %235 = load i8, ptr %230, align 1
  %236 = icmp eq i8 %234, %235
  %237 = zext i1 %236 to i32
  %238 = getelementptr i8, ptr %230, i32 %237
  br label %239

239:                                              ; preds = %233, %229
  %240 = phi ptr [ %230, %229 ], [ %238, %233 ]
  %241 = ptrtoint ptr %240 to i32
  %242 = sub i32 %241, %137
  br label %243

243:                                              ; preds = %239, %212, %198
  %244 = phi i32 [ %242, %239 ], [ %200, %198 ], [ %217, %212 ]
  %245 = icmp ugt i32 %244, %185
  br i1 %245, label %246, label %250

246:                                              ; preds = %243
  %247 = sub i32 %181, %184
  %248 = getelementptr i8, ptr %57, i32 %244
  %249 = icmp eq ptr %248, %6
  br i1 %249, label %532, label %250

250:                                              ; preds = %246, %243, %182
  %251 = phi i32 [ %247, %246 ], [ %183, %243 ], [ %183, %182 ]
  %252 = phi i32 [ %244, %246 ], [ %185, %243 ], [ %185, %182 ]
  %253 = icmp ugt i32 %184, %150
  br i1 %253, label %254, label %532

254:                                              ; preds = %250
  %255 = and i32 %184, %135
  %256 = getelementptr i32, ptr %132, i32 %255
  %257 = add i32 %186, -1
  %258 = load i32, ptr %256, align 4
  %259 = icmp uge i32 %258, %149
  %260 = icmp ne i32 %257, 0
  %261 = and i1 %260, %259
  br i1 %261, label %182, label %532

262:                                              ; preds = %128
  %263 = load ptr, ptr %49, align 4
  %264 = load i32, ptr %50, align 4
  %265 = shl nuw i32 1, %264
  %266 = add i32 %265, -1
  %267 = load ptr, ptr %8, align 4
  %268 = ptrtoint ptr %57 to i32
  %269 = ptrtoint ptr %267 to i32
  %270 = sub i32 %268, %269
  %271 = load i32, ptr %22, align 4
  %272 = shl nuw i32 1, %271
  %273 = load i32, ptr %51, align 4
  %274 = sub i32 %270, %273
  %275 = icmp ugt i32 %274, %272
  %276 = sub i32 %270, %272
  %277 = load i32, ptr %28, align 4
  %278 = icmp eq i32 %277, 0
  %279 = select i1 %278, i1 %275, i1 false
  %280 = select i1 %279, i32 %276, i32 %273
  %281 = tail call i32 @llvm.usub.sat.i32(i32 %270, i32 %265) #7
  %282 = load i32, ptr %52, align 4
  %283 = shl nuw i32 1, %282
  %284 = load ptr, ptr %53, align 4
  %285 = load i32, ptr %54, align 4
  %286 = shl nsw i32 -1, %264
  %287 = xor i32 %286, -1
  %288 = load i32, ptr %55, align 4
  %289 = icmp ult i32 %288, %270
  %290 = sub i32 64, %285
  %291 = zext i32 %290 to i64
  br i1 %289, label %292, label %305

292:                                              ; preds = %292, %262
  %293 = phi i32 [ %303, %292 ], [ %288, %262 ]
  %294 = getelementptr i8, ptr %267, i32 %293
  %295 = load i64, ptr %294, align 1
  %296 = mul i64 %295, -3523014627271114752
  %297 = lshr i64 %296, %291
  %298 = trunc i64 %297 to i32
  %299 = getelementptr i32, ptr %284, i32 %298
  %300 = load i32, ptr %299, align 4
  %301 = and i32 %293, %287
  %302 = getelementptr i32, ptr %263, i32 %301
  store i32 %300, ptr %302, align 4
  store i32 %293, ptr %299, align 4
  %303 = add nuw i32 %293, 1
  %304 = icmp ult i32 %303, %270
  br i1 %304, label %292, label %305

305:                                              ; preds = %292, %262
  store i32 %270, ptr %55, align 4
  %306 = load i64, ptr %57, align 1
  %307 = mul i64 %306, -3523014627271114752
  %308 = lshr i64 %307, %291
  %309 = trunc i64 %308 to i32
  %310 = getelementptr i32, ptr %284, i32 %309
  %311 = load i32, ptr %310, align 4
  %312 = icmp ult i32 %311, %280
  %313 = trunc i64 %306 to i32
  br i1 %312, label %532, label %314

314:                                              ; preds = %305
  %315 = icmp ugt ptr %40, %57
  %316 = add i32 %270, 2
  br label %317

317:                                              ; preds = %389, %314
  %318 = phi i32 [ 999999999, %314 ], [ %386, %389 ]
  %319 = phi i32 [ %311, %314 ], [ %393, %389 ]
  %320 = phi i32 [ 3, %314 ], [ %387, %389 ]
  %321 = phi i32 [ %283, %314 ], [ %392, %389 ]
  %322 = getelementptr i8, ptr %267, i32 %319
  %323 = getelementptr i8, ptr %322, i32 %320
  %324 = load i8, ptr %323, align 1
  %325 = getelementptr i8, ptr %57, i32 %320
  %326 = load i8, ptr %325, align 1
  %327 = icmp eq i8 %324, %326
  br i1 %327, label %328, label %385

328:                                              ; preds = %317
  br i1 %315, label %329, label %353

329:                                              ; preds = %328
  %330 = load i32, ptr %322, align 1
  %331 = xor i32 %330, %313
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %336, label %333

333:                                              ; preds = %329
  %334 = tail call i32 @llvm.cttz.i32(i32 %331, i1 true) #7, !range !8
  %335 = lshr i32 %334, 3
  br label %378

336:                                              ; preds = %342, %329
  %337 = phi ptr [ %340, %342 ], [ %57, %329 ]
  %338 = phi ptr [ %339, %342 ], [ %322, %329 ]
  %339 = getelementptr i8, ptr %338, i32 4
  %340 = getelementptr i8, ptr %337, i32 4
  %341 = icmp ult ptr %340, %40
  br i1 %341, label %342, label %353

342:                                              ; preds = %336
  %343 = load i32, ptr %339, align 1
  %344 = load i32, ptr %340, align 1
  %345 = xor i32 %344, %343
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %336, label %347

347:                                              ; preds = %342
  %348 = tail call i32 @llvm.cttz.i32(i32 %345, i1 true) #7, !range !8
  %349 = lshr i32 %348, 3
  %350 = getelementptr i8, ptr %340, i32 %349
  %351 = ptrtoint ptr %350 to i32
  %352 = sub i32 %351, %268
  br label %378

353:                                              ; preds = %336, %328
  %354 = phi ptr [ %57, %328 ], [ %340, %336 ]
  %355 = phi ptr [ %322, %328 ], [ %339, %336 ]
  %356 = icmp ult ptr %354, %41
  br i1 %356, label %357, label %364

357:                                              ; preds = %353
  %358 = load i16, ptr %355, align 1
  %359 = load i16, ptr %354, align 1
  %360 = icmp eq i16 %358, %359
  br i1 %360, label %361, label %364

361:                                              ; preds = %357
  %362 = getelementptr i8, ptr %354, i32 2
  %363 = getelementptr i8, ptr %355, i32 2
  br label %364

364:                                              ; preds = %361, %357, %353
  %365 = phi ptr [ %362, %361 ], [ %354, %357 ], [ %354, %353 ]
  %366 = phi ptr [ %363, %361 ], [ %355, %357 ], [ %355, %353 ]
  %367 = icmp ult ptr %365, %6
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = load i8, ptr %366, align 1
  %370 = load i8, ptr %365, align 1
  %371 = icmp eq i8 %369, %370
  %372 = zext i1 %371 to i32
  %373 = getelementptr i8, ptr %365, i32 %372
  br label %374

374:                                              ; preds = %368, %364
  %375 = phi ptr [ %365, %364 ], [ %373, %368 ]
  %376 = ptrtoint ptr %375 to i32
  %377 = sub i32 %376, %268
  br label %378

378:                                              ; preds = %374, %347, %333
  %379 = phi i32 [ %377, %374 ], [ %335, %333 ], [ %352, %347 ]
  %380 = icmp ugt i32 %379, %320
  br i1 %380, label %381, label %385

381:                                              ; preds = %378
  %382 = sub i32 %316, %319
  %383 = getelementptr i8, ptr %57, i32 %379
  %384 = icmp eq ptr %383, %6
  br i1 %384, label %532, label %385

385:                                              ; preds = %381, %378, %317
  %386 = phi i32 [ %382, %381 ], [ %318, %378 ], [ %318, %317 ]
  %387 = phi i32 [ %379, %381 ], [ %320, %378 ], [ %320, %317 ]
  %388 = icmp ugt i32 %319, %281
  br i1 %388, label %389, label %532

389:                                              ; preds = %385
  %390 = and i32 %319, %266
  %391 = getelementptr i32, ptr %263, i32 %390
  %392 = add i32 %321, -1
  %393 = load i32, ptr %391, align 4
  %394 = icmp uge i32 %393, %280
  %395 = icmp ne i32 %392, 0
  %396 = and i1 %395, %394
  br i1 %396, label %317, label %532

397:                                              ; preds = %128, %128
  %398 = load ptr, ptr %49, align 4
  %399 = load i32, ptr %50, align 4
  %400 = shl nuw i32 1, %399
  %401 = add i32 %400, -1
  %402 = load ptr, ptr %8, align 4
  %403 = ptrtoint ptr %57 to i32
  %404 = ptrtoint ptr %402 to i32
  %405 = sub i32 %403, %404
  %406 = load i32, ptr %22, align 4
  %407 = shl nuw i32 1, %406
  %408 = load i32, ptr %51, align 4
  %409 = sub i32 %405, %408
  %410 = icmp ugt i32 %409, %407
  %411 = sub i32 %405, %407
  %412 = load i32, ptr %28, align 4
  %413 = icmp eq i32 %412, 0
  %414 = select i1 %413, i1 %410, i1 false
  %415 = select i1 %414, i32 %411, i32 %408
  %416 = tail call i32 @llvm.usub.sat.i32(i32 %405, i32 %400) #7
  %417 = load i32, ptr %52, align 4
  %418 = shl nuw i32 1, %417
  %419 = load ptr, ptr %53, align 4
  %420 = load i32, ptr %54, align 4
  %421 = shl nsw i32 -1, %399
  %422 = xor i32 %421, -1
  %423 = load i32, ptr %55, align 4
  %424 = icmp ult i32 %423, %405
  %425 = sub i32 64, %420
  %426 = zext i32 %425 to i64
  br i1 %424, label %427, label %440

427:                                              ; preds = %427, %397
  %428 = phi i32 [ %438, %427 ], [ %423, %397 ]
  %429 = getelementptr i8, ptr %402, i32 %428
  %430 = load i64, ptr %429, align 1
  %431 = mul i64 %430, -3523014627193847808
  %432 = lshr i64 %431, %426
  %433 = trunc i64 %432 to i32
  %434 = getelementptr i32, ptr %419, i32 %433
  %435 = load i32, ptr %434, align 4
  %436 = and i32 %428, %422
  %437 = getelementptr i32, ptr %398, i32 %436
  store i32 %435, ptr %437, align 4
  store i32 %428, ptr %434, align 4
  %438 = add nuw i32 %428, 1
  %439 = icmp ult i32 %438, %405
  br i1 %439, label %427, label %440

440:                                              ; preds = %427, %397
  store i32 %405, ptr %55, align 4
  %441 = load i64, ptr %57, align 1
  %442 = mul i64 %441, -3523014627193847808
  %443 = lshr i64 %442, %426
  %444 = trunc i64 %443 to i32
  %445 = getelementptr i32, ptr %419, i32 %444
  %446 = load i32, ptr %445, align 4
  %447 = icmp ult i32 %446, %415
  %448 = trunc i64 %441 to i32
  br i1 %447, label %532, label %449

449:                                              ; preds = %440
  %450 = icmp ugt ptr %40, %57
  %451 = add i32 %405, 2
  br label %452

452:                                              ; preds = %524, %449
  %453 = phi i32 [ 999999999, %449 ], [ %521, %524 ]
  %454 = phi i32 [ %446, %449 ], [ %528, %524 ]
  %455 = phi i32 [ 3, %449 ], [ %522, %524 ]
  %456 = phi i32 [ %418, %449 ], [ %527, %524 ]
  %457 = getelementptr i8, ptr %402, i32 %454
  %458 = getelementptr i8, ptr %457, i32 %455
  %459 = load i8, ptr %458, align 1
  %460 = getelementptr i8, ptr %57, i32 %455
  %461 = load i8, ptr %460, align 1
  %462 = icmp eq i8 %459, %461
  br i1 %462, label %463, label %520

463:                                              ; preds = %452
  br i1 %450, label %464, label %488

464:                                              ; preds = %463
  %465 = load i32, ptr %457, align 1
  %466 = xor i32 %465, %448
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %471, label %468

468:                                              ; preds = %464
  %469 = tail call i32 @llvm.cttz.i32(i32 %466, i1 true) #7, !range !8
  %470 = lshr i32 %469, 3
  br label %513

471:                                              ; preds = %477, %464
  %472 = phi ptr [ %475, %477 ], [ %57, %464 ]
  %473 = phi ptr [ %474, %477 ], [ %457, %464 ]
  %474 = getelementptr i8, ptr %473, i32 4
  %475 = getelementptr i8, ptr %472, i32 4
  %476 = icmp ult ptr %475, %40
  br i1 %476, label %477, label %488

477:                                              ; preds = %471
  %478 = load i32, ptr %474, align 1
  %479 = load i32, ptr %475, align 1
  %480 = xor i32 %479, %478
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %471, label %482

482:                                              ; preds = %477
  %483 = tail call i32 @llvm.cttz.i32(i32 %480, i1 true) #7, !range !8
  %484 = lshr i32 %483, 3
  %485 = getelementptr i8, ptr %475, i32 %484
  %486 = ptrtoint ptr %485 to i32
  %487 = sub i32 %486, %403
  br label %513

488:                                              ; preds = %471, %463
  %489 = phi ptr [ %57, %463 ], [ %475, %471 ]
  %490 = phi ptr [ %457, %463 ], [ %474, %471 ]
  %491 = icmp ult ptr %489, %41
  br i1 %491, label %492, label %499

492:                                              ; preds = %488
  %493 = load i16, ptr %490, align 1
  %494 = load i16, ptr %489, align 1
  %495 = icmp eq i16 %493, %494
  br i1 %495, label %496, label %499

496:                                              ; preds = %492
  %497 = getelementptr i8, ptr %489, i32 2
  %498 = getelementptr i8, ptr %490, i32 2
  br label %499

499:                                              ; preds = %496, %492, %488
  %500 = phi ptr [ %497, %496 ], [ %489, %492 ], [ %489, %488 ]
  %501 = phi ptr [ %498, %496 ], [ %490, %492 ], [ %490, %488 ]
  %502 = icmp ult ptr %500, %6
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = load i8, ptr %501, align 1
  %505 = load i8, ptr %500, align 1
  %506 = icmp eq i8 %504, %505
  %507 = zext i1 %506 to i32
  %508 = getelementptr i8, ptr %500, i32 %507
  br label %509

509:                                              ; preds = %503, %499
  %510 = phi ptr [ %500, %499 ], [ %508, %503 ]
  %511 = ptrtoint ptr %510 to i32
  %512 = sub i32 %511, %403
  br label %513

513:                                              ; preds = %509, %482, %468
  %514 = phi i32 [ %512, %509 ], [ %470, %468 ], [ %487, %482 ]
  %515 = icmp ugt i32 %514, %455
  br i1 %515, label %516, label %520

516:                                              ; preds = %513
  %517 = sub i32 %451, %454
  %518 = getelementptr i8, ptr %57, i32 %514
  %519 = icmp eq ptr %518, %6
  br i1 %519, label %532, label %520

520:                                              ; preds = %516, %513, %452
  %521 = phi i32 [ %517, %516 ], [ %453, %513 ], [ %453, %452 ]
  %522 = phi i32 [ %514, %516 ], [ %455, %513 ], [ %455, %452 ]
  %523 = icmp ugt i32 %454, %416
  br i1 %523, label %524, label %532

524:                                              ; preds = %520
  %525 = and i32 %454, %401
  %526 = getelementptr i32, ptr %398, i32 %525
  %527 = add i32 %456, -1
  %528 = load i32, ptr %526, align 4
  %529 = icmp uge i32 %528, %415
  %530 = icmp ne i32 %527, 0
  %531 = and i1 %530, %529
  br i1 %531, label %452, label %532

532:                                              ; preds = %524, %520, %516, %440, %389, %385, %381, %305, %254, %250, %246, %172
  %533 = phi i32 [ %139, %172 ], [ %270, %305 ], [ %405, %440 ], [ %139, %254 ], [ %139, %250 ], [ %139, %246 ], [ %405, %524 ], [ %405, %520 ], [ %405, %516 ], [ %270, %389 ], [ %270, %385 ], [ %270, %381 ]
  %534 = phi i32 [ 999999999, %172 ], [ 999999999, %305 ], [ 999999999, %440 ], [ %247, %246 ], [ %251, %250 ], [ %251, %254 ], [ %517, %516 ], [ %521, %520 ], [ %521, %524 ], [ %382, %381 ], [ %386, %385 ], [ %386, %389 ]
  %535 = phi i32 [ 3, %172 ], [ 3, %305 ], [ 3, %440 ], [ %244, %246 ], [ %252, %250 ], [ %252, %254 ], [ %514, %516 ], [ %522, %520 ], [ %522, %524 ], [ %379, %381 ], [ %387, %385 ], [ %387, %389 ]
  %536 = tail call i32 @llvm.umax.i32(i32 %535, i32 %129) #7
  %537 = icmp ult i32 %536, 4
  br i1 %537, label %538, label %545

538:                                              ; preds = %532
  %539 = ptrtoint ptr %57 to i32
  %540 = ptrtoint ptr %58 to i32
  %541 = sub i32 %539, %540
  %542 = ashr i32 %541, 8
  %543 = add nsw i32 %542, 1
  %544 = getelementptr i8, ptr %57, i32 %543
  br label %1794

545:                                              ; preds = %532
  %546 = icmp ugt i32 %535, %129
  %547 = select i1 %546, ptr %57, ptr %62
  %548 = select i1 %546, i32 %534, i32 0
  %549 = icmp ult ptr %57, %7
  br i1 %549, label %550, label %1564

550:                                              ; preds = %1055, %545
  %551 = phi i32 [ %1056, %1055 ], [ %533, %545 ]
  %552 = phi ptr [ %1059, %1055 ], [ %57, %545 ]
  %553 = phi ptr [ %1059, %1055 ], [ %547, %545 ]
  %554 = phi i32 [ %1058, %1055 ], [ %548, %545 ]
  %555 = phi i32 [ %1057, %1055 ], [ %536, %545 ]
  %556 = getelementptr i8, ptr %552, i32 1
  %557 = icmp eq i32 %554, 0
  br i1 %557, label %633, label %558

558:                                              ; preds = %550
  %559 = load i32, ptr %556, align 1
  %560 = getelementptr i8, ptr %556, i32 %61
  %561 = load i32, ptr %560, align 1
  %562 = icmp eq i32 %559, %561
  %563 = and i1 %63, %562
  br i1 %563, label %564, label %633

564:                                              ; preds = %558
  %565 = getelementptr i8, ptr %552, i32 5
  %566 = getelementptr i8, ptr %565, i32 %61
  %567 = icmp ugt ptr %40, %565
  br i1 %567, label %568, label %593

568:                                              ; preds = %564
  %569 = load i32, ptr %566, align 1
  %570 = load i32, ptr %565, align 1
  %571 = xor i32 %570, %569
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %578, label %573

573:                                              ; preds = %568
  %574 = tail call i32 @llvm.cttz.i32(i32 %571, i1 true) #7, !range !8
  %575 = lshr i32 %574, 3
  %576 = add i32 %554, 1
  %577 = tail call i32 @llvm.ctlz.i32(i32 %576, i1 false) #7, !range !8
  br label %622

578:                                              ; preds = %584, %568
  %579 = phi ptr [ %582, %584 ], [ %565, %568 ]
  %580 = phi ptr [ %581, %584 ], [ %566, %568 ]
  %581 = getelementptr i8, ptr %580, i32 4
  %582 = getelementptr i8, ptr %579, i32 4
  %583 = icmp ult ptr %582, %40
  br i1 %583, label %584, label %593

584:                                              ; preds = %578
  %585 = load i32, ptr %581, align 1
  %586 = load i32, ptr %582, align 1
  %587 = xor i32 %586, %585
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %578, label %589

589:                                              ; preds = %584
  %590 = tail call i32 @llvm.cttz.i32(i32 %587, i1 true) #7, !range !8
  %591 = lshr i32 %590, 3
  %592 = getelementptr i8, ptr %582, i32 %591
  br label %614

593:                                              ; preds = %578, %564
  %594 = phi ptr [ %565, %564 ], [ %582, %578 ]
  %595 = phi ptr [ %566, %564 ], [ %581, %578 ]
  %596 = icmp ult ptr %594, %41
  br i1 %596, label %597, label %604

597:                                              ; preds = %593
  %598 = load i16, ptr %595, align 1
  %599 = load i16, ptr %594, align 1
  %600 = icmp eq i16 %598, %599
  br i1 %600, label %601, label %604

601:                                              ; preds = %597
  %602 = getelementptr i8, ptr %594, i32 2
  %603 = getelementptr i8, ptr %595, i32 2
  br label %604

604:                                              ; preds = %601, %597, %593
  %605 = phi ptr [ %602, %601 ], [ %594, %597 ], [ %594, %593 ]
  %606 = phi ptr [ %603, %601 ], [ %595, %597 ], [ %595, %593 ]
  %607 = icmp ult ptr %605, %6
  br i1 %607, label %608, label %614

608:                                              ; preds = %604
  %609 = load i8, ptr %606, align 1
  %610 = load i8, ptr %605, align 1
  %611 = icmp eq i8 %609, %610
  %612 = zext i1 %611 to i32
  %613 = getelementptr i8, ptr %605, i32 %612
  br label %614

614:                                              ; preds = %608, %604, %589
  %615 = phi ptr [ %592, %589 ], [ %605, %604 ], [ %613, %608 ]
  %616 = ptrtoint ptr %615 to i32
  %617 = ptrtoint ptr %565 to i32
  %618 = sub i32 %616, %617
  %619 = add i32 %554, 1
  %620 = tail call i32 @llvm.ctlz.i32(i32 %619, i1 false) #7, !range !8
  %621 = icmp ult i32 %618, -4
  br i1 %621, label %622, label %633

622:                                              ; preds = %614, %573
  %623 = phi i32 [ %577, %573 ], [ %620, %614 ]
  %624 = phi i32 [ %575, %573 ], [ %618, %614 ]
  %625 = add nuw i32 %624, 4
  %626 = xor i32 %623, -32
  %627 = mul i32 %555, 3
  %628 = add i32 %627, 2
  %629 = add i32 %628, %626
  %630 = mul i32 %625, 3
  %631 = icmp sgt i32 %630, %629
  br i1 %631, label %632, label %633

632:                                              ; preds = %622
  br label %633

633:                                              ; preds = %632, %622, %614, %558, %550
  %634 = phi i32 [ %555, %558 ], [ %555, %550 ], [ %625, %632 ], [ %555, %622 ], [ %555, %614 ]
  %635 = phi i32 [ %554, %558 ], [ 0, %550 ], [ 0, %632 ], [ %554, %622 ], [ %554, %614 ]
  %636 = phi ptr [ %553, %558 ], [ %553, %550 ], [ %556, %632 ], [ %553, %622 ], [ %553, %614 ]
  %637 = load i32, ptr %48, align 4
  switch i32 %637, label %638 [
    i32 6, label %902
    i32 5, label %768
    i32 7, label %902
  ]

638:                                              ; preds = %633
  %639 = load ptr, ptr %49, align 4
  %640 = load i32, ptr %50, align 4
  %641 = shl nuw i32 1, %640
  %642 = add i32 %641, -1
  %643 = load ptr, ptr %8, align 4
  %644 = ptrtoint ptr %556 to i32
  %645 = ptrtoint ptr %643 to i32
  %646 = sub i32 %644, %645
  %647 = load i32, ptr %22, align 4
  %648 = shl nuw i32 1, %647
  %649 = load i32, ptr %51, align 4
  %650 = sub i32 %646, %649
  %651 = icmp ugt i32 %650, %648
  %652 = sub i32 %646, %648
  %653 = load i32, ptr %28, align 4
  %654 = icmp eq i32 %653, 0
  %655 = select i1 %654, i1 %651, i1 false
  %656 = select i1 %655, i32 %652, i32 %649
  %657 = tail call i32 @llvm.usub.sat.i32(i32 %646, i32 %641) #7
  %658 = load i32, ptr %52, align 4
  %659 = shl nuw i32 1, %658
  %660 = load ptr, ptr %53, align 4
  %661 = load i32, ptr %54, align 4
  %662 = shl nsw i32 -1, %640
  %663 = xor i32 %662, -1
  %664 = icmp ult i32 %551, %646
  %665 = sub i32 32, %661
  br i1 %664, label %666, label %678

666:                                              ; preds = %666, %638
  %667 = phi i32 [ %676, %666 ], [ %551, %638 ]
  %668 = getelementptr i8, ptr %643, i32 %667
  %669 = load i32, ptr %668, align 1
  %670 = mul i32 %669, -1640531535
  %671 = lshr i32 %670, %665
  %672 = getelementptr i32, ptr %660, i32 %671
  %673 = load i32, ptr %672, align 4
  %674 = and i32 %667, %663
  %675 = getelementptr i32, ptr %639, i32 %674
  store i32 %673, ptr %675, align 4
  store i32 %667, ptr %672, align 4
  %676 = add nuw i32 %667, 1
  %677 = icmp eq i32 %676, %646
  br i1 %677, label %678, label %666

678:                                              ; preds = %666, %638
  store i32 %646, ptr %55, align 4
  %679 = load i32, ptr %556, align 1
  %680 = mul i32 %679, -1640531535
  %681 = lshr i32 %680, %665
  %682 = getelementptr i32, ptr %660, i32 %681
  %683 = load i32, ptr %682, align 4
  %684 = icmp ult i32 %683, %656
  br i1 %684, label %1061, label %685

685:                                              ; preds = %678
  %686 = icmp ugt ptr %40, %556
  %687 = add i32 %646, 2
  br label %688

688:                                              ; preds = %760, %685
  %689 = phi i32 [ 999999999, %685 ], [ %757, %760 ]
  %690 = phi i32 [ %683, %685 ], [ %764, %760 ]
  %691 = phi i32 [ 3, %685 ], [ %758, %760 ]
  %692 = phi i32 [ %659, %685 ], [ %763, %760 ]
  %693 = getelementptr i8, ptr %643, i32 %690
  %694 = getelementptr i8, ptr %693, i32 %691
  %695 = load i8, ptr %694, align 1
  %696 = getelementptr i8, ptr %556, i32 %691
  %697 = load i8, ptr %696, align 1
  %698 = icmp eq i8 %695, %697
  br i1 %698, label %699, label %756

699:                                              ; preds = %688
  br i1 %686, label %700, label %724

700:                                              ; preds = %699
  %701 = load i32, ptr %693, align 1
  %702 = xor i32 %701, %679
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %707, label %704

704:                                              ; preds = %700
  %705 = tail call i32 @llvm.cttz.i32(i32 %702, i1 true) #7, !range !8
  %706 = lshr i32 %705, 3
  br label %749

707:                                              ; preds = %713, %700
  %708 = phi ptr [ %711, %713 ], [ %556, %700 ]
  %709 = phi ptr [ %710, %713 ], [ %693, %700 ]
  %710 = getelementptr i8, ptr %709, i32 4
  %711 = getelementptr i8, ptr %708, i32 4
  %712 = icmp ult ptr %711, %40
  br i1 %712, label %713, label %724

713:                                              ; preds = %707
  %714 = load i32, ptr %710, align 1
  %715 = load i32, ptr %711, align 1
  %716 = xor i32 %715, %714
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %707, label %718

718:                                              ; preds = %713
  %719 = tail call i32 @llvm.cttz.i32(i32 %716, i1 true) #7, !range !8
  %720 = lshr i32 %719, 3
  %721 = getelementptr i8, ptr %711, i32 %720
  %722 = ptrtoint ptr %721 to i32
  %723 = sub i32 %722, %644
  br label %749

724:                                              ; preds = %707, %699
  %725 = phi ptr [ %556, %699 ], [ %711, %707 ]
  %726 = phi ptr [ %693, %699 ], [ %710, %707 ]
  %727 = icmp ult ptr %725, %41
  br i1 %727, label %728, label %735

728:                                              ; preds = %724
  %729 = load i16, ptr %726, align 1
  %730 = load i16, ptr %725, align 1
  %731 = icmp eq i16 %729, %730
  br i1 %731, label %732, label %735

732:                                              ; preds = %728
  %733 = getelementptr i8, ptr %725, i32 2
  %734 = getelementptr i8, ptr %726, i32 2
  br label %735

735:                                              ; preds = %732, %728, %724
  %736 = phi ptr [ %733, %732 ], [ %725, %728 ], [ %725, %724 ]
  %737 = phi ptr [ %734, %732 ], [ %726, %728 ], [ %726, %724 ]
  %738 = icmp ult ptr %736, %6
  br i1 %738, label %739, label %745

739:                                              ; preds = %735
  %740 = load i8, ptr %737, align 1
  %741 = load i8, ptr %736, align 1
  %742 = icmp eq i8 %740, %741
  %743 = zext i1 %742 to i32
  %744 = getelementptr i8, ptr %736, i32 %743
  br label %745

745:                                              ; preds = %739, %735
  %746 = phi ptr [ %736, %735 ], [ %744, %739 ]
  %747 = ptrtoint ptr %746 to i32
  %748 = sub i32 %747, %644
  br label %749

749:                                              ; preds = %745, %718, %704
  %750 = phi i32 [ %748, %745 ], [ %706, %704 ], [ %723, %718 ]
  %751 = icmp ugt i32 %750, %691
  br i1 %751, label %752, label %756

752:                                              ; preds = %749
  %753 = sub i32 %687, %690
  %754 = getelementptr i8, ptr %556, i32 %750
  %755 = icmp eq ptr %754, %6
  br i1 %755, label %1036, label %756

756:                                              ; preds = %752, %749, %688
  %757 = phi i32 [ %753, %752 ], [ %689, %749 ], [ %689, %688 ]
  %758 = phi i32 [ %750, %752 ], [ %691, %749 ], [ %691, %688 ]
  %759 = icmp ugt i32 %690, %657
  br i1 %759, label %760, label %1036

760:                                              ; preds = %756
  %761 = and i32 %690, %642
  %762 = getelementptr i32, ptr %639, i32 %761
  %763 = add i32 %692, -1
  %764 = load i32, ptr %762, align 4
  %765 = icmp uge i32 %764, %656
  %766 = icmp ne i32 %763, 0
  %767 = and i1 %766, %765
  br i1 %767, label %688, label %1036

768:                                              ; preds = %633
  %769 = load ptr, ptr %49, align 4
  %770 = load i32, ptr %50, align 4
  %771 = shl nuw i32 1, %770
  %772 = add i32 %771, -1
  %773 = load ptr, ptr %8, align 4
  %774 = ptrtoint ptr %556 to i32
  %775 = ptrtoint ptr %773 to i32
  %776 = sub i32 %774, %775
  %777 = load i32, ptr %22, align 4
  %778 = shl nuw i32 1, %777
  %779 = load i32, ptr %51, align 4
  %780 = sub i32 %776, %779
  %781 = icmp ugt i32 %780, %778
  %782 = sub i32 %776, %778
  %783 = load i32, ptr %28, align 4
  %784 = icmp eq i32 %783, 0
  %785 = select i1 %784, i1 %781, i1 false
  %786 = select i1 %785, i32 %782, i32 %779
  %787 = tail call i32 @llvm.usub.sat.i32(i32 %776, i32 %771) #7
  %788 = load i32, ptr %52, align 4
  %789 = shl nuw i32 1, %788
  %790 = load ptr, ptr %53, align 4
  %791 = load i32, ptr %54, align 4
  %792 = shl nsw i32 -1, %770
  %793 = xor i32 %792, -1
  %794 = icmp ult i32 %551, %776
  %795 = sub i32 64, %791
  %796 = zext i32 %795 to i64
  br i1 %794, label %797, label %810

797:                                              ; preds = %797, %768
  %798 = phi i32 [ %808, %797 ], [ %551, %768 ]
  %799 = getelementptr i8, ptr %773, i32 %798
  %800 = load i64, ptr %799, align 1
  %801 = mul i64 %800, -3523014627271114752
  %802 = lshr i64 %801, %796
  %803 = trunc i64 %802 to i32
  %804 = getelementptr i32, ptr %790, i32 %803
  %805 = load i32, ptr %804, align 4
  %806 = and i32 %798, %793
  %807 = getelementptr i32, ptr %769, i32 %806
  store i32 %805, ptr %807, align 4
  store i32 %798, ptr %804, align 4
  %808 = add nuw i32 %798, 1
  %809 = icmp eq i32 %808, %776
  br i1 %809, label %810, label %797

810:                                              ; preds = %797, %768
  store i32 %776, ptr %55, align 4
  %811 = load i64, ptr %556, align 1
  %812 = mul i64 %811, -3523014627271114752
  %813 = lshr i64 %812, %796
  %814 = trunc i64 %813 to i32
  %815 = getelementptr i32, ptr %790, i32 %814
  %816 = load i32, ptr %815, align 4
  %817 = icmp ult i32 %816, %786
  %818 = trunc i64 %811 to i32
  br i1 %817, label %1061, label %819

819:                                              ; preds = %810
  %820 = icmp ugt ptr %40, %556
  %821 = add i32 %776, 2
  br label %822

822:                                              ; preds = %894, %819
  %823 = phi i32 [ 999999999, %819 ], [ %891, %894 ]
  %824 = phi i32 [ %816, %819 ], [ %898, %894 ]
  %825 = phi i32 [ 3, %819 ], [ %892, %894 ]
  %826 = phi i32 [ %789, %819 ], [ %897, %894 ]
  %827 = getelementptr i8, ptr %773, i32 %824
  %828 = getelementptr i8, ptr %827, i32 %825
  %829 = load i8, ptr %828, align 1
  %830 = getelementptr i8, ptr %556, i32 %825
  %831 = load i8, ptr %830, align 1
  %832 = icmp eq i8 %829, %831
  br i1 %832, label %833, label %890

833:                                              ; preds = %822
  br i1 %820, label %834, label %858

834:                                              ; preds = %833
  %835 = load i32, ptr %827, align 1
  %836 = xor i32 %835, %818
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %841, label %838

838:                                              ; preds = %834
  %839 = tail call i32 @llvm.cttz.i32(i32 %836, i1 true) #7, !range !8
  %840 = lshr i32 %839, 3
  br label %883

841:                                              ; preds = %847, %834
  %842 = phi ptr [ %845, %847 ], [ %556, %834 ]
  %843 = phi ptr [ %844, %847 ], [ %827, %834 ]
  %844 = getelementptr i8, ptr %843, i32 4
  %845 = getelementptr i8, ptr %842, i32 4
  %846 = icmp ult ptr %845, %40
  br i1 %846, label %847, label %858

847:                                              ; preds = %841
  %848 = load i32, ptr %844, align 1
  %849 = load i32, ptr %845, align 1
  %850 = xor i32 %849, %848
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %841, label %852

852:                                              ; preds = %847
  %853 = tail call i32 @llvm.cttz.i32(i32 %850, i1 true) #7, !range !8
  %854 = lshr i32 %853, 3
  %855 = getelementptr i8, ptr %845, i32 %854
  %856 = ptrtoint ptr %855 to i32
  %857 = sub i32 %856, %774
  br label %883

858:                                              ; preds = %841, %833
  %859 = phi ptr [ %556, %833 ], [ %845, %841 ]
  %860 = phi ptr [ %827, %833 ], [ %844, %841 ]
  %861 = icmp ult ptr %859, %41
  br i1 %861, label %862, label %869

862:                                              ; preds = %858
  %863 = load i16, ptr %860, align 1
  %864 = load i16, ptr %859, align 1
  %865 = icmp eq i16 %863, %864
  br i1 %865, label %866, label %869

866:                                              ; preds = %862
  %867 = getelementptr i8, ptr %859, i32 2
  %868 = getelementptr i8, ptr %860, i32 2
  br label %869

869:                                              ; preds = %866, %862, %858
  %870 = phi ptr [ %867, %866 ], [ %859, %862 ], [ %859, %858 ]
  %871 = phi ptr [ %868, %866 ], [ %860, %862 ], [ %860, %858 ]
  %872 = icmp ult ptr %870, %6
  br i1 %872, label %873, label %879

873:                                              ; preds = %869
  %874 = load i8, ptr %871, align 1
  %875 = load i8, ptr %870, align 1
  %876 = icmp eq i8 %874, %875
  %877 = zext i1 %876 to i32
  %878 = getelementptr i8, ptr %870, i32 %877
  br label %879

879:                                              ; preds = %873, %869
  %880 = phi ptr [ %870, %869 ], [ %878, %873 ]
  %881 = ptrtoint ptr %880 to i32
  %882 = sub i32 %881, %774
  br label %883

883:                                              ; preds = %879, %852, %838
  %884 = phi i32 [ %882, %879 ], [ %840, %838 ], [ %857, %852 ]
  %885 = icmp ugt i32 %884, %825
  br i1 %885, label %886, label %890

886:                                              ; preds = %883
  %887 = sub i32 %821, %824
  %888 = getelementptr i8, ptr %556, i32 %884
  %889 = icmp eq ptr %888, %6
  br i1 %889, label %1036, label %890

890:                                              ; preds = %886, %883, %822
  %891 = phi i32 [ %887, %886 ], [ %823, %883 ], [ %823, %822 ]
  %892 = phi i32 [ %884, %886 ], [ %825, %883 ], [ %825, %822 ]
  %893 = icmp ugt i32 %824, %787
  br i1 %893, label %894, label %1036

894:                                              ; preds = %890
  %895 = and i32 %824, %772
  %896 = getelementptr i32, ptr %769, i32 %895
  %897 = add i32 %826, -1
  %898 = load i32, ptr %896, align 4
  %899 = icmp uge i32 %898, %786
  %900 = icmp ne i32 %897, 0
  %901 = and i1 %900, %899
  br i1 %901, label %822, label %1036

902:                                              ; preds = %633, %633
  %903 = load ptr, ptr %49, align 4
  %904 = load i32, ptr %50, align 4
  %905 = shl nuw i32 1, %904
  %906 = add i32 %905, -1
  %907 = load ptr, ptr %8, align 4
  %908 = ptrtoint ptr %556 to i32
  %909 = ptrtoint ptr %907 to i32
  %910 = sub i32 %908, %909
  %911 = load i32, ptr %22, align 4
  %912 = shl nuw i32 1, %911
  %913 = load i32, ptr %51, align 4
  %914 = sub i32 %910, %913
  %915 = icmp ugt i32 %914, %912
  %916 = sub i32 %910, %912
  %917 = load i32, ptr %28, align 4
  %918 = icmp eq i32 %917, 0
  %919 = select i1 %918, i1 %915, i1 false
  %920 = select i1 %919, i32 %916, i32 %913
  %921 = tail call i32 @llvm.usub.sat.i32(i32 %910, i32 %905) #7
  %922 = load i32, ptr %52, align 4
  %923 = shl nuw i32 1, %922
  %924 = load ptr, ptr %53, align 4
  %925 = load i32, ptr %54, align 4
  %926 = shl nsw i32 -1, %904
  %927 = xor i32 %926, -1
  %928 = icmp ult i32 %551, %910
  %929 = sub i32 64, %925
  %930 = zext i32 %929 to i64
  br i1 %928, label %931, label %944

931:                                              ; preds = %931, %902
  %932 = phi i32 [ %942, %931 ], [ %551, %902 ]
  %933 = getelementptr i8, ptr %907, i32 %932
  %934 = load i64, ptr %933, align 1
  %935 = mul i64 %934, -3523014627193847808
  %936 = lshr i64 %935, %930
  %937 = trunc i64 %936 to i32
  %938 = getelementptr i32, ptr %924, i32 %937
  %939 = load i32, ptr %938, align 4
  %940 = and i32 %932, %927
  %941 = getelementptr i32, ptr %903, i32 %940
  store i32 %939, ptr %941, align 4
  store i32 %932, ptr %938, align 4
  %942 = add nuw i32 %932, 1
  %943 = icmp eq i32 %942, %910
  br i1 %943, label %944, label %931

944:                                              ; preds = %931, %902
  store i32 %910, ptr %55, align 4
  %945 = load i64, ptr %556, align 1
  %946 = mul i64 %945, -3523014627193847808
  %947 = lshr i64 %946, %930
  %948 = trunc i64 %947 to i32
  %949 = getelementptr i32, ptr %924, i32 %948
  %950 = load i32, ptr %949, align 4
  %951 = icmp ult i32 %950, %920
  %952 = trunc i64 %945 to i32
  br i1 %951, label %1061, label %953

953:                                              ; preds = %944
  %954 = icmp ugt ptr %40, %556
  %955 = add i32 %910, 2
  br label %956

956:                                              ; preds = %1028, %953
  %957 = phi i32 [ 999999999, %953 ], [ %1025, %1028 ]
  %958 = phi i32 [ %950, %953 ], [ %1032, %1028 ]
  %959 = phi i32 [ 3, %953 ], [ %1026, %1028 ]
  %960 = phi i32 [ %923, %953 ], [ %1031, %1028 ]
  %961 = getelementptr i8, ptr %907, i32 %958
  %962 = getelementptr i8, ptr %961, i32 %959
  %963 = load i8, ptr %962, align 1
  %964 = getelementptr i8, ptr %556, i32 %959
  %965 = load i8, ptr %964, align 1
  %966 = icmp eq i8 %963, %965
  br i1 %966, label %967, label %1024

967:                                              ; preds = %956
  br i1 %954, label %968, label %992

968:                                              ; preds = %967
  %969 = load i32, ptr %961, align 1
  %970 = xor i32 %969, %952
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %975, label %972

972:                                              ; preds = %968
  %973 = tail call i32 @llvm.cttz.i32(i32 %970, i1 true) #7, !range !8
  %974 = lshr i32 %973, 3
  br label %1017

975:                                              ; preds = %981, %968
  %976 = phi ptr [ %979, %981 ], [ %556, %968 ]
  %977 = phi ptr [ %978, %981 ], [ %961, %968 ]
  %978 = getelementptr i8, ptr %977, i32 4
  %979 = getelementptr i8, ptr %976, i32 4
  %980 = icmp ult ptr %979, %40
  br i1 %980, label %981, label %992

981:                                              ; preds = %975
  %982 = load i32, ptr %978, align 1
  %983 = load i32, ptr %979, align 1
  %984 = xor i32 %983, %982
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %975, label %986

986:                                              ; preds = %981
  %987 = tail call i32 @llvm.cttz.i32(i32 %984, i1 true) #7, !range !8
  %988 = lshr i32 %987, 3
  %989 = getelementptr i8, ptr %979, i32 %988
  %990 = ptrtoint ptr %989 to i32
  %991 = sub i32 %990, %908
  br label %1017

992:                                              ; preds = %975, %967
  %993 = phi ptr [ %556, %967 ], [ %979, %975 ]
  %994 = phi ptr [ %961, %967 ], [ %978, %975 ]
  %995 = icmp ult ptr %993, %41
  br i1 %995, label %996, label %1003

996:                                              ; preds = %992
  %997 = load i16, ptr %994, align 1
  %998 = load i16, ptr %993, align 1
  %999 = icmp eq i16 %997, %998
  br i1 %999, label %1000, label %1003

1000:                                             ; preds = %996
  %1001 = getelementptr i8, ptr %993, i32 2
  %1002 = getelementptr i8, ptr %994, i32 2
  br label %1003

1003:                                             ; preds = %1000, %996, %992
  %1004 = phi ptr [ %1001, %1000 ], [ %993, %996 ], [ %993, %992 ]
  %1005 = phi ptr [ %1002, %1000 ], [ %994, %996 ], [ %994, %992 ]
  %1006 = icmp ult ptr %1004, %6
  br i1 %1006, label %1007, label %1013

1007:                                             ; preds = %1003
  %1008 = load i8, ptr %1005, align 1
  %1009 = load i8, ptr %1004, align 1
  %1010 = icmp eq i8 %1008, %1009
  %1011 = zext i1 %1010 to i32
  %1012 = getelementptr i8, ptr %1004, i32 %1011
  br label %1013

1013:                                             ; preds = %1007, %1003
  %1014 = phi ptr [ %1004, %1003 ], [ %1012, %1007 ]
  %1015 = ptrtoint ptr %1014 to i32
  %1016 = sub i32 %1015, %908
  br label %1017

1017:                                             ; preds = %1013, %986, %972
  %1018 = phi i32 [ %1016, %1013 ], [ %974, %972 ], [ %991, %986 ]
  %1019 = icmp ugt i32 %1018, %959
  br i1 %1019, label %1020, label %1024

1020:                                             ; preds = %1017
  %1021 = sub i32 %955, %958
  %1022 = getelementptr i8, ptr %556, i32 %1018
  %1023 = icmp eq ptr %1022, %6
  br i1 %1023, label %1036, label %1024

1024:                                             ; preds = %1020, %1017, %956
  %1025 = phi i32 [ %1021, %1020 ], [ %957, %1017 ], [ %957, %956 ]
  %1026 = phi i32 [ %1018, %1020 ], [ %959, %1017 ], [ %959, %956 ]
  %1027 = icmp ugt i32 %958, %921
  br i1 %1027, label %1028, label %1036

1028:                                             ; preds = %1024
  %1029 = and i32 %958, %906
  %1030 = getelementptr i32, ptr %903, i32 %1029
  %1031 = add i32 %960, -1
  %1032 = load i32, ptr %1030, align 4
  %1033 = icmp uge i32 %1032, %920
  %1034 = icmp ne i32 %1031, 0
  %1035 = and i1 %1034, %1033
  br i1 %1035, label %956, label %1036

1036:                                             ; preds = %1028, %1024, %1020, %894, %890, %886, %760, %756, %752
  %1037 = phi i32 [ %646, %760 ], [ %646, %756 ], [ %646, %752 ], [ %910, %1028 ], [ %910, %1024 ], [ %910, %1020 ], [ %776, %894 ], [ %776, %890 ], [ %776, %886 ]
  %1038 = phi i32 [ %753, %752 ], [ %757, %756 ], [ %757, %760 ], [ %1021, %1020 ], [ %1025, %1024 ], [ %1025, %1028 ], [ %887, %886 ], [ %891, %890 ], [ %891, %894 ]
  %1039 = phi i32 [ %750, %752 ], [ %758, %756 ], [ %758, %760 ], [ %1018, %1020 ], [ %1026, %1024 ], [ %1026, %1028 ], [ %884, %886 ], [ %892, %890 ], [ %892, %894 ]
  %1040 = icmp ugt i32 %1039, 3
  br i1 %1040, label %1041, label %1061

1041:                                             ; preds = %1036
  %1042 = add i32 %635, 1
  %1043 = tail call i32 @llvm.ctlz.i32(i32 %1042, i1 false) #7, !range !8
  %1044 = xor i32 %1043, -32
  %1045 = add i32 %1038, 1
  %1046 = tail call i32 @llvm.ctlz.i32(i32 %1045, i1 false) #7, !range !8
  %1047 = xor i32 %1046, -32
  %1048 = shl i32 %634, 2
  %1049 = add i32 %1048, 5
  %1050 = add i32 %1049, %1044
  %1051 = shl i32 %1039, 2
  %1052 = or i32 %1051, 1
  %1053 = add i32 %1052, %1047
  %1054 = icmp sgt i32 %1053, %1050
  br i1 %1054, label %1055, label %1061

1055:                                             ; preds = %1550, %1041
  %1056 = phi i32 [ %1037, %1041 ], [ %1546, %1550 ]
  %1057 = phi i32 [ %1039, %1041 ], [ %1548, %1550 ]
  %1058 = phi i32 [ %1038, %1041 ], [ %1547, %1550 ]
  %1059 = phi ptr [ %556, %1041 ], [ %1065, %1550 ]
  %1060 = icmp ult ptr %1059, %7
  br i1 %1060, label %550, label %1564

1061:                                             ; preds = %1041, %1036, %944, %810, %678
  %1062 = phi i32 [ %910, %944 ], [ %776, %810 ], [ %646, %678 ], [ %1037, %1041 ], [ %1037, %1036 ]
  %1063 = icmp ult ptr %556, %7
  br i1 %1063, label %1064, label %1564

1064:                                             ; preds = %1061
  %1065 = getelementptr i8, ptr %552, i32 2
  %1066 = icmp eq i32 %635, 0
  br i1 %1066, label %1142, label %1067

1067:                                             ; preds = %1064
  %1068 = load i32, ptr %1065, align 1
  %1069 = getelementptr i8, ptr %1065, i32 %61
  %1070 = load i32, ptr %1069, align 1
  %1071 = icmp eq i32 %1068, %1070
  %1072 = and i1 %63, %1071
  br i1 %1072, label %1073, label %1142

1073:                                             ; preds = %1067
  %1074 = getelementptr i8, ptr %552, i32 6
  %1075 = getelementptr i8, ptr %1074, i32 %61
  %1076 = icmp ugt ptr %40, %1074
  br i1 %1076, label %1077, label %1102

1077:                                             ; preds = %1073
  %1078 = load i32, ptr %1075, align 1
  %1079 = load i32, ptr %1074, align 1
  %1080 = xor i32 %1079, %1078
  %1081 = icmp eq i32 %1080, 0
  br i1 %1081, label %1087, label %1082

1082:                                             ; preds = %1077
  %1083 = tail call i32 @llvm.cttz.i32(i32 %1080, i1 true) #7, !range !8
  %1084 = lshr i32 %1083, 3
  %1085 = add i32 %635, 1
  %1086 = tail call i32 @llvm.ctlz.i32(i32 %1085, i1 false) #7, !range !8
  br label %1131

1087:                                             ; preds = %1093, %1077
  %1088 = phi ptr [ %1091, %1093 ], [ %1074, %1077 ]
  %1089 = phi ptr [ %1090, %1093 ], [ %1075, %1077 ]
  %1090 = getelementptr i8, ptr %1089, i32 4
  %1091 = getelementptr i8, ptr %1088, i32 4
  %1092 = icmp ult ptr %1091, %40
  br i1 %1092, label %1093, label %1102

1093:                                             ; preds = %1087
  %1094 = load i32, ptr %1090, align 1
  %1095 = load i32, ptr %1091, align 1
  %1096 = xor i32 %1095, %1094
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1087, label %1098

1098:                                             ; preds = %1093
  %1099 = tail call i32 @llvm.cttz.i32(i32 %1096, i1 true) #7, !range !8
  %1100 = lshr i32 %1099, 3
  %1101 = getelementptr i8, ptr %1091, i32 %1100
  br label %1123

1102:                                             ; preds = %1087, %1073
  %1103 = phi ptr [ %1074, %1073 ], [ %1091, %1087 ]
  %1104 = phi ptr [ %1075, %1073 ], [ %1090, %1087 ]
  %1105 = icmp ult ptr %1103, %41
  br i1 %1105, label %1106, label %1113

1106:                                             ; preds = %1102
  %1107 = load i16, ptr %1104, align 1
  %1108 = load i16, ptr %1103, align 1
  %1109 = icmp eq i16 %1107, %1108
  br i1 %1109, label %1110, label %1113

1110:                                             ; preds = %1106
  %1111 = getelementptr i8, ptr %1103, i32 2
  %1112 = getelementptr i8, ptr %1104, i32 2
  br label %1113

1113:                                             ; preds = %1110, %1106, %1102
  %1114 = phi ptr [ %1111, %1110 ], [ %1103, %1106 ], [ %1103, %1102 ]
  %1115 = phi ptr [ %1112, %1110 ], [ %1104, %1106 ], [ %1104, %1102 ]
  %1116 = icmp ult ptr %1114, %6
  br i1 %1116, label %1117, label %1123

1117:                                             ; preds = %1113
  %1118 = load i8, ptr %1115, align 1
  %1119 = load i8, ptr %1114, align 1
  %1120 = icmp eq i8 %1118, %1119
  %1121 = zext i1 %1120 to i32
  %1122 = getelementptr i8, ptr %1114, i32 %1121
  br label %1123

1123:                                             ; preds = %1117, %1113, %1098
  %1124 = phi ptr [ %1101, %1098 ], [ %1114, %1113 ], [ %1122, %1117 ]
  %1125 = ptrtoint ptr %1124 to i32
  %1126 = ptrtoint ptr %1074 to i32
  %1127 = sub i32 %1125, %1126
  %1128 = add i32 %635, 1
  %1129 = tail call i32 @llvm.ctlz.i32(i32 %1128, i1 false) #7, !range !8
  %1130 = icmp ult i32 %1127, -4
  br i1 %1130, label %1131, label %1142

1131:                                             ; preds = %1123, %1082
  %1132 = phi i32 [ %1086, %1082 ], [ %1129, %1123 ]
  %1133 = phi i32 [ %1084, %1082 ], [ %1127, %1123 ]
  %1134 = add nuw i32 %1133, 4
  %1135 = xor i32 %1132, -32
  %1136 = shl i32 %634, 2
  %1137 = or i32 %1136, 2
  %1138 = add i32 %1137, %1135
  %1139 = shl i32 %1134, 2
  %1140 = icmp sgt i32 %1139, %1138
  br i1 %1140, label %1141, label %1142

1141:                                             ; preds = %1131
  br label %1142

1142:                                             ; preds = %1141, %1131, %1123, %1067, %1064
  %1143 = phi i32 [ %634, %1067 ], [ %634, %1064 ], [ %1134, %1141 ], [ %634, %1131 ], [ %634, %1123 ]
  %1144 = phi i32 [ %635, %1067 ], [ 0, %1064 ], [ 0, %1141 ], [ %635, %1131 ], [ %635, %1123 ]
  %1145 = phi ptr [ %636, %1067 ], [ %636, %1064 ], [ %1065, %1141 ], [ %636, %1131 ], [ %636, %1123 ]
  %1146 = load i32, ptr %48, align 4
  switch i32 %1146, label %1147 [
    i32 6, label %1411
    i32 5, label %1277
    i32 7, label %1411
  ]

1147:                                             ; preds = %1142
  %1148 = load ptr, ptr %49, align 4
  %1149 = load i32, ptr %50, align 4
  %1150 = shl nuw i32 1, %1149
  %1151 = add i32 %1150, -1
  %1152 = load ptr, ptr %8, align 4
  %1153 = ptrtoint ptr %1065 to i32
  %1154 = ptrtoint ptr %1152 to i32
  %1155 = sub i32 %1153, %1154
  %1156 = load i32, ptr %22, align 4
  %1157 = shl nuw i32 1, %1156
  %1158 = load i32, ptr %51, align 4
  %1159 = sub i32 %1155, %1158
  %1160 = icmp ugt i32 %1159, %1157
  %1161 = sub i32 %1155, %1157
  %1162 = load i32, ptr %28, align 4
  %1163 = icmp eq i32 %1162, 0
  %1164 = select i1 %1163, i1 %1160, i1 false
  %1165 = select i1 %1164, i32 %1161, i32 %1158
  %1166 = tail call i32 @llvm.usub.sat.i32(i32 %1155, i32 %1150) #7
  %1167 = load i32, ptr %52, align 4
  %1168 = shl nuw i32 1, %1167
  %1169 = load ptr, ptr %53, align 4
  %1170 = load i32, ptr %54, align 4
  %1171 = shl nsw i32 -1, %1149
  %1172 = xor i32 %1171, -1
  %1173 = icmp ult i32 %1062, %1155
  %1174 = sub i32 32, %1170
  br i1 %1173, label %1175, label %1187

1175:                                             ; preds = %1175, %1147
  %1176 = phi i32 [ %1185, %1175 ], [ %1062, %1147 ]
  %1177 = getelementptr i8, ptr %1152, i32 %1176
  %1178 = load i32, ptr %1177, align 1
  %1179 = mul i32 %1178, -1640531535
  %1180 = lshr i32 %1179, %1174
  %1181 = getelementptr i32, ptr %1169, i32 %1180
  %1182 = load i32, ptr %1181, align 4
  %1183 = and i32 %1176, %1172
  %1184 = getelementptr i32, ptr %1148, i32 %1183
  store i32 %1182, ptr %1184, align 4
  store i32 %1176, ptr %1181, align 4
  %1185 = add nuw i32 %1176, 1
  %1186 = icmp ult i32 %1185, %1155
  br i1 %1186, label %1175, label %1187

1187:                                             ; preds = %1175, %1147
  store i32 %1155, ptr %55, align 4
  %1188 = load i32, ptr %1065, align 1
  %1189 = mul i32 %1188, -1640531535
  %1190 = lshr i32 %1189, %1174
  %1191 = getelementptr i32, ptr %1169, i32 %1190
  %1192 = load i32, ptr %1191, align 4
  %1193 = icmp ult i32 %1192, %1165
  br i1 %1193, label %1564, label %1194

1194:                                             ; preds = %1187
  %1195 = icmp ugt ptr %40, %1065
  %1196 = add i32 %1155, 2
  br label %1197

1197:                                             ; preds = %1269, %1194
  %1198 = phi i32 [ 999999999, %1194 ], [ %1266, %1269 ]
  %1199 = phi i32 [ %1192, %1194 ], [ %1273, %1269 ]
  %1200 = phi i32 [ 3, %1194 ], [ %1267, %1269 ]
  %1201 = phi i32 [ %1168, %1194 ], [ %1272, %1269 ]
  %1202 = getelementptr i8, ptr %1152, i32 %1199
  %1203 = getelementptr i8, ptr %1202, i32 %1200
  %1204 = load i8, ptr %1203, align 1
  %1205 = getelementptr i8, ptr %1065, i32 %1200
  %1206 = load i8, ptr %1205, align 1
  %1207 = icmp eq i8 %1204, %1206
  br i1 %1207, label %1208, label %1265

1208:                                             ; preds = %1197
  br i1 %1195, label %1209, label %1233

1209:                                             ; preds = %1208
  %1210 = load i32, ptr %1202, align 1
  %1211 = xor i32 %1210, %1188
  %1212 = icmp eq i32 %1211, 0
  br i1 %1212, label %1216, label %1213

1213:                                             ; preds = %1209
  %1214 = tail call i32 @llvm.cttz.i32(i32 %1211, i1 true) #7, !range !8
  %1215 = lshr i32 %1214, 3
  br label %1258

1216:                                             ; preds = %1222, %1209
  %1217 = phi ptr [ %1220, %1222 ], [ %1065, %1209 ]
  %1218 = phi ptr [ %1219, %1222 ], [ %1202, %1209 ]
  %1219 = getelementptr i8, ptr %1218, i32 4
  %1220 = getelementptr i8, ptr %1217, i32 4
  %1221 = icmp ult ptr %1220, %40
  br i1 %1221, label %1222, label %1233

1222:                                             ; preds = %1216
  %1223 = load i32, ptr %1219, align 1
  %1224 = load i32, ptr %1220, align 1
  %1225 = xor i32 %1224, %1223
  %1226 = icmp eq i32 %1225, 0
  br i1 %1226, label %1216, label %1227

1227:                                             ; preds = %1222
  %1228 = tail call i32 @llvm.cttz.i32(i32 %1225, i1 true) #7, !range !8
  %1229 = lshr i32 %1228, 3
  %1230 = getelementptr i8, ptr %1220, i32 %1229
  %1231 = ptrtoint ptr %1230 to i32
  %1232 = sub i32 %1231, %1153
  br label %1258

1233:                                             ; preds = %1216, %1208
  %1234 = phi ptr [ %1065, %1208 ], [ %1220, %1216 ]
  %1235 = phi ptr [ %1202, %1208 ], [ %1219, %1216 ]
  %1236 = icmp ult ptr %1234, %41
  br i1 %1236, label %1237, label %1244

1237:                                             ; preds = %1233
  %1238 = load i16, ptr %1235, align 1
  %1239 = load i16, ptr %1234, align 1
  %1240 = icmp eq i16 %1238, %1239
  br i1 %1240, label %1241, label %1244

1241:                                             ; preds = %1237
  %1242 = getelementptr i8, ptr %1234, i32 2
  %1243 = getelementptr i8, ptr %1235, i32 2
  br label %1244

1244:                                             ; preds = %1241, %1237, %1233
  %1245 = phi ptr [ %1242, %1241 ], [ %1234, %1237 ], [ %1234, %1233 ]
  %1246 = phi ptr [ %1243, %1241 ], [ %1235, %1237 ], [ %1235, %1233 ]
  %1247 = icmp ult ptr %1245, %6
  br i1 %1247, label %1248, label %1254

1248:                                             ; preds = %1244
  %1249 = load i8, ptr %1246, align 1
  %1250 = load i8, ptr %1245, align 1
  %1251 = icmp eq i8 %1249, %1250
  %1252 = zext i1 %1251 to i32
  %1253 = getelementptr i8, ptr %1245, i32 %1252
  br label %1254

1254:                                             ; preds = %1248, %1244
  %1255 = phi ptr [ %1245, %1244 ], [ %1253, %1248 ]
  %1256 = ptrtoint ptr %1255 to i32
  %1257 = sub i32 %1256, %1153
  br label %1258

1258:                                             ; preds = %1254, %1227, %1213
  %1259 = phi i32 [ %1257, %1254 ], [ %1215, %1213 ], [ %1232, %1227 ]
  %1260 = icmp ugt i32 %1259, %1200
  br i1 %1260, label %1261, label %1265

1261:                                             ; preds = %1258
  %1262 = sub i32 %1196, %1199
  %1263 = getelementptr i8, ptr %1065, i32 %1259
  %1264 = icmp eq ptr %1263, %6
  br i1 %1264, label %1545, label %1265

1265:                                             ; preds = %1261, %1258, %1197
  %1266 = phi i32 [ %1262, %1261 ], [ %1198, %1258 ], [ %1198, %1197 ]
  %1267 = phi i32 [ %1259, %1261 ], [ %1200, %1258 ], [ %1200, %1197 ]
  %1268 = icmp ugt i32 %1199, %1166
  br i1 %1268, label %1269, label %1545

1269:                                             ; preds = %1265
  %1270 = and i32 %1199, %1151
  %1271 = getelementptr i32, ptr %1148, i32 %1270
  %1272 = add i32 %1201, -1
  %1273 = load i32, ptr %1271, align 4
  %1274 = icmp uge i32 %1273, %1165
  %1275 = icmp ne i32 %1272, 0
  %1276 = and i1 %1275, %1274
  br i1 %1276, label %1197, label %1545

1277:                                             ; preds = %1142
  %1278 = load ptr, ptr %49, align 4
  %1279 = load i32, ptr %50, align 4
  %1280 = shl nuw i32 1, %1279
  %1281 = add i32 %1280, -1
  %1282 = load ptr, ptr %8, align 4
  %1283 = ptrtoint ptr %1065 to i32
  %1284 = ptrtoint ptr %1282 to i32
  %1285 = sub i32 %1283, %1284
  %1286 = load i32, ptr %22, align 4
  %1287 = shl nuw i32 1, %1286
  %1288 = load i32, ptr %51, align 4
  %1289 = sub i32 %1285, %1288
  %1290 = icmp ugt i32 %1289, %1287
  %1291 = sub i32 %1285, %1287
  %1292 = load i32, ptr %28, align 4
  %1293 = icmp eq i32 %1292, 0
  %1294 = select i1 %1293, i1 %1290, i1 false
  %1295 = select i1 %1294, i32 %1291, i32 %1288
  %1296 = tail call i32 @llvm.usub.sat.i32(i32 %1285, i32 %1280) #7
  %1297 = load i32, ptr %52, align 4
  %1298 = shl nuw i32 1, %1297
  %1299 = load ptr, ptr %53, align 4
  %1300 = load i32, ptr %54, align 4
  %1301 = shl nsw i32 -1, %1279
  %1302 = xor i32 %1301, -1
  %1303 = icmp ult i32 %1062, %1285
  %1304 = sub i32 64, %1300
  %1305 = zext i32 %1304 to i64
  br i1 %1303, label %1306, label %1319

1306:                                             ; preds = %1306, %1277
  %1307 = phi i32 [ %1317, %1306 ], [ %1062, %1277 ]
  %1308 = getelementptr i8, ptr %1282, i32 %1307
  %1309 = load i64, ptr %1308, align 1
  %1310 = mul i64 %1309, -3523014627271114752
  %1311 = lshr i64 %1310, %1305
  %1312 = trunc i64 %1311 to i32
  %1313 = getelementptr i32, ptr %1299, i32 %1312
  %1314 = load i32, ptr %1313, align 4
  %1315 = and i32 %1307, %1302
  %1316 = getelementptr i32, ptr %1278, i32 %1315
  store i32 %1314, ptr %1316, align 4
  store i32 %1307, ptr %1313, align 4
  %1317 = add nuw i32 %1307, 1
  %1318 = icmp ult i32 %1317, %1285
  br i1 %1318, label %1306, label %1319

1319:                                             ; preds = %1306, %1277
  store i32 %1285, ptr %55, align 4
  %1320 = load i64, ptr %1065, align 1
  %1321 = mul i64 %1320, -3523014627271114752
  %1322 = lshr i64 %1321, %1305
  %1323 = trunc i64 %1322 to i32
  %1324 = getelementptr i32, ptr %1299, i32 %1323
  %1325 = load i32, ptr %1324, align 4
  %1326 = icmp ult i32 %1325, %1295
  %1327 = trunc i64 %1320 to i32
  br i1 %1326, label %1564, label %1328

1328:                                             ; preds = %1319
  %1329 = icmp ugt ptr %40, %1065
  %1330 = add i32 %1285, 2
  br label %1331

1331:                                             ; preds = %1403, %1328
  %1332 = phi i32 [ 999999999, %1328 ], [ %1400, %1403 ]
  %1333 = phi i32 [ %1325, %1328 ], [ %1407, %1403 ]
  %1334 = phi i32 [ 3, %1328 ], [ %1401, %1403 ]
  %1335 = phi i32 [ %1298, %1328 ], [ %1406, %1403 ]
  %1336 = getelementptr i8, ptr %1282, i32 %1333
  %1337 = getelementptr i8, ptr %1336, i32 %1334
  %1338 = load i8, ptr %1337, align 1
  %1339 = getelementptr i8, ptr %1065, i32 %1334
  %1340 = load i8, ptr %1339, align 1
  %1341 = icmp eq i8 %1338, %1340
  br i1 %1341, label %1342, label %1399

1342:                                             ; preds = %1331
  br i1 %1329, label %1343, label %1367

1343:                                             ; preds = %1342
  %1344 = load i32, ptr %1336, align 1
  %1345 = xor i32 %1344, %1327
  %1346 = icmp eq i32 %1345, 0
  br i1 %1346, label %1350, label %1347

1347:                                             ; preds = %1343
  %1348 = tail call i32 @llvm.cttz.i32(i32 %1345, i1 true) #7, !range !8
  %1349 = lshr i32 %1348, 3
  br label %1392

1350:                                             ; preds = %1356, %1343
  %1351 = phi ptr [ %1354, %1356 ], [ %1065, %1343 ]
  %1352 = phi ptr [ %1353, %1356 ], [ %1336, %1343 ]
  %1353 = getelementptr i8, ptr %1352, i32 4
  %1354 = getelementptr i8, ptr %1351, i32 4
  %1355 = icmp ult ptr %1354, %40
  br i1 %1355, label %1356, label %1367

1356:                                             ; preds = %1350
  %1357 = load i32, ptr %1353, align 1
  %1358 = load i32, ptr %1354, align 1
  %1359 = xor i32 %1358, %1357
  %1360 = icmp eq i32 %1359, 0
  br i1 %1360, label %1350, label %1361

1361:                                             ; preds = %1356
  %1362 = tail call i32 @llvm.cttz.i32(i32 %1359, i1 true) #7, !range !8
  %1363 = lshr i32 %1362, 3
  %1364 = getelementptr i8, ptr %1354, i32 %1363
  %1365 = ptrtoint ptr %1364 to i32
  %1366 = sub i32 %1365, %1283
  br label %1392

1367:                                             ; preds = %1350, %1342
  %1368 = phi ptr [ %1065, %1342 ], [ %1354, %1350 ]
  %1369 = phi ptr [ %1336, %1342 ], [ %1353, %1350 ]
  %1370 = icmp ult ptr %1368, %41
  br i1 %1370, label %1371, label %1378

1371:                                             ; preds = %1367
  %1372 = load i16, ptr %1369, align 1
  %1373 = load i16, ptr %1368, align 1
  %1374 = icmp eq i16 %1372, %1373
  br i1 %1374, label %1375, label %1378

1375:                                             ; preds = %1371
  %1376 = getelementptr i8, ptr %1368, i32 2
  %1377 = getelementptr i8, ptr %1369, i32 2
  br label %1378

1378:                                             ; preds = %1375, %1371, %1367
  %1379 = phi ptr [ %1376, %1375 ], [ %1368, %1371 ], [ %1368, %1367 ]
  %1380 = phi ptr [ %1377, %1375 ], [ %1369, %1371 ], [ %1369, %1367 ]
  %1381 = icmp ult ptr %1379, %6
  br i1 %1381, label %1382, label %1388

1382:                                             ; preds = %1378
  %1383 = load i8, ptr %1380, align 1
  %1384 = load i8, ptr %1379, align 1
  %1385 = icmp eq i8 %1383, %1384
  %1386 = zext i1 %1385 to i32
  %1387 = getelementptr i8, ptr %1379, i32 %1386
  br label %1388

1388:                                             ; preds = %1382, %1378
  %1389 = phi ptr [ %1379, %1378 ], [ %1387, %1382 ]
  %1390 = ptrtoint ptr %1389 to i32
  %1391 = sub i32 %1390, %1283
  br label %1392

1392:                                             ; preds = %1388, %1361, %1347
  %1393 = phi i32 [ %1391, %1388 ], [ %1349, %1347 ], [ %1366, %1361 ]
  %1394 = icmp ugt i32 %1393, %1334
  br i1 %1394, label %1395, label %1399

1395:                                             ; preds = %1392
  %1396 = sub i32 %1330, %1333
  %1397 = getelementptr i8, ptr %1065, i32 %1393
  %1398 = icmp eq ptr %1397, %6
  br i1 %1398, label %1545, label %1399

1399:                                             ; preds = %1395, %1392, %1331
  %1400 = phi i32 [ %1396, %1395 ], [ %1332, %1392 ], [ %1332, %1331 ]
  %1401 = phi i32 [ %1393, %1395 ], [ %1334, %1392 ], [ %1334, %1331 ]
  %1402 = icmp ugt i32 %1333, %1296
  br i1 %1402, label %1403, label %1545

1403:                                             ; preds = %1399
  %1404 = and i32 %1333, %1281
  %1405 = getelementptr i32, ptr %1278, i32 %1404
  %1406 = add i32 %1335, -1
  %1407 = load i32, ptr %1405, align 4
  %1408 = icmp uge i32 %1407, %1295
  %1409 = icmp ne i32 %1406, 0
  %1410 = and i1 %1409, %1408
  br i1 %1410, label %1331, label %1545

1411:                                             ; preds = %1142, %1142
  %1412 = load ptr, ptr %49, align 4
  %1413 = load i32, ptr %50, align 4
  %1414 = shl nuw i32 1, %1413
  %1415 = add i32 %1414, -1
  %1416 = load ptr, ptr %8, align 4
  %1417 = ptrtoint ptr %1065 to i32
  %1418 = ptrtoint ptr %1416 to i32
  %1419 = sub i32 %1417, %1418
  %1420 = load i32, ptr %22, align 4
  %1421 = shl nuw i32 1, %1420
  %1422 = load i32, ptr %51, align 4
  %1423 = sub i32 %1419, %1422
  %1424 = icmp ugt i32 %1423, %1421
  %1425 = sub i32 %1419, %1421
  %1426 = load i32, ptr %28, align 4
  %1427 = icmp eq i32 %1426, 0
  %1428 = select i1 %1427, i1 %1424, i1 false
  %1429 = select i1 %1428, i32 %1425, i32 %1422
  %1430 = tail call i32 @llvm.usub.sat.i32(i32 %1419, i32 %1414) #7
  %1431 = load i32, ptr %52, align 4
  %1432 = shl nuw i32 1, %1431
  %1433 = load ptr, ptr %53, align 4
  %1434 = load i32, ptr %54, align 4
  %1435 = shl nsw i32 -1, %1413
  %1436 = xor i32 %1435, -1
  %1437 = icmp ult i32 %1062, %1419
  %1438 = sub i32 64, %1434
  %1439 = zext i32 %1438 to i64
  br i1 %1437, label %1440, label %1453

1440:                                             ; preds = %1440, %1411
  %1441 = phi i32 [ %1451, %1440 ], [ %1062, %1411 ]
  %1442 = getelementptr i8, ptr %1416, i32 %1441
  %1443 = load i64, ptr %1442, align 1
  %1444 = mul i64 %1443, -3523014627193847808
  %1445 = lshr i64 %1444, %1439
  %1446 = trunc i64 %1445 to i32
  %1447 = getelementptr i32, ptr %1433, i32 %1446
  %1448 = load i32, ptr %1447, align 4
  %1449 = and i32 %1441, %1436
  %1450 = getelementptr i32, ptr %1412, i32 %1449
  store i32 %1448, ptr %1450, align 4
  store i32 %1441, ptr %1447, align 4
  %1451 = add nuw i32 %1441, 1
  %1452 = icmp ult i32 %1451, %1419
  br i1 %1452, label %1440, label %1453

1453:                                             ; preds = %1440, %1411
  store i32 %1419, ptr %55, align 4
  %1454 = load i64, ptr %1065, align 1
  %1455 = mul i64 %1454, -3523014627193847808
  %1456 = lshr i64 %1455, %1439
  %1457 = trunc i64 %1456 to i32
  %1458 = getelementptr i32, ptr %1433, i32 %1457
  %1459 = load i32, ptr %1458, align 4
  %1460 = icmp ult i32 %1459, %1429
  %1461 = trunc i64 %1454 to i32
  br i1 %1460, label %1564, label %1462

1462:                                             ; preds = %1453
  %1463 = icmp ugt ptr %40, %1065
  %1464 = add i32 %1419, 2
  br label %1465

1465:                                             ; preds = %1537, %1462
  %1466 = phi i32 [ 999999999, %1462 ], [ %1534, %1537 ]
  %1467 = phi i32 [ %1459, %1462 ], [ %1541, %1537 ]
  %1468 = phi i32 [ 3, %1462 ], [ %1535, %1537 ]
  %1469 = phi i32 [ %1432, %1462 ], [ %1540, %1537 ]
  %1470 = getelementptr i8, ptr %1416, i32 %1467
  %1471 = getelementptr i8, ptr %1470, i32 %1468
  %1472 = load i8, ptr %1471, align 1
  %1473 = getelementptr i8, ptr %1065, i32 %1468
  %1474 = load i8, ptr %1473, align 1
  %1475 = icmp eq i8 %1472, %1474
  br i1 %1475, label %1476, label %1533

1476:                                             ; preds = %1465
  br i1 %1463, label %1477, label %1501

1477:                                             ; preds = %1476
  %1478 = load i32, ptr %1470, align 1
  %1479 = xor i32 %1478, %1461
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1484, label %1481

1481:                                             ; preds = %1477
  %1482 = tail call i32 @llvm.cttz.i32(i32 %1479, i1 true) #7, !range !8
  %1483 = lshr i32 %1482, 3
  br label %1526

1484:                                             ; preds = %1490, %1477
  %1485 = phi ptr [ %1488, %1490 ], [ %1065, %1477 ]
  %1486 = phi ptr [ %1487, %1490 ], [ %1470, %1477 ]
  %1487 = getelementptr i8, ptr %1486, i32 4
  %1488 = getelementptr i8, ptr %1485, i32 4
  %1489 = icmp ult ptr %1488, %40
  br i1 %1489, label %1490, label %1501

1490:                                             ; preds = %1484
  %1491 = load i32, ptr %1487, align 1
  %1492 = load i32, ptr %1488, align 1
  %1493 = xor i32 %1492, %1491
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1484, label %1495

1495:                                             ; preds = %1490
  %1496 = tail call i32 @llvm.cttz.i32(i32 %1493, i1 true) #7, !range !8
  %1497 = lshr i32 %1496, 3
  %1498 = getelementptr i8, ptr %1488, i32 %1497
  %1499 = ptrtoint ptr %1498 to i32
  %1500 = sub i32 %1499, %1417
  br label %1526

1501:                                             ; preds = %1484, %1476
  %1502 = phi ptr [ %1065, %1476 ], [ %1488, %1484 ]
  %1503 = phi ptr [ %1470, %1476 ], [ %1487, %1484 ]
  %1504 = icmp ult ptr %1502, %41
  br i1 %1504, label %1505, label %1512

1505:                                             ; preds = %1501
  %1506 = load i16, ptr %1503, align 1
  %1507 = load i16, ptr %1502, align 1
  %1508 = icmp eq i16 %1506, %1507
  br i1 %1508, label %1509, label %1512

1509:                                             ; preds = %1505
  %1510 = getelementptr i8, ptr %1502, i32 2
  %1511 = getelementptr i8, ptr %1503, i32 2
  br label %1512

1512:                                             ; preds = %1509, %1505, %1501
  %1513 = phi ptr [ %1510, %1509 ], [ %1502, %1505 ], [ %1502, %1501 ]
  %1514 = phi ptr [ %1511, %1509 ], [ %1503, %1505 ], [ %1503, %1501 ]
  %1515 = icmp ult ptr %1513, %6
  br i1 %1515, label %1516, label %1522

1516:                                             ; preds = %1512
  %1517 = load i8, ptr %1514, align 1
  %1518 = load i8, ptr %1513, align 1
  %1519 = icmp eq i8 %1517, %1518
  %1520 = zext i1 %1519 to i32
  %1521 = getelementptr i8, ptr %1513, i32 %1520
  br label %1522

1522:                                             ; preds = %1516, %1512
  %1523 = phi ptr [ %1513, %1512 ], [ %1521, %1516 ]
  %1524 = ptrtoint ptr %1523 to i32
  %1525 = sub i32 %1524, %1417
  br label %1526

1526:                                             ; preds = %1522, %1495, %1481
  %1527 = phi i32 [ %1525, %1522 ], [ %1483, %1481 ], [ %1500, %1495 ]
  %1528 = icmp ugt i32 %1527, %1468
  br i1 %1528, label %1529, label %1533

1529:                                             ; preds = %1526
  %1530 = sub i32 %1464, %1467
  %1531 = getelementptr i8, ptr %1065, i32 %1527
  %1532 = icmp eq ptr %1531, %6
  br i1 %1532, label %1545, label %1533

1533:                                             ; preds = %1529, %1526, %1465
  %1534 = phi i32 [ %1530, %1529 ], [ %1466, %1526 ], [ %1466, %1465 ]
  %1535 = phi i32 [ %1527, %1529 ], [ %1468, %1526 ], [ %1468, %1465 ]
  %1536 = icmp ugt i32 %1467, %1430
  br i1 %1536, label %1537, label %1545

1537:                                             ; preds = %1533
  %1538 = and i32 %1467, %1415
  %1539 = getelementptr i32, ptr %1412, i32 %1538
  %1540 = add i32 %1469, -1
  %1541 = load i32, ptr %1539, align 4
  %1542 = icmp uge i32 %1541, %1429
  %1543 = icmp ne i32 %1540, 0
  %1544 = and i1 %1543, %1542
  br i1 %1544, label %1465, label %1545

1545:                                             ; preds = %1537, %1533, %1529, %1403, %1399, %1395, %1269, %1265, %1261
  %1546 = phi i32 [ %1155, %1269 ], [ %1155, %1265 ], [ %1155, %1261 ], [ %1419, %1537 ], [ %1419, %1533 ], [ %1419, %1529 ], [ %1285, %1403 ], [ %1285, %1399 ], [ %1285, %1395 ]
  %1547 = phi i32 [ %1262, %1261 ], [ %1266, %1265 ], [ %1266, %1269 ], [ %1530, %1529 ], [ %1534, %1533 ], [ %1534, %1537 ], [ %1396, %1395 ], [ %1400, %1399 ], [ %1400, %1403 ]
  %1548 = phi i32 [ %1259, %1261 ], [ %1267, %1265 ], [ %1267, %1269 ], [ %1527, %1529 ], [ %1535, %1533 ], [ %1535, %1537 ], [ %1393, %1395 ], [ %1401, %1399 ], [ %1401, %1403 ]
  %1549 = icmp ugt i32 %1548, 3
  br i1 %1549, label %1550, label %1564

1550:                                             ; preds = %1545
  %1551 = add i32 %1144, 1
  %1552 = tail call i32 @llvm.ctlz.i32(i32 %1551, i1 false) #7, !range !8
  %1553 = xor i32 %1552, -32
  %1554 = add i32 %1547, 1
  %1555 = tail call i32 @llvm.ctlz.i32(i32 %1554, i1 false) #7, !range !8
  %1556 = xor i32 %1555, -32
  %1557 = shl i32 %1143, 2
  %1558 = add i32 %1557, 8
  %1559 = add i32 %1558, %1553
  %1560 = shl i32 %1548, 2
  %1561 = or i32 %1560, 1
  %1562 = add i32 %1561, %1556
  %1563 = icmp sgt i32 %1562, %1559
  br i1 %1563, label %1055, label %1564

1564:                                             ; preds = %1550, %1545, %1453, %1319, %1187, %1061, %1055, %545
  %1565 = phi i32 [ %536, %545 ], [ %1143, %1453 ], [ %1143, %1319 ], [ %1143, %1187 ], [ %1143, %1545 ], [ %1143, %1550 ], [ %1057, %1055 ], [ %634, %1061 ]
  %1566 = phi i32 [ %548, %545 ], [ %1144, %1453 ], [ %1144, %1319 ], [ %1144, %1187 ], [ %1144, %1545 ], [ %1144, %1550 ], [ %1058, %1055 ], [ %635, %1061 ]
  %1567 = phi ptr [ %547, %545 ], [ %1145, %1453 ], [ %1145, %1319 ], [ %1145, %1187 ], [ %1145, %1545 ], [ %1145, %1550 ], [ %1059, %1055 ], [ %636, %1061 ]
  %1568 = icmp eq i32 %1566, 0
  br i1 %1568, label %1594, label %1569

1569:                                             ; preds = %1564
  %1570 = sub i32 2, %1566
  %1571 = icmp ugt ptr %1567, %58
  %1572 = getelementptr i8, ptr %1567, i32 %1570
  %1573 = icmp ugt ptr %1572, %12
  %1574 = and i1 %1571, %1573
  br i1 %1574, label %1575, label %1590

1575:                                             ; preds = %1584, %1569
  %1576 = phi ptr [ %1579, %1584 ], [ %1567, %1569 ]
  %1577 = phi i32 [ %1585, %1584 ], [ %1565, %1569 ]
  %1578 = getelementptr i8, ptr %1576, i32 %1570
  %1579 = getelementptr i8, ptr %1576, i32 -1
  %1580 = load i8, ptr %1579, align 1
  %1581 = getelementptr i8, ptr %1578, i32 -1
  %1582 = load i8, ptr %1581, align 1
  %1583 = icmp eq i8 %1580, %1582
  br i1 %1583, label %1584, label %1590

1584:                                             ; preds = %1575
  %1585 = add i32 %1577, 1
  %1586 = icmp ugt ptr %1579, %58
  %1587 = getelementptr i8, ptr %1579, i32 %1570
  %1588 = icmp ugt ptr %1587, %12
  %1589 = and i1 %1586, %1588
  br i1 %1589, label %1575, label %1590

1590:                                             ; preds = %1584, %1575, %1569
  %1591 = phi i32 [ %1565, %1569 ], [ %1577, %1575 ], [ %1585, %1584 ]
  %1592 = phi ptr [ %1567, %1569 ], [ %1576, %1575 ], [ %1579, %1584 ]
  %1593 = add i32 %1566, -2
  br label %1594

1594:                                             ; preds = %1590, %1564
  %1595 = phi i32 [ %59, %1590 ], [ %60, %1564 ]
  %1596 = phi i32 [ %1593, %1590 ], [ %59, %1564 ]
  %1597 = phi i32 [ %1591, %1590 ], [ %1565, %1564 ]
  %1598 = phi ptr [ %1592, %1590 ], [ %1567, %1564 ]
  %1599 = ptrtoint ptr %1598 to i32
  %1600 = ptrtoint ptr %58 to i32
  %1601 = sub i32 %1599, %1600
  %1602 = add i32 %1597, -3
  %1603 = getelementptr i8, ptr %58, i32 %1601
  %1604 = icmp ugt ptr %1603, %42
  %1605 = load ptr, ptr %43, align 4
  br i1 %1604, label %1627, label %1606

1606:                                             ; preds = %1594
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1605, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %1607 = icmp ugt i32 %1601, 16
  %1608 = load ptr, ptr %43, align 4
  br i1 %1607, label %1611, label %1609

1609:                                             ; preds = %1606
  %1610 = getelementptr i8, ptr %1608, i32 %1601
  store ptr %1610, ptr %43, align 4
  br label %1670

1611:                                             ; preds = %1606
  %1612 = getelementptr i8, ptr %1608, i32 16
  %1613 = getelementptr i8, ptr %58, i32 16
  %1614 = add i32 %1601, -16
  %1615 = getelementptr i8, ptr %1608, i32 %1601
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1612, ptr noundef align 1 dereferenceable(16) %1613, i32 16, i1 false) #7
  %1616 = icmp slt i32 %1614, 17
  br i1 %1616, label %1659, label %1617

1617:                                             ; preds = %1611
  %1618 = getelementptr i8, ptr %1608, i32 32
  br label %1619

1619:                                             ; preds = %1619, %1617
  %1620 = phi ptr [ %1613, %1617 ], [ %1624, %1619 ]
  %1621 = phi ptr [ %1618, %1617 ], [ %1625, %1619 ]
  %1622 = getelementptr i8, ptr %1620, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1621, ptr noundef align 1 dereferenceable(16) %1622, i32 16, i1 false) #7
  %1623 = getelementptr i8, ptr %1621, i32 16
  %1624 = getelementptr i8, ptr %1620, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1623, ptr noundef align 1 dereferenceable(16) %1624, i32 16, i1 false) #7
  %1625 = getelementptr i8, ptr %1621, i32 32
  %1626 = icmp ult ptr %1625, %1615
  br i1 %1626, label %1619, label %1659

1627:                                             ; preds = %1594
  %1628 = ptrtoint ptr %1603 to i32
  %1629 = icmp ult ptr %42, %58
  br i1 %1629, label %1644, label %1630

1630:                                             ; preds = %1627
  %1631 = sub i32 %44, %1600
  %1632 = getelementptr i8, ptr %1605, i32 %1631
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1605, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %1633 = icmp slt i32 %1631, 17
  br i1 %1633, label %1644, label %1634

1634:                                             ; preds = %1630
  %1635 = getelementptr i8, ptr %1605, i32 16
  br label %1636

1636:                                             ; preds = %1636, %1634
  %1637 = phi ptr [ %58, %1634 ], [ %1641, %1636 ]
  %1638 = phi ptr [ %1635, %1634 ], [ %1642, %1636 ]
  %1639 = getelementptr i8, ptr %1637, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1638, ptr noundef align 1 dereferenceable(16) %1639, i32 16, i1 false) #7
  %1640 = getelementptr i8, ptr %1638, i32 16
  %1641 = getelementptr i8, ptr %1637, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1640, ptr noundef align 1 dereferenceable(16) %1641, i32 16, i1 false) #7
  %1642 = getelementptr i8, ptr %1638, i32 32
  %1643 = icmp ult ptr %1642, %1632
  br i1 %1643, label %1636, label %1644

1644:                                             ; preds = %1636, %1630, %1627
  %1645 = phi ptr [ %42, %1630 ], [ %58, %1627 ], [ %42, %1636 ]
  %1646 = phi ptr [ %1632, %1630 ], [ %1605, %1627 ], [ %1632, %1636 ]
  %1647 = icmp ult ptr %1645, %1603
  br i1 %1647, label %1648, label %1659

1648:                                             ; preds = %1644
  %1649 = ptrtoint ptr %1645 to i32
  %1650 = sub i32 %1628, %1649
  %1651 = getelementptr i8, ptr %1645, i32 %1650
  br label %1652

1652:                                             ; preds = %1652, %1648
  %1653 = phi ptr [ %1657, %1652 ], [ %1646, %1648 ]
  %1654 = phi ptr [ %1655, %1652 ], [ %1645, %1648 ]
  %1655 = getelementptr i8, ptr %1654, i32 1
  %1656 = load i8, ptr %1654, align 1
  %1657 = getelementptr i8, ptr %1653, i32 1
  store i8 %1656, ptr %1653, align 1
  %1658 = icmp eq ptr %1655, %1651
  br i1 %1658, label %1659, label %1652

1659:                                             ; preds = %1652, %1644, %1619, %1611
  %1660 = load ptr, ptr %43, align 4
  %1661 = getelementptr i8, ptr %1660, i32 %1601
  store ptr %1661, ptr %43, align 4
  %1662 = icmp ugt i32 %1601, 65535
  br i1 %1662, label %1663, label %1670

1663:                                             ; preds = %1659
  store i32 1, ptr %45, align 4
  %1664 = load ptr, ptr %46, align 4
  %1665 = load ptr, ptr %1, align 4
  %1666 = ptrtoint ptr %1664 to i32
  %1667 = ptrtoint ptr %1665 to i32
  %1668 = sub i32 %1666, %1667
  %1669 = ashr exact i32 %1668, 3
  store i32 %1669, ptr %47, align 4
  br label %1670

1670:                                             ; preds = %1663, %1659, %1609
  %1671 = trunc i32 %1601 to i16
  %1672 = load ptr, ptr %46, align 4
  %1673 = getelementptr inbounds %struct.seqDef_s, ptr %1672, i32 0, i32 1
  store i16 %1671, ptr %1673, align 4
  %1674 = add i32 %1566, 1
  %1675 = load ptr, ptr %46, align 4
  store i32 %1674, ptr %1675, align 4
  %1676 = icmp ugt i32 %1602, 65535
  br i1 %1676, label %1679, label %1677

1677:                                             ; preds = %1670
  %1678 = load ptr, ptr %46, align 4
  br label %1686

1679:                                             ; preds = %1670
  store i32 2, ptr %45, align 4
  %1680 = load ptr, ptr %46, align 4
  %1681 = load ptr, ptr %1, align 4
  %1682 = ptrtoint ptr %1680 to i32
  %1683 = ptrtoint ptr %1681 to i32
  %1684 = sub i32 %1682, %1683
  %1685 = ashr exact i32 %1684, 3
  store i32 %1685, ptr %47, align 4
  br label %1686

1686:                                             ; preds = %1679, %1677
  %1687 = phi ptr [ %1678, %1677 ], [ %1680, %1679 ]
  %1688 = trunc i32 %1602 to i16
  %1689 = getelementptr inbounds %struct.seqDef_s, ptr %1687, i32 0, i32 2
  store i16 %1688, ptr %1689, align 2
  %1690 = load ptr, ptr %46, align 4
  %1691 = getelementptr %struct.seqDef_s, ptr %1690, i32 1
  store ptr %1691, ptr %46, align 4
  %1692 = getelementptr i8, ptr %1598, i32 %1597
  %1693 = icmp ule ptr %1692, %7
  %1694 = icmp ne i32 %1595, 0
  %1695 = and i1 %1694, %1693
  br i1 %1695, label %1696, label %1794

1696:                                             ; preds = %1784, %1686
  %1697 = phi ptr [ %1789, %1784 ], [ %1691, %1686 ]
  %1698 = phi ptr [ %1790, %1784 ], [ %1692, %1686 ]
  %1699 = phi i32 [ %1700, %1784 ], [ %1596, %1686 ]
  %1700 = phi i32 [ %1699, %1784 ], [ %1595, %1686 ]
  %1701 = load i32, ptr %1698, align 1
  %1702 = sub i32 0, %1700
  %1703 = getelementptr i8, ptr %1698, i32 %1702
  %1704 = load i32, ptr %1703, align 1
  %1705 = icmp eq i32 %1701, %1704
  br i1 %1705, label %1706, label %1794

1706:                                             ; preds = %1696
  %1707 = getelementptr i8, ptr %1698, i32 4
  %1708 = getelementptr i8, ptr %1707, i32 %1702
  %1709 = icmp ugt ptr %40, %1707
  br i1 %1709, label %1710, label %1736

1710:                                             ; preds = %1706
  %1711 = load i32, ptr %1708, align 1
  %1712 = load i32, ptr %1707, align 1
  %1713 = xor i32 %1712, %1711
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1718, label %1715

1715:                                             ; preds = %1710
  %1716 = tail call i32 @llvm.cttz.i32(i32 %1713, i1 true) #7, !range !8
  %1717 = lshr i32 %1716, 3
  br label %1762

1718:                                             ; preds = %1724, %1710
  %1719 = phi ptr [ %1722, %1724 ], [ %1707, %1710 ]
  %1720 = phi ptr [ %1721, %1724 ], [ %1708, %1710 ]
  %1721 = getelementptr i8, ptr %1720, i32 4
  %1722 = getelementptr i8, ptr %1719, i32 4
  %1723 = icmp ult ptr %1722, %40
  br i1 %1723, label %1724, label %1736

1724:                                             ; preds = %1718
  %1725 = load i32, ptr %1721, align 1
  %1726 = load i32, ptr %1722, align 1
  %1727 = xor i32 %1726, %1725
  %1728 = icmp eq i32 %1727, 0
  br i1 %1728, label %1718, label %1729

1729:                                             ; preds = %1724
  %1730 = tail call i32 @llvm.cttz.i32(i32 %1727, i1 true) #7, !range !8
  %1731 = lshr i32 %1730, 3
  %1732 = getelementptr i8, ptr %1722, i32 %1731
  %1733 = ptrtoint ptr %1732 to i32
  %1734 = ptrtoint ptr %1707 to i32
  %1735 = sub i32 %1733, %1734
  br label %1762

1736:                                             ; preds = %1718, %1706
  %1737 = phi ptr [ %1707, %1706 ], [ %1722, %1718 ]
  %1738 = phi ptr [ %1708, %1706 ], [ %1721, %1718 ]
  %1739 = icmp ult ptr %1737, %41
  br i1 %1739, label %1740, label %1747

1740:                                             ; preds = %1736
  %1741 = load i16, ptr %1738, align 1
  %1742 = load i16, ptr %1737, align 1
  %1743 = icmp eq i16 %1741, %1742
  br i1 %1743, label %1744, label %1747

1744:                                             ; preds = %1740
  %1745 = getelementptr i8, ptr %1737, i32 2
  %1746 = getelementptr i8, ptr %1738, i32 2
  br label %1747

1747:                                             ; preds = %1744, %1740, %1736
  %1748 = phi ptr [ %1745, %1744 ], [ %1737, %1740 ], [ %1737, %1736 ]
  %1749 = phi ptr [ %1746, %1744 ], [ %1738, %1740 ], [ %1738, %1736 ]
  %1750 = icmp ult ptr %1748, %6
  br i1 %1750, label %1751, label %1757

1751:                                             ; preds = %1747
  %1752 = load i8, ptr %1749, align 1
  %1753 = load i8, ptr %1748, align 1
  %1754 = icmp eq i8 %1752, %1753
  %1755 = zext i1 %1754 to i32
  %1756 = getelementptr i8, ptr %1748, i32 %1755
  br label %1757

1757:                                             ; preds = %1751, %1747
  %1758 = phi ptr [ %1748, %1747 ], [ %1756, %1751 ]
  %1759 = ptrtoint ptr %1758 to i32
  %1760 = ptrtoint ptr %1707 to i32
  %1761 = sub i32 %1759, %1760
  br label %1762

1762:                                             ; preds = %1757, %1729, %1715
  %1763 = phi i32 [ %1761, %1757 ], [ %1717, %1715 ], [ %1735, %1729 ]
  %1764 = add i32 %1763, 4
  %1765 = add i32 %1763, 1
  %1766 = icmp ugt ptr %1698, %42
  br i1 %1766, label %1770, label %1767

1767:                                             ; preds = %1762
  %1768 = load ptr, ptr %43, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1768, ptr noundef align 1 dereferenceable(16) %1698, i32 16, i1 false) #7
  %1769 = load ptr, ptr %46, align 4
  br label %1770

1770:                                             ; preds = %1767, %1762
  %1771 = phi ptr [ %1697, %1762 ], [ %1769, %1767 ]
  %1772 = getelementptr inbounds %struct.seqDef_s, ptr %1771, i32 0, i32 1
  store i16 0, ptr %1772, align 4
  %1773 = load ptr, ptr %46, align 4
  store i32 1, ptr %1773, align 4
  %1774 = icmp ugt i32 %1765, 65535
  br i1 %1774, label %1777, label %1775

1775:                                             ; preds = %1770
  %1776 = load ptr, ptr %46, align 4
  br label %1784

1777:                                             ; preds = %1770
  store i32 2, ptr %45, align 4
  %1778 = load ptr, ptr %46, align 4
  %1779 = load ptr, ptr %1, align 4
  %1780 = ptrtoint ptr %1778 to i32
  %1781 = ptrtoint ptr %1779 to i32
  %1782 = sub i32 %1780, %1781
  %1783 = ashr exact i32 %1782, 3
  store i32 %1783, ptr %47, align 4
  br label %1784

1784:                                             ; preds = %1777, %1775
  %1785 = phi ptr [ %1776, %1775 ], [ %1778, %1777 ]
  %1786 = trunc i32 %1765 to i16
  %1787 = getelementptr inbounds %struct.seqDef_s, ptr %1785, i32 0, i32 2
  store i16 %1786, ptr %1787, align 2
  %1788 = load ptr, ptr %46, align 4
  %1789 = getelementptr %struct.seqDef_s, ptr %1788, i32 1
  store ptr %1789, ptr %46, align 4
  %1790 = getelementptr i8, ptr %1698, i32 %1764
  %1791 = icmp ule ptr %1790, %7
  %1792 = icmp ne i32 %1699, 0
  %1793 = and i1 %1792, %1791
  br i1 %1793, label %1696, label %1794

1794:                                             ; preds = %1784, %1696, %1686, %538
  %1795 = phi i32 [ %60, %538 ], [ %1595, %1686 ], [ %1699, %1784 ], [ %1700, %1696 ]
  %1796 = phi i32 [ %59, %538 ], [ %1596, %1686 ], [ %1700, %1784 ], [ %1699, %1696 ]
  %1797 = phi ptr [ %58, %538 ], [ %1692, %1686 ], [ %1790, %1784 ], [ %1698, %1696 ]
  %1798 = phi ptr [ %544, %538 ], [ %1692, %1686 ], [ %1790, %1784 ], [ %1698, %1696 ]
  %1799 = icmp ult ptr %1798, %7
  br i1 %1799, label %56, label %1800

1800:                                             ; preds = %1794, %5
  %1801 = phi ptr [ %3, %5 ], [ %1797, %1794 ]
  %1802 = phi i32 [ %35, %5 ], [ %1795, %1794 ]
  %1803 = phi i32 [ %37, %5 ], [ %1796, %1794 ]
  %1804 = ptrtoint ptr %1801 to i32
  %1805 = select i1 %34, i32 %15, i32 0
  %1806 = select i1 %36, i32 %13, i32 %1805
  %1807 = icmp eq i32 %1803, 0
  %1808 = select i1 %1807, i32 %1806, i32 %1803
  store i32 %1808, ptr %2, align 4
  %1809 = icmp eq i32 %1802, 0
  %1810 = select i1 %1809, i32 %1806, i32 %1802
  store i32 %1810, ptr %14, align 4
  %1811 = ptrtoint ptr %6 to i32
  %1812 = sub i32 %1811, %1804
  ret i32 %1812
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = load i32, ptr %2, align 4
  %14 = getelementptr i32, ptr %2, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq ptr %12, %3
  %17 = zext i1 %16 to i32
  %18 = getelementptr i8, ptr %3, i32 %17
  %19 = ptrtoint ptr %18 to i32
  %20 = ptrtoint ptr %9 to i32
  %21 = sub i32 %19, %20
  %22 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = shl nuw i32 1, %23
  %25 = sub i32 %21, %11
  %26 = icmp ugt i32 %25, %24
  %27 = sub i32 %21, %24
  %28 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i1 %26, i1 false
  %32 = select i1 %31, i32 %27, i32 %11
  %33 = sub i32 %21, %32
  %34 = icmp ugt i32 %15, %33
  %35 = select i1 %34, i32 0, i32 %15
  %36 = icmp ugt i32 %13, %33
  %37 = select i1 %36, i32 0, i32 %13
  %38 = icmp ult ptr %18, %7
  br i1 %38, label %39, label %1293

39:                                               ; preds = %5
  %40 = getelementptr i8, ptr %6, i32 -3
  %41 = getelementptr i8, ptr %6, i32 -1
  %42 = getelementptr i8, ptr %6, i32 -32
  %43 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %44 = ptrtoint ptr %42 to i32
  %45 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %48 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %49 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %51 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %52 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %53 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %54 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %55 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %56

56:                                               ; preds = %1287, %39
  %57 = phi ptr [ %18, %39 ], [ %1291, %1287 ]
  %58 = phi ptr [ %3, %39 ], [ %1290, %1287 ]
  %59 = phi i32 [ %37, %39 ], [ %1289, %1287 ]
  %60 = phi i32 [ %35, %39 ], [ %1288, %1287 ]
  %61 = sub i32 0, %59
  %62 = getelementptr i8, ptr %57, i32 1
  %63 = icmp ne i32 %59, 0
  %64 = getelementptr i8, ptr %62, i32 %61
  %65 = load i32, ptr %64, align 1
  %66 = load i32, ptr %62, align 1
  %67 = icmp eq i32 %65, %66
  %68 = and i1 %63, %67
  br i1 %68, label %69, label %128

69:                                               ; preds = %56
  %70 = getelementptr i8, ptr %57, i32 5
  %71 = getelementptr i8, ptr %70, i32 %61
  %72 = icmp ugt ptr %40, %70
  br i1 %72, label %73, label %99

73:                                               ; preds = %69
  %74 = load i32, ptr %71, align 1
  %75 = load i32, ptr %70, align 1
  %76 = xor i32 %75, %74
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = tail call i32 @llvm.cttz.i32(i32 %76, i1 true) #7, !range !8
  %80 = lshr i32 %79, 3
  br label %125

81:                                               ; preds = %87, %73
  %82 = phi ptr [ %85, %87 ], [ %70, %73 ]
  %83 = phi ptr [ %84, %87 ], [ %71, %73 ]
  %84 = getelementptr i8, ptr %83, i32 4
  %85 = getelementptr i8, ptr %82, i32 4
  %86 = icmp ult ptr %85, %40
  br i1 %86, label %87, label %99

87:                                               ; preds = %81
  %88 = load i32, ptr %84, align 1
  %89 = load i32, ptr %85, align 1
  %90 = xor i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %81, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !8
  %94 = lshr i32 %93, 3
  %95 = getelementptr i8, ptr %85, i32 %94
  %96 = ptrtoint ptr %95 to i32
  %97 = ptrtoint ptr %70 to i32
  %98 = sub i32 %96, %97
  br label %125

99:                                               ; preds = %81, %69
  %100 = phi ptr [ %70, %69 ], [ %85, %81 ]
  %101 = phi ptr [ %71, %69 ], [ %84, %81 ]
  %102 = icmp ult ptr %100, %41
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = load i16, ptr %101, align 1
  %105 = load i16, ptr %100, align 1
  %106 = icmp eq i16 %104, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = getelementptr i8, ptr %100, i32 2
  %109 = getelementptr i8, ptr %101, i32 2
  br label %110

110:                                              ; preds = %107, %103, %99
  %111 = phi ptr [ %108, %107 ], [ %100, %103 ], [ %100, %99 ]
  %112 = phi ptr [ %109, %107 ], [ %101, %103 ], [ %101, %99 ]
  %113 = icmp ult ptr %111, %6
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = load i8, ptr %112, align 1
  %116 = load i8, ptr %111, align 1
  %117 = icmp eq i8 %115, %116
  %118 = zext i1 %117 to i32
  %119 = getelementptr i8, ptr %111, i32 %118
  br label %120

120:                                              ; preds = %114, %110
  %121 = phi ptr [ %111, %110 ], [ %119, %114 ]
  %122 = ptrtoint ptr %121 to i32
  %123 = ptrtoint ptr %70 to i32
  %124 = sub i32 %122, %123
  br label %125

125:                                              ; preds = %120, %92, %78
  %126 = phi i32 [ %124, %120 ], [ %80, %78 ], [ %98, %92 ]
  %127 = add i32 %126, 4
  br label %128

128:                                              ; preds = %125, %56
  %129 = phi i32 [ %127, %125 ], [ 0, %56 ]
  %130 = load i32, ptr %48, align 4
  switch i32 %130, label %131 [
    i32 6, label %397
    i32 5, label %262
    i32 7, label %397
  ]

131:                                              ; preds = %128
  %132 = load ptr, ptr %49, align 4
  %133 = load i32, ptr %50, align 4
  %134 = shl nuw i32 1, %133
  %135 = add i32 %134, -1
  %136 = load ptr, ptr %8, align 4
  %137 = ptrtoint ptr %57 to i32
  %138 = ptrtoint ptr %136 to i32
  %139 = sub i32 %137, %138
  %140 = load i32, ptr %22, align 4
  %141 = shl nuw i32 1, %140
  %142 = load i32, ptr %51, align 4
  %143 = sub i32 %139, %142
  %144 = icmp ugt i32 %143, %141
  %145 = sub i32 %139, %141
  %146 = load i32, ptr %28, align 4
  %147 = icmp eq i32 %146, 0
  %148 = select i1 %147, i1 %144, i1 false
  %149 = select i1 %148, i32 %145, i32 %142
  %150 = tail call i32 @llvm.usub.sat.i32(i32 %139, i32 %134) #7
  %151 = load i32, ptr %52, align 4
  %152 = shl nuw i32 1, %151
  %153 = load ptr, ptr %53, align 4
  %154 = load i32, ptr %54, align 4
  %155 = shl nsw i32 -1, %133
  %156 = xor i32 %155, -1
  %157 = load i32, ptr %55, align 4
  %158 = icmp ult i32 %157, %139
  %159 = sub i32 32, %154
  br i1 %158, label %160, label %172

160:                                              ; preds = %160, %131
  %161 = phi i32 [ %170, %160 ], [ %157, %131 ]
  %162 = getelementptr i8, ptr %136, i32 %161
  %163 = load i32, ptr %162, align 1
  %164 = mul i32 %163, -1640531535
  %165 = lshr i32 %164, %159
  %166 = getelementptr i32, ptr %153, i32 %165
  %167 = load i32, ptr %166, align 4
  %168 = and i32 %161, %156
  %169 = getelementptr i32, ptr %132, i32 %168
  store i32 %167, ptr %169, align 4
  store i32 %161, ptr %166, align 4
  %170 = add nuw i32 %161, 1
  %171 = icmp ult i32 %170, %139
  br i1 %171, label %160, label %172

172:                                              ; preds = %160, %131
  store i32 %139, ptr %55, align 4
  %173 = load i32, ptr %57, align 1
  %174 = mul i32 %173, -1640531535
  %175 = lshr i32 %174, %159
  %176 = getelementptr i32, ptr %153, i32 %175
  %177 = load i32, ptr %176, align 4
  %178 = icmp ult i32 %177, %149
  br i1 %178, label %532, label %179

179:                                              ; preds = %172
  %180 = icmp ugt ptr %40, %57
  %181 = add i32 %139, 2
  br label %182

182:                                              ; preds = %254, %179
  %183 = phi i32 [ 999999999, %179 ], [ %251, %254 ]
  %184 = phi i32 [ %177, %179 ], [ %258, %254 ]
  %185 = phi i32 [ 3, %179 ], [ %252, %254 ]
  %186 = phi i32 [ %152, %179 ], [ %257, %254 ]
  %187 = getelementptr i8, ptr %136, i32 %184
  %188 = getelementptr i8, ptr %187, i32 %185
  %189 = load i8, ptr %188, align 1
  %190 = getelementptr i8, ptr %57, i32 %185
  %191 = load i8, ptr %190, align 1
  %192 = icmp eq i8 %189, %191
  br i1 %192, label %193, label %250

193:                                              ; preds = %182
  br i1 %180, label %194, label %218

194:                                              ; preds = %193
  %195 = load i32, ptr %187, align 1
  %196 = xor i32 %195, %173
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = tail call i32 @llvm.cttz.i32(i32 %196, i1 true) #7, !range !8
  %200 = lshr i32 %199, 3
  br label %243

201:                                              ; preds = %207, %194
  %202 = phi ptr [ %205, %207 ], [ %57, %194 ]
  %203 = phi ptr [ %204, %207 ], [ %187, %194 ]
  %204 = getelementptr i8, ptr %203, i32 4
  %205 = getelementptr i8, ptr %202, i32 4
  %206 = icmp ult ptr %205, %40
  br i1 %206, label %207, label %218

207:                                              ; preds = %201
  %208 = load i32, ptr %204, align 1
  %209 = load i32, ptr %205, align 1
  %210 = xor i32 %209, %208
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %201, label %212

212:                                              ; preds = %207
  %213 = tail call i32 @llvm.cttz.i32(i32 %210, i1 true) #7, !range !8
  %214 = lshr i32 %213, 3
  %215 = getelementptr i8, ptr %205, i32 %214
  %216 = ptrtoint ptr %215 to i32
  %217 = sub i32 %216, %137
  br label %243

218:                                              ; preds = %201, %193
  %219 = phi ptr [ %57, %193 ], [ %205, %201 ]
  %220 = phi ptr [ %187, %193 ], [ %204, %201 ]
  %221 = icmp ult ptr %219, %41
  br i1 %221, label %222, label %229

222:                                              ; preds = %218
  %223 = load i16, ptr %220, align 1
  %224 = load i16, ptr %219, align 1
  %225 = icmp eq i16 %223, %224
  br i1 %225, label %226, label %229

226:                                              ; preds = %222
  %227 = getelementptr i8, ptr %219, i32 2
  %228 = getelementptr i8, ptr %220, i32 2
  br label %229

229:                                              ; preds = %226, %222, %218
  %230 = phi ptr [ %227, %226 ], [ %219, %222 ], [ %219, %218 ]
  %231 = phi ptr [ %228, %226 ], [ %220, %222 ], [ %220, %218 ]
  %232 = icmp ult ptr %230, %6
  br i1 %232, label %233, label %239

233:                                              ; preds = %229
  %234 = load i8, ptr %231, align 1
  %235 = load i8, ptr %230, align 1
  %236 = icmp eq i8 %234, %235
  %237 = zext i1 %236 to i32
  %238 = getelementptr i8, ptr %230, i32 %237
  br label %239

239:                                              ; preds = %233, %229
  %240 = phi ptr [ %230, %229 ], [ %238, %233 ]
  %241 = ptrtoint ptr %240 to i32
  %242 = sub i32 %241, %137
  br label %243

243:                                              ; preds = %239, %212, %198
  %244 = phi i32 [ %242, %239 ], [ %200, %198 ], [ %217, %212 ]
  %245 = icmp ugt i32 %244, %185
  br i1 %245, label %246, label %250

246:                                              ; preds = %243
  %247 = sub i32 %181, %184
  %248 = getelementptr i8, ptr %57, i32 %244
  %249 = icmp eq ptr %248, %6
  br i1 %249, label %532, label %250

250:                                              ; preds = %246, %243, %182
  %251 = phi i32 [ %247, %246 ], [ %183, %243 ], [ %183, %182 ]
  %252 = phi i32 [ %244, %246 ], [ %185, %243 ], [ %185, %182 ]
  %253 = icmp ugt i32 %184, %150
  br i1 %253, label %254, label %532

254:                                              ; preds = %250
  %255 = and i32 %184, %135
  %256 = getelementptr i32, ptr %132, i32 %255
  %257 = add i32 %186, -1
  %258 = load i32, ptr %256, align 4
  %259 = icmp uge i32 %258, %149
  %260 = icmp ne i32 %257, 0
  %261 = and i1 %260, %259
  br i1 %261, label %182, label %532

262:                                              ; preds = %128
  %263 = load ptr, ptr %49, align 4
  %264 = load i32, ptr %50, align 4
  %265 = shl nuw i32 1, %264
  %266 = add i32 %265, -1
  %267 = load ptr, ptr %8, align 4
  %268 = ptrtoint ptr %57 to i32
  %269 = ptrtoint ptr %267 to i32
  %270 = sub i32 %268, %269
  %271 = load i32, ptr %22, align 4
  %272 = shl nuw i32 1, %271
  %273 = load i32, ptr %51, align 4
  %274 = sub i32 %270, %273
  %275 = icmp ugt i32 %274, %272
  %276 = sub i32 %270, %272
  %277 = load i32, ptr %28, align 4
  %278 = icmp eq i32 %277, 0
  %279 = select i1 %278, i1 %275, i1 false
  %280 = select i1 %279, i32 %276, i32 %273
  %281 = tail call i32 @llvm.usub.sat.i32(i32 %270, i32 %265) #7
  %282 = load i32, ptr %52, align 4
  %283 = shl nuw i32 1, %282
  %284 = load ptr, ptr %53, align 4
  %285 = load i32, ptr %54, align 4
  %286 = shl nsw i32 -1, %264
  %287 = xor i32 %286, -1
  %288 = load i32, ptr %55, align 4
  %289 = icmp ult i32 %288, %270
  %290 = sub i32 64, %285
  %291 = zext i32 %290 to i64
  br i1 %289, label %292, label %305

292:                                              ; preds = %292, %262
  %293 = phi i32 [ %303, %292 ], [ %288, %262 ]
  %294 = getelementptr i8, ptr %267, i32 %293
  %295 = load i64, ptr %294, align 1
  %296 = mul i64 %295, -3523014627271114752
  %297 = lshr i64 %296, %291
  %298 = trunc i64 %297 to i32
  %299 = getelementptr i32, ptr %284, i32 %298
  %300 = load i32, ptr %299, align 4
  %301 = and i32 %293, %287
  %302 = getelementptr i32, ptr %263, i32 %301
  store i32 %300, ptr %302, align 4
  store i32 %293, ptr %299, align 4
  %303 = add nuw i32 %293, 1
  %304 = icmp ult i32 %303, %270
  br i1 %304, label %292, label %305

305:                                              ; preds = %292, %262
  store i32 %270, ptr %55, align 4
  %306 = load i64, ptr %57, align 1
  %307 = mul i64 %306, -3523014627271114752
  %308 = lshr i64 %307, %291
  %309 = trunc i64 %308 to i32
  %310 = getelementptr i32, ptr %284, i32 %309
  %311 = load i32, ptr %310, align 4
  %312 = icmp ult i32 %311, %280
  %313 = trunc i64 %306 to i32
  br i1 %312, label %532, label %314

314:                                              ; preds = %305
  %315 = icmp ugt ptr %40, %57
  %316 = add i32 %270, 2
  br label %317

317:                                              ; preds = %389, %314
  %318 = phi i32 [ 999999999, %314 ], [ %386, %389 ]
  %319 = phi i32 [ %311, %314 ], [ %393, %389 ]
  %320 = phi i32 [ 3, %314 ], [ %387, %389 ]
  %321 = phi i32 [ %283, %314 ], [ %392, %389 ]
  %322 = getelementptr i8, ptr %267, i32 %319
  %323 = getelementptr i8, ptr %322, i32 %320
  %324 = load i8, ptr %323, align 1
  %325 = getelementptr i8, ptr %57, i32 %320
  %326 = load i8, ptr %325, align 1
  %327 = icmp eq i8 %324, %326
  br i1 %327, label %328, label %385

328:                                              ; preds = %317
  br i1 %315, label %329, label %353

329:                                              ; preds = %328
  %330 = load i32, ptr %322, align 1
  %331 = xor i32 %330, %313
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %336, label %333

333:                                              ; preds = %329
  %334 = tail call i32 @llvm.cttz.i32(i32 %331, i1 true) #7, !range !8
  %335 = lshr i32 %334, 3
  br label %378

336:                                              ; preds = %342, %329
  %337 = phi ptr [ %340, %342 ], [ %57, %329 ]
  %338 = phi ptr [ %339, %342 ], [ %322, %329 ]
  %339 = getelementptr i8, ptr %338, i32 4
  %340 = getelementptr i8, ptr %337, i32 4
  %341 = icmp ult ptr %340, %40
  br i1 %341, label %342, label %353

342:                                              ; preds = %336
  %343 = load i32, ptr %339, align 1
  %344 = load i32, ptr %340, align 1
  %345 = xor i32 %344, %343
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %336, label %347

347:                                              ; preds = %342
  %348 = tail call i32 @llvm.cttz.i32(i32 %345, i1 true) #7, !range !8
  %349 = lshr i32 %348, 3
  %350 = getelementptr i8, ptr %340, i32 %349
  %351 = ptrtoint ptr %350 to i32
  %352 = sub i32 %351, %268
  br label %378

353:                                              ; preds = %336, %328
  %354 = phi ptr [ %57, %328 ], [ %340, %336 ]
  %355 = phi ptr [ %322, %328 ], [ %339, %336 ]
  %356 = icmp ult ptr %354, %41
  br i1 %356, label %357, label %364

357:                                              ; preds = %353
  %358 = load i16, ptr %355, align 1
  %359 = load i16, ptr %354, align 1
  %360 = icmp eq i16 %358, %359
  br i1 %360, label %361, label %364

361:                                              ; preds = %357
  %362 = getelementptr i8, ptr %354, i32 2
  %363 = getelementptr i8, ptr %355, i32 2
  br label %364

364:                                              ; preds = %361, %357, %353
  %365 = phi ptr [ %362, %361 ], [ %354, %357 ], [ %354, %353 ]
  %366 = phi ptr [ %363, %361 ], [ %355, %357 ], [ %355, %353 ]
  %367 = icmp ult ptr %365, %6
  br i1 %367, label %368, label %374

368:                                              ; preds = %364
  %369 = load i8, ptr %366, align 1
  %370 = load i8, ptr %365, align 1
  %371 = icmp eq i8 %369, %370
  %372 = zext i1 %371 to i32
  %373 = getelementptr i8, ptr %365, i32 %372
  br label %374

374:                                              ; preds = %368, %364
  %375 = phi ptr [ %365, %364 ], [ %373, %368 ]
  %376 = ptrtoint ptr %375 to i32
  %377 = sub i32 %376, %268
  br label %378

378:                                              ; preds = %374, %347, %333
  %379 = phi i32 [ %377, %374 ], [ %335, %333 ], [ %352, %347 ]
  %380 = icmp ugt i32 %379, %320
  br i1 %380, label %381, label %385

381:                                              ; preds = %378
  %382 = sub i32 %316, %319
  %383 = getelementptr i8, ptr %57, i32 %379
  %384 = icmp eq ptr %383, %6
  br i1 %384, label %532, label %385

385:                                              ; preds = %381, %378, %317
  %386 = phi i32 [ %382, %381 ], [ %318, %378 ], [ %318, %317 ]
  %387 = phi i32 [ %379, %381 ], [ %320, %378 ], [ %320, %317 ]
  %388 = icmp ugt i32 %319, %281
  br i1 %388, label %389, label %532

389:                                              ; preds = %385
  %390 = and i32 %319, %266
  %391 = getelementptr i32, ptr %263, i32 %390
  %392 = add i32 %321, -1
  %393 = load i32, ptr %391, align 4
  %394 = icmp uge i32 %393, %280
  %395 = icmp ne i32 %392, 0
  %396 = and i1 %395, %394
  br i1 %396, label %317, label %532

397:                                              ; preds = %128, %128
  %398 = load ptr, ptr %49, align 4
  %399 = load i32, ptr %50, align 4
  %400 = shl nuw i32 1, %399
  %401 = add i32 %400, -1
  %402 = load ptr, ptr %8, align 4
  %403 = ptrtoint ptr %57 to i32
  %404 = ptrtoint ptr %402 to i32
  %405 = sub i32 %403, %404
  %406 = load i32, ptr %22, align 4
  %407 = shl nuw i32 1, %406
  %408 = load i32, ptr %51, align 4
  %409 = sub i32 %405, %408
  %410 = icmp ugt i32 %409, %407
  %411 = sub i32 %405, %407
  %412 = load i32, ptr %28, align 4
  %413 = icmp eq i32 %412, 0
  %414 = select i1 %413, i1 %410, i1 false
  %415 = select i1 %414, i32 %411, i32 %408
  %416 = tail call i32 @llvm.usub.sat.i32(i32 %405, i32 %400) #7
  %417 = load i32, ptr %52, align 4
  %418 = shl nuw i32 1, %417
  %419 = load ptr, ptr %53, align 4
  %420 = load i32, ptr %54, align 4
  %421 = shl nsw i32 -1, %399
  %422 = xor i32 %421, -1
  %423 = load i32, ptr %55, align 4
  %424 = icmp ult i32 %423, %405
  %425 = sub i32 64, %420
  %426 = zext i32 %425 to i64
  br i1 %424, label %427, label %440

427:                                              ; preds = %427, %397
  %428 = phi i32 [ %438, %427 ], [ %423, %397 ]
  %429 = getelementptr i8, ptr %402, i32 %428
  %430 = load i64, ptr %429, align 1
  %431 = mul i64 %430, -3523014627193847808
  %432 = lshr i64 %431, %426
  %433 = trunc i64 %432 to i32
  %434 = getelementptr i32, ptr %419, i32 %433
  %435 = load i32, ptr %434, align 4
  %436 = and i32 %428, %422
  %437 = getelementptr i32, ptr %398, i32 %436
  store i32 %435, ptr %437, align 4
  store i32 %428, ptr %434, align 4
  %438 = add nuw i32 %428, 1
  %439 = icmp ult i32 %438, %405
  br i1 %439, label %427, label %440

440:                                              ; preds = %427, %397
  store i32 %405, ptr %55, align 4
  %441 = load i64, ptr %57, align 1
  %442 = mul i64 %441, -3523014627193847808
  %443 = lshr i64 %442, %426
  %444 = trunc i64 %443 to i32
  %445 = getelementptr i32, ptr %419, i32 %444
  %446 = load i32, ptr %445, align 4
  %447 = icmp ult i32 %446, %415
  %448 = trunc i64 %441 to i32
  br i1 %447, label %532, label %449

449:                                              ; preds = %440
  %450 = icmp ugt ptr %40, %57
  %451 = add i32 %405, 2
  br label %452

452:                                              ; preds = %524, %449
  %453 = phi i32 [ 999999999, %449 ], [ %521, %524 ]
  %454 = phi i32 [ %446, %449 ], [ %528, %524 ]
  %455 = phi i32 [ 3, %449 ], [ %522, %524 ]
  %456 = phi i32 [ %418, %449 ], [ %527, %524 ]
  %457 = getelementptr i8, ptr %402, i32 %454
  %458 = getelementptr i8, ptr %457, i32 %455
  %459 = load i8, ptr %458, align 1
  %460 = getelementptr i8, ptr %57, i32 %455
  %461 = load i8, ptr %460, align 1
  %462 = icmp eq i8 %459, %461
  br i1 %462, label %463, label %520

463:                                              ; preds = %452
  br i1 %450, label %464, label %488

464:                                              ; preds = %463
  %465 = load i32, ptr %457, align 1
  %466 = xor i32 %465, %448
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %471, label %468

468:                                              ; preds = %464
  %469 = tail call i32 @llvm.cttz.i32(i32 %466, i1 true) #7, !range !8
  %470 = lshr i32 %469, 3
  br label %513

471:                                              ; preds = %477, %464
  %472 = phi ptr [ %475, %477 ], [ %57, %464 ]
  %473 = phi ptr [ %474, %477 ], [ %457, %464 ]
  %474 = getelementptr i8, ptr %473, i32 4
  %475 = getelementptr i8, ptr %472, i32 4
  %476 = icmp ult ptr %475, %40
  br i1 %476, label %477, label %488

477:                                              ; preds = %471
  %478 = load i32, ptr %474, align 1
  %479 = load i32, ptr %475, align 1
  %480 = xor i32 %479, %478
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %471, label %482

482:                                              ; preds = %477
  %483 = tail call i32 @llvm.cttz.i32(i32 %480, i1 true) #7, !range !8
  %484 = lshr i32 %483, 3
  %485 = getelementptr i8, ptr %475, i32 %484
  %486 = ptrtoint ptr %485 to i32
  %487 = sub i32 %486, %403
  br label %513

488:                                              ; preds = %471, %463
  %489 = phi ptr [ %57, %463 ], [ %475, %471 ]
  %490 = phi ptr [ %457, %463 ], [ %474, %471 ]
  %491 = icmp ult ptr %489, %41
  br i1 %491, label %492, label %499

492:                                              ; preds = %488
  %493 = load i16, ptr %490, align 1
  %494 = load i16, ptr %489, align 1
  %495 = icmp eq i16 %493, %494
  br i1 %495, label %496, label %499

496:                                              ; preds = %492
  %497 = getelementptr i8, ptr %489, i32 2
  %498 = getelementptr i8, ptr %490, i32 2
  br label %499

499:                                              ; preds = %496, %492, %488
  %500 = phi ptr [ %497, %496 ], [ %489, %492 ], [ %489, %488 ]
  %501 = phi ptr [ %498, %496 ], [ %490, %492 ], [ %490, %488 ]
  %502 = icmp ult ptr %500, %6
  br i1 %502, label %503, label %509

503:                                              ; preds = %499
  %504 = load i8, ptr %501, align 1
  %505 = load i8, ptr %500, align 1
  %506 = icmp eq i8 %504, %505
  %507 = zext i1 %506 to i32
  %508 = getelementptr i8, ptr %500, i32 %507
  br label %509

509:                                              ; preds = %503, %499
  %510 = phi ptr [ %500, %499 ], [ %508, %503 ]
  %511 = ptrtoint ptr %510 to i32
  %512 = sub i32 %511, %403
  br label %513

513:                                              ; preds = %509, %482, %468
  %514 = phi i32 [ %512, %509 ], [ %470, %468 ], [ %487, %482 ]
  %515 = icmp ugt i32 %514, %455
  br i1 %515, label %516, label %520

516:                                              ; preds = %513
  %517 = sub i32 %451, %454
  %518 = getelementptr i8, ptr %57, i32 %514
  %519 = icmp eq ptr %518, %6
  br i1 %519, label %532, label %520

520:                                              ; preds = %516, %513, %452
  %521 = phi i32 [ %517, %516 ], [ %453, %513 ], [ %453, %452 ]
  %522 = phi i32 [ %514, %516 ], [ %455, %513 ], [ %455, %452 ]
  %523 = icmp ugt i32 %454, %416
  br i1 %523, label %524, label %532

524:                                              ; preds = %520
  %525 = and i32 %454, %401
  %526 = getelementptr i32, ptr %398, i32 %525
  %527 = add i32 %456, -1
  %528 = load i32, ptr %526, align 4
  %529 = icmp uge i32 %528, %415
  %530 = icmp ne i32 %527, 0
  %531 = and i1 %530, %529
  br i1 %531, label %452, label %532

532:                                              ; preds = %524, %520, %516, %440, %389, %385, %381, %305, %254, %250, %246, %172
  %533 = phi i32 [ %139, %172 ], [ %270, %305 ], [ %405, %440 ], [ %139, %254 ], [ %139, %250 ], [ %139, %246 ], [ %405, %524 ], [ %405, %520 ], [ %405, %516 ], [ %270, %389 ], [ %270, %385 ], [ %270, %381 ]
  %534 = phi i32 [ 999999999, %172 ], [ 999999999, %305 ], [ 999999999, %440 ], [ %247, %246 ], [ %251, %250 ], [ %251, %254 ], [ %517, %516 ], [ %521, %520 ], [ %521, %524 ], [ %382, %381 ], [ %386, %385 ], [ %386, %389 ]
  %535 = phi i32 [ 3, %172 ], [ 3, %305 ], [ 3, %440 ], [ %244, %246 ], [ %252, %250 ], [ %252, %254 ], [ %514, %516 ], [ %522, %520 ], [ %522, %524 ], [ %379, %381 ], [ %387, %385 ], [ %387, %389 ]
  %536 = tail call i32 @llvm.umax.i32(i32 %535, i32 %129) #7
  %537 = icmp ult i32 %536, 4
  br i1 %537, label %538, label %545

538:                                              ; preds = %532
  %539 = ptrtoint ptr %57 to i32
  %540 = ptrtoint ptr %58 to i32
  %541 = sub i32 %539, %540
  %542 = ashr i32 %541, 8
  %543 = add nsw i32 %542, 1
  %544 = getelementptr i8, ptr %57, i32 %543
  br label %1287

545:                                              ; preds = %532
  %546 = icmp ugt i32 %535, %129
  %547 = select i1 %546, ptr %57, ptr %62
  %548 = select i1 %546, i32 %534, i32 0
  %549 = icmp ult ptr %57, %7
  br i1 %549, label %550, label %1057

550:                                              ; preds = %1055, %545
  %551 = phi i32 [ %1037, %1055 ], [ %533, %545 ]
  %552 = phi ptr [ %556, %1055 ], [ %57, %545 ]
  %553 = phi ptr [ %556, %1055 ], [ %547, %545 ]
  %554 = phi i32 [ %1038, %1055 ], [ %548, %545 ]
  %555 = phi i32 [ %1039, %1055 ], [ %536, %545 ]
  %556 = getelementptr i8, ptr %552, i32 1
  %557 = icmp eq i32 %554, 0
  br i1 %557, label %633, label %558

558:                                              ; preds = %550
  %559 = load i32, ptr %556, align 1
  %560 = getelementptr i8, ptr %556, i32 %61
  %561 = load i32, ptr %560, align 1
  %562 = icmp eq i32 %559, %561
  %563 = and i1 %63, %562
  br i1 %563, label %564, label %633

564:                                              ; preds = %558
  %565 = getelementptr i8, ptr %552, i32 5
  %566 = getelementptr i8, ptr %565, i32 %61
  %567 = icmp ugt ptr %40, %565
  br i1 %567, label %568, label %593

568:                                              ; preds = %564
  %569 = load i32, ptr %566, align 1
  %570 = load i32, ptr %565, align 1
  %571 = xor i32 %570, %569
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %578, label %573

573:                                              ; preds = %568
  %574 = tail call i32 @llvm.cttz.i32(i32 %571, i1 true) #7, !range !8
  %575 = lshr i32 %574, 3
  %576 = add i32 %554, 1
  %577 = tail call i32 @llvm.ctlz.i32(i32 %576, i1 false) #7, !range !8
  br label %622

578:                                              ; preds = %584, %568
  %579 = phi ptr [ %582, %584 ], [ %565, %568 ]
  %580 = phi ptr [ %581, %584 ], [ %566, %568 ]
  %581 = getelementptr i8, ptr %580, i32 4
  %582 = getelementptr i8, ptr %579, i32 4
  %583 = icmp ult ptr %582, %40
  br i1 %583, label %584, label %593

584:                                              ; preds = %578
  %585 = load i32, ptr %581, align 1
  %586 = load i32, ptr %582, align 1
  %587 = xor i32 %586, %585
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %578, label %589

589:                                              ; preds = %584
  %590 = tail call i32 @llvm.cttz.i32(i32 %587, i1 true) #7, !range !8
  %591 = lshr i32 %590, 3
  %592 = getelementptr i8, ptr %582, i32 %591
  br label %614

593:                                              ; preds = %578, %564
  %594 = phi ptr [ %565, %564 ], [ %582, %578 ]
  %595 = phi ptr [ %566, %564 ], [ %581, %578 ]
  %596 = icmp ult ptr %594, %41
  br i1 %596, label %597, label %604

597:                                              ; preds = %593
  %598 = load i16, ptr %595, align 1
  %599 = load i16, ptr %594, align 1
  %600 = icmp eq i16 %598, %599
  br i1 %600, label %601, label %604

601:                                              ; preds = %597
  %602 = getelementptr i8, ptr %594, i32 2
  %603 = getelementptr i8, ptr %595, i32 2
  br label %604

604:                                              ; preds = %601, %597, %593
  %605 = phi ptr [ %602, %601 ], [ %594, %597 ], [ %594, %593 ]
  %606 = phi ptr [ %603, %601 ], [ %595, %597 ], [ %595, %593 ]
  %607 = icmp ult ptr %605, %6
  br i1 %607, label %608, label %614

608:                                              ; preds = %604
  %609 = load i8, ptr %606, align 1
  %610 = load i8, ptr %605, align 1
  %611 = icmp eq i8 %609, %610
  %612 = zext i1 %611 to i32
  %613 = getelementptr i8, ptr %605, i32 %612
  br label %614

614:                                              ; preds = %608, %604, %589
  %615 = phi ptr [ %592, %589 ], [ %605, %604 ], [ %613, %608 ]
  %616 = ptrtoint ptr %615 to i32
  %617 = ptrtoint ptr %565 to i32
  %618 = sub i32 %616, %617
  %619 = add i32 %554, 1
  %620 = tail call i32 @llvm.ctlz.i32(i32 %619, i1 false) #7, !range !8
  %621 = icmp ult i32 %618, -4
  br i1 %621, label %622, label %633

622:                                              ; preds = %614, %573
  %623 = phi i32 [ %577, %573 ], [ %620, %614 ]
  %624 = phi i32 [ %575, %573 ], [ %618, %614 ]
  %625 = add nuw i32 %624, 4
  %626 = xor i32 %623, -32
  %627 = mul i32 %555, 3
  %628 = add i32 %627, 2
  %629 = add i32 %628, %626
  %630 = mul i32 %625, 3
  %631 = icmp sgt i32 %630, %629
  br i1 %631, label %632, label %633

632:                                              ; preds = %622
  br label %633

633:                                              ; preds = %632, %622, %614, %558, %550
  %634 = phi i32 [ %555, %558 ], [ %555, %550 ], [ %625, %632 ], [ %555, %622 ], [ %555, %614 ]
  %635 = phi i32 [ %554, %558 ], [ 0, %550 ], [ 0, %632 ], [ %554, %622 ], [ %554, %614 ]
  %636 = phi ptr [ %553, %558 ], [ %553, %550 ], [ %556, %632 ], [ %553, %622 ], [ %553, %614 ]
  %637 = load i32, ptr %48, align 4
  switch i32 %637, label %638 [
    i32 6, label %902
    i32 5, label %768
    i32 7, label %902
  ]

638:                                              ; preds = %633
  %639 = load ptr, ptr %49, align 4
  %640 = load i32, ptr %50, align 4
  %641 = shl nuw i32 1, %640
  %642 = add i32 %641, -1
  %643 = load ptr, ptr %8, align 4
  %644 = ptrtoint ptr %556 to i32
  %645 = ptrtoint ptr %643 to i32
  %646 = sub i32 %644, %645
  %647 = load i32, ptr %22, align 4
  %648 = shl nuw i32 1, %647
  %649 = load i32, ptr %51, align 4
  %650 = sub i32 %646, %649
  %651 = icmp ugt i32 %650, %648
  %652 = sub i32 %646, %648
  %653 = load i32, ptr %28, align 4
  %654 = icmp eq i32 %653, 0
  %655 = select i1 %654, i1 %651, i1 false
  %656 = select i1 %655, i32 %652, i32 %649
  %657 = tail call i32 @llvm.usub.sat.i32(i32 %646, i32 %641) #7
  %658 = load i32, ptr %52, align 4
  %659 = shl nuw i32 1, %658
  %660 = load ptr, ptr %53, align 4
  %661 = load i32, ptr %54, align 4
  %662 = shl nsw i32 -1, %640
  %663 = xor i32 %662, -1
  %664 = icmp ult i32 %551, %646
  %665 = sub i32 32, %661
  br i1 %664, label %666, label %678

666:                                              ; preds = %666, %638
  %667 = phi i32 [ %676, %666 ], [ %551, %638 ]
  %668 = getelementptr i8, ptr %643, i32 %667
  %669 = load i32, ptr %668, align 1
  %670 = mul i32 %669, -1640531535
  %671 = lshr i32 %670, %665
  %672 = getelementptr i32, ptr %660, i32 %671
  %673 = load i32, ptr %672, align 4
  %674 = and i32 %667, %663
  %675 = getelementptr i32, ptr %639, i32 %674
  store i32 %673, ptr %675, align 4
  store i32 %667, ptr %672, align 4
  %676 = add nuw i32 %667, 1
  %677 = icmp ult i32 %676, %646
  br i1 %677, label %666, label %678

678:                                              ; preds = %666, %638
  store i32 %646, ptr %55, align 4
  %679 = load i32, ptr %556, align 1
  %680 = mul i32 %679, -1640531535
  %681 = lshr i32 %680, %665
  %682 = getelementptr i32, ptr %660, i32 %681
  %683 = load i32, ptr %682, align 4
  %684 = icmp ult i32 %683, %656
  br i1 %684, label %1057, label %685

685:                                              ; preds = %678
  %686 = icmp ugt ptr %40, %556
  %687 = add i32 %646, 2
  br label %688

688:                                              ; preds = %760, %685
  %689 = phi i32 [ 999999999, %685 ], [ %757, %760 ]
  %690 = phi i32 [ %683, %685 ], [ %764, %760 ]
  %691 = phi i32 [ 3, %685 ], [ %758, %760 ]
  %692 = phi i32 [ %659, %685 ], [ %763, %760 ]
  %693 = getelementptr i8, ptr %643, i32 %690
  %694 = getelementptr i8, ptr %693, i32 %691
  %695 = load i8, ptr %694, align 1
  %696 = getelementptr i8, ptr %556, i32 %691
  %697 = load i8, ptr %696, align 1
  %698 = icmp eq i8 %695, %697
  br i1 %698, label %699, label %756

699:                                              ; preds = %688
  br i1 %686, label %700, label %724

700:                                              ; preds = %699
  %701 = load i32, ptr %693, align 1
  %702 = xor i32 %701, %679
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %707, label %704

704:                                              ; preds = %700
  %705 = tail call i32 @llvm.cttz.i32(i32 %702, i1 true) #7, !range !8
  %706 = lshr i32 %705, 3
  br label %749

707:                                              ; preds = %713, %700
  %708 = phi ptr [ %711, %713 ], [ %556, %700 ]
  %709 = phi ptr [ %710, %713 ], [ %693, %700 ]
  %710 = getelementptr i8, ptr %709, i32 4
  %711 = getelementptr i8, ptr %708, i32 4
  %712 = icmp ult ptr %711, %40
  br i1 %712, label %713, label %724

713:                                              ; preds = %707
  %714 = load i32, ptr %710, align 1
  %715 = load i32, ptr %711, align 1
  %716 = xor i32 %715, %714
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %707, label %718

718:                                              ; preds = %713
  %719 = tail call i32 @llvm.cttz.i32(i32 %716, i1 true) #7, !range !8
  %720 = lshr i32 %719, 3
  %721 = getelementptr i8, ptr %711, i32 %720
  %722 = ptrtoint ptr %721 to i32
  %723 = sub i32 %722, %644
  br label %749

724:                                              ; preds = %707, %699
  %725 = phi ptr [ %556, %699 ], [ %711, %707 ]
  %726 = phi ptr [ %693, %699 ], [ %710, %707 ]
  %727 = icmp ult ptr %725, %41
  br i1 %727, label %728, label %735

728:                                              ; preds = %724
  %729 = load i16, ptr %726, align 1
  %730 = load i16, ptr %725, align 1
  %731 = icmp eq i16 %729, %730
  br i1 %731, label %732, label %735

732:                                              ; preds = %728
  %733 = getelementptr i8, ptr %725, i32 2
  %734 = getelementptr i8, ptr %726, i32 2
  br label %735

735:                                              ; preds = %732, %728, %724
  %736 = phi ptr [ %733, %732 ], [ %725, %728 ], [ %725, %724 ]
  %737 = phi ptr [ %734, %732 ], [ %726, %728 ], [ %726, %724 ]
  %738 = icmp ult ptr %736, %6
  br i1 %738, label %739, label %745

739:                                              ; preds = %735
  %740 = load i8, ptr %737, align 1
  %741 = load i8, ptr %736, align 1
  %742 = icmp eq i8 %740, %741
  %743 = zext i1 %742 to i32
  %744 = getelementptr i8, ptr %736, i32 %743
  br label %745

745:                                              ; preds = %739, %735
  %746 = phi ptr [ %736, %735 ], [ %744, %739 ]
  %747 = ptrtoint ptr %746 to i32
  %748 = sub i32 %747, %644
  br label %749

749:                                              ; preds = %745, %718, %704
  %750 = phi i32 [ %748, %745 ], [ %706, %704 ], [ %723, %718 ]
  %751 = icmp ugt i32 %750, %691
  br i1 %751, label %752, label %756

752:                                              ; preds = %749
  %753 = sub i32 %687, %690
  %754 = getelementptr i8, ptr %556, i32 %750
  %755 = icmp eq ptr %754, %6
  br i1 %755, label %1036, label %756

756:                                              ; preds = %752, %749, %688
  %757 = phi i32 [ %753, %752 ], [ %689, %749 ], [ %689, %688 ]
  %758 = phi i32 [ %750, %752 ], [ %691, %749 ], [ %691, %688 ]
  %759 = icmp ugt i32 %690, %657
  br i1 %759, label %760, label %1036

760:                                              ; preds = %756
  %761 = and i32 %690, %642
  %762 = getelementptr i32, ptr %639, i32 %761
  %763 = add i32 %692, -1
  %764 = load i32, ptr %762, align 4
  %765 = icmp uge i32 %764, %656
  %766 = icmp ne i32 %763, 0
  %767 = and i1 %766, %765
  br i1 %767, label %688, label %1036

768:                                              ; preds = %633
  %769 = load ptr, ptr %49, align 4
  %770 = load i32, ptr %50, align 4
  %771 = shl nuw i32 1, %770
  %772 = add i32 %771, -1
  %773 = load ptr, ptr %8, align 4
  %774 = ptrtoint ptr %556 to i32
  %775 = ptrtoint ptr %773 to i32
  %776 = sub i32 %774, %775
  %777 = load i32, ptr %22, align 4
  %778 = shl nuw i32 1, %777
  %779 = load i32, ptr %51, align 4
  %780 = sub i32 %776, %779
  %781 = icmp ugt i32 %780, %778
  %782 = sub i32 %776, %778
  %783 = load i32, ptr %28, align 4
  %784 = icmp eq i32 %783, 0
  %785 = select i1 %784, i1 %781, i1 false
  %786 = select i1 %785, i32 %782, i32 %779
  %787 = tail call i32 @llvm.usub.sat.i32(i32 %776, i32 %771) #7
  %788 = load i32, ptr %52, align 4
  %789 = shl nuw i32 1, %788
  %790 = load ptr, ptr %53, align 4
  %791 = load i32, ptr %54, align 4
  %792 = shl nsw i32 -1, %770
  %793 = xor i32 %792, -1
  %794 = icmp ult i32 %551, %776
  %795 = sub i32 64, %791
  %796 = zext i32 %795 to i64
  br i1 %794, label %797, label %810

797:                                              ; preds = %797, %768
  %798 = phi i32 [ %808, %797 ], [ %551, %768 ]
  %799 = getelementptr i8, ptr %773, i32 %798
  %800 = load i64, ptr %799, align 1
  %801 = mul i64 %800, -3523014627271114752
  %802 = lshr i64 %801, %796
  %803 = trunc i64 %802 to i32
  %804 = getelementptr i32, ptr %790, i32 %803
  %805 = load i32, ptr %804, align 4
  %806 = and i32 %798, %793
  %807 = getelementptr i32, ptr %769, i32 %806
  store i32 %805, ptr %807, align 4
  store i32 %798, ptr %804, align 4
  %808 = add nuw i32 %798, 1
  %809 = icmp ult i32 %808, %776
  br i1 %809, label %797, label %810

810:                                              ; preds = %797, %768
  store i32 %776, ptr %55, align 4
  %811 = load i64, ptr %556, align 1
  %812 = mul i64 %811, -3523014627271114752
  %813 = lshr i64 %812, %796
  %814 = trunc i64 %813 to i32
  %815 = getelementptr i32, ptr %790, i32 %814
  %816 = load i32, ptr %815, align 4
  %817 = icmp ult i32 %816, %786
  %818 = trunc i64 %811 to i32
  br i1 %817, label %1057, label %819

819:                                              ; preds = %810
  %820 = icmp ugt ptr %40, %556
  %821 = add i32 %776, 2
  br label %822

822:                                              ; preds = %894, %819
  %823 = phi i32 [ 999999999, %819 ], [ %891, %894 ]
  %824 = phi i32 [ %816, %819 ], [ %898, %894 ]
  %825 = phi i32 [ 3, %819 ], [ %892, %894 ]
  %826 = phi i32 [ %789, %819 ], [ %897, %894 ]
  %827 = getelementptr i8, ptr %773, i32 %824
  %828 = getelementptr i8, ptr %827, i32 %825
  %829 = load i8, ptr %828, align 1
  %830 = getelementptr i8, ptr %556, i32 %825
  %831 = load i8, ptr %830, align 1
  %832 = icmp eq i8 %829, %831
  br i1 %832, label %833, label %890

833:                                              ; preds = %822
  br i1 %820, label %834, label %858

834:                                              ; preds = %833
  %835 = load i32, ptr %827, align 1
  %836 = xor i32 %835, %818
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %841, label %838

838:                                              ; preds = %834
  %839 = tail call i32 @llvm.cttz.i32(i32 %836, i1 true) #7, !range !8
  %840 = lshr i32 %839, 3
  br label %883

841:                                              ; preds = %847, %834
  %842 = phi ptr [ %845, %847 ], [ %556, %834 ]
  %843 = phi ptr [ %844, %847 ], [ %827, %834 ]
  %844 = getelementptr i8, ptr %843, i32 4
  %845 = getelementptr i8, ptr %842, i32 4
  %846 = icmp ult ptr %845, %40
  br i1 %846, label %847, label %858

847:                                              ; preds = %841
  %848 = load i32, ptr %844, align 1
  %849 = load i32, ptr %845, align 1
  %850 = xor i32 %849, %848
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %841, label %852

852:                                              ; preds = %847
  %853 = tail call i32 @llvm.cttz.i32(i32 %850, i1 true) #7, !range !8
  %854 = lshr i32 %853, 3
  %855 = getelementptr i8, ptr %845, i32 %854
  %856 = ptrtoint ptr %855 to i32
  %857 = sub i32 %856, %774
  br label %883

858:                                              ; preds = %841, %833
  %859 = phi ptr [ %556, %833 ], [ %845, %841 ]
  %860 = phi ptr [ %827, %833 ], [ %844, %841 ]
  %861 = icmp ult ptr %859, %41
  br i1 %861, label %862, label %869

862:                                              ; preds = %858
  %863 = load i16, ptr %860, align 1
  %864 = load i16, ptr %859, align 1
  %865 = icmp eq i16 %863, %864
  br i1 %865, label %866, label %869

866:                                              ; preds = %862
  %867 = getelementptr i8, ptr %859, i32 2
  %868 = getelementptr i8, ptr %860, i32 2
  br label %869

869:                                              ; preds = %866, %862, %858
  %870 = phi ptr [ %867, %866 ], [ %859, %862 ], [ %859, %858 ]
  %871 = phi ptr [ %868, %866 ], [ %860, %862 ], [ %860, %858 ]
  %872 = icmp ult ptr %870, %6
  br i1 %872, label %873, label %879

873:                                              ; preds = %869
  %874 = load i8, ptr %871, align 1
  %875 = load i8, ptr %870, align 1
  %876 = icmp eq i8 %874, %875
  %877 = zext i1 %876 to i32
  %878 = getelementptr i8, ptr %870, i32 %877
  br label %879

879:                                              ; preds = %873, %869
  %880 = phi ptr [ %870, %869 ], [ %878, %873 ]
  %881 = ptrtoint ptr %880 to i32
  %882 = sub i32 %881, %774
  br label %883

883:                                              ; preds = %879, %852, %838
  %884 = phi i32 [ %882, %879 ], [ %840, %838 ], [ %857, %852 ]
  %885 = icmp ugt i32 %884, %825
  br i1 %885, label %886, label %890

886:                                              ; preds = %883
  %887 = sub i32 %821, %824
  %888 = getelementptr i8, ptr %556, i32 %884
  %889 = icmp eq ptr %888, %6
  br i1 %889, label %1036, label %890

890:                                              ; preds = %886, %883, %822
  %891 = phi i32 [ %887, %886 ], [ %823, %883 ], [ %823, %822 ]
  %892 = phi i32 [ %884, %886 ], [ %825, %883 ], [ %825, %822 ]
  %893 = icmp ugt i32 %824, %787
  br i1 %893, label %894, label %1036

894:                                              ; preds = %890
  %895 = and i32 %824, %772
  %896 = getelementptr i32, ptr %769, i32 %895
  %897 = add i32 %826, -1
  %898 = load i32, ptr %896, align 4
  %899 = icmp uge i32 %898, %786
  %900 = icmp ne i32 %897, 0
  %901 = and i1 %900, %899
  br i1 %901, label %822, label %1036

902:                                              ; preds = %633, %633
  %903 = load ptr, ptr %49, align 4
  %904 = load i32, ptr %50, align 4
  %905 = shl nuw i32 1, %904
  %906 = add i32 %905, -1
  %907 = load ptr, ptr %8, align 4
  %908 = ptrtoint ptr %556 to i32
  %909 = ptrtoint ptr %907 to i32
  %910 = sub i32 %908, %909
  %911 = load i32, ptr %22, align 4
  %912 = shl nuw i32 1, %911
  %913 = load i32, ptr %51, align 4
  %914 = sub i32 %910, %913
  %915 = icmp ugt i32 %914, %912
  %916 = sub i32 %910, %912
  %917 = load i32, ptr %28, align 4
  %918 = icmp eq i32 %917, 0
  %919 = select i1 %918, i1 %915, i1 false
  %920 = select i1 %919, i32 %916, i32 %913
  %921 = tail call i32 @llvm.usub.sat.i32(i32 %910, i32 %905) #7
  %922 = load i32, ptr %52, align 4
  %923 = shl nuw i32 1, %922
  %924 = load ptr, ptr %53, align 4
  %925 = load i32, ptr %54, align 4
  %926 = shl nsw i32 -1, %904
  %927 = xor i32 %926, -1
  %928 = icmp ult i32 %551, %910
  %929 = sub i32 64, %925
  %930 = zext i32 %929 to i64
  br i1 %928, label %931, label %944

931:                                              ; preds = %931, %902
  %932 = phi i32 [ %942, %931 ], [ %551, %902 ]
  %933 = getelementptr i8, ptr %907, i32 %932
  %934 = load i64, ptr %933, align 1
  %935 = mul i64 %934, -3523014627193847808
  %936 = lshr i64 %935, %930
  %937 = trunc i64 %936 to i32
  %938 = getelementptr i32, ptr %924, i32 %937
  %939 = load i32, ptr %938, align 4
  %940 = and i32 %932, %927
  %941 = getelementptr i32, ptr %903, i32 %940
  store i32 %939, ptr %941, align 4
  store i32 %932, ptr %938, align 4
  %942 = add nuw i32 %932, 1
  %943 = icmp ult i32 %942, %910
  br i1 %943, label %931, label %944

944:                                              ; preds = %931, %902
  store i32 %910, ptr %55, align 4
  %945 = load i64, ptr %556, align 1
  %946 = mul i64 %945, -3523014627193847808
  %947 = lshr i64 %946, %930
  %948 = trunc i64 %947 to i32
  %949 = getelementptr i32, ptr %924, i32 %948
  %950 = load i32, ptr %949, align 4
  %951 = icmp ult i32 %950, %920
  %952 = trunc i64 %945 to i32
  br i1 %951, label %1057, label %953

953:                                              ; preds = %944
  %954 = icmp ugt ptr %40, %556
  %955 = add i32 %910, 2
  br label %956

956:                                              ; preds = %1028, %953
  %957 = phi i32 [ 999999999, %953 ], [ %1025, %1028 ]
  %958 = phi i32 [ %950, %953 ], [ %1032, %1028 ]
  %959 = phi i32 [ 3, %953 ], [ %1026, %1028 ]
  %960 = phi i32 [ %923, %953 ], [ %1031, %1028 ]
  %961 = getelementptr i8, ptr %907, i32 %958
  %962 = getelementptr i8, ptr %961, i32 %959
  %963 = load i8, ptr %962, align 1
  %964 = getelementptr i8, ptr %556, i32 %959
  %965 = load i8, ptr %964, align 1
  %966 = icmp eq i8 %963, %965
  br i1 %966, label %967, label %1024

967:                                              ; preds = %956
  br i1 %954, label %968, label %992

968:                                              ; preds = %967
  %969 = load i32, ptr %961, align 1
  %970 = xor i32 %969, %952
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %975, label %972

972:                                              ; preds = %968
  %973 = tail call i32 @llvm.cttz.i32(i32 %970, i1 true) #7, !range !8
  %974 = lshr i32 %973, 3
  br label %1017

975:                                              ; preds = %981, %968
  %976 = phi ptr [ %979, %981 ], [ %556, %968 ]
  %977 = phi ptr [ %978, %981 ], [ %961, %968 ]
  %978 = getelementptr i8, ptr %977, i32 4
  %979 = getelementptr i8, ptr %976, i32 4
  %980 = icmp ult ptr %979, %40
  br i1 %980, label %981, label %992

981:                                              ; preds = %975
  %982 = load i32, ptr %978, align 1
  %983 = load i32, ptr %979, align 1
  %984 = xor i32 %983, %982
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %975, label %986

986:                                              ; preds = %981
  %987 = tail call i32 @llvm.cttz.i32(i32 %984, i1 true) #7, !range !8
  %988 = lshr i32 %987, 3
  %989 = getelementptr i8, ptr %979, i32 %988
  %990 = ptrtoint ptr %989 to i32
  %991 = sub i32 %990, %908
  br label %1017

992:                                              ; preds = %975, %967
  %993 = phi ptr [ %556, %967 ], [ %979, %975 ]
  %994 = phi ptr [ %961, %967 ], [ %978, %975 ]
  %995 = icmp ult ptr %993, %41
  br i1 %995, label %996, label %1003

996:                                              ; preds = %992
  %997 = load i16, ptr %994, align 1
  %998 = load i16, ptr %993, align 1
  %999 = icmp eq i16 %997, %998
  br i1 %999, label %1000, label %1003

1000:                                             ; preds = %996
  %1001 = getelementptr i8, ptr %993, i32 2
  %1002 = getelementptr i8, ptr %994, i32 2
  br label %1003

1003:                                             ; preds = %1000, %996, %992
  %1004 = phi ptr [ %1001, %1000 ], [ %993, %996 ], [ %993, %992 ]
  %1005 = phi ptr [ %1002, %1000 ], [ %994, %996 ], [ %994, %992 ]
  %1006 = icmp ult ptr %1004, %6
  br i1 %1006, label %1007, label %1013

1007:                                             ; preds = %1003
  %1008 = load i8, ptr %1005, align 1
  %1009 = load i8, ptr %1004, align 1
  %1010 = icmp eq i8 %1008, %1009
  %1011 = zext i1 %1010 to i32
  %1012 = getelementptr i8, ptr %1004, i32 %1011
  br label %1013

1013:                                             ; preds = %1007, %1003
  %1014 = phi ptr [ %1004, %1003 ], [ %1012, %1007 ]
  %1015 = ptrtoint ptr %1014 to i32
  %1016 = sub i32 %1015, %908
  br label %1017

1017:                                             ; preds = %1013, %986, %972
  %1018 = phi i32 [ %1016, %1013 ], [ %974, %972 ], [ %991, %986 ]
  %1019 = icmp ugt i32 %1018, %959
  br i1 %1019, label %1020, label %1024

1020:                                             ; preds = %1017
  %1021 = sub i32 %955, %958
  %1022 = getelementptr i8, ptr %556, i32 %1018
  %1023 = icmp eq ptr %1022, %6
  br i1 %1023, label %1036, label %1024

1024:                                             ; preds = %1020, %1017, %956
  %1025 = phi i32 [ %1021, %1020 ], [ %957, %1017 ], [ %957, %956 ]
  %1026 = phi i32 [ %1018, %1020 ], [ %959, %1017 ], [ %959, %956 ]
  %1027 = icmp ugt i32 %958, %921
  br i1 %1027, label %1028, label %1036

1028:                                             ; preds = %1024
  %1029 = and i32 %958, %906
  %1030 = getelementptr i32, ptr %903, i32 %1029
  %1031 = add i32 %960, -1
  %1032 = load i32, ptr %1030, align 4
  %1033 = icmp uge i32 %1032, %920
  %1034 = icmp ne i32 %1031, 0
  %1035 = and i1 %1034, %1033
  br i1 %1035, label %956, label %1036

1036:                                             ; preds = %1028, %1024, %1020, %894, %890, %886, %760, %756, %752
  %1037 = phi i32 [ %646, %760 ], [ %646, %756 ], [ %646, %752 ], [ %910, %1028 ], [ %910, %1024 ], [ %910, %1020 ], [ %776, %894 ], [ %776, %890 ], [ %776, %886 ]
  %1038 = phi i32 [ %753, %752 ], [ %757, %756 ], [ %757, %760 ], [ %1021, %1020 ], [ %1025, %1024 ], [ %1025, %1028 ], [ %887, %886 ], [ %891, %890 ], [ %891, %894 ]
  %1039 = phi i32 [ %750, %752 ], [ %758, %756 ], [ %758, %760 ], [ %1018, %1020 ], [ %1026, %1024 ], [ %1026, %1028 ], [ %884, %886 ], [ %892, %890 ], [ %892, %894 ]
  %1040 = icmp ugt i32 %1039, 3
  br i1 %1040, label %1041, label %1057

1041:                                             ; preds = %1036
  %1042 = add i32 %635, 1
  %1043 = tail call i32 @llvm.ctlz.i32(i32 %1042, i1 false) #7, !range !8
  %1044 = xor i32 %1043, -32
  %1045 = add i32 %1038, 1
  %1046 = tail call i32 @llvm.ctlz.i32(i32 %1045, i1 false) #7, !range !8
  %1047 = xor i32 %1046, -32
  %1048 = shl i32 %634, 2
  %1049 = add i32 %1048, 5
  %1050 = add i32 %1049, %1044
  %1051 = shl i32 %1039, 2
  %1052 = or i32 %1051, 1
  %1053 = add i32 %1052, %1047
  %1054 = icmp sgt i32 %1053, %1050
  br i1 %1054, label %1055, label %1057

1055:                                             ; preds = %1041
  %1056 = icmp ult ptr %556, %7
  br i1 %1056, label %550, label %1057

1057:                                             ; preds = %1055, %1041, %1036, %944, %810, %678, %545
  %1058 = phi i32 [ %536, %545 ], [ %634, %944 ], [ %634, %810 ], [ %634, %678 ], [ %634, %1036 ], [ %634, %1041 ], [ %1039, %1055 ]
  %1059 = phi i32 [ %548, %545 ], [ %635, %944 ], [ %635, %810 ], [ %635, %678 ], [ %635, %1036 ], [ %635, %1041 ], [ %1038, %1055 ]
  %1060 = phi ptr [ %547, %545 ], [ %636, %944 ], [ %636, %810 ], [ %636, %678 ], [ %636, %1036 ], [ %636, %1041 ], [ %556, %1055 ]
  %1061 = icmp eq i32 %1059, 0
  br i1 %1061, label %1087, label %1062

1062:                                             ; preds = %1057
  %1063 = sub i32 2, %1059
  %1064 = icmp ugt ptr %1060, %58
  %1065 = getelementptr i8, ptr %1060, i32 %1063
  %1066 = icmp ugt ptr %1065, %12
  %1067 = and i1 %1064, %1066
  br i1 %1067, label %1068, label %1083

1068:                                             ; preds = %1077, %1062
  %1069 = phi ptr [ %1072, %1077 ], [ %1060, %1062 ]
  %1070 = phi i32 [ %1078, %1077 ], [ %1058, %1062 ]
  %1071 = getelementptr i8, ptr %1069, i32 %1063
  %1072 = getelementptr i8, ptr %1069, i32 -1
  %1073 = load i8, ptr %1072, align 1
  %1074 = getelementptr i8, ptr %1071, i32 -1
  %1075 = load i8, ptr %1074, align 1
  %1076 = icmp eq i8 %1073, %1075
  br i1 %1076, label %1077, label %1083

1077:                                             ; preds = %1068
  %1078 = add i32 %1070, 1
  %1079 = icmp ugt ptr %1072, %58
  %1080 = getelementptr i8, ptr %1072, i32 %1063
  %1081 = icmp ugt ptr %1080, %12
  %1082 = and i1 %1079, %1081
  br i1 %1082, label %1068, label %1083

1083:                                             ; preds = %1077, %1068, %1062
  %1084 = phi i32 [ %1058, %1062 ], [ %1070, %1068 ], [ %1078, %1077 ]
  %1085 = phi ptr [ %1060, %1062 ], [ %1069, %1068 ], [ %1072, %1077 ]
  %1086 = add i32 %1059, -2
  br label %1087

1087:                                             ; preds = %1083, %1057
  %1088 = phi i32 [ %59, %1083 ], [ %60, %1057 ]
  %1089 = phi i32 [ %1086, %1083 ], [ %59, %1057 ]
  %1090 = phi i32 [ %1084, %1083 ], [ %1058, %1057 ]
  %1091 = phi ptr [ %1085, %1083 ], [ %1060, %1057 ]
  %1092 = ptrtoint ptr %1091 to i32
  %1093 = ptrtoint ptr %58 to i32
  %1094 = sub i32 %1092, %1093
  %1095 = add i32 %1090, -3
  %1096 = getelementptr i8, ptr %58, i32 %1094
  %1097 = icmp ugt ptr %1096, %42
  %1098 = load ptr, ptr %43, align 4
  br i1 %1097, label %1120, label %1099

1099:                                             ; preds = %1087
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1098, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %1100 = icmp ugt i32 %1094, 16
  %1101 = load ptr, ptr %43, align 4
  br i1 %1100, label %1104, label %1102

1102:                                             ; preds = %1099
  %1103 = getelementptr i8, ptr %1101, i32 %1094
  store ptr %1103, ptr %43, align 4
  br label %1163

1104:                                             ; preds = %1099
  %1105 = getelementptr i8, ptr %1101, i32 16
  %1106 = getelementptr i8, ptr %58, i32 16
  %1107 = add i32 %1094, -16
  %1108 = getelementptr i8, ptr %1101, i32 %1094
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1105, ptr noundef align 1 dereferenceable(16) %1106, i32 16, i1 false) #7
  %1109 = icmp slt i32 %1107, 17
  br i1 %1109, label %1152, label %1110

1110:                                             ; preds = %1104
  %1111 = getelementptr i8, ptr %1101, i32 32
  br label %1112

1112:                                             ; preds = %1112, %1110
  %1113 = phi ptr [ %1106, %1110 ], [ %1117, %1112 ]
  %1114 = phi ptr [ %1111, %1110 ], [ %1118, %1112 ]
  %1115 = getelementptr i8, ptr %1113, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1114, ptr noundef align 1 dereferenceable(16) %1115, i32 16, i1 false) #7
  %1116 = getelementptr i8, ptr %1114, i32 16
  %1117 = getelementptr i8, ptr %1113, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1116, ptr noundef align 1 dereferenceable(16) %1117, i32 16, i1 false) #7
  %1118 = getelementptr i8, ptr %1114, i32 32
  %1119 = icmp ult ptr %1118, %1108
  br i1 %1119, label %1112, label %1152

1120:                                             ; preds = %1087
  %1121 = ptrtoint ptr %1096 to i32
  %1122 = icmp ult ptr %42, %58
  br i1 %1122, label %1137, label %1123

1123:                                             ; preds = %1120
  %1124 = sub i32 %44, %1093
  %1125 = getelementptr i8, ptr %1098, i32 %1124
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1098, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %1126 = icmp slt i32 %1124, 17
  br i1 %1126, label %1137, label %1127

1127:                                             ; preds = %1123
  %1128 = getelementptr i8, ptr %1098, i32 16
  br label %1129

1129:                                             ; preds = %1129, %1127
  %1130 = phi ptr [ %58, %1127 ], [ %1134, %1129 ]
  %1131 = phi ptr [ %1128, %1127 ], [ %1135, %1129 ]
  %1132 = getelementptr i8, ptr %1130, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1131, ptr noundef align 1 dereferenceable(16) %1132, i32 16, i1 false) #7
  %1133 = getelementptr i8, ptr %1131, i32 16
  %1134 = getelementptr i8, ptr %1130, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1133, ptr noundef align 1 dereferenceable(16) %1134, i32 16, i1 false) #7
  %1135 = getelementptr i8, ptr %1131, i32 32
  %1136 = icmp ult ptr %1135, %1125
  br i1 %1136, label %1129, label %1137

1137:                                             ; preds = %1129, %1123, %1120
  %1138 = phi ptr [ %42, %1123 ], [ %58, %1120 ], [ %42, %1129 ]
  %1139 = phi ptr [ %1125, %1123 ], [ %1098, %1120 ], [ %1125, %1129 ]
  %1140 = icmp ult ptr %1138, %1096
  br i1 %1140, label %1141, label %1152

1141:                                             ; preds = %1137
  %1142 = ptrtoint ptr %1138 to i32
  %1143 = sub i32 %1121, %1142
  %1144 = getelementptr i8, ptr %1138, i32 %1143
  br label %1145

1145:                                             ; preds = %1145, %1141
  %1146 = phi ptr [ %1150, %1145 ], [ %1139, %1141 ]
  %1147 = phi ptr [ %1148, %1145 ], [ %1138, %1141 ]
  %1148 = getelementptr i8, ptr %1147, i32 1
  %1149 = load i8, ptr %1147, align 1
  %1150 = getelementptr i8, ptr %1146, i32 1
  store i8 %1149, ptr %1146, align 1
  %1151 = icmp eq ptr %1148, %1144
  br i1 %1151, label %1152, label %1145

1152:                                             ; preds = %1145, %1137, %1112, %1104
  %1153 = load ptr, ptr %43, align 4
  %1154 = getelementptr i8, ptr %1153, i32 %1094
  store ptr %1154, ptr %43, align 4
  %1155 = icmp ugt i32 %1094, 65535
  br i1 %1155, label %1156, label %1163

1156:                                             ; preds = %1152
  store i32 1, ptr %45, align 4
  %1157 = load ptr, ptr %46, align 4
  %1158 = load ptr, ptr %1, align 4
  %1159 = ptrtoint ptr %1157 to i32
  %1160 = ptrtoint ptr %1158 to i32
  %1161 = sub i32 %1159, %1160
  %1162 = ashr exact i32 %1161, 3
  store i32 %1162, ptr %47, align 4
  br label %1163

1163:                                             ; preds = %1156, %1152, %1102
  %1164 = trunc i32 %1094 to i16
  %1165 = load ptr, ptr %46, align 4
  %1166 = getelementptr inbounds %struct.seqDef_s, ptr %1165, i32 0, i32 1
  store i16 %1164, ptr %1166, align 4
  %1167 = add i32 %1059, 1
  %1168 = load ptr, ptr %46, align 4
  store i32 %1167, ptr %1168, align 4
  %1169 = icmp ugt i32 %1095, 65535
  br i1 %1169, label %1172, label %1170

1170:                                             ; preds = %1163
  %1171 = load ptr, ptr %46, align 4
  br label %1179

1172:                                             ; preds = %1163
  store i32 2, ptr %45, align 4
  %1173 = load ptr, ptr %46, align 4
  %1174 = load ptr, ptr %1, align 4
  %1175 = ptrtoint ptr %1173 to i32
  %1176 = ptrtoint ptr %1174 to i32
  %1177 = sub i32 %1175, %1176
  %1178 = ashr exact i32 %1177, 3
  store i32 %1178, ptr %47, align 4
  br label %1179

1179:                                             ; preds = %1172, %1170
  %1180 = phi ptr [ %1171, %1170 ], [ %1173, %1172 ]
  %1181 = trunc i32 %1095 to i16
  %1182 = getelementptr inbounds %struct.seqDef_s, ptr %1180, i32 0, i32 2
  store i16 %1181, ptr %1182, align 2
  %1183 = load ptr, ptr %46, align 4
  %1184 = getelementptr %struct.seqDef_s, ptr %1183, i32 1
  store ptr %1184, ptr %46, align 4
  %1185 = getelementptr i8, ptr %1091, i32 %1090
  %1186 = icmp ule ptr %1185, %7
  %1187 = icmp ne i32 %1088, 0
  %1188 = and i1 %1187, %1186
  br i1 %1188, label %1189, label %1287

1189:                                             ; preds = %1277, %1179
  %1190 = phi ptr [ %1282, %1277 ], [ %1184, %1179 ]
  %1191 = phi ptr [ %1283, %1277 ], [ %1185, %1179 ]
  %1192 = phi i32 [ %1193, %1277 ], [ %1089, %1179 ]
  %1193 = phi i32 [ %1192, %1277 ], [ %1088, %1179 ]
  %1194 = load i32, ptr %1191, align 1
  %1195 = sub i32 0, %1193
  %1196 = getelementptr i8, ptr %1191, i32 %1195
  %1197 = load i32, ptr %1196, align 1
  %1198 = icmp eq i32 %1194, %1197
  br i1 %1198, label %1199, label %1287

1199:                                             ; preds = %1189
  %1200 = getelementptr i8, ptr %1191, i32 4
  %1201 = getelementptr i8, ptr %1200, i32 %1195
  %1202 = icmp ugt ptr %40, %1200
  br i1 %1202, label %1203, label %1229

1203:                                             ; preds = %1199
  %1204 = load i32, ptr %1201, align 1
  %1205 = load i32, ptr %1200, align 1
  %1206 = xor i32 %1205, %1204
  %1207 = icmp eq i32 %1206, 0
  br i1 %1207, label %1211, label %1208

1208:                                             ; preds = %1203
  %1209 = tail call i32 @llvm.cttz.i32(i32 %1206, i1 true) #7, !range !8
  %1210 = lshr i32 %1209, 3
  br label %1255

1211:                                             ; preds = %1217, %1203
  %1212 = phi ptr [ %1215, %1217 ], [ %1200, %1203 ]
  %1213 = phi ptr [ %1214, %1217 ], [ %1201, %1203 ]
  %1214 = getelementptr i8, ptr %1213, i32 4
  %1215 = getelementptr i8, ptr %1212, i32 4
  %1216 = icmp ult ptr %1215, %40
  br i1 %1216, label %1217, label %1229

1217:                                             ; preds = %1211
  %1218 = load i32, ptr %1214, align 1
  %1219 = load i32, ptr %1215, align 1
  %1220 = xor i32 %1219, %1218
  %1221 = icmp eq i32 %1220, 0
  br i1 %1221, label %1211, label %1222

1222:                                             ; preds = %1217
  %1223 = tail call i32 @llvm.cttz.i32(i32 %1220, i1 true) #7, !range !8
  %1224 = lshr i32 %1223, 3
  %1225 = getelementptr i8, ptr %1215, i32 %1224
  %1226 = ptrtoint ptr %1225 to i32
  %1227 = ptrtoint ptr %1200 to i32
  %1228 = sub i32 %1226, %1227
  br label %1255

1229:                                             ; preds = %1211, %1199
  %1230 = phi ptr [ %1200, %1199 ], [ %1215, %1211 ]
  %1231 = phi ptr [ %1201, %1199 ], [ %1214, %1211 ]
  %1232 = icmp ult ptr %1230, %41
  br i1 %1232, label %1233, label %1240

1233:                                             ; preds = %1229
  %1234 = load i16, ptr %1231, align 1
  %1235 = load i16, ptr %1230, align 1
  %1236 = icmp eq i16 %1234, %1235
  br i1 %1236, label %1237, label %1240

1237:                                             ; preds = %1233
  %1238 = getelementptr i8, ptr %1230, i32 2
  %1239 = getelementptr i8, ptr %1231, i32 2
  br label %1240

1240:                                             ; preds = %1237, %1233, %1229
  %1241 = phi ptr [ %1238, %1237 ], [ %1230, %1233 ], [ %1230, %1229 ]
  %1242 = phi ptr [ %1239, %1237 ], [ %1231, %1233 ], [ %1231, %1229 ]
  %1243 = icmp ult ptr %1241, %6
  br i1 %1243, label %1244, label %1250

1244:                                             ; preds = %1240
  %1245 = load i8, ptr %1242, align 1
  %1246 = load i8, ptr %1241, align 1
  %1247 = icmp eq i8 %1245, %1246
  %1248 = zext i1 %1247 to i32
  %1249 = getelementptr i8, ptr %1241, i32 %1248
  br label %1250

1250:                                             ; preds = %1244, %1240
  %1251 = phi ptr [ %1241, %1240 ], [ %1249, %1244 ]
  %1252 = ptrtoint ptr %1251 to i32
  %1253 = ptrtoint ptr %1200 to i32
  %1254 = sub i32 %1252, %1253
  br label %1255

1255:                                             ; preds = %1250, %1222, %1208
  %1256 = phi i32 [ %1254, %1250 ], [ %1210, %1208 ], [ %1228, %1222 ]
  %1257 = add i32 %1256, 4
  %1258 = add i32 %1256, 1
  %1259 = icmp ugt ptr %1191, %42
  br i1 %1259, label %1263, label %1260

1260:                                             ; preds = %1255
  %1261 = load ptr, ptr %43, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1261, ptr noundef align 1 dereferenceable(16) %1191, i32 16, i1 false) #7
  %1262 = load ptr, ptr %46, align 4
  br label %1263

1263:                                             ; preds = %1260, %1255
  %1264 = phi ptr [ %1190, %1255 ], [ %1262, %1260 ]
  %1265 = getelementptr inbounds %struct.seqDef_s, ptr %1264, i32 0, i32 1
  store i16 0, ptr %1265, align 4
  %1266 = load ptr, ptr %46, align 4
  store i32 1, ptr %1266, align 4
  %1267 = icmp ugt i32 %1258, 65535
  br i1 %1267, label %1270, label %1268

1268:                                             ; preds = %1263
  %1269 = load ptr, ptr %46, align 4
  br label %1277

1270:                                             ; preds = %1263
  store i32 2, ptr %45, align 4
  %1271 = load ptr, ptr %46, align 4
  %1272 = load ptr, ptr %1, align 4
  %1273 = ptrtoint ptr %1271 to i32
  %1274 = ptrtoint ptr %1272 to i32
  %1275 = sub i32 %1273, %1274
  %1276 = ashr exact i32 %1275, 3
  store i32 %1276, ptr %47, align 4
  br label %1277

1277:                                             ; preds = %1270, %1268
  %1278 = phi ptr [ %1269, %1268 ], [ %1271, %1270 ]
  %1279 = trunc i32 %1258 to i16
  %1280 = getelementptr inbounds %struct.seqDef_s, ptr %1278, i32 0, i32 2
  store i16 %1279, ptr %1280, align 2
  %1281 = load ptr, ptr %46, align 4
  %1282 = getelementptr %struct.seqDef_s, ptr %1281, i32 1
  store ptr %1282, ptr %46, align 4
  %1283 = getelementptr i8, ptr %1191, i32 %1257
  %1284 = icmp ule ptr %1283, %7
  %1285 = icmp ne i32 %1192, 0
  %1286 = and i1 %1285, %1284
  br i1 %1286, label %1189, label %1287

1287:                                             ; preds = %1277, %1189, %1179, %538
  %1288 = phi i32 [ %60, %538 ], [ %1088, %1179 ], [ %1192, %1277 ], [ %1193, %1189 ]
  %1289 = phi i32 [ %59, %538 ], [ %1089, %1179 ], [ %1193, %1277 ], [ %1192, %1189 ]
  %1290 = phi ptr [ %58, %538 ], [ %1185, %1179 ], [ %1283, %1277 ], [ %1191, %1189 ]
  %1291 = phi ptr [ %544, %538 ], [ %1185, %1179 ], [ %1283, %1277 ], [ %1191, %1189 ]
  %1292 = icmp ult ptr %1291, %7
  br i1 %1292, label %56, label %1293

1293:                                             ; preds = %1287, %5
  %1294 = phi ptr [ %3, %5 ], [ %1290, %1287 ]
  %1295 = phi i32 [ %35, %5 ], [ %1288, %1287 ]
  %1296 = phi i32 [ %37, %5 ], [ %1289, %1287 ]
  %1297 = ptrtoint ptr %1294 to i32
  %1298 = select i1 %34, i32 %15, i32 0
  %1299 = select i1 %36, i32 %13, i32 %1298
  %1300 = icmp eq i32 %1296, 0
  %1301 = select i1 %1300, i32 %1299, i32 %1296
  store i32 %1301, ptr %2, align 4
  %1302 = icmp eq i32 %1295, 0
  %1303 = select i1 %1302, i32 %1299, i32 %1295
  store i32 %1303, ptr %14, align 4
  %1304 = ptrtoint ptr %6 to i32
  %1305 = sub i32 %1304, %1297
  ret i32 %1305
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_greedy(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = load i32, ptr %2, align 4
  %14 = getelementptr i32, ptr %2, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = icmp eq ptr %12, %3
  %17 = zext i1 %16 to i32
  %18 = getelementptr i8, ptr %3, i32 %17
  %19 = ptrtoint ptr %18 to i32
  %20 = ptrtoint ptr %9 to i32
  %21 = sub i32 %19, %20
  %22 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %23 = load i32, ptr %22, align 4
  %24 = shl nuw i32 1, %23
  %25 = sub i32 %21, %11
  %26 = icmp ugt i32 %25, %24
  %27 = sub i32 %21, %24
  %28 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %29 = load i32, ptr %28, align 4
  %30 = icmp eq i32 %29, 0
  %31 = select i1 %30, i1 %26, i1 false
  %32 = select i1 %31, i32 %27, i32 %11
  %33 = sub i32 %21, %32
  %34 = icmp ugt i32 %15, %33
  %35 = select i1 %34, i32 0, i32 %15
  %36 = icmp ugt i32 %13, %33
  %37 = select i1 %36, i32 0, i32 %13
  %38 = icmp ult ptr %18, %7
  br i1 %38, label %39, label %778

39:                                               ; preds = %5
  %40 = getelementptr i8, ptr %6, i32 -3
  %41 = getelementptr i8, ptr %6, i32 -1
  %42 = getelementptr i8, ptr %6, i32 -32
  %43 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %44 = ptrtoint ptr %42 to i32
  %45 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %48 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %49 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %50 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %51 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %52 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %53 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %54 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %55 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %56

56:                                               ; preds = %772, %39
  %57 = phi ptr [ %18, %39 ], [ %776, %772 ]
  %58 = phi ptr [ %3, %39 ], [ %775, %772 ]
  %59 = phi i32 [ %37, %39 ], [ %774, %772 ]
  %60 = phi i32 [ %35, %39 ], [ %773, %772 ]
  %61 = sub i32 0, %59
  %62 = getelementptr i8, ptr %57, i32 1
  %63 = icmp ne i32 %59, 0
  %64 = getelementptr i8, ptr %62, i32 %61
  %65 = load i32, ptr %64, align 1
  %66 = load i32, ptr %62, align 1
  %67 = icmp eq i32 %65, %66
  %68 = and i1 %63, %67
  br i1 %68, label %69, label %128

69:                                               ; preds = %56
  %70 = getelementptr i8, ptr %57, i32 5
  %71 = getelementptr i8, ptr %70, i32 %61
  %72 = icmp ugt ptr %40, %70
  br i1 %72, label %73, label %99

73:                                               ; preds = %69
  %74 = load i32, ptr %71, align 1
  %75 = load i32, ptr %70, align 1
  %76 = xor i32 %75, %74
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = tail call i32 @llvm.cttz.i32(i32 %76, i1 true) #7, !range !8
  %80 = lshr i32 %79, 3
  br label %125

81:                                               ; preds = %87, %73
  %82 = phi ptr [ %85, %87 ], [ %70, %73 ]
  %83 = phi ptr [ %84, %87 ], [ %71, %73 ]
  %84 = getelementptr i8, ptr %83, i32 4
  %85 = getelementptr i8, ptr %82, i32 4
  %86 = icmp ult ptr %85, %40
  br i1 %86, label %87, label %99

87:                                               ; preds = %81
  %88 = load i32, ptr %84, align 1
  %89 = load i32, ptr %85, align 1
  %90 = xor i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %81, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !8
  %94 = lshr i32 %93, 3
  %95 = getelementptr i8, ptr %85, i32 %94
  %96 = ptrtoint ptr %95 to i32
  %97 = ptrtoint ptr %70 to i32
  %98 = sub i32 %96, %97
  br label %125

99:                                               ; preds = %81, %69
  %100 = phi ptr [ %70, %69 ], [ %85, %81 ]
  %101 = phi ptr [ %71, %69 ], [ %84, %81 ]
  %102 = icmp ult ptr %100, %41
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = load i16, ptr %101, align 1
  %105 = load i16, ptr %100, align 1
  %106 = icmp eq i16 %104, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %103
  %108 = getelementptr i8, ptr %100, i32 2
  %109 = getelementptr i8, ptr %101, i32 2
  br label %110

110:                                              ; preds = %107, %103, %99
  %111 = phi ptr [ %108, %107 ], [ %100, %103 ], [ %100, %99 ]
  %112 = phi ptr [ %109, %107 ], [ %101, %103 ], [ %101, %99 ]
  %113 = icmp ult ptr %111, %6
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = load i8, ptr %112, align 1
  %116 = load i8, ptr %111, align 1
  %117 = icmp eq i8 %115, %116
  %118 = zext i1 %117 to i32
  %119 = getelementptr i8, ptr %111, i32 %118
  br label %120

120:                                              ; preds = %114, %110
  %121 = phi ptr [ %111, %110 ], [ %119, %114 ]
  %122 = ptrtoint ptr %121 to i32
  %123 = ptrtoint ptr %70 to i32
  %124 = sub i32 %122, %123
  br label %125

125:                                              ; preds = %120, %92, %78
  %126 = phi i32 [ %124, %120 ], [ %80, %78 ], [ %98, %92 ]
  %127 = add i32 %126, 4
  br label %571

128:                                              ; preds = %56
  %129 = load i32, ptr %48, align 4
  switch i32 %129, label %130 [
    i32 6, label %396
    i32 5, label %261
    i32 7, label %396
  ]

130:                                              ; preds = %128
  %131 = load ptr, ptr %49, align 4
  %132 = load i32, ptr %50, align 4
  %133 = shl nuw i32 1, %132
  %134 = add i32 %133, -1
  %135 = load ptr, ptr %8, align 4
  %136 = ptrtoint ptr %57 to i32
  %137 = ptrtoint ptr %135 to i32
  %138 = sub i32 %136, %137
  %139 = load i32, ptr %22, align 4
  %140 = shl nuw i32 1, %139
  %141 = load i32, ptr %51, align 4
  %142 = sub i32 %138, %141
  %143 = icmp ugt i32 %142, %140
  %144 = sub i32 %138, %140
  %145 = load i32, ptr %28, align 4
  %146 = icmp eq i32 %145, 0
  %147 = select i1 %146, i1 %143, i1 false
  %148 = select i1 %147, i32 %144, i32 %141
  %149 = tail call i32 @llvm.usub.sat.i32(i32 %138, i32 %133) #7
  %150 = load i32, ptr %52, align 4
  %151 = shl nuw i32 1, %150
  %152 = load ptr, ptr %53, align 4
  %153 = load i32, ptr %54, align 4
  %154 = shl nsw i32 -1, %132
  %155 = xor i32 %154, -1
  %156 = load i32, ptr %55, align 4
  %157 = icmp ult i32 %156, %138
  %158 = sub i32 32, %153
  br i1 %157, label %159, label %171

159:                                              ; preds = %159, %130
  %160 = phi i32 [ %169, %159 ], [ %156, %130 ]
  %161 = getelementptr i8, ptr %135, i32 %160
  %162 = load i32, ptr %161, align 1
  %163 = mul i32 %162, -1640531535
  %164 = lshr i32 %163, %158
  %165 = getelementptr i32, ptr %152, i32 %164
  %166 = load i32, ptr %165, align 4
  %167 = and i32 %160, %155
  %168 = getelementptr i32, ptr %131, i32 %167
  store i32 %166, ptr %168, align 4
  store i32 %160, ptr %165, align 4
  %169 = add nuw i32 %160, 1
  %170 = icmp ult i32 %169, %138
  br i1 %170, label %159, label %171

171:                                              ; preds = %159, %130
  store i32 %138, ptr %55, align 4
  %172 = load i32, ptr %57, align 1
  %173 = mul i32 %172, -1640531535
  %174 = lshr i32 %173, %158
  %175 = getelementptr i32, ptr %152, i32 %174
  %176 = load i32, ptr %175, align 4
  %177 = icmp ult i32 %176, %148
  br i1 %177, label %537, label %178

178:                                              ; preds = %171
  %179 = icmp ugt ptr %40, %57
  %180 = add i32 %138, 2
  br label %181

181:                                              ; preds = %253, %178
  %182 = phi i32 [ 999999999, %178 ], [ %250, %253 ]
  %183 = phi i32 [ %176, %178 ], [ %257, %253 ]
  %184 = phi i32 [ 3, %178 ], [ %251, %253 ]
  %185 = phi i32 [ %151, %178 ], [ %256, %253 ]
  %186 = getelementptr i8, ptr %135, i32 %183
  %187 = getelementptr i8, ptr %186, i32 %184
  %188 = load i8, ptr %187, align 1
  %189 = getelementptr i8, ptr %57, i32 %184
  %190 = load i8, ptr %189, align 1
  %191 = icmp eq i8 %188, %190
  br i1 %191, label %192, label %249

192:                                              ; preds = %181
  br i1 %179, label %193, label %217

193:                                              ; preds = %192
  %194 = load i32, ptr %186, align 1
  %195 = xor i32 %194, %172
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = tail call i32 @llvm.cttz.i32(i32 %195, i1 true) #7, !range !8
  %199 = lshr i32 %198, 3
  br label %242

200:                                              ; preds = %206, %193
  %201 = phi ptr [ %204, %206 ], [ %57, %193 ]
  %202 = phi ptr [ %203, %206 ], [ %186, %193 ]
  %203 = getelementptr i8, ptr %202, i32 4
  %204 = getelementptr i8, ptr %201, i32 4
  %205 = icmp ult ptr %204, %40
  br i1 %205, label %206, label %217

206:                                              ; preds = %200
  %207 = load i32, ptr %203, align 1
  %208 = load i32, ptr %204, align 1
  %209 = xor i32 %208, %207
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %200, label %211

211:                                              ; preds = %206
  %212 = tail call i32 @llvm.cttz.i32(i32 %209, i1 true) #7, !range !8
  %213 = lshr i32 %212, 3
  %214 = getelementptr i8, ptr %204, i32 %213
  %215 = ptrtoint ptr %214 to i32
  %216 = sub i32 %215, %136
  br label %242

217:                                              ; preds = %200, %192
  %218 = phi ptr [ %57, %192 ], [ %204, %200 ]
  %219 = phi ptr [ %186, %192 ], [ %203, %200 ]
  %220 = icmp ult ptr %218, %41
  br i1 %220, label %221, label %228

221:                                              ; preds = %217
  %222 = load i16, ptr %219, align 1
  %223 = load i16, ptr %218, align 1
  %224 = icmp eq i16 %222, %223
  br i1 %224, label %225, label %228

225:                                              ; preds = %221
  %226 = getelementptr i8, ptr %218, i32 2
  %227 = getelementptr i8, ptr %219, i32 2
  br label %228

228:                                              ; preds = %225, %221, %217
  %229 = phi ptr [ %226, %225 ], [ %218, %221 ], [ %218, %217 ]
  %230 = phi ptr [ %227, %225 ], [ %219, %221 ], [ %219, %217 ]
  %231 = icmp ult ptr %229, %6
  br i1 %231, label %232, label %238

232:                                              ; preds = %228
  %233 = load i8, ptr %230, align 1
  %234 = load i8, ptr %229, align 1
  %235 = icmp eq i8 %233, %234
  %236 = zext i1 %235 to i32
  %237 = getelementptr i8, ptr %229, i32 %236
  br label %238

238:                                              ; preds = %232, %228
  %239 = phi ptr [ %229, %228 ], [ %237, %232 ]
  %240 = ptrtoint ptr %239 to i32
  %241 = sub i32 %240, %136
  br label %242

242:                                              ; preds = %238, %211, %197
  %243 = phi i32 [ %241, %238 ], [ %199, %197 ], [ %216, %211 ]
  %244 = icmp ugt i32 %243, %184
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = sub i32 %180, %183
  %247 = getelementptr i8, ptr %57, i32 %243
  %248 = icmp eq ptr %247, %6
  br i1 %248, label %531, label %249

249:                                              ; preds = %245, %242, %181
  %250 = phi i32 [ %246, %245 ], [ %182, %242 ], [ %182, %181 ]
  %251 = phi i32 [ %243, %245 ], [ %184, %242 ], [ %184, %181 ]
  %252 = icmp ugt i32 %183, %149
  br i1 %252, label %253, label %531

253:                                              ; preds = %249
  %254 = and i32 %183, %134
  %255 = getelementptr i32, ptr %131, i32 %254
  %256 = add i32 %185, -1
  %257 = load i32, ptr %255, align 4
  %258 = icmp uge i32 %257, %148
  %259 = icmp ne i32 %256, 0
  %260 = and i1 %259, %258
  br i1 %260, label %181, label %531

261:                                              ; preds = %128
  %262 = load ptr, ptr %49, align 4
  %263 = load i32, ptr %50, align 4
  %264 = shl nuw i32 1, %263
  %265 = add i32 %264, -1
  %266 = load ptr, ptr %8, align 4
  %267 = ptrtoint ptr %57 to i32
  %268 = ptrtoint ptr %266 to i32
  %269 = sub i32 %267, %268
  %270 = load i32, ptr %22, align 4
  %271 = shl nuw i32 1, %270
  %272 = load i32, ptr %51, align 4
  %273 = sub i32 %269, %272
  %274 = icmp ugt i32 %273, %271
  %275 = sub i32 %269, %271
  %276 = load i32, ptr %28, align 4
  %277 = icmp eq i32 %276, 0
  %278 = select i1 %277, i1 %274, i1 false
  %279 = select i1 %278, i32 %275, i32 %272
  %280 = tail call i32 @llvm.usub.sat.i32(i32 %269, i32 %264) #7
  %281 = load i32, ptr %52, align 4
  %282 = shl nuw i32 1, %281
  %283 = load ptr, ptr %53, align 4
  %284 = load i32, ptr %54, align 4
  %285 = shl nsw i32 -1, %263
  %286 = xor i32 %285, -1
  %287 = load i32, ptr %55, align 4
  %288 = icmp ult i32 %287, %269
  %289 = sub i32 64, %284
  %290 = zext i32 %289 to i64
  br i1 %288, label %291, label %304

291:                                              ; preds = %291, %261
  %292 = phi i32 [ %302, %291 ], [ %287, %261 ]
  %293 = getelementptr i8, ptr %266, i32 %292
  %294 = load i64, ptr %293, align 1
  %295 = mul i64 %294, -3523014627271114752
  %296 = lshr i64 %295, %290
  %297 = trunc i64 %296 to i32
  %298 = getelementptr i32, ptr %283, i32 %297
  %299 = load i32, ptr %298, align 4
  %300 = and i32 %292, %286
  %301 = getelementptr i32, ptr %262, i32 %300
  store i32 %299, ptr %301, align 4
  store i32 %292, ptr %298, align 4
  %302 = add nuw i32 %292, 1
  %303 = icmp ult i32 %302, %269
  br i1 %303, label %291, label %304

304:                                              ; preds = %291, %261
  store i32 %269, ptr %55, align 4
  %305 = load i64, ptr %57, align 1
  %306 = mul i64 %305, -3523014627271114752
  %307 = lshr i64 %306, %290
  %308 = trunc i64 %307 to i32
  %309 = getelementptr i32, ptr %283, i32 %308
  %310 = load i32, ptr %309, align 4
  %311 = icmp ult i32 %310, %279
  %312 = trunc i64 %305 to i32
  br i1 %311, label %537, label %313

313:                                              ; preds = %304
  %314 = icmp ugt ptr %40, %57
  %315 = add i32 %269, 2
  br label %316

316:                                              ; preds = %388, %313
  %317 = phi i32 [ 999999999, %313 ], [ %385, %388 ]
  %318 = phi i32 [ %310, %313 ], [ %392, %388 ]
  %319 = phi i32 [ 3, %313 ], [ %386, %388 ]
  %320 = phi i32 [ %282, %313 ], [ %391, %388 ]
  %321 = getelementptr i8, ptr %266, i32 %318
  %322 = getelementptr i8, ptr %321, i32 %319
  %323 = load i8, ptr %322, align 1
  %324 = getelementptr i8, ptr %57, i32 %319
  %325 = load i8, ptr %324, align 1
  %326 = icmp eq i8 %323, %325
  br i1 %326, label %327, label %384

327:                                              ; preds = %316
  br i1 %314, label %328, label %352

328:                                              ; preds = %327
  %329 = load i32, ptr %321, align 1
  %330 = xor i32 %329, %312
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %328
  %333 = tail call i32 @llvm.cttz.i32(i32 %330, i1 true) #7, !range !8
  %334 = lshr i32 %333, 3
  br label %377

335:                                              ; preds = %341, %328
  %336 = phi ptr [ %339, %341 ], [ %57, %328 ]
  %337 = phi ptr [ %338, %341 ], [ %321, %328 ]
  %338 = getelementptr i8, ptr %337, i32 4
  %339 = getelementptr i8, ptr %336, i32 4
  %340 = icmp ult ptr %339, %40
  br i1 %340, label %341, label %352

341:                                              ; preds = %335
  %342 = load i32, ptr %338, align 1
  %343 = load i32, ptr %339, align 1
  %344 = xor i32 %343, %342
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %335, label %346

346:                                              ; preds = %341
  %347 = tail call i32 @llvm.cttz.i32(i32 %344, i1 true) #7, !range !8
  %348 = lshr i32 %347, 3
  %349 = getelementptr i8, ptr %339, i32 %348
  %350 = ptrtoint ptr %349 to i32
  %351 = sub i32 %350, %267
  br label %377

352:                                              ; preds = %335, %327
  %353 = phi ptr [ %57, %327 ], [ %339, %335 ]
  %354 = phi ptr [ %321, %327 ], [ %338, %335 ]
  %355 = icmp ult ptr %353, %41
  br i1 %355, label %356, label %363

356:                                              ; preds = %352
  %357 = load i16, ptr %354, align 1
  %358 = load i16, ptr %353, align 1
  %359 = icmp eq i16 %357, %358
  br i1 %359, label %360, label %363

360:                                              ; preds = %356
  %361 = getelementptr i8, ptr %353, i32 2
  %362 = getelementptr i8, ptr %354, i32 2
  br label %363

363:                                              ; preds = %360, %356, %352
  %364 = phi ptr [ %361, %360 ], [ %353, %356 ], [ %353, %352 ]
  %365 = phi ptr [ %362, %360 ], [ %354, %356 ], [ %354, %352 ]
  %366 = icmp ult ptr %364, %6
  br i1 %366, label %367, label %373

367:                                              ; preds = %363
  %368 = load i8, ptr %365, align 1
  %369 = load i8, ptr %364, align 1
  %370 = icmp eq i8 %368, %369
  %371 = zext i1 %370 to i32
  %372 = getelementptr i8, ptr %364, i32 %371
  br label %373

373:                                              ; preds = %367, %363
  %374 = phi ptr [ %364, %363 ], [ %372, %367 ]
  %375 = ptrtoint ptr %374 to i32
  %376 = sub i32 %375, %267
  br label %377

377:                                              ; preds = %373, %346, %332
  %378 = phi i32 [ %376, %373 ], [ %334, %332 ], [ %351, %346 ]
  %379 = icmp ugt i32 %378, %319
  br i1 %379, label %380, label %384

380:                                              ; preds = %377
  %381 = sub i32 %315, %318
  %382 = getelementptr i8, ptr %57, i32 %378
  %383 = icmp eq ptr %382, %6
  br i1 %383, label %531, label %384

384:                                              ; preds = %380, %377, %316
  %385 = phi i32 [ %381, %380 ], [ %317, %377 ], [ %317, %316 ]
  %386 = phi i32 [ %378, %380 ], [ %319, %377 ], [ %319, %316 ]
  %387 = icmp ugt i32 %318, %280
  br i1 %387, label %388, label %531

388:                                              ; preds = %384
  %389 = and i32 %318, %265
  %390 = getelementptr i32, ptr %262, i32 %389
  %391 = add i32 %320, -1
  %392 = load i32, ptr %390, align 4
  %393 = icmp uge i32 %392, %279
  %394 = icmp ne i32 %391, 0
  %395 = and i1 %394, %393
  br i1 %395, label %316, label %531

396:                                              ; preds = %128, %128
  %397 = load ptr, ptr %49, align 4
  %398 = load i32, ptr %50, align 4
  %399 = shl nuw i32 1, %398
  %400 = add i32 %399, -1
  %401 = load ptr, ptr %8, align 4
  %402 = ptrtoint ptr %57 to i32
  %403 = ptrtoint ptr %401 to i32
  %404 = sub i32 %402, %403
  %405 = load i32, ptr %22, align 4
  %406 = shl nuw i32 1, %405
  %407 = load i32, ptr %51, align 4
  %408 = sub i32 %404, %407
  %409 = icmp ugt i32 %408, %406
  %410 = sub i32 %404, %406
  %411 = load i32, ptr %28, align 4
  %412 = icmp eq i32 %411, 0
  %413 = select i1 %412, i1 %409, i1 false
  %414 = select i1 %413, i32 %410, i32 %407
  %415 = tail call i32 @llvm.usub.sat.i32(i32 %404, i32 %399) #7
  %416 = load i32, ptr %52, align 4
  %417 = shl nuw i32 1, %416
  %418 = load ptr, ptr %53, align 4
  %419 = load i32, ptr %54, align 4
  %420 = shl nsw i32 -1, %398
  %421 = xor i32 %420, -1
  %422 = load i32, ptr %55, align 4
  %423 = icmp ult i32 %422, %404
  %424 = sub i32 64, %419
  %425 = zext i32 %424 to i64
  br i1 %423, label %426, label %439

426:                                              ; preds = %426, %396
  %427 = phi i32 [ %437, %426 ], [ %422, %396 ]
  %428 = getelementptr i8, ptr %401, i32 %427
  %429 = load i64, ptr %428, align 1
  %430 = mul i64 %429, -3523014627193847808
  %431 = lshr i64 %430, %425
  %432 = trunc i64 %431 to i32
  %433 = getelementptr i32, ptr %418, i32 %432
  %434 = load i32, ptr %433, align 4
  %435 = and i32 %427, %421
  %436 = getelementptr i32, ptr %397, i32 %435
  store i32 %434, ptr %436, align 4
  store i32 %427, ptr %433, align 4
  %437 = add nuw i32 %427, 1
  %438 = icmp ult i32 %437, %404
  br i1 %438, label %426, label %439

439:                                              ; preds = %426, %396
  store i32 %404, ptr %55, align 4
  %440 = load i64, ptr %57, align 1
  %441 = mul i64 %440, -3523014627193847808
  %442 = lshr i64 %441, %425
  %443 = trunc i64 %442 to i32
  %444 = getelementptr i32, ptr %418, i32 %443
  %445 = load i32, ptr %444, align 4
  %446 = icmp ult i32 %445, %414
  %447 = trunc i64 %440 to i32
  br i1 %446, label %537, label %448

448:                                              ; preds = %439
  %449 = icmp ugt ptr %40, %57
  %450 = add i32 %404, 2
  br label %451

451:                                              ; preds = %523, %448
  %452 = phi i32 [ 999999999, %448 ], [ %520, %523 ]
  %453 = phi i32 [ %445, %448 ], [ %527, %523 ]
  %454 = phi i32 [ 3, %448 ], [ %521, %523 ]
  %455 = phi i32 [ %417, %448 ], [ %526, %523 ]
  %456 = getelementptr i8, ptr %401, i32 %453
  %457 = getelementptr i8, ptr %456, i32 %454
  %458 = load i8, ptr %457, align 1
  %459 = getelementptr i8, ptr %57, i32 %454
  %460 = load i8, ptr %459, align 1
  %461 = icmp eq i8 %458, %460
  br i1 %461, label %462, label %519

462:                                              ; preds = %451
  br i1 %449, label %463, label %487

463:                                              ; preds = %462
  %464 = load i32, ptr %456, align 1
  %465 = xor i32 %464, %447
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %470, label %467

467:                                              ; preds = %463
  %468 = tail call i32 @llvm.cttz.i32(i32 %465, i1 true) #7, !range !8
  %469 = lshr i32 %468, 3
  br label %512

470:                                              ; preds = %476, %463
  %471 = phi ptr [ %474, %476 ], [ %57, %463 ]
  %472 = phi ptr [ %473, %476 ], [ %456, %463 ]
  %473 = getelementptr i8, ptr %472, i32 4
  %474 = getelementptr i8, ptr %471, i32 4
  %475 = icmp ult ptr %474, %40
  br i1 %475, label %476, label %487

476:                                              ; preds = %470
  %477 = load i32, ptr %473, align 1
  %478 = load i32, ptr %474, align 1
  %479 = xor i32 %478, %477
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %470, label %481

481:                                              ; preds = %476
  %482 = tail call i32 @llvm.cttz.i32(i32 %479, i1 true) #7, !range !8
  %483 = lshr i32 %482, 3
  %484 = getelementptr i8, ptr %474, i32 %483
  %485 = ptrtoint ptr %484 to i32
  %486 = sub i32 %485, %402
  br label %512

487:                                              ; preds = %470, %462
  %488 = phi ptr [ %57, %462 ], [ %474, %470 ]
  %489 = phi ptr [ %456, %462 ], [ %473, %470 ]
  %490 = icmp ult ptr %488, %41
  br i1 %490, label %491, label %498

491:                                              ; preds = %487
  %492 = load i16, ptr %489, align 1
  %493 = load i16, ptr %488, align 1
  %494 = icmp eq i16 %492, %493
  br i1 %494, label %495, label %498

495:                                              ; preds = %491
  %496 = getelementptr i8, ptr %488, i32 2
  %497 = getelementptr i8, ptr %489, i32 2
  br label %498

498:                                              ; preds = %495, %491, %487
  %499 = phi ptr [ %496, %495 ], [ %488, %491 ], [ %488, %487 ]
  %500 = phi ptr [ %497, %495 ], [ %489, %491 ], [ %489, %487 ]
  %501 = icmp ult ptr %499, %6
  br i1 %501, label %502, label %508

502:                                              ; preds = %498
  %503 = load i8, ptr %500, align 1
  %504 = load i8, ptr %499, align 1
  %505 = icmp eq i8 %503, %504
  %506 = zext i1 %505 to i32
  %507 = getelementptr i8, ptr %499, i32 %506
  br label %508

508:                                              ; preds = %502, %498
  %509 = phi ptr [ %499, %498 ], [ %507, %502 ]
  %510 = ptrtoint ptr %509 to i32
  %511 = sub i32 %510, %402
  br label %512

512:                                              ; preds = %508, %481, %467
  %513 = phi i32 [ %511, %508 ], [ %469, %467 ], [ %486, %481 ]
  %514 = icmp ugt i32 %513, %454
  br i1 %514, label %515, label %519

515:                                              ; preds = %512
  %516 = sub i32 %450, %453
  %517 = getelementptr i8, ptr %57, i32 %513
  %518 = icmp eq ptr %517, %6
  br i1 %518, label %531, label %519

519:                                              ; preds = %515, %512, %451
  %520 = phi i32 [ %516, %515 ], [ %452, %512 ], [ %452, %451 ]
  %521 = phi i32 [ %513, %515 ], [ %454, %512 ], [ %454, %451 ]
  %522 = icmp ugt i32 %453, %415
  br i1 %522, label %523, label %531

523:                                              ; preds = %519
  %524 = and i32 %453, %400
  %525 = getelementptr i32, ptr %397, i32 %524
  %526 = add i32 %455, -1
  %527 = load i32, ptr %525, align 4
  %528 = icmp uge i32 %527, %414
  %529 = icmp ne i32 %526, 0
  %530 = and i1 %529, %528
  br i1 %530, label %451, label %531

531:                                              ; preds = %523, %519, %515, %388, %384, %380, %253, %249, %245
  %532 = phi i32 [ %250, %249 ], [ %250, %253 ], [ %246, %245 ], [ %520, %519 ], [ %520, %523 ], [ %516, %515 ], [ %385, %384 ], [ %385, %388 ], [ %381, %380 ]
  %533 = phi i32 [ %251, %249 ], [ %251, %253 ], [ %243, %245 ], [ %521, %519 ], [ %521, %523 ], [ %513, %515 ], [ %386, %384 ], [ %386, %388 ], [ %378, %380 ]
  %534 = icmp ult i32 %533, 4
  br i1 %534, label %535, label %544

535:                                              ; preds = %531
  %536 = ptrtoint ptr %57 to i32
  br label %537

537:                                              ; preds = %535, %439, %304, %171
  %538 = phi i32 [ %536, %535 ], [ %402, %439 ], [ %267, %304 ], [ %136, %171 ]
  %539 = ptrtoint ptr %58 to i32
  %540 = sub i32 %538, %539
  %541 = ashr i32 %540, 8
  %542 = add nsw i32 %541, 1
  %543 = getelementptr i8, ptr %57, i32 %542
  br label %772

544:                                              ; preds = %531
  %545 = icmp eq i32 %532, 0
  br i1 %545, label %571, label %546

546:                                              ; preds = %544
  %547 = sub i32 2, %532
  %548 = icmp ugt ptr %57, %58
  %549 = getelementptr i8, ptr %57, i32 %547
  %550 = icmp ugt ptr %549, %12
  %551 = and i1 %548, %550
  br i1 %551, label %552, label %567

552:                                              ; preds = %561, %546
  %553 = phi ptr [ %556, %561 ], [ %57, %546 ]
  %554 = phi i32 [ %562, %561 ], [ %533, %546 ]
  %555 = getelementptr i8, ptr %553, i32 %547
  %556 = getelementptr i8, ptr %553, i32 -1
  %557 = load i8, ptr %556, align 1
  %558 = getelementptr i8, ptr %555, i32 -1
  %559 = load i8, ptr %558, align 1
  %560 = icmp eq i8 %557, %559
  br i1 %560, label %561, label %567

561:                                              ; preds = %552
  %562 = add i32 %554, 1
  %563 = icmp ugt ptr %556, %58
  %564 = getelementptr i8, ptr %556, i32 %547
  %565 = icmp ugt ptr %564, %12
  %566 = and i1 %563, %565
  br i1 %566, label %552, label %567

567:                                              ; preds = %561, %552, %546
  %568 = phi i32 [ %533, %546 ], [ %554, %552 ], [ %562, %561 ]
  %569 = phi ptr [ %57, %546 ], [ %553, %552 ], [ %556, %561 ]
  %570 = add i32 %532, -2
  br label %571

571:                                              ; preds = %567, %544, %125
  %572 = phi i32 [ %60, %125 ], [ %59, %567 ], [ %60, %544 ]
  %573 = phi i32 [ %59, %125 ], [ %570, %567 ], [ %59, %544 ]
  %574 = phi i32 [ %127, %125 ], [ %568, %567 ], [ %533, %544 ]
  %575 = phi i32 [ 0, %125 ], [ %532, %567 ], [ 0, %544 ]
  %576 = phi ptr [ %62, %125 ], [ %569, %567 ], [ %57, %544 ]
  %577 = ptrtoint ptr %576 to i32
  %578 = ptrtoint ptr %58 to i32
  %579 = sub i32 %577, %578
  %580 = add i32 %574, -3
  %581 = getelementptr i8, ptr %58, i32 %579
  %582 = icmp ugt ptr %581, %42
  %583 = load ptr, ptr %43, align 4
  br i1 %582, label %605, label %584

584:                                              ; preds = %571
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %583, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %585 = icmp ugt i32 %579, 16
  %586 = load ptr, ptr %43, align 4
  br i1 %585, label %589, label %587

587:                                              ; preds = %584
  %588 = getelementptr i8, ptr %586, i32 %579
  store ptr %588, ptr %43, align 4
  br label %648

589:                                              ; preds = %584
  %590 = getelementptr i8, ptr %586, i32 16
  %591 = getelementptr i8, ptr %58, i32 16
  %592 = add i32 %579, -16
  %593 = getelementptr i8, ptr %586, i32 %579
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %590, ptr noundef align 1 dereferenceable(16) %591, i32 16, i1 false) #7
  %594 = icmp slt i32 %592, 17
  br i1 %594, label %637, label %595

595:                                              ; preds = %589
  %596 = getelementptr i8, ptr %586, i32 32
  br label %597

597:                                              ; preds = %597, %595
  %598 = phi ptr [ %591, %595 ], [ %602, %597 ]
  %599 = phi ptr [ %596, %595 ], [ %603, %597 ]
  %600 = getelementptr i8, ptr %598, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %599, ptr noundef align 1 dereferenceable(16) %600, i32 16, i1 false) #7
  %601 = getelementptr i8, ptr %599, i32 16
  %602 = getelementptr i8, ptr %598, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %601, ptr noundef align 1 dereferenceable(16) %602, i32 16, i1 false) #7
  %603 = getelementptr i8, ptr %599, i32 32
  %604 = icmp ult ptr %603, %593
  br i1 %604, label %597, label %637

605:                                              ; preds = %571
  %606 = ptrtoint ptr %581 to i32
  %607 = icmp ult ptr %42, %58
  br i1 %607, label %622, label %608

608:                                              ; preds = %605
  %609 = sub i32 %44, %578
  %610 = getelementptr i8, ptr %583, i32 %609
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %583, ptr noundef align 1 dereferenceable(16) %58, i32 16, i1 false) #7
  %611 = icmp slt i32 %609, 17
  br i1 %611, label %622, label %612

612:                                              ; preds = %608
  %613 = getelementptr i8, ptr %583, i32 16
  br label %614

614:                                              ; preds = %614, %612
  %615 = phi ptr [ %58, %612 ], [ %619, %614 ]
  %616 = phi ptr [ %613, %612 ], [ %620, %614 ]
  %617 = getelementptr i8, ptr %615, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %616, ptr noundef align 1 dereferenceable(16) %617, i32 16, i1 false) #7
  %618 = getelementptr i8, ptr %616, i32 16
  %619 = getelementptr i8, ptr %615, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %618, ptr noundef align 1 dereferenceable(16) %619, i32 16, i1 false) #7
  %620 = getelementptr i8, ptr %616, i32 32
  %621 = icmp ult ptr %620, %610
  br i1 %621, label %614, label %622

622:                                              ; preds = %614, %608, %605
  %623 = phi ptr [ %42, %608 ], [ %58, %605 ], [ %42, %614 ]
  %624 = phi ptr [ %610, %608 ], [ %583, %605 ], [ %610, %614 ]
  %625 = icmp ult ptr %623, %581
  br i1 %625, label %626, label %637

626:                                              ; preds = %622
  %627 = ptrtoint ptr %623 to i32
  %628 = sub i32 %606, %627
  %629 = getelementptr i8, ptr %623, i32 %628
  br label %630

630:                                              ; preds = %630, %626
  %631 = phi ptr [ %635, %630 ], [ %624, %626 ]
  %632 = phi ptr [ %633, %630 ], [ %623, %626 ]
  %633 = getelementptr i8, ptr %632, i32 1
  %634 = load i8, ptr %632, align 1
  %635 = getelementptr i8, ptr %631, i32 1
  store i8 %634, ptr %631, align 1
  %636 = icmp eq ptr %633, %629
  br i1 %636, label %637, label %630

637:                                              ; preds = %630, %622, %597, %589
  %638 = load ptr, ptr %43, align 4
  %639 = getelementptr i8, ptr %638, i32 %579
  store ptr %639, ptr %43, align 4
  %640 = icmp ugt i32 %579, 65535
  br i1 %640, label %641, label %648

641:                                              ; preds = %637
  store i32 1, ptr %45, align 4
  %642 = load ptr, ptr %46, align 4
  %643 = load ptr, ptr %1, align 4
  %644 = ptrtoint ptr %642 to i32
  %645 = ptrtoint ptr %643 to i32
  %646 = sub i32 %644, %645
  %647 = ashr exact i32 %646, 3
  store i32 %647, ptr %47, align 4
  br label %648

648:                                              ; preds = %641, %637, %587
  %649 = trunc i32 %579 to i16
  %650 = load ptr, ptr %46, align 4
  %651 = getelementptr inbounds %struct.seqDef_s, ptr %650, i32 0, i32 1
  store i16 %649, ptr %651, align 4
  %652 = add i32 %575, 1
  %653 = load ptr, ptr %46, align 4
  store i32 %652, ptr %653, align 4
  %654 = icmp ugt i32 %580, 65535
  br i1 %654, label %657, label %655

655:                                              ; preds = %648
  %656 = load ptr, ptr %46, align 4
  br label %664

657:                                              ; preds = %648
  store i32 2, ptr %45, align 4
  %658 = load ptr, ptr %46, align 4
  %659 = load ptr, ptr %1, align 4
  %660 = ptrtoint ptr %658 to i32
  %661 = ptrtoint ptr %659 to i32
  %662 = sub i32 %660, %661
  %663 = ashr exact i32 %662, 3
  store i32 %663, ptr %47, align 4
  br label %664

664:                                              ; preds = %657, %655
  %665 = phi ptr [ %656, %655 ], [ %658, %657 ]
  %666 = trunc i32 %580 to i16
  %667 = getelementptr inbounds %struct.seqDef_s, ptr %665, i32 0, i32 2
  store i16 %666, ptr %667, align 2
  %668 = load ptr, ptr %46, align 4
  %669 = getelementptr %struct.seqDef_s, ptr %668, i32 1
  store ptr %669, ptr %46, align 4
  %670 = getelementptr i8, ptr %576, i32 %574
  %671 = icmp ule ptr %670, %7
  %672 = icmp ne i32 %572, 0
  %673 = and i1 %672, %671
  br i1 %673, label %674, label %772

674:                                              ; preds = %762, %664
  %675 = phi ptr [ %767, %762 ], [ %669, %664 ]
  %676 = phi ptr [ %768, %762 ], [ %670, %664 ]
  %677 = phi i32 [ %678, %762 ], [ %573, %664 ]
  %678 = phi i32 [ %677, %762 ], [ %572, %664 ]
  %679 = load i32, ptr %676, align 1
  %680 = sub i32 0, %678
  %681 = getelementptr i8, ptr %676, i32 %680
  %682 = load i32, ptr %681, align 1
  %683 = icmp eq i32 %679, %682
  br i1 %683, label %684, label %772

684:                                              ; preds = %674
  %685 = getelementptr i8, ptr %676, i32 4
  %686 = getelementptr i8, ptr %685, i32 %680
  %687 = icmp ugt ptr %40, %685
  br i1 %687, label %688, label %714

688:                                              ; preds = %684
  %689 = load i32, ptr %686, align 1
  %690 = load i32, ptr %685, align 1
  %691 = xor i32 %690, %689
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %696, label %693

693:                                              ; preds = %688
  %694 = tail call i32 @llvm.cttz.i32(i32 %691, i1 true) #7, !range !8
  %695 = lshr i32 %694, 3
  br label %740

696:                                              ; preds = %702, %688
  %697 = phi ptr [ %700, %702 ], [ %685, %688 ]
  %698 = phi ptr [ %699, %702 ], [ %686, %688 ]
  %699 = getelementptr i8, ptr %698, i32 4
  %700 = getelementptr i8, ptr %697, i32 4
  %701 = icmp ult ptr %700, %40
  br i1 %701, label %702, label %714

702:                                              ; preds = %696
  %703 = load i32, ptr %699, align 1
  %704 = load i32, ptr %700, align 1
  %705 = xor i32 %704, %703
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %696, label %707

707:                                              ; preds = %702
  %708 = tail call i32 @llvm.cttz.i32(i32 %705, i1 true) #7, !range !8
  %709 = lshr i32 %708, 3
  %710 = getelementptr i8, ptr %700, i32 %709
  %711 = ptrtoint ptr %710 to i32
  %712 = ptrtoint ptr %685 to i32
  %713 = sub i32 %711, %712
  br label %740

714:                                              ; preds = %696, %684
  %715 = phi ptr [ %685, %684 ], [ %700, %696 ]
  %716 = phi ptr [ %686, %684 ], [ %699, %696 ]
  %717 = icmp ult ptr %715, %41
  br i1 %717, label %718, label %725

718:                                              ; preds = %714
  %719 = load i16, ptr %716, align 1
  %720 = load i16, ptr %715, align 1
  %721 = icmp eq i16 %719, %720
  br i1 %721, label %722, label %725

722:                                              ; preds = %718
  %723 = getelementptr i8, ptr %715, i32 2
  %724 = getelementptr i8, ptr %716, i32 2
  br label %725

725:                                              ; preds = %722, %718, %714
  %726 = phi ptr [ %723, %722 ], [ %715, %718 ], [ %715, %714 ]
  %727 = phi ptr [ %724, %722 ], [ %716, %718 ], [ %716, %714 ]
  %728 = icmp ult ptr %726, %6
  br i1 %728, label %729, label %735

729:                                              ; preds = %725
  %730 = load i8, ptr %727, align 1
  %731 = load i8, ptr %726, align 1
  %732 = icmp eq i8 %730, %731
  %733 = zext i1 %732 to i32
  %734 = getelementptr i8, ptr %726, i32 %733
  br label %735

735:                                              ; preds = %729, %725
  %736 = phi ptr [ %726, %725 ], [ %734, %729 ]
  %737 = ptrtoint ptr %736 to i32
  %738 = ptrtoint ptr %685 to i32
  %739 = sub i32 %737, %738
  br label %740

740:                                              ; preds = %735, %707, %693
  %741 = phi i32 [ %739, %735 ], [ %695, %693 ], [ %713, %707 ]
  %742 = add i32 %741, 4
  %743 = add i32 %741, 1
  %744 = icmp ugt ptr %676, %42
  br i1 %744, label %748, label %745

745:                                              ; preds = %740
  %746 = load ptr, ptr %43, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %746, ptr noundef align 1 dereferenceable(16) %676, i32 16, i1 false) #7
  %747 = load ptr, ptr %46, align 4
  br label %748

748:                                              ; preds = %745, %740
  %749 = phi ptr [ %675, %740 ], [ %747, %745 ]
  %750 = getelementptr inbounds %struct.seqDef_s, ptr %749, i32 0, i32 1
  store i16 0, ptr %750, align 4
  %751 = load ptr, ptr %46, align 4
  store i32 1, ptr %751, align 4
  %752 = icmp ugt i32 %743, 65535
  br i1 %752, label %755, label %753

753:                                              ; preds = %748
  %754 = load ptr, ptr %46, align 4
  br label %762

755:                                              ; preds = %748
  store i32 2, ptr %45, align 4
  %756 = load ptr, ptr %46, align 4
  %757 = load ptr, ptr %1, align 4
  %758 = ptrtoint ptr %756 to i32
  %759 = ptrtoint ptr %757 to i32
  %760 = sub i32 %758, %759
  %761 = ashr exact i32 %760, 3
  store i32 %761, ptr %47, align 4
  br label %762

762:                                              ; preds = %755, %753
  %763 = phi ptr [ %754, %753 ], [ %756, %755 ]
  %764 = trunc i32 %743 to i16
  %765 = getelementptr inbounds %struct.seqDef_s, ptr %763, i32 0, i32 2
  store i16 %764, ptr %765, align 2
  %766 = load ptr, ptr %46, align 4
  %767 = getelementptr %struct.seqDef_s, ptr %766, i32 1
  store ptr %767, ptr %46, align 4
  %768 = getelementptr i8, ptr %676, i32 %742
  %769 = icmp ule ptr %768, %7
  %770 = icmp ne i32 %677, 0
  %771 = and i1 %770, %769
  br i1 %771, label %674, label %772

772:                                              ; preds = %762, %674, %664, %537
  %773 = phi i32 [ %60, %537 ], [ %572, %664 ], [ %677, %762 ], [ %678, %674 ]
  %774 = phi i32 [ %59, %537 ], [ %573, %664 ], [ %678, %762 ], [ %677, %674 ]
  %775 = phi ptr [ %58, %537 ], [ %670, %664 ], [ %768, %762 ], [ %676, %674 ]
  %776 = phi ptr [ %543, %537 ], [ %670, %664 ], [ %768, %762 ], [ %676, %674 ]
  %777 = icmp ult ptr %776, %7
  br i1 %777, label %56, label %778

778:                                              ; preds = %772, %5
  %779 = phi ptr [ %3, %5 ], [ %775, %772 ]
  %780 = phi i32 [ %35, %5 ], [ %773, %772 ]
  %781 = phi i32 [ %37, %5 ], [ %774, %772 ]
  %782 = ptrtoint ptr %779 to i32
  %783 = select i1 %34, i32 %15, i32 0
  %784 = select i1 %36, i32 %13, i32 %783
  %785 = icmp eq i32 %781, 0
  %786 = select i1 %785, i32 %784, i32 %781
  store i32 %786, ptr %2, align 4
  %787 = icmp eq i32 %780, 0
  %788 = select i1 %787, i32 %784, i32 %780
  store i32 %788, ptr %14, align 4
  %789 = ptrtoint ptr %6 to i32
  %790 = sub i32 %789, %782
  ret i32 %790
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_btlazy2_dictMatchState(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %22
  %26 = load ptr, ptr %20, align 4
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %24 to i32
  %29 = add i32 %14, %28
  %30 = sub i32 %29, %27
  %31 = ptrtoint ptr %3 to i32
  %32 = ptrtoint ptr %15 to i32
  %33 = sub i32 %31, %32
  %34 = ptrtoint ptr %25 to i32
  %35 = sub i32 %34, %27
  %36 = icmp eq i32 %33, %35
  %37 = zext i1 %36 to i32
  %38 = getelementptr i8, ptr %3, i32 %37
  %39 = icmp ult ptr %38, %10
  br i1 %39, label %40, label %909

40:                                               ; preds = %5
  %41 = ptrtoint ptr %12 to i32
  %42 = getelementptr i8, ptr %9, i32 -3
  %43 = getelementptr i8, ptr %9, i32 -1
  %44 = sub i32 0, %30
  %45 = getelementptr i8, ptr %9, i32 -32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %47 = ptrtoint ptr %45 to i32
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %51 = getelementptr i8, ptr %24, i32 %44
  br label %52

52:                                               ; preds = %901, %40
  %53 = phi ptr [ %38, %40 ], [ %905, %901 ]
  %54 = phi ptr [ %3, %40 ], [ %904, %901 ]
  %55 = phi i32 [ %16, %40 ], [ %903, %901 ]
  %56 = phi i32 [ %18, %40 ], [ %902, %901 ]
  %57 = getelementptr i8, ptr %53, i32 1
  %58 = ptrtoint ptr %53 to i32
  %59 = add i32 %55, %41
  %60 = sub i32 1, %59
  %61 = add i32 %60, %58
  %62 = icmp ult i32 %61, %14
  %63 = sub i32 %61, %30
  %64 = getelementptr i8, ptr %24, i32 %63
  %65 = getelementptr i8, ptr %12, i32 %61
  %66 = select i1 %62, ptr %64, ptr %65
  %67 = xor i32 %61, -1
  %68 = add i32 %14, %67
  %69 = icmp ugt i32 %68, 2
  br i1 %69, label %70, label %204

70:                                               ; preds = %52
  %71 = load i32, ptr %66, align 1
  %72 = load i32, ptr %57, align 1
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %204

74:                                               ; preds = %70
  %75 = select i1 %62, ptr %26, ptr %9
  %76 = getelementptr i8, ptr %53, i32 5
  %77 = getelementptr i8, ptr %66, i32 4
  %78 = ptrtoint ptr %75 to i32
  %79 = ptrtoint ptr %77 to i32
  %80 = sub i32 %78, %79
  %81 = getelementptr i8, ptr %76, i32 %80
  %82 = icmp ult ptr %81, %9
  %83 = select i1 %82, ptr %81, ptr %9
  %84 = getelementptr i8, ptr %83, i32 -3
  %85 = icmp ugt ptr %84, %76
  br i1 %85, label %86, label %112

86:                                               ; preds = %74
  %87 = load i32, ptr %77, align 1
  %88 = load i32, ptr %76, align 1
  %89 = xor i32 %88, %87
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = tail call i32 @llvm.cttz.i32(i32 %89, i1 true) #7, !range !8
  %93 = lshr i32 %92, 3
  br label %139

94:                                               ; preds = %100, %86
  %95 = phi ptr [ %98, %100 ], [ %76, %86 ]
  %96 = phi ptr [ %97, %100 ], [ %77, %86 ]
  %97 = getelementptr i8, ptr %96, i32 4
  %98 = getelementptr i8, ptr %95, i32 4
  %99 = icmp ult ptr %98, %84
  br i1 %99, label %100, label %112

100:                                              ; preds = %94
  %101 = load i32, ptr %97, align 1
  %102 = load i32, ptr %98, align 1
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %94, label %105

105:                                              ; preds = %100
  %106 = tail call i32 @llvm.cttz.i32(i32 %103, i1 true) #7, !range !8
  %107 = lshr i32 %106, 3
  %108 = getelementptr i8, ptr %98, i32 %107
  %109 = ptrtoint ptr %108 to i32
  %110 = ptrtoint ptr %76 to i32
  %111 = sub i32 %109, %110
  br label %139

112:                                              ; preds = %94, %74
  %113 = phi ptr [ %76, %74 ], [ %98, %94 ]
  %114 = phi ptr [ %77, %74 ], [ %97, %94 ]
  %115 = getelementptr i8, ptr %83, i32 -1
  %116 = icmp ult ptr %113, %115
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = load i16, ptr %114, align 1
  %119 = load i16, ptr %113, align 1
  %120 = icmp eq i16 %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr i8, ptr %113, i32 2
  %123 = getelementptr i8, ptr %114, i32 2
  br label %124

124:                                              ; preds = %121, %117, %112
  %125 = phi ptr [ %122, %121 ], [ %113, %117 ], [ %113, %112 ]
  %126 = phi ptr [ %123, %121 ], [ %114, %117 ], [ %114, %112 ]
  %127 = icmp ult ptr %125, %83
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = load i8, ptr %126, align 1
  %130 = load i8, ptr %125, align 1
  %131 = icmp eq i8 %129, %130
  %132 = zext i1 %131 to i32
  %133 = getelementptr i8, ptr %125, i32 %132
  br label %134

134:                                              ; preds = %128, %124
  %135 = phi ptr [ %125, %124 ], [ %133, %128 ]
  %136 = ptrtoint ptr %135 to i32
  %137 = ptrtoint ptr %76 to i32
  %138 = sub i32 %136, %137
  br label %139

139:                                              ; preds = %134, %105, %91
  %140 = phi i32 [ %138, %134 ], [ %93, %91 ], [ %111, %105 ]
  %141 = getelementptr i8, ptr %77, i32 %140
  %142 = icmp eq ptr %141, %75
  br i1 %142, label %143, label %201

143:                                              ; preds = %139
  %144 = getelementptr i8, ptr %76, i32 %140
  %145 = icmp ugt ptr %42, %144
  br i1 %145, label %146, label %172

146:                                              ; preds = %143
  %147 = load i32, ptr %15, align 1
  %148 = load i32, ptr %144, align 1
  %149 = xor i32 %148, %147
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = tail call i32 @llvm.cttz.i32(i32 %149, i1 true) #7, !range !8
  %153 = lshr i32 %152, 3
  br label %198

154:                                              ; preds = %160, %146
  %155 = phi ptr [ %158, %160 ], [ %144, %146 ]
  %156 = phi ptr [ %157, %160 ], [ %15, %146 ]
  %157 = getelementptr i8, ptr %156, i32 4
  %158 = getelementptr i8, ptr %155, i32 4
  %159 = icmp ult ptr %158, %42
  br i1 %159, label %160, label %172

160:                                              ; preds = %154
  %161 = load i32, ptr %157, align 1
  %162 = load i32, ptr %158, align 1
  %163 = xor i32 %162, %161
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %154, label %165

165:                                              ; preds = %160
  %166 = tail call i32 @llvm.cttz.i32(i32 %163, i1 true) #7, !range !8
  %167 = lshr i32 %166, 3
  %168 = getelementptr i8, ptr %158, i32 %167
  %169 = ptrtoint ptr %168 to i32
  %170 = ptrtoint ptr %144 to i32
  %171 = sub i32 %169, %170
  br label %198

172:                                              ; preds = %154, %143
  %173 = phi ptr [ %144, %143 ], [ %158, %154 ]
  %174 = phi ptr [ %15, %143 ], [ %157, %154 ]
  %175 = icmp ult ptr %173, %43
  br i1 %175, label %176, label %183

176:                                              ; preds = %172
  %177 = load i16, ptr %174, align 1
  %178 = load i16, ptr %173, align 1
  %179 = icmp eq i16 %177, %178
  br i1 %179, label %180, label %183

180:                                              ; preds = %176
  %181 = getelementptr i8, ptr %173, i32 2
  %182 = getelementptr i8, ptr %174, i32 2
  br label %183

183:                                              ; preds = %180, %176, %172
  %184 = phi ptr [ %181, %180 ], [ %173, %176 ], [ %173, %172 ]
  %185 = phi ptr [ %182, %180 ], [ %174, %176 ], [ %174, %172 ]
  %186 = icmp ult ptr %184, %9
  br i1 %186, label %187, label %193

187:                                              ; preds = %183
  %188 = load i8, ptr %185, align 1
  %189 = load i8, ptr %184, align 1
  %190 = icmp eq i8 %188, %189
  %191 = zext i1 %190 to i32
  %192 = getelementptr i8, ptr %184, i32 %191
  br label %193

193:                                              ; preds = %187, %183
  %194 = phi ptr [ %184, %183 ], [ %192, %187 ]
  %195 = ptrtoint ptr %194 to i32
  %196 = ptrtoint ptr %144 to i32
  %197 = sub i32 %195, %196
  br label %198

198:                                              ; preds = %193, %165, %151
  %199 = phi i32 [ %197, %193 ], [ %153, %151 ], [ %171, %165 ]
  %200 = add i32 %199, %140
  br label %201

201:                                              ; preds = %198, %139
  %202 = phi i32 [ %200, %198 ], [ %140, %139 ]
  %203 = add i32 %202, 4
  br label %204

204:                                              ; preds = %201, %70, %52
  %205 = phi i32 [ %203, %201 ], [ 0, %70 ], [ 0, %52 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %206 = call fastcc i32 @ZSTD_BtFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %53, ptr noundef %9, ptr noundef nonnull %6) #7
  %207 = load i32, ptr %6, align 4
  %208 = tail call i32 @llvm.umax.i32(i32 %206, i32 %205) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %209 = icmp ult i32 %208, 4
  br i1 %209, label %210, label %216

210:                                              ; preds = %204
  %211 = ptrtoint ptr %54 to i32
  %212 = sub i32 %58, %211
  %213 = ashr i32 %212, 8
  %214 = add nsw i32 %213, 1
  %215 = getelementptr i8, ptr %53, i32 %214
  br label %901

216:                                              ; preds = %204
  %217 = icmp ugt i32 %206, %205
  %218 = select i1 %217, ptr %53, ptr %57
  %219 = select i1 %217, i32 %207, i32 0
  %220 = icmp ult ptr %53, %10
  br i1 %220, label %221, label %591

221:                                              ; preds = %404, %216
  %222 = phi ptr [ %407, %404 ], [ %53, %216 ]
  %223 = phi ptr [ %407, %404 ], [ %218, %216 ]
  %224 = phi i32 [ %406, %404 ], [ %219, %216 ]
  %225 = phi i32 [ %405, %404 ], [ %208, %216 ]
  %226 = getelementptr i8, ptr %222, i32 1
  %227 = ptrtoint ptr %226 to i32
  %228 = sub i32 %227, %59
  %229 = icmp ult i32 %228, %14
  %230 = sub i32 %228, %30
  %231 = getelementptr i8, ptr %24, i32 %230
  %232 = getelementptr i8, ptr %12, i32 %228
  %233 = select i1 %229, ptr %231, ptr %232
  %234 = xor i32 %228, -1
  %235 = add i32 %14, %234
  %236 = icmp ugt i32 %235, 2
  br i1 %236, label %237, label %382

237:                                              ; preds = %221
  %238 = load i32, ptr %233, align 1
  %239 = load i32, ptr %226, align 1
  %240 = icmp eq i32 %238, %239
  br i1 %240, label %241, label %382

241:                                              ; preds = %237
  %242 = select i1 %229, ptr %26, ptr %9
  %243 = getelementptr i8, ptr %222, i32 5
  %244 = getelementptr i8, ptr %233, i32 4
  %245 = ptrtoint ptr %242 to i32
  %246 = ptrtoint ptr %244 to i32
  %247 = sub i32 %245, %246
  %248 = getelementptr i8, ptr %243, i32 %247
  %249 = icmp ult ptr %248, %9
  %250 = select i1 %249, ptr %248, ptr %9
  %251 = getelementptr i8, ptr %250, i32 -3
  %252 = icmp ugt ptr %251, %243
  br i1 %252, label %253, label %279

253:                                              ; preds = %241
  %254 = load i32, ptr %244, align 1
  %255 = load i32, ptr %243, align 1
  %256 = xor i32 %255, %254
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %253
  %259 = tail call i32 @llvm.cttz.i32(i32 %256, i1 true) #7, !range !8
  %260 = lshr i32 %259, 3
  br label %306

261:                                              ; preds = %267, %253
  %262 = phi ptr [ %265, %267 ], [ %243, %253 ]
  %263 = phi ptr [ %264, %267 ], [ %244, %253 ]
  %264 = getelementptr i8, ptr %263, i32 4
  %265 = getelementptr i8, ptr %262, i32 4
  %266 = icmp ult ptr %265, %251
  br i1 %266, label %267, label %279

267:                                              ; preds = %261
  %268 = load i32, ptr %264, align 1
  %269 = load i32, ptr %265, align 1
  %270 = xor i32 %269, %268
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %261, label %272

272:                                              ; preds = %267
  %273 = tail call i32 @llvm.cttz.i32(i32 %270, i1 true) #7, !range !8
  %274 = lshr i32 %273, 3
  %275 = getelementptr i8, ptr %265, i32 %274
  %276 = ptrtoint ptr %275 to i32
  %277 = ptrtoint ptr %243 to i32
  %278 = sub i32 %276, %277
  br label %306

279:                                              ; preds = %261, %241
  %280 = phi ptr [ %243, %241 ], [ %265, %261 ]
  %281 = phi ptr [ %244, %241 ], [ %264, %261 ]
  %282 = getelementptr i8, ptr %250, i32 -1
  %283 = icmp ult ptr %280, %282
  br i1 %283, label %284, label %291

284:                                              ; preds = %279
  %285 = load i16, ptr %281, align 1
  %286 = load i16, ptr %280, align 1
  %287 = icmp eq i16 %285, %286
  br i1 %287, label %288, label %291

288:                                              ; preds = %284
  %289 = getelementptr i8, ptr %280, i32 2
  %290 = getelementptr i8, ptr %281, i32 2
  br label %291

291:                                              ; preds = %288, %284, %279
  %292 = phi ptr [ %289, %288 ], [ %280, %284 ], [ %280, %279 ]
  %293 = phi ptr [ %290, %288 ], [ %281, %284 ], [ %281, %279 ]
  %294 = icmp ult ptr %292, %250
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = load i8, ptr %293, align 1
  %297 = load i8, ptr %292, align 1
  %298 = icmp eq i8 %296, %297
  %299 = zext i1 %298 to i32
  %300 = getelementptr i8, ptr %292, i32 %299
  br label %301

301:                                              ; preds = %295, %291
  %302 = phi ptr [ %292, %291 ], [ %300, %295 ]
  %303 = ptrtoint ptr %302 to i32
  %304 = ptrtoint ptr %243 to i32
  %305 = sub i32 %303, %304
  br label %306

306:                                              ; preds = %301, %272, %258
  %307 = phi i32 [ %305, %301 ], [ %260, %258 ], [ %278, %272 ]
  %308 = getelementptr i8, ptr %244, i32 %307
  %309 = icmp eq ptr %308, %242
  br i1 %309, label %310, label %368

310:                                              ; preds = %306
  %311 = getelementptr i8, ptr %243, i32 %307
  %312 = icmp ugt ptr %42, %311
  br i1 %312, label %313, label %339

313:                                              ; preds = %310
  %314 = load i32, ptr %15, align 1
  %315 = load i32, ptr %311, align 1
  %316 = xor i32 %315, %314
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %313
  %319 = tail call i32 @llvm.cttz.i32(i32 %316, i1 true) #7, !range !8
  %320 = lshr i32 %319, 3
  br label %365

321:                                              ; preds = %327, %313
  %322 = phi ptr [ %325, %327 ], [ %311, %313 ]
  %323 = phi ptr [ %324, %327 ], [ %15, %313 ]
  %324 = getelementptr i8, ptr %323, i32 4
  %325 = getelementptr i8, ptr %322, i32 4
  %326 = icmp ult ptr %325, %42
  br i1 %326, label %327, label %339

327:                                              ; preds = %321
  %328 = load i32, ptr %324, align 1
  %329 = load i32, ptr %325, align 1
  %330 = xor i32 %329, %328
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %321, label %332

332:                                              ; preds = %327
  %333 = tail call i32 @llvm.cttz.i32(i32 %330, i1 true) #7, !range !8
  %334 = lshr i32 %333, 3
  %335 = getelementptr i8, ptr %325, i32 %334
  %336 = ptrtoint ptr %335 to i32
  %337 = ptrtoint ptr %311 to i32
  %338 = sub i32 %336, %337
  br label %365

339:                                              ; preds = %321, %310
  %340 = phi ptr [ %311, %310 ], [ %325, %321 ]
  %341 = phi ptr [ %15, %310 ], [ %324, %321 ]
  %342 = icmp ult ptr %340, %43
  br i1 %342, label %343, label %350

343:                                              ; preds = %339
  %344 = load i16, ptr %341, align 1
  %345 = load i16, ptr %340, align 1
  %346 = icmp eq i16 %344, %345
  br i1 %346, label %347, label %350

347:                                              ; preds = %343
  %348 = getelementptr i8, ptr %340, i32 2
  %349 = getelementptr i8, ptr %341, i32 2
  br label %350

350:                                              ; preds = %347, %343, %339
  %351 = phi ptr [ %348, %347 ], [ %340, %343 ], [ %340, %339 ]
  %352 = phi ptr [ %349, %347 ], [ %341, %343 ], [ %341, %339 ]
  %353 = icmp ult ptr %351, %9
  br i1 %353, label %354, label %360

354:                                              ; preds = %350
  %355 = load i8, ptr %352, align 1
  %356 = load i8, ptr %351, align 1
  %357 = icmp eq i8 %355, %356
  %358 = zext i1 %357 to i32
  %359 = getelementptr i8, ptr %351, i32 %358
  br label %360

360:                                              ; preds = %354, %350
  %361 = phi ptr [ %351, %350 ], [ %359, %354 ]
  %362 = ptrtoint ptr %361 to i32
  %363 = ptrtoint ptr %311 to i32
  %364 = sub i32 %362, %363
  br label %365

365:                                              ; preds = %360, %332, %318
  %366 = phi i32 [ %364, %360 ], [ %320, %318 ], [ %338, %332 ]
  %367 = add i32 %366, %307
  br label %368

368:                                              ; preds = %365, %306
  %369 = phi i32 [ %367, %365 ], [ %307, %306 ]
  %370 = add i32 %369, 4
  %371 = icmp ult i32 %369, -4
  br i1 %371, label %372, label %382

372:                                              ; preds = %368
  %373 = add i32 %224, 1
  %374 = tail call i32 @llvm.ctlz.i32(i32 %373, i1 false) #7, !range !8
  %375 = xor i32 %374, -32
  %376 = mul i32 %225, 3
  %377 = add i32 %376, 2
  %378 = add i32 %377, %375
  %379 = mul i32 %370, 3
  %380 = icmp sgt i32 %379, %378
  br i1 %380, label %381, label %382

381:                                              ; preds = %372
  br label %382

382:                                              ; preds = %381, %372, %368, %237, %221
  %383 = phi i32 [ %225, %237 ], [ %225, %221 ], [ %370, %381 ], [ %225, %372 ], [ %225, %368 ]
  %384 = phi i32 [ %224, %237 ], [ %224, %221 ], [ 0, %381 ], [ %224, %372 ], [ %224, %368 ]
  %385 = phi ptr [ %223, %237 ], [ %223, %221 ], [ %226, %381 ], [ %223, %372 ], [ %223, %368 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %386 = call fastcc i32 @ZSTD_BtFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %226, ptr noundef %9, ptr noundef nonnull %7) #7
  %387 = load i32, ptr %7, align 4
  %388 = icmp ugt i32 %386, 3
  br i1 %388, label %389, label %409

389:                                              ; preds = %382
  %390 = add i32 %384, 1
  %391 = tail call i32 @llvm.ctlz.i32(i32 %390, i1 false) #7, !range !8
  %392 = xor i32 %391, -32
  %393 = add i32 %387, 1
  %394 = tail call i32 @llvm.ctlz.i32(i32 %393, i1 false) #7, !range !8
  %395 = xor i32 %394, -32
  %396 = shl i32 %383, 2
  %397 = add i32 %396, 5
  %398 = add i32 %397, %392
  %399 = shl i32 %386, 2
  %400 = or i32 %399, 1
  %401 = add i32 %400, %395
  %402 = icmp sgt i32 %401, %398
  br i1 %402, label %403, label %409

403:                                              ; preds = %389
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  br label %404

404:                                              ; preds = %590, %403
  %405 = phi i32 [ %386, %403 ], [ %572, %590 ]
  %406 = phi i32 [ %387, %403 ], [ %573, %590 ]
  %407 = phi ptr [ %226, %403 ], [ %412, %590 ]
  %408 = icmp ult ptr %407, %10
  br i1 %408, label %221, label %591

409:                                              ; preds = %389, %382
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %410 = icmp ult ptr %226, %10
  br i1 %410, label %411, label %591

411:                                              ; preds = %409
  %412 = getelementptr i8, ptr %222, i32 2
  %413 = ptrtoint ptr %412 to i32
  %414 = sub i32 %413, %59
  %415 = icmp ult i32 %414, %14
  %416 = sub i32 %414, %30
  %417 = getelementptr i8, ptr %24, i32 %416
  %418 = getelementptr i8, ptr %12, i32 %414
  %419 = select i1 %415, ptr %417, ptr %418
  %420 = xor i32 %414, -1
  %421 = add i32 %14, %420
  %422 = icmp ugt i32 %421, 2
  br i1 %422, label %423, label %568

423:                                              ; preds = %411
  %424 = load i32, ptr %419, align 1
  %425 = load i32, ptr %412, align 1
  %426 = icmp eq i32 %424, %425
  br i1 %426, label %427, label %568

427:                                              ; preds = %423
  %428 = select i1 %415, ptr %26, ptr %9
  %429 = getelementptr i8, ptr %222, i32 6
  %430 = getelementptr i8, ptr %419, i32 4
  %431 = ptrtoint ptr %428 to i32
  %432 = ptrtoint ptr %430 to i32
  %433 = sub i32 %431, %432
  %434 = getelementptr i8, ptr %429, i32 %433
  %435 = icmp ult ptr %434, %9
  %436 = select i1 %435, ptr %434, ptr %9
  %437 = getelementptr i8, ptr %436, i32 -3
  %438 = icmp ugt ptr %437, %429
  br i1 %438, label %439, label %465

439:                                              ; preds = %427
  %440 = load i32, ptr %430, align 1
  %441 = load i32, ptr %429, align 1
  %442 = xor i32 %441, %440
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %439
  %445 = tail call i32 @llvm.cttz.i32(i32 %442, i1 true) #7, !range !8
  %446 = lshr i32 %445, 3
  br label %492

447:                                              ; preds = %453, %439
  %448 = phi ptr [ %451, %453 ], [ %429, %439 ]
  %449 = phi ptr [ %450, %453 ], [ %430, %439 ]
  %450 = getelementptr i8, ptr %449, i32 4
  %451 = getelementptr i8, ptr %448, i32 4
  %452 = icmp ult ptr %451, %437
  br i1 %452, label %453, label %465

453:                                              ; preds = %447
  %454 = load i32, ptr %450, align 1
  %455 = load i32, ptr %451, align 1
  %456 = xor i32 %455, %454
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %447, label %458

458:                                              ; preds = %453
  %459 = tail call i32 @llvm.cttz.i32(i32 %456, i1 true) #7, !range !8
  %460 = lshr i32 %459, 3
  %461 = getelementptr i8, ptr %451, i32 %460
  %462 = ptrtoint ptr %461 to i32
  %463 = ptrtoint ptr %429 to i32
  %464 = sub i32 %462, %463
  br label %492

465:                                              ; preds = %447, %427
  %466 = phi ptr [ %429, %427 ], [ %451, %447 ]
  %467 = phi ptr [ %430, %427 ], [ %450, %447 ]
  %468 = getelementptr i8, ptr %436, i32 -1
  %469 = icmp ult ptr %466, %468
  br i1 %469, label %470, label %477

470:                                              ; preds = %465
  %471 = load i16, ptr %467, align 1
  %472 = load i16, ptr %466, align 1
  %473 = icmp eq i16 %471, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %470
  %475 = getelementptr i8, ptr %466, i32 2
  %476 = getelementptr i8, ptr %467, i32 2
  br label %477

477:                                              ; preds = %474, %470, %465
  %478 = phi ptr [ %475, %474 ], [ %466, %470 ], [ %466, %465 ]
  %479 = phi ptr [ %476, %474 ], [ %467, %470 ], [ %467, %465 ]
  %480 = icmp ult ptr %478, %436
  br i1 %480, label %481, label %487

481:                                              ; preds = %477
  %482 = load i8, ptr %479, align 1
  %483 = load i8, ptr %478, align 1
  %484 = icmp eq i8 %482, %483
  %485 = zext i1 %484 to i32
  %486 = getelementptr i8, ptr %478, i32 %485
  br label %487

487:                                              ; preds = %481, %477
  %488 = phi ptr [ %478, %477 ], [ %486, %481 ]
  %489 = ptrtoint ptr %488 to i32
  %490 = ptrtoint ptr %429 to i32
  %491 = sub i32 %489, %490
  br label %492

492:                                              ; preds = %487, %458, %444
  %493 = phi i32 [ %491, %487 ], [ %446, %444 ], [ %464, %458 ]
  %494 = getelementptr i8, ptr %430, i32 %493
  %495 = icmp eq ptr %494, %428
  br i1 %495, label %496, label %554

496:                                              ; preds = %492
  %497 = getelementptr i8, ptr %429, i32 %493
  %498 = icmp ugt ptr %42, %497
  br i1 %498, label %499, label %525

499:                                              ; preds = %496
  %500 = load i32, ptr %15, align 1
  %501 = load i32, ptr %497, align 1
  %502 = xor i32 %501, %500
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = tail call i32 @llvm.cttz.i32(i32 %502, i1 true) #7, !range !8
  %506 = lshr i32 %505, 3
  br label %551

507:                                              ; preds = %513, %499
  %508 = phi ptr [ %511, %513 ], [ %497, %499 ]
  %509 = phi ptr [ %510, %513 ], [ %15, %499 ]
  %510 = getelementptr i8, ptr %509, i32 4
  %511 = getelementptr i8, ptr %508, i32 4
  %512 = icmp ult ptr %511, %42
  br i1 %512, label %513, label %525

513:                                              ; preds = %507
  %514 = load i32, ptr %510, align 1
  %515 = load i32, ptr %511, align 1
  %516 = xor i32 %515, %514
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %507, label %518

518:                                              ; preds = %513
  %519 = tail call i32 @llvm.cttz.i32(i32 %516, i1 true) #7, !range !8
  %520 = lshr i32 %519, 3
  %521 = getelementptr i8, ptr %511, i32 %520
  %522 = ptrtoint ptr %521 to i32
  %523 = ptrtoint ptr %497 to i32
  %524 = sub i32 %522, %523
  br label %551

525:                                              ; preds = %507, %496
  %526 = phi ptr [ %497, %496 ], [ %511, %507 ]
  %527 = phi ptr [ %15, %496 ], [ %510, %507 ]
  %528 = icmp ult ptr %526, %43
  br i1 %528, label %529, label %536

529:                                              ; preds = %525
  %530 = load i16, ptr %527, align 1
  %531 = load i16, ptr %526, align 1
  %532 = icmp eq i16 %530, %531
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  %534 = getelementptr i8, ptr %526, i32 2
  %535 = getelementptr i8, ptr %527, i32 2
  br label %536

536:                                              ; preds = %533, %529, %525
  %537 = phi ptr [ %534, %533 ], [ %526, %529 ], [ %526, %525 ]
  %538 = phi ptr [ %535, %533 ], [ %527, %529 ], [ %527, %525 ]
  %539 = icmp ult ptr %537, %9
  br i1 %539, label %540, label %546

540:                                              ; preds = %536
  %541 = load i8, ptr %538, align 1
  %542 = load i8, ptr %537, align 1
  %543 = icmp eq i8 %541, %542
  %544 = zext i1 %543 to i32
  %545 = getelementptr i8, ptr %537, i32 %544
  br label %546

546:                                              ; preds = %540, %536
  %547 = phi ptr [ %537, %536 ], [ %545, %540 ]
  %548 = ptrtoint ptr %547 to i32
  %549 = ptrtoint ptr %497 to i32
  %550 = sub i32 %548, %549
  br label %551

551:                                              ; preds = %546, %518, %504
  %552 = phi i32 [ %550, %546 ], [ %506, %504 ], [ %524, %518 ]
  %553 = add i32 %552, %493
  br label %554

554:                                              ; preds = %551, %492
  %555 = phi i32 [ %553, %551 ], [ %493, %492 ]
  %556 = add i32 %555, 4
  %557 = icmp ult i32 %555, -4
  br i1 %557, label %558, label %568

558:                                              ; preds = %554
  %559 = add i32 %384, 1
  %560 = tail call i32 @llvm.ctlz.i32(i32 %559, i1 false) #7, !range !8
  %561 = xor i32 %560, -32
  %562 = shl i32 %383, 2
  %563 = or i32 %562, 2
  %564 = add i32 %563, %561
  %565 = shl i32 %556, 2
  %566 = icmp sgt i32 %565, %564
  br i1 %566, label %567, label %568

567:                                              ; preds = %558
  br label %568

568:                                              ; preds = %567, %558, %554, %423, %411
  %569 = phi i32 [ %383, %423 ], [ %383, %411 ], [ %556, %567 ], [ %383, %558 ], [ %383, %554 ]
  %570 = phi i32 [ %384, %423 ], [ %384, %411 ], [ 0, %567 ], [ %384, %558 ], [ %384, %554 ]
  %571 = phi ptr [ %385, %423 ], [ %385, %411 ], [ %412, %567 ], [ %385, %558 ], [ %385, %554 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %572 = call fastcc i32 @ZSTD_BtFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %412, ptr noundef %9, ptr noundef nonnull %8) #7
  %573 = load i32, ptr %8, align 4
  %574 = icmp ugt i32 %572, 3
  br i1 %574, label %575, label %589

575:                                              ; preds = %568
  %576 = add i32 %570, 1
  %577 = tail call i32 @llvm.ctlz.i32(i32 %576, i1 false) #7, !range !8
  %578 = xor i32 %577, -32
  %579 = add i32 %573, 1
  %580 = tail call i32 @llvm.ctlz.i32(i32 %579, i1 false) #7, !range !8
  %581 = xor i32 %580, -32
  %582 = shl i32 %569, 2
  %583 = add i32 %582, 8
  %584 = add i32 %583, %578
  %585 = shl i32 %572, 2
  %586 = or i32 %585, 1
  %587 = add i32 %586, %581
  %588 = icmp sgt i32 %587, %584
  br i1 %588, label %590, label %589

589:                                              ; preds = %575, %568
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %591

590:                                              ; preds = %575
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %404

591:                                              ; preds = %589, %409, %404, %216
  %592 = phi i32 [ %208, %216 ], [ %569, %589 ], [ %405, %404 ], [ %383, %409 ]
  %593 = phi i32 [ %219, %216 ], [ %570, %589 ], [ %406, %404 ], [ %384, %409 ]
  %594 = phi ptr [ %218, %216 ], [ %571, %589 ], [ %407, %404 ], [ %385, %409 ]
  %595 = icmp eq i32 %593, 0
  br i1 %595, label %626, label %596

596:                                              ; preds = %591
  %597 = ptrtoint ptr %594 to i32
  %598 = add i32 %593, %41
  %599 = sub i32 2, %598
  %600 = add i32 %599, %597
  %601 = icmp ult i32 %600, %14
  %602 = select i1 %601, ptr %25, ptr %15
  %603 = select i1 %601, ptr %51, ptr %12
  %604 = getelementptr i8, ptr %603, i32 %600
  %605 = icmp ugt ptr %594, %54
  %606 = icmp ugt ptr %604, %602
  %607 = select i1 %605, i1 %606, i1 false
  br i1 %607, label %608, label %622

608:                                              ; preds = %617, %596
  %609 = phi ptr [ %614, %617 ], [ %604, %596 ]
  %610 = phi ptr [ %612, %617 ], [ %594, %596 ]
  %611 = phi i32 [ %618, %617 ], [ %592, %596 ]
  %612 = getelementptr i8, ptr %610, i32 -1
  %613 = load i8, ptr %612, align 1
  %614 = getelementptr i8, ptr %609, i32 -1
  %615 = load i8, ptr %614, align 1
  %616 = icmp eq i8 %613, %615
  br i1 %616, label %617, label %622

617:                                              ; preds = %608
  %618 = add i32 %611, 1
  %619 = icmp ugt ptr %612, %54
  %620 = icmp ugt ptr %614, %602
  %621 = select i1 %619, i1 %620, i1 false
  br i1 %621, label %608, label %622

622:                                              ; preds = %617, %608, %596
  %623 = phi i32 [ %592, %596 ], [ %611, %608 ], [ %618, %617 ]
  %624 = phi ptr [ %594, %596 ], [ %610, %608 ], [ %612, %617 ]
  %625 = add i32 %593, -2
  br label %626

626:                                              ; preds = %622, %591
  %627 = phi i32 [ %55, %622 ], [ %56, %591 ]
  %628 = phi i32 [ %625, %622 ], [ %55, %591 ]
  %629 = phi i32 [ %623, %622 ], [ %592, %591 ]
  %630 = phi ptr [ %624, %622 ], [ %594, %591 ]
  %631 = ptrtoint ptr %630 to i32
  %632 = ptrtoint ptr %54 to i32
  %633 = sub i32 %631, %632
  %634 = add i32 %629, -3
  %635 = getelementptr i8, ptr %54, i32 %633
  %636 = icmp ugt ptr %635, %45
  %637 = load ptr, ptr %46, align 4
  br i1 %636, label %659, label %638

638:                                              ; preds = %626
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %639 = icmp ugt i32 %633, 16
  %640 = load ptr, ptr %46, align 4
  br i1 %639, label %643, label %641

641:                                              ; preds = %638
  %642 = getelementptr i8, ptr %640, i32 %633
  store ptr %642, ptr %46, align 4
  br label %702

643:                                              ; preds = %638
  %644 = getelementptr i8, ptr %640, i32 16
  %645 = getelementptr i8, ptr %54, i32 16
  %646 = add i32 %633, -16
  %647 = getelementptr i8, ptr %640, i32 %633
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %644, ptr noundef align 1 dereferenceable(16) %645, i32 16, i1 false) #7
  %648 = icmp slt i32 %646, 17
  br i1 %648, label %691, label %649

649:                                              ; preds = %643
  %650 = getelementptr i8, ptr %640, i32 32
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi ptr [ %645, %649 ], [ %656, %651 ]
  %653 = phi ptr [ %650, %649 ], [ %657, %651 ]
  %654 = getelementptr i8, ptr %652, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %653, ptr noundef align 1 dereferenceable(16) %654, i32 16, i1 false) #7
  %655 = getelementptr i8, ptr %653, i32 16
  %656 = getelementptr i8, ptr %652, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %655, ptr noundef align 1 dereferenceable(16) %656, i32 16, i1 false) #7
  %657 = getelementptr i8, ptr %653, i32 32
  %658 = icmp ult ptr %657, %647
  br i1 %658, label %651, label %691

659:                                              ; preds = %626
  %660 = ptrtoint ptr %635 to i32
  %661 = icmp ult ptr %45, %54
  br i1 %661, label %676, label %662

662:                                              ; preds = %659
  %663 = sub i32 %47, %632
  %664 = getelementptr i8, ptr %637, i32 %663
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %665 = icmp slt i32 %663, 17
  br i1 %665, label %676, label %666

666:                                              ; preds = %662
  %667 = getelementptr i8, ptr %637, i32 16
  br label %668

668:                                              ; preds = %668, %666
  %669 = phi ptr [ %54, %666 ], [ %673, %668 ]
  %670 = phi ptr [ %667, %666 ], [ %674, %668 ]
  %671 = getelementptr i8, ptr %669, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %670, ptr noundef align 1 dereferenceable(16) %671, i32 16, i1 false) #7
  %672 = getelementptr i8, ptr %670, i32 16
  %673 = getelementptr i8, ptr %669, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %672, ptr noundef align 1 dereferenceable(16) %673, i32 16, i1 false) #7
  %674 = getelementptr i8, ptr %670, i32 32
  %675 = icmp ult ptr %674, %664
  br i1 %675, label %668, label %676

676:                                              ; preds = %668, %662, %659
  %677 = phi ptr [ %45, %662 ], [ %54, %659 ], [ %45, %668 ]
  %678 = phi ptr [ %664, %662 ], [ %637, %659 ], [ %664, %668 ]
  %679 = icmp ult ptr %677, %635
  br i1 %679, label %680, label %691

680:                                              ; preds = %676
  %681 = ptrtoint ptr %677 to i32
  %682 = sub i32 %660, %681
  %683 = getelementptr i8, ptr %677, i32 %682
  br label %684

684:                                              ; preds = %684, %680
  %685 = phi ptr [ %689, %684 ], [ %678, %680 ]
  %686 = phi ptr [ %687, %684 ], [ %677, %680 ]
  %687 = getelementptr i8, ptr %686, i32 1
  %688 = load i8, ptr %686, align 1
  %689 = getelementptr i8, ptr %685, i32 1
  store i8 %688, ptr %685, align 1
  %690 = icmp eq ptr %687, %683
  br i1 %690, label %691, label %684

691:                                              ; preds = %684, %676, %651, %643
  %692 = load ptr, ptr %46, align 4
  %693 = getelementptr i8, ptr %692, i32 %633
  store ptr %693, ptr %46, align 4
  %694 = icmp ugt i32 %633, 65535
  br i1 %694, label %695, label %702

695:                                              ; preds = %691
  store i32 1, ptr %48, align 4
  %696 = load ptr, ptr %49, align 4
  %697 = load ptr, ptr %1, align 4
  %698 = ptrtoint ptr %696 to i32
  %699 = ptrtoint ptr %697 to i32
  %700 = sub i32 %698, %699
  %701 = ashr exact i32 %700, 3
  store i32 %701, ptr %50, align 4
  br label %702

702:                                              ; preds = %695, %691, %641
  %703 = trunc i32 %633 to i16
  %704 = load ptr, ptr %49, align 4
  %705 = getelementptr inbounds %struct.seqDef_s, ptr %704, i32 0, i32 1
  store i16 %703, ptr %705, align 4
  %706 = add i32 %593, 1
  %707 = load ptr, ptr %49, align 4
  store i32 %706, ptr %707, align 4
  %708 = icmp ugt i32 %634, 65535
  br i1 %708, label %711, label %709

709:                                              ; preds = %702
  %710 = load ptr, ptr %49, align 4
  br label %718

711:                                              ; preds = %702
  store i32 2, ptr %48, align 4
  %712 = load ptr, ptr %49, align 4
  %713 = load ptr, ptr %1, align 4
  %714 = ptrtoint ptr %712 to i32
  %715 = ptrtoint ptr %713 to i32
  %716 = sub i32 %714, %715
  %717 = ashr exact i32 %716, 3
  store i32 %717, ptr %50, align 4
  br label %718

718:                                              ; preds = %711, %709
  %719 = phi ptr [ %710, %709 ], [ %712, %711 ]
  %720 = trunc i32 %634 to i16
  %721 = getelementptr inbounds %struct.seqDef_s, ptr %719, i32 0, i32 2
  store i16 %720, ptr %721, align 2
  %722 = load ptr, ptr %49, align 4
  %723 = getelementptr %struct.seqDef_s, ptr %722, i32 1
  store ptr %723, ptr %49, align 4
  %724 = getelementptr i8, ptr %630, i32 %629
  %725 = icmp ugt ptr %724, %10
  br i1 %725, label %901, label %726

726:                                              ; preds = %893, %718
  %727 = phi ptr [ %898, %893 ], [ %723, %718 ]
  %728 = phi ptr [ %899, %893 ], [ %724, %718 ]
  %729 = phi i32 [ %730, %893 ], [ %628, %718 ]
  %730 = phi i32 [ %729, %893 ], [ %627, %718 ]
  %731 = ptrtoint ptr %728 to i32
  %732 = add i32 %730, %41
  %733 = sub i32 %731, %732
  %734 = icmp ult i32 %733, %14
  %735 = select i1 %734, ptr %51, ptr %12
  %736 = getelementptr i8, ptr %735, i32 %733
  %737 = xor i32 %733, -1
  %738 = add i32 %14, %737
  %739 = icmp ugt i32 %738, 2
  br i1 %739, label %740, label %901

740:                                              ; preds = %726
  %741 = load i32, ptr %736, align 1
  %742 = load i32, ptr %728, align 1
  %743 = icmp eq i32 %741, %742
  br i1 %743, label %744, label %901

744:                                              ; preds = %740
  %745 = select i1 %734, ptr %26, ptr %9
  %746 = getelementptr i8, ptr %728, i32 4
  %747 = getelementptr i8, ptr %736, i32 4
  %748 = ptrtoint ptr %745 to i32
  %749 = ptrtoint ptr %747 to i32
  %750 = sub i32 %748, %749
  %751 = getelementptr i8, ptr %746, i32 %750
  %752 = icmp ult ptr %751, %9
  %753 = select i1 %752, ptr %751, ptr %9
  %754 = getelementptr i8, ptr %753, i32 -3
  %755 = icmp ugt ptr %754, %746
  br i1 %755, label %756, label %782

756:                                              ; preds = %744
  %757 = load i32, ptr %747, align 1
  %758 = load i32, ptr %746, align 1
  %759 = xor i32 %758, %757
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %764, label %761

761:                                              ; preds = %756
  %762 = tail call i32 @llvm.cttz.i32(i32 %759, i1 true) #7, !range !8
  %763 = lshr i32 %762, 3
  br label %809

764:                                              ; preds = %770, %756
  %765 = phi ptr [ %768, %770 ], [ %746, %756 ]
  %766 = phi ptr [ %767, %770 ], [ %747, %756 ]
  %767 = getelementptr i8, ptr %766, i32 4
  %768 = getelementptr i8, ptr %765, i32 4
  %769 = icmp ult ptr %768, %754
  br i1 %769, label %770, label %782

770:                                              ; preds = %764
  %771 = load i32, ptr %767, align 1
  %772 = load i32, ptr %768, align 1
  %773 = xor i32 %772, %771
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %764, label %775

775:                                              ; preds = %770
  %776 = tail call i32 @llvm.cttz.i32(i32 %773, i1 true) #7, !range !8
  %777 = lshr i32 %776, 3
  %778 = getelementptr i8, ptr %768, i32 %777
  %779 = ptrtoint ptr %778 to i32
  %780 = ptrtoint ptr %746 to i32
  %781 = sub i32 %779, %780
  br label %809

782:                                              ; preds = %764, %744
  %783 = phi ptr [ %746, %744 ], [ %768, %764 ]
  %784 = phi ptr [ %747, %744 ], [ %767, %764 ]
  %785 = getelementptr i8, ptr %753, i32 -1
  %786 = icmp ult ptr %783, %785
  br i1 %786, label %787, label %794

787:                                              ; preds = %782
  %788 = load i16, ptr %784, align 1
  %789 = load i16, ptr %783, align 1
  %790 = icmp eq i16 %788, %789
  br i1 %790, label %791, label %794

791:                                              ; preds = %787
  %792 = getelementptr i8, ptr %783, i32 2
  %793 = getelementptr i8, ptr %784, i32 2
  br label %794

794:                                              ; preds = %791, %787, %782
  %795 = phi ptr [ %792, %791 ], [ %783, %787 ], [ %783, %782 ]
  %796 = phi ptr [ %793, %791 ], [ %784, %787 ], [ %784, %782 ]
  %797 = icmp ult ptr %795, %753
  br i1 %797, label %798, label %804

798:                                              ; preds = %794
  %799 = load i8, ptr %796, align 1
  %800 = load i8, ptr %795, align 1
  %801 = icmp eq i8 %799, %800
  %802 = zext i1 %801 to i32
  %803 = getelementptr i8, ptr %795, i32 %802
  br label %804

804:                                              ; preds = %798, %794
  %805 = phi ptr [ %795, %794 ], [ %803, %798 ]
  %806 = ptrtoint ptr %805 to i32
  %807 = ptrtoint ptr %746 to i32
  %808 = sub i32 %806, %807
  br label %809

809:                                              ; preds = %804, %775, %761
  %810 = phi i32 [ %808, %804 ], [ %763, %761 ], [ %781, %775 ]
  %811 = getelementptr i8, ptr %747, i32 %810
  %812 = icmp eq ptr %811, %745
  br i1 %812, label %813, label %871

813:                                              ; preds = %809
  %814 = getelementptr i8, ptr %746, i32 %810
  %815 = icmp ugt ptr %42, %814
  br i1 %815, label %816, label %842

816:                                              ; preds = %813
  %817 = load i32, ptr %15, align 1
  %818 = load i32, ptr %814, align 1
  %819 = xor i32 %818, %817
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %824, label %821

821:                                              ; preds = %816
  %822 = tail call i32 @llvm.cttz.i32(i32 %819, i1 true) #7, !range !8
  %823 = lshr i32 %822, 3
  br label %868

824:                                              ; preds = %830, %816
  %825 = phi ptr [ %828, %830 ], [ %814, %816 ]
  %826 = phi ptr [ %827, %830 ], [ %15, %816 ]
  %827 = getelementptr i8, ptr %826, i32 4
  %828 = getelementptr i8, ptr %825, i32 4
  %829 = icmp ult ptr %828, %42
  br i1 %829, label %830, label %842

830:                                              ; preds = %824
  %831 = load i32, ptr %827, align 1
  %832 = load i32, ptr %828, align 1
  %833 = xor i32 %832, %831
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %824, label %835

835:                                              ; preds = %830
  %836 = tail call i32 @llvm.cttz.i32(i32 %833, i1 true) #7, !range !8
  %837 = lshr i32 %836, 3
  %838 = getelementptr i8, ptr %828, i32 %837
  %839 = ptrtoint ptr %838 to i32
  %840 = ptrtoint ptr %814 to i32
  %841 = sub i32 %839, %840
  br label %868

842:                                              ; preds = %824, %813
  %843 = phi ptr [ %814, %813 ], [ %828, %824 ]
  %844 = phi ptr [ %15, %813 ], [ %827, %824 ]
  %845 = icmp ult ptr %843, %43
  br i1 %845, label %846, label %853

846:                                              ; preds = %842
  %847 = load i16, ptr %844, align 1
  %848 = load i16, ptr %843, align 1
  %849 = icmp eq i16 %847, %848
  br i1 %849, label %850, label %853

850:                                              ; preds = %846
  %851 = getelementptr i8, ptr %843, i32 2
  %852 = getelementptr i8, ptr %844, i32 2
  br label %853

853:                                              ; preds = %850, %846, %842
  %854 = phi ptr [ %851, %850 ], [ %843, %846 ], [ %843, %842 ]
  %855 = phi ptr [ %852, %850 ], [ %844, %846 ], [ %844, %842 ]
  %856 = icmp ult ptr %854, %9
  br i1 %856, label %857, label %863

857:                                              ; preds = %853
  %858 = load i8, ptr %855, align 1
  %859 = load i8, ptr %854, align 1
  %860 = icmp eq i8 %858, %859
  %861 = zext i1 %860 to i32
  %862 = getelementptr i8, ptr %854, i32 %861
  br label %863

863:                                              ; preds = %857, %853
  %864 = phi ptr [ %854, %853 ], [ %862, %857 ]
  %865 = ptrtoint ptr %864 to i32
  %866 = ptrtoint ptr %814 to i32
  %867 = sub i32 %865, %866
  br label %868

868:                                              ; preds = %863, %835, %821
  %869 = phi i32 [ %867, %863 ], [ %823, %821 ], [ %841, %835 ]
  %870 = add i32 %869, %810
  br label %871

871:                                              ; preds = %868, %809
  %872 = phi i32 [ %870, %868 ], [ %810, %809 ]
  %873 = add i32 %872, 4
  %874 = add i32 %872, 1
  %875 = icmp ugt ptr %728, %45
  br i1 %875, label %879, label %876

876:                                              ; preds = %871
  %877 = load ptr, ptr %46, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %877, ptr noundef align 1 dereferenceable(16) %728, i32 16, i1 false) #7
  %878 = load ptr, ptr %49, align 4
  br label %879

879:                                              ; preds = %876, %871
  %880 = phi ptr [ %727, %871 ], [ %878, %876 ]
  %881 = getelementptr inbounds %struct.seqDef_s, ptr %880, i32 0, i32 1
  store i16 0, ptr %881, align 4
  %882 = load ptr, ptr %49, align 4
  store i32 1, ptr %882, align 4
  %883 = icmp ugt i32 %874, 65535
  br i1 %883, label %886, label %884

884:                                              ; preds = %879
  %885 = load ptr, ptr %49, align 4
  br label %893

886:                                              ; preds = %879
  store i32 2, ptr %48, align 4
  %887 = load ptr, ptr %49, align 4
  %888 = load ptr, ptr %1, align 4
  %889 = ptrtoint ptr %887 to i32
  %890 = ptrtoint ptr %888 to i32
  %891 = sub i32 %889, %890
  %892 = ashr exact i32 %891, 3
  store i32 %892, ptr %50, align 4
  br label %893

893:                                              ; preds = %886, %884
  %894 = phi ptr [ %885, %884 ], [ %887, %886 ]
  %895 = trunc i32 %874 to i16
  %896 = getelementptr inbounds %struct.seqDef_s, ptr %894, i32 0, i32 2
  store i16 %895, ptr %896, align 2
  %897 = load ptr, ptr %49, align 4
  %898 = getelementptr %struct.seqDef_s, ptr %897, i32 1
  store ptr %898, ptr %49, align 4
  %899 = getelementptr i8, ptr %728, i32 %873
  %900 = icmp ugt ptr %899, %10
  br i1 %900, label %901, label %726

901:                                              ; preds = %893, %740, %726, %718, %210
  %902 = phi i32 [ %56, %210 ], [ %627, %718 ], [ %730, %726 ], [ %730, %740 ], [ %729, %893 ]
  %903 = phi i32 [ %55, %210 ], [ %628, %718 ], [ %729, %726 ], [ %729, %740 ], [ %730, %893 ]
  %904 = phi ptr [ %54, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %905 = phi ptr [ %215, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %906 = icmp ult ptr %905, %10
  br i1 %906, label %52, label %907

907:                                              ; preds = %901
  %908 = ptrtoint ptr %904 to i32
  br label %909

909:                                              ; preds = %907, %5
  %910 = phi i32 [ %908, %907 ], [ %31, %5 ]
  %911 = phi i32 [ %902, %907 ], [ %18, %5 ]
  %912 = phi i32 [ %903, %907 ], [ %16, %5 ]
  store i32 %912, ptr %2, align 4
  store i32 %911, ptr %17, align 4
  %913 = ptrtoint ptr %9 to i32
  %914 = sub i32 %913, %910
  ret i32 %914
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy2_dictMatchState(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %22
  %26 = load ptr, ptr %20, align 4
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %24 to i32
  %29 = add i32 %14, %28
  %30 = sub i32 %29, %27
  %31 = ptrtoint ptr %3 to i32
  %32 = ptrtoint ptr %15 to i32
  %33 = sub i32 %31, %32
  %34 = ptrtoint ptr %25 to i32
  %35 = sub i32 %34, %27
  %36 = icmp eq i32 %33, %35
  %37 = zext i1 %36 to i32
  %38 = getelementptr i8, ptr %3, i32 %37
  %39 = icmp ult ptr %38, %10
  br i1 %39, label %40, label %909

40:                                               ; preds = %5
  %41 = ptrtoint ptr %12 to i32
  %42 = getelementptr i8, ptr %9, i32 -3
  %43 = getelementptr i8, ptr %9, i32 -1
  %44 = sub i32 0, %30
  %45 = getelementptr i8, ptr %9, i32 -32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %47 = ptrtoint ptr %45 to i32
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %51 = getelementptr i8, ptr %24, i32 %44
  br label %52

52:                                               ; preds = %901, %40
  %53 = phi ptr [ %38, %40 ], [ %905, %901 ]
  %54 = phi ptr [ %3, %40 ], [ %904, %901 ]
  %55 = phi i32 [ %16, %40 ], [ %903, %901 ]
  %56 = phi i32 [ %18, %40 ], [ %902, %901 ]
  %57 = getelementptr i8, ptr %53, i32 1
  %58 = ptrtoint ptr %53 to i32
  %59 = add i32 %55, %41
  %60 = sub i32 1, %59
  %61 = add i32 %60, %58
  %62 = icmp ult i32 %61, %14
  %63 = sub i32 %61, %30
  %64 = getelementptr i8, ptr %24, i32 %63
  %65 = getelementptr i8, ptr %12, i32 %61
  %66 = select i1 %62, ptr %64, ptr %65
  %67 = xor i32 %61, -1
  %68 = add i32 %14, %67
  %69 = icmp ugt i32 %68, 2
  br i1 %69, label %70, label %204

70:                                               ; preds = %52
  %71 = load i32, ptr %66, align 1
  %72 = load i32, ptr %57, align 1
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %204

74:                                               ; preds = %70
  %75 = select i1 %62, ptr %26, ptr %9
  %76 = getelementptr i8, ptr %53, i32 5
  %77 = getelementptr i8, ptr %66, i32 4
  %78 = ptrtoint ptr %75 to i32
  %79 = ptrtoint ptr %77 to i32
  %80 = sub i32 %78, %79
  %81 = getelementptr i8, ptr %76, i32 %80
  %82 = icmp ult ptr %81, %9
  %83 = select i1 %82, ptr %81, ptr %9
  %84 = getelementptr i8, ptr %83, i32 -3
  %85 = icmp ugt ptr %84, %76
  br i1 %85, label %86, label %112

86:                                               ; preds = %74
  %87 = load i32, ptr %77, align 1
  %88 = load i32, ptr %76, align 1
  %89 = xor i32 %88, %87
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = tail call i32 @llvm.cttz.i32(i32 %89, i1 true) #7, !range !8
  %93 = lshr i32 %92, 3
  br label %139

94:                                               ; preds = %100, %86
  %95 = phi ptr [ %98, %100 ], [ %76, %86 ]
  %96 = phi ptr [ %97, %100 ], [ %77, %86 ]
  %97 = getelementptr i8, ptr %96, i32 4
  %98 = getelementptr i8, ptr %95, i32 4
  %99 = icmp ult ptr %98, %84
  br i1 %99, label %100, label %112

100:                                              ; preds = %94
  %101 = load i32, ptr %97, align 1
  %102 = load i32, ptr %98, align 1
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %94, label %105

105:                                              ; preds = %100
  %106 = tail call i32 @llvm.cttz.i32(i32 %103, i1 true) #7, !range !8
  %107 = lshr i32 %106, 3
  %108 = getelementptr i8, ptr %98, i32 %107
  %109 = ptrtoint ptr %108 to i32
  %110 = ptrtoint ptr %76 to i32
  %111 = sub i32 %109, %110
  br label %139

112:                                              ; preds = %94, %74
  %113 = phi ptr [ %76, %74 ], [ %98, %94 ]
  %114 = phi ptr [ %77, %74 ], [ %97, %94 ]
  %115 = getelementptr i8, ptr %83, i32 -1
  %116 = icmp ult ptr %113, %115
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = load i16, ptr %114, align 1
  %119 = load i16, ptr %113, align 1
  %120 = icmp eq i16 %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr i8, ptr %113, i32 2
  %123 = getelementptr i8, ptr %114, i32 2
  br label %124

124:                                              ; preds = %121, %117, %112
  %125 = phi ptr [ %122, %121 ], [ %113, %117 ], [ %113, %112 ]
  %126 = phi ptr [ %123, %121 ], [ %114, %117 ], [ %114, %112 ]
  %127 = icmp ult ptr %125, %83
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = load i8, ptr %126, align 1
  %130 = load i8, ptr %125, align 1
  %131 = icmp eq i8 %129, %130
  %132 = zext i1 %131 to i32
  %133 = getelementptr i8, ptr %125, i32 %132
  br label %134

134:                                              ; preds = %128, %124
  %135 = phi ptr [ %125, %124 ], [ %133, %128 ]
  %136 = ptrtoint ptr %135 to i32
  %137 = ptrtoint ptr %76 to i32
  %138 = sub i32 %136, %137
  br label %139

139:                                              ; preds = %134, %105, %91
  %140 = phi i32 [ %138, %134 ], [ %93, %91 ], [ %111, %105 ]
  %141 = getelementptr i8, ptr %77, i32 %140
  %142 = icmp eq ptr %141, %75
  br i1 %142, label %143, label %201

143:                                              ; preds = %139
  %144 = getelementptr i8, ptr %76, i32 %140
  %145 = icmp ugt ptr %42, %144
  br i1 %145, label %146, label %172

146:                                              ; preds = %143
  %147 = load i32, ptr %15, align 1
  %148 = load i32, ptr %144, align 1
  %149 = xor i32 %148, %147
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = tail call i32 @llvm.cttz.i32(i32 %149, i1 true) #7, !range !8
  %153 = lshr i32 %152, 3
  br label %198

154:                                              ; preds = %160, %146
  %155 = phi ptr [ %158, %160 ], [ %144, %146 ]
  %156 = phi ptr [ %157, %160 ], [ %15, %146 ]
  %157 = getelementptr i8, ptr %156, i32 4
  %158 = getelementptr i8, ptr %155, i32 4
  %159 = icmp ult ptr %158, %42
  br i1 %159, label %160, label %172

160:                                              ; preds = %154
  %161 = load i32, ptr %157, align 1
  %162 = load i32, ptr %158, align 1
  %163 = xor i32 %162, %161
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %154, label %165

165:                                              ; preds = %160
  %166 = tail call i32 @llvm.cttz.i32(i32 %163, i1 true) #7, !range !8
  %167 = lshr i32 %166, 3
  %168 = getelementptr i8, ptr %158, i32 %167
  %169 = ptrtoint ptr %168 to i32
  %170 = ptrtoint ptr %144 to i32
  %171 = sub i32 %169, %170
  br label %198

172:                                              ; preds = %154, %143
  %173 = phi ptr [ %144, %143 ], [ %158, %154 ]
  %174 = phi ptr [ %15, %143 ], [ %157, %154 ]
  %175 = icmp ult ptr %173, %43
  br i1 %175, label %176, label %183

176:                                              ; preds = %172
  %177 = load i16, ptr %174, align 1
  %178 = load i16, ptr %173, align 1
  %179 = icmp eq i16 %177, %178
  br i1 %179, label %180, label %183

180:                                              ; preds = %176
  %181 = getelementptr i8, ptr %173, i32 2
  %182 = getelementptr i8, ptr %174, i32 2
  br label %183

183:                                              ; preds = %180, %176, %172
  %184 = phi ptr [ %181, %180 ], [ %173, %176 ], [ %173, %172 ]
  %185 = phi ptr [ %182, %180 ], [ %174, %176 ], [ %174, %172 ]
  %186 = icmp ult ptr %184, %9
  br i1 %186, label %187, label %193

187:                                              ; preds = %183
  %188 = load i8, ptr %185, align 1
  %189 = load i8, ptr %184, align 1
  %190 = icmp eq i8 %188, %189
  %191 = zext i1 %190 to i32
  %192 = getelementptr i8, ptr %184, i32 %191
  br label %193

193:                                              ; preds = %187, %183
  %194 = phi ptr [ %184, %183 ], [ %192, %187 ]
  %195 = ptrtoint ptr %194 to i32
  %196 = ptrtoint ptr %144 to i32
  %197 = sub i32 %195, %196
  br label %198

198:                                              ; preds = %193, %165, %151
  %199 = phi i32 [ %197, %193 ], [ %153, %151 ], [ %171, %165 ]
  %200 = add i32 %199, %140
  br label %201

201:                                              ; preds = %198, %139
  %202 = phi i32 [ %200, %198 ], [ %140, %139 ]
  %203 = add i32 %202, 4
  br label %204

204:                                              ; preds = %201, %70, %52
  %205 = phi i32 [ %203, %201 ], [ 0, %70 ], [ 0, %52 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %206 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %53, ptr noundef %9, ptr noundef nonnull %6) #7
  %207 = load i32, ptr %6, align 4
  %208 = tail call i32 @llvm.umax.i32(i32 %206, i32 %205) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %209 = icmp ult i32 %208, 4
  br i1 %209, label %210, label %216

210:                                              ; preds = %204
  %211 = ptrtoint ptr %54 to i32
  %212 = sub i32 %58, %211
  %213 = ashr i32 %212, 8
  %214 = add nsw i32 %213, 1
  %215 = getelementptr i8, ptr %53, i32 %214
  br label %901

216:                                              ; preds = %204
  %217 = icmp ugt i32 %206, %205
  %218 = select i1 %217, ptr %53, ptr %57
  %219 = select i1 %217, i32 %207, i32 0
  %220 = icmp ult ptr %53, %10
  br i1 %220, label %221, label %591

221:                                              ; preds = %404, %216
  %222 = phi ptr [ %407, %404 ], [ %53, %216 ]
  %223 = phi ptr [ %407, %404 ], [ %218, %216 ]
  %224 = phi i32 [ %406, %404 ], [ %219, %216 ]
  %225 = phi i32 [ %405, %404 ], [ %208, %216 ]
  %226 = getelementptr i8, ptr %222, i32 1
  %227 = ptrtoint ptr %226 to i32
  %228 = sub i32 %227, %59
  %229 = icmp ult i32 %228, %14
  %230 = sub i32 %228, %30
  %231 = getelementptr i8, ptr %24, i32 %230
  %232 = getelementptr i8, ptr %12, i32 %228
  %233 = select i1 %229, ptr %231, ptr %232
  %234 = xor i32 %228, -1
  %235 = add i32 %14, %234
  %236 = icmp ugt i32 %235, 2
  br i1 %236, label %237, label %382

237:                                              ; preds = %221
  %238 = load i32, ptr %233, align 1
  %239 = load i32, ptr %226, align 1
  %240 = icmp eq i32 %238, %239
  br i1 %240, label %241, label %382

241:                                              ; preds = %237
  %242 = select i1 %229, ptr %26, ptr %9
  %243 = getelementptr i8, ptr %222, i32 5
  %244 = getelementptr i8, ptr %233, i32 4
  %245 = ptrtoint ptr %242 to i32
  %246 = ptrtoint ptr %244 to i32
  %247 = sub i32 %245, %246
  %248 = getelementptr i8, ptr %243, i32 %247
  %249 = icmp ult ptr %248, %9
  %250 = select i1 %249, ptr %248, ptr %9
  %251 = getelementptr i8, ptr %250, i32 -3
  %252 = icmp ugt ptr %251, %243
  br i1 %252, label %253, label %279

253:                                              ; preds = %241
  %254 = load i32, ptr %244, align 1
  %255 = load i32, ptr %243, align 1
  %256 = xor i32 %255, %254
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %253
  %259 = tail call i32 @llvm.cttz.i32(i32 %256, i1 true) #7, !range !8
  %260 = lshr i32 %259, 3
  br label %306

261:                                              ; preds = %267, %253
  %262 = phi ptr [ %265, %267 ], [ %243, %253 ]
  %263 = phi ptr [ %264, %267 ], [ %244, %253 ]
  %264 = getelementptr i8, ptr %263, i32 4
  %265 = getelementptr i8, ptr %262, i32 4
  %266 = icmp ult ptr %265, %251
  br i1 %266, label %267, label %279

267:                                              ; preds = %261
  %268 = load i32, ptr %264, align 1
  %269 = load i32, ptr %265, align 1
  %270 = xor i32 %269, %268
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %261, label %272

272:                                              ; preds = %267
  %273 = tail call i32 @llvm.cttz.i32(i32 %270, i1 true) #7, !range !8
  %274 = lshr i32 %273, 3
  %275 = getelementptr i8, ptr %265, i32 %274
  %276 = ptrtoint ptr %275 to i32
  %277 = ptrtoint ptr %243 to i32
  %278 = sub i32 %276, %277
  br label %306

279:                                              ; preds = %261, %241
  %280 = phi ptr [ %243, %241 ], [ %265, %261 ]
  %281 = phi ptr [ %244, %241 ], [ %264, %261 ]
  %282 = getelementptr i8, ptr %250, i32 -1
  %283 = icmp ult ptr %280, %282
  br i1 %283, label %284, label %291

284:                                              ; preds = %279
  %285 = load i16, ptr %281, align 1
  %286 = load i16, ptr %280, align 1
  %287 = icmp eq i16 %285, %286
  br i1 %287, label %288, label %291

288:                                              ; preds = %284
  %289 = getelementptr i8, ptr %280, i32 2
  %290 = getelementptr i8, ptr %281, i32 2
  br label %291

291:                                              ; preds = %288, %284, %279
  %292 = phi ptr [ %289, %288 ], [ %280, %284 ], [ %280, %279 ]
  %293 = phi ptr [ %290, %288 ], [ %281, %284 ], [ %281, %279 ]
  %294 = icmp ult ptr %292, %250
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = load i8, ptr %293, align 1
  %297 = load i8, ptr %292, align 1
  %298 = icmp eq i8 %296, %297
  %299 = zext i1 %298 to i32
  %300 = getelementptr i8, ptr %292, i32 %299
  br label %301

301:                                              ; preds = %295, %291
  %302 = phi ptr [ %292, %291 ], [ %300, %295 ]
  %303 = ptrtoint ptr %302 to i32
  %304 = ptrtoint ptr %243 to i32
  %305 = sub i32 %303, %304
  br label %306

306:                                              ; preds = %301, %272, %258
  %307 = phi i32 [ %305, %301 ], [ %260, %258 ], [ %278, %272 ]
  %308 = getelementptr i8, ptr %244, i32 %307
  %309 = icmp eq ptr %308, %242
  br i1 %309, label %310, label %368

310:                                              ; preds = %306
  %311 = getelementptr i8, ptr %243, i32 %307
  %312 = icmp ugt ptr %42, %311
  br i1 %312, label %313, label %339

313:                                              ; preds = %310
  %314 = load i32, ptr %15, align 1
  %315 = load i32, ptr %311, align 1
  %316 = xor i32 %315, %314
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %313
  %319 = tail call i32 @llvm.cttz.i32(i32 %316, i1 true) #7, !range !8
  %320 = lshr i32 %319, 3
  br label %365

321:                                              ; preds = %327, %313
  %322 = phi ptr [ %325, %327 ], [ %311, %313 ]
  %323 = phi ptr [ %324, %327 ], [ %15, %313 ]
  %324 = getelementptr i8, ptr %323, i32 4
  %325 = getelementptr i8, ptr %322, i32 4
  %326 = icmp ult ptr %325, %42
  br i1 %326, label %327, label %339

327:                                              ; preds = %321
  %328 = load i32, ptr %324, align 1
  %329 = load i32, ptr %325, align 1
  %330 = xor i32 %329, %328
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %321, label %332

332:                                              ; preds = %327
  %333 = tail call i32 @llvm.cttz.i32(i32 %330, i1 true) #7, !range !8
  %334 = lshr i32 %333, 3
  %335 = getelementptr i8, ptr %325, i32 %334
  %336 = ptrtoint ptr %335 to i32
  %337 = ptrtoint ptr %311 to i32
  %338 = sub i32 %336, %337
  br label %365

339:                                              ; preds = %321, %310
  %340 = phi ptr [ %311, %310 ], [ %325, %321 ]
  %341 = phi ptr [ %15, %310 ], [ %324, %321 ]
  %342 = icmp ult ptr %340, %43
  br i1 %342, label %343, label %350

343:                                              ; preds = %339
  %344 = load i16, ptr %341, align 1
  %345 = load i16, ptr %340, align 1
  %346 = icmp eq i16 %344, %345
  br i1 %346, label %347, label %350

347:                                              ; preds = %343
  %348 = getelementptr i8, ptr %340, i32 2
  %349 = getelementptr i8, ptr %341, i32 2
  br label %350

350:                                              ; preds = %347, %343, %339
  %351 = phi ptr [ %348, %347 ], [ %340, %343 ], [ %340, %339 ]
  %352 = phi ptr [ %349, %347 ], [ %341, %343 ], [ %341, %339 ]
  %353 = icmp ult ptr %351, %9
  br i1 %353, label %354, label %360

354:                                              ; preds = %350
  %355 = load i8, ptr %352, align 1
  %356 = load i8, ptr %351, align 1
  %357 = icmp eq i8 %355, %356
  %358 = zext i1 %357 to i32
  %359 = getelementptr i8, ptr %351, i32 %358
  br label %360

360:                                              ; preds = %354, %350
  %361 = phi ptr [ %351, %350 ], [ %359, %354 ]
  %362 = ptrtoint ptr %361 to i32
  %363 = ptrtoint ptr %311 to i32
  %364 = sub i32 %362, %363
  br label %365

365:                                              ; preds = %360, %332, %318
  %366 = phi i32 [ %364, %360 ], [ %320, %318 ], [ %338, %332 ]
  %367 = add i32 %366, %307
  br label %368

368:                                              ; preds = %365, %306
  %369 = phi i32 [ %367, %365 ], [ %307, %306 ]
  %370 = add i32 %369, 4
  %371 = icmp ult i32 %369, -4
  br i1 %371, label %372, label %382

372:                                              ; preds = %368
  %373 = add i32 %224, 1
  %374 = tail call i32 @llvm.ctlz.i32(i32 %373, i1 false) #7, !range !8
  %375 = xor i32 %374, -32
  %376 = mul i32 %225, 3
  %377 = add i32 %376, 2
  %378 = add i32 %377, %375
  %379 = mul i32 %370, 3
  %380 = icmp sgt i32 %379, %378
  br i1 %380, label %381, label %382

381:                                              ; preds = %372
  br label %382

382:                                              ; preds = %381, %372, %368, %237, %221
  %383 = phi i32 [ %225, %237 ], [ %225, %221 ], [ %370, %381 ], [ %225, %372 ], [ %225, %368 ]
  %384 = phi i32 [ %224, %237 ], [ %224, %221 ], [ 0, %381 ], [ %224, %372 ], [ %224, %368 ]
  %385 = phi ptr [ %223, %237 ], [ %223, %221 ], [ %226, %381 ], [ %223, %372 ], [ %223, %368 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %386 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %226, ptr noundef %9, ptr noundef nonnull %7) #7
  %387 = load i32, ptr %7, align 4
  %388 = icmp ugt i32 %386, 3
  br i1 %388, label %389, label %409

389:                                              ; preds = %382
  %390 = add i32 %384, 1
  %391 = tail call i32 @llvm.ctlz.i32(i32 %390, i1 false) #7, !range !8
  %392 = xor i32 %391, -32
  %393 = add i32 %387, 1
  %394 = tail call i32 @llvm.ctlz.i32(i32 %393, i1 false) #7, !range !8
  %395 = xor i32 %394, -32
  %396 = shl i32 %383, 2
  %397 = add i32 %396, 5
  %398 = add i32 %397, %392
  %399 = shl i32 %386, 2
  %400 = or i32 %399, 1
  %401 = add i32 %400, %395
  %402 = icmp sgt i32 %401, %398
  br i1 %402, label %403, label %409

403:                                              ; preds = %389
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  br label %404

404:                                              ; preds = %590, %403
  %405 = phi i32 [ %386, %403 ], [ %572, %590 ]
  %406 = phi i32 [ %387, %403 ], [ %573, %590 ]
  %407 = phi ptr [ %226, %403 ], [ %412, %590 ]
  %408 = icmp ult ptr %407, %10
  br i1 %408, label %221, label %591

409:                                              ; preds = %389, %382
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %410 = icmp ult ptr %226, %10
  br i1 %410, label %411, label %591

411:                                              ; preds = %409
  %412 = getelementptr i8, ptr %222, i32 2
  %413 = ptrtoint ptr %412 to i32
  %414 = sub i32 %413, %59
  %415 = icmp ult i32 %414, %14
  %416 = sub i32 %414, %30
  %417 = getelementptr i8, ptr %24, i32 %416
  %418 = getelementptr i8, ptr %12, i32 %414
  %419 = select i1 %415, ptr %417, ptr %418
  %420 = xor i32 %414, -1
  %421 = add i32 %14, %420
  %422 = icmp ugt i32 %421, 2
  br i1 %422, label %423, label %568

423:                                              ; preds = %411
  %424 = load i32, ptr %419, align 1
  %425 = load i32, ptr %412, align 1
  %426 = icmp eq i32 %424, %425
  br i1 %426, label %427, label %568

427:                                              ; preds = %423
  %428 = select i1 %415, ptr %26, ptr %9
  %429 = getelementptr i8, ptr %222, i32 6
  %430 = getelementptr i8, ptr %419, i32 4
  %431 = ptrtoint ptr %428 to i32
  %432 = ptrtoint ptr %430 to i32
  %433 = sub i32 %431, %432
  %434 = getelementptr i8, ptr %429, i32 %433
  %435 = icmp ult ptr %434, %9
  %436 = select i1 %435, ptr %434, ptr %9
  %437 = getelementptr i8, ptr %436, i32 -3
  %438 = icmp ugt ptr %437, %429
  br i1 %438, label %439, label %465

439:                                              ; preds = %427
  %440 = load i32, ptr %430, align 1
  %441 = load i32, ptr %429, align 1
  %442 = xor i32 %441, %440
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %439
  %445 = tail call i32 @llvm.cttz.i32(i32 %442, i1 true) #7, !range !8
  %446 = lshr i32 %445, 3
  br label %492

447:                                              ; preds = %453, %439
  %448 = phi ptr [ %451, %453 ], [ %429, %439 ]
  %449 = phi ptr [ %450, %453 ], [ %430, %439 ]
  %450 = getelementptr i8, ptr %449, i32 4
  %451 = getelementptr i8, ptr %448, i32 4
  %452 = icmp ult ptr %451, %437
  br i1 %452, label %453, label %465

453:                                              ; preds = %447
  %454 = load i32, ptr %450, align 1
  %455 = load i32, ptr %451, align 1
  %456 = xor i32 %455, %454
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %447, label %458

458:                                              ; preds = %453
  %459 = tail call i32 @llvm.cttz.i32(i32 %456, i1 true) #7, !range !8
  %460 = lshr i32 %459, 3
  %461 = getelementptr i8, ptr %451, i32 %460
  %462 = ptrtoint ptr %461 to i32
  %463 = ptrtoint ptr %429 to i32
  %464 = sub i32 %462, %463
  br label %492

465:                                              ; preds = %447, %427
  %466 = phi ptr [ %429, %427 ], [ %451, %447 ]
  %467 = phi ptr [ %430, %427 ], [ %450, %447 ]
  %468 = getelementptr i8, ptr %436, i32 -1
  %469 = icmp ult ptr %466, %468
  br i1 %469, label %470, label %477

470:                                              ; preds = %465
  %471 = load i16, ptr %467, align 1
  %472 = load i16, ptr %466, align 1
  %473 = icmp eq i16 %471, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %470
  %475 = getelementptr i8, ptr %466, i32 2
  %476 = getelementptr i8, ptr %467, i32 2
  br label %477

477:                                              ; preds = %474, %470, %465
  %478 = phi ptr [ %475, %474 ], [ %466, %470 ], [ %466, %465 ]
  %479 = phi ptr [ %476, %474 ], [ %467, %470 ], [ %467, %465 ]
  %480 = icmp ult ptr %478, %436
  br i1 %480, label %481, label %487

481:                                              ; preds = %477
  %482 = load i8, ptr %479, align 1
  %483 = load i8, ptr %478, align 1
  %484 = icmp eq i8 %482, %483
  %485 = zext i1 %484 to i32
  %486 = getelementptr i8, ptr %478, i32 %485
  br label %487

487:                                              ; preds = %481, %477
  %488 = phi ptr [ %478, %477 ], [ %486, %481 ]
  %489 = ptrtoint ptr %488 to i32
  %490 = ptrtoint ptr %429 to i32
  %491 = sub i32 %489, %490
  br label %492

492:                                              ; preds = %487, %458, %444
  %493 = phi i32 [ %491, %487 ], [ %446, %444 ], [ %464, %458 ]
  %494 = getelementptr i8, ptr %430, i32 %493
  %495 = icmp eq ptr %494, %428
  br i1 %495, label %496, label %554

496:                                              ; preds = %492
  %497 = getelementptr i8, ptr %429, i32 %493
  %498 = icmp ugt ptr %42, %497
  br i1 %498, label %499, label %525

499:                                              ; preds = %496
  %500 = load i32, ptr %15, align 1
  %501 = load i32, ptr %497, align 1
  %502 = xor i32 %501, %500
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = tail call i32 @llvm.cttz.i32(i32 %502, i1 true) #7, !range !8
  %506 = lshr i32 %505, 3
  br label %551

507:                                              ; preds = %513, %499
  %508 = phi ptr [ %511, %513 ], [ %497, %499 ]
  %509 = phi ptr [ %510, %513 ], [ %15, %499 ]
  %510 = getelementptr i8, ptr %509, i32 4
  %511 = getelementptr i8, ptr %508, i32 4
  %512 = icmp ult ptr %511, %42
  br i1 %512, label %513, label %525

513:                                              ; preds = %507
  %514 = load i32, ptr %510, align 1
  %515 = load i32, ptr %511, align 1
  %516 = xor i32 %515, %514
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %507, label %518

518:                                              ; preds = %513
  %519 = tail call i32 @llvm.cttz.i32(i32 %516, i1 true) #7, !range !8
  %520 = lshr i32 %519, 3
  %521 = getelementptr i8, ptr %511, i32 %520
  %522 = ptrtoint ptr %521 to i32
  %523 = ptrtoint ptr %497 to i32
  %524 = sub i32 %522, %523
  br label %551

525:                                              ; preds = %507, %496
  %526 = phi ptr [ %497, %496 ], [ %511, %507 ]
  %527 = phi ptr [ %15, %496 ], [ %510, %507 ]
  %528 = icmp ult ptr %526, %43
  br i1 %528, label %529, label %536

529:                                              ; preds = %525
  %530 = load i16, ptr %527, align 1
  %531 = load i16, ptr %526, align 1
  %532 = icmp eq i16 %530, %531
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  %534 = getelementptr i8, ptr %526, i32 2
  %535 = getelementptr i8, ptr %527, i32 2
  br label %536

536:                                              ; preds = %533, %529, %525
  %537 = phi ptr [ %534, %533 ], [ %526, %529 ], [ %526, %525 ]
  %538 = phi ptr [ %535, %533 ], [ %527, %529 ], [ %527, %525 ]
  %539 = icmp ult ptr %537, %9
  br i1 %539, label %540, label %546

540:                                              ; preds = %536
  %541 = load i8, ptr %538, align 1
  %542 = load i8, ptr %537, align 1
  %543 = icmp eq i8 %541, %542
  %544 = zext i1 %543 to i32
  %545 = getelementptr i8, ptr %537, i32 %544
  br label %546

546:                                              ; preds = %540, %536
  %547 = phi ptr [ %537, %536 ], [ %545, %540 ]
  %548 = ptrtoint ptr %547 to i32
  %549 = ptrtoint ptr %497 to i32
  %550 = sub i32 %548, %549
  br label %551

551:                                              ; preds = %546, %518, %504
  %552 = phi i32 [ %550, %546 ], [ %506, %504 ], [ %524, %518 ]
  %553 = add i32 %552, %493
  br label %554

554:                                              ; preds = %551, %492
  %555 = phi i32 [ %553, %551 ], [ %493, %492 ]
  %556 = add i32 %555, 4
  %557 = icmp ult i32 %555, -4
  br i1 %557, label %558, label %568

558:                                              ; preds = %554
  %559 = add i32 %384, 1
  %560 = tail call i32 @llvm.ctlz.i32(i32 %559, i1 false) #7, !range !8
  %561 = xor i32 %560, -32
  %562 = shl i32 %383, 2
  %563 = or i32 %562, 2
  %564 = add i32 %563, %561
  %565 = shl i32 %556, 2
  %566 = icmp sgt i32 %565, %564
  br i1 %566, label %567, label %568

567:                                              ; preds = %558
  br label %568

568:                                              ; preds = %567, %558, %554, %423, %411
  %569 = phi i32 [ %383, %423 ], [ %383, %411 ], [ %556, %567 ], [ %383, %558 ], [ %383, %554 ]
  %570 = phi i32 [ %384, %423 ], [ %384, %411 ], [ 0, %567 ], [ %384, %558 ], [ %384, %554 ]
  %571 = phi ptr [ %385, %423 ], [ %385, %411 ], [ %412, %567 ], [ %385, %558 ], [ %385, %554 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %572 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %412, ptr noundef %9, ptr noundef nonnull %8) #7
  %573 = load i32, ptr %8, align 4
  %574 = icmp ugt i32 %572, 3
  br i1 %574, label %575, label %589

575:                                              ; preds = %568
  %576 = add i32 %570, 1
  %577 = tail call i32 @llvm.ctlz.i32(i32 %576, i1 false) #7, !range !8
  %578 = xor i32 %577, -32
  %579 = add i32 %573, 1
  %580 = tail call i32 @llvm.ctlz.i32(i32 %579, i1 false) #7, !range !8
  %581 = xor i32 %580, -32
  %582 = shl i32 %569, 2
  %583 = add i32 %582, 8
  %584 = add i32 %583, %578
  %585 = shl i32 %572, 2
  %586 = or i32 %585, 1
  %587 = add i32 %586, %581
  %588 = icmp sgt i32 %587, %584
  br i1 %588, label %590, label %589

589:                                              ; preds = %575, %568
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %591

590:                                              ; preds = %575
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %404

591:                                              ; preds = %589, %409, %404, %216
  %592 = phi i32 [ %208, %216 ], [ %569, %589 ], [ %405, %404 ], [ %383, %409 ]
  %593 = phi i32 [ %219, %216 ], [ %570, %589 ], [ %406, %404 ], [ %384, %409 ]
  %594 = phi ptr [ %218, %216 ], [ %571, %589 ], [ %407, %404 ], [ %385, %409 ]
  %595 = icmp eq i32 %593, 0
  br i1 %595, label %626, label %596

596:                                              ; preds = %591
  %597 = ptrtoint ptr %594 to i32
  %598 = add i32 %593, %41
  %599 = sub i32 2, %598
  %600 = add i32 %599, %597
  %601 = icmp ult i32 %600, %14
  %602 = select i1 %601, ptr %25, ptr %15
  %603 = select i1 %601, ptr %51, ptr %12
  %604 = getelementptr i8, ptr %603, i32 %600
  %605 = icmp ugt ptr %594, %54
  %606 = icmp ugt ptr %604, %602
  %607 = select i1 %605, i1 %606, i1 false
  br i1 %607, label %608, label %622

608:                                              ; preds = %617, %596
  %609 = phi ptr [ %614, %617 ], [ %604, %596 ]
  %610 = phi ptr [ %612, %617 ], [ %594, %596 ]
  %611 = phi i32 [ %618, %617 ], [ %592, %596 ]
  %612 = getelementptr i8, ptr %610, i32 -1
  %613 = load i8, ptr %612, align 1
  %614 = getelementptr i8, ptr %609, i32 -1
  %615 = load i8, ptr %614, align 1
  %616 = icmp eq i8 %613, %615
  br i1 %616, label %617, label %622

617:                                              ; preds = %608
  %618 = add i32 %611, 1
  %619 = icmp ugt ptr %612, %54
  %620 = icmp ugt ptr %614, %602
  %621 = select i1 %619, i1 %620, i1 false
  br i1 %621, label %608, label %622

622:                                              ; preds = %617, %608, %596
  %623 = phi i32 [ %592, %596 ], [ %611, %608 ], [ %618, %617 ]
  %624 = phi ptr [ %594, %596 ], [ %610, %608 ], [ %612, %617 ]
  %625 = add i32 %593, -2
  br label %626

626:                                              ; preds = %622, %591
  %627 = phi i32 [ %55, %622 ], [ %56, %591 ]
  %628 = phi i32 [ %625, %622 ], [ %55, %591 ]
  %629 = phi i32 [ %623, %622 ], [ %592, %591 ]
  %630 = phi ptr [ %624, %622 ], [ %594, %591 ]
  %631 = ptrtoint ptr %630 to i32
  %632 = ptrtoint ptr %54 to i32
  %633 = sub i32 %631, %632
  %634 = add i32 %629, -3
  %635 = getelementptr i8, ptr %54, i32 %633
  %636 = icmp ugt ptr %635, %45
  %637 = load ptr, ptr %46, align 4
  br i1 %636, label %659, label %638

638:                                              ; preds = %626
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %639 = icmp ugt i32 %633, 16
  %640 = load ptr, ptr %46, align 4
  br i1 %639, label %643, label %641

641:                                              ; preds = %638
  %642 = getelementptr i8, ptr %640, i32 %633
  store ptr %642, ptr %46, align 4
  br label %702

643:                                              ; preds = %638
  %644 = getelementptr i8, ptr %640, i32 16
  %645 = getelementptr i8, ptr %54, i32 16
  %646 = add i32 %633, -16
  %647 = getelementptr i8, ptr %640, i32 %633
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %644, ptr noundef align 1 dereferenceable(16) %645, i32 16, i1 false) #7
  %648 = icmp slt i32 %646, 17
  br i1 %648, label %691, label %649

649:                                              ; preds = %643
  %650 = getelementptr i8, ptr %640, i32 32
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi ptr [ %645, %649 ], [ %656, %651 ]
  %653 = phi ptr [ %650, %649 ], [ %657, %651 ]
  %654 = getelementptr i8, ptr %652, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %653, ptr noundef align 1 dereferenceable(16) %654, i32 16, i1 false) #7
  %655 = getelementptr i8, ptr %653, i32 16
  %656 = getelementptr i8, ptr %652, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %655, ptr noundef align 1 dereferenceable(16) %656, i32 16, i1 false) #7
  %657 = getelementptr i8, ptr %653, i32 32
  %658 = icmp ult ptr %657, %647
  br i1 %658, label %651, label %691

659:                                              ; preds = %626
  %660 = ptrtoint ptr %635 to i32
  %661 = icmp ult ptr %45, %54
  br i1 %661, label %676, label %662

662:                                              ; preds = %659
  %663 = sub i32 %47, %632
  %664 = getelementptr i8, ptr %637, i32 %663
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %665 = icmp slt i32 %663, 17
  br i1 %665, label %676, label %666

666:                                              ; preds = %662
  %667 = getelementptr i8, ptr %637, i32 16
  br label %668

668:                                              ; preds = %668, %666
  %669 = phi ptr [ %54, %666 ], [ %673, %668 ]
  %670 = phi ptr [ %667, %666 ], [ %674, %668 ]
  %671 = getelementptr i8, ptr %669, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %670, ptr noundef align 1 dereferenceable(16) %671, i32 16, i1 false) #7
  %672 = getelementptr i8, ptr %670, i32 16
  %673 = getelementptr i8, ptr %669, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %672, ptr noundef align 1 dereferenceable(16) %673, i32 16, i1 false) #7
  %674 = getelementptr i8, ptr %670, i32 32
  %675 = icmp ult ptr %674, %664
  br i1 %675, label %668, label %676

676:                                              ; preds = %668, %662, %659
  %677 = phi ptr [ %45, %662 ], [ %54, %659 ], [ %45, %668 ]
  %678 = phi ptr [ %664, %662 ], [ %637, %659 ], [ %664, %668 ]
  %679 = icmp ult ptr %677, %635
  br i1 %679, label %680, label %691

680:                                              ; preds = %676
  %681 = ptrtoint ptr %677 to i32
  %682 = sub i32 %660, %681
  %683 = getelementptr i8, ptr %677, i32 %682
  br label %684

684:                                              ; preds = %684, %680
  %685 = phi ptr [ %689, %684 ], [ %678, %680 ]
  %686 = phi ptr [ %687, %684 ], [ %677, %680 ]
  %687 = getelementptr i8, ptr %686, i32 1
  %688 = load i8, ptr %686, align 1
  %689 = getelementptr i8, ptr %685, i32 1
  store i8 %688, ptr %685, align 1
  %690 = icmp eq ptr %687, %683
  br i1 %690, label %691, label %684

691:                                              ; preds = %684, %676, %651, %643
  %692 = load ptr, ptr %46, align 4
  %693 = getelementptr i8, ptr %692, i32 %633
  store ptr %693, ptr %46, align 4
  %694 = icmp ugt i32 %633, 65535
  br i1 %694, label %695, label %702

695:                                              ; preds = %691
  store i32 1, ptr %48, align 4
  %696 = load ptr, ptr %49, align 4
  %697 = load ptr, ptr %1, align 4
  %698 = ptrtoint ptr %696 to i32
  %699 = ptrtoint ptr %697 to i32
  %700 = sub i32 %698, %699
  %701 = ashr exact i32 %700, 3
  store i32 %701, ptr %50, align 4
  br label %702

702:                                              ; preds = %695, %691, %641
  %703 = trunc i32 %633 to i16
  %704 = load ptr, ptr %49, align 4
  %705 = getelementptr inbounds %struct.seqDef_s, ptr %704, i32 0, i32 1
  store i16 %703, ptr %705, align 4
  %706 = add i32 %593, 1
  %707 = load ptr, ptr %49, align 4
  store i32 %706, ptr %707, align 4
  %708 = icmp ugt i32 %634, 65535
  br i1 %708, label %711, label %709

709:                                              ; preds = %702
  %710 = load ptr, ptr %49, align 4
  br label %718

711:                                              ; preds = %702
  store i32 2, ptr %48, align 4
  %712 = load ptr, ptr %49, align 4
  %713 = load ptr, ptr %1, align 4
  %714 = ptrtoint ptr %712 to i32
  %715 = ptrtoint ptr %713 to i32
  %716 = sub i32 %714, %715
  %717 = ashr exact i32 %716, 3
  store i32 %717, ptr %50, align 4
  br label %718

718:                                              ; preds = %711, %709
  %719 = phi ptr [ %710, %709 ], [ %712, %711 ]
  %720 = trunc i32 %634 to i16
  %721 = getelementptr inbounds %struct.seqDef_s, ptr %719, i32 0, i32 2
  store i16 %720, ptr %721, align 2
  %722 = load ptr, ptr %49, align 4
  %723 = getelementptr %struct.seqDef_s, ptr %722, i32 1
  store ptr %723, ptr %49, align 4
  %724 = getelementptr i8, ptr %630, i32 %629
  %725 = icmp ugt ptr %724, %10
  br i1 %725, label %901, label %726

726:                                              ; preds = %893, %718
  %727 = phi ptr [ %898, %893 ], [ %723, %718 ]
  %728 = phi ptr [ %899, %893 ], [ %724, %718 ]
  %729 = phi i32 [ %730, %893 ], [ %628, %718 ]
  %730 = phi i32 [ %729, %893 ], [ %627, %718 ]
  %731 = ptrtoint ptr %728 to i32
  %732 = add i32 %730, %41
  %733 = sub i32 %731, %732
  %734 = icmp ult i32 %733, %14
  %735 = select i1 %734, ptr %51, ptr %12
  %736 = getelementptr i8, ptr %735, i32 %733
  %737 = xor i32 %733, -1
  %738 = add i32 %14, %737
  %739 = icmp ugt i32 %738, 2
  br i1 %739, label %740, label %901

740:                                              ; preds = %726
  %741 = load i32, ptr %736, align 1
  %742 = load i32, ptr %728, align 1
  %743 = icmp eq i32 %741, %742
  br i1 %743, label %744, label %901

744:                                              ; preds = %740
  %745 = select i1 %734, ptr %26, ptr %9
  %746 = getelementptr i8, ptr %728, i32 4
  %747 = getelementptr i8, ptr %736, i32 4
  %748 = ptrtoint ptr %745 to i32
  %749 = ptrtoint ptr %747 to i32
  %750 = sub i32 %748, %749
  %751 = getelementptr i8, ptr %746, i32 %750
  %752 = icmp ult ptr %751, %9
  %753 = select i1 %752, ptr %751, ptr %9
  %754 = getelementptr i8, ptr %753, i32 -3
  %755 = icmp ugt ptr %754, %746
  br i1 %755, label %756, label %782

756:                                              ; preds = %744
  %757 = load i32, ptr %747, align 1
  %758 = load i32, ptr %746, align 1
  %759 = xor i32 %758, %757
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %764, label %761

761:                                              ; preds = %756
  %762 = tail call i32 @llvm.cttz.i32(i32 %759, i1 true) #7, !range !8
  %763 = lshr i32 %762, 3
  br label %809

764:                                              ; preds = %770, %756
  %765 = phi ptr [ %768, %770 ], [ %746, %756 ]
  %766 = phi ptr [ %767, %770 ], [ %747, %756 ]
  %767 = getelementptr i8, ptr %766, i32 4
  %768 = getelementptr i8, ptr %765, i32 4
  %769 = icmp ult ptr %768, %754
  br i1 %769, label %770, label %782

770:                                              ; preds = %764
  %771 = load i32, ptr %767, align 1
  %772 = load i32, ptr %768, align 1
  %773 = xor i32 %772, %771
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %764, label %775

775:                                              ; preds = %770
  %776 = tail call i32 @llvm.cttz.i32(i32 %773, i1 true) #7, !range !8
  %777 = lshr i32 %776, 3
  %778 = getelementptr i8, ptr %768, i32 %777
  %779 = ptrtoint ptr %778 to i32
  %780 = ptrtoint ptr %746 to i32
  %781 = sub i32 %779, %780
  br label %809

782:                                              ; preds = %764, %744
  %783 = phi ptr [ %746, %744 ], [ %768, %764 ]
  %784 = phi ptr [ %747, %744 ], [ %767, %764 ]
  %785 = getelementptr i8, ptr %753, i32 -1
  %786 = icmp ult ptr %783, %785
  br i1 %786, label %787, label %794

787:                                              ; preds = %782
  %788 = load i16, ptr %784, align 1
  %789 = load i16, ptr %783, align 1
  %790 = icmp eq i16 %788, %789
  br i1 %790, label %791, label %794

791:                                              ; preds = %787
  %792 = getelementptr i8, ptr %783, i32 2
  %793 = getelementptr i8, ptr %784, i32 2
  br label %794

794:                                              ; preds = %791, %787, %782
  %795 = phi ptr [ %792, %791 ], [ %783, %787 ], [ %783, %782 ]
  %796 = phi ptr [ %793, %791 ], [ %784, %787 ], [ %784, %782 ]
  %797 = icmp ult ptr %795, %753
  br i1 %797, label %798, label %804

798:                                              ; preds = %794
  %799 = load i8, ptr %796, align 1
  %800 = load i8, ptr %795, align 1
  %801 = icmp eq i8 %799, %800
  %802 = zext i1 %801 to i32
  %803 = getelementptr i8, ptr %795, i32 %802
  br label %804

804:                                              ; preds = %798, %794
  %805 = phi ptr [ %795, %794 ], [ %803, %798 ]
  %806 = ptrtoint ptr %805 to i32
  %807 = ptrtoint ptr %746 to i32
  %808 = sub i32 %806, %807
  br label %809

809:                                              ; preds = %804, %775, %761
  %810 = phi i32 [ %808, %804 ], [ %763, %761 ], [ %781, %775 ]
  %811 = getelementptr i8, ptr %747, i32 %810
  %812 = icmp eq ptr %811, %745
  br i1 %812, label %813, label %871

813:                                              ; preds = %809
  %814 = getelementptr i8, ptr %746, i32 %810
  %815 = icmp ugt ptr %42, %814
  br i1 %815, label %816, label %842

816:                                              ; preds = %813
  %817 = load i32, ptr %15, align 1
  %818 = load i32, ptr %814, align 1
  %819 = xor i32 %818, %817
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %824, label %821

821:                                              ; preds = %816
  %822 = tail call i32 @llvm.cttz.i32(i32 %819, i1 true) #7, !range !8
  %823 = lshr i32 %822, 3
  br label %868

824:                                              ; preds = %830, %816
  %825 = phi ptr [ %828, %830 ], [ %814, %816 ]
  %826 = phi ptr [ %827, %830 ], [ %15, %816 ]
  %827 = getelementptr i8, ptr %826, i32 4
  %828 = getelementptr i8, ptr %825, i32 4
  %829 = icmp ult ptr %828, %42
  br i1 %829, label %830, label %842

830:                                              ; preds = %824
  %831 = load i32, ptr %827, align 1
  %832 = load i32, ptr %828, align 1
  %833 = xor i32 %832, %831
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %824, label %835

835:                                              ; preds = %830
  %836 = tail call i32 @llvm.cttz.i32(i32 %833, i1 true) #7, !range !8
  %837 = lshr i32 %836, 3
  %838 = getelementptr i8, ptr %828, i32 %837
  %839 = ptrtoint ptr %838 to i32
  %840 = ptrtoint ptr %814 to i32
  %841 = sub i32 %839, %840
  br label %868

842:                                              ; preds = %824, %813
  %843 = phi ptr [ %814, %813 ], [ %828, %824 ]
  %844 = phi ptr [ %15, %813 ], [ %827, %824 ]
  %845 = icmp ult ptr %843, %43
  br i1 %845, label %846, label %853

846:                                              ; preds = %842
  %847 = load i16, ptr %844, align 1
  %848 = load i16, ptr %843, align 1
  %849 = icmp eq i16 %847, %848
  br i1 %849, label %850, label %853

850:                                              ; preds = %846
  %851 = getelementptr i8, ptr %843, i32 2
  %852 = getelementptr i8, ptr %844, i32 2
  br label %853

853:                                              ; preds = %850, %846, %842
  %854 = phi ptr [ %851, %850 ], [ %843, %846 ], [ %843, %842 ]
  %855 = phi ptr [ %852, %850 ], [ %844, %846 ], [ %844, %842 ]
  %856 = icmp ult ptr %854, %9
  br i1 %856, label %857, label %863

857:                                              ; preds = %853
  %858 = load i8, ptr %855, align 1
  %859 = load i8, ptr %854, align 1
  %860 = icmp eq i8 %858, %859
  %861 = zext i1 %860 to i32
  %862 = getelementptr i8, ptr %854, i32 %861
  br label %863

863:                                              ; preds = %857, %853
  %864 = phi ptr [ %854, %853 ], [ %862, %857 ]
  %865 = ptrtoint ptr %864 to i32
  %866 = ptrtoint ptr %814 to i32
  %867 = sub i32 %865, %866
  br label %868

868:                                              ; preds = %863, %835, %821
  %869 = phi i32 [ %867, %863 ], [ %823, %821 ], [ %841, %835 ]
  %870 = add i32 %869, %810
  br label %871

871:                                              ; preds = %868, %809
  %872 = phi i32 [ %870, %868 ], [ %810, %809 ]
  %873 = add i32 %872, 4
  %874 = add i32 %872, 1
  %875 = icmp ugt ptr %728, %45
  br i1 %875, label %879, label %876

876:                                              ; preds = %871
  %877 = load ptr, ptr %46, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %877, ptr noundef align 1 dereferenceable(16) %728, i32 16, i1 false) #7
  %878 = load ptr, ptr %49, align 4
  br label %879

879:                                              ; preds = %876, %871
  %880 = phi ptr [ %727, %871 ], [ %878, %876 ]
  %881 = getelementptr inbounds %struct.seqDef_s, ptr %880, i32 0, i32 1
  store i16 0, ptr %881, align 4
  %882 = load ptr, ptr %49, align 4
  store i32 1, ptr %882, align 4
  %883 = icmp ugt i32 %874, 65535
  br i1 %883, label %886, label %884

884:                                              ; preds = %879
  %885 = load ptr, ptr %49, align 4
  br label %893

886:                                              ; preds = %879
  store i32 2, ptr %48, align 4
  %887 = load ptr, ptr %49, align 4
  %888 = load ptr, ptr %1, align 4
  %889 = ptrtoint ptr %887 to i32
  %890 = ptrtoint ptr %888 to i32
  %891 = sub i32 %889, %890
  %892 = ashr exact i32 %891, 3
  store i32 %892, ptr %50, align 4
  br label %893

893:                                              ; preds = %886, %884
  %894 = phi ptr [ %885, %884 ], [ %887, %886 ]
  %895 = trunc i32 %874 to i16
  %896 = getelementptr inbounds %struct.seqDef_s, ptr %894, i32 0, i32 2
  store i16 %895, ptr %896, align 2
  %897 = load ptr, ptr %49, align 4
  %898 = getelementptr %struct.seqDef_s, ptr %897, i32 1
  store ptr %898, ptr %49, align 4
  %899 = getelementptr i8, ptr %728, i32 %873
  %900 = icmp ugt ptr %899, %10
  br i1 %900, label %901, label %726

901:                                              ; preds = %893, %740, %726, %718, %210
  %902 = phi i32 [ %56, %210 ], [ %627, %718 ], [ %730, %726 ], [ %730, %740 ], [ %729, %893 ]
  %903 = phi i32 [ %55, %210 ], [ %628, %718 ], [ %729, %726 ], [ %729, %740 ], [ %730, %893 ]
  %904 = phi ptr [ %54, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %905 = phi ptr [ %215, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %906 = icmp ult ptr %905, %10
  br i1 %906, label %52, label %907

907:                                              ; preds = %901
  %908 = ptrtoint ptr %904 to i32
  br label %909

909:                                              ; preds = %907, %5
  %910 = phi i32 [ %908, %907 ], [ %31, %5 ]
  %911 = phi i32 [ %902, %907 ], [ %18, %5 ]
  %912 = phi i32 [ %903, %907 ], [ %16, %5 ]
  store i32 %912, ptr %2, align 4
  store i32 %911, ptr %17, align 4
  %913 = ptrtoint ptr %9 to i32
  %914 = sub i32 %913, %910
  ret i32 %914
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy_dictMatchState(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = ptrtoint ptr %3 to i32
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %22
  %26 = load ptr, ptr %20, align 4
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %24 to i32
  %29 = add i32 %14, %28
  %30 = sub i32 %29, %27
  %31 = ptrtoint ptr %15 to i32
  %32 = sub i32 %6, %31
  %33 = ptrtoint ptr %25 to i32
  %34 = sub i32 %33, %27
  %35 = icmp eq i32 %32, %34
  %36 = zext i1 %35 to i32
  %37 = getelementptr i8, ptr %3, i32 %36
  %38 = icmp ult ptr %37, %10
  br i1 %38, label %39, label %729

39:                                               ; preds = %5
  %40 = ptrtoint ptr %12 to i32
  %41 = getelementptr i8, ptr %9, i32 -3
  %42 = getelementptr i8, ptr %9, i32 -1
  %43 = sub i32 0, %30
  %44 = getelementptr i8, ptr %9, i32 -32
  %45 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %46 = ptrtoint ptr %44 to i32
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %50 = getelementptr i8, ptr %24, i32 %43
  %51 = add i32 %6, %4
  %52 = add i32 %51, -8
  br label %53

53:                                               ; preds = %721, %39
  %54 = phi ptr [ %37, %39 ], [ %725, %721 ]
  %55 = phi ptr [ %3, %39 ], [ %724, %721 ]
  %56 = phi i32 [ %16, %39 ], [ %723, %721 ]
  %57 = phi i32 [ %18, %39 ], [ %722, %721 ]
  %58 = getelementptr i8, ptr %54, i32 1
  %59 = ptrtoint ptr %54 to i32
  %60 = add i32 %56, %40
  %61 = sub i32 1, %60
  %62 = add i32 %61, %59
  %63 = icmp ult i32 %62, %14
  %64 = sub i32 %62, %30
  %65 = getelementptr i8, ptr %24, i32 %64
  %66 = getelementptr i8, ptr %12, i32 %62
  %67 = select i1 %63, ptr %65, ptr %66
  %68 = xor i32 %62, -1
  %69 = add i32 %14, %68
  %70 = icmp ugt i32 %69, 2
  br i1 %70, label %71, label %205

71:                                               ; preds = %53
  %72 = load i32, ptr %67, align 1
  %73 = load i32, ptr %58, align 1
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %205

75:                                               ; preds = %71
  %76 = select i1 %63, ptr %26, ptr %9
  %77 = getelementptr i8, ptr %54, i32 5
  %78 = getelementptr i8, ptr %67, i32 4
  %79 = ptrtoint ptr %76 to i32
  %80 = ptrtoint ptr %78 to i32
  %81 = sub i32 %79, %80
  %82 = getelementptr i8, ptr %77, i32 %81
  %83 = icmp ult ptr %82, %9
  %84 = select i1 %83, ptr %82, ptr %9
  %85 = getelementptr i8, ptr %84, i32 -3
  %86 = icmp ugt ptr %85, %77
  br i1 %86, label %87, label %113

87:                                               ; preds = %75
  %88 = load i32, ptr %78, align 1
  %89 = load i32, ptr %77, align 1
  %90 = xor i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !8
  %94 = lshr i32 %93, 3
  br label %140

95:                                               ; preds = %101, %87
  %96 = phi ptr [ %99, %101 ], [ %77, %87 ]
  %97 = phi ptr [ %98, %101 ], [ %78, %87 ]
  %98 = getelementptr i8, ptr %97, i32 4
  %99 = getelementptr i8, ptr %96, i32 4
  %100 = icmp ult ptr %99, %85
  br i1 %100, label %101, label %113

101:                                              ; preds = %95
  %102 = load i32, ptr %98, align 1
  %103 = load i32, ptr %99, align 1
  %104 = xor i32 %103, %102
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %95, label %106

106:                                              ; preds = %101
  %107 = tail call i32 @llvm.cttz.i32(i32 %104, i1 true) #7, !range !8
  %108 = lshr i32 %107, 3
  %109 = getelementptr i8, ptr %99, i32 %108
  %110 = ptrtoint ptr %109 to i32
  %111 = ptrtoint ptr %77 to i32
  %112 = sub i32 %110, %111
  br label %140

113:                                              ; preds = %95, %75
  %114 = phi ptr [ %77, %75 ], [ %99, %95 ]
  %115 = phi ptr [ %78, %75 ], [ %98, %95 ]
  %116 = getelementptr i8, ptr %84, i32 -1
  %117 = icmp ult ptr %114, %116
  br i1 %117, label %118, label %125

118:                                              ; preds = %113
  %119 = load i16, ptr %115, align 1
  %120 = load i16, ptr %114, align 1
  %121 = icmp eq i16 %119, %120
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = getelementptr i8, ptr %114, i32 2
  %124 = getelementptr i8, ptr %115, i32 2
  br label %125

125:                                              ; preds = %122, %118, %113
  %126 = phi ptr [ %123, %122 ], [ %114, %118 ], [ %114, %113 ]
  %127 = phi ptr [ %124, %122 ], [ %115, %118 ], [ %115, %113 ]
  %128 = icmp ult ptr %126, %84
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = load i8, ptr %127, align 1
  %131 = load i8, ptr %126, align 1
  %132 = icmp eq i8 %130, %131
  %133 = zext i1 %132 to i32
  %134 = getelementptr i8, ptr %126, i32 %133
  br label %135

135:                                              ; preds = %129, %125
  %136 = phi ptr [ %126, %125 ], [ %134, %129 ]
  %137 = ptrtoint ptr %136 to i32
  %138 = ptrtoint ptr %77 to i32
  %139 = sub i32 %137, %138
  br label %140

140:                                              ; preds = %135, %106, %92
  %141 = phi i32 [ %139, %135 ], [ %94, %92 ], [ %112, %106 ]
  %142 = getelementptr i8, ptr %78, i32 %141
  %143 = icmp eq ptr %142, %76
  br i1 %143, label %144, label %202

144:                                              ; preds = %140
  %145 = getelementptr i8, ptr %77, i32 %141
  %146 = icmp ugt ptr %41, %145
  br i1 %146, label %147, label %173

147:                                              ; preds = %144
  %148 = load i32, ptr %15, align 1
  %149 = load i32, ptr %145, align 1
  %150 = xor i32 %149, %148
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = tail call i32 @llvm.cttz.i32(i32 %150, i1 true) #7, !range !8
  %154 = lshr i32 %153, 3
  br label %199

155:                                              ; preds = %161, %147
  %156 = phi ptr [ %159, %161 ], [ %145, %147 ]
  %157 = phi ptr [ %158, %161 ], [ %15, %147 ]
  %158 = getelementptr i8, ptr %157, i32 4
  %159 = getelementptr i8, ptr %156, i32 4
  %160 = icmp ult ptr %159, %41
  br i1 %160, label %161, label %173

161:                                              ; preds = %155
  %162 = load i32, ptr %158, align 1
  %163 = load i32, ptr %159, align 1
  %164 = xor i32 %163, %162
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %155, label %166

166:                                              ; preds = %161
  %167 = tail call i32 @llvm.cttz.i32(i32 %164, i1 true) #7, !range !8
  %168 = lshr i32 %167, 3
  %169 = getelementptr i8, ptr %159, i32 %168
  %170 = ptrtoint ptr %169 to i32
  %171 = ptrtoint ptr %145 to i32
  %172 = sub i32 %170, %171
  br label %199

173:                                              ; preds = %155, %144
  %174 = phi ptr [ %145, %144 ], [ %159, %155 ]
  %175 = phi ptr [ %15, %144 ], [ %158, %155 ]
  %176 = icmp ult ptr %174, %42
  br i1 %176, label %177, label %184

177:                                              ; preds = %173
  %178 = load i16, ptr %175, align 1
  %179 = load i16, ptr %174, align 1
  %180 = icmp eq i16 %178, %179
  br i1 %180, label %181, label %184

181:                                              ; preds = %177
  %182 = getelementptr i8, ptr %174, i32 2
  %183 = getelementptr i8, ptr %175, i32 2
  br label %184

184:                                              ; preds = %181, %177, %173
  %185 = phi ptr [ %182, %181 ], [ %174, %177 ], [ %174, %173 ]
  %186 = phi ptr [ %183, %181 ], [ %175, %177 ], [ %175, %173 ]
  %187 = icmp ult ptr %185, %9
  br i1 %187, label %188, label %194

188:                                              ; preds = %184
  %189 = load i8, ptr %186, align 1
  %190 = load i8, ptr %185, align 1
  %191 = icmp eq i8 %189, %190
  %192 = zext i1 %191 to i32
  %193 = getelementptr i8, ptr %185, i32 %192
  br label %194

194:                                              ; preds = %188, %184
  %195 = phi ptr [ %185, %184 ], [ %193, %188 ]
  %196 = ptrtoint ptr %195 to i32
  %197 = ptrtoint ptr %145 to i32
  %198 = sub i32 %196, %197
  br label %199

199:                                              ; preds = %194, %166, %152
  %200 = phi i32 [ %198, %194 ], [ %154, %152 ], [ %172, %166 ]
  %201 = add i32 %200, %141
  br label %202

202:                                              ; preds = %199, %140
  %203 = phi i32 [ %201, %199 ], [ %141, %140 ]
  %204 = add i32 %203, 4
  br label %205

205:                                              ; preds = %202, %71, %53
  %206 = phi i32 [ %204, %202 ], [ 0, %71 ], [ 0, %53 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %207 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %54, ptr noundef %9, ptr noundef nonnull %7) #7
  %208 = load i32, ptr %7, align 4
  %209 = tail call i32 @llvm.umax.i32(i32 %207, i32 %206) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %210 = icmp ult i32 %209, 4
  br i1 %210, label %211, label %217

211:                                              ; preds = %205
  %212 = ptrtoint ptr %55 to i32
  %213 = sub i32 %59, %212
  %214 = ashr i32 %213, 8
  %215 = add nsw i32 %214, 1
  %216 = getelementptr i8, ptr %54, i32 %215
  br label %721

217:                                              ; preds = %205
  %218 = icmp ugt i32 %207, %206
  %219 = select i1 %218, ptr %54, ptr %58
  %220 = select i1 %218, i32 %208, i32 0
  %221 = icmp ult ptr %54, %10
  br i1 %221, label %222, label %411

222:                                              ; preds = %217
  %223 = getelementptr i8, ptr %54, i32 %52
  %224 = sub i32 0, %59
  %225 = getelementptr i8, ptr %223, i32 %224
  br label %226

226:                                              ; preds = %408, %222
  %227 = phi ptr [ %231, %408 ], [ %54, %222 ]
  %228 = phi ptr [ %231, %408 ], [ %219, %222 ]
  %229 = phi i32 [ %392, %408 ], [ %220, %222 ]
  %230 = phi i32 [ %391, %408 ], [ %209, %222 ]
  %231 = getelementptr i8, ptr %227, i32 1
  %232 = ptrtoint ptr %231 to i32
  %233 = sub i32 %232, %60
  %234 = icmp ult i32 %233, %14
  %235 = sub i32 %233, %30
  %236 = getelementptr i8, ptr %24, i32 %235
  %237 = getelementptr i8, ptr %12, i32 %233
  %238 = select i1 %234, ptr %236, ptr %237
  %239 = xor i32 %233, -1
  %240 = add i32 %14, %239
  %241 = icmp ugt i32 %240, 2
  br i1 %241, label %242, label %387

242:                                              ; preds = %226
  %243 = load i32, ptr %238, align 1
  %244 = load i32, ptr %231, align 1
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %246, label %387

246:                                              ; preds = %242
  %247 = select i1 %234, ptr %26, ptr %9
  %248 = getelementptr i8, ptr %227, i32 5
  %249 = getelementptr i8, ptr %238, i32 4
  %250 = ptrtoint ptr %247 to i32
  %251 = ptrtoint ptr %249 to i32
  %252 = sub i32 %250, %251
  %253 = getelementptr i8, ptr %248, i32 %252
  %254 = icmp ult ptr %253, %9
  %255 = select i1 %254, ptr %253, ptr %9
  %256 = getelementptr i8, ptr %255, i32 -3
  %257 = icmp ugt ptr %256, %248
  br i1 %257, label %258, label %284

258:                                              ; preds = %246
  %259 = load i32, ptr %249, align 1
  %260 = load i32, ptr %248, align 1
  %261 = xor i32 %260, %259
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %258
  %264 = tail call i32 @llvm.cttz.i32(i32 %261, i1 true) #7, !range !8
  %265 = lshr i32 %264, 3
  br label %311

266:                                              ; preds = %272, %258
  %267 = phi ptr [ %270, %272 ], [ %248, %258 ]
  %268 = phi ptr [ %269, %272 ], [ %249, %258 ]
  %269 = getelementptr i8, ptr %268, i32 4
  %270 = getelementptr i8, ptr %267, i32 4
  %271 = icmp ult ptr %270, %256
  br i1 %271, label %272, label %284

272:                                              ; preds = %266
  %273 = load i32, ptr %269, align 1
  %274 = load i32, ptr %270, align 1
  %275 = xor i32 %274, %273
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %266, label %277

277:                                              ; preds = %272
  %278 = tail call i32 @llvm.cttz.i32(i32 %275, i1 true) #7, !range !8
  %279 = lshr i32 %278, 3
  %280 = getelementptr i8, ptr %270, i32 %279
  %281 = ptrtoint ptr %280 to i32
  %282 = ptrtoint ptr %248 to i32
  %283 = sub i32 %281, %282
  br label %311

284:                                              ; preds = %266, %246
  %285 = phi ptr [ %248, %246 ], [ %270, %266 ]
  %286 = phi ptr [ %249, %246 ], [ %269, %266 ]
  %287 = getelementptr i8, ptr %255, i32 -1
  %288 = icmp ult ptr %285, %287
  br i1 %288, label %289, label %296

289:                                              ; preds = %284
  %290 = load i16, ptr %286, align 1
  %291 = load i16, ptr %285, align 1
  %292 = icmp eq i16 %290, %291
  br i1 %292, label %293, label %296

293:                                              ; preds = %289
  %294 = getelementptr i8, ptr %285, i32 2
  %295 = getelementptr i8, ptr %286, i32 2
  br label %296

296:                                              ; preds = %293, %289, %284
  %297 = phi ptr [ %294, %293 ], [ %285, %289 ], [ %285, %284 ]
  %298 = phi ptr [ %295, %293 ], [ %286, %289 ], [ %286, %284 ]
  %299 = icmp ult ptr %297, %255
  br i1 %299, label %300, label %306

300:                                              ; preds = %296
  %301 = load i8, ptr %298, align 1
  %302 = load i8, ptr %297, align 1
  %303 = icmp eq i8 %301, %302
  %304 = zext i1 %303 to i32
  %305 = getelementptr i8, ptr %297, i32 %304
  br label %306

306:                                              ; preds = %300, %296
  %307 = phi ptr [ %297, %296 ], [ %305, %300 ]
  %308 = ptrtoint ptr %307 to i32
  %309 = ptrtoint ptr %248 to i32
  %310 = sub i32 %308, %309
  br label %311

311:                                              ; preds = %306, %277, %263
  %312 = phi i32 [ %310, %306 ], [ %265, %263 ], [ %283, %277 ]
  %313 = getelementptr i8, ptr %249, i32 %312
  %314 = icmp eq ptr %313, %247
  br i1 %314, label %315, label %373

315:                                              ; preds = %311
  %316 = getelementptr i8, ptr %248, i32 %312
  %317 = icmp ugt ptr %41, %316
  br i1 %317, label %318, label %344

318:                                              ; preds = %315
  %319 = load i32, ptr %15, align 1
  %320 = load i32, ptr %316, align 1
  %321 = xor i32 %320, %319
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %326, label %323

323:                                              ; preds = %318
  %324 = tail call i32 @llvm.cttz.i32(i32 %321, i1 true) #7, !range !8
  %325 = lshr i32 %324, 3
  br label %370

326:                                              ; preds = %332, %318
  %327 = phi ptr [ %330, %332 ], [ %316, %318 ]
  %328 = phi ptr [ %329, %332 ], [ %15, %318 ]
  %329 = getelementptr i8, ptr %328, i32 4
  %330 = getelementptr i8, ptr %327, i32 4
  %331 = icmp ult ptr %330, %41
  br i1 %331, label %332, label %344

332:                                              ; preds = %326
  %333 = load i32, ptr %329, align 1
  %334 = load i32, ptr %330, align 1
  %335 = xor i32 %334, %333
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %326, label %337

337:                                              ; preds = %332
  %338 = tail call i32 @llvm.cttz.i32(i32 %335, i1 true) #7, !range !8
  %339 = lshr i32 %338, 3
  %340 = getelementptr i8, ptr %330, i32 %339
  %341 = ptrtoint ptr %340 to i32
  %342 = ptrtoint ptr %316 to i32
  %343 = sub i32 %341, %342
  br label %370

344:                                              ; preds = %326, %315
  %345 = phi ptr [ %316, %315 ], [ %330, %326 ]
  %346 = phi ptr [ %15, %315 ], [ %329, %326 ]
  %347 = icmp ult ptr %345, %42
  br i1 %347, label %348, label %355

348:                                              ; preds = %344
  %349 = load i16, ptr %346, align 1
  %350 = load i16, ptr %345, align 1
  %351 = icmp eq i16 %349, %350
  br i1 %351, label %352, label %355

352:                                              ; preds = %348
  %353 = getelementptr i8, ptr %345, i32 2
  %354 = getelementptr i8, ptr %346, i32 2
  br label %355

355:                                              ; preds = %352, %348, %344
  %356 = phi ptr [ %353, %352 ], [ %345, %348 ], [ %345, %344 ]
  %357 = phi ptr [ %354, %352 ], [ %346, %348 ], [ %346, %344 ]
  %358 = icmp ult ptr %356, %9
  br i1 %358, label %359, label %365

359:                                              ; preds = %355
  %360 = load i8, ptr %357, align 1
  %361 = load i8, ptr %356, align 1
  %362 = icmp eq i8 %360, %361
  %363 = zext i1 %362 to i32
  %364 = getelementptr i8, ptr %356, i32 %363
  br label %365

365:                                              ; preds = %359, %355
  %366 = phi ptr [ %356, %355 ], [ %364, %359 ]
  %367 = ptrtoint ptr %366 to i32
  %368 = ptrtoint ptr %316 to i32
  %369 = sub i32 %367, %368
  br label %370

370:                                              ; preds = %365, %337, %323
  %371 = phi i32 [ %369, %365 ], [ %325, %323 ], [ %343, %337 ]
  %372 = add i32 %371, %312
  br label %373

373:                                              ; preds = %370, %311
  %374 = phi i32 [ %372, %370 ], [ %312, %311 ]
  %375 = add i32 %374, 4
  %376 = icmp ult i32 %374, -4
  br i1 %376, label %377, label %387

377:                                              ; preds = %373
  %378 = add i32 %229, 1
  %379 = tail call i32 @llvm.ctlz.i32(i32 %378, i1 false) #7, !range !8
  %380 = xor i32 %379, -32
  %381 = mul i32 %230, 3
  %382 = add i32 %381, 2
  %383 = add i32 %382, %380
  %384 = mul i32 %375, 3
  %385 = icmp sgt i32 %384, %383
  br i1 %385, label %386, label %387

386:                                              ; preds = %377
  br label %387

387:                                              ; preds = %386, %377, %373, %242, %226
  %388 = phi i32 [ %230, %242 ], [ %230, %226 ], [ %375, %386 ], [ %230, %377 ], [ %230, %373 ]
  %389 = phi i32 [ %229, %242 ], [ %229, %226 ], [ 0, %386 ], [ %229, %377 ], [ %229, %373 ]
  %390 = phi ptr [ %228, %242 ], [ %228, %226 ], [ %231, %386 ], [ %228, %377 ], [ %228, %373 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %391 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %231, ptr noundef %9, ptr noundef nonnull %8) #7
  %392 = load i32, ptr %8, align 4
  %393 = icmp ugt i32 %391, 3
  br i1 %393, label %394, label %410

394:                                              ; preds = %387
  %395 = add i32 %389, 1
  %396 = tail call i32 @llvm.ctlz.i32(i32 %395, i1 false) #7, !range !8
  %397 = xor i32 %396, -32
  %398 = add i32 %392, 1
  %399 = tail call i32 @llvm.ctlz.i32(i32 %398, i1 false) #7, !range !8
  %400 = xor i32 %399, -32
  %401 = shl i32 %388, 2
  %402 = add i32 %401, 5
  %403 = add i32 %402, %397
  %404 = shl i32 %391, 2
  %405 = or i32 %404, 1
  %406 = add i32 %405, %400
  %407 = icmp sgt i32 %406, %403
  br i1 %407, label %408, label %410

408:                                              ; preds = %394
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  %409 = icmp eq ptr %231, %225
  br i1 %409, label %411, label %226

410:                                              ; preds = %394, %387
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %411

411:                                              ; preds = %410, %408, %217
  %412 = phi i32 [ %209, %217 ], [ %388, %410 ], [ %391, %408 ]
  %413 = phi i32 [ %220, %217 ], [ %389, %410 ], [ %392, %408 ]
  %414 = phi ptr [ %219, %217 ], [ %390, %410 ], [ %225, %408 ]
  %415 = icmp eq i32 %413, 0
  br i1 %415, label %446, label %416

416:                                              ; preds = %411
  %417 = ptrtoint ptr %414 to i32
  %418 = add i32 %413, %40
  %419 = sub i32 2, %418
  %420 = add i32 %419, %417
  %421 = icmp ult i32 %420, %14
  %422 = select i1 %421, ptr %25, ptr %15
  %423 = select i1 %421, ptr %50, ptr %12
  %424 = getelementptr i8, ptr %423, i32 %420
  %425 = icmp ugt ptr %414, %55
  %426 = icmp ugt ptr %424, %422
  %427 = select i1 %425, i1 %426, i1 false
  br i1 %427, label %428, label %442

428:                                              ; preds = %437, %416
  %429 = phi ptr [ %434, %437 ], [ %424, %416 ]
  %430 = phi ptr [ %432, %437 ], [ %414, %416 ]
  %431 = phi i32 [ %438, %437 ], [ %412, %416 ]
  %432 = getelementptr i8, ptr %430, i32 -1
  %433 = load i8, ptr %432, align 1
  %434 = getelementptr i8, ptr %429, i32 -1
  %435 = load i8, ptr %434, align 1
  %436 = icmp eq i8 %433, %435
  br i1 %436, label %437, label %442

437:                                              ; preds = %428
  %438 = add i32 %431, 1
  %439 = icmp ugt ptr %432, %55
  %440 = icmp ugt ptr %434, %422
  %441 = select i1 %439, i1 %440, i1 false
  br i1 %441, label %428, label %442

442:                                              ; preds = %437, %428, %416
  %443 = phi i32 [ %412, %416 ], [ %431, %428 ], [ %438, %437 ]
  %444 = phi ptr [ %414, %416 ], [ %430, %428 ], [ %432, %437 ]
  %445 = add i32 %413, -2
  br label %446

446:                                              ; preds = %442, %411
  %447 = phi i32 [ %56, %442 ], [ %57, %411 ]
  %448 = phi i32 [ %445, %442 ], [ %56, %411 ]
  %449 = phi i32 [ %443, %442 ], [ %412, %411 ]
  %450 = phi ptr [ %444, %442 ], [ %414, %411 ]
  %451 = ptrtoint ptr %450 to i32
  %452 = ptrtoint ptr %55 to i32
  %453 = sub i32 %451, %452
  %454 = add i32 %449, -3
  %455 = getelementptr i8, ptr %55, i32 %453
  %456 = icmp ugt ptr %455, %44
  %457 = load ptr, ptr %45, align 4
  br i1 %456, label %479, label %458

458:                                              ; preds = %446
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %457, ptr noundef align 1 dereferenceable(16) %55, i32 16, i1 false) #7
  %459 = icmp ugt i32 %453, 16
  %460 = load ptr, ptr %45, align 4
  br i1 %459, label %463, label %461

461:                                              ; preds = %458
  %462 = getelementptr i8, ptr %460, i32 %453
  store ptr %462, ptr %45, align 4
  br label %522

463:                                              ; preds = %458
  %464 = getelementptr i8, ptr %460, i32 16
  %465 = getelementptr i8, ptr %55, i32 16
  %466 = add i32 %453, -16
  %467 = getelementptr i8, ptr %460, i32 %453
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %464, ptr noundef align 1 dereferenceable(16) %465, i32 16, i1 false) #7
  %468 = icmp slt i32 %466, 17
  br i1 %468, label %511, label %469

469:                                              ; preds = %463
  %470 = getelementptr i8, ptr %460, i32 32
  br label %471

471:                                              ; preds = %471, %469
  %472 = phi ptr [ %465, %469 ], [ %476, %471 ]
  %473 = phi ptr [ %470, %469 ], [ %477, %471 ]
  %474 = getelementptr i8, ptr %472, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %473, ptr noundef align 1 dereferenceable(16) %474, i32 16, i1 false) #7
  %475 = getelementptr i8, ptr %473, i32 16
  %476 = getelementptr i8, ptr %472, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %475, ptr noundef align 1 dereferenceable(16) %476, i32 16, i1 false) #7
  %477 = getelementptr i8, ptr %473, i32 32
  %478 = icmp ult ptr %477, %467
  br i1 %478, label %471, label %511

479:                                              ; preds = %446
  %480 = ptrtoint ptr %455 to i32
  %481 = icmp ult ptr %44, %55
  br i1 %481, label %496, label %482

482:                                              ; preds = %479
  %483 = sub i32 %46, %452
  %484 = getelementptr i8, ptr %457, i32 %483
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %457, ptr noundef align 1 dereferenceable(16) %55, i32 16, i1 false) #7
  %485 = icmp slt i32 %483, 17
  br i1 %485, label %496, label %486

486:                                              ; preds = %482
  %487 = getelementptr i8, ptr %457, i32 16
  br label %488

488:                                              ; preds = %488, %486
  %489 = phi ptr [ %55, %486 ], [ %493, %488 ]
  %490 = phi ptr [ %487, %486 ], [ %494, %488 ]
  %491 = getelementptr i8, ptr %489, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %490, ptr noundef align 1 dereferenceable(16) %491, i32 16, i1 false) #7
  %492 = getelementptr i8, ptr %490, i32 16
  %493 = getelementptr i8, ptr %489, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %492, ptr noundef align 1 dereferenceable(16) %493, i32 16, i1 false) #7
  %494 = getelementptr i8, ptr %490, i32 32
  %495 = icmp ult ptr %494, %484
  br i1 %495, label %488, label %496

496:                                              ; preds = %488, %482, %479
  %497 = phi ptr [ %44, %482 ], [ %55, %479 ], [ %44, %488 ]
  %498 = phi ptr [ %484, %482 ], [ %457, %479 ], [ %484, %488 ]
  %499 = icmp ult ptr %497, %455
  br i1 %499, label %500, label %511

500:                                              ; preds = %496
  %501 = ptrtoint ptr %497 to i32
  %502 = sub i32 %480, %501
  %503 = getelementptr i8, ptr %497, i32 %502
  br label %504

504:                                              ; preds = %504, %500
  %505 = phi ptr [ %509, %504 ], [ %498, %500 ]
  %506 = phi ptr [ %507, %504 ], [ %497, %500 ]
  %507 = getelementptr i8, ptr %506, i32 1
  %508 = load i8, ptr %506, align 1
  %509 = getelementptr i8, ptr %505, i32 1
  store i8 %508, ptr %505, align 1
  %510 = icmp eq ptr %507, %503
  br i1 %510, label %511, label %504

511:                                              ; preds = %504, %496, %471, %463
  %512 = load ptr, ptr %45, align 4
  %513 = getelementptr i8, ptr %512, i32 %453
  store ptr %513, ptr %45, align 4
  %514 = icmp ugt i32 %453, 65535
  br i1 %514, label %515, label %522

515:                                              ; preds = %511
  store i32 1, ptr %47, align 4
  %516 = load ptr, ptr %48, align 4
  %517 = load ptr, ptr %1, align 4
  %518 = ptrtoint ptr %516 to i32
  %519 = ptrtoint ptr %517 to i32
  %520 = sub i32 %518, %519
  %521 = ashr exact i32 %520, 3
  store i32 %521, ptr %49, align 4
  br label %522

522:                                              ; preds = %515, %511, %461
  %523 = trunc i32 %453 to i16
  %524 = load ptr, ptr %48, align 4
  %525 = getelementptr inbounds %struct.seqDef_s, ptr %524, i32 0, i32 1
  store i16 %523, ptr %525, align 4
  %526 = add i32 %413, 1
  %527 = load ptr, ptr %48, align 4
  store i32 %526, ptr %527, align 4
  %528 = icmp ugt i32 %454, 65535
  br i1 %528, label %531, label %529

529:                                              ; preds = %522
  %530 = load ptr, ptr %48, align 4
  br label %538

531:                                              ; preds = %522
  store i32 2, ptr %47, align 4
  %532 = load ptr, ptr %48, align 4
  %533 = load ptr, ptr %1, align 4
  %534 = ptrtoint ptr %532 to i32
  %535 = ptrtoint ptr %533 to i32
  %536 = sub i32 %534, %535
  %537 = ashr exact i32 %536, 3
  store i32 %537, ptr %49, align 4
  br label %538

538:                                              ; preds = %531, %529
  %539 = phi ptr [ %530, %529 ], [ %532, %531 ]
  %540 = trunc i32 %454 to i16
  %541 = getelementptr inbounds %struct.seqDef_s, ptr %539, i32 0, i32 2
  store i16 %540, ptr %541, align 2
  %542 = load ptr, ptr %48, align 4
  %543 = getelementptr %struct.seqDef_s, ptr %542, i32 1
  store ptr %543, ptr %48, align 4
  %544 = getelementptr i8, ptr %450, i32 %449
  %545 = icmp ugt ptr %544, %10
  br i1 %545, label %721, label %546

546:                                              ; preds = %713, %538
  %547 = phi ptr [ %718, %713 ], [ %543, %538 ]
  %548 = phi ptr [ %719, %713 ], [ %544, %538 ]
  %549 = phi i32 [ %550, %713 ], [ %448, %538 ]
  %550 = phi i32 [ %549, %713 ], [ %447, %538 ]
  %551 = ptrtoint ptr %548 to i32
  %552 = add i32 %550, %40
  %553 = sub i32 %551, %552
  %554 = icmp ult i32 %553, %14
  %555 = select i1 %554, ptr %50, ptr %12
  %556 = getelementptr i8, ptr %555, i32 %553
  %557 = xor i32 %553, -1
  %558 = add i32 %14, %557
  %559 = icmp ugt i32 %558, 2
  br i1 %559, label %560, label %721

560:                                              ; preds = %546
  %561 = load i32, ptr %556, align 1
  %562 = load i32, ptr %548, align 1
  %563 = icmp eq i32 %561, %562
  br i1 %563, label %564, label %721

564:                                              ; preds = %560
  %565 = select i1 %554, ptr %26, ptr %9
  %566 = getelementptr i8, ptr %548, i32 4
  %567 = getelementptr i8, ptr %556, i32 4
  %568 = ptrtoint ptr %565 to i32
  %569 = ptrtoint ptr %567 to i32
  %570 = sub i32 %568, %569
  %571 = getelementptr i8, ptr %566, i32 %570
  %572 = icmp ult ptr %571, %9
  %573 = select i1 %572, ptr %571, ptr %9
  %574 = getelementptr i8, ptr %573, i32 -3
  %575 = icmp ugt ptr %574, %566
  br i1 %575, label %576, label %602

576:                                              ; preds = %564
  %577 = load i32, ptr %567, align 1
  %578 = load i32, ptr %566, align 1
  %579 = xor i32 %578, %577
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %576
  %582 = tail call i32 @llvm.cttz.i32(i32 %579, i1 true) #7, !range !8
  %583 = lshr i32 %582, 3
  br label %629

584:                                              ; preds = %590, %576
  %585 = phi ptr [ %588, %590 ], [ %566, %576 ]
  %586 = phi ptr [ %587, %590 ], [ %567, %576 ]
  %587 = getelementptr i8, ptr %586, i32 4
  %588 = getelementptr i8, ptr %585, i32 4
  %589 = icmp ult ptr %588, %574
  br i1 %589, label %590, label %602

590:                                              ; preds = %584
  %591 = load i32, ptr %587, align 1
  %592 = load i32, ptr %588, align 1
  %593 = xor i32 %592, %591
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %584, label %595

595:                                              ; preds = %590
  %596 = tail call i32 @llvm.cttz.i32(i32 %593, i1 true) #7, !range !8
  %597 = lshr i32 %596, 3
  %598 = getelementptr i8, ptr %588, i32 %597
  %599 = ptrtoint ptr %598 to i32
  %600 = ptrtoint ptr %566 to i32
  %601 = sub i32 %599, %600
  br label %629

602:                                              ; preds = %584, %564
  %603 = phi ptr [ %566, %564 ], [ %588, %584 ]
  %604 = phi ptr [ %567, %564 ], [ %587, %584 ]
  %605 = getelementptr i8, ptr %573, i32 -1
  %606 = icmp ult ptr %603, %605
  br i1 %606, label %607, label %614

607:                                              ; preds = %602
  %608 = load i16, ptr %604, align 1
  %609 = load i16, ptr %603, align 1
  %610 = icmp eq i16 %608, %609
  br i1 %610, label %611, label %614

611:                                              ; preds = %607
  %612 = getelementptr i8, ptr %603, i32 2
  %613 = getelementptr i8, ptr %604, i32 2
  br label %614

614:                                              ; preds = %611, %607, %602
  %615 = phi ptr [ %612, %611 ], [ %603, %607 ], [ %603, %602 ]
  %616 = phi ptr [ %613, %611 ], [ %604, %607 ], [ %604, %602 ]
  %617 = icmp ult ptr %615, %573
  br i1 %617, label %618, label %624

618:                                              ; preds = %614
  %619 = load i8, ptr %616, align 1
  %620 = load i8, ptr %615, align 1
  %621 = icmp eq i8 %619, %620
  %622 = zext i1 %621 to i32
  %623 = getelementptr i8, ptr %615, i32 %622
  br label %624

624:                                              ; preds = %618, %614
  %625 = phi ptr [ %615, %614 ], [ %623, %618 ]
  %626 = ptrtoint ptr %625 to i32
  %627 = ptrtoint ptr %566 to i32
  %628 = sub i32 %626, %627
  br label %629

629:                                              ; preds = %624, %595, %581
  %630 = phi i32 [ %628, %624 ], [ %583, %581 ], [ %601, %595 ]
  %631 = getelementptr i8, ptr %567, i32 %630
  %632 = icmp eq ptr %631, %565
  br i1 %632, label %633, label %691

633:                                              ; preds = %629
  %634 = getelementptr i8, ptr %566, i32 %630
  %635 = icmp ugt ptr %41, %634
  br i1 %635, label %636, label %662

636:                                              ; preds = %633
  %637 = load i32, ptr %15, align 1
  %638 = load i32, ptr %634, align 1
  %639 = xor i32 %638, %637
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %644, label %641

641:                                              ; preds = %636
  %642 = tail call i32 @llvm.cttz.i32(i32 %639, i1 true) #7, !range !8
  %643 = lshr i32 %642, 3
  br label %688

644:                                              ; preds = %650, %636
  %645 = phi ptr [ %648, %650 ], [ %634, %636 ]
  %646 = phi ptr [ %647, %650 ], [ %15, %636 ]
  %647 = getelementptr i8, ptr %646, i32 4
  %648 = getelementptr i8, ptr %645, i32 4
  %649 = icmp ult ptr %648, %41
  br i1 %649, label %650, label %662

650:                                              ; preds = %644
  %651 = load i32, ptr %647, align 1
  %652 = load i32, ptr %648, align 1
  %653 = xor i32 %652, %651
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %644, label %655

655:                                              ; preds = %650
  %656 = tail call i32 @llvm.cttz.i32(i32 %653, i1 true) #7, !range !8
  %657 = lshr i32 %656, 3
  %658 = getelementptr i8, ptr %648, i32 %657
  %659 = ptrtoint ptr %658 to i32
  %660 = ptrtoint ptr %634 to i32
  %661 = sub i32 %659, %660
  br label %688

662:                                              ; preds = %644, %633
  %663 = phi ptr [ %634, %633 ], [ %648, %644 ]
  %664 = phi ptr [ %15, %633 ], [ %647, %644 ]
  %665 = icmp ult ptr %663, %42
  br i1 %665, label %666, label %673

666:                                              ; preds = %662
  %667 = load i16, ptr %664, align 1
  %668 = load i16, ptr %663, align 1
  %669 = icmp eq i16 %667, %668
  br i1 %669, label %670, label %673

670:                                              ; preds = %666
  %671 = getelementptr i8, ptr %663, i32 2
  %672 = getelementptr i8, ptr %664, i32 2
  br label %673

673:                                              ; preds = %670, %666, %662
  %674 = phi ptr [ %671, %670 ], [ %663, %666 ], [ %663, %662 ]
  %675 = phi ptr [ %672, %670 ], [ %664, %666 ], [ %664, %662 ]
  %676 = icmp ult ptr %674, %9
  br i1 %676, label %677, label %683

677:                                              ; preds = %673
  %678 = load i8, ptr %675, align 1
  %679 = load i8, ptr %674, align 1
  %680 = icmp eq i8 %678, %679
  %681 = zext i1 %680 to i32
  %682 = getelementptr i8, ptr %674, i32 %681
  br label %683

683:                                              ; preds = %677, %673
  %684 = phi ptr [ %674, %673 ], [ %682, %677 ]
  %685 = ptrtoint ptr %684 to i32
  %686 = ptrtoint ptr %634 to i32
  %687 = sub i32 %685, %686
  br label %688

688:                                              ; preds = %683, %655, %641
  %689 = phi i32 [ %687, %683 ], [ %643, %641 ], [ %661, %655 ]
  %690 = add i32 %689, %630
  br label %691

691:                                              ; preds = %688, %629
  %692 = phi i32 [ %690, %688 ], [ %630, %629 ]
  %693 = add i32 %692, 4
  %694 = add i32 %692, 1
  %695 = icmp ugt ptr %548, %44
  br i1 %695, label %699, label %696

696:                                              ; preds = %691
  %697 = load ptr, ptr %45, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %697, ptr noundef align 1 dereferenceable(16) %548, i32 16, i1 false) #7
  %698 = load ptr, ptr %48, align 4
  br label %699

699:                                              ; preds = %696, %691
  %700 = phi ptr [ %547, %691 ], [ %698, %696 ]
  %701 = getelementptr inbounds %struct.seqDef_s, ptr %700, i32 0, i32 1
  store i16 0, ptr %701, align 4
  %702 = load ptr, ptr %48, align 4
  store i32 1, ptr %702, align 4
  %703 = icmp ugt i32 %694, 65535
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = load ptr, ptr %48, align 4
  br label %713

706:                                              ; preds = %699
  store i32 2, ptr %47, align 4
  %707 = load ptr, ptr %48, align 4
  %708 = load ptr, ptr %1, align 4
  %709 = ptrtoint ptr %707 to i32
  %710 = ptrtoint ptr %708 to i32
  %711 = sub i32 %709, %710
  %712 = ashr exact i32 %711, 3
  store i32 %712, ptr %49, align 4
  br label %713

713:                                              ; preds = %706, %704
  %714 = phi ptr [ %705, %704 ], [ %707, %706 ]
  %715 = trunc i32 %694 to i16
  %716 = getelementptr inbounds %struct.seqDef_s, ptr %714, i32 0, i32 2
  store i16 %715, ptr %716, align 2
  %717 = load ptr, ptr %48, align 4
  %718 = getelementptr %struct.seqDef_s, ptr %717, i32 1
  store ptr %718, ptr %48, align 4
  %719 = getelementptr i8, ptr %548, i32 %693
  %720 = icmp ugt ptr %719, %10
  br i1 %720, label %721, label %546

721:                                              ; preds = %713, %560, %546, %538, %211
  %722 = phi i32 [ %57, %211 ], [ %447, %538 ], [ %550, %546 ], [ %550, %560 ], [ %549, %713 ]
  %723 = phi i32 [ %56, %211 ], [ %448, %538 ], [ %549, %546 ], [ %549, %560 ], [ %550, %713 ]
  %724 = phi ptr [ %55, %211 ], [ %544, %538 ], [ %548, %546 ], [ %548, %560 ], [ %719, %713 ]
  %725 = phi ptr [ %216, %211 ], [ %544, %538 ], [ %548, %546 ], [ %548, %560 ], [ %719, %713 ]
  %726 = icmp ult ptr %725, %10
  br i1 %726, label %53, label %727

727:                                              ; preds = %721
  %728 = ptrtoint ptr %724 to i32
  br label %729

729:                                              ; preds = %727, %5
  %730 = phi i32 [ %728, %727 ], [ %6, %5 ]
  %731 = phi i32 [ %722, %727 ], [ %18, %5 ]
  %732 = phi i32 [ %723, %727 ], [ %16, %5 ]
  store i32 %732, ptr %2, align 4
  store i32 %731, ptr %17, align 4
  %733 = ptrtoint ptr %9 to i32
  %734 = sub i32 %733, %730
  ret i32 %734
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_greedy_dictMatchState(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = getelementptr i8, ptr %3, i32 %4
  %8 = getelementptr i8, ptr %7, i32 -8
  %9 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr i8, ptr %10, i32 %12
  %14 = load i32, ptr %2, align 4
  %15 = getelementptr i32, ptr %2, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_window_t, ptr %18, i32 0, i32 3
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %18, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr i8, ptr %22, i32 %20
  %24 = load ptr, ptr %18, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = ptrtoint ptr %22 to i32
  %27 = add i32 %12, %26
  %28 = sub i32 %27, %25
  %29 = ptrtoint ptr %3 to i32
  %30 = ptrtoint ptr %13 to i32
  %31 = sub i32 %29, %30
  %32 = ptrtoint ptr %23 to i32
  %33 = sub i32 %32, %25
  %34 = icmp eq i32 %31, %33
  %35 = zext i1 %34 to i32
  %36 = getelementptr i8, ptr %3, i32 %35
  %37 = icmp ult ptr %36, %8
  br i1 %37, label %38, label %527

38:                                               ; preds = %5
  %39 = ptrtoint ptr %10 to i32
  %40 = getelementptr i8, ptr %7, i32 -3
  %41 = getelementptr i8, ptr %7, i32 -1
  %42 = sub i32 0, %28
  %43 = getelementptr i8, ptr %7, i32 -32
  %44 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %45 = ptrtoint ptr %43 to i32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %49 = getelementptr i8, ptr %22, i32 %42
  br label %50

50:                                               ; preds = %519, %38
  %51 = phi ptr [ %36, %38 ], [ %523, %519 ]
  %52 = phi ptr [ %3, %38 ], [ %522, %519 ]
  %53 = phi i32 [ %14, %38 ], [ %521, %519 ]
  %54 = phi i32 [ %16, %38 ], [ %520, %519 ]
  %55 = getelementptr i8, ptr %51, i32 1
  %56 = ptrtoint ptr %51 to i32
  %57 = add i32 %56, 1
  %58 = add i32 %53, %39
  %59 = sub i32 %57, %58
  %60 = icmp ult i32 %59, %12
  %61 = sub i32 %59, %28
  %62 = getelementptr i8, ptr %22, i32 %61
  %63 = getelementptr i8, ptr %10, i32 %59
  %64 = select i1 %60, ptr %62, ptr %63
  %65 = xor i32 %59, -1
  %66 = add i32 %12, %65
  %67 = icmp ugt i32 %66, 2
  br i1 %67, label %68, label %202

68:                                               ; preds = %50
  %69 = load i32, ptr %64, align 1
  %70 = load i32, ptr %55, align 1
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %72, label %202

72:                                               ; preds = %68
  %73 = select i1 %60, ptr %24, ptr %7
  %74 = getelementptr i8, ptr %51, i32 5
  %75 = getelementptr i8, ptr %64, i32 4
  %76 = ptrtoint ptr %73 to i32
  %77 = ptrtoint ptr %75 to i32
  %78 = sub i32 %76, %77
  %79 = getelementptr i8, ptr %74, i32 %78
  %80 = icmp ult ptr %79, %7
  %81 = select i1 %80, ptr %79, ptr %7
  %82 = getelementptr i8, ptr %81, i32 -3
  %83 = icmp ugt ptr %82, %74
  br i1 %83, label %84, label %110

84:                                               ; preds = %72
  %85 = load i32, ptr %75, align 1
  %86 = load i32, ptr %74, align 1
  %87 = xor i32 %86, %85
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = tail call i32 @llvm.cttz.i32(i32 %87, i1 true) #7, !range !8
  %91 = lshr i32 %90, 3
  br label %137

92:                                               ; preds = %98, %84
  %93 = phi ptr [ %96, %98 ], [ %74, %84 ]
  %94 = phi ptr [ %95, %98 ], [ %75, %84 ]
  %95 = getelementptr i8, ptr %94, i32 4
  %96 = getelementptr i8, ptr %93, i32 4
  %97 = icmp ult ptr %96, %82
  br i1 %97, label %98, label %110

98:                                               ; preds = %92
  %99 = load i32, ptr %95, align 1
  %100 = load i32, ptr %96, align 1
  %101 = xor i32 %100, %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %92, label %103

103:                                              ; preds = %98
  %104 = tail call i32 @llvm.cttz.i32(i32 %101, i1 true) #7, !range !8
  %105 = lshr i32 %104, 3
  %106 = getelementptr i8, ptr %96, i32 %105
  %107 = ptrtoint ptr %106 to i32
  %108 = ptrtoint ptr %74 to i32
  %109 = sub i32 %107, %108
  br label %137

110:                                              ; preds = %92, %72
  %111 = phi ptr [ %74, %72 ], [ %96, %92 ]
  %112 = phi ptr [ %75, %72 ], [ %95, %92 ]
  %113 = getelementptr i8, ptr %81, i32 -1
  %114 = icmp ult ptr %111, %113
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = load i16, ptr %112, align 1
  %117 = load i16, ptr %111, align 1
  %118 = icmp eq i16 %116, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = getelementptr i8, ptr %111, i32 2
  %121 = getelementptr i8, ptr %112, i32 2
  br label %122

122:                                              ; preds = %119, %115, %110
  %123 = phi ptr [ %120, %119 ], [ %111, %115 ], [ %111, %110 ]
  %124 = phi ptr [ %121, %119 ], [ %112, %115 ], [ %112, %110 ]
  %125 = icmp ult ptr %123, %81
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = load i8, ptr %124, align 1
  %128 = load i8, ptr %123, align 1
  %129 = icmp eq i8 %127, %128
  %130 = zext i1 %129 to i32
  %131 = getelementptr i8, ptr %123, i32 %130
  br label %132

132:                                              ; preds = %126, %122
  %133 = phi ptr [ %123, %122 ], [ %131, %126 ]
  %134 = ptrtoint ptr %133 to i32
  %135 = ptrtoint ptr %74 to i32
  %136 = sub i32 %134, %135
  br label %137

137:                                              ; preds = %132, %103, %89
  %138 = phi i32 [ %136, %132 ], [ %91, %89 ], [ %109, %103 ]
  %139 = getelementptr i8, ptr %75, i32 %138
  %140 = icmp eq ptr %139, %73
  br i1 %140, label %141, label %199

141:                                              ; preds = %137
  %142 = getelementptr i8, ptr %74, i32 %138
  %143 = icmp ugt ptr %40, %142
  br i1 %143, label %144, label %170

144:                                              ; preds = %141
  %145 = load i32, ptr %13, align 1
  %146 = load i32, ptr %142, align 1
  %147 = xor i32 %146, %145
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = tail call i32 @llvm.cttz.i32(i32 %147, i1 true) #7, !range !8
  %151 = lshr i32 %150, 3
  br label %196

152:                                              ; preds = %158, %144
  %153 = phi ptr [ %156, %158 ], [ %142, %144 ]
  %154 = phi ptr [ %155, %158 ], [ %13, %144 ]
  %155 = getelementptr i8, ptr %154, i32 4
  %156 = getelementptr i8, ptr %153, i32 4
  %157 = icmp ult ptr %156, %40
  br i1 %157, label %158, label %170

158:                                              ; preds = %152
  %159 = load i32, ptr %155, align 1
  %160 = load i32, ptr %156, align 1
  %161 = xor i32 %160, %159
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %152, label %163

163:                                              ; preds = %158
  %164 = tail call i32 @llvm.cttz.i32(i32 %161, i1 true) #7, !range !8
  %165 = lshr i32 %164, 3
  %166 = getelementptr i8, ptr %156, i32 %165
  %167 = ptrtoint ptr %166 to i32
  %168 = ptrtoint ptr %142 to i32
  %169 = sub i32 %167, %168
  br label %196

170:                                              ; preds = %152, %141
  %171 = phi ptr [ %142, %141 ], [ %156, %152 ]
  %172 = phi ptr [ %13, %141 ], [ %155, %152 ]
  %173 = icmp ult ptr %171, %41
  br i1 %173, label %174, label %181

174:                                              ; preds = %170
  %175 = load i16, ptr %172, align 1
  %176 = load i16, ptr %171, align 1
  %177 = icmp eq i16 %175, %176
  br i1 %177, label %178, label %181

178:                                              ; preds = %174
  %179 = getelementptr i8, ptr %171, i32 2
  %180 = getelementptr i8, ptr %172, i32 2
  br label %181

181:                                              ; preds = %178, %174, %170
  %182 = phi ptr [ %179, %178 ], [ %171, %174 ], [ %171, %170 ]
  %183 = phi ptr [ %180, %178 ], [ %172, %174 ], [ %172, %170 ]
  %184 = icmp ult ptr %182, %7
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = load i8, ptr %183, align 1
  %187 = load i8, ptr %182, align 1
  %188 = icmp eq i8 %186, %187
  %189 = zext i1 %188 to i32
  %190 = getelementptr i8, ptr %182, i32 %189
  br label %191

191:                                              ; preds = %185, %181
  %192 = phi ptr [ %182, %181 ], [ %190, %185 ]
  %193 = ptrtoint ptr %192 to i32
  %194 = ptrtoint ptr %142 to i32
  %195 = sub i32 %193, %194
  br label %196

196:                                              ; preds = %191, %163, %149
  %197 = phi i32 [ %195, %191 ], [ %151, %149 ], [ %169, %163 ]
  %198 = add i32 %197, %138
  br label %199

199:                                              ; preds = %196, %137
  %200 = phi i32 [ %198, %196 ], [ %138, %137 ]
  %201 = add i32 %200, 4
  br label %243

202:                                              ; preds = %68, %50
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %203 = call fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %51, ptr noundef %7, ptr noundef nonnull %6) #7
  %204 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %205 = icmp ult i32 %203, 4
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = ptrtoint ptr %52 to i32
  %208 = sub i32 %56, %207
  %209 = ashr i32 %208, 8
  %210 = add nsw i32 %209, 1
  %211 = getelementptr i8, ptr %51, i32 %210
  br label %519

212:                                              ; preds = %202
  %213 = icmp eq i32 %204, 0
  br i1 %213, label %243, label %214

214:                                              ; preds = %212
  %215 = add i32 %56, 2
  %216 = add i32 %204, %39
  %217 = sub i32 %215, %216
  %218 = icmp ult i32 %217, %12
  %219 = select i1 %218, ptr %23, ptr %13
  %220 = select i1 %218, ptr %49, ptr %10
  %221 = getelementptr i8, ptr %220, i32 %217
  %222 = icmp ugt ptr %51, %52
  %223 = icmp ugt ptr %221, %219
  %224 = select i1 %222, i1 %223, i1 false
  br i1 %224, label %225, label %239

225:                                              ; preds = %234, %214
  %226 = phi ptr [ %231, %234 ], [ %221, %214 ]
  %227 = phi ptr [ %229, %234 ], [ %51, %214 ]
  %228 = phi i32 [ %235, %234 ], [ %203, %214 ]
  %229 = getelementptr i8, ptr %227, i32 -1
  %230 = load i8, ptr %229, align 1
  %231 = getelementptr i8, ptr %226, i32 -1
  %232 = load i8, ptr %231, align 1
  %233 = icmp eq i8 %230, %232
  br i1 %233, label %234, label %239

234:                                              ; preds = %225
  %235 = add i32 %228, 1
  %236 = icmp ugt ptr %229, %52
  %237 = icmp ugt ptr %231, %219
  %238 = select i1 %236, i1 %237, i1 false
  br i1 %238, label %225, label %239

239:                                              ; preds = %234, %225, %214
  %240 = phi i32 [ %203, %214 ], [ %228, %225 ], [ %235, %234 ]
  %241 = phi ptr [ %51, %214 ], [ %227, %225 ], [ %229, %234 ]
  %242 = add i32 %204, -2
  br label %243

243:                                              ; preds = %239, %212, %199
  %244 = phi i32 [ %53, %239 ], [ %54, %212 ], [ %54, %199 ]
  %245 = phi i32 [ %242, %239 ], [ %53, %212 ], [ %53, %199 ]
  %246 = phi i32 [ %240, %239 ], [ %203, %212 ], [ %201, %199 ]
  %247 = phi i32 [ %204, %239 ], [ 0, %212 ], [ 0, %199 ]
  %248 = phi ptr [ %241, %239 ], [ %51, %212 ], [ %55, %199 ]
  %249 = ptrtoint ptr %248 to i32
  %250 = ptrtoint ptr %52 to i32
  %251 = sub i32 %249, %250
  %252 = add i32 %246, -3
  %253 = getelementptr i8, ptr %52, i32 %251
  %254 = icmp ugt ptr %253, %43
  %255 = load ptr, ptr %44, align 4
  br i1 %254, label %277, label %256

256:                                              ; preds = %243
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %255, ptr noundef align 1 dereferenceable(16) %52, i32 16, i1 false) #7
  %257 = icmp ugt i32 %251, 16
  %258 = load ptr, ptr %44, align 4
  br i1 %257, label %261, label %259

259:                                              ; preds = %256
  %260 = getelementptr i8, ptr %258, i32 %251
  store ptr %260, ptr %44, align 4
  br label %320

261:                                              ; preds = %256
  %262 = getelementptr i8, ptr %258, i32 16
  %263 = getelementptr i8, ptr %52, i32 16
  %264 = add i32 %251, -16
  %265 = getelementptr i8, ptr %258, i32 %251
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %262, ptr noundef align 1 dereferenceable(16) %263, i32 16, i1 false) #7
  %266 = icmp slt i32 %264, 17
  br i1 %266, label %309, label %267

267:                                              ; preds = %261
  %268 = getelementptr i8, ptr %258, i32 32
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi ptr [ %263, %267 ], [ %274, %269 ]
  %271 = phi ptr [ %268, %267 ], [ %275, %269 ]
  %272 = getelementptr i8, ptr %270, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %271, ptr noundef align 1 dereferenceable(16) %272, i32 16, i1 false) #7
  %273 = getelementptr i8, ptr %271, i32 16
  %274 = getelementptr i8, ptr %270, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %273, ptr noundef align 1 dereferenceable(16) %274, i32 16, i1 false) #7
  %275 = getelementptr i8, ptr %271, i32 32
  %276 = icmp ult ptr %275, %265
  br i1 %276, label %269, label %309

277:                                              ; preds = %243
  %278 = ptrtoint ptr %253 to i32
  %279 = icmp ult ptr %43, %52
  br i1 %279, label %294, label %280

280:                                              ; preds = %277
  %281 = sub i32 %45, %250
  %282 = getelementptr i8, ptr %255, i32 %281
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %255, ptr noundef align 1 dereferenceable(16) %52, i32 16, i1 false) #7
  %283 = icmp slt i32 %281, 17
  br i1 %283, label %294, label %284

284:                                              ; preds = %280
  %285 = getelementptr i8, ptr %255, i32 16
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi ptr [ %52, %284 ], [ %291, %286 ]
  %288 = phi ptr [ %285, %284 ], [ %292, %286 ]
  %289 = getelementptr i8, ptr %287, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %288, ptr noundef align 1 dereferenceable(16) %289, i32 16, i1 false) #7
  %290 = getelementptr i8, ptr %288, i32 16
  %291 = getelementptr i8, ptr %287, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %290, ptr noundef align 1 dereferenceable(16) %291, i32 16, i1 false) #7
  %292 = getelementptr i8, ptr %288, i32 32
  %293 = icmp ult ptr %292, %282
  br i1 %293, label %286, label %294

294:                                              ; preds = %286, %280, %277
  %295 = phi ptr [ %43, %280 ], [ %52, %277 ], [ %43, %286 ]
  %296 = phi ptr [ %282, %280 ], [ %255, %277 ], [ %282, %286 ]
  %297 = icmp ult ptr %295, %253
  br i1 %297, label %298, label %309

298:                                              ; preds = %294
  %299 = ptrtoint ptr %295 to i32
  %300 = sub i32 %278, %299
  %301 = getelementptr i8, ptr %295, i32 %300
  br label %302

302:                                              ; preds = %302, %298
  %303 = phi ptr [ %307, %302 ], [ %296, %298 ]
  %304 = phi ptr [ %305, %302 ], [ %295, %298 ]
  %305 = getelementptr i8, ptr %304, i32 1
  %306 = load i8, ptr %304, align 1
  %307 = getelementptr i8, ptr %303, i32 1
  store i8 %306, ptr %303, align 1
  %308 = icmp eq ptr %305, %301
  br i1 %308, label %309, label %302

309:                                              ; preds = %302, %294, %269, %261
  %310 = load ptr, ptr %44, align 4
  %311 = getelementptr i8, ptr %310, i32 %251
  store ptr %311, ptr %44, align 4
  %312 = icmp ugt i32 %251, 65535
  br i1 %312, label %313, label %320

313:                                              ; preds = %309
  store i32 1, ptr %46, align 4
  %314 = load ptr, ptr %47, align 4
  %315 = load ptr, ptr %1, align 4
  %316 = ptrtoint ptr %314 to i32
  %317 = ptrtoint ptr %315 to i32
  %318 = sub i32 %316, %317
  %319 = ashr exact i32 %318, 3
  store i32 %319, ptr %48, align 4
  br label %320

320:                                              ; preds = %313, %309, %259
  %321 = trunc i32 %251 to i16
  %322 = load ptr, ptr %47, align 4
  %323 = getelementptr inbounds %struct.seqDef_s, ptr %322, i32 0, i32 1
  store i16 %321, ptr %323, align 4
  %324 = add i32 %247, 1
  %325 = load ptr, ptr %47, align 4
  store i32 %324, ptr %325, align 4
  %326 = icmp ugt i32 %252, 65535
  br i1 %326, label %329, label %327

327:                                              ; preds = %320
  %328 = load ptr, ptr %47, align 4
  br label %336

329:                                              ; preds = %320
  store i32 2, ptr %46, align 4
  %330 = load ptr, ptr %47, align 4
  %331 = load ptr, ptr %1, align 4
  %332 = ptrtoint ptr %330 to i32
  %333 = ptrtoint ptr %331 to i32
  %334 = sub i32 %332, %333
  %335 = ashr exact i32 %334, 3
  store i32 %335, ptr %48, align 4
  br label %336

336:                                              ; preds = %329, %327
  %337 = phi ptr [ %328, %327 ], [ %330, %329 ]
  %338 = trunc i32 %252 to i16
  %339 = getelementptr inbounds %struct.seqDef_s, ptr %337, i32 0, i32 2
  store i16 %338, ptr %339, align 2
  %340 = load ptr, ptr %47, align 4
  %341 = getelementptr %struct.seqDef_s, ptr %340, i32 1
  store ptr %341, ptr %47, align 4
  %342 = getelementptr i8, ptr %248, i32 %246
  %343 = icmp ugt ptr %342, %8
  br i1 %343, label %519, label %344

344:                                              ; preds = %511, %336
  %345 = phi ptr [ %516, %511 ], [ %341, %336 ]
  %346 = phi ptr [ %517, %511 ], [ %342, %336 ]
  %347 = phi i32 [ %348, %511 ], [ %245, %336 ]
  %348 = phi i32 [ %347, %511 ], [ %244, %336 ]
  %349 = ptrtoint ptr %346 to i32
  %350 = add i32 %348, %39
  %351 = sub i32 %349, %350
  %352 = icmp ult i32 %351, %12
  %353 = select i1 %352, ptr %49, ptr %10
  %354 = getelementptr i8, ptr %353, i32 %351
  %355 = xor i32 %351, -1
  %356 = add i32 %12, %355
  %357 = icmp ugt i32 %356, 2
  br i1 %357, label %358, label %519

358:                                              ; preds = %344
  %359 = load i32, ptr %354, align 1
  %360 = load i32, ptr %346, align 1
  %361 = icmp eq i32 %359, %360
  br i1 %361, label %362, label %519

362:                                              ; preds = %358
  %363 = select i1 %352, ptr %24, ptr %7
  %364 = getelementptr i8, ptr %346, i32 4
  %365 = getelementptr i8, ptr %354, i32 4
  %366 = ptrtoint ptr %363 to i32
  %367 = ptrtoint ptr %365 to i32
  %368 = sub i32 %366, %367
  %369 = getelementptr i8, ptr %364, i32 %368
  %370 = icmp ult ptr %369, %7
  %371 = select i1 %370, ptr %369, ptr %7
  %372 = getelementptr i8, ptr %371, i32 -3
  %373 = icmp ugt ptr %372, %364
  br i1 %373, label %374, label %400

374:                                              ; preds = %362
  %375 = load i32, ptr %365, align 1
  %376 = load i32, ptr %364, align 1
  %377 = xor i32 %376, %375
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %374
  %380 = tail call i32 @llvm.cttz.i32(i32 %377, i1 true) #7, !range !8
  %381 = lshr i32 %380, 3
  br label %427

382:                                              ; preds = %388, %374
  %383 = phi ptr [ %386, %388 ], [ %364, %374 ]
  %384 = phi ptr [ %385, %388 ], [ %365, %374 ]
  %385 = getelementptr i8, ptr %384, i32 4
  %386 = getelementptr i8, ptr %383, i32 4
  %387 = icmp ult ptr %386, %372
  br i1 %387, label %388, label %400

388:                                              ; preds = %382
  %389 = load i32, ptr %385, align 1
  %390 = load i32, ptr %386, align 1
  %391 = xor i32 %390, %389
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %382, label %393

393:                                              ; preds = %388
  %394 = tail call i32 @llvm.cttz.i32(i32 %391, i1 true) #7, !range !8
  %395 = lshr i32 %394, 3
  %396 = getelementptr i8, ptr %386, i32 %395
  %397 = ptrtoint ptr %396 to i32
  %398 = ptrtoint ptr %364 to i32
  %399 = sub i32 %397, %398
  br label %427

400:                                              ; preds = %382, %362
  %401 = phi ptr [ %364, %362 ], [ %386, %382 ]
  %402 = phi ptr [ %365, %362 ], [ %385, %382 ]
  %403 = getelementptr i8, ptr %371, i32 -1
  %404 = icmp ult ptr %401, %403
  br i1 %404, label %405, label %412

405:                                              ; preds = %400
  %406 = load i16, ptr %402, align 1
  %407 = load i16, ptr %401, align 1
  %408 = icmp eq i16 %406, %407
  br i1 %408, label %409, label %412

409:                                              ; preds = %405
  %410 = getelementptr i8, ptr %401, i32 2
  %411 = getelementptr i8, ptr %402, i32 2
  br label %412

412:                                              ; preds = %409, %405, %400
  %413 = phi ptr [ %410, %409 ], [ %401, %405 ], [ %401, %400 ]
  %414 = phi ptr [ %411, %409 ], [ %402, %405 ], [ %402, %400 ]
  %415 = icmp ult ptr %413, %371
  br i1 %415, label %416, label %422

416:                                              ; preds = %412
  %417 = load i8, ptr %414, align 1
  %418 = load i8, ptr %413, align 1
  %419 = icmp eq i8 %417, %418
  %420 = zext i1 %419 to i32
  %421 = getelementptr i8, ptr %413, i32 %420
  br label %422

422:                                              ; preds = %416, %412
  %423 = phi ptr [ %413, %412 ], [ %421, %416 ]
  %424 = ptrtoint ptr %423 to i32
  %425 = ptrtoint ptr %364 to i32
  %426 = sub i32 %424, %425
  br label %427

427:                                              ; preds = %422, %393, %379
  %428 = phi i32 [ %426, %422 ], [ %381, %379 ], [ %399, %393 ]
  %429 = getelementptr i8, ptr %365, i32 %428
  %430 = icmp eq ptr %429, %363
  br i1 %430, label %431, label %489

431:                                              ; preds = %427
  %432 = getelementptr i8, ptr %364, i32 %428
  %433 = icmp ugt ptr %40, %432
  br i1 %433, label %434, label %460

434:                                              ; preds = %431
  %435 = load i32, ptr %13, align 1
  %436 = load i32, ptr %432, align 1
  %437 = xor i32 %436, %435
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %442, label %439

439:                                              ; preds = %434
  %440 = tail call i32 @llvm.cttz.i32(i32 %437, i1 true) #7, !range !8
  %441 = lshr i32 %440, 3
  br label %486

442:                                              ; preds = %448, %434
  %443 = phi ptr [ %446, %448 ], [ %432, %434 ]
  %444 = phi ptr [ %445, %448 ], [ %13, %434 ]
  %445 = getelementptr i8, ptr %444, i32 4
  %446 = getelementptr i8, ptr %443, i32 4
  %447 = icmp ult ptr %446, %40
  br i1 %447, label %448, label %460

448:                                              ; preds = %442
  %449 = load i32, ptr %445, align 1
  %450 = load i32, ptr %446, align 1
  %451 = xor i32 %450, %449
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %442, label %453

453:                                              ; preds = %448
  %454 = tail call i32 @llvm.cttz.i32(i32 %451, i1 true) #7, !range !8
  %455 = lshr i32 %454, 3
  %456 = getelementptr i8, ptr %446, i32 %455
  %457 = ptrtoint ptr %456 to i32
  %458 = ptrtoint ptr %432 to i32
  %459 = sub i32 %457, %458
  br label %486

460:                                              ; preds = %442, %431
  %461 = phi ptr [ %432, %431 ], [ %446, %442 ]
  %462 = phi ptr [ %13, %431 ], [ %445, %442 ]
  %463 = icmp ult ptr %461, %41
  br i1 %463, label %464, label %471

464:                                              ; preds = %460
  %465 = load i16, ptr %462, align 1
  %466 = load i16, ptr %461, align 1
  %467 = icmp eq i16 %465, %466
  br i1 %467, label %468, label %471

468:                                              ; preds = %464
  %469 = getelementptr i8, ptr %461, i32 2
  %470 = getelementptr i8, ptr %462, i32 2
  br label %471

471:                                              ; preds = %468, %464, %460
  %472 = phi ptr [ %469, %468 ], [ %461, %464 ], [ %461, %460 ]
  %473 = phi ptr [ %470, %468 ], [ %462, %464 ], [ %462, %460 ]
  %474 = icmp ult ptr %472, %7
  br i1 %474, label %475, label %481

475:                                              ; preds = %471
  %476 = load i8, ptr %473, align 1
  %477 = load i8, ptr %472, align 1
  %478 = icmp eq i8 %476, %477
  %479 = zext i1 %478 to i32
  %480 = getelementptr i8, ptr %472, i32 %479
  br label %481

481:                                              ; preds = %475, %471
  %482 = phi ptr [ %472, %471 ], [ %480, %475 ]
  %483 = ptrtoint ptr %482 to i32
  %484 = ptrtoint ptr %432 to i32
  %485 = sub i32 %483, %484
  br label %486

486:                                              ; preds = %481, %453, %439
  %487 = phi i32 [ %485, %481 ], [ %441, %439 ], [ %459, %453 ]
  %488 = add i32 %487, %428
  br label %489

489:                                              ; preds = %486, %427
  %490 = phi i32 [ %488, %486 ], [ %428, %427 ]
  %491 = add i32 %490, 4
  %492 = add i32 %490, 1
  %493 = icmp ugt ptr %346, %43
  br i1 %493, label %497, label %494

494:                                              ; preds = %489
  %495 = load ptr, ptr %44, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %495, ptr noundef align 1 dereferenceable(16) %346, i32 16, i1 false) #7
  %496 = load ptr, ptr %47, align 4
  br label %497

497:                                              ; preds = %494, %489
  %498 = phi ptr [ %345, %489 ], [ %496, %494 ]
  %499 = getelementptr inbounds %struct.seqDef_s, ptr %498, i32 0, i32 1
  store i16 0, ptr %499, align 4
  %500 = load ptr, ptr %47, align 4
  store i32 1, ptr %500, align 4
  %501 = icmp ugt i32 %492, 65535
  br i1 %501, label %504, label %502

502:                                              ; preds = %497
  %503 = load ptr, ptr %47, align 4
  br label %511

504:                                              ; preds = %497
  store i32 2, ptr %46, align 4
  %505 = load ptr, ptr %47, align 4
  %506 = load ptr, ptr %1, align 4
  %507 = ptrtoint ptr %505 to i32
  %508 = ptrtoint ptr %506 to i32
  %509 = sub i32 %507, %508
  %510 = ashr exact i32 %509, 3
  store i32 %510, ptr %48, align 4
  br label %511

511:                                              ; preds = %504, %502
  %512 = phi ptr [ %503, %502 ], [ %505, %504 ]
  %513 = trunc i32 %492 to i16
  %514 = getelementptr inbounds %struct.seqDef_s, ptr %512, i32 0, i32 2
  store i16 %513, ptr %514, align 2
  %515 = load ptr, ptr %47, align 4
  %516 = getelementptr %struct.seqDef_s, ptr %515, i32 1
  store ptr %516, ptr %47, align 4
  %517 = getelementptr i8, ptr %346, i32 %491
  %518 = icmp ugt ptr %517, %8
  br i1 %518, label %519, label %344

519:                                              ; preds = %511, %358, %344, %336, %206
  %520 = phi i32 [ %54, %206 ], [ %244, %336 ], [ %348, %344 ], [ %348, %358 ], [ %347, %511 ]
  %521 = phi i32 [ %53, %206 ], [ %245, %336 ], [ %347, %344 ], [ %347, %358 ], [ %348, %511 ]
  %522 = phi ptr [ %52, %206 ], [ %342, %336 ], [ %346, %344 ], [ %346, %358 ], [ %517, %511 ]
  %523 = phi ptr [ %211, %206 ], [ %342, %336 ], [ %346, %344 ], [ %346, %358 ], [ %517, %511 ]
  %524 = icmp ult ptr %523, %8
  br i1 %524, label %50, label %525

525:                                              ; preds = %519
  %526 = ptrtoint ptr %522 to i32
  br label %527

527:                                              ; preds = %525, %5
  %528 = phi i32 [ %526, %525 ], [ %29, %5 ]
  %529 = phi i32 [ %520, %525 ], [ %16, %5 ]
  %530 = phi i32 [ %521, %525 ], [ %14, %5 ]
  store i32 %530, ptr %2, align 4
  store i32 %529, ptr %15, align 4
  %531 = ptrtoint ptr %7 to i32
  %532 = sub i32 %531, %528
  ret i32 %532
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy2_dedicatedDictSearch(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %22
  %26 = load ptr, ptr %20, align 4
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %24 to i32
  %29 = add i32 %14, %28
  %30 = sub i32 %29, %27
  %31 = ptrtoint ptr %3 to i32
  %32 = ptrtoint ptr %15 to i32
  %33 = sub i32 %31, %32
  %34 = ptrtoint ptr %25 to i32
  %35 = sub i32 %34, %27
  %36 = icmp eq i32 %33, %35
  %37 = zext i1 %36 to i32
  %38 = getelementptr i8, ptr %3, i32 %37
  %39 = icmp ult ptr %38, %10
  br i1 %39, label %40, label %909

40:                                               ; preds = %5
  %41 = ptrtoint ptr %12 to i32
  %42 = getelementptr i8, ptr %9, i32 -3
  %43 = getelementptr i8, ptr %9, i32 -1
  %44 = sub i32 0, %30
  %45 = getelementptr i8, ptr %9, i32 -32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %47 = ptrtoint ptr %45 to i32
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %50 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %51 = getelementptr i8, ptr %24, i32 %44
  br label %52

52:                                               ; preds = %901, %40
  %53 = phi ptr [ %38, %40 ], [ %905, %901 ]
  %54 = phi ptr [ %3, %40 ], [ %904, %901 ]
  %55 = phi i32 [ %16, %40 ], [ %903, %901 ]
  %56 = phi i32 [ %18, %40 ], [ %902, %901 ]
  %57 = getelementptr i8, ptr %53, i32 1
  %58 = ptrtoint ptr %53 to i32
  %59 = add i32 %55, %41
  %60 = sub i32 1, %59
  %61 = add i32 %60, %58
  %62 = icmp ult i32 %61, %14
  %63 = sub i32 %61, %30
  %64 = getelementptr i8, ptr %24, i32 %63
  %65 = getelementptr i8, ptr %12, i32 %61
  %66 = select i1 %62, ptr %64, ptr %65
  %67 = xor i32 %61, -1
  %68 = add i32 %14, %67
  %69 = icmp ugt i32 %68, 2
  br i1 %69, label %70, label %204

70:                                               ; preds = %52
  %71 = load i32, ptr %66, align 1
  %72 = load i32, ptr %57, align 1
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %74, label %204

74:                                               ; preds = %70
  %75 = select i1 %62, ptr %26, ptr %9
  %76 = getelementptr i8, ptr %53, i32 5
  %77 = getelementptr i8, ptr %66, i32 4
  %78 = ptrtoint ptr %75 to i32
  %79 = ptrtoint ptr %77 to i32
  %80 = sub i32 %78, %79
  %81 = getelementptr i8, ptr %76, i32 %80
  %82 = icmp ult ptr %81, %9
  %83 = select i1 %82, ptr %81, ptr %9
  %84 = getelementptr i8, ptr %83, i32 -3
  %85 = icmp ugt ptr %84, %76
  br i1 %85, label %86, label %112

86:                                               ; preds = %74
  %87 = load i32, ptr %77, align 1
  %88 = load i32, ptr %76, align 1
  %89 = xor i32 %88, %87
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = tail call i32 @llvm.cttz.i32(i32 %89, i1 true) #7, !range !8
  %93 = lshr i32 %92, 3
  br label %139

94:                                               ; preds = %100, %86
  %95 = phi ptr [ %98, %100 ], [ %76, %86 ]
  %96 = phi ptr [ %97, %100 ], [ %77, %86 ]
  %97 = getelementptr i8, ptr %96, i32 4
  %98 = getelementptr i8, ptr %95, i32 4
  %99 = icmp ult ptr %98, %84
  br i1 %99, label %100, label %112

100:                                              ; preds = %94
  %101 = load i32, ptr %97, align 1
  %102 = load i32, ptr %98, align 1
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %94, label %105

105:                                              ; preds = %100
  %106 = tail call i32 @llvm.cttz.i32(i32 %103, i1 true) #7, !range !8
  %107 = lshr i32 %106, 3
  %108 = getelementptr i8, ptr %98, i32 %107
  %109 = ptrtoint ptr %108 to i32
  %110 = ptrtoint ptr %76 to i32
  %111 = sub i32 %109, %110
  br label %139

112:                                              ; preds = %94, %74
  %113 = phi ptr [ %76, %74 ], [ %98, %94 ]
  %114 = phi ptr [ %77, %74 ], [ %97, %94 ]
  %115 = getelementptr i8, ptr %83, i32 -1
  %116 = icmp ult ptr %113, %115
  br i1 %116, label %117, label %124

117:                                              ; preds = %112
  %118 = load i16, ptr %114, align 1
  %119 = load i16, ptr %113, align 1
  %120 = icmp eq i16 %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %117
  %122 = getelementptr i8, ptr %113, i32 2
  %123 = getelementptr i8, ptr %114, i32 2
  br label %124

124:                                              ; preds = %121, %117, %112
  %125 = phi ptr [ %122, %121 ], [ %113, %117 ], [ %113, %112 ]
  %126 = phi ptr [ %123, %121 ], [ %114, %117 ], [ %114, %112 ]
  %127 = icmp ult ptr %125, %83
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = load i8, ptr %126, align 1
  %130 = load i8, ptr %125, align 1
  %131 = icmp eq i8 %129, %130
  %132 = zext i1 %131 to i32
  %133 = getelementptr i8, ptr %125, i32 %132
  br label %134

134:                                              ; preds = %128, %124
  %135 = phi ptr [ %125, %124 ], [ %133, %128 ]
  %136 = ptrtoint ptr %135 to i32
  %137 = ptrtoint ptr %76 to i32
  %138 = sub i32 %136, %137
  br label %139

139:                                              ; preds = %134, %105, %91
  %140 = phi i32 [ %138, %134 ], [ %93, %91 ], [ %111, %105 ]
  %141 = getelementptr i8, ptr %77, i32 %140
  %142 = icmp eq ptr %141, %75
  br i1 %142, label %143, label %201

143:                                              ; preds = %139
  %144 = getelementptr i8, ptr %76, i32 %140
  %145 = icmp ugt ptr %42, %144
  br i1 %145, label %146, label %172

146:                                              ; preds = %143
  %147 = load i32, ptr %15, align 1
  %148 = load i32, ptr %144, align 1
  %149 = xor i32 %148, %147
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %146
  %152 = tail call i32 @llvm.cttz.i32(i32 %149, i1 true) #7, !range !8
  %153 = lshr i32 %152, 3
  br label %198

154:                                              ; preds = %160, %146
  %155 = phi ptr [ %158, %160 ], [ %144, %146 ]
  %156 = phi ptr [ %157, %160 ], [ %15, %146 ]
  %157 = getelementptr i8, ptr %156, i32 4
  %158 = getelementptr i8, ptr %155, i32 4
  %159 = icmp ult ptr %158, %42
  br i1 %159, label %160, label %172

160:                                              ; preds = %154
  %161 = load i32, ptr %157, align 1
  %162 = load i32, ptr %158, align 1
  %163 = xor i32 %162, %161
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %154, label %165

165:                                              ; preds = %160
  %166 = tail call i32 @llvm.cttz.i32(i32 %163, i1 true) #7, !range !8
  %167 = lshr i32 %166, 3
  %168 = getelementptr i8, ptr %158, i32 %167
  %169 = ptrtoint ptr %168 to i32
  %170 = ptrtoint ptr %144 to i32
  %171 = sub i32 %169, %170
  br label %198

172:                                              ; preds = %154, %143
  %173 = phi ptr [ %144, %143 ], [ %158, %154 ]
  %174 = phi ptr [ %15, %143 ], [ %157, %154 ]
  %175 = icmp ult ptr %173, %43
  br i1 %175, label %176, label %183

176:                                              ; preds = %172
  %177 = load i16, ptr %174, align 1
  %178 = load i16, ptr %173, align 1
  %179 = icmp eq i16 %177, %178
  br i1 %179, label %180, label %183

180:                                              ; preds = %176
  %181 = getelementptr i8, ptr %173, i32 2
  %182 = getelementptr i8, ptr %174, i32 2
  br label %183

183:                                              ; preds = %180, %176, %172
  %184 = phi ptr [ %181, %180 ], [ %173, %176 ], [ %173, %172 ]
  %185 = phi ptr [ %182, %180 ], [ %174, %176 ], [ %174, %172 ]
  %186 = icmp ult ptr %184, %9
  br i1 %186, label %187, label %193

187:                                              ; preds = %183
  %188 = load i8, ptr %185, align 1
  %189 = load i8, ptr %184, align 1
  %190 = icmp eq i8 %188, %189
  %191 = zext i1 %190 to i32
  %192 = getelementptr i8, ptr %184, i32 %191
  br label %193

193:                                              ; preds = %187, %183
  %194 = phi ptr [ %184, %183 ], [ %192, %187 ]
  %195 = ptrtoint ptr %194 to i32
  %196 = ptrtoint ptr %144 to i32
  %197 = sub i32 %195, %196
  br label %198

198:                                              ; preds = %193, %165, %151
  %199 = phi i32 [ %197, %193 ], [ %153, %151 ], [ %171, %165 ]
  %200 = add i32 %199, %140
  br label %201

201:                                              ; preds = %198, %139
  %202 = phi i32 [ %200, %198 ], [ %140, %139 ]
  %203 = add i32 %202, 4
  br label %204

204:                                              ; preds = %201, %70, %52
  %205 = phi i32 [ %203, %201 ], [ 0, %70 ], [ 0, %52 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %206 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %53, ptr noundef %9, ptr noundef nonnull %6) #7
  %207 = load i32, ptr %6, align 4
  %208 = tail call i32 @llvm.umax.i32(i32 %206, i32 %205) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %209 = icmp ult i32 %208, 4
  br i1 %209, label %210, label %216

210:                                              ; preds = %204
  %211 = ptrtoint ptr %54 to i32
  %212 = sub i32 %58, %211
  %213 = ashr i32 %212, 8
  %214 = add nsw i32 %213, 1
  %215 = getelementptr i8, ptr %53, i32 %214
  br label %901

216:                                              ; preds = %204
  %217 = icmp ugt i32 %206, %205
  %218 = select i1 %217, ptr %53, ptr %57
  %219 = select i1 %217, i32 %207, i32 0
  %220 = icmp ult ptr %53, %10
  br i1 %220, label %221, label %591

221:                                              ; preds = %404, %216
  %222 = phi ptr [ %407, %404 ], [ %53, %216 ]
  %223 = phi ptr [ %407, %404 ], [ %218, %216 ]
  %224 = phi i32 [ %406, %404 ], [ %219, %216 ]
  %225 = phi i32 [ %405, %404 ], [ %208, %216 ]
  %226 = getelementptr i8, ptr %222, i32 1
  %227 = ptrtoint ptr %226 to i32
  %228 = sub i32 %227, %59
  %229 = icmp ult i32 %228, %14
  %230 = sub i32 %228, %30
  %231 = getelementptr i8, ptr %24, i32 %230
  %232 = getelementptr i8, ptr %12, i32 %228
  %233 = select i1 %229, ptr %231, ptr %232
  %234 = xor i32 %228, -1
  %235 = add i32 %14, %234
  %236 = icmp ugt i32 %235, 2
  br i1 %236, label %237, label %382

237:                                              ; preds = %221
  %238 = load i32, ptr %233, align 1
  %239 = load i32, ptr %226, align 1
  %240 = icmp eq i32 %238, %239
  br i1 %240, label %241, label %382

241:                                              ; preds = %237
  %242 = select i1 %229, ptr %26, ptr %9
  %243 = getelementptr i8, ptr %222, i32 5
  %244 = getelementptr i8, ptr %233, i32 4
  %245 = ptrtoint ptr %242 to i32
  %246 = ptrtoint ptr %244 to i32
  %247 = sub i32 %245, %246
  %248 = getelementptr i8, ptr %243, i32 %247
  %249 = icmp ult ptr %248, %9
  %250 = select i1 %249, ptr %248, ptr %9
  %251 = getelementptr i8, ptr %250, i32 -3
  %252 = icmp ugt ptr %251, %243
  br i1 %252, label %253, label %279

253:                                              ; preds = %241
  %254 = load i32, ptr %244, align 1
  %255 = load i32, ptr %243, align 1
  %256 = xor i32 %255, %254
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %261, label %258

258:                                              ; preds = %253
  %259 = tail call i32 @llvm.cttz.i32(i32 %256, i1 true) #7, !range !8
  %260 = lshr i32 %259, 3
  br label %306

261:                                              ; preds = %267, %253
  %262 = phi ptr [ %265, %267 ], [ %243, %253 ]
  %263 = phi ptr [ %264, %267 ], [ %244, %253 ]
  %264 = getelementptr i8, ptr %263, i32 4
  %265 = getelementptr i8, ptr %262, i32 4
  %266 = icmp ult ptr %265, %251
  br i1 %266, label %267, label %279

267:                                              ; preds = %261
  %268 = load i32, ptr %264, align 1
  %269 = load i32, ptr %265, align 1
  %270 = xor i32 %269, %268
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %261, label %272

272:                                              ; preds = %267
  %273 = tail call i32 @llvm.cttz.i32(i32 %270, i1 true) #7, !range !8
  %274 = lshr i32 %273, 3
  %275 = getelementptr i8, ptr %265, i32 %274
  %276 = ptrtoint ptr %275 to i32
  %277 = ptrtoint ptr %243 to i32
  %278 = sub i32 %276, %277
  br label %306

279:                                              ; preds = %261, %241
  %280 = phi ptr [ %243, %241 ], [ %265, %261 ]
  %281 = phi ptr [ %244, %241 ], [ %264, %261 ]
  %282 = getelementptr i8, ptr %250, i32 -1
  %283 = icmp ult ptr %280, %282
  br i1 %283, label %284, label %291

284:                                              ; preds = %279
  %285 = load i16, ptr %281, align 1
  %286 = load i16, ptr %280, align 1
  %287 = icmp eq i16 %285, %286
  br i1 %287, label %288, label %291

288:                                              ; preds = %284
  %289 = getelementptr i8, ptr %280, i32 2
  %290 = getelementptr i8, ptr %281, i32 2
  br label %291

291:                                              ; preds = %288, %284, %279
  %292 = phi ptr [ %289, %288 ], [ %280, %284 ], [ %280, %279 ]
  %293 = phi ptr [ %290, %288 ], [ %281, %284 ], [ %281, %279 ]
  %294 = icmp ult ptr %292, %250
  br i1 %294, label %295, label %301

295:                                              ; preds = %291
  %296 = load i8, ptr %293, align 1
  %297 = load i8, ptr %292, align 1
  %298 = icmp eq i8 %296, %297
  %299 = zext i1 %298 to i32
  %300 = getelementptr i8, ptr %292, i32 %299
  br label %301

301:                                              ; preds = %295, %291
  %302 = phi ptr [ %292, %291 ], [ %300, %295 ]
  %303 = ptrtoint ptr %302 to i32
  %304 = ptrtoint ptr %243 to i32
  %305 = sub i32 %303, %304
  br label %306

306:                                              ; preds = %301, %272, %258
  %307 = phi i32 [ %305, %301 ], [ %260, %258 ], [ %278, %272 ]
  %308 = getelementptr i8, ptr %244, i32 %307
  %309 = icmp eq ptr %308, %242
  br i1 %309, label %310, label %368

310:                                              ; preds = %306
  %311 = getelementptr i8, ptr %243, i32 %307
  %312 = icmp ugt ptr %42, %311
  br i1 %312, label %313, label %339

313:                                              ; preds = %310
  %314 = load i32, ptr %15, align 1
  %315 = load i32, ptr %311, align 1
  %316 = xor i32 %315, %314
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %313
  %319 = tail call i32 @llvm.cttz.i32(i32 %316, i1 true) #7, !range !8
  %320 = lshr i32 %319, 3
  br label %365

321:                                              ; preds = %327, %313
  %322 = phi ptr [ %325, %327 ], [ %311, %313 ]
  %323 = phi ptr [ %324, %327 ], [ %15, %313 ]
  %324 = getelementptr i8, ptr %323, i32 4
  %325 = getelementptr i8, ptr %322, i32 4
  %326 = icmp ult ptr %325, %42
  br i1 %326, label %327, label %339

327:                                              ; preds = %321
  %328 = load i32, ptr %324, align 1
  %329 = load i32, ptr %325, align 1
  %330 = xor i32 %329, %328
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %321, label %332

332:                                              ; preds = %327
  %333 = tail call i32 @llvm.cttz.i32(i32 %330, i1 true) #7, !range !8
  %334 = lshr i32 %333, 3
  %335 = getelementptr i8, ptr %325, i32 %334
  %336 = ptrtoint ptr %335 to i32
  %337 = ptrtoint ptr %311 to i32
  %338 = sub i32 %336, %337
  br label %365

339:                                              ; preds = %321, %310
  %340 = phi ptr [ %311, %310 ], [ %325, %321 ]
  %341 = phi ptr [ %15, %310 ], [ %324, %321 ]
  %342 = icmp ult ptr %340, %43
  br i1 %342, label %343, label %350

343:                                              ; preds = %339
  %344 = load i16, ptr %341, align 1
  %345 = load i16, ptr %340, align 1
  %346 = icmp eq i16 %344, %345
  br i1 %346, label %347, label %350

347:                                              ; preds = %343
  %348 = getelementptr i8, ptr %340, i32 2
  %349 = getelementptr i8, ptr %341, i32 2
  br label %350

350:                                              ; preds = %347, %343, %339
  %351 = phi ptr [ %348, %347 ], [ %340, %343 ], [ %340, %339 ]
  %352 = phi ptr [ %349, %347 ], [ %341, %343 ], [ %341, %339 ]
  %353 = icmp ult ptr %351, %9
  br i1 %353, label %354, label %360

354:                                              ; preds = %350
  %355 = load i8, ptr %352, align 1
  %356 = load i8, ptr %351, align 1
  %357 = icmp eq i8 %355, %356
  %358 = zext i1 %357 to i32
  %359 = getelementptr i8, ptr %351, i32 %358
  br label %360

360:                                              ; preds = %354, %350
  %361 = phi ptr [ %351, %350 ], [ %359, %354 ]
  %362 = ptrtoint ptr %361 to i32
  %363 = ptrtoint ptr %311 to i32
  %364 = sub i32 %362, %363
  br label %365

365:                                              ; preds = %360, %332, %318
  %366 = phi i32 [ %364, %360 ], [ %320, %318 ], [ %338, %332 ]
  %367 = add i32 %366, %307
  br label %368

368:                                              ; preds = %365, %306
  %369 = phi i32 [ %367, %365 ], [ %307, %306 ]
  %370 = add i32 %369, 4
  %371 = icmp ult i32 %369, -4
  br i1 %371, label %372, label %382

372:                                              ; preds = %368
  %373 = add i32 %224, 1
  %374 = tail call i32 @llvm.ctlz.i32(i32 %373, i1 false) #7, !range !8
  %375 = xor i32 %374, -32
  %376 = mul i32 %225, 3
  %377 = add i32 %376, 2
  %378 = add i32 %377, %375
  %379 = mul i32 %370, 3
  %380 = icmp sgt i32 %379, %378
  br i1 %380, label %381, label %382

381:                                              ; preds = %372
  br label %382

382:                                              ; preds = %381, %372, %368, %237, %221
  %383 = phi i32 [ %225, %237 ], [ %225, %221 ], [ %370, %381 ], [ %225, %372 ], [ %225, %368 ]
  %384 = phi i32 [ %224, %237 ], [ %224, %221 ], [ 0, %381 ], [ %224, %372 ], [ %224, %368 ]
  %385 = phi ptr [ %223, %237 ], [ %223, %221 ], [ %226, %381 ], [ %223, %372 ], [ %223, %368 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %386 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %226, ptr noundef %9, ptr noundef nonnull %7) #7
  %387 = load i32, ptr %7, align 4
  %388 = icmp ugt i32 %386, 3
  br i1 %388, label %389, label %409

389:                                              ; preds = %382
  %390 = add i32 %384, 1
  %391 = tail call i32 @llvm.ctlz.i32(i32 %390, i1 false) #7, !range !8
  %392 = xor i32 %391, -32
  %393 = add i32 %387, 1
  %394 = tail call i32 @llvm.ctlz.i32(i32 %393, i1 false) #7, !range !8
  %395 = xor i32 %394, -32
  %396 = shl i32 %383, 2
  %397 = add i32 %396, 5
  %398 = add i32 %397, %392
  %399 = shl i32 %386, 2
  %400 = or i32 %399, 1
  %401 = add i32 %400, %395
  %402 = icmp sgt i32 %401, %398
  br i1 %402, label %403, label %409

403:                                              ; preds = %389
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  br label %404

404:                                              ; preds = %590, %403
  %405 = phi i32 [ %386, %403 ], [ %572, %590 ]
  %406 = phi i32 [ %387, %403 ], [ %573, %590 ]
  %407 = phi ptr [ %226, %403 ], [ %412, %590 ]
  %408 = icmp ult ptr %407, %10
  br i1 %408, label %221, label %591

409:                                              ; preds = %389, %382
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %410 = icmp ult ptr %226, %10
  br i1 %410, label %411, label %591

411:                                              ; preds = %409
  %412 = getelementptr i8, ptr %222, i32 2
  %413 = ptrtoint ptr %412 to i32
  %414 = sub i32 %413, %59
  %415 = icmp ult i32 %414, %14
  %416 = sub i32 %414, %30
  %417 = getelementptr i8, ptr %24, i32 %416
  %418 = getelementptr i8, ptr %12, i32 %414
  %419 = select i1 %415, ptr %417, ptr %418
  %420 = xor i32 %414, -1
  %421 = add i32 %14, %420
  %422 = icmp ugt i32 %421, 2
  br i1 %422, label %423, label %568

423:                                              ; preds = %411
  %424 = load i32, ptr %419, align 1
  %425 = load i32, ptr %412, align 1
  %426 = icmp eq i32 %424, %425
  br i1 %426, label %427, label %568

427:                                              ; preds = %423
  %428 = select i1 %415, ptr %26, ptr %9
  %429 = getelementptr i8, ptr %222, i32 6
  %430 = getelementptr i8, ptr %419, i32 4
  %431 = ptrtoint ptr %428 to i32
  %432 = ptrtoint ptr %430 to i32
  %433 = sub i32 %431, %432
  %434 = getelementptr i8, ptr %429, i32 %433
  %435 = icmp ult ptr %434, %9
  %436 = select i1 %435, ptr %434, ptr %9
  %437 = getelementptr i8, ptr %436, i32 -3
  %438 = icmp ugt ptr %437, %429
  br i1 %438, label %439, label %465

439:                                              ; preds = %427
  %440 = load i32, ptr %430, align 1
  %441 = load i32, ptr %429, align 1
  %442 = xor i32 %441, %440
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %439
  %445 = tail call i32 @llvm.cttz.i32(i32 %442, i1 true) #7, !range !8
  %446 = lshr i32 %445, 3
  br label %492

447:                                              ; preds = %453, %439
  %448 = phi ptr [ %451, %453 ], [ %429, %439 ]
  %449 = phi ptr [ %450, %453 ], [ %430, %439 ]
  %450 = getelementptr i8, ptr %449, i32 4
  %451 = getelementptr i8, ptr %448, i32 4
  %452 = icmp ult ptr %451, %437
  br i1 %452, label %453, label %465

453:                                              ; preds = %447
  %454 = load i32, ptr %450, align 1
  %455 = load i32, ptr %451, align 1
  %456 = xor i32 %455, %454
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %447, label %458

458:                                              ; preds = %453
  %459 = tail call i32 @llvm.cttz.i32(i32 %456, i1 true) #7, !range !8
  %460 = lshr i32 %459, 3
  %461 = getelementptr i8, ptr %451, i32 %460
  %462 = ptrtoint ptr %461 to i32
  %463 = ptrtoint ptr %429 to i32
  %464 = sub i32 %462, %463
  br label %492

465:                                              ; preds = %447, %427
  %466 = phi ptr [ %429, %427 ], [ %451, %447 ]
  %467 = phi ptr [ %430, %427 ], [ %450, %447 ]
  %468 = getelementptr i8, ptr %436, i32 -1
  %469 = icmp ult ptr %466, %468
  br i1 %469, label %470, label %477

470:                                              ; preds = %465
  %471 = load i16, ptr %467, align 1
  %472 = load i16, ptr %466, align 1
  %473 = icmp eq i16 %471, %472
  br i1 %473, label %474, label %477

474:                                              ; preds = %470
  %475 = getelementptr i8, ptr %466, i32 2
  %476 = getelementptr i8, ptr %467, i32 2
  br label %477

477:                                              ; preds = %474, %470, %465
  %478 = phi ptr [ %475, %474 ], [ %466, %470 ], [ %466, %465 ]
  %479 = phi ptr [ %476, %474 ], [ %467, %470 ], [ %467, %465 ]
  %480 = icmp ult ptr %478, %436
  br i1 %480, label %481, label %487

481:                                              ; preds = %477
  %482 = load i8, ptr %479, align 1
  %483 = load i8, ptr %478, align 1
  %484 = icmp eq i8 %482, %483
  %485 = zext i1 %484 to i32
  %486 = getelementptr i8, ptr %478, i32 %485
  br label %487

487:                                              ; preds = %481, %477
  %488 = phi ptr [ %478, %477 ], [ %486, %481 ]
  %489 = ptrtoint ptr %488 to i32
  %490 = ptrtoint ptr %429 to i32
  %491 = sub i32 %489, %490
  br label %492

492:                                              ; preds = %487, %458, %444
  %493 = phi i32 [ %491, %487 ], [ %446, %444 ], [ %464, %458 ]
  %494 = getelementptr i8, ptr %430, i32 %493
  %495 = icmp eq ptr %494, %428
  br i1 %495, label %496, label %554

496:                                              ; preds = %492
  %497 = getelementptr i8, ptr %429, i32 %493
  %498 = icmp ugt ptr %42, %497
  br i1 %498, label %499, label %525

499:                                              ; preds = %496
  %500 = load i32, ptr %15, align 1
  %501 = load i32, ptr %497, align 1
  %502 = xor i32 %501, %500
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = tail call i32 @llvm.cttz.i32(i32 %502, i1 true) #7, !range !8
  %506 = lshr i32 %505, 3
  br label %551

507:                                              ; preds = %513, %499
  %508 = phi ptr [ %511, %513 ], [ %497, %499 ]
  %509 = phi ptr [ %510, %513 ], [ %15, %499 ]
  %510 = getelementptr i8, ptr %509, i32 4
  %511 = getelementptr i8, ptr %508, i32 4
  %512 = icmp ult ptr %511, %42
  br i1 %512, label %513, label %525

513:                                              ; preds = %507
  %514 = load i32, ptr %510, align 1
  %515 = load i32, ptr %511, align 1
  %516 = xor i32 %515, %514
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %507, label %518

518:                                              ; preds = %513
  %519 = tail call i32 @llvm.cttz.i32(i32 %516, i1 true) #7, !range !8
  %520 = lshr i32 %519, 3
  %521 = getelementptr i8, ptr %511, i32 %520
  %522 = ptrtoint ptr %521 to i32
  %523 = ptrtoint ptr %497 to i32
  %524 = sub i32 %522, %523
  br label %551

525:                                              ; preds = %507, %496
  %526 = phi ptr [ %497, %496 ], [ %511, %507 ]
  %527 = phi ptr [ %15, %496 ], [ %510, %507 ]
  %528 = icmp ult ptr %526, %43
  br i1 %528, label %529, label %536

529:                                              ; preds = %525
  %530 = load i16, ptr %527, align 1
  %531 = load i16, ptr %526, align 1
  %532 = icmp eq i16 %530, %531
  br i1 %532, label %533, label %536

533:                                              ; preds = %529
  %534 = getelementptr i8, ptr %526, i32 2
  %535 = getelementptr i8, ptr %527, i32 2
  br label %536

536:                                              ; preds = %533, %529, %525
  %537 = phi ptr [ %534, %533 ], [ %526, %529 ], [ %526, %525 ]
  %538 = phi ptr [ %535, %533 ], [ %527, %529 ], [ %527, %525 ]
  %539 = icmp ult ptr %537, %9
  br i1 %539, label %540, label %546

540:                                              ; preds = %536
  %541 = load i8, ptr %538, align 1
  %542 = load i8, ptr %537, align 1
  %543 = icmp eq i8 %541, %542
  %544 = zext i1 %543 to i32
  %545 = getelementptr i8, ptr %537, i32 %544
  br label %546

546:                                              ; preds = %540, %536
  %547 = phi ptr [ %537, %536 ], [ %545, %540 ]
  %548 = ptrtoint ptr %547 to i32
  %549 = ptrtoint ptr %497 to i32
  %550 = sub i32 %548, %549
  br label %551

551:                                              ; preds = %546, %518, %504
  %552 = phi i32 [ %550, %546 ], [ %506, %504 ], [ %524, %518 ]
  %553 = add i32 %552, %493
  br label %554

554:                                              ; preds = %551, %492
  %555 = phi i32 [ %553, %551 ], [ %493, %492 ]
  %556 = add i32 %555, 4
  %557 = icmp ult i32 %555, -4
  br i1 %557, label %558, label %568

558:                                              ; preds = %554
  %559 = add i32 %384, 1
  %560 = tail call i32 @llvm.ctlz.i32(i32 %559, i1 false) #7, !range !8
  %561 = xor i32 %560, -32
  %562 = shl i32 %383, 2
  %563 = or i32 %562, 2
  %564 = add i32 %563, %561
  %565 = shl i32 %556, 2
  %566 = icmp sgt i32 %565, %564
  br i1 %566, label %567, label %568

567:                                              ; preds = %558
  br label %568

568:                                              ; preds = %567, %558, %554, %423, %411
  %569 = phi i32 [ %383, %423 ], [ %383, %411 ], [ %556, %567 ], [ %383, %558 ], [ %383, %554 ]
  %570 = phi i32 [ %384, %423 ], [ %384, %411 ], [ 0, %567 ], [ %384, %558 ], [ %384, %554 ]
  %571 = phi ptr [ %385, %423 ], [ %385, %411 ], [ %412, %567 ], [ %385, %558 ], [ %385, %554 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %572 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %412, ptr noundef %9, ptr noundef nonnull %8) #7
  %573 = load i32, ptr %8, align 4
  %574 = icmp ugt i32 %572, 3
  br i1 %574, label %575, label %589

575:                                              ; preds = %568
  %576 = add i32 %570, 1
  %577 = tail call i32 @llvm.ctlz.i32(i32 %576, i1 false) #7, !range !8
  %578 = xor i32 %577, -32
  %579 = add i32 %573, 1
  %580 = tail call i32 @llvm.ctlz.i32(i32 %579, i1 false) #7, !range !8
  %581 = xor i32 %580, -32
  %582 = shl i32 %569, 2
  %583 = add i32 %582, 8
  %584 = add i32 %583, %578
  %585 = shl i32 %572, 2
  %586 = or i32 %585, 1
  %587 = add i32 %586, %581
  %588 = icmp sgt i32 %587, %584
  br i1 %588, label %590, label %589

589:                                              ; preds = %575, %568
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %591

590:                                              ; preds = %575
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %404

591:                                              ; preds = %589, %409, %404, %216
  %592 = phi i32 [ %208, %216 ], [ %569, %589 ], [ %405, %404 ], [ %383, %409 ]
  %593 = phi i32 [ %219, %216 ], [ %570, %589 ], [ %406, %404 ], [ %384, %409 ]
  %594 = phi ptr [ %218, %216 ], [ %571, %589 ], [ %407, %404 ], [ %385, %409 ]
  %595 = icmp eq i32 %593, 0
  br i1 %595, label %626, label %596

596:                                              ; preds = %591
  %597 = ptrtoint ptr %594 to i32
  %598 = add i32 %593, %41
  %599 = sub i32 2, %598
  %600 = add i32 %599, %597
  %601 = icmp ult i32 %600, %14
  %602 = select i1 %601, ptr %25, ptr %15
  %603 = select i1 %601, ptr %51, ptr %12
  %604 = getelementptr i8, ptr %603, i32 %600
  %605 = icmp ugt ptr %594, %54
  %606 = icmp ugt ptr %604, %602
  %607 = select i1 %605, i1 %606, i1 false
  br i1 %607, label %608, label %622

608:                                              ; preds = %617, %596
  %609 = phi ptr [ %614, %617 ], [ %604, %596 ]
  %610 = phi ptr [ %612, %617 ], [ %594, %596 ]
  %611 = phi i32 [ %618, %617 ], [ %592, %596 ]
  %612 = getelementptr i8, ptr %610, i32 -1
  %613 = load i8, ptr %612, align 1
  %614 = getelementptr i8, ptr %609, i32 -1
  %615 = load i8, ptr %614, align 1
  %616 = icmp eq i8 %613, %615
  br i1 %616, label %617, label %622

617:                                              ; preds = %608
  %618 = add i32 %611, 1
  %619 = icmp ugt ptr %612, %54
  %620 = icmp ugt ptr %614, %602
  %621 = select i1 %619, i1 %620, i1 false
  br i1 %621, label %608, label %622

622:                                              ; preds = %617, %608, %596
  %623 = phi i32 [ %592, %596 ], [ %611, %608 ], [ %618, %617 ]
  %624 = phi ptr [ %594, %596 ], [ %610, %608 ], [ %612, %617 ]
  %625 = add i32 %593, -2
  br label %626

626:                                              ; preds = %622, %591
  %627 = phi i32 [ %55, %622 ], [ %56, %591 ]
  %628 = phi i32 [ %625, %622 ], [ %55, %591 ]
  %629 = phi i32 [ %623, %622 ], [ %592, %591 ]
  %630 = phi ptr [ %624, %622 ], [ %594, %591 ]
  %631 = ptrtoint ptr %630 to i32
  %632 = ptrtoint ptr %54 to i32
  %633 = sub i32 %631, %632
  %634 = add i32 %629, -3
  %635 = getelementptr i8, ptr %54, i32 %633
  %636 = icmp ugt ptr %635, %45
  %637 = load ptr, ptr %46, align 4
  br i1 %636, label %659, label %638

638:                                              ; preds = %626
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %639 = icmp ugt i32 %633, 16
  %640 = load ptr, ptr %46, align 4
  br i1 %639, label %643, label %641

641:                                              ; preds = %638
  %642 = getelementptr i8, ptr %640, i32 %633
  store ptr %642, ptr %46, align 4
  br label %702

643:                                              ; preds = %638
  %644 = getelementptr i8, ptr %640, i32 16
  %645 = getelementptr i8, ptr %54, i32 16
  %646 = add i32 %633, -16
  %647 = getelementptr i8, ptr %640, i32 %633
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %644, ptr noundef align 1 dereferenceable(16) %645, i32 16, i1 false) #7
  %648 = icmp slt i32 %646, 17
  br i1 %648, label %691, label %649

649:                                              ; preds = %643
  %650 = getelementptr i8, ptr %640, i32 32
  br label %651

651:                                              ; preds = %651, %649
  %652 = phi ptr [ %645, %649 ], [ %656, %651 ]
  %653 = phi ptr [ %650, %649 ], [ %657, %651 ]
  %654 = getelementptr i8, ptr %652, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %653, ptr noundef align 1 dereferenceable(16) %654, i32 16, i1 false) #7
  %655 = getelementptr i8, ptr %653, i32 16
  %656 = getelementptr i8, ptr %652, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %655, ptr noundef align 1 dereferenceable(16) %656, i32 16, i1 false) #7
  %657 = getelementptr i8, ptr %653, i32 32
  %658 = icmp ult ptr %657, %647
  br i1 %658, label %651, label %691

659:                                              ; preds = %626
  %660 = ptrtoint ptr %635 to i32
  %661 = icmp ult ptr %45, %54
  br i1 %661, label %676, label %662

662:                                              ; preds = %659
  %663 = sub i32 %47, %632
  %664 = getelementptr i8, ptr %637, i32 %663
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %637, ptr noundef align 1 dereferenceable(16) %54, i32 16, i1 false) #7
  %665 = icmp slt i32 %663, 17
  br i1 %665, label %676, label %666

666:                                              ; preds = %662
  %667 = getelementptr i8, ptr %637, i32 16
  br label %668

668:                                              ; preds = %668, %666
  %669 = phi ptr [ %54, %666 ], [ %673, %668 ]
  %670 = phi ptr [ %667, %666 ], [ %674, %668 ]
  %671 = getelementptr i8, ptr %669, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %670, ptr noundef align 1 dereferenceable(16) %671, i32 16, i1 false) #7
  %672 = getelementptr i8, ptr %670, i32 16
  %673 = getelementptr i8, ptr %669, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %672, ptr noundef align 1 dereferenceable(16) %673, i32 16, i1 false) #7
  %674 = getelementptr i8, ptr %670, i32 32
  %675 = icmp ult ptr %674, %664
  br i1 %675, label %668, label %676

676:                                              ; preds = %668, %662, %659
  %677 = phi ptr [ %45, %662 ], [ %54, %659 ], [ %45, %668 ]
  %678 = phi ptr [ %664, %662 ], [ %637, %659 ], [ %664, %668 ]
  %679 = icmp ult ptr %677, %635
  br i1 %679, label %680, label %691

680:                                              ; preds = %676
  %681 = ptrtoint ptr %677 to i32
  %682 = sub i32 %660, %681
  %683 = getelementptr i8, ptr %677, i32 %682
  br label %684

684:                                              ; preds = %684, %680
  %685 = phi ptr [ %689, %684 ], [ %678, %680 ]
  %686 = phi ptr [ %687, %684 ], [ %677, %680 ]
  %687 = getelementptr i8, ptr %686, i32 1
  %688 = load i8, ptr %686, align 1
  %689 = getelementptr i8, ptr %685, i32 1
  store i8 %688, ptr %685, align 1
  %690 = icmp eq ptr %687, %683
  br i1 %690, label %691, label %684

691:                                              ; preds = %684, %676, %651, %643
  %692 = load ptr, ptr %46, align 4
  %693 = getelementptr i8, ptr %692, i32 %633
  store ptr %693, ptr %46, align 4
  %694 = icmp ugt i32 %633, 65535
  br i1 %694, label %695, label %702

695:                                              ; preds = %691
  store i32 1, ptr %48, align 4
  %696 = load ptr, ptr %49, align 4
  %697 = load ptr, ptr %1, align 4
  %698 = ptrtoint ptr %696 to i32
  %699 = ptrtoint ptr %697 to i32
  %700 = sub i32 %698, %699
  %701 = ashr exact i32 %700, 3
  store i32 %701, ptr %50, align 4
  br label %702

702:                                              ; preds = %695, %691, %641
  %703 = trunc i32 %633 to i16
  %704 = load ptr, ptr %49, align 4
  %705 = getelementptr inbounds %struct.seqDef_s, ptr %704, i32 0, i32 1
  store i16 %703, ptr %705, align 4
  %706 = add i32 %593, 1
  %707 = load ptr, ptr %49, align 4
  store i32 %706, ptr %707, align 4
  %708 = icmp ugt i32 %634, 65535
  br i1 %708, label %711, label %709

709:                                              ; preds = %702
  %710 = load ptr, ptr %49, align 4
  br label %718

711:                                              ; preds = %702
  store i32 2, ptr %48, align 4
  %712 = load ptr, ptr %49, align 4
  %713 = load ptr, ptr %1, align 4
  %714 = ptrtoint ptr %712 to i32
  %715 = ptrtoint ptr %713 to i32
  %716 = sub i32 %714, %715
  %717 = ashr exact i32 %716, 3
  store i32 %717, ptr %50, align 4
  br label %718

718:                                              ; preds = %711, %709
  %719 = phi ptr [ %710, %709 ], [ %712, %711 ]
  %720 = trunc i32 %634 to i16
  %721 = getelementptr inbounds %struct.seqDef_s, ptr %719, i32 0, i32 2
  store i16 %720, ptr %721, align 2
  %722 = load ptr, ptr %49, align 4
  %723 = getelementptr %struct.seqDef_s, ptr %722, i32 1
  store ptr %723, ptr %49, align 4
  %724 = getelementptr i8, ptr %630, i32 %629
  %725 = icmp ugt ptr %724, %10
  br i1 %725, label %901, label %726

726:                                              ; preds = %893, %718
  %727 = phi ptr [ %898, %893 ], [ %723, %718 ]
  %728 = phi ptr [ %899, %893 ], [ %724, %718 ]
  %729 = phi i32 [ %730, %893 ], [ %628, %718 ]
  %730 = phi i32 [ %729, %893 ], [ %627, %718 ]
  %731 = ptrtoint ptr %728 to i32
  %732 = add i32 %730, %41
  %733 = sub i32 %731, %732
  %734 = icmp ult i32 %733, %14
  %735 = select i1 %734, ptr %51, ptr %12
  %736 = getelementptr i8, ptr %735, i32 %733
  %737 = xor i32 %733, -1
  %738 = add i32 %14, %737
  %739 = icmp ugt i32 %738, 2
  br i1 %739, label %740, label %901

740:                                              ; preds = %726
  %741 = load i32, ptr %736, align 1
  %742 = load i32, ptr %728, align 1
  %743 = icmp eq i32 %741, %742
  br i1 %743, label %744, label %901

744:                                              ; preds = %740
  %745 = select i1 %734, ptr %26, ptr %9
  %746 = getelementptr i8, ptr %728, i32 4
  %747 = getelementptr i8, ptr %736, i32 4
  %748 = ptrtoint ptr %745 to i32
  %749 = ptrtoint ptr %747 to i32
  %750 = sub i32 %748, %749
  %751 = getelementptr i8, ptr %746, i32 %750
  %752 = icmp ult ptr %751, %9
  %753 = select i1 %752, ptr %751, ptr %9
  %754 = getelementptr i8, ptr %753, i32 -3
  %755 = icmp ugt ptr %754, %746
  br i1 %755, label %756, label %782

756:                                              ; preds = %744
  %757 = load i32, ptr %747, align 1
  %758 = load i32, ptr %746, align 1
  %759 = xor i32 %758, %757
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %764, label %761

761:                                              ; preds = %756
  %762 = tail call i32 @llvm.cttz.i32(i32 %759, i1 true) #7, !range !8
  %763 = lshr i32 %762, 3
  br label %809

764:                                              ; preds = %770, %756
  %765 = phi ptr [ %768, %770 ], [ %746, %756 ]
  %766 = phi ptr [ %767, %770 ], [ %747, %756 ]
  %767 = getelementptr i8, ptr %766, i32 4
  %768 = getelementptr i8, ptr %765, i32 4
  %769 = icmp ult ptr %768, %754
  br i1 %769, label %770, label %782

770:                                              ; preds = %764
  %771 = load i32, ptr %767, align 1
  %772 = load i32, ptr %768, align 1
  %773 = xor i32 %772, %771
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %764, label %775

775:                                              ; preds = %770
  %776 = tail call i32 @llvm.cttz.i32(i32 %773, i1 true) #7, !range !8
  %777 = lshr i32 %776, 3
  %778 = getelementptr i8, ptr %768, i32 %777
  %779 = ptrtoint ptr %778 to i32
  %780 = ptrtoint ptr %746 to i32
  %781 = sub i32 %779, %780
  br label %809

782:                                              ; preds = %764, %744
  %783 = phi ptr [ %746, %744 ], [ %768, %764 ]
  %784 = phi ptr [ %747, %744 ], [ %767, %764 ]
  %785 = getelementptr i8, ptr %753, i32 -1
  %786 = icmp ult ptr %783, %785
  br i1 %786, label %787, label %794

787:                                              ; preds = %782
  %788 = load i16, ptr %784, align 1
  %789 = load i16, ptr %783, align 1
  %790 = icmp eq i16 %788, %789
  br i1 %790, label %791, label %794

791:                                              ; preds = %787
  %792 = getelementptr i8, ptr %783, i32 2
  %793 = getelementptr i8, ptr %784, i32 2
  br label %794

794:                                              ; preds = %791, %787, %782
  %795 = phi ptr [ %792, %791 ], [ %783, %787 ], [ %783, %782 ]
  %796 = phi ptr [ %793, %791 ], [ %784, %787 ], [ %784, %782 ]
  %797 = icmp ult ptr %795, %753
  br i1 %797, label %798, label %804

798:                                              ; preds = %794
  %799 = load i8, ptr %796, align 1
  %800 = load i8, ptr %795, align 1
  %801 = icmp eq i8 %799, %800
  %802 = zext i1 %801 to i32
  %803 = getelementptr i8, ptr %795, i32 %802
  br label %804

804:                                              ; preds = %798, %794
  %805 = phi ptr [ %795, %794 ], [ %803, %798 ]
  %806 = ptrtoint ptr %805 to i32
  %807 = ptrtoint ptr %746 to i32
  %808 = sub i32 %806, %807
  br label %809

809:                                              ; preds = %804, %775, %761
  %810 = phi i32 [ %808, %804 ], [ %763, %761 ], [ %781, %775 ]
  %811 = getelementptr i8, ptr %747, i32 %810
  %812 = icmp eq ptr %811, %745
  br i1 %812, label %813, label %871

813:                                              ; preds = %809
  %814 = getelementptr i8, ptr %746, i32 %810
  %815 = icmp ugt ptr %42, %814
  br i1 %815, label %816, label %842

816:                                              ; preds = %813
  %817 = load i32, ptr %15, align 1
  %818 = load i32, ptr %814, align 1
  %819 = xor i32 %818, %817
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %824, label %821

821:                                              ; preds = %816
  %822 = tail call i32 @llvm.cttz.i32(i32 %819, i1 true) #7, !range !8
  %823 = lshr i32 %822, 3
  br label %868

824:                                              ; preds = %830, %816
  %825 = phi ptr [ %828, %830 ], [ %814, %816 ]
  %826 = phi ptr [ %827, %830 ], [ %15, %816 ]
  %827 = getelementptr i8, ptr %826, i32 4
  %828 = getelementptr i8, ptr %825, i32 4
  %829 = icmp ult ptr %828, %42
  br i1 %829, label %830, label %842

830:                                              ; preds = %824
  %831 = load i32, ptr %827, align 1
  %832 = load i32, ptr %828, align 1
  %833 = xor i32 %832, %831
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %824, label %835

835:                                              ; preds = %830
  %836 = tail call i32 @llvm.cttz.i32(i32 %833, i1 true) #7, !range !8
  %837 = lshr i32 %836, 3
  %838 = getelementptr i8, ptr %828, i32 %837
  %839 = ptrtoint ptr %838 to i32
  %840 = ptrtoint ptr %814 to i32
  %841 = sub i32 %839, %840
  br label %868

842:                                              ; preds = %824, %813
  %843 = phi ptr [ %814, %813 ], [ %828, %824 ]
  %844 = phi ptr [ %15, %813 ], [ %827, %824 ]
  %845 = icmp ult ptr %843, %43
  br i1 %845, label %846, label %853

846:                                              ; preds = %842
  %847 = load i16, ptr %844, align 1
  %848 = load i16, ptr %843, align 1
  %849 = icmp eq i16 %847, %848
  br i1 %849, label %850, label %853

850:                                              ; preds = %846
  %851 = getelementptr i8, ptr %843, i32 2
  %852 = getelementptr i8, ptr %844, i32 2
  br label %853

853:                                              ; preds = %850, %846, %842
  %854 = phi ptr [ %851, %850 ], [ %843, %846 ], [ %843, %842 ]
  %855 = phi ptr [ %852, %850 ], [ %844, %846 ], [ %844, %842 ]
  %856 = icmp ult ptr %854, %9
  br i1 %856, label %857, label %863

857:                                              ; preds = %853
  %858 = load i8, ptr %855, align 1
  %859 = load i8, ptr %854, align 1
  %860 = icmp eq i8 %858, %859
  %861 = zext i1 %860 to i32
  %862 = getelementptr i8, ptr %854, i32 %861
  br label %863

863:                                              ; preds = %857, %853
  %864 = phi ptr [ %854, %853 ], [ %862, %857 ]
  %865 = ptrtoint ptr %864 to i32
  %866 = ptrtoint ptr %814 to i32
  %867 = sub i32 %865, %866
  br label %868

868:                                              ; preds = %863, %835, %821
  %869 = phi i32 [ %867, %863 ], [ %823, %821 ], [ %841, %835 ]
  %870 = add i32 %869, %810
  br label %871

871:                                              ; preds = %868, %809
  %872 = phi i32 [ %870, %868 ], [ %810, %809 ]
  %873 = add i32 %872, 4
  %874 = add i32 %872, 1
  %875 = icmp ugt ptr %728, %45
  br i1 %875, label %879, label %876

876:                                              ; preds = %871
  %877 = load ptr, ptr %46, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %877, ptr noundef align 1 dereferenceable(16) %728, i32 16, i1 false) #7
  %878 = load ptr, ptr %49, align 4
  br label %879

879:                                              ; preds = %876, %871
  %880 = phi ptr [ %727, %871 ], [ %878, %876 ]
  %881 = getelementptr inbounds %struct.seqDef_s, ptr %880, i32 0, i32 1
  store i16 0, ptr %881, align 4
  %882 = load ptr, ptr %49, align 4
  store i32 1, ptr %882, align 4
  %883 = icmp ugt i32 %874, 65535
  br i1 %883, label %886, label %884

884:                                              ; preds = %879
  %885 = load ptr, ptr %49, align 4
  br label %893

886:                                              ; preds = %879
  store i32 2, ptr %48, align 4
  %887 = load ptr, ptr %49, align 4
  %888 = load ptr, ptr %1, align 4
  %889 = ptrtoint ptr %887 to i32
  %890 = ptrtoint ptr %888 to i32
  %891 = sub i32 %889, %890
  %892 = ashr exact i32 %891, 3
  store i32 %892, ptr %50, align 4
  br label %893

893:                                              ; preds = %886, %884
  %894 = phi ptr [ %885, %884 ], [ %887, %886 ]
  %895 = trunc i32 %874 to i16
  %896 = getelementptr inbounds %struct.seqDef_s, ptr %894, i32 0, i32 2
  store i16 %895, ptr %896, align 2
  %897 = load ptr, ptr %49, align 4
  %898 = getelementptr %struct.seqDef_s, ptr %897, i32 1
  store ptr %898, ptr %49, align 4
  %899 = getelementptr i8, ptr %728, i32 %873
  %900 = icmp ugt ptr %899, %10
  br i1 %900, label %901, label %726

901:                                              ; preds = %893, %740, %726, %718, %210
  %902 = phi i32 [ %56, %210 ], [ %627, %718 ], [ %730, %726 ], [ %730, %740 ], [ %729, %893 ]
  %903 = phi i32 [ %55, %210 ], [ %628, %718 ], [ %729, %726 ], [ %729, %740 ], [ %730, %893 ]
  %904 = phi ptr [ %54, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %905 = phi ptr [ %215, %210 ], [ %724, %718 ], [ %728, %726 ], [ %728, %740 ], [ %899, %893 ]
  %906 = icmp ult ptr %905, %10
  br i1 %906, label %52, label %907

907:                                              ; preds = %901
  %908 = ptrtoint ptr %904 to i32
  br label %909

909:                                              ; preds = %907, %5
  %910 = phi i32 [ %908, %907 ], [ %31, %5 ]
  %911 = phi i32 [ %902, %907 ], [ %18, %5 ]
  %912 = phi i32 [ %903, %907 ], [ %16, %5 ]
  store i32 %912, ptr %2, align 4
  store i32 %911, ptr %17, align 4
  %913 = ptrtoint ptr %9 to i32
  %914 = sub i32 %913, %910
  ret i32 %914
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy_dedicatedDictSearch(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = ptrtoint ptr %3 to i32
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = load i32, ptr %2, align 4
  %17 = getelementptr i32, ptr %2, i32 1
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %20 = load ptr, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 3
  %22 = load i32, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_window_t, ptr %20, i32 0, i32 1
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr i8, ptr %24, i32 %22
  %26 = load ptr, ptr %20, align 4
  %27 = ptrtoint ptr %26 to i32
  %28 = ptrtoint ptr %24 to i32
  %29 = add i32 %14, %28
  %30 = sub i32 %29, %27
  %31 = ptrtoint ptr %15 to i32
  %32 = sub i32 %6, %31
  %33 = ptrtoint ptr %25 to i32
  %34 = sub i32 %33, %27
  %35 = icmp eq i32 %32, %34
  %36 = zext i1 %35 to i32
  %37 = getelementptr i8, ptr %3, i32 %36
  %38 = icmp ult ptr %37, %10
  br i1 %38, label %39, label %729

39:                                               ; preds = %5
  %40 = ptrtoint ptr %12 to i32
  %41 = getelementptr i8, ptr %9, i32 -3
  %42 = getelementptr i8, ptr %9, i32 -1
  %43 = sub i32 0, %30
  %44 = getelementptr i8, ptr %9, i32 -32
  %45 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %46 = ptrtoint ptr %44 to i32
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %49 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %50 = getelementptr i8, ptr %24, i32 %43
  %51 = add i32 %6, %4
  %52 = add i32 %51, -8
  br label %53

53:                                               ; preds = %721, %39
  %54 = phi ptr [ %37, %39 ], [ %725, %721 ]
  %55 = phi ptr [ %3, %39 ], [ %724, %721 ]
  %56 = phi i32 [ %16, %39 ], [ %723, %721 ]
  %57 = phi i32 [ %18, %39 ], [ %722, %721 ]
  %58 = getelementptr i8, ptr %54, i32 1
  %59 = ptrtoint ptr %54 to i32
  %60 = add i32 %56, %40
  %61 = sub i32 1, %60
  %62 = add i32 %61, %59
  %63 = icmp ult i32 %62, %14
  %64 = sub i32 %62, %30
  %65 = getelementptr i8, ptr %24, i32 %64
  %66 = getelementptr i8, ptr %12, i32 %62
  %67 = select i1 %63, ptr %65, ptr %66
  %68 = xor i32 %62, -1
  %69 = add i32 %14, %68
  %70 = icmp ugt i32 %69, 2
  br i1 %70, label %71, label %205

71:                                               ; preds = %53
  %72 = load i32, ptr %67, align 1
  %73 = load i32, ptr %58, align 1
  %74 = icmp eq i32 %72, %73
  br i1 %74, label %75, label %205

75:                                               ; preds = %71
  %76 = select i1 %63, ptr %26, ptr %9
  %77 = getelementptr i8, ptr %54, i32 5
  %78 = getelementptr i8, ptr %67, i32 4
  %79 = ptrtoint ptr %76 to i32
  %80 = ptrtoint ptr %78 to i32
  %81 = sub i32 %79, %80
  %82 = getelementptr i8, ptr %77, i32 %81
  %83 = icmp ult ptr %82, %9
  %84 = select i1 %83, ptr %82, ptr %9
  %85 = getelementptr i8, ptr %84, i32 -3
  %86 = icmp ugt ptr %85, %77
  br i1 %86, label %87, label %113

87:                                               ; preds = %75
  %88 = load i32, ptr %78, align 1
  %89 = load i32, ptr %77, align 1
  %90 = xor i32 %89, %88
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @llvm.cttz.i32(i32 %90, i1 true) #7, !range !8
  %94 = lshr i32 %93, 3
  br label %140

95:                                               ; preds = %101, %87
  %96 = phi ptr [ %99, %101 ], [ %77, %87 ]
  %97 = phi ptr [ %98, %101 ], [ %78, %87 ]
  %98 = getelementptr i8, ptr %97, i32 4
  %99 = getelementptr i8, ptr %96, i32 4
  %100 = icmp ult ptr %99, %85
  br i1 %100, label %101, label %113

101:                                              ; preds = %95
  %102 = load i32, ptr %98, align 1
  %103 = load i32, ptr %99, align 1
  %104 = xor i32 %103, %102
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %95, label %106

106:                                              ; preds = %101
  %107 = tail call i32 @llvm.cttz.i32(i32 %104, i1 true) #7, !range !8
  %108 = lshr i32 %107, 3
  %109 = getelementptr i8, ptr %99, i32 %108
  %110 = ptrtoint ptr %109 to i32
  %111 = ptrtoint ptr %77 to i32
  %112 = sub i32 %110, %111
  br label %140

113:                                              ; preds = %95, %75
  %114 = phi ptr [ %77, %75 ], [ %99, %95 ]
  %115 = phi ptr [ %78, %75 ], [ %98, %95 ]
  %116 = getelementptr i8, ptr %84, i32 -1
  %117 = icmp ult ptr %114, %116
  br i1 %117, label %118, label %125

118:                                              ; preds = %113
  %119 = load i16, ptr %115, align 1
  %120 = load i16, ptr %114, align 1
  %121 = icmp eq i16 %119, %120
  br i1 %121, label %122, label %125

122:                                              ; preds = %118
  %123 = getelementptr i8, ptr %114, i32 2
  %124 = getelementptr i8, ptr %115, i32 2
  br label %125

125:                                              ; preds = %122, %118, %113
  %126 = phi ptr [ %123, %122 ], [ %114, %118 ], [ %114, %113 ]
  %127 = phi ptr [ %124, %122 ], [ %115, %118 ], [ %115, %113 ]
  %128 = icmp ult ptr %126, %84
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = load i8, ptr %127, align 1
  %131 = load i8, ptr %126, align 1
  %132 = icmp eq i8 %130, %131
  %133 = zext i1 %132 to i32
  %134 = getelementptr i8, ptr %126, i32 %133
  br label %135

135:                                              ; preds = %129, %125
  %136 = phi ptr [ %126, %125 ], [ %134, %129 ]
  %137 = ptrtoint ptr %136 to i32
  %138 = ptrtoint ptr %77 to i32
  %139 = sub i32 %137, %138
  br label %140

140:                                              ; preds = %135, %106, %92
  %141 = phi i32 [ %139, %135 ], [ %94, %92 ], [ %112, %106 ]
  %142 = getelementptr i8, ptr %78, i32 %141
  %143 = icmp eq ptr %142, %76
  br i1 %143, label %144, label %202

144:                                              ; preds = %140
  %145 = getelementptr i8, ptr %77, i32 %141
  %146 = icmp ugt ptr %41, %145
  br i1 %146, label %147, label %173

147:                                              ; preds = %144
  %148 = load i32, ptr %15, align 1
  %149 = load i32, ptr %145, align 1
  %150 = xor i32 %149, %148
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %155, label %152

152:                                              ; preds = %147
  %153 = tail call i32 @llvm.cttz.i32(i32 %150, i1 true) #7, !range !8
  %154 = lshr i32 %153, 3
  br label %199

155:                                              ; preds = %161, %147
  %156 = phi ptr [ %159, %161 ], [ %145, %147 ]
  %157 = phi ptr [ %158, %161 ], [ %15, %147 ]
  %158 = getelementptr i8, ptr %157, i32 4
  %159 = getelementptr i8, ptr %156, i32 4
  %160 = icmp ult ptr %159, %41
  br i1 %160, label %161, label %173

161:                                              ; preds = %155
  %162 = load i32, ptr %158, align 1
  %163 = load i32, ptr %159, align 1
  %164 = xor i32 %163, %162
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %155, label %166

166:                                              ; preds = %161
  %167 = tail call i32 @llvm.cttz.i32(i32 %164, i1 true) #7, !range !8
  %168 = lshr i32 %167, 3
  %169 = getelementptr i8, ptr %159, i32 %168
  %170 = ptrtoint ptr %169 to i32
  %171 = ptrtoint ptr %145 to i32
  %172 = sub i32 %170, %171
  br label %199

173:                                              ; preds = %155, %144
  %174 = phi ptr [ %145, %144 ], [ %159, %155 ]
  %175 = phi ptr [ %15, %144 ], [ %158, %155 ]
  %176 = icmp ult ptr %174, %42
  br i1 %176, label %177, label %184

177:                                              ; preds = %173
  %178 = load i16, ptr %175, align 1
  %179 = load i16, ptr %174, align 1
  %180 = icmp eq i16 %178, %179
  br i1 %180, label %181, label %184

181:                                              ; preds = %177
  %182 = getelementptr i8, ptr %174, i32 2
  %183 = getelementptr i8, ptr %175, i32 2
  br label %184

184:                                              ; preds = %181, %177, %173
  %185 = phi ptr [ %182, %181 ], [ %174, %177 ], [ %174, %173 ]
  %186 = phi ptr [ %183, %181 ], [ %175, %177 ], [ %175, %173 ]
  %187 = icmp ult ptr %185, %9
  br i1 %187, label %188, label %194

188:                                              ; preds = %184
  %189 = load i8, ptr %186, align 1
  %190 = load i8, ptr %185, align 1
  %191 = icmp eq i8 %189, %190
  %192 = zext i1 %191 to i32
  %193 = getelementptr i8, ptr %185, i32 %192
  br label %194

194:                                              ; preds = %188, %184
  %195 = phi ptr [ %185, %184 ], [ %193, %188 ]
  %196 = ptrtoint ptr %195 to i32
  %197 = ptrtoint ptr %145 to i32
  %198 = sub i32 %196, %197
  br label %199

199:                                              ; preds = %194, %166, %152
  %200 = phi i32 [ %198, %194 ], [ %154, %152 ], [ %172, %166 ]
  %201 = add i32 %200, %141
  br label %202

202:                                              ; preds = %199, %140
  %203 = phi i32 [ %201, %199 ], [ %141, %140 ]
  %204 = add i32 %203, 4
  br label %205

205:                                              ; preds = %202, %71, %53
  %206 = phi i32 [ %204, %202 ], [ 0, %71 ], [ 0, %53 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %207 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %54, ptr noundef %9, ptr noundef nonnull %7) #7
  %208 = load i32, ptr %7, align 4
  %209 = tail call i32 @llvm.umax.i32(i32 %207, i32 %206) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %210 = icmp ult i32 %209, 4
  br i1 %210, label %211, label %217

211:                                              ; preds = %205
  %212 = ptrtoint ptr %55 to i32
  %213 = sub i32 %59, %212
  %214 = ashr i32 %213, 8
  %215 = add nsw i32 %214, 1
  %216 = getelementptr i8, ptr %54, i32 %215
  br label %721

217:                                              ; preds = %205
  %218 = icmp ugt i32 %207, %206
  %219 = select i1 %218, ptr %54, ptr %58
  %220 = select i1 %218, i32 %208, i32 0
  %221 = icmp ult ptr %54, %10
  br i1 %221, label %222, label %411

222:                                              ; preds = %217
  %223 = getelementptr i8, ptr %54, i32 %52
  %224 = sub i32 0, %59
  %225 = getelementptr i8, ptr %223, i32 %224
  br label %226

226:                                              ; preds = %408, %222
  %227 = phi ptr [ %231, %408 ], [ %54, %222 ]
  %228 = phi ptr [ %231, %408 ], [ %219, %222 ]
  %229 = phi i32 [ %392, %408 ], [ %220, %222 ]
  %230 = phi i32 [ %391, %408 ], [ %209, %222 ]
  %231 = getelementptr i8, ptr %227, i32 1
  %232 = ptrtoint ptr %231 to i32
  %233 = sub i32 %232, %60
  %234 = icmp ult i32 %233, %14
  %235 = sub i32 %233, %30
  %236 = getelementptr i8, ptr %24, i32 %235
  %237 = getelementptr i8, ptr %12, i32 %233
  %238 = select i1 %234, ptr %236, ptr %237
  %239 = xor i32 %233, -1
  %240 = add i32 %14, %239
  %241 = icmp ugt i32 %240, 2
  br i1 %241, label %242, label %387

242:                                              ; preds = %226
  %243 = load i32, ptr %238, align 1
  %244 = load i32, ptr %231, align 1
  %245 = icmp eq i32 %243, %244
  br i1 %245, label %246, label %387

246:                                              ; preds = %242
  %247 = select i1 %234, ptr %26, ptr %9
  %248 = getelementptr i8, ptr %227, i32 5
  %249 = getelementptr i8, ptr %238, i32 4
  %250 = ptrtoint ptr %247 to i32
  %251 = ptrtoint ptr %249 to i32
  %252 = sub i32 %250, %251
  %253 = getelementptr i8, ptr %248, i32 %252
  %254 = icmp ult ptr %253, %9
  %255 = select i1 %254, ptr %253, ptr %9
  %256 = getelementptr i8, ptr %255, i32 -3
  %257 = icmp ugt ptr %256, %248
  br i1 %257, label %258, label %284

258:                                              ; preds = %246
  %259 = load i32, ptr %249, align 1
  %260 = load i32, ptr %248, align 1
  %261 = xor i32 %260, %259
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %258
  %264 = tail call i32 @llvm.cttz.i32(i32 %261, i1 true) #7, !range !8
  %265 = lshr i32 %264, 3
  br label %311

266:                                              ; preds = %272, %258
  %267 = phi ptr [ %270, %272 ], [ %248, %258 ]
  %268 = phi ptr [ %269, %272 ], [ %249, %258 ]
  %269 = getelementptr i8, ptr %268, i32 4
  %270 = getelementptr i8, ptr %267, i32 4
  %271 = icmp ult ptr %270, %256
  br i1 %271, label %272, label %284

272:                                              ; preds = %266
  %273 = load i32, ptr %269, align 1
  %274 = load i32, ptr %270, align 1
  %275 = xor i32 %274, %273
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %266, label %277

277:                                              ; preds = %272
  %278 = tail call i32 @llvm.cttz.i32(i32 %275, i1 true) #7, !range !8
  %279 = lshr i32 %278, 3
  %280 = getelementptr i8, ptr %270, i32 %279
  %281 = ptrtoint ptr %280 to i32
  %282 = ptrtoint ptr %248 to i32
  %283 = sub i32 %281, %282
  br label %311

284:                                              ; preds = %266, %246
  %285 = phi ptr [ %248, %246 ], [ %270, %266 ]
  %286 = phi ptr [ %249, %246 ], [ %269, %266 ]
  %287 = getelementptr i8, ptr %255, i32 -1
  %288 = icmp ult ptr %285, %287
  br i1 %288, label %289, label %296

289:                                              ; preds = %284
  %290 = load i16, ptr %286, align 1
  %291 = load i16, ptr %285, align 1
  %292 = icmp eq i16 %290, %291
  br i1 %292, label %293, label %296

293:                                              ; preds = %289
  %294 = getelementptr i8, ptr %285, i32 2
  %295 = getelementptr i8, ptr %286, i32 2
  br label %296

296:                                              ; preds = %293, %289, %284
  %297 = phi ptr [ %294, %293 ], [ %285, %289 ], [ %285, %284 ]
  %298 = phi ptr [ %295, %293 ], [ %286, %289 ], [ %286, %284 ]
  %299 = icmp ult ptr %297, %255
  br i1 %299, label %300, label %306

300:                                              ; preds = %296
  %301 = load i8, ptr %298, align 1
  %302 = load i8, ptr %297, align 1
  %303 = icmp eq i8 %301, %302
  %304 = zext i1 %303 to i32
  %305 = getelementptr i8, ptr %297, i32 %304
  br label %306

306:                                              ; preds = %300, %296
  %307 = phi ptr [ %297, %296 ], [ %305, %300 ]
  %308 = ptrtoint ptr %307 to i32
  %309 = ptrtoint ptr %248 to i32
  %310 = sub i32 %308, %309
  br label %311

311:                                              ; preds = %306, %277, %263
  %312 = phi i32 [ %310, %306 ], [ %265, %263 ], [ %283, %277 ]
  %313 = getelementptr i8, ptr %249, i32 %312
  %314 = icmp eq ptr %313, %247
  br i1 %314, label %315, label %373

315:                                              ; preds = %311
  %316 = getelementptr i8, ptr %248, i32 %312
  %317 = icmp ugt ptr %41, %316
  br i1 %317, label %318, label %344

318:                                              ; preds = %315
  %319 = load i32, ptr %15, align 1
  %320 = load i32, ptr %316, align 1
  %321 = xor i32 %320, %319
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %326, label %323

323:                                              ; preds = %318
  %324 = tail call i32 @llvm.cttz.i32(i32 %321, i1 true) #7, !range !8
  %325 = lshr i32 %324, 3
  br label %370

326:                                              ; preds = %332, %318
  %327 = phi ptr [ %330, %332 ], [ %316, %318 ]
  %328 = phi ptr [ %329, %332 ], [ %15, %318 ]
  %329 = getelementptr i8, ptr %328, i32 4
  %330 = getelementptr i8, ptr %327, i32 4
  %331 = icmp ult ptr %330, %41
  br i1 %331, label %332, label %344

332:                                              ; preds = %326
  %333 = load i32, ptr %329, align 1
  %334 = load i32, ptr %330, align 1
  %335 = xor i32 %334, %333
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %326, label %337

337:                                              ; preds = %332
  %338 = tail call i32 @llvm.cttz.i32(i32 %335, i1 true) #7, !range !8
  %339 = lshr i32 %338, 3
  %340 = getelementptr i8, ptr %330, i32 %339
  %341 = ptrtoint ptr %340 to i32
  %342 = ptrtoint ptr %316 to i32
  %343 = sub i32 %341, %342
  br label %370

344:                                              ; preds = %326, %315
  %345 = phi ptr [ %316, %315 ], [ %330, %326 ]
  %346 = phi ptr [ %15, %315 ], [ %329, %326 ]
  %347 = icmp ult ptr %345, %42
  br i1 %347, label %348, label %355

348:                                              ; preds = %344
  %349 = load i16, ptr %346, align 1
  %350 = load i16, ptr %345, align 1
  %351 = icmp eq i16 %349, %350
  br i1 %351, label %352, label %355

352:                                              ; preds = %348
  %353 = getelementptr i8, ptr %345, i32 2
  %354 = getelementptr i8, ptr %346, i32 2
  br label %355

355:                                              ; preds = %352, %348, %344
  %356 = phi ptr [ %353, %352 ], [ %345, %348 ], [ %345, %344 ]
  %357 = phi ptr [ %354, %352 ], [ %346, %348 ], [ %346, %344 ]
  %358 = icmp ult ptr %356, %9
  br i1 %358, label %359, label %365

359:                                              ; preds = %355
  %360 = load i8, ptr %357, align 1
  %361 = load i8, ptr %356, align 1
  %362 = icmp eq i8 %360, %361
  %363 = zext i1 %362 to i32
  %364 = getelementptr i8, ptr %356, i32 %363
  br label %365

365:                                              ; preds = %359, %355
  %366 = phi ptr [ %356, %355 ], [ %364, %359 ]
  %367 = ptrtoint ptr %366 to i32
  %368 = ptrtoint ptr %316 to i32
  %369 = sub i32 %367, %368
  br label %370

370:                                              ; preds = %365, %337, %323
  %371 = phi i32 [ %369, %365 ], [ %325, %323 ], [ %343, %337 ]
  %372 = add i32 %371, %312
  br label %373

373:                                              ; preds = %370, %311
  %374 = phi i32 [ %372, %370 ], [ %312, %311 ]
  %375 = add i32 %374, 4
  %376 = icmp ult i32 %374, -4
  br i1 %376, label %377, label %387

377:                                              ; preds = %373
  %378 = add i32 %229, 1
  %379 = tail call i32 @llvm.ctlz.i32(i32 %378, i1 false) #7, !range !8
  %380 = xor i32 %379, -32
  %381 = mul i32 %230, 3
  %382 = add i32 %381, 2
  %383 = add i32 %382, %380
  %384 = mul i32 %375, 3
  %385 = icmp sgt i32 %384, %383
  br i1 %385, label %386, label %387

386:                                              ; preds = %377
  br label %387

387:                                              ; preds = %386, %377, %373, %242, %226
  %388 = phi i32 [ %230, %242 ], [ %230, %226 ], [ %375, %386 ], [ %230, %377 ], [ %230, %373 ]
  %389 = phi i32 [ %229, %242 ], [ %229, %226 ], [ 0, %386 ], [ %229, %377 ], [ %229, %373 ]
  %390 = phi ptr [ %228, %242 ], [ %228, %226 ], [ %231, %386 ], [ %228, %377 ], [ %228, %373 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %391 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %231, ptr noundef %9, ptr noundef nonnull %8) #7
  %392 = load i32, ptr %8, align 4
  %393 = icmp ugt i32 %391, 3
  br i1 %393, label %394, label %410

394:                                              ; preds = %387
  %395 = add i32 %389, 1
  %396 = tail call i32 @llvm.ctlz.i32(i32 %395, i1 false) #7, !range !8
  %397 = xor i32 %396, -32
  %398 = add i32 %392, 1
  %399 = tail call i32 @llvm.ctlz.i32(i32 %398, i1 false) #7, !range !8
  %400 = xor i32 %399, -32
  %401 = shl i32 %388, 2
  %402 = add i32 %401, 5
  %403 = add i32 %402, %397
  %404 = shl i32 %391, 2
  %405 = or i32 %404, 1
  %406 = add i32 %405, %400
  %407 = icmp sgt i32 %406, %403
  br i1 %407, label %408, label %410

408:                                              ; preds = %394
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  %409 = icmp eq ptr %231, %225
  br i1 %409, label %411, label %226

410:                                              ; preds = %394, %387
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %411

411:                                              ; preds = %410, %408, %217
  %412 = phi i32 [ %209, %217 ], [ %388, %410 ], [ %391, %408 ]
  %413 = phi i32 [ %220, %217 ], [ %389, %410 ], [ %392, %408 ]
  %414 = phi ptr [ %219, %217 ], [ %390, %410 ], [ %225, %408 ]
  %415 = icmp eq i32 %413, 0
  br i1 %415, label %446, label %416

416:                                              ; preds = %411
  %417 = ptrtoint ptr %414 to i32
  %418 = add i32 %413, %40
  %419 = sub i32 2, %418
  %420 = add i32 %419, %417
  %421 = icmp ult i32 %420, %14
  %422 = select i1 %421, ptr %25, ptr %15
  %423 = select i1 %421, ptr %50, ptr %12
  %424 = getelementptr i8, ptr %423, i32 %420
  %425 = icmp ugt ptr %414, %55
  %426 = icmp ugt ptr %424, %422
  %427 = select i1 %425, i1 %426, i1 false
  br i1 %427, label %428, label %442

428:                                              ; preds = %437, %416
  %429 = phi ptr [ %434, %437 ], [ %424, %416 ]
  %430 = phi ptr [ %432, %437 ], [ %414, %416 ]
  %431 = phi i32 [ %438, %437 ], [ %412, %416 ]
  %432 = getelementptr i8, ptr %430, i32 -1
  %433 = load i8, ptr %432, align 1
  %434 = getelementptr i8, ptr %429, i32 -1
  %435 = load i8, ptr %434, align 1
  %436 = icmp eq i8 %433, %435
  br i1 %436, label %437, label %442

437:                                              ; preds = %428
  %438 = add i32 %431, 1
  %439 = icmp ugt ptr %432, %55
  %440 = icmp ugt ptr %434, %422
  %441 = select i1 %439, i1 %440, i1 false
  br i1 %441, label %428, label %442

442:                                              ; preds = %437, %428, %416
  %443 = phi i32 [ %412, %416 ], [ %431, %428 ], [ %438, %437 ]
  %444 = phi ptr [ %414, %416 ], [ %430, %428 ], [ %432, %437 ]
  %445 = add i32 %413, -2
  br label %446

446:                                              ; preds = %442, %411
  %447 = phi i32 [ %56, %442 ], [ %57, %411 ]
  %448 = phi i32 [ %445, %442 ], [ %56, %411 ]
  %449 = phi i32 [ %443, %442 ], [ %412, %411 ]
  %450 = phi ptr [ %444, %442 ], [ %414, %411 ]
  %451 = ptrtoint ptr %450 to i32
  %452 = ptrtoint ptr %55 to i32
  %453 = sub i32 %451, %452
  %454 = add i32 %449, -3
  %455 = getelementptr i8, ptr %55, i32 %453
  %456 = icmp ugt ptr %455, %44
  %457 = load ptr, ptr %45, align 4
  br i1 %456, label %479, label %458

458:                                              ; preds = %446
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %457, ptr noundef align 1 dereferenceable(16) %55, i32 16, i1 false) #7
  %459 = icmp ugt i32 %453, 16
  %460 = load ptr, ptr %45, align 4
  br i1 %459, label %463, label %461

461:                                              ; preds = %458
  %462 = getelementptr i8, ptr %460, i32 %453
  store ptr %462, ptr %45, align 4
  br label %522

463:                                              ; preds = %458
  %464 = getelementptr i8, ptr %460, i32 16
  %465 = getelementptr i8, ptr %55, i32 16
  %466 = add i32 %453, -16
  %467 = getelementptr i8, ptr %460, i32 %453
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %464, ptr noundef align 1 dereferenceable(16) %465, i32 16, i1 false) #7
  %468 = icmp slt i32 %466, 17
  br i1 %468, label %511, label %469

469:                                              ; preds = %463
  %470 = getelementptr i8, ptr %460, i32 32
  br label %471

471:                                              ; preds = %471, %469
  %472 = phi ptr [ %465, %469 ], [ %476, %471 ]
  %473 = phi ptr [ %470, %469 ], [ %477, %471 ]
  %474 = getelementptr i8, ptr %472, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %473, ptr noundef align 1 dereferenceable(16) %474, i32 16, i1 false) #7
  %475 = getelementptr i8, ptr %473, i32 16
  %476 = getelementptr i8, ptr %472, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %475, ptr noundef align 1 dereferenceable(16) %476, i32 16, i1 false) #7
  %477 = getelementptr i8, ptr %473, i32 32
  %478 = icmp ult ptr %477, %467
  br i1 %478, label %471, label %511

479:                                              ; preds = %446
  %480 = ptrtoint ptr %455 to i32
  %481 = icmp ult ptr %44, %55
  br i1 %481, label %496, label %482

482:                                              ; preds = %479
  %483 = sub i32 %46, %452
  %484 = getelementptr i8, ptr %457, i32 %483
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %457, ptr noundef align 1 dereferenceable(16) %55, i32 16, i1 false) #7
  %485 = icmp slt i32 %483, 17
  br i1 %485, label %496, label %486

486:                                              ; preds = %482
  %487 = getelementptr i8, ptr %457, i32 16
  br label %488

488:                                              ; preds = %488, %486
  %489 = phi ptr [ %55, %486 ], [ %493, %488 ]
  %490 = phi ptr [ %487, %486 ], [ %494, %488 ]
  %491 = getelementptr i8, ptr %489, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %490, ptr noundef align 1 dereferenceable(16) %491, i32 16, i1 false) #7
  %492 = getelementptr i8, ptr %490, i32 16
  %493 = getelementptr i8, ptr %489, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %492, ptr noundef align 1 dereferenceable(16) %493, i32 16, i1 false) #7
  %494 = getelementptr i8, ptr %490, i32 32
  %495 = icmp ult ptr %494, %484
  br i1 %495, label %488, label %496

496:                                              ; preds = %488, %482, %479
  %497 = phi ptr [ %44, %482 ], [ %55, %479 ], [ %44, %488 ]
  %498 = phi ptr [ %484, %482 ], [ %457, %479 ], [ %484, %488 ]
  %499 = icmp ult ptr %497, %455
  br i1 %499, label %500, label %511

500:                                              ; preds = %496
  %501 = ptrtoint ptr %497 to i32
  %502 = sub i32 %480, %501
  %503 = getelementptr i8, ptr %497, i32 %502
  br label %504

504:                                              ; preds = %504, %500
  %505 = phi ptr [ %509, %504 ], [ %498, %500 ]
  %506 = phi ptr [ %507, %504 ], [ %497, %500 ]
  %507 = getelementptr i8, ptr %506, i32 1
  %508 = load i8, ptr %506, align 1
  %509 = getelementptr i8, ptr %505, i32 1
  store i8 %508, ptr %505, align 1
  %510 = icmp eq ptr %507, %503
  br i1 %510, label %511, label %504

511:                                              ; preds = %504, %496, %471, %463
  %512 = load ptr, ptr %45, align 4
  %513 = getelementptr i8, ptr %512, i32 %453
  store ptr %513, ptr %45, align 4
  %514 = icmp ugt i32 %453, 65535
  br i1 %514, label %515, label %522

515:                                              ; preds = %511
  store i32 1, ptr %47, align 4
  %516 = load ptr, ptr %48, align 4
  %517 = load ptr, ptr %1, align 4
  %518 = ptrtoint ptr %516 to i32
  %519 = ptrtoint ptr %517 to i32
  %520 = sub i32 %518, %519
  %521 = ashr exact i32 %520, 3
  store i32 %521, ptr %49, align 4
  br label %522

522:                                              ; preds = %515, %511, %461
  %523 = trunc i32 %453 to i16
  %524 = load ptr, ptr %48, align 4
  %525 = getelementptr inbounds %struct.seqDef_s, ptr %524, i32 0, i32 1
  store i16 %523, ptr %525, align 4
  %526 = add i32 %413, 1
  %527 = load ptr, ptr %48, align 4
  store i32 %526, ptr %527, align 4
  %528 = icmp ugt i32 %454, 65535
  br i1 %528, label %531, label %529

529:                                              ; preds = %522
  %530 = load ptr, ptr %48, align 4
  br label %538

531:                                              ; preds = %522
  store i32 2, ptr %47, align 4
  %532 = load ptr, ptr %48, align 4
  %533 = load ptr, ptr %1, align 4
  %534 = ptrtoint ptr %532 to i32
  %535 = ptrtoint ptr %533 to i32
  %536 = sub i32 %534, %535
  %537 = ashr exact i32 %536, 3
  store i32 %537, ptr %49, align 4
  br label %538

538:                                              ; preds = %531, %529
  %539 = phi ptr [ %530, %529 ], [ %532, %531 ]
  %540 = trunc i32 %454 to i16
  %541 = getelementptr inbounds %struct.seqDef_s, ptr %539, i32 0, i32 2
  store i16 %540, ptr %541, align 2
  %542 = load ptr, ptr %48, align 4
  %543 = getelementptr %struct.seqDef_s, ptr %542, i32 1
  store ptr %543, ptr %48, align 4
  %544 = getelementptr i8, ptr %450, i32 %449
  %545 = icmp ugt ptr %544, %10
  br i1 %545, label %721, label %546

546:                                              ; preds = %713, %538
  %547 = phi ptr [ %718, %713 ], [ %543, %538 ]
  %548 = phi ptr [ %719, %713 ], [ %544, %538 ]
  %549 = phi i32 [ %550, %713 ], [ %448, %538 ]
  %550 = phi i32 [ %549, %713 ], [ %447, %538 ]
  %551 = ptrtoint ptr %548 to i32
  %552 = add i32 %550, %40
  %553 = sub i32 %551, %552
  %554 = icmp ult i32 %553, %14
  %555 = select i1 %554, ptr %50, ptr %12
  %556 = getelementptr i8, ptr %555, i32 %553
  %557 = xor i32 %553, -1
  %558 = add i32 %14, %557
  %559 = icmp ugt i32 %558, 2
  br i1 %559, label %560, label %721

560:                                              ; preds = %546
  %561 = load i32, ptr %556, align 1
  %562 = load i32, ptr %548, align 1
  %563 = icmp eq i32 %561, %562
  br i1 %563, label %564, label %721

564:                                              ; preds = %560
  %565 = select i1 %554, ptr %26, ptr %9
  %566 = getelementptr i8, ptr %548, i32 4
  %567 = getelementptr i8, ptr %556, i32 4
  %568 = ptrtoint ptr %565 to i32
  %569 = ptrtoint ptr %567 to i32
  %570 = sub i32 %568, %569
  %571 = getelementptr i8, ptr %566, i32 %570
  %572 = icmp ult ptr %571, %9
  %573 = select i1 %572, ptr %571, ptr %9
  %574 = getelementptr i8, ptr %573, i32 -3
  %575 = icmp ugt ptr %574, %566
  br i1 %575, label %576, label %602

576:                                              ; preds = %564
  %577 = load i32, ptr %567, align 1
  %578 = load i32, ptr %566, align 1
  %579 = xor i32 %578, %577
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %584, label %581

581:                                              ; preds = %576
  %582 = tail call i32 @llvm.cttz.i32(i32 %579, i1 true) #7, !range !8
  %583 = lshr i32 %582, 3
  br label %629

584:                                              ; preds = %590, %576
  %585 = phi ptr [ %588, %590 ], [ %566, %576 ]
  %586 = phi ptr [ %587, %590 ], [ %567, %576 ]
  %587 = getelementptr i8, ptr %586, i32 4
  %588 = getelementptr i8, ptr %585, i32 4
  %589 = icmp ult ptr %588, %574
  br i1 %589, label %590, label %602

590:                                              ; preds = %584
  %591 = load i32, ptr %587, align 1
  %592 = load i32, ptr %588, align 1
  %593 = xor i32 %592, %591
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %584, label %595

595:                                              ; preds = %590
  %596 = tail call i32 @llvm.cttz.i32(i32 %593, i1 true) #7, !range !8
  %597 = lshr i32 %596, 3
  %598 = getelementptr i8, ptr %588, i32 %597
  %599 = ptrtoint ptr %598 to i32
  %600 = ptrtoint ptr %566 to i32
  %601 = sub i32 %599, %600
  br label %629

602:                                              ; preds = %584, %564
  %603 = phi ptr [ %566, %564 ], [ %588, %584 ]
  %604 = phi ptr [ %567, %564 ], [ %587, %584 ]
  %605 = getelementptr i8, ptr %573, i32 -1
  %606 = icmp ult ptr %603, %605
  br i1 %606, label %607, label %614

607:                                              ; preds = %602
  %608 = load i16, ptr %604, align 1
  %609 = load i16, ptr %603, align 1
  %610 = icmp eq i16 %608, %609
  br i1 %610, label %611, label %614

611:                                              ; preds = %607
  %612 = getelementptr i8, ptr %603, i32 2
  %613 = getelementptr i8, ptr %604, i32 2
  br label %614

614:                                              ; preds = %611, %607, %602
  %615 = phi ptr [ %612, %611 ], [ %603, %607 ], [ %603, %602 ]
  %616 = phi ptr [ %613, %611 ], [ %604, %607 ], [ %604, %602 ]
  %617 = icmp ult ptr %615, %573
  br i1 %617, label %618, label %624

618:                                              ; preds = %614
  %619 = load i8, ptr %616, align 1
  %620 = load i8, ptr %615, align 1
  %621 = icmp eq i8 %619, %620
  %622 = zext i1 %621 to i32
  %623 = getelementptr i8, ptr %615, i32 %622
  br label %624

624:                                              ; preds = %618, %614
  %625 = phi ptr [ %615, %614 ], [ %623, %618 ]
  %626 = ptrtoint ptr %625 to i32
  %627 = ptrtoint ptr %566 to i32
  %628 = sub i32 %626, %627
  br label %629

629:                                              ; preds = %624, %595, %581
  %630 = phi i32 [ %628, %624 ], [ %583, %581 ], [ %601, %595 ]
  %631 = getelementptr i8, ptr %567, i32 %630
  %632 = icmp eq ptr %631, %565
  br i1 %632, label %633, label %691

633:                                              ; preds = %629
  %634 = getelementptr i8, ptr %566, i32 %630
  %635 = icmp ugt ptr %41, %634
  br i1 %635, label %636, label %662

636:                                              ; preds = %633
  %637 = load i32, ptr %15, align 1
  %638 = load i32, ptr %634, align 1
  %639 = xor i32 %638, %637
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %644, label %641

641:                                              ; preds = %636
  %642 = tail call i32 @llvm.cttz.i32(i32 %639, i1 true) #7, !range !8
  %643 = lshr i32 %642, 3
  br label %688

644:                                              ; preds = %650, %636
  %645 = phi ptr [ %648, %650 ], [ %634, %636 ]
  %646 = phi ptr [ %647, %650 ], [ %15, %636 ]
  %647 = getelementptr i8, ptr %646, i32 4
  %648 = getelementptr i8, ptr %645, i32 4
  %649 = icmp ult ptr %648, %41
  br i1 %649, label %650, label %662

650:                                              ; preds = %644
  %651 = load i32, ptr %647, align 1
  %652 = load i32, ptr %648, align 1
  %653 = xor i32 %652, %651
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %644, label %655

655:                                              ; preds = %650
  %656 = tail call i32 @llvm.cttz.i32(i32 %653, i1 true) #7, !range !8
  %657 = lshr i32 %656, 3
  %658 = getelementptr i8, ptr %648, i32 %657
  %659 = ptrtoint ptr %658 to i32
  %660 = ptrtoint ptr %634 to i32
  %661 = sub i32 %659, %660
  br label %688

662:                                              ; preds = %644, %633
  %663 = phi ptr [ %634, %633 ], [ %648, %644 ]
  %664 = phi ptr [ %15, %633 ], [ %647, %644 ]
  %665 = icmp ult ptr %663, %42
  br i1 %665, label %666, label %673

666:                                              ; preds = %662
  %667 = load i16, ptr %664, align 1
  %668 = load i16, ptr %663, align 1
  %669 = icmp eq i16 %667, %668
  br i1 %669, label %670, label %673

670:                                              ; preds = %666
  %671 = getelementptr i8, ptr %663, i32 2
  %672 = getelementptr i8, ptr %664, i32 2
  br label %673

673:                                              ; preds = %670, %666, %662
  %674 = phi ptr [ %671, %670 ], [ %663, %666 ], [ %663, %662 ]
  %675 = phi ptr [ %672, %670 ], [ %664, %666 ], [ %664, %662 ]
  %676 = icmp ult ptr %674, %9
  br i1 %676, label %677, label %683

677:                                              ; preds = %673
  %678 = load i8, ptr %675, align 1
  %679 = load i8, ptr %674, align 1
  %680 = icmp eq i8 %678, %679
  %681 = zext i1 %680 to i32
  %682 = getelementptr i8, ptr %674, i32 %681
  br label %683

683:                                              ; preds = %677, %673
  %684 = phi ptr [ %674, %673 ], [ %682, %677 ]
  %685 = ptrtoint ptr %684 to i32
  %686 = ptrtoint ptr %634 to i32
  %687 = sub i32 %685, %686
  br label %688

688:                                              ; preds = %683, %655, %641
  %689 = phi i32 [ %687, %683 ], [ %643, %641 ], [ %661, %655 ]
  %690 = add i32 %689, %630
  br label %691

691:                                              ; preds = %688, %629
  %692 = phi i32 [ %690, %688 ], [ %630, %629 ]
  %693 = add i32 %692, 4
  %694 = add i32 %692, 1
  %695 = icmp ugt ptr %548, %44
  br i1 %695, label %699, label %696

696:                                              ; preds = %691
  %697 = load ptr, ptr %45, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %697, ptr noundef align 1 dereferenceable(16) %548, i32 16, i1 false) #7
  %698 = load ptr, ptr %48, align 4
  br label %699

699:                                              ; preds = %696, %691
  %700 = phi ptr [ %547, %691 ], [ %698, %696 ]
  %701 = getelementptr inbounds %struct.seqDef_s, ptr %700, i32 0, i32 1
  store i16 0, ptr %701, align 4
  %702 = load ptr, ptr %48, align 4
  store i32 1, ptr %702, align 4
  %703 = icmp ugt i32 %694, 65535
  br i1 %703, label %706, label %704

704:                                              ; preds = %699
  %705 = load ptr, ptr %48, align 4
  br label %713

706:                                              ; preds = %699
  store i32 2, ptr %47, align 4
  %707 = load ptr, ptr %48, align 4
  %708 = load ptr, ptr %1, align 4
  %709 = ptrtoint ptr %707 to i32
  %710 = ptrtoint ptr %708 to i32
  %711 = sub i32 %709, %710
  %712 = ashr exact i32 %711, 3
  store i32 %712, ptr %49, align 4
  br label %713

713:                                              ; preds = %706, %704
  %714 = phi ptr [ %705, %704 ], [ %707, %706 ]
  %715 = trunc i32 %694 to i16
  %716 = getelementptr inbounds %struct.seqDef_s, ptr %714, i32 0, i32 2
  store i16 %715, ptr %716, align 2
  %717 = load ptr, ptr %48, align 4
  %718 = getelementptr %struct.seqDef_s, ptr %717, i32 1
  store ptr %718, ptr %48, align 4
  %719 = getelementptr i8, ptr %548, i32 %693
  %720 = icmp ugt ptr %719, %10
  br i1 %720, label %721, label %546

721:                                              ; preds = %713, %560, %546, %538, %211
  %722 = phi i32 [ %57, %211 ], [ %447, %538 ], [ %550, %546 ], [ %550, %560 ], [ %549, %713 ]
  %723 = phi i32 [ %56, %211 ], [ %448, %538 ], [ %549, %546 ], [ %549, %560 ], [ %550, %713 ]
  %724 = phi ptr [ %55, %211 ], [ %544, %538 ], [ %548, %546 ], [ %548, %560 ], [ %719, %713 ]
  %725 = phi ptr [ %216, %211 ], [ %544, %538 ], [ %548, %546 ], [ %548, %560 ], [ %719, %713 ]
  %726 = icmp ult ptr %725, %10
  br i1 %726, label %53, label %727

727:                                              ; preds = %721
  %728 = ptrtoint ptr %724 to i32
  br label %729

729:                                              ; preds = %727, %5
  %730 = phi i32 [ %728, %727 ], [ %6, %5 ]
  %731 = phi i32 [ %722, %727 ], [ %18, %5 ]
  %732 = phi i32 [ %723, %727 ], [ %16, %5 ]
  store i32 %732, ptr %2, align 4
  store i32 %731, ptr %17, align 4
  %733 = ptrtoint ptr %9 to i32
  %734 = sub i32 %733, %730
  ret i32 %734
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_greedy_dedicatedDictSearch(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = getelementptr i8, ptr %3, i32 %4
  %8 = getelementptr i8, ptr %7, i32 -8
  %9 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %12 = load i32, ptr %11, align 4
  %13 = getelementptr i8, ptr %10, i32 %12
  %14 = load i32, ptr %2, align 4
  %15 = getelementptr i32, ptr %2, i32 1
  %16 = load i32, ptr %15, align 4
  %17 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %18 = load ptr, ptr %17, align 4
  %19 = getelementptr inbounds %struct.ZSTD_window_t, ptr %18, i32 0, i32 3
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr inbounds %struct.ZSTD_window_t, ptr %18, i32 0, i32 1
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr i8, ptr %22, i32 %20
  %24 = load ptr, ptr %18, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = ptrtoint ptr %22 to i32
  %27 = add i32 %12, %26
  %28 = sub i32 %27, %25
  %29 = ptrtoint ptr %3 to i32
  %30 = ptrtoint ptr %13 to i32
  %31 = sub i32 %29, %30
  %32 = ptrtoint ptr %23 to i32
  %33 = sub i32 %32, %25
  %34 = icmp eq i32 %31, %33
  %35 = zext i1 %34 to i32
  %36 = getelementptr i8, ptr %3, i32 %35
  %37 = icmp ult ptr %36, %8
  br i1 %37, label %38, label %527

38:                                               ; preds = %5
  %39 = ptrtoint ptr %10 to i32
  %40 = getelementptr i8, ptr %7, i32 -3
  %41 = getelementptr i8, ptr %7, i32 -1
  %42 = sub i32 0, %28
  %43 = getelementptr i8, ptr %7, i32 -32
  %44 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %45 = ptrtoint ptr %43 to i32
  %46 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %47 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %48 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %49 = getelementptr i8, ptr %22, i32 %42
  br label %50

50:                                               ; preds = %519, %38
  %51 = phi ptr [ %36, %38 ], [ %523, %519 ]
  %52 = phi ptr [ %3, %38 ], [ %522, %519 ]
  %53 = phi i32 [ %14, %38 ], [ %521, %519 ]
  %54 = phi i32 [ %16, %38 ], [ %520, %519 ]
  %55 = getelementptr i8, ptr %51, i32 1
  %56 = ptrtoint ptr %51 to i32
  %57 = add i32 %56, 1
  %58 = add i32 %53, %39
  %59 = sub i32 %57, %58
  %60 = icmp ult i32 %59, %12
  %61 = sub i32 %59, %28
  %62 = getelementptr i8, ptr %22, i32 %61
  %63 = getelementptr i8, ptr %10, i32 %59
  %64 = select i1 %60, ptr %62, ptr %63
  %65 = xor i32 %59, -1
  %66 = add i32 %12, %65
  %67 = icmp ugt i32 %66, 2
  br i1 %67, label %68, label %202

68:                                               ; preds = %50
  %69 = load i32, ptr %64, align 1
  %70 = load i32, ptr %55, align 1
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %72, label %202

72:                                               ; preds = %68
  %73 = select i1 %60, ptr %24, ptr %7
  %74 = getelementptr i8, ptr %51, i32 5
  %75 = getelementptr i8, ptr %64, i32 4
  %76 = ptrtoint ptr %73 to i32
  %77 = ptrtoint ptr %75 to i32
  %78 = sub i32 %76, %77
  %79 = getelementptr i8, ptr %74, i32 %78
  %80 = icmp ult ptr %79, %7
  %81 = select i1 %80, ptr %79, ptr %7
  %82 = getelementptr i8, ptr %81, i32 -3
  %83 = icmp ugt ptr %82, %74
  br i1 %83, label %84, label %110

84:                                               ; preds = %72
  %85 = load i32, ptr %75, align 1
  %86 = load i32, ptr %74, align 1
  %87 = xor i32 %86, %85
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = tail call i32 @llvm.cttz.i32(i32 %87, i1 true) #7, !range !8
  %91 = lshr i32 %90, 3
  br label %137

92:                                               ; preds = %98, %84
  %93 = phi ptr [ %96, %98 ], [ %74, %84 ]
  %94 = phi ptr [ %95, %98 ], [ %75, %84 ]
  %95 = getelementptr i8, ptr %94, i32 4
  %96 = getelementptr i8, ptr %93, i32 4
  %97 = icmp ult ptr %96, %82
  br i1 %97, label %98, label %110

98:                                               ; preds = %92
  %99 = load i32, ptr %95, align 1
  %100 = load i32, ptr %96, align 1
  %101 = xor i32 %100, %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %92, label %103

103:                                              ; preds = %98
  %104 = tail call i32 @llvm.cttz.i32(i32 %101, i1 true) #7, !range !8
  %105 = lshr i32 %104, 3
  %106 = getelementptr i8, ptr %96, i32 %105
  %107 = ptrtoint ptr %106 to i32
  %108 = ptrtoint ptr %74 to i32
  %109 = sub i32 %107, %108
  br label %137

110:                                              ; preds = %92, %72
  %111 = phi ptr [ %74, %72 ], [ %96, %92 ]
  %112 = phi ptr [ %75, %72 ], [ %95, %92 ]
  %113 = getelementptr i8, ptr %81, i32 -1
  %114 = icmp ult ptr %111, %113
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = load i16, ptr %112, align 1
  %117 = load i16, ptr %111, align 1
  %118 = icmp eq i16 %116, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = getelementptr i8, ptr %111, i32 2
  %121 = getelementptr i8, ptr %112, i32 2
  br label %122

122:                                              ; preds = %119, %115, %110
  %123 = phi ptr [ %120, %119 ], [ %111, %115 ], [ %111, %110 ]
  %124 = phi ptr [ %121, %119 ], [ %112, %115 ], [ %112, %110 ]
  %125 = icmp ult ptr %123, %81
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = load i8, ptr %124, align 1
  %128 = load i8, ptr %123, align 1
  %129 = icmp eq i8 %127, %128
  %130 = zext i1 %129 to i32
  %131 = getelementptr i8, ptr %123, i32 %130
  br label %132

132:                                              ; preds = %126, %122
  %133 = phi ptr [ %123, %122 ], [ %131, %126 ]
  %134 = ptrtoint ptr %133 to i32
  %135 = ptrtoint ptr %74 to i32
  %136 = sub i32 %134, %135
  br label %137

137:                                              ; preds = %132, %103, %89
  %138 = phi i32 [ %136, %132 ], [ %91, %89 ], [ %109, %103 ]
  %139 = getelementptr i8, ptr %75, i32 %138
  %140 = icmp eq ptr %139, %73
  br i1 %140, label %141, label %199

141:                                              ; preds = %137
  %142 = getelementptr i8, ptr %74, i32 %138
  %143 = icmp ugt ptr %40, %142
  br i1 %143, label %144, label %170

144:                                              ; preds = %141
  %145 = load i32, ptr %13, align 1
  %146 = load i32, ptr %142, align 1
  %147 = xor i32 %146, %145
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %152, label %149

149:                                              ; preds = %144
  %150 = tail call i32 @llvm.cttz.i32(i32 %147, i1 true) #7, !range !8
  %151 = lshr i32 %150, 3
  br label %196

152:                                              ; preds = %158, %144
  %153 = phi ptr [ %156, %158 ], [ %142, %144 ]
  %154 = phi ptr [ %155, %158 ], [ %13, %144 ]
  %155 = getelementptr i8, ptr %154, i32 4
  %156 = getelementptr i8, ptr %153, i32 4
  %157 = icmp ult ptr %156, %40
  br i1 %157, label %158, label %170

158:                                              ; preds = %152
  %159 = load i32, ptr %155, align 1
  %160 = load i32, ptr %156, align 1
  %161 = xor i32 %160, %159
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %152, label %163

163:                                              ; preds = %158
  %164 = tail call i32 @llvm.cttz.i32(i32 %161, i1 true) #7, !range !8
  %165 = lshr i32 %164, 3
  %166 = getelementptr i8, ptr %156, i32 %165
  %167 = ptrtoint ptr %166 to i32
  %168 = ptrtoint ptr %142 to i32
  %169 = sub i32 %167, %168
  br label %196

170:                                              ; preds = %152, %141
  %171 = phi ptr [ %142, %141 ], [ %156, %152 ]
  %172 = phi ptr [ %13, %141 ], [ %155, %152 ]
  %173 = icmp ult ptr %171, %41
  br i1 %173, label %174, label %181

174:                                              ; preds = %170
  %175 = load i16, ptr %172, align 1
  %176 = load i16, ptr %171, align 1
  %177 = icmp eq i16 %175, %176
  br i1 %177, label %178, label %181

178:                                              ; preds = %174
  %179 = getelementptr i8, ptr %171, i32 2
  %180 = getelementptr i8, ptr %172, i32 2
  br label %181

181:                                              ; preds = %178, %174, %170
  %182 = phi ptr [ %179, %178 ], [ %171, %174 ], [ %171, %170 ]
  %183 = phi ptr [ %180, %178 ], [ %172, %174 ], [ %172, %170 ]
  %184 = icmp ult ptr %182, %7
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = load i8, ptr %183, align 1
  %187 = load i8, ptr %182, align 1
  %188 = icmp eq i8 %186, %187
  %189 = zext i1 %188 to i32
  %190 = getelementptr i8, ptr %182, i32 %189
  br label %191

191:                                              ; preds = %185, %181
  %192 = phi ptr [ %182, %181 ], [ %190, %185 ]
  %193 = ptrtoint ptr %192 to i32
  %194 = ptrtoint ptr %142 to i32
  %195 = sub i32 %193, %194
  br label %196

196:                                              ; preds = %191, %163, %149
  %197 = phi i32 [ %195, %191 ], [ %151, %149 ], [ %169, %163 ]
  %198 = add i32 %197, %138
  br label %199

199:                                              ; preds = %196, %137
  %200 = phi i32 [ %198, %196 ], [ %138, %137 ]
  %201 = add i32 %200, 4
  br label %243

202:                                              ; preds = %68, %50
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %203 = call fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %51, ptr noundef %7, ptr noundef nonnull %6) #7
  %204 = load i32, ptr %6, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %205 = icmp ult i32 %203, 4
  br i1 %205, label %206, label %212

206:                                              ; preds = %202
  %207 = ptrtoint ptr %52 to i32
  %208 = sub i32 %56, %207
  %209 = ashr i32 %208, 8
  %210 = add nsw i32 %209, 1
  %211 = getelementptr i8, ptr %51, i32 %210
  br label %519

212:                                              ; preds = %202
  %213 = icmp eq i32 %204, 0
  br i1 %213, label %243, label %214

214:                                              ; preds = %212
  %215 = add i32 %56, 2
  %216 = add i32 %204, %39
  %217 = sub i32 %215, %216
  %218 = icmp ult i32 %217, %12
  %219 = select i1 %218, ptr %23, ptr %13
  %220 = select i1 %218, ptr %49, ptr %10
  %221 = getelementptr i8, ptr %220, i32 %217
  %222 = icmp ugt ptr %51, %52
  %223 = icmp ugt ptr %221, %219
  %224 = select i1 %222, i1 %223, i1 false
  br i1 %224, label %225, label %239

225:                                              ; preds = %234, %214
  %226 = phi ptr [ %231, %234 ], [ %221, %214 ]
  %227 = phi ptr [ %229, %234 ], [ %51, %214 ]
  %228 = phi i32 [ %235, %234 ], [ %203, %214 ]
  %229 = getelementptr i8, ptr %227, i32 -1
  %230 = load i8, ptr %229, align 1
  %231 = getelementptr i8, ptr %226, i32 -1
  %232 = load i8, ptr %231, align 1
  %233 = icmp eq i8 %230, %232
  br i1 %233, label %234, label %239

234:                                              ; preds = %225
  %235 = add i32 %228, 1
  %236 = icmp ugt ptr %229, %52
  %237 = icmp ugt ptr %231, %219
  %238 = select i1 %236, i1 %237, i1 false
  br i1 %238, label %225, label %239

239:                                              ; preds = %234, %225, %214
  %240 = phi i32 [ %203, %214 ], [ %228, %225 ], [ %235, %234 ]
  %241 = phi ptr [ %51, %214 ], [ %227, %225 ], [ %229, %234 ]
  %242 = add i32 %204, -2
  br label %243

243:                                              ; preds = %239, %212, %199
  %244 = phi i32 [ %53, %239 ], [ %54, %212 ], [ %54, %199 ]
  %245 = phi i32 [ %242, %239 ], [ %53, %212 ], [ %53, %199 ]
  %246 = phi i32 [ %240, %239 ], [ %203, %212 ], [ %201, %199 ]
  %247 = phi i32 [ %204, %239 ], [ 0, %212 ], [ 0, %199 ]
  %248 = phi ptr [ %241, %239 ], [ %51, %212 ], [ %55, %199 ]
  %249 = ptrtoint ptr %248 to i32
  %250 = ptrtoint ptr %52 to i32
  %251 = sub i32 %249, %250
  %252 = add i32 %246, -3
  %253 = getelementptr i8, ptr %52, i32 %251
  %254 = icmp ugt ptr %253, %43
  %255 = load ptr, ptr %44, align 4
  br i1 %254, label %277, label %256

256:                                              ; preds = %243
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %255, ptr noundef align 1 dereferenceable(16) %52, i32 16, i1 false) #7
  %257 = icmp ugt i32 %251, 16
  %258 = load ptr, ptr %44, align 4
  br i1 %257, label %261, label %259

259:                                              ; preds = %256
  %260 = getelementptr i8, ptr %258, i32 %251
  store ptr %260, ptr %44, align 4
  br label %320

261:                                              ; preds = %256
  %262 = getelementptr i8, ptr %258, i32 16
  %263 = getelementptr i8, ptr %52, i32 16
  %264 = add i32 %251, -16
  %265 = getelementptr i8, ptr %258, i32 %251
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %262, ptr noundef align 1 dereferenceable(16) %263, i32 16, i1 false) #7
  %266 = icmp slt i32 %264, 17
  br i1 %266, label %309, label %267

267:                                              ; preds = %261
  %268 = getelementptr i8, ptr %258, i32 32
  br label %269

269:                                              ; preds = %269, %267
  %270 = phi ptr [ %263, %267 ], [ %274, %269 ]
  %271 = phi ptr [ %268, %267 ], [ %275, %269 ]
  %272 = getelementptr i8, ptr %270, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %271, ptr noundef align 1 dereferenceable(16) %272, i32 16, i1 false) #7
  %273 = getelementptr i8, ptr %271, i32 16
  %274 = getelementptr i8, ptr %270, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %273, ptr noundef align 1 dereferenceable(16) %274, i32 16, i1 false) #7
  %275 = getelementptr i8, ptr %271, i32 32
  %276 = icmp ult ptr %275, %265
  br i1 %276, label %269, label %309

277:                                              ; preds = %243
  %278 = ptrtoint ptr %253 to i32
  %279 = icmp ult ptr %43, %52
  br i1 %279, label %294, label %280

280:                                              ; preds = %277
  %281 = sub i32 %45, %250
  %282 = getelementptr i8, ptr %255, i32 %281
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %255, ptr noundef align 1 dereferenceable(16) %52, i32 16, i1 false) #7
  %283 = icmp slt i32 %281, 17
  br i1 %283, label %294, label %284

284:                                              ; preds = %280
  %285 = getelementptr i8, ptr %255, i32 16
  br label %286

286:                                              ; preds = %286, %284
  %287 = phi ptr [ %52, %284 ], [ %291, %286 ]
  %288 = phi ptr [ %285, %284 ], [ %292, %286 ]
  %289 = getelementptr i8, ptr %287, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %288, ptr noundef align 1 dereferenceable(16) %289, i32 16, i1 false) #7
  %290 = getelementptr i8, ptr %288, i32 16
  %291 = getelementptr i8, ptr %287, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %290, ptr noundef align 1 dereferenceable(16) %291, i32 16, i1 false) #7
  %292 = getelementptr i8, ptr %288, i32 32
  %293 = icmp ult ptr %292, %282
  br i1 %293, label %286, label %294

294:                                              ; preds = %286, %280, %277
  %295 = phi ptr [ %43, %280 ], [ %52, %277 ], [ %43, %286 ]
  %296 = phi ptr [ %282, %280 ], [ %255, %277 ], [ %282, %286 ]
  %297 = icmp ult ptr %295, %253
  br i1 %297, label %298, label %309

298:                                              ; preds = %294
  %299 = ptrtoint ptr %295 to i32
  %300 = sub i32 %278, %299
  %301 = getelementptr i8, ptr %295, i32 %300
  br label %302

302:                                              ; preds = %302, %298
  %303 = phi ptr [ %307, %302 ], [ %296, %298 ]
  %304 = phi ptr [ %305, %302 ], [ %295, %298 ]
  %305 = getelementptr i8, ptr %304, i32 1
  %306 = load i8, ptr %304, align 1
  %307 = getelementptr i8, ptr %303, i32 1
  store i8 %306, ptr %303, align 1
  %308 = icmp eq ptr %305, %301
  br i1 %308, label %309, label %302

309:                                              ; preds = %302, %294, %269, %261
  %310 = load ptr, ptr %44, align 4
  %311 = getelementptr i8, ptr %310, i32 %251
  store ptr %311, ptr %44, align 4
  %312 = icmp ugt i32 %251, 65535
  br i1 %312, label %313, label %320

313:                                              ; preds = %309
  store i32 1, ptr %46, align 4
  %314 = load ptr, ptr %47, align 4
  %315 = load ptr, ptr %1, align 4
  %316 = ptrtoint ptr %314 to i32
  %317 = ptrtoint ptr %315 to i32
  %318 = sub i32 %316, %317
  %319 = ashr exact i32 %318, 3
  store i32 %319, ptr %48, align 4
  br label %320

320:                                              ; preds = %313, %309, %259
  %321 = trunc i32 %251 to i16
  %322 = load ptr, ptr %47, align 4
  %323 = getelementptr inbounds %struct.seqDef_s, ptr %322, i32 0, i32 1
  store i16 %321, ptr %323, align 4
  %324 = add i32 %247, 1
  %325 = load ptr, ptr %47, align 4
  store i32 %324, ptr %325, align 4
  %326 = icmp ugt i32 %252, 65535
  br i1 %326, label %329, label %327

327:                                              ; preds = %320
  %328 = load ptr, ptr %47, align 4
  br label %336

329:                                              ; preds = %320
  store i32 2, ptr %46, align 4
  %330 = load ptr, ptr %47, align 4
  %331 = load ptr, ptr %1, align 4
  %332 = ptrtoint ptr %330 to i32
  %333 = ptrtoint ptr %331 to i32
  %334 = sub i32 %332, %333
  %335 = ashr exact i32 %334, 3
  store i32 %335, ptr %48, align 4
  br label %336

336:                                              ; preds = %329, %327
  %337 = phi ptr [ %328, %327 ], [ %330, %329 ]
  %338 = trunc i32 %252 to i16
  %339 = getelementptr inbounds %struct.seqDef_s, ptr %337, i32 0, i32 2
  store i16 %338, ptr %339, align 2
  %340 = load ptr, ptr %47, align 4
  %341 = getelementptr %struct.seqDef_s, ptr %340, i32 1
  store ptr %341, ptr %47, align 4
  %342 = getelementptr i8, ptr %248, i32 %246
  %343 = icmp ugt ptr %342, %8
  br i1 %343, label %519, label %344

344:                                              ; preds = %511, %336
  %345 = phi ptr [ %516, %511 ], [ %341, %336 ]
  %346 = phi ptr [ %517, %511 ], [ %342, %336 ]
  %347 = phi i32 [ %348, %511 ], [ %245, %336 ]
  %348 = phi i32 [ %347, %511 ], [ %244, %336 ]
  %349 = ptrtoint ptr %346 to i32
  %350 = add i32 %348, %39
  %351 = sub i32 %349, %350
  %352 = icmp ult i32 %351, %12
  %353 = select i1 %352, ptr %49, ptr %10
  %354 = getelementptr i8, ptr %353, i32 %351
  %355 = xor i32 %351, -1
  %356 = add i32 %12, %355
  %357 = icmp ugt i32 %356, 2
  br i1 %357, label %358, label %519

358:                                              ; preds = %344
  %359 = load i32, ptr %354, align 1
  %360 = load i32, ptr %346, align 1
  %361 = icmp eq i32 %359, %360
  br i1 %361, label %362, label %519

362:                                              ; preds = %358
  %363 = select i1 %352, ptr %24, ptr %7
  %364 = getelementptr i8, ptr %346, i32 4
  %365 = getelementptr i8, ptr %354, i32 4
  %366 = ptrtoint ptr %363 to i32
  %367 = ptrtoint ptr %365 to i32
  %368 = sub i32 %366, %367
  %369 = getelementptr i8, ptr %364, i32 %368
  %370 = icmp ult ptr %369, %7
  %371 = select i1 %370, ptr %369, ptr %7
  %372 = getelementptr i8, ptr %371, i32 -3
  %373 = icmp ugt ptr %372, %364
  br i1 %373, label %374, label %400

374:                                              ; preds = %362
  %375 = load i32, ptr %365, align 1
  %376 = load i32, ptr %364, align 1
  %377 = xor i32 %376, %375
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %374
  %380 = tail call i32 @llvm.cttz.i32(i32 %377, i1 true) #7, !range !8
  %381 = lshr i32 %380, 3
  br label %427

382:                                              ; preds = %388, %374
  %383 = phi ptr [ %386, %388 ], [ %364, %374 ]
  %384 = phi ptr [ %385, %388 ], [ %365, %374 ]
  %385 = getelementptr i8, ptr %384, i32 4
  %386 = getelementptr i8, ptr %383, i32 4
  %387 = icmp ult ptr %386, %372
  br i1 %387, label %388, label %400

388:                                              ; preds = %382
  %389 = load i32, ptr %385, align 1
  %390 = load i32, ptr %386, align 1
  %391 = xor i32 %390, %389
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %382, label %393

393:                                              ; preds = %388
  %394 = tail call i32 @llvm.cttz.i32(i32 %391, i1 true) #7, !range !8
  %395 = lshr i32 %394, 3
  %396 = getelementptr i8, ptr %386, i32 %395
  %397 = ptrtoint ptr %396 to i32
  %398 = ptrtoint ptr %364 to i32
  %399 = sub i32 %397, %398
  br label %427

400:                                              ; preds = %382, %362
  %401 = phi ptr [ %364, %362 ], [ %386, %382 ]
  %402 = phi ptr [ %365, %362 ], [ %385, %382 ]
  %403 = getelementptr i8, ptr %371, i32 -1
  %404 = icmp ult ptr %401, %403
  br i1 %404, label %405, label %412

405:                                              ; preds = %400
  %406 = load i16, ptr %402, align 1
  %407 = load i16, ptr %401, align 1
  %408 = icmp eq i16 %406, %407
  br i1 %408, label %409, label %412

409:                                              ; preds = %405
  %410 = getelementptr i8, ptr %401, i32 2
  %411 = getelementptr i8, ptr %402, i32 2
  br label %412

412:                                              ; preds = %409, %405, %400
  %413 = phi ptr [ %410, %409 ], [ %401, %405 ], [ %401, %400 ]
  %414 = phi ptr [ %411, %409 ], [ %402, %405 ], [ %402, %400 ]
  %415 = icmp ult ptr %413, %371
  br i1 %415, label %416, label %422

416:                                              ; preds = %412
  %417 = load i8, ptr %414, align 1
  %418 = load i8, ptr %413, align 1
  %419 = icmp eq i8 %417, %418
  %420 = zext i1 %419 to i32
  %421 = getelementptr i8, ptr %413, i32 %420
  br label %422

422:                                              ; preds = %416, %412
  %423 = phi ptr [ %413, %412 ], [ %421, %416 ]
  %424 = ptrtoint ptr %423 to i32
  %425 = ptrtoint ptr %364 to i32
  %426 = sub i32 %424, %425
  br label %427

427:                                              ; preds = %422, %393, %379
  %428 = phi i32 [ %426, %422 ], [ %381, %379 ], [ %399, %393 ]
  %429 = getelementptr i8, ptr %365, i32 %428
  %430 = icmp eq ptr %429, %363
  br i1 %430, label %431, label %489

431:                                              ; preds = %427
  %432 = getelementptr i8, ptr %364, i32 %428
  %433 = icmp ugt ptr %40, %432
  br i1 %433, label %434, label %460

434:                                              ; preds = %431
  %435 = load i32, ptr %13, align 1
  %436 = load i32, ptr %432, align 1
  %437 = xor i32 %436, %435
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %442, label %439

439:                                              ; preds = %434
  %440 = tail call i32 @llvm.cttz.i32(i32 %437, i1 true) #7, !range !8
  %441 = lshr i32 %440, 3
  br label %486

442:                                              ; preds = %448, %434
  %443 = phi ptr [ %446, %448 ], [ %432, %434 ]
  %444 = phi ptr [ %445, %448 ], [ %13, %434 ]
  %445 = getelementptr i8, ptr %444, i32 4
  %446 = getelementptr i8, ptr %443, i32 4
  %447 = icmp ult ptr %446, %40
  br i1 %447, label %448, label %460

448:                                              ; preds = %442
  %449 = load i32, ptr %445, align 1
  %450 = load i32, ptr %446, align 1
  %451 = xor i32 %450, %449
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %442, label %453

453:                                              ; preds = %448
  %454 = tail call i32 @llvm.cttz.i32(i32 %451, i1 true) #7, !range !8
  %455 = lshr i32 %454, 3
  %456 = getelementptr i8, ptr %446, i32 %455
  %457 = ptrtoint ptr %456 to i32
  %458 = ptrtoint ptr %432 to i32
  %459 = sub i32 %457, %458
  br label %486

460:                                              ; preds = %442, %431
  %461 = phi ptr [ %432, %431 ], [ %446, %442 ]
  %462 = phi ptr [ %13, %431 ], [ %445, %442 ]
  %463 = icmp ult ptr %461, %41
  br i1 %463, label %464, label %471

464:                                              ; preds = %460
  %465 = load i16, ptr %462, align 1
  %466 = load i16, ptr %461, align 1
  %467 = icmp eq i16 %465, %466
  br i1 %467, label %468, label %471

468:                                              ; preds = %464
  %469 = getelementptr i8, ptr %461, i32 2
  %470 = getelementptr i8, ptr %462, i32 2
  br label %471

471:                                              ; preds = %468, %464, %460
  %472 = phi ptr [ %469, %468 ], [ %461, %464 ], [ %461, %460 ]
  %473 = phi ptr [ %470, %468 ], [ %462, %464 ], [ %462, %460 ]
  %474 = icmp ult ptr %472, %7
  br i1 %474, label %475, label %481

475:                                              ; preds = %471
  %476 = load i8, ptr %473, align 1
  %477 = load i8, ptr %472, align 1
  %478 = icmp eq i8 %476, %477
  %479 = zext i1 %478 to i32
  %480 = getelementptr i8, ptr %472, i32 %479
  br label %481

481:                                              ; preds = %475, %471
  %482 = phi ptr [ %472, %471 ], [ %480, %475 ]
  %483 = ptrtoint ptr %482 to i32
  %484 = ptrtoint ptr %432 to i32
  %485 = sub i32 %483, %484
  br label %486

486:                                              ; preds = %481, %453, %439
  %487 = phi i32 [ %485, %481 ], [ %441, %439 ], [ %459, %453 ]
  %488 = add i32 %487, %428
  br label %489

489:                                              ; preds = %486, %427
  %490 = phi i32 [ %488, %486 ], [ %428, %427 ]
  %491 = add i32 %490, 4
  %492 = add i32 %490, 1
  %493 = icmp ugt ptr %346, %43
  br i1 %493, label %497, label %494

494:                                              ; preds = %489
  %495 = load ptr, ptr %44, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %495, ptr noundef align 1 dereferenceable(16) %346, i32 16, i1 false) #7
  %496 = load ptr, ptr %47, align 4
  br label %497

497:                                              ; preds = %494, %489
  %498 = phi ptr [ %345, %489 ], [ %496, %494 ]
  %499 = getelementptr inbounds %struct.seqDef_s, ptr %498, i32 0, i32 1
  store i16 0, ptr %499, align 4
  %500 = load ptr, ptr %47, align 4
  store i32 1, ptr %500, align 4
  %501 = icmp ugt i32 %492, 65535
  br i1 %501, label %504, label %502

502:                                              ; preds = %497
  %503 = load ptr, ptr %47, align 4
  br label %511

504:                                              ; preds = %497
  store i32 2, ptr %46, align 4
  %505 = load ptr, ptr %47, align 4
  %506 = load ptr, ptr %1, align 4
  %507 = ptrtoint ptr %505 to i32
  %508 = ptrtoint ptr %506 to i32
  %509 = sub i32 %507, %508
  %510 = ashr exact i32 %509, 3
  store i32 %510, ptr %48, align 4
  br label %511

511:                                              ; preds = %504, %502
  %512 = phi ptr [ %503, %502 ], [ %505, %504 ]
  %513 = trunc i32 %492 to i16
  %514 = getelementptr inbounds %struct.seqDef_s, ptr %512, i32 0, i32 2
  store i16 %513, ptr %514, align 2
  %515 = load ptr, ptr %47, align 4
  %516 = getelementptr %struct.seqDef_s, ptr %515, i32 1
  store ptr %516, ptr %47, align 4
  %517 = getelementptr i8, ptr %346, i32 %491
  %518 = icmp ugt ptr %517, %8
  br i1 %518, label %519, label %344

519:                                              ; preds = %511, %358, %344, %336, %206
  %520 = phi i32 [ %54, %206 ], [ %244, %336 ], [ %348, %344 ], [ %348, %358 ], [ %347, %511 ]
  %521 = phi i32 [ %53, %206 ], [ %245, %336 ], [ %347, %344 ], [ %347, %358 ], [ %348, %511 ]
  %522 = phi ptr [ %52, %206 ], [ %342, %336 ], [ %346, %344 ], [ %346, %358 ], [ %517, %511 ]
  %523 = phi ptr [ %211, %206 ], [ %342, %336 ], [ %346, %344 ], [ %346, %358 ], [ %517, %511 ]
  %524 = icmp ult ptr %523, %8
  br i1 %524, label %50, label %525

525:                                              ; preds = %519
  %526 = ptrtoint ptr %522 to i32
  br label %527

527:                                              ; preds = %525, %5
  %528 = phi i32 [ %526, %525 ], [ %29, %5 ]
  %529 = phi i32 [ %520, %525 ], [ %16, %5 ]
  %530 = phi i32 [ %521, %525 ], [ %14, %5 ]
  store i32 %530, ptr %2, align 4
  store i32 %529, ptr %15, align 4
  %531 = ptrtoint ptr %7 to i32
  %532 = sub i32 %531, %528
  ret i32 %532
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_greedy_extDict(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 %11
  %16 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %14, i32 %17
  %19 = load i32, ptr %2, align 4
  %20 = getelementptr i32, ptr %2, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq ptr %12, %3
  %23 = zext i1 %22 to i32
  %24 = getelementptr i8, ptr %3, i32 %23
  %25 = icmp ult ptr %24, %7
  br i1 %25, label %26, label %1353

26:                                               ; preds = %5
  %27 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = ptrtoint ptr %9 to i32
  %30 = shl nuw i32 1, %28
  %31 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %32 = add i32 %11, -1
  %33 = getelementptr i8, ptr %6, i32 -3
  %34 = getelementptr i8, ptr %6, i32 -1
  %35 = getelementptr i8, ptr %6, i32 -32
  %36 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %37 = ptrtoint ptr %35 to i32
  %38 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %39 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %40 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %41 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %42 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %44 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %45 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %46 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %47 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %48

48:                                               ; preds = %1351, %26
  %49 = phi i32 [ %17, %26 ], [ %1352, %1351 ]
  %50 = phi ptr [ %24, %26 ], [ %1349, %1351 ]
  %51 = phi ptr [ %3, %26 ], [ %1348, %1351 ]
  %52 = phi i32 [ %19, %26 ], [ %1347, %1351 ]
  %53 = phi i32 [ %21, %26 ], [ %1346, %1351 ]
  %54 = getelementptr i8, ptr %50, i32 1
  %55 = ptrtoint ptr %50 to i32
  %56 = sub i32 %55, %29
  %57 = add i32 %56, 1
  %58 = sub i32 %57, %49
  %59 = icmp ugt i32 %58, %30
  %60 = sub i32 %57, %30
  %61 = load i32, ptr %31, align 4
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i1 %59, i1 false
  %64 = select i1 %63, i32 %60, i32 %49
  %65 = sub i32 %57, %52
  %66 = icmp ult i32 %65, %11
  %67 = select i1 %66, ptr %14, ptr %9
  %68 = getelementptr i8, ptr %67, i32 %65
  %69 = sub i32 %32, %65
  %70 = icmp ugt i32 %69, 2
  %71 = icmp ugt i32 %65, %64
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %207

73:                                               ; preds = %48
  %74 = load i32, ptr %54, align 1
  %75 = load i32, ptr %68, align 1
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %207

77:                                               ; preds = %73
  %78 = select i1 %66, ptr %15, ptr %6
  %79 = getelementptr i8, ptr %50, i32 5
  %80 = getelementptr i8, ptr %68, i32 4
  %81 = ptrtoint ptr %78 to i32
  %82 = ptrtoint ptr %80 to i32
  %83 = sub i32 %81, %82
  %84 = getelementptr i8, ptr %79, i32 %83
  %85 = icmp ult ptr %84, %6
  %86 = select i1 %85, ptr %84, ptr %6
  %87 = getelementptr i8, ptr %86, i32 -3
  %88 = icmp ugt ptr %87, %79
  br i1 %88, label %89, label %115

89:                                               ; preds = %77
  %90 = load i32, ptr %80, align 1
  %91 = load i32, ptr %79, align 1
  %92 = xor i32 %91, %90
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = tail call i32 @llvm.cttz.i32(i32 %92, i1 true) #7, !range !8
  %96 = lshr i32 %95, 3
  br label %142

97:                                               ; preds = %103, %89
  %98 = phi ptr [ %101, %103 ], [ %79, %89 ]
  %99 = phi ptr [ %100, %103 ], [ %80, %89 ]
  %100 = getelementptr i8, ptr %99, i32 4
  %101 = getelementptr i8, ptr %98, i32 4
  %102 = icmp ult ptr %101, %87
  br i1 %102, label %103, label %115

103:                                              ; preds = %97
  %104 = load i32, ptr %100, align 1
  %105 = load i32, ptr %101, align 1
  %106 = xor i32 %105, %104
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %97, label %108

108:                                              ; preds = %103
  %109 = tail call i32 @llvm.cttz.i32(i32 %106, i1 true) #7, !range !8
  %110 = lshr i32 %109, 3
  %111 = getelementptr i8, ptr %101, i32 %110
  %112 = ptrtoint ptr %111 to i32
  %113 = ptrtoint ptr %79 to i32
  %114 = sub i32 %112, %113
  br label %142

115:                                              ; preds = %97, %77
  %116 = phi ptr [ %79, %77 ], [ %101, %97 ]
  %117 = phi ptr [ %80, %77 ], [ %100, %97 ]
  %118 = getelementptr i8, ptr %86, i32 -1
  %119 = icmp ult ptr %116, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = load i16, ptr %117, align 1
  %122 = load i16, ptr %116, align 1
  %123 = icmp eq i16 %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr i8, ptr %116, i32 2
  %126 = getelementptr i8, ptr %117, i32 2
  br label %127

127:                                              ; preds = %124, %120, %115
  %128 = phi ptr [ %125, %124 ], [ %116, %120 ], [ %116, %115 ]
  %129 = phi ptr [ %126, %124 ], [ %117, %120 ], [ %117, %115 ]
  %130 = icmp ult ptr %128, %86
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = load i8, ptr %129, align 1
  %133 = load i8, ptr %128, align 1
  %134 = icmp eq i8 %132, %133
  %135 = zext i1 %134 to i32
  %136 = getelementptr i8, ptr %128, i32 %135
  br label %137

137:                                              ; preds = %131, %127
  %138 = phi ptr [ %128, %127 ], [ %136, %131 ]
  %139 = ptrtoint ptr %138 to i32
  %140 = ptrtoint ptr %79 to i32
  %141 = sub i32 %139, %140
  br label %142

142:                                              ; preds = %137, %108, %94
  %143 = phi i32 [ %141, %137 ], [ %96, %94 ], [ %114, %108 ]
  %144 = getelementptr i8, ptr %80, i32 %143
  %145 = icmp eq ptr %144, %78
  br i1 %145, label %146, label %204

146:                                              ; preds = %142
  %147 = getelementptr i8, ptr %79, i32 %143
  %148 = icmp ugt ptr %33, %147
  br i1 %148, label %149, label %175

149:                                              ; preds = %146
  %150 = load i32, ptr %12, align 1
  %151 = load i32, ptr %147, align 1
  %152 = xor i32 %151, %150
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = tail call i32 @llvm.cttz.i32(i32 %152, i1 true) #7, !range !8
  %156 = lshr i32 %155, 3
  br label %201

157:                                              ; preds = %163, %149
  %158 = phi ptr [ %161, %163 ], [ %147, %149 ]
  %159 = phi ptr [ %160, %163 ], [ %12, %149 ]
  %160 = getelementptr i8, ptr %159, i32 4
  %161 = getelementptr i8, ptr %158, i32 4
  %162 = icmp ult ptr %161, %33
  br i1 %162, label %163, label %175

163:                                              ; preds = %157
  %164 = load i32, ptr %160, align 1
  %165 = load i32, ptr %161, align 1
  %166 = xor i32 %165, %164
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %157, label %168

168:                                              ; preds = %163
  %169 = tail call i32 @llvm.cttz.i32(i32 %166, i1 true) #7, !range !8
  %170 = lshr i32 %169, 3
  %171 = getelementptr i8, ptr %161, i32 %170
  %172 = ptrtoint ptr %171 to i32
  %173 = ptrtoint ptr %147 to i32
  %174 = sub i32 %172, %173
  br label %201

175:                                              ; preds = %157, %146
  %176 = phi ptr [ %147, %146 ], [ %161, %157 ]
  %177 = phi ptr [ %12, %146 ], [ %160, %157 ]
  %178 = icmp ult ptr %176, %34
  br i1 %178, label %179, label %186

179:                                              ; preds = %175
  %180 = load i16, ptr %177, align 1
  %181 = load i16, ptr %176, align 1
  %182 = icmp eq i16 %180, %181
  br i1 %182, label %183, label %186

183:                                              ; preds = %179
  %184 = getelementptr i8, ptr %176, i32 2
  %185 = getelementptr i8, ptr %177, i32 2
  br label %186

186:                                              ; preds = %183, %179, %175
  %187 = phi ptr [ %184, %183 ], [ %176, %179 ], [ %176, %175 ]
  %188 = phi ptr [ %185, %183 ], [ %177, %179 ], [ %177, %175 ]
  %189 = icmp ult ptr %187, %6
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = load i8, ptr %188, align 1
  %192 = load i8, ptr %187, align 1
  %193 = icmp eq i8 %191, %192
  %194 = zext i1 %193 to i32
  %195 = getelementptr i8, ptr %187, i32 %194
  br label %196

196:                                              ; preds = %190, %186
  %197 = phi ptr [ %187, %186 ], [ %195, %190 ]
  %198 = ptrtoint ptr %197 to i32
  %199 = ptrtoint ptr %147 to i32
  %200 = sub i32 %198, %199
  br label %201

201:                                              ; preds = %196, %168, %154
  %202 = phi i32 [ %200, %196 ], [ %156, %154 ], [ %174, %168 ]
  %203 = add i32 %202, %143
  br label %204

204:                                              ; preds = %201, %142
  %205 = phi i32 [ %203, %201 ], [ %143, %142 ]
  %206 = add i32 %205, 4
  br label %1060

207:                                              ; preds = %73, %48
  %208 = load i32, ptr %41, align 4
  switch i32 %208, label %209 [
    i32 6, label %748
    i32 5, label %474
    i32 7, label %748
  ]

209:                                              ; preds = %207
  %210 = load ptr, ptr %42, align 4
  %211 = load i32, ptr %43, align 4
  %212 = shl nuw i32 1, %211
  %213 = add i32 %212, -1
  %214 = load ptr, ptr %8, align 4
  %215 = load ptr, ptr %13, align 4
  %216 = load i32, ptr %10, align 4
  %217 = getelementptr i8, ptr %214, i32 %216
  %218 = getelementptr i8, ptr %215, i32 %216
  %219 = ptrtoint ptr %214 to i32
  %220 = sub i32 %55, %219
  %221 = load i32, ptr %27, align 4
  %222 = shl nuw i32 1, %221
  %223 = sub i32 %220, %49
  %224 = icmp ugt i32 %223, %222
  %225 = sub i32 %220, %222
  %226 = select i1 %62, i1 %224, i1 false
  %227 = select i1 %226, i32 %225, i32 %49
  %228 = tail call i32 @llvm.usub.sat.i32(i32 %220, i32 %212) #7
  %229 = load i32, ptr %44, align 4
  %230 = shl nuw i32 1, %229
  %231 = load ptr, ptr %45, align 4
  %232 = load i32, ptr %46, align 4
  %233 = shl nsw i32 -1, %211
  %234 = xor i32 %233, -1
  %235 = load i32, ptr %47, align 4
  %236 = icmp ult i32 %235, %220
  %237 = sub i32 32, %232
  br i1 %236, label %238, label %250

238:                                              ; preds = %238, %209
  %239 = phi i32 [ %248, %238 ], [ %235, %209 ]
  %240 = getelementptr i8, ptr %214, i32 %239
  %241 = load i32, ptr %240, align 1
  %242 = mul i32 %241, -1640531535
  %243 = lshr i32 %242, %237
  %244 = getelementptr i32, ptr %231, i32 %243
  %245 = load i32, ptr %244, align 4
  %246 = and i32 %239, %234
  %247 = getelementptr i32, ptr %210, i32 %246
  store i32 %245, ptr %247, align 4
  store i32 %239, ptr %244, align 4
  %248 = add nuw i32 %239, 1
  %249 = icmp ult i32 %248, %220
  br i1 %249, label %238, label %250

250:                                              ; preds = %238, %209
  store i32 %220, ptr %47, align 4
  %251 = load i32, ptr %50, align 1
  %252 = mul i32 %251, -1640531535
  %253 = lshr i32 %252, %237
  %254 = getelementptr i32, ptr %231, i32 %253
  %255 = load i32, ptr %254, align 4
  %256 = icmp ult i32 %255, %227
  br i1 %256, label %1026, label %257

257:                                              ; preds = %250
  %258 = icmp ugt ptr %33, %50
  %259 = getelementptr i8, ptr %50, i32 4
  %260 = ptrtoint ptr %218 to i32
  %261 = ptrtoint ptr %259 to i32
  %262 = add i32 %220, 2
  br label %263

263:                                              ; preds = %466, %257
  %264 = phi i32 [ 999999999, %257 ], [ %463, %466 ]
  %265 = phi i32 [ %255, %257 ], [ %470, %466 ]
  %266 = phi i32 [ 3, %257 ], [ %464, %466 ]
  %267 = phi i32 [ %230, %257 ], [ %469, %466 ]
  %268 = icmp ult i32 %265, %216
  br i1 %268, label %326, label %269

269:                                              ; preds = %263
  %270 = getelementptr i8, ptr %214, i32 %265
  %271 = getelementptr i8, ptr %270, i32 %266
  %272 = load i8, ptr %271, align 1
  %273 = getelementptr i8, ptr %50, i32 %266
  %274 = load i8, ptr %273, align 1
  %275 = icmp eq i8 %272, %274
  br i1 %275, label %276, label %462

276:                                              ; preds = %269
  br i1 %258, label %277, label %301

277:                                              ; preds = %276
  %278 = load i32, ptr %270, align 1
  %279 = xor i32 %278, %251
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %284, label %281

281:                                              ; preds = %277
  %282 = tail call i32 @llvm.cttz.i32(i32 %279, i1 true) #7, !range !8
  %283 = lshr i32 %282, 3
  br label %455

284:                                              ; preds = %290, %277
  %285 = phi ptr [ %288, %290 ], [ %50, %277 ]
  %286 = phi ptr [ %287, %290 ], [ %270, %277 ]
  %287 = getelementptr i8, ptr %286, i32 4
  %288 = getelementptr i8, ptr %285, i32 4
  %289 = icmp ult ptr %288, %33
  br i1 %289, label %290, label %301

290:                                              ; preds = %284
  %291 = load i32, ptr %287, align 1
  %292 = load i32, ptr %288, align 1
  %293 = xor i32 %292, %291
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %284, label %295

295:                                              ; preds = %290
  %296 = tail call i32 @llvm.cttz.i32(i32 %293, i1 true) #7, !range !8
  %297 = lshr i32 %296, 3
  %298 = getelementptr i8, ptr %288, i32 %297
  %299 = ptrtoint ptr %298 to i32
  %300 = sub i32 %299, %55
  br label %455

301:                                              ; preds = %284, %276
  %302 = phi ptr [ %50, %276 ], [ %288, %284 ]
  %303 = phi ptr [ %270, %276 ], [ %287, %284 ]
  %304 = icmp ult ptr %302, %34
  br i1 %304, label %305, label %312

305:                                              ; preds = %301
  %306 = load i16, ptr %303, align 1
  %307 = load i16, ptr %302, align 1
  %308 = icmp eq i16 %306, %307
  br i1 %308, label %309, label %312

309:                                              ; preds = %305
  %310 = getelementptr i8, ptr %302, i32 2
  %311 = getelementptr i8, ptr %303, i32 2
  br label %312

312:                                              ; preds = %309, %305, %301
  %313 = phi ptr [ %310, %309 ], [ %302, %305 ], [ %302, %301 ]
  %314 = phi ptr [ %311, %309 ], [ %303, %305 ], [ %303, %301 ]
  %315 = icmp ult ptr %313, %6
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = load i8, ptr %314, align 1
  %318 = load i8, ptr %313, align 1
  %319 = icmp eq i8 %317, %318
  %320 = zext i1 %319 to i32
  %321 = getelementptr i8, ptr %313, i32 %320
  br label %322

322:                                              ; preds = %316, %312
  %323 = phi ptr [ %313, %312 ], [ %321, %316 ]
  %324 = ptrtoint ptr %323 to i32
  %325 = sub i32 %324, %55
  br label %455

326:                                              ; preds = %263
  %327 = getelementptr i8, ptr %215, i32 %265
  %328 = load i32, ptr %327, align 1
  %329 = icmp eq i32 %328, %251
  br i1 %329, label %330, label %462

330:                                              ; preds = %326
  %331 = getelementptr i8, ptr %327, i32 4
  %332 = ptrtoint ptr %331 to i32
  %333 = sub i32 %260, %332
  %334 = getelementptr i8, ptr %259, i32 %333
  %335 = icmp ult ptr %334, %6
  %336 = select i1 %335, ptr %334, ptr %6
  %337 = getelementptr i8, ptr %336, i32 -3
  %338 = icmp ugt ptr %337, %259
  br i1 %338, label %339, label %364

339:                                              ; preds = %330
  %340 = load i32, ptr %331, align 1
  %341 = load i32, ptr %259, align 1
  %342 = xor i32 %341, %340
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %347, label %344

344:                                              ; preds = %339
  %345 = tail call i32 @llvm.cttz.i32(i32 %342, i1 true) #7, !range !8
  %346 = lshr i32 %345, 3
  br label %390

347:                                              ; preds = %353, %339
  %348 = phi ptr [ %351, %353 ], [ %259, %339 ]
  %349 = phi ptr [ %350, %353 ], [ %331, %339 ]
  %350 = getelementptr i8, ptr %349, i32 4
  %351 = getelementptr i8, ptr %348, i32 4
  %352 = icmp ult ptr %351, %337
  br i1 %352, label %353, label %364

353:                                              ; preds = %347
  %354 = load i32, ptr %350, align 1
  %355 = load i32, ptr %351, align 1
  %356 = xor i32 %355, %354
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %347, label %358

358:                                              ; preds = %353
  %359 = tail call i32 @llvm.cttz.i32(i32 %356, i1 true) #7, !range !8
  %360 = lshr i32 %359, 3
  %361 = getelementptr i8, ptr %351, i32 %360
  %362 = ptrtoint ptr %361 to i32
  %363 = sub i32 %362, %261
  br label %390

364:                                              ; preds = %347, %330
  %365 = phi ptr [ %259, %330 ], [ %351, %347 ]
  %366 = phi ptr [ %331, %330 ], [ %350, %347 ]
  %367 = getelementptr i8, ptr %336, i32 -1
  %368 = icmp ult ptr %365, %367
  br i1 %368, label %369, label %376

369:                                              ; preds = %364
  %370 = load i16, ptr %366, align 1
  %371 = load i16, ptr %365, align 1
  %372 = icmp eq i16 %370, %371
  br i1 %372, label %373, label %376

373:                                              ; preds = %369
  %374 = getelementptr i8, ptr %365, i32 2
  %375 = getelementptr i8, ptr %366, i32 2
  br label %376

376:                                              ; preds = %373, %369, %364
  %377 = phi ptr [ %374, %373 ], [ %365, %369 ], [ %365, %364 ]
  %378 = phi ptr [ %375, %373 ], [ %366, %369 ], [ %366, %364 ]
  %379 = icmp ult ptr %377, %336
  br i1 %379, label %380, label %386

380:                                              ; preds = %376
  %381 = load i8, ptr %378, align 1
  %382 = load i8, ptr %377, align 1
  %383 = icmp eq i8 %381, %382
  %384 = zext i1 %383 to i32
  %385 = getelementptr i8, ptr %377, i32 %384
  br label %386

386:                                              ; preds = %380, %376
  %387 = phi ptr [ %377, %376 ], [ %385, %380 ]
  %388 = ptrtoint ptr %387 to i32
  %389 = sub i32 %388, %261
  br label %390

390:                                              ; preds = %386, %358, %344
  %391 = phi i32 [ %389, %386 ], [ %346, %344 ], [ %363, %358 ]
  %392 = getelementptr i8, ptr %331, i32 %391
  %393 = icmp eq ptr %392, %218
  br i1 %393, label %394, label %452

394:                                              ; preds = %390
  %395 = getelementptr i8, ptr %259, i32 %391
  %396 = icmp ugt ptr %33, %395
  br i1 %396, label %397, label %423

397:                                              ; preds = %394
  %398 = load i32, ptr %217, align 1
  %399 = load i32, ptr %395, align 1
  %400 = xor i32 %399, %398
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %405, label %402

402:                                              ; preds = %397
  %403 = tail call i32 @llvm.cttz.i32(i32 %400, i1 true) #7, !range !8
  %404 = lshr i32 %403, 3
  br label %449

405:                                              ; preds = %411, %397
  %406 = phi ptr [ %409, %411 ], [ %395, %397 ]
  %407 = phi ptr [ %408, %411 ], [ %217, %397 ]
  %408 = getelementptr i8, ptr %407, i32 4
  %409 = getelementptr i8, ptr %406, i32 4
  %410 = icmp ult ptr %409, %33
  br i1 %410, label %411, label %423

411:                                              ; preds = %405
  %412 = load i32, ptr %408, align 1
  %413 = load i32, ptr %409, align 1
  %414 = xor i32 %413, %412
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %405, label %416

416:                                              ; preds = %411
  %417 = tail call i32 @llvm.cttz.i32(i32 %414, i1 true) #7, !range !8
  %418 = lshr i32 %417, 3
  %419 = getelementptr i8, ptr %409, i32 %418
  %420 = ptrtoint ptr %419 to i32
  %421 = ptrtoint ptr %395 to i32
  %422 = sub i32 %420, %421
  br label %449

423:                                              ; preds = %405, %394
  %424 = phi ptr [ %395, %394 ], [ %409, %405 ]
  %425 = phi ptr [ %217, %394 ], [ %408, %405 ]
  %426 = icmp ult ptr %424, %34
  br i1 %426, label %427, label %434

427:                                              ; preds = %423
  %428 = load i16, ptr %425, align 1
  %429 = load i16, ptr %424, align 1
  %430 = icmp eq i16 %428, %429
  br i1 %430, label %431, label %434

431:                                              ; preds = %427
  %432 = getelementptr i8, ptr %424, i32 2
  %433 = getelementptr i8, ptr %425, i32 2
  br label %434

434:                                              ; preds = %431, %427, %423
  %435 = phi ptr [ %432, %431 ], [ %424, %427 ], [ %424, %423 ]
  %436 = phi ptr [ %433, %431 ], [ %425, %427 ], [ %425, %423 ]
  %437 = icmp ult ptr %435, %6
  br i1 %437, label %438, label %444

438:                                              ; preds = %434
  %439 = load i8, ptr %436, align 1
  %440 = load i8, ptr %435, align 1
  %441 = icmp eq i8 %439, %440
  %442 = zext i1 %441 to i32
  %443 = getelementptr i8, ptr %435, i32 %442
  br label %444

444:                                              ; preds = %438, %434
  %445 = phi ptr [ %435, %434 ], [ %443, %438 ]
  %446 = ptrtoint ptr %445 to i32
  %447 = ptrtoint ptr %395 to i32
  %448 = sub i32 %446, %447
  br label %449

449:                                              ; preds = %444, %416, %402
  %450 = phi i32 [ %448, %444 ], [ %404, %402 ], [ %422, %416 ]
  %451 = add i32 %450, %391
  br label %452

452:                                              ; preds = %449, %390
  %453 = phi i32 [ %451, %449 ], [ %391, %390 ]
  %454 = add i32 %453, 4
  br label %455

455:                                              ; preds = %452, %322, %295, %281
  %456 = phi i32 [ %454, %452 ], [ %325, %322 ], [ %283, %281 ], [ %300, %295 ]
  %457 = icmp ugt i32 %456, %266
  br i1 %457, label %458, label %462

458:                                              ; preds = %455
  %459 = sub i32 %262, %265
  %460 = getelementptr i8, ptr %50, i32 %456
  %461 = icmp eq ptr %460, %6
  br i1 %461, label %1022, label %462

462:                                              ; preds = %458, %455, %326, %269
  %463 = phi i32 [ %459, %458 ], [ %264, %455 ], [ %264, %326 ], [ %264, %269 ]
  %464 = phi i32 [ %456, %458 ], [ %266, %455 ], [ %266, %326 ], [ %266, %269 ]
  %465 = icmp ugt i32 %265, %228
  br i1 %465, label %466, label %1022

466:                                              ; preds = %462
  %467 = and i32 %265, %213
  %468 = getelementptr i32, ptr %210, i32 %467
  %469 = add i32 %267, -1
  %470 = load i32, ptr %468, align 4
  %471 = icmp uge i32 %470, %227
  %472 = icmp ne i32 %469, 0
  %473 = and i1 %472, %471
  br i1 %473, label %263, label %1022

474:                                              ; preds = %207
  %475 = load ptr, ptr %42, align 4
  %476 = load i32, ptr %43, align 4
  %477 = shl nuw i32 1, %476
  %478 = add i32 %477, -1
  %479 = load ptr, ptr %8, align 4
  %480 = load ptr, ptr %13, align 4
  %481 = load i32, ptr %10, align 4
  %482 = getelementptr i8, ptr %479, i32 %481
  %483 = getelementptr i8, ptr %480, i32 %481
  %484 = ptrtoint ptr %479 to i32
  %485 = sub i32 %55, %484
  %486 = load i32, ptr %27, align 4
  %487 = shl nuw i32 1, %486
  %488 = sub i32 %485, %49
  %489 = icmp ugt i32 %488, %487
  %490 = sub i32 %485, %487
  %491 = select i1 %62, i1 %489, i1 false
  %492 = select i1 %491, i32 %490, i32 %49
  %493 = tail call i32 @llvm.usub.sat.i32(i32 %485, i32 %477) #7
  %494 = load i32, ptr %44, align 4
  %495 = shl nuw i32 1, %494
  %496 = load ptr, ptr %45, align 4
  %497 = load i32, ptr %46, align 4
  %498 = shl nsw i32 -1, %476
  %499 = xor i32 %498, -1
  %500 = load i32, ptr %47, align 4
  %501 = icmp ult i32 %500, %485
  %502 = sub i32 64, %497
  %503 = zext i32 %502 to i64
  br i1 %501, label %504, label %517

504:                                              ; preds = %504, %474
  %505 = phi i32 [ %515, %504 ], [ %500, %474 ]
  %506 = getelementptr i8, ptr %479, i32 %505
  %507 = load i64, ptr %506, align 1
  %508 = mul i64 %507, -3523014627271114752
  %509 = lshr i64 %508, %503
  %510 = trunc i64 %509 to i32
  %511 = getelementptr i32, ptr %496, i32 %510
  %512 = load i32, ptr %511, align 4
  %513 = and i32 %505, %499
  %514 = getelementptr i32, ptr %475, i32 %513
  store i32 %512, ptr %514, align 4
  store i32 %505, ptr %511, align 4
  %515 = add nuw i32 %505, 1
  %516 = icmp ult i32 %515, %485
  br i1 %516, label %504, label %517

517:                                              ; preds = %504, %474
  store i32 %485, ptr %47, align 4
  %518 = load i64, ptr %50, align 1
  %519 = mul i64 %518, -3523014627271114752
  %520 = lshr i64 %519, %503
  %521 = trunc i64 %520 to i32
  %522 = getelementptr i32, ptr %496, i32 %521
  %523 = load i32, ptr %522, align 4
  %524 = icmp ult i32 %523, %492
  %525 = lshr i64 %518, 32
  %526 = trunc i64 %525 to i32
  br i1 %524, label %1026, label %527

527:                                              ; preds = %517
  %528 = trunc i64 %518 to i32
  %529 = icmp ugt ptr %33, %50
  %530 = getelementptr i8, ptr %50, i32 4
  %531 = ptrtoint ptr %483 to i32
  %532 = ptrtoint ptr %530 to i32
  %533 = add i32 %485, 2
  br label %534

534:                                              ; preds = %740, %527
  %535 = phi i32 [ %528, %527 ], [ %736, %740 ]
  %536 = phi i32 [ 999999999, %527 ], [ %737, %740 ]
  %537 = phi i32 [ %523, %527 ], [ %744, %740 ]
  %538 = phi i32 [ 3, %527 ], [ %738, %740 ]
  %539 = phi i32 [ %495, %527 ], [ %743, %740 ]
  %540 = icmp ult i32 %537, %481
  br i1 %540, label %598, label %541

541:                                              ; preds = %534
  %542 = getelementptr i8, ptr %479, i32 %537
  %543 = getelementptr i8, ptr %542, i32 %538
  %544 = load i8, ptr %543, align 1
  %545 = getelementptr i8, ptr %50, i32 %538
  %546 = load i8, ptr %545, align 1
  %547 = icmp eq i8 %544, %546
  br i1 %547, label %548, label %735

548:                                              ; preds = %541
  br i1 %529, label %549, label %573

549:                                              ; preds = %548
  %550 = load i32, ptr %542, align 1
  %551 = xor i32 %535, %550
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %556, label %553

553:                                              ; preds = %549
  %554 = tail call i32 @llvm.cttz.i32(i32 %551, i1 true) #7, !range !8
  %555 = lshr i32 %554, 3
  br label %727

556:                                              ; preds = %562, %549
  %557 = phi ptr [ %560, %562 ], [ %50, %549 ]
  %558 = phi ptr [ %559, %562 ], [ %542, %549 ]
  %559 = getelementptr i8, ptr %558, i32 4
  %560 = getelementptr i8, ptr %557, i32 4
  %561 = icmp ult ptr %560, %33
  br i1 %561, label %562, label %573

562:                                              ; preds = %556
  %563 = load i32, ptr %559, align 1
  %564 = load i32, ptr %560, align 1
  %565 = xor i32 %564, %563
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %556, label %567

567:                                              ; preds = %562
  %568 = tail call i32 @llvm.cttz.i32(i32 %565, i1 true) #7, !range !8
  %569 = lshr i32 %568, 3
  %570 = getelementptr i8, ptr %560, i32 %569
  %571 = ptrtoint ptr %570 to i32
  %572 = sub i32 %571, %55
  br label %727

573:                                              ; preds = %556, %548
  %574 = phi ptr [ %50, %548 ], [ %560, %556 ]
  %575 = phi ptr [ %542, %548 ], [ %559, %556 ]
  %576 = icmp ult ptr %574, %34
  br i1 %576, label %577, label %584

577:                                              ; preds = %573
  %578 = load i16, ptr %575, align 1
  %579 = load i16, ptr %574, align 1
  %580 = icmp eq i16 %578, %579
  br i1 %580, label %581, label %584

581:                                              ; preds = %577
  %582 = getelementptr i8, ptr %574, i32 2
  %583 = getelementptr i8, ptr %575, i32 2
  br label %584

584:                                              ; preds = %581, %577, %573
  %585 = phi ptr [ %582, %581 ], [ %574, %577 ], [ %574, %573 ]
  %586 = phi ptr [ %583, %581 ], [ %575, %577 ], [ %575, %573 ]
  %587 = icmp ult ptr %585, %6
  br i1 %587, label %588, label %594

588:                                              ; preds = %584
  %589 = load i8, ptr %586, align 1
  %590 = load i8, ptr %585, align 1
  %591 = icmp eq i8 %589, %590
  %592 = zext i1 %591 to i32
  %593 = getelementptr i8, ptr %585, i32 %592
  br label %594

594:                                              ; preds = %588, %584
  %595 = phi ptr [ %585, %584 ], [ %593, %588 ]
  %596 = ptrtoint ptr %595 to i32
  %597 = sub i32 %596, %55
  br label %727

598:                                              ; preds = %534
  %599 = getelementptr i8, ptr %480, i32 %537
  %600 = load i32, ptr %599, align 1
  %601 = load i32, ptr %50, align 1
  %602 = icmp eq i32 %600, %601
  br i1 %602, label %603, label %735

603:                                              ; preds = %598
  %604 = getelementptr i8, ptr %599, i32 4
  %605 = ptrtoint ptr %604 to i32
  %606 = sub i32 %531, %605
  %607 = getelementptr i8, ptr %530, i32 %606
  %608 = icmp ult ptr %607, %6
  %609 = select i1 %608, ptr %607, ptr %6
  %610 = getelementptr i8, ptr %609, i32 -3
  %611 = icmp ugt ptr %610, %530
  br i1 %611, label %612, label %636

612:                                              ; preds = %603
  %613 = load i32, ptr %604, align 1
  %614 = xor i32 %613, %526
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %619, label %616

616:                                              ; preds = %612
  %617 = tail call i32 @llvm.cttz.i32(i32 %614, i1 true) #7, !range !8
  %618 = lshr i32 %617, 3
  br label %662

619:                                              ; preds = %625, %612
  %620 = phi ptr [ %623, %625 ], [ %530, %612 ]
  %621 = phi ptr [ %622, %625 ], [ %604, %612 ]
  %622 = getelementptr i8, ptr %621, i32 4
  %623 = getelementptr i8, ptr %620, i32 4
  %624 = icmp ult ptr %623, %610
  br i1 %624, label %625, label %636

625:                                              ; preds = %619
  %626 = load i32, ptr %622, align 1
  %627 = load i32, ptr %623, align 1
  %628 = xor i32 %627, %626
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %619, label %630

630:                                              ; preds = %625
  %631 = tail call i32 @llvm.cttz.i32(i32 %628, i1 true) #7, !range !8
  %632 = lshr i32 %631, 3
  %633 = getelementptr i8, ptr %623, i32 %632
  %634 = ptrtoint ptr %633 to i32
  %635 = sub i32 %634, %532
  br label %662

636:                                              ; preds = %619, %603
  %637 = phi ptr [ %530, %603 ], [ %623, %619 ]
  %638 = phi ptr [ %604, %603 ], [ %622, %619 ]
  %639 = getelementptr i8, ptr %609, i32 -1
  %640 = icmp ult ptr %637, %639
  br i1 %640, label %641, label %648

641:                                              ; preds = %636
  %642 = load i16, ptr %638, align 1
  %643 = load i16, ptr %637, align 1
  %644 = icmp eq i16 %642, %643
  br i1 %644, label %645, label %648

645:                                              ; preds = %641
  %646 = getelementptr i8, ptr %637, i32 2
  %647 = getelementptr i8, ptr %638, i32 2
  br label %648

648:                                              ; preds = %645, %641, %636
  %649 = phi ptr [ %646, %645 ], [ %637, %641 ], [ %637, %636 ]
  %650 = phi ptr [ %647, %645 ], [ %638, %641 ], [ %638, %636 ]
  %651 = icmp ult ptr %649, %609
  br i1 %651, label %652, label %658

652:                                              ; preds = %648
  %653 = load i8, ptr %650, align 1
  %654 = load i8, ptr %649, align 1
  %655 = icmp eq i8 %653, %654
  %656 = zext i1 %655 to i32
  %657 = getelementptr i8, ptr %649, i32 %656
  br label %658

658:                                              ; preds = %652, %648
  %659 = phi ptr [ %649, %648 ], [ %657, %652 ]
  %660 = ptrtoint ptr %659 to i32
  %661 = sub i32 %660, %532
  br label %662

662:                                              ; preds = %658, %630, %616
  %663 = phi i32 [ %661, %658 ], [ %618, %616 ], [ %635, %630 ]
  %664 = getelementptr i8, ptr %604, i32 %663
  %665 = icmp eq ptr %664, %483
  br i1 %665, label %666, label %724

666:                                              ; preds = %662
  %667 = getelementptr i8, ptr %530, i32 %663
  %668 = icmp ugt ptr %33, %667
  br i1 %668, label %669, label %695

669:                                              ; preds = %666
  %670 = load i32, ptr %482, align 1
  %671 = load i32, ptr %667, align 1
  %672 = xor i32 %671, %670
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %677, label %674

674:                                              ; preds = %669
  %675 = tail call i32 @llvm.cttz.i32(i32 %672, i1 true) #7, !range !8
  %676 = lshr i32 %675, 3
  br label %721

677:                                              ; preds = %683, %669
  %678 = phi ptr [ %681, %683 ], [ %667, %669 ]
  %679 = phi ptr [ %680, %683 ], [ %482, %669 ]
  %680 = getelementptr i8, ptr %679, i32 4
  %681 = getelementptr i8, ptr %678, i32 4
  %682 = icmp ult ptr %681, %33
  br i1 %682, label %683, label %695

683:                                              ; preds = %677
  %684 = load i32, ptr %680, align 1
  %685 = load i32, ptr %681, align 1
  %686 = xor i32 %685, %684
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %677, label %688

688:                                              ; preds = %683
  %689 = tail call i32 @llvm.cttz.i32(i32 %686, i1 true) #7, !range !8
  %690 = lshr i32 %689, 3
  %691 = getelementptr i8, ptr %681, i32 %690
  %692 = ptrtoint ptr %691 to i32
  %693 = ptrtoint ptr %667 to i32
  %694 = sub i32 %692, %693
  br label %721

695:                                              ; preds = %677, %666
  %696 = phi ptr [ %667, %666 ], [ %681, %677 ]
  %697 = phi ptr [ %482, %666 ], [ %680, %677 ]
  %698 = icmp ult ptr %696, %34
  br i1 %698, label %699, label %706

699:                                              ; preds = %695
  %700 = load i16, ptr %697, align 1
  %701 = load i16, ptr %696, align 1
  %702 = icmp eq i16 %700, %701
  br i1 %702, label %703, label %706

703:                                              ; preds = %699
  %704 = getelementptr i8, ptr %696, i32 2
  %705 = getelementptr i8, ptr %697, i32 2
  br label %706

706:                                              ; preds = %703, %699, %695
  %707 = phi ptr [ %704, %703 ], [ %696, %699 ], [ %696, %695 ]
  %708 = phi ptr [ %705, %703 ], [ %697, %699 ], [ %697, %695 ]
  %709 = icmp ult ptr %707, %6
  br i1 %709, label %710, label %716

710:                                              ; preds = %706
  %711 = load i8, ptr %708, align 1
  %712 = load i8, ptr %707, align 1
  %713 = icmp eq i8 %711, %712
  %714 = zext i1 %713 to i32
  %715 = getelementptr i8, ptr %707, i32 %714
  br label %716

716:                                              ; preds = %710, %706
  %717 = phi ptr [ %707, %706 ], [ %715, %710 ]
  %718 = ptrtoint ptr %717 to i32
  %719 = ptrtoint ptr %667 to i32
  %720 = sub i32 %718, %719
  br label %721

721:                                              ; preds = %716, %688, %674
  %722 = phi i32 [ %720, %716 ], [ %676, %674 ], [ %694, %688 ]
  %723 = add i32 %722, %663
  br label %724

724:                                              ; preds = %721, %662
  %725 = phi i32 [ %723, %721 ], [ %663, %662 ]
  %726 = add i32 %725, 4
  br label %727

727:                                              ; preds = %724, %594, %567, %553
  %728 = phi i32 [ %600, %724 ], [ %535, %594 ], [ %535, %553 ], [ %535, %567 ]
  %729 = phi i32 [ %726, %724 ], [ %597, %594 ], [ %555, %553 ], [ %572, %567 ]
  %730 = icmp ugt i32 %729, %538
  br i1 %730, label %731, label %735

731:                                              ; preds = %727
  %732 = sub i32 %533, %537
  %733 = getelementptr i8, ptr %50, i32 %729
  %734 = icmp eq ptr %733, %6
  br i1 %734, label %1022, label %735

735:                                              ; preds = %731, %727, %598, %541
  %736 = phi i32 [ %728, %731 ], [ %728, %727 ], [ %601, %598 ], [ %535, %541 ]
  %737 = phi i32 [ %732, %731 ], [ %536, %727 ], [ %536, %598 ], [ %536, %541 ]
  %738 = phi i32 [ %729, %731 ], [ %538, %727 ], [ %538, %598 ], [ %538, %541 ]
  %739 = icmp ugt i32 %537, %493
  br i1 %739, label %740, label %1022

740:                                              ; preds = %735
  %741 = and i32 %537, %478
  %742 = getelementptr i32, ptr %475, i32 %741
  %743 = add i32 %539, -1
  %744 = load i32, ptr %742, align 4
  %745 = icmp uge i32 %744, %492
  %746 = icmp ne i32 %743, 0
  %747 = and i1 %746, %745
  br i1 %747, label %534, label %1022

748:                                              ; preds = %207, %207
  %749 = load ptr, ptr %42, align 4
  %750 = load i32, ptr %43, align 4
  %751 = shl nuw i32 1, %750
  %752 = add i32 %751, -1
  %753 = load ptr, ptr %8, align 4
  %754 = load ptr, ptr %13, align 4
  %755 = load i32, ptr %10, align 4
  %756 = getelementptr i8, ptr %753, i32 %755
  %757 = getelementptr i8, ptr %754, i32 %755
  %758 = ptrtoint ptr %753 to i32
  %759 = sub i32 %55, %758
  %760 = load i32, ptr %27, align 4
  %761 = shl nuw i32 1, %760
  %762 = sub i32 %759, %49
  %763 = icmp ugt i32 %762, %761
  %764 = sub i32 %759, %761
  %765 = select i1 %62, i1 %763, i1 false
  %766 = select i1 %765, i32 %764, i32 %49
  %767 = tail call i32 @llvm.usub.sat.i32(i32 %759, i32 %751) #7
  %768 = load i32, ptr %44, align 4
  %769 = shl nuw i32 1, %768
  %770 = load ptr, ptr %45, align 4
  %771 = load i32, ptr %46, align 4
  %772 = shl nsw i32 -1, %750
  %773 = xor i32 %772, -1
  %774 = load i32, ptr %47, align 4
  %775 = icmp ult i32 %774, %759
  %776 = sub i32 64, %771
  %777 = zext i32 %776 to i64
  br i1 %775, label %778, label %791

778:                                              ; preds = %778, %748
  %779 = phi i32 [ %789, %778 ], [ %774, %748 ]
  %780 = getelementptr i8, ptr %753, i32 %779
  %781 = load i64, ptr %780, align 1
  %782 = mul i64 %781, -3523014627193847808
  %783 = lshr i64 %782, %777
  %784 = trunc i64 %783 to i32
  %785 = getelementptr i32, ptr %770, i32 %784
  %786 = load i32, ptr %785, align 4
  %787 = and i32 %779, %773
  %788 = getelementptr i32, ptr %749, i32 %787
  store i32 %786, ptr %788, align 4
  store i32 %779, ptr %785, align 4
  %789 = add nuw i32 %779, 1
  %790 = icmp ult i32 %789, %759
  br i1 %790, label %778, label %791

791:                                              ; preds = %778, %748
  store i32 %759, ptr %47, align 4
  %792 = load i64, ptr %50, align 1
  %793 = mul i64 %792, -3523014627193847808
  %794 = lshr i64 %793, %777
  %795 = trunc i64 %794 to i32
  %796 = getelementptr i32, ptr %770, i32 %795
  %797 = load i32, ptr %796, align 4
  %798 = icmp ult i32 %797, %766
  %799 = lshr i64 %792, 32
  %800 = trunc i64 %799 to i32
  br i1 %798, label %1026, label %801

801:                                              ; preds = %791
  %802 = trunc i64 %792 to i32
  %803 = icmp ugt ptr %33, %50
  %804 = getelementptr i8, ptr %50, i32 4
  %805 = ptrtoint ptr %757 to i32
  %806 = ptrtoint ptr %804 to i32
  %807 = add i32 %759, 2
  br label %808

808:                                              ; preds = %1014, %801
  %809 = phi i32 [ %802, %801 ], [ %1010, %1014 ]
  %810 = phi i32 [ 999999999, %801 ], [ %1011, %1014 ]
  %811 = phi i32 [ %797, %801 ], [ %1018, %1014 ]
  %812 = phi i32 [ 3, %801 ], [ %1012, %1014 ]
  %813 = phi i32 [ %769, %801 ], [ %1017, %1014 ]
  %814 = icmp ult i32 %811, %755
  br i1 %814, label %872, label %815

815:                                              ; preds = %808
  %816 = getelementptr i8, ptr %753, i32 %811
  %817 = getelementptr i8, ptr %816, i32 %812
  %818 = load i8, ptr %817, align 1
  %819 = getelementptr i8, ptr %50, i32 %812
  %820 = load i8, ptr %819, align 1
  %821 = icmp eq i8 %818, %820
  br i1 %821, label %822, label %1009

822:                                              ; preds = %815
  br i1 %803, label %823, label %847

823:                                              ; preds = %822
  %824 = load i32, ptr %816, align 1
  %825 = xor i32 %809, %824
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %830, label %827

827:                                              ; preds = %823
  %828 = tail call i32 @llvm.cttz.i32(i32 %825, i1 true) #7, !range !8
  %829 = lshr i32 %828, 3
  br label %1001

830:                                              ; preds = %836, %823
  %831 = phi ptr [ %834, %836 ], [ %50, %823 ]
  %832 = phi ptr [ %833, %836 ], [ %816, %823 ]
  %833 = getelementptr i8, ptr %832, i32 4
  %834 = getelementptr i8, ptr %831, i32 4
  %835 = icmp ult ptr %834, %33
  br i1 %835, label %836, label %847

836:                                              ; preds = %830
  %837 = load i32, ptr %833, align 1
  %838 = load i32, ptr %834, align 1
  %839 = xor i32 %838, %837
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %830, label %841

841:                                              ; preds = %836
  %842 = tail call i32 @llvm.cttz.i32(i32 %839, i1 true) #7, !range !8
  %843 = lshr i32 %842, 3
  %844 = getelementptr i8, ptr %834, i32 %843
  %845 = ptrtoint ptr %844 to i32
  %846 = sub i32 %845, %55
  br label %1001

847:                                              ; preds = %830, %822
  %848 = phi ptr [ %50, %822 ], [ %834, %830 ]
  %849 = phi ptr [ %816, %822 ], [ %833, %830 ]
  %850 = icmp ult ptr %848, %34
  br i1 %850, label %851, label %858

851:                                              ; preds = %847
  %852 = load i16, ptr %849, align 1
  %853 = load i16, ptr %848, align 1
  %854 = icmp eq i16 %852, %853
  br i1 %854, label %855, label %858

855:                                              ; preds = %851
  %856 = getelementptr i8, ptr %848, i32 2
  %857 = getelementptr i8, ptr %849, i32 2
  br label %858

858:                                              ; preds = %855, %851, %847
  %859 = phi ptr [ %856, %855 ], [ %848, %851 ], [ %848, %847 ]
  %860 = phi ptr [ %857, %855 ], [ %849, %851 ], [ %849, %847 ]
  %861 = icmp ult ptr %859, %6
  br i1 %861, label %862, label %868

862:                                              ; preds = %858
  %863 = load i8, ptr %860, align 1
  %864 = load i8, ptr %859, align 1
  %865 = icmp eq i8 %863, %864
  %866 = zext i1 %865 to i32
  %867 = getelementptr i8, ptr %859, i32 %866
  br label %868

868:                                              ; preds = %862, %858
  %869 = phi ptr [ %859, %858 ], [ %867, %862 ]
  %870 = ptrtoint ptr %869 to i32
  %871 = sub i32 %870, %55
  br label %1001

872:                                              ; preds = %808
  %873 = getelementptr i8, ptr %754, i32 %811
  %874 = load i32, ptr %873, align 1
  %875 = load i32, ptr %50, align 1
  %876 = icmp eq i32 %874, %875
  br i1 %876, label %877, label %1009

877:                                              ; preds = %872
  %878 = getelementptr i8, ptr %873, i32 4
  %879 = ptrtoint ptr %878 to i32
  %880 = sub i32 %805, %879
  %881 = getelementptr i8, ptr %804, i32 %880
  %882 = icmp ult ptr %881, %6
  %883 = select i1 %882, ptr %881, ptr %6
  %884 = getelementptr i8, ptr %883, i32 -3
  %885 = icmp ugt ptr %884, %804
  br i1 %885, label %886, label %910

886:                                              ; preds = %877
  %887 = load i32, ptr %878, align 1
  %888 = xor i32 %887, %800
  %889 = icmp eq i32 %888, 0
  br i1 %889, label %893, label %890

890:                                              ; preds = %886
  %891 = tail call i32 @llvm.cttz.i32(i32 %888, i1 true) #7, !range !8
  %892 = lshr i32 %891, 3
  br label %936

893:                                              ; preds = %899, %886
  %894 = phi ptr [ %897, %899 ], [ %804, %886 ]
  %895 = phi ptr [ %896, %899 ], [ %878, %886 ]
  %896 = getelementptr i8, ptr %895, i32 4
  %897 = getelementptr i8, ptr %894, i32 4
  %898 = icmp ult ptr %897, %884
  br i1 %898, label %899, label %910

899:                                              ; preds = %893
  %900 = load i32, ptr %896, align 1
  %901 = load i32, ptr %897, align 1
  %902 = xor i32 %901, %900
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %893, label %904

904:                                              ; preds = %899
  %905 = tail call i32 @llvm.cttz.i32(i32 %902, i1 true) #7, !range !8
  %906 = lshr i32 %905, 3
  %907 = getelementptr i8, ptr %897, i32 %906
  %908 = ptrtoint ptr %907 to i32
  %909 = sub i32 %908, %806
  br label %936

910:                                              ; preds = %893, %877
  %911 = phi ptr [ %804, %877 ], [ %897, %893 ]
  %912 = phi ptr [ %878, %877 ], [ %896, %893 ]
  %913 = getelementptr i8, ptr %883, i32 -1
  %914 = icmp ult ptr %911, %913
  br i1 %914, label %915, label %922

915:                                              ; preds = %910
  %916 = load i16, ptr %912, align 1
  %917 = load i16, ptr %911, align 1
  %918 = icmp eq i16 %916, %917
  br i1 %918, label %919, label %922

919:                                              ; preds = %915
  %920 = getelementptr i8, ptr %911, i32 2
  %921 = getelementptr i8, ptr %912, i32 2
  br label %922

922:                                              ; preds = %919, %915, %910
  %923 = phi ptr [ %920, %919 ], [ %911, %915 ], [ %911, %910 ]
  %924 = phi ptr [ %921, %919 ], [ %912, %915 ], [ %912, %910 ]
  %925 = icmp ult ptr %923, %883
  br i1 %925, label %926, label %932

926:                                              ; preds = %922
  %927 = load i8, ptr %924, align 1
  %928 = load i8, ptr %923, align 1
  %929 = icmp eq i8 %927, %928
  %930 = zext i1 %929 to i32
  %931 = getelementptr i8, ptr %923, i32 %930
  br label %932

932:                                              ; preds = %926, %922
  %933 = phi ptr [ %923, %922 ], [ %931, %926 ]
  %934 = ptrtoint ptr %933 to i32
  %935 = sub i32 %934, %806
  br label %936

936:                                              ; preds = %932, %904, %890
  %937 = phi i32 [ %935, %932 ], [ %892, %890 ], [ %909, %904 ]
  %938 = getelementptr i8, ptr %878, i32 %937
  %939 = icmp eq ptr %938, %757
  br i1 %939, label %940, label %998

940:                                              ; preds = %936
  %941 = getelementptr i8, ptr %804, i32 %937
  %942 = icmp ugt ptr %33, %941
  br i1 %942, label %943, label %969

943:                                              ; preds = %940
  %944 = load i32, ptr %756, align 1
  %945 = load i32, ptr %941, align 1
  %946 = xor i32 %945, %944
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %951, label %948

948:                                              ; preds = %943
  %949 = tail call i32 @llvm.cttz.i32(i32 %946, i1 true) #7, !range !8
  %950 = lshr i32 %949, 3
  br label %995

951:                                              ; preds = %957, %943
  %952 = phi ptr [ %955, %957 ], [ %941, %943 ]
  %953 = phi ptr [ %954, %957 ], [ %756, %943 ]
  %954 = getelementptr i8, ptr %953, i32 4
  %955 = getelementptr i8, ptr %952, i32 4
  %956 = icmp ult ptr %955, %33
  br i1 %956, label %957, label %969

957:                                              ; preds = %951
  %958 = load i32, ptr %954, align 1
  %959 = load i32, ptr %955, align 1
  %960 = xor i32 %959, %958
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %951, label %962

962:                                              ; preds = %957
  %963 = tail call i32 @llvm.cttz.i32(i32 %960, i1 true) #7, !range !8
  %964 = lshr i32 %963, 3
  %965 = getelementptr i8, ptr %955, i32 %964
  %966 = ptrtoint ptr %965 to i32
  %967 = ptrtoint ptr %941 to i32
  %968 = sub i32 %966, %967
  br label %995

969:                                              ; preds = %951, %940
  %970 = phi ptr [ %941, %940 ], [ %955, %951 ]
  %971 = phi ptr [ %756, %940 ], [ %954, %951 ]
  %972 = icmp ult ptr %970, %34
  br i1 %972, label %973, label %980

973:                                              ; preds = %969
  %974 = load i16, ptr %971, align 1
  %975 = load i16, ptr %970, align 1
  %976 = icmp eq i16 %974, %975
  br i1 %976, label %977, label %980

977:                                              ; preds = %973
  %978 = getelementptr i8, ptr %970, i32 2
  %979 = getelementptr i8, ptr %971, i32 2
  br label %980

980:                                              ; preds = %977, %973, %969
  %981 = phi ptr [ %978, %977 ], [ %970, %973 ], [ %970, %969 ]
  %982 = phi ptr [ %979, %977 ], [ %971, %973 ], [ %971, %969 ]
  %983 = icmp ult ptr %981, %6
  br i1 %983, label %984, label %990

984:                                              ; preds = %980
  %985 = load i8, ptr %982, align 1
  %986 = load i8, ptr %981, align 1
  %987 = icmp eq i8 %985, %986
  %988 = zext i1 %987 to i32
  %989 = getelementptr i8, ptr %981, i32 %988
  br label %990

990:                                              ; preds = %984, %980
  %991 = phi ptr [ %981, %980 ], [ %989, %984 ]
  %992 = ptrtoint ptr %991 to i32
  %993 = ptrtoint ptr %941 to i32
  %994 = sub i32 %992, %993
  br label %995

995:                                              ; preds = %990, %962, %948
  %996 = phi i32 [ %994, %990 ], [ %950, %948 ], [ %968, %962 ]
  %997 = add i32 %996, %937
  br label %998

998:                                              ; preds = %995, %936
  %999 = phi i32 [ %997, %995 ], [ %937, %936 ]
  %1000 = add i32 %999, 4
  br label %1001

1001:                                             ; preds = %998, %868, %841, %827
  %1002 = phi i32 [ %874, %998 ], [ %809, %868 ], [ %809, %827 ], [ %809, %841 ]
  %1003 = phi i32 [ %1000, %998 ], [ %871, %868 ], [ %829, %827 ], [ %846, %841 ]
  %1004 = icmp ugt i32 %1003, %812
  br i1 %1004, label %1005, label %1009

1005:                                             ; preds = %1001
  %1006 = sub i32 %807, %811
  %1007 = getelementptr i8, ptr %50, i32 %1003
  %1008 = icmp eq ptr %1007, %6
  br i1 %1008, label %1022, label %1009

1009:                                             ; preds = %1005, %1001, %872, %815
  %1010 = phi i32 [ %1002, %1005 ], [ %1002, %1001 ], [ %875, %872 ], [ %809, %815 ]
  %1011 = phi i32 [ %1006, %1005 ], [ %810, %1001 ], [ %810, %872 ], [ %810, %815 ]
  %1012 = phi i32 [ %1003, %1005 ], [ %812, %1001 ], [ %812, %872 ], [ %812, %815 ]
  %1013 = icmp ugt i32 %811, %767
  br i1 %1013, label %1014, label %1022

1014:                                             ; preds = %1009
  %1015 = and i32 %811, %752
  %1016 = getelementptr i32, ptr %749, i32 %1015
  %1017 = add i32 %813, -1
  %1018 = load i32, ptr %1016, align 4
  %1019 = icmp uge i32 %1018, %766
  %1020 = icmp ne i32 %1017, 0
  %1021 = and i1 %1020, %1019
  br i1 %1021, label %808, label %1022

1022:                                             ; preds = %1014, %1009, %1005, %740, %735, %731, %466, %462, %458
  %1023 = phi i32 [ %463, %462 ], [ %463, %466 ], [ %459, %458 ], [ %1011, %1009 ], [ %1011, %1014 ], [ %1006, %1005 ], [ %737, %735 ], [ %737, %740 ], [ %732, %731 ]
  %1024 = phi i32 [ %464, %462 ], [ %464, %466 ], [ %456, %458 ], [ %1012, %1009 ], [ %1012, %1014 ], [ %1003, %1005 ], [ %738, %735 ], [ %738, %740 ], [ %729, %731 ]
  %1025 = icmp ult i32 %1024, 4
  br i1 %1025, label %1026, label %1032

1026:                                             ; preds = %1022, %791, %517, %250
  %1027 = ptrtoint ptr %51 to i32
  %1028 = sub i32 %55, %1027
  %1029 = ashr i32 %1028, 8
  %1030 = add nsw i32 %1029, 1
  %1031 = getelementptr i8, ptr %50, i32 %1030
  br label %1345

1032:                                             ; preds = %1022
  %1033 = icmp eq i32 %1023, 0
  br i1 %1033, label %1060, label %1034

1034:                                             ; preds = %1032
  %1035 = add i32 %1023, -2
  %1036 = add i32 %55, 2
  %1037 = add i32 %1023, %29
  %1038 = sub i32 %1036, %1037
  %1039 = icmp ult i32 %1038, %11
  %1040 = select i1 %1039, ptr %14, ptr %9
  %1041 = getelementptr i8, ptr %1040, i32 %1038
  %1042 = select i1 %1039, ptr %18, ptr %12
  %1043 = icmp ugt ptr %50, %51
  %1044 = icmp ugt ptr %1041, %1042
  %1045 = select i1 %1043, i1 %1044, i1 false
  br i1 %1045, label %1046, label %1060

1046:                                             ; preds = %1055, %1034
  %1047 = phi ptr [ %1052, %1055 ], [ %1041, %1034 ]
  %1048 = phi i32 [ %1056, %1055 ], [ %1024, %1034 ]
  %1049 = phi ptr [ %1050, %1055 ], [ %50, %1034 ]
  %1050 = getelementptr i8, ptr %1049, i32 -1
  %1051 = load i8, ptr %1050, align 1
  %1052 = getelementptr i8, ptr %1047, i32 -1
  %1053 = load i8, ptr %1052, align 1
  %1054 = icmp eq i8 %1051, %1053
  br i1 %1054, label %1055, label %1060

1055:                                             ; preds = %1046
  %1056 = add i32 %1048, 1
  %1057 = icmp ugt ptr %1050, %51
  %1058 = icmp ugt ptr %1052, %1042
  %1059 = select i1 %1057, i1 %1058, i1 false
  br i1 %1059, label %1046, label %1060

1060:                                             ; preds = %1055, %1046, %1034, %1032, %204
  %1061 = phi i32 [ 0, %1032 ], [ 0, %204 ], [ %1023, %1034 ], [ %1023, %1046 ], [ %1023, %1055 ]
  %1062 = phi ptr [ %50, %1032 ], [ %54, %204 ], [ %50, %1034 ], [ %1050, %1055 ], [ %1049, %1046 ]
  %1063 = phi i32 [ %1024, %1032 ], [ %206, %204 ], [ %1024, %1034 ], [ %1056, %1055 ], [ %1048, %1046 ]
  %1064 = phi i32 [ %53, %1032 ], [ %53, %204 ], [ %52, %1034 ], [ %52, %1046 ], [ %52, %1055 ]
  %1065 = phi i32 [ %52, %1032 ], [ %52, %204 ], [ %1035, %1034 ], [ %1035, %1046 ], [ %1035, %1055 ]
  %1066 = ptrtoint ptr %1062 to i32
  %1067 = ptrtoint ptr %51 to i32
  %1068 = sub i32 %1066, %1067
  %1069 = add i32 %1063, -3
  %1070 = getelementptr i8, ptr %51, i32 %1068
  %1071 = icmp ugt ptr %1070, %35
  %1072 = load ptr, ptr %36, align 4
  br i1 %1071, label %1094, label %1073

1073:                                             ; preds = %1060
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1072, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %1074 = icmp ugt i32 %1068, 16
  %1075 = load ptr, ptr %36, align 4
  br i1 %1074, label %1078, label %1076

1076:                                             ; preds = %1073
  %1077 = getelementptr i8, ptr %1075, i32 %1068
  store ptr %1077, ptr %36, align 4
  br label %1137

1078:                                             ; preds = %1073
  %1079 = getelementptr i8, ptr %1075, i32 16
  %1080 = getelementptr i8, ptr %51, i32 16
  %1081 = add i32 %1068, -16
  %1082 = getelementptr i8, ptr %1075, i32 %1068
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1079, ptr noundef align 1 dereferenceable(16) %1080, i32 16, i1 false) #7
  %1083 = icmp slt i32 %1081, 17
  br i1 %1083, label %1126, label %1084

1084:                                             ; preds = %1078
  %1085 = getelementptr i8, ptr %1075, i32 32
  br label %1086

1086:                                             ; preds = %1086, %1084
  %1087 = phi ptr [ %1080, %1084 ], [ %1091, %1086 ]
  %1088 = phi ptr [ %1085, %1084 ], [ %1092, %1086 ]
  %1089 = getelementptr i8, ptr %1087, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1088, ptr noundef align 1 dereferenceable(16) %1089, i32 16, i1 false) #7
  %1090 = getelementptr i8, ptr %1088, i32 16
  %1091 = getelementptr i8, ptr %1087, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1090, ptr noundef align 1 dereferenceable(16) %1091, i32 16, i1 false) #7
  %1092 = getelementptr i8, ptr %1088, i32 32
  %1093 = icmp ult ptr %1092, %1082
  br i1 %1093, label %1086, label %1126

1094:                                             ; preds = %1060
  %1095 = ptrtoint ptr %1070 to i32
  %1096 = icmp ult ptr %35, %51
  br i1 %1096, label %1111, label %1097

1097:                                             ; preds = %1094
  %1098 = sub i32 %37, %1067
  %1099 = getelementptr i8, ptr %1072, i32 %1098
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1072, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %1100 = icmp slt i32 %1098, 17
  br i1 %1100, label %1111, label %1101

1101:                                             ; preds = %1097
  %1102 = getelementptr i8, ptr %1072, i32 16
  br label %1103

1103:                                             ; preds = %1103, %1101
  %1104 = phi ptr [ %51, %1101 ], [ %1108, %1103 ]
  %1105 = phi ptr [ %1102, %1101 ], [ %1109, %1103 ]
  %1106 = getelementptr i8, ptr %1104, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1105, ptr noundef align 1 dereferenceable(16) %1106, i32 16, i1 false) #7
  %1107 = getelementptr i8, ptr %1105, i32 16
  %1108 = getelementptr i8, ptr %1104, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1107, ptr noundef align 1 dereferenceable(16) %1108, i32 16, i1 false) #7
  %1109 = getelementptr i8, ptr %1105, i32 32
  %1110 = icmp ult ptr %1109, %1099
  br i1 %1110, label %1103, label %1111

1111:                                             ; preds = %1103, %1097, %1094
  %1112 = phi ptr [ %35, %1097 ], [ %51, %1094 ], [ %35, %1103 ]
  %1113 = phi ptr [ %1099, %1097 ], [ %1072, %1094 ], [ %1099, %1103 ]
  %1114 = icmp ult ptr %1112, %1070
  br i1 %1114, label %1115, label %1126

1115:                                             ; preds = %1111
  %1116 = ptrtoint ptr %1112 to i32
  %1117 = sub i32 %1095, %1116
  %1118 = getelementptr i8, ptr %1112, i32 %1117
  br label %1119

1119:                                             ; preds = %1119, %1115
  %1120 = phi ptr [ %1124, %1119 ], [ %1113, %1115 ]
  %1121 = phi ptr [ %1122, %1119 ], [ %1112, %1115 ]
  %1122 = getelementptr i8, ptr %1121, i32 1
  %1123 = load i8, ptr %1121, align 1
  %1124 = getelementptr i8, ptr %1120, i32 1
  store i8 %1123, ptr %1120, align 1
  %1125 = icmp eq ptr %1122, %1118
  br i1 %1125, label %1126, label %1119

1126:                                             ; preds = %1119, %1111, %1086, %1078
  %1127 = load ptr, ptr %36, align 4
  %1128 = getelementptr i8, ptr %1127, i32 %1068
  store ptr %1128, ptr %36, align 4
  %1129 = icmp ugt i32 %1068, 65535
  br i1 %1129, label %1130, label %1137

1130:                                             ; preds = %1126
  store i32 1, ptr %38, align 4
  %1131 = load ptr, ptr %39, align 4
  %1132 = load ptr, ptr %1, align 4
  %1133 = ptrtoint ptr %1131 to i32
  %1134 = ptrtoint ptr %1132 to i32
  %1135 = sub i32 %1133, %1134
  %1136 = ashr exact i32 %1135, 3
  store i32 %1136, ptr %40, align 4
  br label %1137

1137:                                             ; preds = %1130, %1126, %1076
  %1138 = trunc i32 %1068 to i16
  %1139 = load ptr, ptr %39, align 4
  %1140 = getelementptr inbounds %struct.seqDef_s, ptr %1139, i32 0, i32 1
  store i16 %1138, ptr %1140, align 4
  %1141 = add i32 %1061, 1
  %1142 = load ptr, ptr %39, align 4
  store i32 %1141, ptr %1142, align 4
  %1143 = icmp ugt i32 %1069, 65535
  br i1 %1143, label %1146, label %1144

1144:                                             ; preds = %1137
  %1145 = load ptr, ptr %39, align 4
  br label %1153

1146:                                             ; preds = %1137
  store i32 2, ptr %38, align 4
  %1147 = load ptr, ptr %39, align 4
  %1148 = load ptr, ptr %1, align 4
  %1149 = ptrtoint ptr %1147 to i32
  %1150 = ptrtoint ptr %1148 to i32
  %1151 = sub i32 %1149, %1150
  %1152 = ashr exact i32 %1151, 3
  store i32 %1152, ptr %40, align 4
  br label %1153

1153:                                             ; preds = %1146, %1144
  %1154 = phi ptr [ %1145, %1144 ], [ %1147, %1146 ]
  %1155 = trunc i32 %1069 to i16
  %1156 = getelementptr inbounds %struct.seqDef_s, ptr %1154, i32 0, i32 2
  store i16 %1155, ptr %1156, align 2
  %1157 = load ptr, ptr %39, align 4
  %1158 = getelementptr %struct.seqDef_s, ptr %1157, i32 1
  store ptr %1158, ptr %39, align 4
  %1159 = getelementptr i8, ptr %1062, i32 %1063
  %1160 = icmp ugt ptr %1159, %7
  br i1 %1160, label %1345, label %1161

1161:                                             ; preds = %1337, %1153
  %1162 = phi ptr [ %1342, %1337 ], [ %1158, %1153 ]
  %1163 = phi ptr [ %1343, %1337 ], [ %1159, %1153 ]
  %1164 = phi i32 [ %1165, %1337 ], [ %1065, %1153 ]
  %1165 = phi i32 [ %1164, %1337 ], [ %1064, %1153 ]
  %1166 = ptrtoint ptr %1163 to i32
  %1167 = sub i32 %1166, %29
  %1168 = load i32, ptr %16, align 4
  %1169 = sub i32 %1167, %1168
  %1170 = icmp ugt i32 %1169, %30
  %1171 = sub i32 %1167, %30
  %1172 = load i32, ptr %31, align 4
  %1173 = icmp eq i32 %1172, 0
  %1174 = select i1 %1173, i1 %1170, i1 false
  %1175 = select i1 %1174, i32 %1171, i32 %1168
  %1176 = sub i32 %1167, %1165
  %1177 = icmp ult i32 %1176, %11
  %1178 = select i1 %1177, ptr %14, ptr %9
  %1179 = getelementptr i8, ptr %1178, i32 %1176
  %1180 = sub i32 %32, %1176
  %1181 = icmp ugt i32 %1180, 2
  %1182 = icmp ugt i32 %1176, %1175
  %1183 = and i1 %1181, %1182
  br i1 %1183, label %1184, label %1345

1184:                                             ; preds = %1161
  %1185 = load i32, ptr %1163, align 1
  %1186 = load i32, ptr %1179, align 1
  %1187 = icmp eq i32 %1185, %1186
  br i1 %1187, label %1188, label %1345

1188:                                             ; preds = %1184
  %1189 = select i1 %1177, ptr %15, ptr %6
  %1190 = getelementptr i8, ptr %1163, i32 4
  %1191 = getelementptr i8, ptr %1179, i32 4
  %1192 = ptrtoint ptr %1189 to i32
  %1193 = ptrtoint ptr %1191 to i32
  %1194 = sub i32 %1192, %1193
  %1195 = getelementptr i8, ptr %1190, i32 %1194
  %1196 = icmp ult ptr %1195, %6
  %1197 = select i1 %1196, ptr %1195, ptr %6
  %1198 = getelementptr i8, ptr %1197, i32 -3
  %1199 = icmp ugt ptr %1198, %1190
  br i1 %1199, label %1200, label %1226

1200:                                             ; preds = %1188
  %1201 = load i32, ptr %1191, align 1
  %1202 = load i32, ptr %1190, align 1
  %1203 = xor i32 %1202, %1201
  %1204 = icmp eq i32 %1203, 0
  br i1 %1204, label %1208, label %1205

1205:                                             ; preds = %1200
  %1206 = tail call i32 @llvm.cttz.i32(i32 %1203, i1 true) #7, !range !8
  %1207 = lshr i32 %1206, 3
  br label %1253

1208:                                             ; preds = %1214, %1200
  %1209 = phi ptr [ %1212, %1214 ], [ %1190, %1200 ]
  %1210 = phi ptr [ %1211, %1214 ], [ %1191, %1200 ]
  %1211 = getelementptr i8, ptr %1210, i32 4
  %1212 = getelementptr i8, ptr %1209, i32 4
  %1213 = icmp ult ptr %1212, %1198
  br i1 %1213, label %1214, label %1226

1214:                                             ; preds = %1208
  %1215 = load i32, ptr %1211, align 1
  %1216 = load i32, ptr %1212, align 1
  %1217 = xor i32 %1216, %1215
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1208, label %1219

1219:                                             ; preds = %1214
  %1220 = tail call i32 @llvm.cttz.i32(i32 %1217, i1 true) #7, !range !8
  %1221 = lshr i32 %1220, 3
  %1222 = getelementptr i8, ptr %1212, i32 %1221
  %1223 = ptrtoint ptr %1222 to i32
  %1224 = ptrtoint ptr %1190 to i32
  %1225 = sub i32 %1223, %1224
  br label %1253

1226:                                             ; preds = %1208, %1188
  %1227 = phi ptr [ %1190, %1188 ], [ %1212, %1208 ]
  %1228 = phi ptr [ %1191, %1188 ], [ %1211, %1208 ]
  %1229 = getelementptr i8, ptr %1197, i32 -1
  %1230 = icmp ult ptr %1227, %1229
  br i1 %1230, label %1231, label %1238

1231:                                             ; preds = %1226
  %1232 = load i16, ptr %1228, align 1
  %1233 = load i16, ptr %1227, align 1
  %1234 = icmp eq i16 %1232, %1233
  br i1 %1234, label %1235, label %1238

1235:                                             ; preds = %1231
  %1236 = getelementptr i8, ptr %1227, i32 2
  %1237 = getelementptr i8, ptr %1228, i32 2
  br label %1238

1238:                                             ; preds = %1235, %1231, %1226
  %1239 = phi ptr [ %1236, %1235 ], [ %1227, %1231 ], [ %1227, %1226 ]
  %1240 = phi ptr [ %1237, %1235 ], [ %1228, %1231 ], [ %1228, %1226 ]
  %1241 = icmp ult ptr %1239, %1197
  br i1 %1241, label %1242, label %1248

1242:                                             ; preds = %1238
  %1243 = load i8, ptr %1240, align 1
  %1244 = load i8, ptr %1239, align 1
  %1245 = icmp eq i8 %1243, %1244
  %1246 = zext i1 %1245 to i32
  %1247 = getelementptr i8, ptr %1239, i32 %1246
  br label %1248

1248:                                             ; preds = %1242, %1238
  %1249 = phi ptr [ %1239, %1238 ], [ %1247, %1242 ]
  %1250 = ptrtoint ptr %1249 to i32
  %1251 = ptrtoint ptr %1190 to i32
  %1252 = sub i32 %1250, %1251
  br label %1253

1253:                                             ; preds = %1248, %1219, %1205
  %1254 = phi i32 [ %1252, %1248 ], [ %1207, %1205 ], [ %1225, %1219 ]
  %1255 = getelementptr i8, ptr %1191, i32 %1254
  %1256 = icmp eq ptr %1255, %1189
  br i1 %1256, label %1257, label %1315

1257:                                             ; preds = %1253
  %1258 = getelementptr i8, ptr %1190, i32 %1254
  %1259 = icmp ugt ptr %33, %1258
  br i1 %1259, label %1260, label %1286

1260:                                             ; preds = %1257
  %1261 = load i32, ptr %12, align 1
  %1262 = load i32, ptr %1258, align 1
  %1263 = xor i32 %1262, %1261
  %1264 = icmp eq i32 %1263, 0
  br i1 %1264, label %1268, label %1265

1265:                                             ; preds = %1260
  %1266 = tail call i32 @llvm.cttz.i32(i32 %1263, i1 true) #7, !range !8
  %1267 = lshr i32 %1266, 3
  br label %1312

1268:                                             ; preds = %1274, %1260
  %1269 = phi ptr [ %1272, %1274 ], [ %1258, %1260 ]
  %1270 = phi ptr [ %1271, %1274 ], [ %12, %1260 ]
  %1271 = getelementptr i8, ptr %1270, i32 4
  %1272 = getelementptr i8, ptr %1269, i32 4
  %1273 = icmp ult ptr %1272, %33
  br i1 %1273, label %1274, label %1286

1274:                                             ; preds = %1268
  %1275 = load i32, ptr %1271, align 1
  %1276 = load i32, ptr %1272, align 1
  %1277 = xor i32 %1276, %1275
  %1278 = icmp eq i32 %1277, 0
  br i1 %1278, label %1268, label %1279

1279:                                             ; preds = %1274
  %1280 = tail call i32 @llvm.cttz.i32(i32 %1277, i1 true) #7, !range !8
  %1281 = lshr i32 %1280, 3
  %1282 = getelementptr i8, ptr %1272, i32 %1281
  %1283 = ptrtoint ptr %1282 to i32
  %1284 = ptrtoint ptr %1258 to i32
  %1285 = sub i32 %1283, %1284
  br label %1312

1286:                                             ; preds = %1268, %1257
  %1287 = phi ptr [ %1258, %1257 ], [ %1272, %1268 ]
  %1288 = phi ptr [ %12, %1257 ], [ %1271, %1268 ]
  %1289 = icmp ult ptr %1287, %34
  br i1 %1289, label %1290, label %1297

1290:                                             ; preds = %1286
  %1291 = load i16, ptr %1288, align 1
  %1292 = load i16, ptr %1287, align 1
  %1293 = icmp eq i16 %1291, %1292
  br i1 %1293, label %1294, label %1297

1294:                                             ; preds = %1290
  %1295 = getelementptr i8, ptr %1287, i32 2
  %1296 = getelementptr i8, ptr %1288, i32 2
  br label %1297

1297:                                             ; preds = %1294, %1290, %1286
  %1298 = phi ptr [ %1295, %1294 ], [ %1287, %1290 ], [ %1287, %1286 ]
  %1299 = phi ptr [ %1296, %1294 ], [ %1288, %1290 ], [ %1288, %1286 ]
  %1300 = icmp ult ptr %1298, %6
  br i1 %1300, label %1301, label %1307

1301:                                             ; preds = %1297
  %1302 = load i8, ptr %1299, align 1
  %1303 = load i8, ptr %1298, align 1
  %1304 = icmp eq i8 %1302, %1303
  %1305 = zext i1 %1304 to i32
  %1306 = getelementptr i8, ptr %1298, i32 %1305
  br label %1307

1307:                                             ; preds = %1301, %1297
  %1308 = phi ptr [ %1298, %1297 ], [ %1306, %1301 ]
  %1309 = ptrtoint ptr %1308 to i32
  %1310 = ptrtoint ptr %1258 to i32
  %1311 = sub i32 %1309, %1310
  br label %1312

1312:                                             ; preds = %1307, %1279, %1265
  %1313 = phi i32 [ %1311, %1307 ], [ %1267, %1265 ], [ %1285, %1279 ]
  %1314 = add i32 %1313, %1254
  br label %1315

1315:                                             ; preds = %1312, %1253
  %1316 = phi i32 [ %1314, %1312 ], [ %1254, %1253 ]
  %1317 = add i32 %1316, 4
  %1318 = add i32 %1316, 1
  %1319 = icmp ugt ptr %1163, %35
  br i1 %1319, label %1323, label %1320

1320:                                             ; preds = %1315
  %1321 = load ptr, ptr %36, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %1321, ptr noundef align 1 dereferenceable(16) %1163, i32 16, i1 false) #7
  %1322 = load ptr, ptr %39, align 4
  br label %1323

1323:                                             ; preds = %1320, %1315
  %1324 = phi ptr [ %1162, %1315 ], [ %1322, %1320 ]
  %1325 = getelementptr inbounds %struct.seqDef_s, ptr %1324, i32 0, i32 1
  store i16 0, ptr %1325, align 4
  %1326 = load ptr, ptr %39, align 4
  store i32 1, ptr %1326, align 4
  %1327 = icmp ugt i32 %1318, 65535
  br i1 %1327, label %1330, label %1328

1328:                                             ; preds = %1323
  %1329 = load ptr, ptr %39, align 4
  br label %1337

1330:                                             ; preds = %1323
  store i32 2, ptr %38, align 4
  %1331 = load ptr, ptr %39, align 4
  %1332 = load ptr, ptr %1, align 4
  %1333 = ptrtoint ptr %1331 to i32
  %1334 = ptrtoint ptr %1332 to i32
  %1335 = sub i32 %1333, %1334
  %1336 = ashr exact i32 %1335, 3
  store i32 %1336, ptr %40, align 4
  br label %1337

1337:                                             ; preds = %1330, %1328
  %1338 = phi ptr [ %1329, %1328 ], [ %1331, %1330 ]
  %1339 = trunc i32 %1318 to i16
  %1340 = getelementptr inbounds %struct.seqDef_s, ptr %1338, i32 0, i32 2
  store i16 %1339, ptr %1340, align 2
  %1341 = load ptr, ptr %39, align 4
  %1342 = getelementptr %struct.seqDef_s, ptr %1341, i32 1
  store ptr %1342, ptr %39, align 4
  %1343 = getelementptr i8, ptr %1163, i32 %1317
  %1344 = icmp ugt ptr %1343, %7
  br i1 %1344, label %1345, label %1161

1345:                                             ; preds = %1337, %1184, %1161, %1153, %1026
  %1346 = phi i32 [ %53, %1026 ], [ %1064, %1153 ], [ %1165, %1161 ], [ %1165, %1184 ], [ %1164, %1337 ]
  %1347 = phi i32 [ %52, %1026 ], [ %1065, %1153 ], [ %1164, %1161 ], [ %1164, %1184 ], [ %1165, %1337 ]
  %1348 = phi ptr [ %51, %1026 ], [ %1159, %1153 ], [ %1163, %1161 ], [ %1163, %1184 ], [ %1343, %1337 ]
  %1349 = phi ptr [ %1031, %1026 ], [ %1159, %1153 ], [ %1163, %1161 ], [ %1163, %1184 ], [ %1343, %1337 ]
  %1350 = icmp ult ptr %1349, %7
  br i1 %1350, label %1351, label %1353

1351:                                             ; preds = %1345
  %1352 = load i32, ptr %16, align 4
  br label %48

1353:                                             ; preds = %1345, %5
  %1354 = phi i32 [ %21, %5 ], [ %1346, %1345 ]
  %1355 = phi i32 [ %19, %5 ], [ %1347, %1345 ]
  %1356 = phi ptr [ %3, %5 ], [ %1348, %1345 ]
  store i32 %1355, ptr %2, align 4
  store i32 %1354, ptr %20, align 4
  %1357 = ptrtoint ptr %6 to i32
  %1358 = ptrtoint ptr %1356 to i32
  %1359 = sub i32 %1357, %1358
  ret i32 %1359
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy_extDict(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 %11
  %16 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %14, i32 %17
  %19 = load i32, ptr %2, align 4
  %20 = getelementptr i32, ptr %2, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq ptr %12, %3
  %23 = zext i1 %22 to i32
  %24 = getelementptr i8, ptr %3, i32 %23
  %25 = icmp ult ptr %24, %7
  br i1 %25, label %26, label %2384

26:                                               ; preds = %5
  %27 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = ptrtoint ptr %9 to i32
  %30 = shl nuw i32 1, %28
  %31 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %32 = add i32 %11, -1
  %33 = getelementptr i8, ptr %6, i32 -3
  %34 = getelementptr i8, ptr %6, i32 -1
  %35 = getelementptr i8, ptr %6, i32 -32
  %36 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %37 = ptrtoint ptr %35 to i32
  %38 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %39 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %40 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %41 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %42 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %44 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %45 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %46 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %47 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %48

48:                                               ; preds = %2382, %26
  %49 = phi i32 [ %17, %26 ], [ %2383, %2382 ]
  %50 = phi ptr [ %24, %26 ], [ %2380, %2382 ]
  %51 = phi ptr [ %3, %26 ], [ %2379, %2382 ]
  %52 = phi i32 [ %19, %26 ], [ %2378, %2382 ]
  %53 = phi i32 [ %21, %26 ], [ %2377, %2382 ]
  %54 = getelementptr i8, ptr %50, i32 1
  %55 = ptrtoint ptr %50 to i32
  %56 = sub i32 %55, %29
  %57 = add i32 %56, 1
  %58 = sub i32 %57, %49
  %59 = icmp ugt i32 %58, %30
  %60 = sub i32 %57, %30
  %61 = load i32, ptr %31, align 4
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i1 %59, i1 false
  %64 = select i1 %63, i32 %60, i32 %49
  %65 = sub i32 %57, %52
  %66 = icmp ult i32 %65, %11
  %67 = select i1 %66, ptr %14, ptr %9
  %68 = getelementptr i8, ptr %67, i32 %65
  %69 = sub i32 %32, %65
  %70 = icmp ugt i32 %69, 2
  %71 = icmp ugt i32 %65, %64
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %207

73:                                               ; preds = %48
  %74 = load i32, ptr %54, align 1
  %75 = load i32, ptr %68, align 1
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %207

77:                                               ; preds = %73
  %78 = select i1 %66, ptr %15, ptr %6
  %79 = getelementptr i8, ptr %50, i32 5
  %80 = getelementptr i8, ptr %68, i32 4
  %81 = ptrtoint ptr %78 to i32
  %82 = ptrtoint ptr %80 to i32
  %83 = sub i32 %81, %82
  %84 = getelementptr i8, ptr %79, i32 %83
  %85 = icmp ult ptr %84, %6
  %86 = select i1 %85, ptr %84, ptr %6
  %87 = getelementptr i8, ptr %86, i32 -3
  %88 = icmp ugt ptr %87, %79
  br i1 %88, label %89, label %115

89:                                               ; preds = %77
  %90 = load i32, ptr %80, align 1
  %91 = load i32, ptr %79, align 1
  %92 = xor i32 %91, %90
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = tail call i32 @llvm.cttz.i32(i32 %92, i1 true) #7, !range !8
  %96 = lshr i32 %95, 3
  br label %142

97:                                               ; preds = %103, %89
  %98 = phi ptr [ %101, %103 ], [ %79, %89 ]
  %99 = phi ptr [ %100, %103 ], [ %80, %89 ]
  %100 = getelementptr i8, ptr %99, i32 4
  %101 = getelementptr i8, ptr %98, i32 4
  %102 = icmp ult ptr %101, %87
  br i1 %102, label %103, label %115

103:                                              ; preds = %97
  %104 = load i32, ptr %100, align 1
  %105 = load i32, ptr %101, align 1
  %106 = xor i32 %105, %104
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %97, label %108

108:                                              ; preds = %103
  %109 = tail call i32 @llvm.cttz.i32(i32 %106, i1 true) #7, !range !8
  %110 = lshr i32 %109, 3
  %111 = getelementptr i8, ptr %101, i32 %110
  %112 = ptrtoint ptr %111 to i32
  %113 = ptrtoint ptr %79 to i32
  %114 = sub i32 %112, %113
  br label %142

115:                                              ; preds = %97, %77
  %116 = phi ptr [ %79, %77 ], [ %101, %97 ]
  %117 = phi ptr [ %80, %77 ], [ %100, %97 ]
  %118 = getelementptr i8, ptr %86, i32 -1
  %119 = icmp ult ptr %116, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = load i16, ptr %117, align 1
  %122 = load i16, ptr %116, align 1
  %123 = icmp eq i16 %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr i8, ptr %116, i32 2
  %126 = getelementptr i8, ptr %117, i32 2
  br label %127

127:                                              ; preds = %124, %120, %115
  %128 = phi ptr [ %125, %124 ], [ %116, %120 ], [ %116, %115 ]
  %129 = phi ptr [ %126, %124 ], [ %117, %120 ], [ %117, %115 ]
  %130 = icmp ult ptr %128, %86
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = load i8, ptr %129, align 1
  %133 = load i8, ptr %128, align 1
  %134 = icmp eq i8 %132, %133
  %135 = zext i1 %134 to i32
  %136 = getelementptr i8, ptr %128, i32 %135
  br label %137

137:                                              ; preds = %131, %127
  %138 = phi ptr [ %128, %127 ], [ %136, %131 ]
  %139 = ptrtoint ptr %138 to i32
  %140 = ptrtoint ptr %79 to i32
  %141 = sub i32 %139, %140
  br label %142

142:                                              ; preds = %137, %108, %94
  %143 = phi i32 [ %141, %137 ], [ %96, %94 ], [ %114, %108 ]
  %144 = getelementptr i8, ptr %80, i32 %143
  %145 = icmp eq ptr %144, %78
  br i1 %145, label %146, label %204

146:                                              ; preds = %142
  %147 = getelementptr i8, ptr %79, i32 %143
  %148 = icmp ugt ptr %33, %147
  br i1 %148, label %149, label %175

149:                                              ; preds = %146
  %150 = load i32, ptr %12, align 1
  %151 = load i32, ptr %147, align 1
  %152 = xor i32 %151, %150
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = tail call i32 @llvm.cttz.i32(i32 %152, i1 true) #7, !range !8
  %156 = lshr i32 %155, 3
  br label %201

157:                                              ; preds = %163, %149
  %158 = phi ptr [ %161, %163 ], [ %147, %149 ]
  %159 = phi ptr [ %160, %163 ], [ %12, %149 ]
  %160 = getelementptr i8, ptr %159, i32 4
  %161 = getelementptr i8, ptr %158, i32 4
  %162 = icmp ult ptr %161, %33
  br i1 %162, label %163, label %175

163:                                              ; preds = %157
  %164 = load i32, ptr %160, align 1
  %165 = load i32, ptr %161, align 1
  %166 = xor i32 %165, %164
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %157, label %168

168:                                              ; preds = %163
  %169 = tail call i32 @llvm.cttz.i32(i32 %166, i1 true) #7, !range !8
  %170 = lshr i32 %169, 3
  %171 = getelementptr i8, ptr %161, i32 %170
  %172 = ptrtoint ptr %171 to i32
  %173 = ptrtoint ptr %147 to i32
  %174 = sub i32 %172, %173
  br label %201

175:                                              ; preds = %157, %146
  %176 = phi ptr [ %147, %146 ], [ %161, %157 ]
  %177 = phi ptr [ %12, %146 ], [ %160, %157 ]
  %178 = icmp ult ptr %176, %34
  br i1 %178, label %179, label %186

179:                                              ; preds = %175
  %180 = load i16, ptr %177, align 1
  %181 = load i16, ptr %176, align 1
  %182 = icmp eq i16 %180, %181
  br i1 %182, label %183, label %186

183:                                              ; preds = %179
  %184 = getelementptr i8, ptr %176, i32 2
  %185 = getelementptr i8, ptr %177, i32 2
  br label %186

186:                                              ; preds = %183, %179, %175
  %187 = phi ptr [ %184, %183 ], [ %176, %179 ], [ %176, %175 ]
  %188 = phi ptr [ %185, %183 ], [ %177, %179 ], [ %177, %175 ]
  %189 = icmp ult ptr %187, %6
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = load i8, ptr %188, align 1
  %192 = load i8, ptr %187, align 1
  %193 = icmp eq i8 %191, %192
  %194 = zext i1 %193 to i32
  %195 = getelementptr i8, ptr %187, i32 %194
  br label %196

196:                                              ; preds = %190, %186
  %197 = phi ptr [ %187, %186 ], [ %195, %190 ]
  %198 = ptrtoint ptr %197 to i32
  %199 = ptrtoint ptr %147 to i32
  %200 = sub i32 %198, %199
  br label %201

201:                                              ; preds = %196, %168, %154
  %202 = phi i32 [ %200, %196 ], [ %156, %154 ], [ %174, %168 ]
  %203 = add i32 %202, %143
  br label %204

204:                                              ; preds = %201, %142
  %205 = phi i32 [ %203, %201 ], [ %143, %142 ]
  %206 = add i32 %205, 4
  br label %207

207:                                              ; preds = %204, %73, %48
  %208 = phi i32 [ %206, %204 ], [ 0, %73 ], [ 0, %48 ]
  %209 = load i32, ptr %41, align 4
  switch i32 %209, label %210 [
    i32 6, label %749
    i32 5, label %475
    i32 7, label %749
  ]

210:                                              ; preds = %207
  %211 = load ptr, ptr %42, align 4
  %212 = load i32, ptr %43, align 4
  %213 = shl nuw i32 1, %212
  %214 = add i32 %213, -1
  %215 = load ptr, ptr %8, align 4
  %216 = load ptr, ptr %13, align 4
  %217 = load i32, ptr %10, align 4
  %218 = getelementptr i8, ptr %215, i32 %217
  %219 = getelementptr i8, ptr %216, i32 %217
  %220 = ptrtoint ptr %215 to i32
  %221 = sub i32 %55, %220
  %222 = load i32, ptr %27, align 4
  %223 = shl nuw i32 1, %222
  %224 = sub i32 %221, %49
  %225 = icmp ugt i32 %224, %223
  %226 = sub i32 %221, %223
  %227 = select i1 %62, i1 %225, i1 false
  %228 = select i1 %227, i32 %226, i32 %49
  %229 = tail call i32 @llvm.usub.sat.i32(i32 %221, i32 %213) #7
  %230 = load i32, ptr %44, align 4
  %231 = shl nuw i32 1, %230
  %232 = load ptr, ptr %45, align 4
  %233 = load i32, ptr %46, align 4
  %234 = shl nsw i32 -1, %212
  %235 = xor i32 %234, -1
  %236 = load i32, ptr %47, align 4
  %237 = icmp ult i32 %236, %221
  %238 = sub i32 32, %233
  br i1 %237, label %239, label %251

239:                                              ; preds = %239, %210
  %240 = phi i32 [ %249, %239 ], [ %236, %210 ]
  %241 = getelementptr i8, ptr %215, i32 %240
  %242 = load i32, ptr %241, align 1
  %243 = mul i32 %242, -1640531535
  %244 = lshr i32 %243, %238
  %245 = getelementptr i32, ptr %232, i32 %244
  %246 = load i32, ptr %245, align 4
  %247 = and i32 %240, %235
  %248 = getelementptr i32, ptr %211, i32 %247
  store i32 %246, ptr %248, align 4
  store i32 %240, ptr %245, align 4
  %249 = add nuw i32 %240, 1
  %250 = icmp ult i32 %249, %221
  br i1 %250, label %239, label %251

251:                                              ; preds = %239, %210
  store i32 %221, ptr %47, align 4
  %252 = load i32, ptr %50, align 1
  %253 = mul i32 %252, -1640531535
  %254 = lshr i32 %253, %238
  %255 = getelementptr i32, ptr %232, i32 %254
  %256 = load i32, ptr %255, align 4
  %257 = icmp ult i32 %256, %228
  br i1 %257, label %1023, label %258

258:                                              ; preds = %251
  %259 = icmp ugt ptr %33, %50
  %260 = getelementptr i8, ptr %50, i32 4
  %261 = ptrtoint ptr %219 to i32
  %262 = ptrtoint ptr %260 to i32
  %263 = add i32 %221, 2
  br label %264

264:                                              ; preds = %467, %258
  %265 = phi i32 [ 999999999, %258 ], [ %464, %467 ]
  %266 = phi i32 [ %256, %258 ], [ %471, %467 ]
  %267 = phi i32 [ 3, %258 ], [ %465, %467 ]
  %268 = phi i32 [ %231, %258 ], [ %470, %467 ]
  %269 = icmp ult i32 %266, %217
  br i1 %269, label %327, label %270

270:                                              ; preds = %264
  %271 = getelementptr i8, ptr %215, i32 %266
  %272 = getelementptr i8, ptr %271, i32 %267
  %273 = load i8, ptr %272, align 1
  %274 = getelementptr i8, ptr %50, i32 %267
  %275 = load i8, ptr %274, align 1
  %276 = icmp eq i8 %273, %275
  br i1 %276, label %277, label %463

277:                                              ; preds = %270
  br i1 %259, label %278, label %302

278:                                              ; preds = %277
  %279 = load i32, ptr %271, align 1
  %280 = xor i32 %279, %252
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %278
  %283 = tail call i32 @llvm.cttz.i32(i32 %280, i1 true) #7, !range !8
  %284 = lshr i32 %283, 3
  br label %456

285:                                              ; preds = %291, %278
  %286 = phi ptr [ %289, %291 ], [ %50, %278 ]
  %287 = phi ptr [ %288, %291 ], [ %271, %278 ]
  %288 = getelementptr i8, ptr %287, i32 4
  %289 = getelementptr i8, ptr %286, i32 4
  %290 = icmp ult ptr %289, %33
  br i1 %290, label %291, label %302

291:                                              ; preds = %285
  %292 = load i32, ptr %288, align 1
  %293 = load i32, ptr %289, align 1
  %294 = xor i32 %293, %292
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %285, label %296

296:                                              ; preds = %291
  %297 = tail call i32 @llvm.cttz.i32(i32 %294, i1 true) #7, !range !8
  %298 = lshr i32 %297, 3
  %299 = getelementptr i8, ptr %289, i32 %298
  %300 = ptrtoint ptr %299 to i32
  %301 = sub i32 %300, %55
  br label %456

302:                                              ; preds = %285, %277
  %303 = phi ptr [ %50, %277 ], [ %289, %285 ]
  %304 = phi ptr [ %271, %277 ], [ %288, %285 ]
  %305 = icmp ult ptr %303, %34
  br i1 %305, label %306, label %313

306:                                              ; preds = %302
  %307 = load i16, ptr %304, align 1
  %308 = load i16, ptr %303, align 1
  %309 = icmp eq i16 %307, %308
  br i1 %309, label %310, label %313

310:                                              ; preds = %306
  %311 = getelementptr i8, ptr %303, i32 2
  %312 = getelementptr i8, ptr %304, i32 2
  br label %313

313:                                              ; preds = %310, %306, %302
  %314 = phi ptr [ %311, %310 ], [ %303, %306 ], [ %303, %302 ]
  %315 = phi ptr [ %312, %310 ], [ %304, %306 ], [ %304, %302 ]
  %316 = icmp ult ptr %314, %6
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = load i8, ptr %315, align 1
  %319 = load i8, ptr %314, align 1
  %320 = icmp eq i8 %318, %319
  %321 = zext i1 %320 to i32
  %322 = getelementptr i8, ptr %314, i32 %321
  br label %323

323:                                              ; preds = %317, %313
  %324 = phi ptr [ %314, %313 ], [ %322, %317 ]
  %325 = ptrtoint ptr %324 to i32
  %326 = sub i32 %325, %55
  br label %456

327:                                              ; preds = %264
  %328 = getelementptr i8, ptr %216, i32 %266
  %329 = load i32, ptr %328, align 1
  %330 = icmp eq i32 %329, %252
  br i1 %330, label %331, label %463

331:                                              ; preds = %327
  %332 = getelementptr i8, ptr %328, i32 4
  %333 = ptrtoint ptr %332 to i32
  %334 = sub i32 %261, %333
  %335 = getelementptr i8, ptr %260, i32 %334
  %336 = icmp ult ptr %335, %6
  %337 = select i1 %336, ptr %335, ptr %6
  %338 = getelementptr i8, ptr %337, i32 -3
  %339 = icmp ugt ptr %338, %260
  br i1 %339, label %340, label %365

340:                                              ; preds = %331
  %341 = load i32, ptr %332, align 1
  %342 = load i32, ptr %260, align 1
  %343 = xor i32 %342, %341
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %348, label %345

345:                                              ; preds = %340
  %346 = tail call i32 @llvm.cttz.i32(i32 %343, i1 true) #7, !range !8
  %347 = lshr i32 %346, 3
  br label %391

348:                                              ; preds = %354, %340
  %349 = phi ptr [ %352, %354 ], [ %260, %340 ]
  %350 = phi ptr [ %351, %354 ], [ %332, %340 ]
  %351 = getelementptr i8, ptr %350, i32 4
  %352 = getelementptr i8, ptr %349, i32 4
  %353 = icmp ult ptr %352, %338
  br i1 %353, label %354, label %365

354:                                              ; preds = %348
  %355 = load i32, ptr %351, align 1
  %356 = load i32, ptr %352, align 1
  %357 = xor i32 %356, %355
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %348, label %359

359:                                              ; preds = %354
  %360 = tail call i32 @llvm.cttz.i32(i32 %357, i1 true) #7, !range !8
  %361 = lshr i32 %360, 3
  %362 = getelementptr i8, ptr %352, i32 %361
  %363 = ptrtoint ptr %362 to i32
  %364 = sub i32 %363, %262
  br label %391

365:                                              ; preds = %348, %331
  %366 = phi ptr [ %260, %331 ], [ %352, %348 ]
  %367 = phi ptr [ %332, %331 ], [ %351, %348 ]
  %368 = getelementptr i8, ptr %337, i32 -1
  %369 = icmp ult ptr %366, %368
  br i1 %369, label %370, label %377

370:                                              ; preds = %365
  %371 = load i16, ptr %367, align 1
  %372 = load i16, ptr %366, align 1
  %373 = icmp eq i16 %371, %372
  br i1 %373, label %374, label %377

374:                                              ; preds = %370
  %375 = getelementptr i8, ptr %366, i32 2
  %376 = getelementptr i8, ptr %367, i32 2
  br label %377

377:                                              ; preds = %374, %370, %365
  %378 = phi ptr [ %375, %374 ], [ %366, %370 ], [ %366, %365 ]
  %379 = phi ptr [ %376, %374 ], [ %367, %370 ], [ %367, %365 ]
  %380 = icmp ult ptr %378, %337
  br i1 %380, label %381, label %387

381:                                              ; preds = %377
  %382 = load i8, ptr %379, align 1
  %383 = load i8, ptr %378, align 1
  %384 = icmp eq i8 %382, %383
  %385 = zext i1 %384 to i32
  %386 = getelementptr i8, ptr %378, i32 %385
  br label %387

387:                                              ; preds = %381, %377
  %388 = phi ptr [ %378, %377 ], [ %386, %381 ]
  %389 = ptrtoint ptr %388 to i32
  %390 = sub i32 %389, %262
  br label %391

391:                                              ; preds = %387, %359, %345
  %392 = phi i32 [ %390, %387 ], [ %347, %345 ], [ %364, %359 ]
  %393 = getelementptr i8, ptr %332, i32 %392
  %394 = icmp eq ptr %393, %219
  br i1 %394, label %395, label %453

395:                                              ; preds = %391
  %396 = getelementptr i8, ptr %260, i32 %392
  %397 = icmp ugt ptr %33, %396
  br i1 %397, label %398, label %424

398:                                              ; preds = %395
  %399 = load i32, ptr %218, align 1
  %400 = load i32, ptr %396, align 1
  %401 = xor i32 %400, %399
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %406, label %403

403:                                              ; preds = %398
  %404 = tail call i32 @llvm.cttz.i32(i32 %401, i1 true) #7, !range !8
  %405 = lshr i32 %404, 3
  br label %450

406:                                              ; preds = %412, %398
  %407 = phi ptr [ %410, %412 ], [ %396, %398 ]
  %408 = phi ptr [ %409, %412 ], [ %218, %398 ]
  %409 = getelementptr i8, ptr %408, i32 4
  %410 = getelementptr i8, ptr %407, i32 4
  %411 = icmp ult ptr %410, %33
  br i1 %411, label %412, label %424

412:                                              ; preds = %406
  %413 = load i32, ptr %409, align 1
  %414 = load i32, ptr %410, align 1
  %415 = xor i32 %414, %413
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %406, label %417

417:                                              ; preds = %412
  %418 = tail call i32 @llvm.cttz.i32(i32 %415, i1 true) #7, !range !8
  %419 = lshr i32 %418, 3
  %420 = getelementptr i8, ptr %410, i32 %419
  %421 = ptrtoint ptr %420 to i32
  %422 = ptrtoint ptr %396 to i32
  %423 = sub i32 %421, %422
  br label %450

424:                                              ; preds = %406, %395
  %425 = phi ptr [ %396, %395 ], [ %410, %406 ]
  %426 = phi ptr [ %218, %395 ], [ %409, %406 ]
  %427 = icmp ult ptr %425, %34
  br i1 %427, label %428, label %435

428:                                              ; preds = %424
  %429 = load i16, ptr %426, align 1
  %430 = load i16, ptr %425, align 1
  %431 = icmp eq i16 %429, %430
  br i1 %431, label %432, label %435

432:                                              ; preds = %428
  %433 = getelementptr i8, ptr %425, i32 2
  %434 = getelementptr i8, ptr %426, i32 2
  br label %435

435:                                              ; preds = %432, %428, %424
  %436 = phi ptr [ %433, %432 ], [ %425, %428 ], [ %425, %424 ]
  %437 = phi ptr [ %434, %432 ], [ %426, %428 ], [ %426, %424 ]
  %438 = icmp ult ptr %436, %6
  br i1 %438, label %439, label %445

439:                                              ; preds = %435
  %440 = load i8, ptr %437, align 1
  %441 = load i8, ptr %436, align 1
  %442 = icmp eq i8 %440, %441
  %443 = zext i1 %442 to i32
  %444 = getelementptr i8, ptr %436, i32 %443
  br label %445

445:                                              ; preds = %439, %435
  %446 = phi ptr [ %436, %435 ], [ %444, %439 ]
  %447 = ptrtoint ptr %446 to i32
  %448 = ptrtoint ptr %396 to i32
  %449 = sub i32 %447, %448
  br label %450

450:                                              ; preds = %445, %417, %403
  %451 = phi i32 [ %449, %445 ], [ %405, %403 ], [ %423, %417 ]
  %452 = add i32 %451, %392
  br label %453

453:                                              ; preds = %450, %391
  %454 = phi i32 [ %452, %450 ], [ %392, %391 ]
  %455 = add i32 %454, 4
  br label %456

456:                                              ; preds = %453, %323, %296, %282
  %457 = phi i32 [ %455, %453 ], [ %326, %323 ], [ %284, %282 ], [ %301, %296 ]
  %458 = icmp ugt i32 %457, %267
  br i1 %458, label %459, label %463

459:                                              ; preds = %456
  %460 = sub i32 %263, %266
  %461 = getelementptr i8, ptr %50, i32 %457
  %462 = icmp eq ptr %461, %6
  br i1 %462, label %1023, label %463

463:                                              ; preds = %459, %456, %327, %270
  %464 = phi i32 [ %460, %459 ], [ %265, %456 ], [ %265, %327 ], [ %265, %270 ]
  %465 = phi i32 [ %457, %459 ], [ %267, %456 ], [ %267, %327 ], [ %267, %270 ]
  %466 = icmp ugt i32 %266, %229
  br i1 %466, label %467, label %1023

467:                                              ; preds = %463
  %468 = and i32 %266, %214
  %469 = getelementptr i32, ptr %211, i32 %468
  %470 = add i32 %268, -1
  %471 = load i32, ptr %469, align 4
  %472 = icmp uge i32 %471, %228
  %473 = icmp ne i32 %470, 0
  %474 = and i1 %473, %472
  br i1 %474, label %264, label %1023

475:                                              ; preds = %207
  %476 = load ptr, ptr %42, align 4
  %477 = load i32, ptr %43, align 4
  %478 = shl nuw i32 1, %477
  %479 = add i32 %478, -1
  %480 = load ptr, ptr %8, align 4
  %481 = load ptr, ptr %13, align 4
  %482 = load i32, ptr %10, align 4
  %483 = getelementptr i8, ptr %480, i32 %482
  %484 = getelementptr i8, ptr %481, i32 %482
  %485 = ptrtoint ptr %480 to i32
  %486 = sub i32 %55, %485
  %487 = load i32, ptr %27, align 4
  %488 = shl nuw i32 1, %487
  %489 = sub i32 %486, %49
  %490 = icmp ugt i32 %489, %488
  %491 = sub i32 %486, %488
  %492 = select i1 %62, i1 %490, i1 false
  %493 = select i1 %492, i32 %491, i32 %49
  %494 = tail call i32 @llvm.usub.sat.i32(i32 %486, i32 %478) #7
  %495 = load i32, ptr %44, align 4
  %496 = shl nuw i32 1, %495
  %497 = load ptr, ptr %45, align 4
  %498 = load i32, ptr %46, align 4
  %499 = shl nsw i32 -1, %477
  %500 = xor i32 %499, -1
  %501 = load i32, ptr %47, align 4
  %502 = icmp ult i32 %501, %486
  %503 = sub i32 64, %498
  %504 = zext i32 %503 to i64
  br i1 %502, label %505, label %518

505:                                              ; preds = %505, %475
  %506 = phi i32 [ %516, %505 ], [ %501, %475 ]
  %507 = getelementptr i8, ptr %480, i32 %506
  %508 = load i64, ptr %507, align 1
  %509 = mul i64 %508, -3523014627271114752
  %510 = lshr i64 %509, %504
  %511 = trunc i64 %510 to i32
  %512 = getelementptr i32, ptr %497, i32 %511
  %513 = load i32, ptr %512, align 4
  %514 = and i32 %506, %500
  %515 = getelementptr i32, ptr %476, i32 %514
  store i32 %513, ptr %515, align 4
  store i32 %506, ptr %512, align 4
  %516 = add nuw i32 %506, 1
  %517 = icmp ult i32 %516, %486
  br i1 %517, label %505, label %518

518:                                              ; preds = %505, %475
  store i32 %486, ptr %47, align 4
  %519 = load i64, ptr %50, align 1
  %520 = mul i64 %519, -3523014627271114752
  %521 = lshr i64 %520, %504
  %522 = trunc i64 %521 to i32
  %523 = getelementptr i32, ptr %497, i32 %522
  %524 = load i32, ptr %523, align 4
  %525 = icmp ult i32 %524, %493
  %526 = lshr i64 %519, 32
  %527 = trunc i64 %526 to i32
  br i1 %525, label %1023, label %528

528:                                              ; preds = %518
  %529 = trunc i64 %519 to i32
  %530 = icmp ugt ptr %33, %50
  %531 = getelementptr i8, ptr %50, i32 4
  %532 = ptrtoint ptr %484 to i32
  %533 = ptrtoint ptr %531 to i32
  %534 = add i32 %486, 2
  br label %535

535:                                              ; preds = %741, %528
  %536 = phi i32 [ %529, %528 ], [ %737, %741 ]
  %537 = phi i32 [ 999999999, %528 ], [ %738, %741 ]
  %538 = phi i32 [ %524, %528 ], [ %745, %741 ]
  %539 = phi i32 [ 3, %528 ], [ %739, %741 ]
  %540 = phi i32 [ %496, %528 ], [ %744, %741 ]
  %541 = icmp ult i32 %538, %482
  br i1 %541, label %599, label %542

542:                                              ; preds = %535
  %543 = getelementptr i8, ptr %480, i32 %538
  %544 = getelementptr i8, ptr %543, i32 %539
  %545 = load i8, ptr %544, align 1
  %546 = getelementptr i8, ptr %50, i32 %539
  %547 = load i8, ptr %546, align 1
  %548 = icmp eq i8 %545, %547
  br i1 %548, label %549, label %736

549:                                              ; preds = %542
  br i1 %530, label %550, label %574

550:                                              ; preds = %549
  %551 = load i32, ptr %543, align 1
  %552 = xor i32 %536, %551
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %557, label %554

554:                                              ; preds = %550
  %555 = tail call i32 @llvm.cttz.i32(i32 %552, i1 true) #7, !range !8
  %556 = lshr i32 %555, 3
  br label %728

557:                                              ; preds = %563, %550
  %558 = phi ptr [ %561, %563 ], [ %50, %550 ]
  %559 = phi ptr [ %560, %563 ], [ %543, %550 ]
  %560 = getelementptr i8, ptr %559, i32 4
  %561 = getelementptr i8, ptr %558, i32 4
  %562 = icmp ult ptr %561, %33
  br i1 %562, label %563, label %574

563:                                              ; preds = %557
  %564 = load i32, ptr %560, align 1
  %565 = load i32, ptr %561, align 1
  %566 = xor i32 %565, %564
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %557, label %568

568:                                              ; preds = %563
  %569 = tail call i32 @llvm.cttz.i32(i32 %566, i1 true) #7, !range !8
  %570 = lshr i32 %569, 3
  %571 = getelementptr i8, ptr %561, i32 %570
  %572 = ptrtoint ptr %571 to i32
  %573 = sub i32 %572, %55
  br label %728

574:                                              ; preds = %557, %549
  %575 = phi ptr [ %50, %549 ], [ %561, %557 ]
  %576 = phi ptr [ %543, %549 ], [ %560, %557 ]
  %577 = icmp ult ptr %575, %34
  br i1 %577, label %578, label %585

578:                                              ; preds = %574
  %579 = load i16, ptr %576, align 1
  %580 = load i16, ptr %575, align 1
  %581 = icmp eq i16 %579, %580
  br i1 %581, label %582, label %585

582:                                              ; preds = %578
  %583 = getelementptr i8, ptr %575, i32 2
  %584 = getelementptr i8, ptr %576, i32 2
  br label %585

585:                                              ; preds = %582, %578, %574
  %586 = phi ptr [ %583, %582 ], [ %575, %578 ], [ %575, %574 ]
  %587 = phi ptr [ %584, %582 ], [ %576, %578 ], [ %576, %574 ]
  %588 = icmp ult ptr %586, %6
  br i1 %588, label %589, label %595

589:                                              ; preds = %585
  %590 = load i8, ptr %587, align 1
  %591 = load i8, ptr %586, align 1
  %592 = icmp eq i8 %590, %591
  %593 = zext i1 %592 to i32
  %594 = getelementptr i8, ptr %586, i32 %593
  br label %595

595:                                              ; preds = %589, %585
  %596 = phi ptr [ %586, %585 ], [ %594, %589 ]
  %597 = ptrtoint ptr %596 to i32
  %598 = sub i32 %597, %55
  br label %728

599:                                              ; preds = %535
  %600 = getelementptr i8, ptr %481, i32 %538
  %601 = load i32, ptr %600, align 1
  %602 = load i32, ptr %50, align 1
  %603 = icmp eq i32 %601, %602
  br i1 %603, label %604, label %736

604:                                              ; preds = %599
  %605 = getelementptr i8, ptr %600, i32 4
  %606 = ptrtoint ptr %605 to i32
  %607 = sub i32 %532, %606
  %608 = getelementptr i8, ptr %531, i32 %607
  %609 = icmp ult ptr %608, %6
  %610 = select i1 %609, ptr %608, ptr %6
  %611 = getelementptr i8, ptr %610, i32 -3
  %612 = icmp ugt ptr %611, %531
  br i1 %612, label %613, label %637

613:                                              ; preds = %604
  %614 = load i32, ptr %605, align 1
  %615 = xor i32 %614, %527
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %620, label %617

617:                                              ; preds = %613
  %618 = tail call i32 @llvm.cttz.i32(i32 %615, i1 true) #7, !range !8
  %619 = lshr i32 %618, 3
  br label %663

620:                                              ; preds = %626, %613
  %621 = phi ptr [ %624, %626 ], [ %531, %613 ]
  %622 = phi ptr [ %623, %626 ], [ %605, %613 ]
  %623 = getelementptr i8, ptr %622, i32 4
  %624 = getelementptr i8, ptr %621, i32 4
  %625 = icmp ult ptr %624, %611
  br i1 %625, label %626, label %637

626:                                              ; preds = %620
  %627 = load i32, ptr %623, align 1
  %628 = load i32, ptr %624, align 1
  %629 = xor i32 %628, %627
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %620, label %631

631:                                              ; preds = %626
  %632 = tail call i32 @llvm.cttz.i32(i32 %629, i1 true) #7, !range !8
  %633 = lshr i32 %632, 3
  %634 = getelementptr i8, ptr %624, i32 %633
  %635 = ptrtoint ptr %634 to i32
  %636 = sub i32 %635, %533
  br label %663

637:                                              ; preds = %620, %604
  %638 = phi ptr [ %531, %604 ], [ %624, %620 ]
  %639 = phi ptr [ %605, %604 ], [ %623, %620 ]
  %640 = getelementptr i8, ptr %610, i32 -1
  %641 = icmp ult ptr %638, %640
  br i1 %641, label %642, label %649

642:                                              ; preds = %637
  %643 = load i16, ptr %639, align 1
  %644 = load i16, ptr %638, align 1
  %645 = icmp eq i16 %643, %644
  br i1 %645, label %646, label %649

646:                                              ; preds = %642
  %647 = getelementptr i8, ptr %638, i32 2
  %648 = getelementptr i8, ptr %639, i32 2
  br label %649

649:                                              ; preds = %646, %642, %637
  %650 = phi ptr [ %647, %646 ], [ %638, %642 ], [ %638, %637 ]
  %651 = phi ptr [ %648, %646 ], [ %639, %642 ], [ %639, %637 ]
  %652 = icmp ult ptr %650, %610
  br i1 %652, label %653, label %659

653:                                              ; preds = %649
  %654 = load i8, ptr %651, align 1
  %655 = load i8, ptr %650, align 1
  %656 = icmp eq i8 %654, %655
  %657 = zext i1 %656 to i32
  %658 = getelementptr i8, ptr %650, i32 %657
  br label %659

659:                                              ; preds = %653, %649
  %660 = phi ptr [ %650, %649 ], [ %658, %653 ]
  %661 = ptrtoint ptr %660 to i32
  %662 = sub i32 %661, %533
  br label %663

663:                                              ; preds = %659, %631, %617
  %664 = phi i32 [ %662, %659 ], [ %619, %617 ], [ %636, %631 ]
  %665 = getelementptr i8, ptr %605, i32 %664
  %666 = icmp eq ptr %665, %484
  br i1 %666, label %667, label %725

667:                                              ; preds = %663
  %668 = getelementptr i8, ptr %531, i32 %664
  %669 = icmp ugt ptr %33, %668
  br i1 %669, label %670, label %696

670:                                              ; preds = %667
  %671 = load i32, ptr %483, align 1
  %672 = load i32, ptr %668, align 1
  %673 = xor i32 %672, %671
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %678, label %675

675:                                              ; preds = %670
  %676 = tail call i32 @llvm.cttz.i32(i32 %673, i1 true) #7, !range !8
  %677 = lshr i32 %676, 3
  br label %722

678:                                              ; preds = %684, %670
  %679 = phi ptr [ %682, %684 ], [ %668, %670 ]
  %680 = phi ptr [ %681, %684 ], [ %483, %670 ]
  %681 = getelementptr i8, ptr %680, i32 4
  %682 = getelementptr i8, ptr %679, i32 4
  %683 = icmp ult ptr %682, %33
  br i1 %683, label %684, label %696

684:                                              ; preds = %678
  %685 = load i32, ptr %681, align 1
  %686 = load i32, ptr %682, align 1
  %687 = xor i32 %686, %685
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %678, label %689

689:                                              ; preds = %684
  %690 = tail call i32 @llvm.cttz.i32(i32 %687, i1 true) #7, !range !8
  %691 = lshr i32 %690, 3
  %692 = getelementptr i8, ptr %682, i32 %691
  %693 = ptrtoint ptr %692 to i32
  %694 = ptrtoint ptr %668 to i32
  %695 = sub i32 %693, %694
  br label %722

696:                                              ; preds = %678, %667
  %697 = phi ptr [ %668, %667 ], [ %682, %678 ]
  %698 = phi ptr [ %483, %667 ], [ %681, %678 ]
  %699 = icmp ult ptr %697, %34
  br i1 %699, label %700, label %707

700:                                              ; preds = %696
  %701 = load i16, ptr %698, align 1
  %702 = load i16, ptr %697, align 1
  %703 = icmp eq i16 %701, %702
  br i1 %703, label %704, label %707

704:                                              ; preds = %700
  %705 = getelementptr i8, ptr %697, i32 2
  %706 = getelementptr i8, ptr %698, i32 2
  br label %707

707:                                              ; preds = %704, %700, %696
  %708 = phi ptr [ %705, %704 ], [ %697, %700 ], [ %697, %696 ]
  %709 = phi ptr [ %706, %704 ], [ %698, %700 ], [ %698, %696 ]
  %710 = icmp ult ptr %708, %6
  br i1 %710, label %711, label %717

711:                                              ; preds = %707
  %712 = load i8, ptr %709, align 1
  %713 = load i8, ptr %708, align 1
  %714 = icmp eq i8 %712, %713
  %715 = zext i1 %714 to i32
  %716 = getelementptr i8, ptr %708, i32 %715
  br label %717

717:                                              ; preds = %711, %707
  %718 = phi ptr [ %708, %707 ], [ %716, %711 ]
  %719 = ptrtoint ptr %718 to i32
  %720 = ptrtoint ptr %668 to i32
  %721 = sub i32 %719, %720
  br label %722

722:                                              ; preds = %717, %689, %675
  %723 = phi i32 [ %721, %717 ], [ %677, %675 ], [ %695, %689 ]
  %724 = add i32 %723, %664
  br label %725

725:                                              ; preds = %722, %663
  %726 = phi i32 [ %724, %722 ], [ %664, %663 ]
  %727 = add i32 %726, 4
  br label %728

728:                                              ; preds = %725, %595, %568, %554
  %729 = phi i32 [ %601, %725 ], [ %536, %595 ], [ %536, %554 ], [ %536, %568 ]
  %730 = phi i32 [ %727, %725 ], [ %598, %595 ], [ %556, %554 ], [ %573, %568 ]
  %731 = icmp ugt i32 %730, %539
  br i1 %731, label %732, label %736

732:                                              ; preds = %728
  %733 = sub i32 %534, %538
  %734 = getelementptr i8, ptr %50, i32 %730
  %735 = icmp eq ptr %734, %6
  br i1 %735, label %1023, label %736

736:                                              ; preds = %732, %728, %599, %542
  %737 = phi i32 [ %729, %732 ], [ %729, %728 ], [ %602, %599 ], [ %536, %542 ]
  %738 = phi i32 [ %733, %732 ], [ %537, %728 ], [ %537, %599 ], [ %537, %542 ]
  %739 = phi i32 [ %730, %732 ], [ %539, %728 ], [ %539, %599 ], [ %539, %542 ]
  %740 = icmp ugt i32 %538, %494
  br i1 %740, label %741, label %1023

741:                                              ; preds = %736
  %742 = and i32 %538, %479
  %743 = getelementptr i32, ptr %476, i32 %742
  %744 = add i32 %540, -1
  %745 = load i32, ptr %743, align 4
  %746 = icmp uge i32 %745, %493
  %747 = icmp ne i32 %744, 0
  %748 = and i1 %747, %746
  br i1 %748, label %535, label %1023

749:                                              ; preds = %207, %207
  %750 = load ptr, ptr %42, align 4
  %751 = load i32, ptr %43, align 4
  %752 = shl nuw i32 1, %751
  %753 = add i32 %752, -1
  %754 = load ptr, ptr %8, align 4
  %755 = load ptr, ptr %13, align 4
  %756 = load i32, ptr %10, align 4
  %757 = getelementptr i8, ptr %754, i32 %756
  %758 = getelementptr i8, ptr %755, i32 %756
  %759 = ptrtoint ptr %754 to i32
  %760 = sub i32 %55, %759
  %761 = load i32, ptr %27, align 4
  %762 = shl nuw i32 1, %761
  %763 = sub i32 %760, %49
  %764 = icmp ugt i32 %763, %762
  %765 = sub i32 %760, %762
  %766 = select i1 %62, i1 %764, i1 false
  %767 = select i1 %766, i32 %765, i32 %49
  %768 = tail call i32 @llvm.usub.sat.i32(i32 %760, i32 %752) #7
  %769 = load i32, ptr %44, align 4
  %770 = shl nuw i32 1, %769
  %771 = load ptr, ptr %45, align 4
  %772 = load i32, ptr %46, align 4
  %773 = shl nsw i32 -1, %751
  %774 = xor i32 %773, -1
  %775 = load i32, ptr %47, align 4
  %776 = icmp ult i32 %775, %760
  %777 = sub i32 64, %772
  %778 = zext i32 %777 to i64
  br i1 %776, label %779, label %792

779:                                              ; preds = %779, %749
  %780 = phi i32 [ %790, %779 ], [ %775, %749 ]
  %781 = getelementptr i8, ptr %754, i32 %780
  %782 = load i64, ptr %781, align 1
  %783 = mul i64 %782, -3523014627193847808
  %784 = lshr i64 %783, %778
  %785 = trunc i64 %784 to i32
  %786 = getelementptr i32, ptr %771, i32 %785
  %787 = load i32, ptr %786, align 4
  %788 = and i32 %780, %774
  %789 = getelementptr i32, ptr %750, i32 %788
  store i32 %787, ptr %789, align 4
  store i32 %780, ptr %786, align 4
  %790 = add nuw i32 %780, 1
  %791 = icmp ult i32 %790, %760
  br i1 %791, label %779, label %792

792:                                              ; preds = %779, %749
  store i32 %760, ptr %47, align 4
  %793 = load i64, ptr %50, align 1
  %794 = mul i64 %793, -3523014627193847808
  %795 = lshr i64 %794, %778
  %796 = trunc i64 %795 to i32
  %797 = getelementptr i32, ptr %771, i32 %796
  %798 = load i32, ptr %797, align 4
  %799 = icmp ult i32 %798, %767
  %800 = lshr i64 %793, 32
  %801 = trunc i64 %800 to i32
  br i1 %799, label %1023, label %802

802:                                              ; preds = %792
  %803 = trunc i64 %793 to i32
  %804 = icmp ugt ptr %33, %50
  %805 = getelementptr i8, ptr %50, i32 4
  %806 = ptrtoint ptr %758 to i32
  %807 = ptrtoint ptr %805 to i32
  %808 = add i32 %760, 2
  br label %809

809:                                              ; preds = %1015, %802
  %810 = phi i32 [ %803, %802 ], [ %1011, %1015 ]
  %811 = phi i32 [ 999999999, %802 ], [ %1012, %1015 ]
  %812 = phi i32 [ %798, %802 ], [ %1019, %1015 ]
  %813 = phi i32 [ 3, %802 ], [ %1013, %1015 ]
  %814 = phi i32 [ %770, %802 ], [ %1018, %1015 ]
  %815 = icmp ult i32 %812, %756
  br i1 %815, label %873, label %816

816:                                              ; preds = %809
  %817 = getelementptr i8, ptr %754, i32 %812
  %818 = getelementptr i8, ptr %817, i32 %813
  %819 = load i8, ptr %818, align 1
  %820 = getelementptr i8, ptr %50, i32 %813
  %821 = load i8, ptr %820, align 1
  %822 = icmp eq i8 %819, %821
  br i1 %822, label %823, label %1010

823:                                              ; preds = %816
  br i1 %804, label %824, label %848

824:                                              ; preds = %823
  %825 = load i32, ptr %817, align 1
  %826 = xor i32 %810, %825
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %831, label %828

828:                                              ; preds = %824
  %829 = tail call i32 @llvm.cttz.i32(i32 %826, i1 true) #7, !range !8
  %830 = lshr i32 %829, 3
  br label %1002

831:                                              ; preds = %837, %824
  %832 = phi ptr [ %835, %837 ], [ %50, %824 ]
  %833 = phi ptr [ %834, %837 ], [ %817, %824 ]
  %834 = getelementptr i8, ptr %833, i32 4
  %835 = getelementptr i8, ptr %832, i32 4
  %836 = icmp ult ptr %835, %33
  br i1 %836, label %837, label %848

837:                                              ; preds = %831
  %838 = load i32, ptr %834, align 1
  %839 = load i32, ptr %835, align 1
  %840 = xor i32 %839, %838
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %831, label %842

842:                                              ; preds = %837
  %843 = tail call i32 @llvm.cttz.i32(i32 %840, i1 true) #7, !range !8
  %844 = lshr i32 %843, 3
  %845 = getelementptr i8, ptr %835, i32 %844
  %846 = ptrtoint ptr %845 to i32
  %847 = sub i32 %846, %55
  br label %1002

848:                                              ; preds = %831, %823
  %849 = phi ptr [ %50, %823 ], [ %835, %831 ]
  %850 = phi ptr [ %817, %823 ], [ %834, %831 ]
  %851 = icmp ult ptr %849, %34
  br i1 %851, label %852, label %859

852:                                              ; preds = %848
  %853 = load i16, ptr %850, align 1
  %854 = load i16, ptr %849, align 1
  %855 = icmp eq i16 %853, %854
  br i1 %855, label %856, label %859

856:                                              ; preds = %852
  %857 = getelementptr i8, ptr %849, i32 2
  %858 = getelementptr i8, ptr %850, i32 2
  br label %859

859:                                              ; preds = %856, %852, %848
  %860 = phi ptr [ %857, %856 ], [ %849, %852 ], [ %849, %848 ]
  %861 = phi ptr [ %858, %856 ], [ %850, %852 ], [ %850, %848 ]
  %862 = icmp ult ptr %860, %6
  br i1 %862, label %863, label %869

863:                                              ; preds = %859
  %864 = load i8, ptr %861, align 1
  %865 = load i8, ptr %860, align 1
  %866 = icmp eq i8 %864, %865
  %867 = zext i1 %866 to i32
  %868 = getelementptr i8, ptr %860, i32 %867
  br label %869

869:                                              ; preds = %863, %859
  %870 = phi ptr [ %860, %859 ], [ %868, %863 ]
  %871 = ptrtoint ptr %870 to i32
  %872 = sub i32 %871, %55
  br label %1002

873:                                              ; preds = %809
  %874 = getelementptr i8, ptr %755, i32 %812
  %875 = load i32, ptr %874, align 1
  %876 = load i32, ptr %50, align 1
  %877 = icmp eq i32 %875, %876
  br i1 %877, label %878, label %1010

878:                                              ; preds = %873
  %879 = getelementptr i8, ptr %874, i32 4
  %880 = ptrtoint ptr %879 to i32
  %881 = sub i32 %806, %880
  %882 = getelementptr i8, ptr %805, i32 %881
  %883 = icmp ult ptr %882, %6
  %884 = select i1 %883, ptr %882, ptr %6
  %885 = getelementptr i8, ptr %884, i32 -3
  %886 = icmp ugt ptr %885, %805
  br i1 %886, label %887, label %911

887:                                              ; preds = %878
  %888 = load i32, ptr %879, align 1
  %889 = xor i32 %888, %801
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %894, label %891

891:                                              ; preds = %887
  %892 = tail call i32 @llvm.cttz.i32(i32 %889, i1 true) #7, !range !8
  %893 = lshr i32 %892, 3
  br label %937

894:                                              ; preds = %900, %887
  %895 = phi ptr [ %898, %900 ], [ %805, %887 ]
  %896 = phi ptr [ %897, %900 ], [ %879, %887 ]
  %897 = getelementptr i8, ptr %896, i32 4
  %898 = getelementptr i8, ptr %895, i32 4
  %899 = icmp ult ptr %898, %885
  br i1 %899, label %900, label %911

900:                                              ; preds = %894
  %901 = load i32, ptr %897, align 1
  %902 = load i32, ptr %898, align 1
  %903 = xor i32 %902, %901
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %894, label %905

905:                                              ; preds = %900
  %906 = tail call i32 @llvm.cttz.i32(i32 %903, i1 true) #7, !range !8
  %907 = lshr i32 %906, 3
  %908 = getelementptr i8, ptr %898, i32 %907
  %909 = ptrtoint ptr %908 to i32
  %910 = sub i32 %909, %807
  br label %937

911:                                              ; preds = %894, %878
  %912 = phi ptr [ %805, %878 ], [ %898, %894 ]
  %913 = phi ptr [ %879, %878 ], [ %897, %894 ]
  %914 = getelementptr i8, ptr %884, i32 -1
  %915 = icmp ult ptr %912, %914
  br i1 %915, label %916, label %923

916:                                              ; preds = %911
  %917 = load i16, ptr %913, align 1
  %918 = load i16, ptr %912, align 1
  %919 = icmp eq i16 %917, %918
  br i1 %919, label %920, label %923

920:                                              ; preds = %916
  %921 = getelementptr i8, ptr %912, i32 2
  %922 = getelementptr i8, ptr %913, i32 2
  br label %923

923:                                              ; preds = %920, %916, %911
  %924 = phi ptr [ %921, %920 ], [ %912, %916 ], [ %912, %911 ]
  %925 = phi ptr [ %922, %920 ], [ %913, %916 ], [ %913, %911 ]
  %926 = icmp ult ptr %924, %884
  br i1 %926, label %927, label %933

927:                                              ; preds = %923
  %928 = load i8, ptr %925, align 1
  %929 = load i8, ptr %924, align 1
  %930 = icmp eq i8 %928, %929
  %931 = zext i1 %930 to i32
  %932 = getelementptr i8, ptr %924, i32 %931
  br label %933

933:                                              ; preds = %927, %923
  %934 = phi ptr [ %924, %923 ], [ %932, %927 ]
  %935 = ptrtoint ptr %934 to i32
  %936 = sub i32 %935, %807
  br label %937

937:                                              ; preds = %933, %905, %891
  %938 = phi i32 [ %936, %933 ], [ %893, %891 ], [ %910, %905 ]
  %939 = getelementptr i8, ptr %879, i32 %938
  %940 = icmp eq ptr %939, %758
  br i1 %940, label %941, label %999

941:                                              ; preds = %937
  %942 = getelementptr i8, ptr %805, i32 %938
  %943 = icmp ugt ptr %33, %942
  br i1 %943, label %944, label %970

944:                                              ; preds = %941
  %945 = load i32, ptr %757, align 1
  %946 = load i32, ptr %942, align 1
  %947 = xor i32 %946, %945
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %952, label %949

949:                                              ; preds = %944
  %950 = tail call i32 @llvm.cttz.i32(i32 %947, i1 true) #7, !range !8
  %951 = lshr i32 %950, 3
  br label %996

952:                                              ; preds = %958, %944
  %953 = phi ptr [ %956, %958 ], [ %942, %944 ]
  %954 = phi ptr [ %955, %958 ], [ %757, %944 ]
  %955 = getelementptr i8, ptr %954, i32 4
  %956 = getelementptr i8, ptr %953, i32 4
  %957 = icmp ult ptr %956, %33
  br i1 %957, label %958, label %970

958:                                              ; preds = %952
  %959 = load i32, ptr %955, align 1
  %960 = load i32, ptr %956, align 1
  %961 = xor i32 %960, %959
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %952, label %963

963:                                              ; preds = %958
  %964 = tail call i32 @llvm.cttz.i32(i32 %961, i1 true) #7, !range !8
  %965 = lshr i32 %964, 3
  %966 = getelementptr i8, ptr %956, i32 %965
  %967 = ptrtoint ptr %966 to i32
  %968 = ptrtoint ptr %942 to i32
  %969 = sub i32 %967, %968
  br label %996

970:                                              ; preds = %952, %941
  %971 = phi ptr [ %942, %941 ], [ %956, %952 ]
  %972 = phi ptr [ %757, %941 ], [ %955, %952 ]
  %973 = icmp ult ptr %971, %34
  br i1 %973, label %974, label %981

974:                                              ; preds = %970
  %975 = load i16, ptr %972, align 1
  %976 = load i16, ptr %971, align 1
  %977 = icmp eq i16 %975, %976
  br i1 %977, label %978, label %981

978:                                              ; preds = %974
  %979 = getelementptr i8, ptr %971, i32 2
  %980 = getelementptr i8, ptr %972, i32 2
  br label %981

981:                                              ; preds = %978, %974, %970
  %982 = phi ptr [ %979, %978 ], [ %971, %974 ], [ %971, %970 ]
  %983 = phi ptr [ %980, %978 ], [ %972, %974 ], [ %972, %970 ]
  %984 = icmp ult ptr %982, %6
  br i1 %984, label %985, label %991

985:                                              ; preds = %981
  %986 = load i8, ptr %983, align 1
  %987 = load i8, ptr %982, align 1
  %988 = icmp eq i8 %986, %987
  %989 = zext i1 %988 to i32
  %990 = getelementptr i8, ptr %982, i32 %989
  br label %991

991:                                              ; preds = %985, %981
  %992 = phi ptr [ %982, %981 ], [ %990, %985 ]
  %993 = ptrtoint ptr %992 to i32
  %994 = ptrtoint ptr %942 to i32
  %995 = sub i32 %993, %994
  br label %996

996:                                              ; preds = %991, %963, %949
  %997 = phi i32 [ %995, %991 ], [ %951, %949 ], [ %969, %963 ]
  %998 = add i32 %997, %938
  br label %999

999:                                              ; preds = %996, %937
  %1000 = phi i32 [ %998, %996 ], [ %938, %937 ]
  %1001 = add i32 %1000, 4
  br label %1002

1002:                                             ; preds = %999, %869, %842, %828
  %1003 = phi i32 [ %875, %999 ], [ %810, %869 ], [ %810, %828 ], [ %810, %842 ]
  %1004 = phi i32 [ %1001, %999 ], [ %872, %869 ], [ %830, %828 ], [ %847, %842 ]
  %1005 = icmp ugt i32 %1004, %813
  br i1 %1005, label %1006, label %1010

1006:                                             ; preds = %1002
  %1007 = sub i32 %808, %812
  %1008 = getelementptr i8, ptr %50, i32 %1004
  %1009 = icmp eq ptr %1008, %6
  br i1 %1009, label %1023, label %1010

1010:                                             ; preds = %1006, %1002, %873, %816
  %1011 = phi i32 [ %1003, %1006 ], [ %1003, %1002 ], [ %876, %873 ], [ %810, %816 ]
  %1012 = phi i32 [ %1007, %1006 ], [ %811, %1002 ], [ %811, %873 ], [ %811, %816 ]
  %1013 = phi i32 [ %1004, %1006 ], [ %813, %1002 ], [ %813, %873 ], [ %813, %816 ]
  %1014 = icmp ugt i32 %812, %768
  br i1 %1014, label %1015, label %1023

1015:                                             ; preds = %1010
  %1016 = and i32 %812, %753
  %1017 = getelementptr i32, ptr %750, i32 %1016
  %1018 = add i32 %814, -1
  %1019 = load i32, ptr %1017, align 4
  %1020 = icmp uge i32 %1019, %767
  %1021 = icmp ne i32 %1018, 0
  %1022 = and i1 %1021, %1020
  br i1 %1022, label %809, label %1023

1023:                                             ; preds = %1015, %1010, %1006, %792, %741, %736, %732, %518, %467, %463, %459, %251
  %1024 = phi i32 [ %221, %251 ], [ %486, %518 ], [ %760, %792 ], [ %221, %467 ], [ %221, %463 ], [ %221, %459 ], [ %760, %1015 ], [ %760, %1010 ], [ %760, %1006 ], [ %486, %741 ], [ %486, %736 ], [ %486, %732 ]
  %1025 = phi i32 [ 999999999, %251 ], [ 999999999, %518 ], [ 999999999, %792 ], [ %460, %459 ], [ %464, %463 ], [ %464, %467 ], [ %1007, %1006 ], [ %1012, %1010 ], [ %1012, %1015 ], [ %733, %732 ], [ %738, %736 ], [ %738, %741 ]
  %1026 = phi i32 [ 3, %251 ], [ 3, %518 ], [ 3, %792 ], [ %457, %459 ], [ %465, %463 ], [ %465, %467 ], [ %1004, %1006 ], [ %1013, %1010 ], [ %1013, %1015 ], [ %730, %732 ], [ %739, %736 ], [ %739, %741 ]
  %1027 = tail call i32 @llvm.umax.i32(i32 %1026, i32 %208) #7
  %1028 = icmp ult i32 %1027, 4
  br i1 %1028, label %1029, label %1035

1029:                                             ; preds = %1023
  %1030 = ptrtoint ptr %51 to i32
  %1031 = sub i32 %55, %1030
  %1032 = ashr i32 %1031, 8
  %1033 = add nsw i32 %1032, 1
  %1034 = getelementptr i8, ptr %50, i32 %1033
  br label %2376

1035:                                             ; preds = %1023
  %1036 = icmp ugt i32 %1026, %208
  %1037 = select i1 %1036, ptr %50, ptr %54
  %1038 = select i1 %1036, i32 %1025, i32 0
  %1039 = icmp ult ptr %50, %7
  br i1 %1039, label %1040, label %2060

1040:                                             ; preds = %2058, %1035
  %1041 = phi i32 [ %2040, %2058 ], [ %1024, %1035 ]
  %1042 = phi ptr [ %1047, %2058 ], [ %50, %1035 ]
  %1043 = phi i32 [ %2042, %2058 ], [ %1027, %1035 ]
  %1044 = phi i32 [ %1048, %2058 ], [ %56, %1035 ]
  %1045 = phi ptr [ %1047, %2058 ], [ %1037, %1035 ]
  %1046 = phi i32 [ %2041, %2058 ], [ %1038, %1035 ]
  %1047 = getelementptr i8, ptr %1042, i32 1
  %1048 = add i32 %1044, 1
  %1049 = icmp eq i32 %1046, 0
  br i1 %1049, label %1212, label %1050

1050:                                             ; preds = %1040
  %1051 = load i32, ptr %16, align 4
  %1052 = sub i32 %1048, %1051
  %1053 = icmp ugt i32 %1052, %30
  %1054 = sub i32 %1048, %30
  %1055 = load i32, ptr %31, align 4
  %1056 = icmp eq i32 %1055, 0
  %1057 = select i1 %1056, i1 %1053, i1 false
  %1058 = select i1 %1057, i32 %1054, i32 %1051
  %1059 = sub i32 %1048, %52
  %1060 = icmp ult i32 %1059, %11
  %1061 = select i1 %1060, ptr %14, ptr %9
  %1062 = getelementptr i8, ptr %1061, i32 %1059
  %1063 = sub i32 %32, %1059
  %1064 = icmp ugt i32 %1063, 2
  %1065 = icmp ugt i32 %1059, %1058
  %1066 = and i1 %1064, %1065
  br i1 %1066, label %1067, label %1212

1067:                                             ; preds = %1050
  %1068 = load i32, ptr %1047, align 1
  %1069 = load i32, ptr %1062, align 1
  %1070 = icmp eq i32 %1068, %1069
  br i1 %1070, label %1071, label %1212

1071:                                             ; preds = %1067
  %1072 = select i1 %1060, ptr %15, ptr %6
  %1073 = getelementptr i8, ptr %1042, i32 5
  %1074 = getelementptr i8, ptr %1062, i32 4
  %1075 = ptrtoint ptr %1072 to i32
  %1076 = ptrtoint ptr %1074 to i32
  %1077 = sub i32 %1075, %1076
  %1078 = getelementptr i8, ptr %1073, i32 %1077
  %1079 = icmp ult ptr %1078, %6
  %1080 = select i1 %1079, ptr %1078, ptr %6
  %1081 = getelementptr i8, ptr %1080, i32 -3
  %1082 = icmp ugt ptr %1081, %1073
  br i1 %1082, label %1083, label %1109

1083:                                             ; preds = %1071
  %1084 = load i32, ptr %1074, align 1
  %1085 = load i32, ptr %1073, align 1
  %1086 = xor i32 %1085, %1084
  %1087 = icmp eq i32 %1086, 0
  br i1 %1087, label %1091, label %1088

1088:                                             ; preds = %1083
  %1089 = tail call i32 @llvm.cttz.i32(i32 %1086, i1 true) #7, !range !8
  %1090 = lshr i32 %1089, 3
  br label %1136

1091:                                             ; preds = %1097, %1083
  %1092 = phi ptr [ %1095, %1097 ], [ %1073, %1083 ]
  %1093 = phi ptr [ %1094, %1097 ], [ %1074, %1083 ]
  %1094 = getelementptr i8, ptr %1093, i32 4
  %1095 = getelementptr i8, ptr %1092, i32 4
  %1096 = icmp ult ptr %1095, %1081
  br i1 %1096, label %1097, label %1109

1097:                                             ; preds = %1091
  %1098 = load i32, ptr %1094, align 1
  %1099 = load i32, ptr %1095, align 1
  %1100 = xor i32 %1099, %1098
  %1101 = icmp eq i32 %1100, 0
  br i1 %1101, label %1091, label %1102

1102:                                             ; preds = %1097
  %1103 = tail call i32 @llvm.cttz.i32(i32 %1100, i1 true) #7, !range !8
  %1104 = lshr i32 %1103, 3
  %1105 = getelementptr i8, ptr %1095, i32 %1104
  %1106 = ptrtoint ptr %1105 to i32
  %1107 = ptrtoint ptr %1073 to i32
  %1108 = sub i32 %1106, %1107
  br label %1136

1109:                                             ; preds = %1091, %1071
  %1110 = phi ptr [ %1073, %1071 ], [ %1095, %1091 ]
  %1111 = phi ptr [ %1074, %1071 ], [ %1094, %1091 ]
  %1112 = getelementptr i8, ptr %1080, i32 -1
  %1113 = icmp ult ptr %1110, %1112
  br i1 %1113, label %1114, label %1121

1114:                                             ; preds = %1109
  %1115 = load i16, ptr %1111, align 1
  %1116 = load i16, ptr %1110, align 1
  %1117 = icmp eq i16 %1115, %1116
  br i1 %1117, label %1118, label %1121

1118:                                             ; preds = %1114
  %1119 = getelementptr i8, ptr %1110, i32 2
  %1120 = getelementptr i8, ptr %1111, i32 2
  br label %1121

1121:                                             ; preds = %1118, %1114, %1109
  %1122 = phi ptr [ %1119, %1118 ], [ %1110, %1114 ], [ %1110, %1109 ]
  %1123 = phi ptr [ %1120, %1118 ], [ %1111, %1114 ], [ %1111, %1109 ]
  %1124 = icmp ult ptr %1122, %1080
  br i1 %1124, label %1125, label %1131

1125:                                             ; preds = %1121
  %1126 = load i8, ptr %1123, align 1
  %1127 = load i8, ptr %1122, align 1
  %1128 = icmp eq i8 %1126, %1127
  %1129 = zext i1 %1128 to i32
  %1130 = getelementptr i8, ptr %1122, i32 %1129
  br label %1131

1131:                                             ; preds = %1125, %1121
  %1132 = phi ptr [ %1122, %1121 ], [ %1130, %1125 ]
  %1133 = ptrtoint ptr %1132 to i32
  %1134 = ptrtoint ptr %1073 to i32
  %1135 = sub i32 %1133, %1134
  br label %1136

1136:                                             ; preds = %1131, %1102, %1088
  %1137 = phi i32 [ %1135, %1131 ], [ %1090, %1088 ], [ %1108, %1102 ]
  %1138 = getelementptr i8, ptr %1074, i32 %1137
  %1139 = icmp eq ptr %1138, %1072
  br i1 %1139, label %1140, label %1198

1140:                                             ; preds = %1136
  %1141 = getelementptr i8, ptr %1073, i32 %1137
  %1142 = icmp ugt ptr %33, %1141
  br i1 %1142, label %1143, label %1169

1143:                                             ; preds = %1140
  %1144 = load i32, ptr %12, align 1
  %1145 = load i32, ptr %1141, align 1
  %1146 = xor i32 %1145, %1144
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1151, label %1148

1148:                                             ; preds = %1143
  %1149 = tail call i32 @llvm.cttz.i32(i32 %1146, i1 true) #7, !range !8
  %1150 = lshr i32 %1149, 3
  br label %1195

1151:                                             ; preds = %1157, %1143
  %1152 = phi ptr [ %1155, %1157 ], [ %1141, %1143 ]
  %1153 = phi ptr [ %1154, %1157 ], [ %12, %1143 ]
  %1154 = getelementptr i8, ptr %1153, i32 4
  %1155 = getelementptr i8, ptr %1152, i32 4
  %1156 = icmp ult ptr %1155, %33
  br i1 %1156, label %1157, label %1169

1157:                                             ; preds = %1151
  %1158 = load i32, ptr %1154, align 1
  %1159 = load i32, ptr %1155, align 1
  %1160 = xor i32 %1159, %1158
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1151, label %1162

1162:                                             ; preds = %1157
  %1163 = tail call i32 @llvm.cttz.i32(i32 %1160, i1 true) #7, !range !8
  %1164 = lshr i32 %1163, 3
  %1165 = getelementptr i8, ptr %1155, i32 %1164
  %1166 = ptrtoint ptr %1165 to i32
  %1167 = ptrtoint ptr %1141 to i32
  %1168 = sub i32 %1166, %1167
  br label %1195

1169:                                             ; preds = %1151, %1140
  %1170 = phi ptr [ %1141, %1140 ], [ %1155, %1151 ]
  %1171 = phi ptr [ %12, %1140 ], [ %1154, %1151 ]
  %1172 = icmp ult ptr %1170, %34
  br i1 %1172, label %1173, label %1180

1173:                                             ; preds = %1169
  %1174 = load i16, ptr %1171, align 1
  %1175 = load i16, ptr %1170, align 1
  %1176 = icmp eq i16 %1174, %1175
  br i1 %1176, label %1177, label %1180

1177:                                             ; preds = %1173
  %1178 = getelementptr i8, ptr %1170, i32 2
  %1179 = getelementptr i8, ptr %1171, i32 2
  br label %1180

1180:                                             ; preds = %1177, %1173, %1169
  %1181 = phi ptr [ %1178, %1177 ], [ %1170, %1173 ], [ %1170, %1169 ]
  %1182 = phi ptr [ %1179, %1177 ], [ %1171, %1173 ], [ %1171, %1169 ]
  %1183 = icmp ult ptr %1181, %6
  br i1 %1183, label %1184, label %1190

1184:                                             ; preds = %1180
  %1185 = load i8, ptr %1182, align 1
  %1186 = load i8, ptr %1181, align 1
  %1187 = icmp eq i8 %1185, %1186
  %1188 = zext i1 %1187 to i32
  %1189 = getelementptr i8, ptr %1181, i32 %1188
  br label %1190

1190:                                             ; preds = %1184, %1180
  %1191 = phi ptr [ %1181, %1180 ], [ %1189, %1184 ]
  %1192 = ptrtoint ptr %1191 to i32
  %1193 = ptrtoint ptr %1141 to i32
  %1194 = sub i32 %1192, %1193
  br label %1195

1195:                                             ; preds = %1190, %1162, %1148
  %1196 = phi i32 [ %1194, %1190 ], [ %1150, %1148 ], [ %1168, %1162 ]
  %1197 = add i32 %1196, %1137
  br label %1198

1198:                                             ; preds = %1195, %1136
  %1199 = phi i32 [ %1197, %1195 ], [ %1137, %1136 ]
  %1200 = add i32 %1199, 4
  %1201 = icmp ult i32 %1199, -4
  br i1 %1201, label %1202, label %1212

1202:                                             ; preds = %1198
  %1203 = add i32 %1046, 1
  %1204 = tail call i32 @llvm.ctlz.i32(i32 %1203, i1 false) #7, !range !8
  %1205 = xor i32 %1204, -32
  %1206 = mul i32 %1043, 3
  %1207 = add i32 %1206, 2
  %1208 = add i32 %1207, %1205
  %1209 = mul i32 %1200, 3
  %1210 = icmp sgt i32 %1209, %1208
  br i1 %1210, label %1211, label %1212

1211:                                             ; preds = %1202
  br label %1212

1212:                                             ; preds = %1211, %1202, %1198, %1067, %1050, %1040
  %1213 = phi i32 [ 0, %1040 ], [ %1046, %1067 ], [ %1046, %1050 ], [ 0, %1211 ], [ %1046, %1202 ], [ %1046, %1198 ]
  %1214 = phi ptr [ %1045, %1040 ], [ %1045, %1067 ], [ %1045, %1050 ], [ %1047, %1211 ], [ %1045, %1202 ], [ %1045, %1198 ]
  %1215 = phi i32 [ %1043, %1040 ], [ %1043, %1067 ], [ %1043, %1050 ], [ %1200, %1211 ], [ %1043, %1202 ], [ %1043, %1198 ]
  %1216 = load i32, ptr %41, align 4
  switch i32 %1216, label %1217 [
    i32 6, label %1762
    i32 5, label %1485
    i32 7, label %1762
  ]

1217:                                             ; preds = %1212
  %1218 = load ptr, ptr %42, align 4
  %1219 = load i32, ptr %43, align 4
  %1220 = shl nuw i32 1, %1219
  %1221 = add i32 %1220, -1
  %1222 = load ptr, ptr %8, align 4
  %1223 = load ptr, ptr %13, align 4
  %1224 = load i32, ptr %10, align 4
  %1225 = getelementptr i8, ptr %1222, i32 %1224
  %1226 = getelementptr i8, ptr %1223, i32 %1224
  %1227 = ptrtoint ptr %1047 to i32
  %1228 = ptrtoint ptr %1222 to i32
  %1229 = sub i32 %1227, %1228
  %1230 = load i32, ptr %27, align 4
  %1231 = shl nuw i32 1, %1230
  %1232 = load i32, ptr %16, align 4
  %1233 = sub i32 %1229, %1232
  %1234 = icmp ugt i32 %1233, %1231
  %1235 = sub i32 %1229, %1231
  %1236 = load i32, ptr %31, align 4
  %1237 = icmp eq i32 %1236, 0
  %1238 = select i1 %1237, i1 %1234, i1 false
  %1239 = select i1 %1238, i32 %1235, i32 %1232
  %1240 = tail call i32 @llvm.usub.sat.i32(i32 %1229, i32 %1220) #7
  %1241 = load i32, ptr %44, align 4
  %1242 = shl nuw i32 1, %1241
  %1243 = load ptr, ptr %45, align 4
  %1244 = load i32, ptr %46, align 4
  %1245 = shl nsw i32 -1, %1219
  %1246 = xor i32 %1245, -1
  %1247 = icmp ult i32 %1041, %1229
  %1248 = sub i32 32, %1244
  br i1 %1247, label %1249, label %1261

1249:                                             ; preds = %1249, %1217
  %1250 = phi i32 [ %1259, %1249 ], [ %1041, %1217 ]
  %1251 = getelementptr i8, ptr %1222, i32 %1250
  %1252 = load i32, ptr %1251, align 1
  %1253 = mul i32 %1252, -1640531535
  %1254 = lshr i32 %1253, %1248
  %1255 = getelementptr i32, ptr %1243, i32 %1254
  %1256 = load i32, ptr %1255, align 4
  %1257 = and i32 %1250, %1246
  %1258 = getelementptr i32, ptr %1218, i32 %1257
  store i32 %1256, ptr %1258, align 4
  store i32 %1250, ptr %1255, align 4
  %1259 = add nuw i32 %1250, 1
  %1260 = icmp ult i32 %1259, %1229
  br i1 %1260, label %1249, label %1261

1261:                                             ; preds = %1249, %1217
  store i32 %1229, ptr %47, align 4
  %1262 = load i32, ptr %1047, align 1
  %1263 = mul i32 %1262, -1640531535
  %1264 = lshr i32 %1263, %1248
  %1265 = getelementptr i32, ptr %1243, i32 %1264
  %1266 = load i32, ptr %1265, align 4
  %1267 = icmp ult i32 %1266, %1239
  br i1 %1267, label %2060, label %1268

1268:                                             ; preds = %1261
  %1269 = icmp ugt ptr %33, %1047
  %1270 = getelementptr i8, ptr %1042, i32 5
  %1271 = ptrtoint ptr %1226 to i32
  %1272 = ptrtoint ptr %1270 to i32
  %1273 = add i32 %1229, 2
  br label %1274

1274:                                             ; preds = %1477, %1268
  %1275 = phi i32 [ 999999999, %1268 ], [ %1474, %1477 ]
  %1276 = phi i32 [ %1266, %1268 ], [ %1481, %1477 ]
  %1277 = phi i32 [ 3, %1268 ], [ %1475, %1477 ]
  %1278 = phi i32 [ %1242, %1268 ], [ %1480, %1477 ]
  %1279 = icmp ult i32 %1276, %1224
  br i1 %1279, label %1337, label %1280

1280:                                             ; preds = %1274
  %1281 = getelementptr i8, ptr %1222, i32 %1276
  %1282 = getelementptr i8, ptr %1281, i32 %1277
  %1283 = load i8, ptr %1282, align 1
  %1284 = getelementptr i8, ptr %1047, i32 %1277
  %1285 = load i8, ptr %1284, align 1
  %1286 = icmp eq i8 %1283, %1285
  br i1 %1286, label %1287, label %1473

1287:                                             ; preds = %1280
  br i1 %1269, label %1288, label %1312

1288:                                             ; preds = %1287
  %1289 = load i32, ptr %1281, align 1
  %1290 = xor i32 %1289, %1262
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1295, label %1292

1292:                                             ; preds = %1288
  %1293 = tail call i32 @llvm.cttz.i32(i32 %1290, i1 true) #7, !range !8
  %1294 = lshr i32 %1293, 3
  br label %1466

1295:                                             ; preds = %1301, %1288
  %1296 = phi ptr [ %1299, %1301 ], [ %1047, %1288 ]
  %1297 = phi ptr [ %1298, %1301 ], [ %1281, %1288 ]
  %1298 = getelementptr i8, ptr %1297, i32 4
  %1299 = getelementptr i8, ptr %1296, i32 4
  %1300 = icmp ult ptr %1299, %33
  br i1 %1300, label %1301, label %1312

1301:                                             ; preds = %1295
  %1302 = load i32, ptr %1298, align 1
  %1303 = load i32, ptr %1299, align 1
  %1304 = xor i32 %1303, %1302
  %1305 = icmp eq i32 %1304, 0
  br i1 %1305, label %1295, label %1306

1306:                                             ; preds = %1301
  %1307 = tail call i32 @llvm.cttz.i32(i32 %1304, i1 true) #7, !range !8
  %1308 = lshr i32 %1307, 3
  %1309 = getelementptr i8, ptr %1299, i32 %1308
  %1310 = ptrtoint ptr %1309 to i32
  %1311 = sub i32 %1310, %1227
  br label %1466

1312:                                             ; preds = %1295, %1287
  %1313 = phi ptr [ %1047, %1287 ], [ %1299, %1295 ]
  %1314 = phi ptr [ %1281, %1287 ], [ %1298, %1295 ]
  %1315 = icmp ult ptr %1313, %34
  br i1 %1315, label %1316, label %1323

1316:                                             ; preds = %1312
  %1317 = load i16, ptr %1314, align 1
  %1318 = load i16, ptr %1313, align 1
  %1319 = icmp eq i16 %1317, %1318
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1316
  %1321 = getelementptr i8, ptr %1313, i32 2
  %1322 = getelementptr i8, ptr %1314, i32 2
  br label %1323

1323:                                             ; preds = %1320, %1316, %1312
  %1324 = phi ptr [ %1321, %1320 ], [ %1313, %1316 ], [ %1313, %1312 ]
  %1325 = phi ptr [ %1322, %1320 ], [ %1314, %1316 ], [ %1314, %1312 ]
  %1326 = icmp ult ptr %1324, %6
  br i1 %1326, label %1327, label %1333

1327:                                             ; preds = %1323
  %1328 = load i8, ptr %1325, align 1
  %1329 = load i8, ptr %1324, align 1
  %1330 = icmp eq i8 %1328, %1329
  %1331 = zext i1 %1330 to i32
  %1332 = getelementptr i8, ptr %1324, i32 %1331
  br label %1333

1333:                                             ; preds = %1327, %1323
  %1334 = phi ptr [ %1324, %1323 ], [ %1332, %1327 ]
  %1335 = ptrtoint ptr %1334 to i32
  %1336 = sub i32 %1335, %1227
  br label %1466

1337:                                             ; preds = %1274
  %1338 = getelementptr i8, ptr %1223, i32 %1276
  %1339 = load i32, ptr %1338, align 1
  %1340 = icmp eq i32 %1339, %1262
  br i1 %1340, label %1341, label %1473

1341:                                             ; preds = %1337
  %1342 = getelementptr i8, ptr %1338, i32 4
  %1343 = ptrtoint ptr %1342 to i32
  %1344 = sub i32 %1271, %1343
  %1345 = getelementptr i8, ptr %1270, i32 %1344
  %1346 = icmp ult ptr %1345, %6
  %1347 = select i1 %1346, ptr %1345, ptr %6
  %1348 = getelementptr i8, ptr %1347, i32 -3
  %1349 = icmp ugt ptr %1348, %1270
  br i1 %1349, label %1350, label %1375

1350:                                             ; preds = %1341
  %1351 = load i32, ptr %1342, align 1
  %1352 = load i32, ptr %1270, align 1
  %1353 = xor i32 %1352, %1351
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1358, label %1355

1355:                                             ; preds = %1350
  %1356 = tail call i32 @llvm.cttz.i32(i32 %1353, i1 true) #7, !range !8
  %1357 = lshr i32 %1356, 3
  br label %1401

1358:                                             ; preds = %1364, %1350
  %1359 = phi ptr [ %1362, %1364 ], [ %1270, %1350 ]
  %1360 = phi ptr [ %1361, %1364 ], [ %1342, %1350 ]
  %1361 = getelementptr i8, ptr %1360, i32 4
  %1362 = getelementptr i8, ptr %1359, i32 4
  %1363 = icmp ult ptr %1362, %1348
  br i1 %1363, label %1364, label %1375

1364:                                             ; preds = %1358
  %1365 = load i32, ptr %1361, align 1
  %1366 = load i32, ptr %1362, align 1
  %1367 = xor i32 %1366, %1365
  %1368 = icmp eq i32 %1367, 0
  br i1 %1368, label %1358, label %1369

1369:                                             ; preds = %1364
  %1370 = tail call i32 @llvm.cttz.i32(i32 %1367, i1 true) #7, !range !8
  %1371 = lshr i32 %1370, 3
  %1372 = getelementptr i8, ptr %1362, i32 %1371
  %1373 = ptrtoint ptr %1372 to i32
  %1374 = sub i32 %1373, %1272
  br label %1401

1375:                                             ; preds = %1358, %1341
  %1376 = phi ptr [ %1270, %1341 ], [ %1362, %1358 ]
  %1377 = phi ptr [ %1342, %1341 ], [ %1361, %1358 ]
  %1378 = getelementptr i8, ptr %1347, i32 -1
  %1379 = icmp ult ptr %1376, %1378
  br i1 %1379, label %1380, label %1387

1380:                                             ; preds = %1375
  %1381 = load i16, ptr %1377, align 1
  %1382 = load i16, ptr %1376, align 1
  %1383 = icmp eq i16 %1381, %1382
  br i1 %1383, label %1384, label %1387

1384:                                             ; preds = %1380
  %1385 = getelementptr i8, ptr %1376, i32 2
  %1386 = getelementptr i8, ptr %1377, i32 2
  br label %1387

1387:                                             ; preds = %1384, %1380, %1375
  %1388 = phi ptr [ %1385, %1384 ], [ %1376, %1380 ], [ %1376, %1375 ]
  %1389 = phi ptr [ %1386, %1384 ], [ %1377, %1380 ], [ %1377, %1375 ]
  %1390 = icmp ult ptr %1388, %1347
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1387
  %1392 = load i8, ptr %1389, align 1
  %1393 = load i8, ptr %1388, align 1
  %1394 = icmp eq i8 %1392, %1393
  %1395 = zext i1 %1394 to i32
  %1396 = getelementptr i8, ptr %1388, i32 %1395
  br label %1397

1397:                                             ; preds = %1391, %1387
  %1398 = phi ptr [ %1388, %1387 ], [ %1396, %1391 ]
  %1399 = ptrtoint ptr %1398 to i32
  %1400 = sub i32 %1399, %1272
  br label %1401

1401:                                             ; preds = %1397, %1369, %1355
  %1402 = phi i32 [ %1400, %1397 ], [ %1357, %1355 ], [ %1374, %1369 ]
  %1403 = getelementptr i8, ptr %1342, i32 %1402
  %1404 = icmp eq ptr %1403, %1226
  br i1 %1404, label %1405, label %1463

1405:                                             ; preds = %1401
  %1406 = getelementptr i8, ptr %1270, i32 %1402
  %1407 = icmp ugt ptr %33, %1406
  br i1 %1407, label %1408, label %1434

1408:                                             ; preds = %1405
  %1409 = load i32, ptr %1225, align 1
  %1410 = load i32, ptr %1406, align 1
  %1411 = xor i32 %1410, %1409
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1416, label %1413

1413:                                             ; preds = %1408
  %1414 = tail call i32 @llvm.cttz.i32(i32 %1411, i1 true) #7, !range !8
  %1415 = lshr i32 %1414, 3
  br label %1460

1416:                                             ; preds = %1422, %1408
  %1417 = phi ptr [ %1420, %1422 ], [ %1406, %1408 ]
  %1418 = phi ptr [ %1419, %1422 ], [ %1225, %1408 ]
  %1419 = getelementptr i8, ptr %1418, i32 4
  %1420 = getelementptr i8, ptr %1417, i32 4
  %1421 = icmp ult ptr %1420, %33
  br i1 %1421, label %1422, label %1434

1422:                                             ; preds = %1416
  %1423 = load i32, ptr %1419, align 1
  %1424 = load i32, ptr %1420, align 1
  %1425 = xor i32 %1424, %1423
  %1426 = icmp eq i32 %1425, 0
  br i1 %1426, label %1416, label %1427

1427:                                             ; preds = %1422
  %1428 = tail call i32 @llvm.cttz.i32(i32 %1425, i1 true) #7, !range !8
  %1429 = lshr i32 %1428, 3
  %1430 = getelementptr i8, ptr %1420, i32 %1429
  %1431 = ptrtoint ptr %1430 to i32
  %1432 = ptrtoint ptr %1406 to i32
  %1433 = sub i32 %1431, %1432
  br label %1460

1434:                                             ; preds = %1416, %1405
  %1435 = phi ptr [ %1406, %1405 ], [ %1420, %1416 ]
  %1436 = phi ptr [ %1225, %1405 ], [ %1419, %1416 ]
  %1437 = icmp ult ptr %1435, %34
  br i1 %1437, label %1438, label %1445

1438:                                             ; preds = %1434
  %1439 = load i16, ptr %1436, align 1
  %1440 = load i16, ptr %1435, align 1
  %1441 = icmp eq i16 %1439, %1440
  br i1 %1441, label %1442, label %1445

1442:                                             ; preds = %1438
  %1443 = getelementptr i8, ptr %1435, i32 2
  %1444 = getelementptr i8, ptr %1436, i32 2
  br label %1445

1445:                                             ; preds = %1442, %1438, %1434
  %1446 = phi ptr [ %1443, %1442 ], [ %1435, %1438 ], [ %1435, %1434 ]
  %1447 = phi ptr [ %1444, %1442 ], [ %1436, %1438 ], [ %1436, %1434 ]
  %1448 = icmp ult ptr %1446, %6
  br i1 %1448, label %1449, label %1455

1449:                                             ; preds = %1445
  %1450 = load i8, ptr %1447, align 1
  %1451 = load i8, ptr %1446, align 1
  %1452 = icmp eq i8 %1450, %1451
  %1453 = zext i1 %1452 to i32
  %1454 = getelementptr i8, ptr %1446, i32 %1453
  br label %1455

1455:                                             ; preds = %1449, %1445
  %1456 = phi ptr [ %1446, %1445 ], [ %1454, %1449 ]
  %1457 = ptrtoint ptr %1456 to i32
  %1458 = ptrtoint ptr %1406 to i32
  %1459 = sub i32 %1457, %1458
  br label %1460

1460:                                             ; preds = %1455, %1427, %1413
  %1461 = phi i32 [ %1459, %1455 ], [ %1415, %1413 ], [ %1433, %1427 ]
  %1462 = add i32 %1461, %1402
  br label %1463

1463:                                             ; preds = %1460, %1401
  %1464 = phi i32 [ %1462, %1460 ], [ %1402, %1401 ]
  %1465 = add i32 %1464, 4
  br label %1466

1466:                                             ; preds = %1463, %1333, %1306, %1292
  %1467 = phi i32 [ %1465, %1463 ], [ %1336, %1333 ], [ %1294, %1292 ], [ %1311, %1306 ]
  %1468 = icmp ugt i32 %1467, %1277
  br i1 %1468, label %1469, label %1473

1469:                                             ; preds = %1466
  %1470 = sub i32 %1273, %1276
  %1471 = getelementptr i8, ptr %1047, i32 %1467
  %1472 = icmp eq ptr %1471, %6
  br i1 %1472, label %2039, label %1473

1473:                                             ; preds = %1469, %1466, %1337, %1280
  %1474 = phi i32 [ %1470, %1469 ], [ %1275, %1466 ], [ %1275, %1337 ], [ %1275, %1280 ]
  %1475 = phi i32 [ %1467, %1469 ], [ %1277, %1466 ], [ %1277, %1337 ], [ %1277, %1280 ]
  %1476 = icmp ugt i32 %1276, %1240
  br i1 %1476, label %1477, label %2039

1477:                                             ; preds = %1473
  %1478 = and i32 %1276, %1221
  %1479 = getelementptr i32, ptr %1218, i32 %1478
  %1480 = add i32 %1278, -1
  %1481 = load i32, ptr %1479, align 4
  %1482 = icmp uge i32 %1481, %1239
  %1483 = icmp ne i32 %1480, 0
  %1484 = and i1 %1483, %1482
  br i1 %1484, label %1274, label %2039

1485:                                             ; preds = %1212
  %1486 = load ptr, ptr %42, align 4
  %1487 = load i32, ptr %43, align 4
  %1488 = shl nuw i32 1, %1487
  %1489 = add i32 %1488, -1
  %1490 = load ptr, ptr %8, align 4
  %1491 = load ptr, ptr %13, align 4
  %1492 = load i32, ptr %10, align 4
  %1493 = getelementptr i8, ptr %1490, i32 %1492
  %1494 = getelementptr i8, ptr %1491, i32 %1492
  %1495 = ptrtoint ptr %1047 to i32
  %1496 = ptrtoint ptr %1490 to i32
  %1497 = sub i32 %1495, %1496
  %1498 = load i32, ptr %27, align 4
  %1499 = shl nuw i32 1, %1498
  %1500 = load i32, ptr %16, align 4
  %1501 = sub i32 %1497, %1500
  %1502 = icmp ugt i32 %1501, %1499
  %1503 = sub i32 %1497, %1499
  %1504 = load i32, ptr %31, align 4
  %1505 = icmp eq i32 %1504, 0
  %1506 = select i1 %1505, i1 %1502, i1 false
  %1507 = select i1 %1506, i32 %1503, i32 %1500
  %1508 = tail call i32 @llvm.usub.sat.i32(i32 %1497, i32 %1488) #7
  %1509 = load i32, ptr %44, align 4
  %1510 = shl nuw i32 1, %1509
  %1511 = load ptr, ptr %45, align 4
  %1512 = load i32, ptr %46, align 4
  %1513 = shl nsw i32 -1, %1487
  %1514 = xor i32 %1513, -1
  %1515 = icmp ult i32 %1041, %1497
  %1516 = sub i32 64, %1512
  %1517 = zext i32 %1516 to i64
  br i1 %1515, label %1518, label %1531

1518:                                             ; preds = %1518, %1485
  %1519 = phi i32 [ %1529, %1518 ], [ %1041, %1485 ]
  %1520 = getelementptr i8, ptr %1490, i32 %1519
  %1521 = load i64, ptr %1520, align 1
  %1522 = mul i64 %1521, -3523014627271114752
  %1523 = lshr i64 %1522, %1517
  %1524 = trunc i64 %1523 to i32
  %1525 = getelementptr i32, ptr %1511, i32 %1524
  %1526 = load i32, ptr %1525, align 4
  %1527 = and i32 %1519, %1514
  %1528 = getelementptr i32, ptr %1486, i32 %1527
  store i32 %1526, ptr %1528, align 4
  store i32 %1519, ptr %1525, align 4
  %1529 = add nuw i32 %1519, 1
  %1530 = icmp ult i32 %1529, %1497
  br i1 %1530, label %1518, label %1531

1531:                                             ; preds = %1518, %1485
  store i32 %1497, ptr %47, align 4
  %1532 = load i64, ptr %1047, align 1
  %1533 = mul i64 %1532, -3523014627271114752
  %1534 = lshr i64 %1533, %1517
  %1535 = trunc i64 %1534 to i32
  %1536 = getelementptr i32, ptr %1511, i32 %1535
  %1537 = load i32, ptr %1536, align 4
  %1538 = icmp ult i32 %1537, %1507
  %1539 = lshr i64 %1532, 32
  %1540 = trunc i64 %1539 to i32
  br i1 %1538, label %2060, label %1541

1541:                                             ; preds = %1531
  %1542 = trunc i64 %1532 to i32
  %1543 = icmp ugt ptr %33, %1047
  %1544 = getelementptr i8, ptr %1042, i32 5
  %1545 = ptrtoint ptr %1494 to i32
  %1546 = ptrtoint ptr %1544 to i32
  %1547 = add i32 %1497, 2
  br label %1548

1548:                                             ; preds = %1754, %1541
  %1549 = phi i32 [ %1542, %1541 ], [ %1750, %1754 ]
  %1550 = phi i32 [ 999999999, %1541 ], [ %1751, %1754 ]
  %1551 = phi i32 [ %1537, %1541 ], [ %1758, %1754 ]
  %1552 = phi i32 [ 3, %1541 ], [ %1752, %1754 ]
  %1553 = phi i32 [ %1510, %1541 ], [ %1757, %1754 ]
  %1554 = icmp ult i32 %1551, %1492
  br i1 %1554, label %1612, label %1555

1555:                                             ; preds = %1548
  %1556 = getelementptr i8, ptr %1490, i32 %1551
  %1557 = getelementptr i8, ptr %1556, i32 %1552
  %1558 = load i8, ptr %1557, align 1
  %1559 = getelementptr i8, ptr %1047, i32 %1552
  %1560 = load i8, ptr %1559, align 1
  %1561 = icmp eq i8 %1558, %1560
  br i1 %1561, label %1562, label %1749

1562:                                             ; preds = %1555
  br i1 %1543, label %1563, label %1587

1563:                                             ; preds = %1562
  %1564 = load i32, ptr %1556, align 1
  %1565 = xor i32 %1549, %1564
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1570, label %1567

1567:                                             ; preds = %1563
  %1568 = tail call i32 @llvm.cttz.i32(i32 %1565, i1 true) #7, !range !8
  %1569 = lshr i32 %1568, 3
  br label %1741

1570:                                             ; preds = %1576, %1563
  %1571 = phi ptr [ %1574, %1576 ], [ %1047, %1563 ]
  %1572 = phi ptr [ %1573, %1576 ], [ %1556, %1563 ]
  %1573 = getelementptr i8, ptr %1572, i32 4
  %1574 = getelementptr i8, ptr %1571, i32 4
  %1575 = icmp ult ptr %1574, %33
  br i1 %1575, label %1576, label %1587

1576:                                             ; preds = %1570
  %1577 = load i32, ptr %1573, align 1
  %1578 = load i32, ptr %1574, align 1
  %1579 = xor i32 %1578, %1577
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1570, label %1581

1581:                                             ; preds = %1576
  %1582 = tail call i32 @llvm.cttz.i32(i32 %1579, i1 true) #7, !range !8
  %1583 = lshr i32 %1582, 3
  %1584 = getelementptr i8, ptr %1574, i32 %1583
  %1585 = ptrtoint ptr %1584 to i32
  %1586 = sub i32 %1585, %1495
  br label %1741

1587:                                             ; preds = %1570, %1562
  %1588 = phi ptr [ %1047, %1562 ], [ %1574, %1570 ]
  %1589 = phi ptr [ %1556, %1562 ], [ %1573, %1570 ]
  %1590 = icmp ult ptr %1588, %34
  br i1 %1590, label %1591, label %1598

1591:                                             ; preds = %1587
  %1592 = load i16, ptr %1589, align 1
  %1593 = load i16, ptr %1588, align 1
  %1594 = icmp eq i16 %1592, %1593
  br i1 %1594, label %1595, label %1598

1595:                                             ; preds = %1591
  %1596 = getelementptr i8, ptr %1588, i32 2
  %1597 = getelementptr i8, ptr %1589, i32 2
  br label %1598

1598:                                             ; preds = %1595, %1591, %1587
  %1599 = phi ptr [ %1596, %1595 ], [ %1588, %1591 ], [ %1588, %1587 ]
  %1600 = phi ptr [ %1597, %1595 ], [ %1589, %1591 ], [ %1589, %1587 ]
  %1601 = icmp ult ptr %1599, %6
  br i1 %1601, label %1602, label %1608

1602:                                             ; preds = %1598
  %1603 = load i8, ptr %1600, align 1
  %1604 = load i8, ptr %1599, align 1
  %1605 = icmp eq i8 %1603, %1604
  %1606 = zext i1 %1605 to i32
  %1607 = getelementptr i8, ptr %1599, i32 %1606
  br label %1608

1608:                                             ; preds = %1602, %1598
  %1609 = phi ptr [ %1599, %1598 ], [ %1607, %1602 ]
  %1610 = ptrtoint ptr %1609 to i32
  %1611 = sub i32 %1610, %1495
  br label %1741

1612:                                             ; preds = %1548
  %1613 = getelementptr i8, ptr %1491, i32 %1551
  %1614 = load i32, ptr %1613, align 1
  %1615 = load i32, ptr %1047, align 1
  %1616 = icmp eq i32 %1614, %1615
  br i1 %1616, label %1617, label %1749

1617:                                             ; preds = %1612
  %1618 = getelementptr i8, ptr %1613, i32 4
  %1619 = ptrtoint ptr %1618 to i32
  %1620 = sub i32 %1545, %1619
  %1621 = getelementptr i8, ptr %1544, i32 %1620
  %1622 = icmp ult ptr %1621, %6
  %1623 = select i1 %1622, ptr %1621, ptr %6
  %1624 = getelementptr i8, ptr %1623, i32 -3
  %1625 = icmp ugt ptr %1624, %1544
  br i1 %1625, label %1626, label %1650

1626:                                             ; preds = %1617
  %1627 = load i32, ptr %1618, align 1
  %1628 = xor i32 %1627, %1540
  %1629 = icmp eq i32 %1628, 0
  br i1 %1629, label %1633, label %1630

1630:                                             ; preds = %1626
  %1631 = tail call i32 @llvm.cttz.i32(i32 %1628, i1 true) #7, !range !8
  %1632 = lshr i32 %1631, 3
  br label %1676

1633:                                             ; preds = %1639, %1626
  %1634 = phi ptr [ %1637, %1639 ], [ %1544, %1626 ]
  %1635 = phi ptr [ %1636, %1639 ], [ %1618, %1626 ]
  %1636 = getelementptr i8, ptr %1635, i32 4
  %1637 = getelementptr i8, ptr %1634, i32 4
  %1638 = icmp ult ptr %1637, %1624
  br i1 %1638, label %1639, label %1650

1639:                                             ; preds = %1633
  %1640 = load i32, ptr %1636, align 1
  %1641 = load i32, ptr %1637, align 1
  %1642 = xor i32 %1641, %1640
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1633, label %1644

1644:                                             ; preds = %1639
  %1645 = tail call i32 @llvm.cttz.i32(i32 %1642, i1 true) #7, !range !8
  %1646 = lshr i32 %1645, 3
  %1647 = getelementptr i8, ptr %1637, i32 %1646
  %1648 = ptrtoint ptr %1647 to i32
  %1649 = sub i32 %1648, %1546
  br label %1676

1650:                                             ; preds = %1633, %1617
  %1651 = phi ptr [ %1544, %1617 ], [ %1637, %1633 ]
  %1652 = phi ptr [ %1618, %1617 ], [ %1636, %1633 ]
  %1653 = getelementptr i8, ptr %1623, i32 -1
  %1654 = icmp ult ptr %1651, %1653
  br i1 %1654, label %1655, label %1662

1655:                                             ; preds = %1650
  %1656 = load i16, ptr %1652, align 1
  %1657 = load i16, ptr %1651, align 1
  %1658 = icmp eq i16 %1656, %1657
  br i1 %1658, label %1659, label %1662

1659:                                             ; preds = %1655
  %1660 = getelementptr i8, ptr %1651, i32 2
  %1661 = getelementptr i8, ptr %1652, i32 2
  br label %1662

1662:                                             ; preds = %1659, %1655, %1650
  %1663 = phi ptr [ %1660, %1659 ], [ %1651, %1655 ], [ %1651, %1650 ]
  %1664 = phi ptr [ %1661, %1659 ], [ %1652, %1655 ], [ %1652, %1650 ]
  %1665 = icmp ult ptr %1663, %1623
  br i1 %1665, label %1666, label %1672

1666:                                             ; preds = %1662
  %1667 = load i8, ptr %1664, align 1
  %1668 = load i8, ptr %1663, align 1
  %1669 = icmp eq i8 %1667, %1668
  %1670 = zext i1 %1669 to i32
  %1671 = getelementptr i8, ptr %1663, i32 %1670
  br label %1672

1672:                                             ; preds = %1666, %1662
  %1673 = phi ptr [ %1663, %1662 ], [ %1671, %1666 ]
  %1674 = ptrtoint ptr %1673 to i32
  %1675 = sub i32 %1674, %1546
  br label %1676

1676:                                             ; preds = %1672, %1644, %1630
  %1677 = phi i32 [ %1675, %1672 ], [ %1632, %1630 ], [ %1649, %1644 ]
  %1678 = getelementptr i8, ptr %1618, i32 %1677
  %1679 = icmp eq ptr %1678, %1494
  br i1 %1679, label %1680, label %1738

1680:                                             ; preds = %1676
  %1681 = getelementptr i8, ptr %1544, i32 %1677
  %1682 = icmp ugt ptr %33, %1681
  br i1 %1682, label %1683, label %1709

1683:                                             ; preds = %1680
  %1684 = load i32, ptr %1493, align 1
  %1685 = load i32, ptr %1681, align 1
  %1686 = xor i32 %1685, %1684
  %1687 = icmp eq i32 %1686, 0
  br i1 %1687, label %1691, label %1688

1688:                                             ; preds = %1683
  %1689 = tail call i32 @llvm.cttz.i32(i32 %1686, i1 true) #7, !range !8
  %1690 = lshr i32 %1689, 3
  br label %1735

1691:                                             ; preds = %1697, %1683
  %1692 = phi ptr [ %1695, %1697 ], [ %1681, %1683 ]
  %1693 = phi ptr [ %1694, %1697 ], [ %1493, %1683 ]
  %1694 = getelementptr i8, ptr %1693, i32 4
  %1695 = getelementptr i8, ptr %1692, i32 4
  %1696 = icmp ult ptr %1695, %33
  br i1 %1696, label %1697, label %1709

1697:                                             ; preds = %1691
  %1698 = load i32, ptr %1694, align 1
  %1699 = load i32, ptr %1695, align 1
  %1700 = xor i32 %1699, %1698
  %1701 = icmp eq i32 %1700, 0
  br i1 %1701, label %1691, label %1702

1702:                                             ; preds = %1697
  %1703 = tail call i32 @llvm.cttz.i32(i32 %1700, i1 true) #7, !range !8
  %1704 = lshr i32 %1703, 3
  %1705 = getelementptr i8, ptr %1695, i32 %1704
  %1706 = ptrtoint ptr %1705 to i32
  %1707 = ptrtoint ptr %1681 to i32
  %1708 = sub i32 %1706, %1707
  br label %1735

1709:                                             ; preds = %1691, %1680
  %1710 = phi ptr [ %1681, %1680 ], [ %1695, %1691 ]
  %1711 = phi ptr [ %1493, %1680 ], [ %1694, %1691 ]
  %1712 = icmp ult ptr %1710, %34
  br i1 %1712, label %1713, label %1720

1713:                                             ; preds = %1709
  %1714 = load i16, ptr %1711, align 1
  %1715 = load i16, ptr %1710, align 1
  %1716 = icmp eq i16 %1714, %1715
  br i1 %1716, label %1717, label %1720

1717:                                             ; preds = %1713
  %1718 = getelementptr i8, ptr %1710, i32 2
  %1719 = getelementptr i8, ptr %1711, i32 2
  br label %1720

1720:                                             ; preds = %1717, %1713, %1709
  %1721 = phi ptr [ %1718, %1717 ], [ %1710, %1713 ], [ %1710, %1709 ]
  %1722 = phi ptr [ %1719, %1717 ], [ %1711, %1713 ], [ %1711, %1709 ]
  %1723 = icmp ult ptr %1721, %6
  br i1 %1723, label %1724, label %1730

1724:                                             ; preds = %1720
  %1725 = load i8, ptr %1722, align 1
  %1726 = load i8, ptr %1721, align 1
  %1727 = icmp eq i8 %1725, %1726
  %1728 = zext i1 %1727 to i32
  %1729 = getelementptr i8, ptr %1721, i32 %1728
  br label %1730

1730:                                             ; preds = %1724, %1720
  %1731 = phi ptr [ %1721, %1720 ], [ %1729, %1724 ]
  %1732 = ptrtoint ptr %1731 to i32
  %1733 = ptrtoint ptr %1681 to i32
  %1734 = sub i32 %1732, %1733
  br label %1735

1735:                                             ; preds = %1730, %1702, %1688
  %1736 = phi i32 [ %1734, %1730 ], [ %1690, %1688 ], [ %1708, %1702 ]
  %1737 = add i32 %1736, %1677
  br label %1738

1738:                                             ; preds = %1735, %1676
  %1739 = phi i32 [ %1737, %1735 ], [ %1677, %1676 ]
  %1740 = add i32 %1739, 4
  br label %1741

1741:                                             ; preds = %1738, %1608, %1581, %1567
  %1742 = phi i32 [ %1614, %1738 ], [ %1549, %1608 ], [ %1549, %1567 ], [ %1549, %1581 ]
  %1743 = phi i32 [ %1740, %1738 ], [ %1611, %1608 ], [ %1569, %1567 ], [ %1586, %1581 ]
  %1744 = icmp ugt i32 %1743, %1552
  br i1 %1744, label %1745, label %1749

1745:                                             ; preds = %1741
  %1746 = sub i32 %1547, %1551
  %1747 = getelementptr i8, ptr %1047, i32 %1743
  %1748 = icmp eq ptr %1747, %6
  br i1 %1748, label %2039, label %1749

1749:                                             ; preds = %1745, %1741, %1612, %1555
  %1750 = phi i32 [ %1742, %1745 ], [ %1742, %1741 ], [ %1615, %1612 ], [ %1549, %1555 ]
  %1751 = phi i32 [ %1746, %1745 ], [ %1550, %1741 ], [ %1550, %1612 ], [ %1550, %1555 ]
  %1752 = phi i32 [ %1743, %1745 ], [ %1552, %1741 ], [ %1552, %1612 ], [ %1552, %1555 ]
  %1753 = icmp ugt i32 %1551, %1508
  br i1 %1753, label %1754, label %2039

1754:                                             ; preds = %1749
  %1755 = and i32 %1551, %1489
  %1756 = getelementptr i32, ptr %1486, i32 %1755
  %1757 = add i32 %1553, -1
  %1758 = load i32, ptr %1756, align 4
  %1759 = icmp uge i32 %1758, %1507
  %1760 = icmp ne i32 %1757, 0
  %1761 = and i1 %1760, %1759
  br i1 %1761, label %1548, label %2039

1762:                                             ; preds = %1212, %1212
  %1763 = load ptr, ptr %42, align 4
  %1764 = load i32, ptr %43, align 4
  %1765 = shl nuw i32 1, %1764
  %1766 = add i32 %1765, -1
  %1767 = load ptr, ptr %8, align 4
  %1768 = load ptr, ptr %13, align 4
  %1769 = load i32, ptr %10, align 4
  %1770 = getelementptr i8, ptr %1767, i32 %1769
  %1771 = getelementptr i8, ptr %1768, i32 %1769
  %1772 = ptrtoint ptr %1047 to i32
  %1773 = ptrtoint ptr %1767 to i32
  %1774 = sub i32 %1772, %1773
  %1775 = load i32, ptr %27, align 4
  %1776 = shl nuw i32 1, %1775
  %1777 = load i32, ptr %16, align 4
  %1778 = sub i32 %1774, %1777
  %1779 = icmp ugt i32 %1778, %1776
  %1780 = sub i32 %1774, %1776
  %1781 = load i32, ptr %31, align 4
  %1782 = icmp eq i32 %1781, 0
  %1783 = select i1 %1782, i1 %1779, i1 false
  %1784 = select i1 %1783, i32 %1780, i32 %1777
  %1785 = tail call i32 @llvm.usub.sat.i32(i32 %1774, i32 %1765) #7
  %1786 = load i32, ptr %44, align 4
  %1787 = shl nuw i32 1, %1786
  %1788 = load ptr, ptr %45, align 4
  %1789 = load i32, ptr %46, align 4
  %1790 = shl nsw i32 -1, %1764
  %1791 = xor i32 %1790, -1
  %1792 = icmp ult i32 %1041, %1774
  %1793 = sub i32 64, %1789
  %1794 = zext i32 %1793 to i64
  br i1 %1792, label %1795, label %1808

1795:                                             ; preds = %1795, %1762
  %1796 = phi i32 [ %1806, %1795 ], [ %1041, %1762 ]
  %1797 = getelementptr i8, ptr %1767, i32 %1796
  %1798 = load i64, ptr %1797, align 1
  %1799 = mul i64 %1798, -3523014627193847808
  %1800 = lshr i64 %1799, %1794
  %1801 = trunc i64 %1800 to i32
  %1802 = getelementptr i32, ptr %1788, i32 %1801
  %1803 = load i32, ptr %1802, align 4
  %1804 = and i32 %1796, %1791
  %1805 = getelementptr i32, ptr %1763, i32 %1804
  store i32 %1803, ptr %1805, align 4
  store i32 %1796, ptr %1802, align 4
  %1806 = add nuw i32 %1796, 1
  %1807 = icmp ult i32 %1806, %1774
  br i1 %1807, label %1795, label %1808

1808:                                             ; preds = %1795, %1762
  store i32 %1774, ptr %47, align 4
  %1809 = load i64, ptr %1047, align 1
  %1810 = mul i64 %1809, -3523014627193847808
  %1811 = lshr i64 %1810, %1794
  %1812 = trunc i64 %1811 to i32
  %1813 = getelementptr i32, ptr %1788, i32 %1812
  %1814 = load i32, ptr %1813, align 4
  %1815 = icmp ult i32 %1814, %1784
  %1816 = lshr i64 %1809, 32
  %1817 = trunc i64 %1816 to i32
  br i1 %1815, label %2060, label %1818

1818:                                             ; preds = %1808
  %1819 = trunc i64 %1809 to i32
  %1820 = icmp ugt ptr %33, %1047
  %1821 = getelementptr i8, ptr %1042, i32 5
  %1822 = ptrtoint ptr %1771 to i32
  %1823 = ptrtoint ptr %1821 to i32
  %1824 = add i32 %1774, 2
  br label %1825

1825:                                             ; preds = %2031, %1818
  %1826 = phi i32 [ %1819, %1818 ], [ %2027, %2031 ]
  %1827 = phi i32 [ 999999999, %1818 ], [ %2028, %2031 ]
  %1828 = phi i32 [ %1814, %1818 ], [ %2035, %2031 ]
  %1829 = phi i32 [ 3, %1818 ], [ %2029, %2031 ]
  %1830 = phi i32 [ %1787, %1818 ], [ %2034, %2031 ]
  %1831 = icmp ult i32 %1828, %1769
  br i1 %1831, label %1889, label %1832

1832:                                             ; preds = %1825
  %1833 = getelementptr i8, ptr %1767, i32 %1828
  %1834 = getelementptr i8, ptr %1833, i32 %1829
  %1835 = load i8, ptr %1834, align 1
  %1836 = getelementptr i8, ptr %1047, i32 %1829
  %1837 = load i8, ptr %1836, align 1
  %1838 = icmp eq i8 %1835, %1837
  br i1 %1838, label %1839, label %2026

1839:                                             ; preds = %1832
  br i1 %1820, label %1840, label %1864

1840:                                             ; preds = %1839
  %1841 = load i32, ptr %1833, align 1
  %1842 = xor i32 %1826, %1841
  %1843 = icmp eq i32 %1842, 0
  br i1 %1843, label %1847, label %1844

1844:                                             ; preds = %1840
  %1845 = tail call i32 @llvm.cttz.i32(i32 %1842, i1 true) #7, !range !8
  %1846 = lshr i32 %1845, 3
  br label %2018

1847:                                             ; preds = %1853, %1840
  %1848 = phi ptr [ %1851, %1853 ], [ %1047, %1840 ]
  %1849 = phi ptr [ %1850, %1853 ], [ %1833, %1840 ]
  %1850 = getelementptr i8, ptr %1849, i32 4
  %1851 = getelementptr i8, ptr %1848, i32 4
  %1852 = icmp ult ptr %1851, %33
  br i1 %1852, label %1853, label %1864

1853:                                             ; preds = %1847
  %1854 = load i32, ptr %1850, align 1
  %1855 = load i32, ptr %1851, align 1
  %1856 = xor i32 %1855, %1854
  %1857 = icmp eq i32 %1856, 0
  br i1 %1857, label %1847, label %1858

1858:                                             ; preds = %1853
  %1859 = tail call i32 @llvm.cttz.i32(i32 %1856, i1 true) #7, !range !8
  %1860 = lshr i32 %1859, 3
  %1861 = getelementptr i8, ptr %1851, i32 %1860
  %1862 = ptrtoint ptr %1861 to i32
  %1863 = sub i32 %1862, %1772
  br label %2018

1864:                                             ; preds = %1847, %1839
  %1865 = phi ptr [ %1047, %1839 ], [ %1851, %1847 ]
  %1866 = phi ptr [ %1833, %1839 ], [ %1850, %1847 ]
  %1867 = icmp ult ptr %1865, %34
  br i1 %1867, label %1868, label %1875

1868:                                             ; preds = %1864
  %1869 = load i16, ptr %1866, align 1
  %1870 = load i16, ptr %1865, align 1
  %1871 = icmp eq i16 %1869, %1870
  br i1 %1871, label %1872, label %1875

1872:                                             ; preds = %1868
  %1873 = getelementptr i8, ptr %1865, i32 2
  %1874 = getelementptr i8, ptr %1866, i32 2
  br label %1875

1875:                                             ; preds = %1872, %1868, %1864
  %1876 = phi ptr [ %1873, %1872 ], [ %1865, %1868 ], [ %1865, %1864 ]
  %1877 = phi ptr [ %1874, %1872 ], [ %1866, %1868 ], [ %1866, %1864 ]
  %1878 = icmp ult ptr %1876, %6
  br i1 %1878, label %1879, label %1885

1879:                                             ; preds = %1875
  %1880 = load i8, ptr %1877, align 1
  %1881 = load i8, ptr %1876, align 1
  %1882 = icmp eq i8 %1880, %1881
  %1883 = zext i1 %1882 to i32
  %1884 = getelementptr i8, ptr %1876, i32 %1883
  br label %1885

1885:                                             ; preds = %1879, %1875
  %1886 = phi ptr [ %1876, %1875 ], [ %1884, %1879 ]
  %1887 = ptrtoint ptr %1886 to i32
  %1888 = sub i32 %1887, %1772
  br label %2018

1889:                                             ; preds = %1825
  %1890 = getelementptr i8, ptr %1768, i32 %1828
  %1891 = load i32, ptr %1890, align 1
  %1892 = load i32, ptr %1047, align 1
  %1893 = icmp eq i32 %1891, %1892
  br i1 %1893, label %1894, label %2026

1894:                                             ; preds = %1889
  %1895 = getelementptr i8, ptr %1890, i32 4
  %1896 = ptrtoint ptr %1895 to i32
  %1897 = sub i32 %1822, %1896
  %1898 = getelementptr i8, ptr %1821, i32 %1897
  %1899 = icmp ult ptr %1898, %6
  %1900 = select i1 %1899, ptr %1898, ptr %6
  %1901 = getelementptr i8, ptr %1900, i32 -3
  %1902 = icmp ugt ptr %1901, %1821
  br i1 %1902, label %1903, label %1927

1903:                                             ; preds = %1894
  %1904 = load i32, ptr %1895, align 1
  %1905 = xor i32 %1904, %1817
  %1906 = icmp eq i32 %1905, 0
  br i1 %1906, label %1910, label %1907

1907:                                             ; preds = %1903
  %1908 = tail call i32 @llvm.cttz.i32(i32 %1905, i1 true) #7, !range !8
  %1909 = lshr i32 %1908, 3
  br label %1953

1910:                                             ; preds = %1916, %1903
  %1911 = phi ptr [ %1914, %1916 ], [ %1821, %1903 ]
  %1912 = phi ptr [ %1913, %1916 ], [ %1895, %1903 ]
  %1913 = getelementptr i8, ptr %1912, i32 4
  %1914 = getelementptr i8, ptr %1911, i32 4
  %1915 = icmp ult ptr %1914, %1901
  br i1 %1915, label %1916, label %1927

1916:                                             ; preds = %1910
  %1917 = load i32, ptr %1913, align 1
  %1918 = load i32, ptr %1914, align 1
  %1919 = xor i32 %1918, %1917
  %1920 = icmp eq i32 %1919, 0
  br i1 %1920, label %1910, label %1921

1921:                                             ; preds = %1916
  %1922 = tail call i32 @llvm.cttz.i32(i32 %1919, i1 true) #7, !range !8
  %1923 = lshr i32 %1922, 3
  %1924 = getelementptr i8, ptr %1914, i32 %1923
  %1925 = ptrtoint ptr %1924 to i32
  %1926 = sub i32 %1925, %1823
  br label %1953

1927:                                             ; preds = %1910, %1894
  %1928 = phi ptr [ %1821, %1894 ], [ %1914, %1910 ]
  %1929 = phi ptr [ %1895, %1894 ], [ %1913, %1910 ]
  %1930 = getelementptr i8, ptr %1900, i32 -1
  %1931 = icmp ult ptr %1928, %1930
  br i1 %1931, label %1932, label %1939

1932:                                             ; preds = %1927
  %1933 = load i16, ptr %1929, align 1
  %1934 = load i16, ptr %1928, align 1
  %1935 = icmp eq i16 %1933, %1934
  br i1 %1935, label %1936, label %1939

1936:                                             ; preds = %1932
  %1937 = getelementptr i8, ptr %1928, i32 2
  %1938 = getelementptr i8, ptr %1929, i32 2
  br label %1939

1939:                                             ; preds = %1936, %1932, %1927
  %1940 = phi ptr [ %1937, %1936 ], [ %1928, %1932 ], [ %1928, %1927 ]
  %1941 = phi ptr [ %1938, %1936 ], [ %1929, %1932 ], [ %1929, %1927 ]
  %1942 = icmp ult ptr %1940, %1900
  br i1 %1942, label %1943, label %1949

1943:                                             ; preds = %1939
  %1944 = load i8, ptr %1941, align 1
  %1945 = load i8, ptr %1940, align 1
  %1946 = icmp eq i8 %1944, %1945
  %1947 = zext i1 %1946 to i32
  %1948 = getelementptr i8, ptr %1940, i32 %1947
  br label %1949

1949:                                             ; preds = %1943, %1939
  %1950 = phi ptr [ %1940, %1939 ], [ %1948, %1943 ]
  %1951 = ptrtoint ptr %1950 to i32
  %1952 = sub i32 %1951, %1823
  br label %1953

1953:                                             ; preds = %1949, %1921, %1907
  %1954 = phi i32 [ %1952, %1949 ], [ %1909, %1907 ], [ %1926, %1921 ]
  %1955 = getelementptr i8, ptr %1895, i32 %1954
  %1956 = icmp eq ptr %1955, %1771
  br i1 %1956, label %1957, label %2015

1957:                                             ; preds = %1953
  %1958 = getelementptr i8, ptr %1821, i32 %1954
  %1959 = icmp ugt ptr %33, %1958
  br i1 %1959, label %1960, label %1986

1960:                                             ; preds = %1957
  %1961 = load i32, ptr %1770, align 1
  %1962 = load i32, ptr %1958, align 1
  %1963 = xor i32 %1962, %1961
  %1964 = icmp eq i32 %1963, 0
  br i1 %1964, label %1968, label %1965

1965:                                             ; preds = %1960
  %1966 = tail call i32 @llvm.cttz.i32(i32 %1963, i1 true) #7, !range !8
  %1967 = lshr i32 %1966, 3
  br label %2012

1968:                                             ; preds = %1974, %1960
  %1969 = phi ptr [ %1972, %1974 ], [ %1958, %1960 ]
  %1970 = phi ptr [ %1971, %1974 ], [ %1770, %1960 ]
  %1971 = getelementptr i8, ptr %1970, i32 4
  %1972 = getelementptr i8, ptr %1969, i32 4
  %1973 = icmp ult ptr %1972, %33
  br i1 %1973, label %1974, label %1986

1974:                                             ; preds = %1968
  %1975 = load i32, ptr %1971, align 1
  %1976 = load i32, ptr %1972, align 1
  %1977 = xor i32 %1976, %1975
  %1978 = icmp eq i32 %1977, 0
  br i1 %1978, label %1968, label %1979

1979:                                             ; preds = %1974
  %1980 = tail call i32 @llvm.cttz.i32(i32 %1977, i1 true) #7, !range !8
  %1981 = lshr i32 %1980, 3
  %1982 = getelementptr i8, ptr %1972, i32 %1981
  %1983 = ptrtoint ptr %1982 to i32
  %1984 = ptrtoint ptr %1958 to i32
  %1985 = sub i32 %1983, %1984
  br label %2012

1986:                                             ; preds = %1968, %1957
  %1987 = phi ptr [ %1958, %1957 ], [ %1972, %1968 ]
  %1988 = phi ptr [ %1770, %1957 ], [ %1971, %1968 ]
  %1989 = icmp ult ptr %1987, %34
  br i1 %1989, label %1990, label %1997

1990:                                             ; preds = %1986
  %1991 = load i16, ptr %1988, align 1
  %1992 = load i16, ptr %1987, align 1
  %1993 = icmp eq i16 %1991, %1992
  br i1 %1993, label %1994, label %1997

1994:                                             ; preds = %1990
  %1995 = getelementptr i8, ptr %1987, i32 2
  %1996 = getelementptr i8, ptr %1988, i32 2
  br label %1997

1997:                                             ; preds = %1994, %1990, %1986
  %1998 = phi ptr [ %1995, %1994 ], [ %1987, %1990 ], [ %1987, %1986 ]
  %1999 = phi ptr [ %1996, %1994 ], [ %1988, %1990 ], [ %1988, %1986 ]
  %2000 = icmp ult ptr %1998, %6
  br i1 %2000, label %2001, label %2007

2001:                                             ; preds = %1997
  %2002 = load i8, ptr %1999, align 1
  %2003 = load i8, ptr %1998, align 1
  %2004 = icmp eq i8 %2002, %2003
  %2005 = zext i1 %2004 to i32
  %2006 = getelementptr i8, ptr %1998, i32 %2005
  br label %2007

2007:                                             ; preds = %2001, %1997
  %2008 = phi ptr [ %1998, %1997 ], [ %2006, %2001 ]
  %2009 = ptrtoint ptr %2008 to i32
  %2010 = ptrtoint ptr %1958 to i32
  %2011 = sub i32 %2009, %2010
  br label %2012

2012:                                             ; preds = %2007, %1979, %1965
  %2013 = phi i32 [ %2011, %2007 ], [ %1967, %1965 ], [ %1985, %1979 ]
  %2014 = add i32 %2013, %1954
  br label %2015

2015:                                             ; preds = %2012, %1953
  %2016 = phi i32 [ %2014, %2012 ], [ %1954, %1953 ]
  %2017 = add i32 %2016, 4
  br label %2018

2018:                                             ; preds = %2015, %1885, %1858, %1844
  %2019 = phi i32 [ %1891, %2015 ], [ %1826, %1885 ], [ %1826, %1844 ], [ %1826, %1858 ]
  %2020 = phi i32 [ %2017, %2015 ], [ %1888, %1885 ], [ %1846, %1844 ], [ %1863, %1858 ]
  %2021 = icmp ugt i32 %2020, %1829
  br i1 %2021, label %2022, label %2026

2022:                                             ; preds = %2018
  %2023 = sub i32 %1824, %1828
  %2024 = getelementptr i8, ptr %1047, i32 %2020
  %2025 = icmp eq ptr %2024, %6
  br i1 %2025, label %2039, label %2026

2026:                                             ; preds = %2022, %2018, %1889, %1832
  %2027 = phi i32 [ %2019, %2022 ], [ %2019, %2018 ], [ %1892, %1889 ], [ %1826, %1832 ]
  %2028 = phi i32 [ %2023, %2022 ], [ %1827, %2018 ], [ %1827, %1889 ], [ %1827, %1832 ]
  %2029 = phi i32 [ %2020, %2022 ], [ %1829, %2018 ], [ %1829, %1889 ], [ %1829, %1832 ]
  %2030 = icmp ugt i32 %1828, %1785
  br i1 %2030, label %2031, label %2039

2031:                                             ; preds = %2026
  %2032 = and i32 %1828, %1766
  %2033 = getelementptr i32, ptr %1763, i32 %2032
  %2034 = add i32 %1830, -1
  %2035 = load i32, ptr %2033, align 4
  %2036 = icmp uge i32 %2035, %1784
  %2037 = icmp ne i32 %2034, 0
  %2038 = and i1 %2037, %2036
  br i1 %2038, label %1825, label %2039

2039:                                             ; preds = %2031, %2026, %2022, %1754, %1749, %1745, %1477, %1473, %1469
  %2040 = phi i32 [ %1229, %1477 ], [ %1229, %1473 ], [ %1229, %1469 ], [ %1774, %2031 ], [ %1774, %2026 ], [ %1774, %2022 ], [ %1497, %1754 ], [ %1497, %1749 ], [ %1497, %1745 ]
  %2041 = phi i32 [ %1470, %1469 ], [ %1474, %1473 ], [ %1474, %1477 ], [ %2023, %2022 ], [ %2028, %2026 ], [ %2028, %2031 ], [ %1746, %1745 ], [ %1751, %1749 ], [ %1751, %1754 ]
  %2042 = phi i32 [ %1467, %1469 ], [ %1475, %1473 ], [ %1475, %1477 ], [ %2020, %2022 ], [ %2029, %2026 ], [ %2029, %2031 ], [ %1743, %1745 ], [ %1752, %1749 ], [ %1752, %1754 ]
  %2043 = icmp ugt i32 %2042, 3
  br i1 %2043, label %2044, label %2060

2044:                                             ; preds = %2039
  %2045 = add i32 %1213, 1
  %2046 = tail call i32 @llvm.ctlz.i32(i32 %2045, i1 false) #7, !range !8
  %2047 = xor i32 %2046, -32
  %2048 = add i32 %2041, 1
  %2049 = tail call i32 @llvm.ctlz.i32(i32 %2048, i1 false) #7, !range !8
  %2050 = xor i32 %2049, -32
  %2051 = shl i32 %1215, 2
  %2052 = add nsw i32 %2047, 5
  %2053 = add i32 %2052, %2051
  %2054 = shl i32 %2042, 2
  %2055 = or i32 %2054, 1
  %2056 = add i32 %2055, %2050
  %2057 = icmp sgt i32 %2056, %2053
  br i1 %2057, label %2058, label %2060

2058:                                             ; preds = %2044
  %2059 = icmp ult ptr %1047, %7
  br i1 %2059, label %1040, label %2060

2060:                                             ; preds = %2058, %2044, %2039, %1808, %1531, %1261, %1035
  %2061 = phi i32 [ %1038, %1035 ], [ %1213, %1808 ], [ %1213, %1531 ], [ %1213, %1261 ], [ %1213, %2039 ], [ %1213, %2044 ], [ %2041, %2058 ]
  %2062 = phi ptr [ %1037, %1035 ], [ %1214, %1808 ], [ %1214, %1531 ], [ %1214, %1261 ], [ %1214, %2039 ], [ %1214, %2044 ], [ %1047, %2058 ]
  %2063 = phi i32 [ %1027, %1035 ], [ %1215, %1808 ], [ %1215, %1531 ], [ %1215, %1261 ], [ %1215, %2039 ], [ %1215, %2044 ], [ %2042, %2058 ]
  %2064 = icmp eq i32 %2061, 0
  br i1 %2064, label %2092, label %2065

2065:                                             ; preds = %2060
  %2066 = ptrtoint ptr %2062 to i32
  %2067 = add i32 %2061, -2
  %2068 = add i32 %2061, %29
  %2069 = sub i32 2, %2068
  %2070 = add i32 %2069, %2066
  %2071 = icmp ult i32 %2070, %11
  %2072 = select i1 %2071, ptr %14, ptr %9
  %2073 = getelementptr i8, ptr %2072, i32 %2070
  %2074 = select i1 %2071, ptr %18, ptr %12
  %2075 = icmp ugt ptr %2062, %51
  %2076 = icmp ugt ptr %2073, %2074
  %2077 = select i1 %2075, i1 %2076, i1 false
  br i1 %2077, label %2078, label %2092

2078:                                             ; preds = %2087, %2065
  %2079 = phi ptr [ %2084, %2087 ], [ %2073, %2065 ]
  %2080 = phi i32 [ %2088, %2087 ], [ %2063, %2065 ]
  %2081 = phi ptr [ %2082, %2087 ], [ %2062, %2065 ]
  %2082 = getelementptr i8, ptr %2081, i32 -1
  %2083 = load i8, ptr %2082, align 1
  %2084 = getelementptr i8, ptr %2079, i32 -1
  %2085 = load i8, ptr %2084, align 1
  %2086 = icmp eq i8 %2083, %2085
  br i1 %2086, label %2087, label %2092

2087:                                             ; preds = %2078
  %2088 = add i32 %2080, 1
  %2089 = icmp ugt ptr %2082, %51
  %2090 = icmp ugt ptr %2084, %2074
  %2091 = select i1 %2089, i1 %2090, i1 false
  br i1 %2091, label %2078, label %2092

2092:                                             ; preds = %2087, %2078, %2065, %2060
  %2093 = phi ptr [ %2062, %2060 ], [ %2062, %2065 ], [ %2082, %2087 ], [ %2081, %2078 ]
  %2094 = phi i32 [ %2063, %2060 ], [ %2063, %2065 ], [ %2088, %2087 ], [ %2080, %2078 ]
  %2095 = phi i32 [ %53, %2060 ], [ %52, %2065 ], [ %52, %2078 ], [ %52, %2087 ]
  %2096 = phi i32 [ %52, %2060 ], [ %2067, %2065 ], [ %2067, %2078 ], [ %2067, %2087 ]
  %2097 = ptrtoint ptr %2093 to i32
  %2098 = ptrtoint ptr %51 to i32
  %2099 = sub i32 %2097, %2098
  %2100 = add i32 %2094, -3
  %2101 = getelementptr i8, ptr %51, i32 %2099
  %2102 = icmp ugt ptr %2101, %35
  %2103 = load ptr, ptr %36, align 4
  br i1 %2102, label %2125, label %2104

2104:                                             ; preds = %2092
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2103, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %2105 = icmp ugt i32 %2099, 16
  %2106 = load ptr, ptr %36, align 4
  br i1 %2105, label %2109, label %2107

2107:                                             ; preds = %2104
  %2108 = getelementptr i8, ptr %2106, i32 %2099
  store ptr %2108, ptr %36, align 4
  br label %2168

2109:                                             ; preds = %2104
  %2110 = getelementptr i8, ptr %2106, i32 16
  %2111 = getelementptr i8, ptr %51, i32 16
  %2112 = add i32 %2099, -16
  %2113 = getelementptr i8, ptr %2106, i32 %2099
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2110, ptr noundef align 1 dereferenceable(16) %2111, i32 16, i1 false) #7
  %2114 = icmp slt i32 %2112, 17
  br i1 %2114, label %2157, label %2115

2115:                                             ; preds = %2109
  %2116 = getelementptr i8, ptr %2106, i32 32
  br label %2117

2117:                                             ; preds = %2117, %2115
  %2118 = phi ptr [ %2111, %2115 ], [ %2122, %2117 ]
  %2119 = phi ptr [ %2116, %2115 ], [ %2123, %2117 ]
  %2120 = getelementptr i8, ptr %2118, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2119, ptr noundef align 1 dereferenceable(16) %2120, i32 16, i1 false) #7
  %2121 = getelementptr i8, ptr %2119, i32 16
  %2122 = getelementptr i8, ptr %2118, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2121, ptr noundef align 1 dereferenceable(16) %2122, i32 16, i1 false) #7
  %2123 = getelementptr i8, ptr %2119, i32 32
  %2124 = icmp ult ptr %2123, %2113
  br i1 %2124, label %2117, label %2157

2125:                                             ; preds = %2092
  %2126 = ptrtoint ptr %2101 to i32
  %2127 = icmp ult ptr %35, %51
  br i1 %2127, label %2142, label %2128

2128:                                             ; preds = %2125
  %2129 = sub i32 %37, %2098
  %2130 = getelementptr i8, ptr %2103, i32 %2129
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2103, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %2131 = icmp slt i32 %2129, 17
  br i1 %2131, label %2142, label %2132

2132:                                             ; preds = %2128
  %2133 = getelementptr i8, ptr %2103, i32 16
  br label %2134

2134:                                             ; preds = %2134, %2132
  %2135 = phi ptr [ %51, %2132 ], [ %2139, %2134 ]
  %2136 = phi ptr [ %2133, %2132 ], [ %2140, %2134 ]
  %2137 = getelementptr i8, ptr %2135, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2136, ptr noundef align 1 dereferenceable(16) %2137, i32 16, i1 false) #7
  %2138 = getelementptr i8, ptr %2136, i32 16
  %2139 = getelementptr i8, ptr %2135, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2138, ptr noundef align 1 dereferenceable(16) %2139, i32 16, i1 false) #7
  %2140 = getelementptr i8, ptr %2136, i32 32
  %2141 = icmp ult ptr %2140, %2130
  br i1 %2141, label %2134, label %2142

2142:                                             ; preds = %2134, %2128, %2125
  %2143 = phi ptr [ %35, %2128 ], [ %51, %2125 ], [ %35, %2134 ]
  %2144 = phi ptr [ %2130, %2128 ], [ %2103, %2125 ], [ %2130, %2134 ]
  %2145 = icmp ult ptr %2143, %2101
  br i1 %2145, label %2146, label %2157

2146:                                             ; preds = %2142
  %2147 = ptrtoint ptr %2143 to i32
  %2148 = sub i32 %2126, %2147
  %2149 = getelementptr i8, ptr %2143, i32 %2148
  br label %2150

2150:                                             ; preds = %2150, %2146
  %2151 = phi ptr [ %2155, %2150 ], [ %2144, %2146 ]
  %2152 = phi ptr [ %2153, %2150 ], [ %2143, %2146 ]
  %2153 = getelementptr i8, ptr %2152, i32 1
  %2154 = load i8, ptr %2152, align 1
  %2155 = getelementptr i8, ptr %2151, i32 1
  store i8 %2154, ptr %2151, align 1
  %2156 = icmp eq ptr %2153, %2149
  br i1 %2156, label %2157, label %2150

2157:                                             ; preds = %2150, %2142, %2117, %2109
  %2158 = load ptr, ptr %36, align 4
  %2159 = getelementptr i8, ptr %2158, i32 %2099
  store ptr %2159, ptr %36, align 4
  %2160 = icmp ugt i32 %2099, 65535
  br i1 %2160, label %2161, label %2168

2161:                                             ; preds = %2157
  store i32 1, ptr %38, align 4
  %2162 = load ptr, ptr %39, align 4
  %2163 = load ptr, ptr %1, align 4
  %2164 = ptrtoint ptr %2162 to i32
  %2165 = ptrtoint ptr %2163 to i32
  %2166 = sub i32 %2164, %2165
  %2167 = ashr exact i32 %2166, 3
  store i32 %2167, ptr %40, align 4
  br label %2168

2168:                                             ; preds = %2161, %2157, %2107
  %2169 = trunc i32 %2099 to i16
  %2170 = load ptr, ptr %39, align 4
  %2171 = getelementptr inbounds %struct.seqDef_s, ptr %2170, i32 0, i32 1
  store i16 %2169, ptr %2171, align 4
  %2172 = add i32 %2061, 1
  %2173 = load ptr, ptr %39, align 4
  store i32 %2172, ptr %2173, align 4
  %2174 = icmp ugt i32 %2100, 65535
  br i1 %2174, label %2177, label %2175

2175:                                             ; preds = %2168
  %2176 = load ptr, ptr %39, align 4
  br label %2184

2177:                                             ; preds = %2168
  store i32 2, ptr %38, align 4
  %2178 = load ptr, ptr %39, align 4
  %2179 = load ptr, ptr %1, align 4
  %2180 = ptrtoint ptr %2178 to i32
  %2181 = ptrtoint ptr %2179 to i32
  %2182 = sub i32 %2180, %2181
  %2183 = ashr exact i32 %2182, 3
  store i32 %2183, ptr %40, align 4
  br label %2184

2184:                                             ; preds = %2177, %2175
  %2185 = phi ptr [ %2176, %2175 ], [ %2178, %2177 ]
  %2186 = trunc i32 %2100 to i16
  %2187 = getelementptr inbounds %struct.seqDef_s, ptr %2185, i32 0, i32 2
  store i16 %2186, ptr %2187, align 2
  %2188 = load ptr, ptr %39, align 4
  %2189 = getelementptr %struct.seqDef_s, ptr %2188, i32 1
  store ptr %2189, ptr %39, align 4
  %2190 = getelementptr i8, ptr %2093, i32 %2094
  %2191 = icmp ugt ptr %2190, %7
  br i1 %2191, label %2376, label %2192

2192:                                             ; preds = %2368, %2184
  %2193 = phi ptr [ %2373, %2368 ], [ %2189, %2184 ]
  %2194 = phi ptr [ %2374, %2368 ], [ %2190, %2184 ]
  %2195 = phi i32 [ %2196, %2368 ], [ %2096, %2184 ]
  %2196 = phi i32 [ %2195, %2368 ], [ %2095, %2184 ]
  %2197 = ptrtoint ptr %2194 to i32
  %2198 = sub i32 %2197, %29
  %2199 = load i32, ptr %16, align 4
  %2200 = sub i32 %2198, %2199
  %2201 = icmp ugt i32 %2200, %30
  %2202 = sub i32 %2198, %30
  %2203 = load i32, ptr %31, align 4
  %2204 = icmp eq i32 %2203, 0
  %2205 = select i1 %2204, i1 %2201, i1 false
  %2206 = select i1 %2205, i32 %2202, i32 %2199
  %2207 = sub i32 %2198, %2196
  %2208 = icmp ult i32 %2207, %11
  %2209 = select i1 %2208, ptr %14, ptr %9
  %2210 = getelementptr i8, ptr %2209, i32 %2207
  %2211 = sub i32 %32, %2207
  %2212 = icmp ugt i32 %2211, 2
  %2213 = icmp ugt i32 %2207, %2206
  %2214 = and i1 %2212, %2213
  br i1 %2214, label %2215, label %2376

2215:                                             ; preds = %2192
  %2216 = load i32, ptr %2194, align 1
  %2217 = load i32, ptr %2210, align 1
  %2218 = icmp eq i32 %2216, %2217
  br i1 %2218, label %2219, label %2376

2219:                                             ; preds = %2215
  %2220 = select i1 %2208, ptr %15, ptr %6
  %2221 = getelementptr i8, ptr %2194, i32 4
  %2222 = getelementptr i8, ptr %2210, i32 4
  %2223 = ptrtoint ptr %2220 to i32
  %2224 = ptrtoint ptr %2222 to i32
  %2225 = sub i32 %2223, %2224
  %2226 = getelementptr i8, ptr %2221, i32 %2225
  %2227 = icmp ult ptr %2226, %6
  %2228 = select i1 %2227, ptr %2226, ptr %6
  %2229 = getelementptr i8, ptr %2228, i32 -3
  %2230 = icmp ugt ptr %2229, %2221
  br i1 %2230, label %2231, label %2257

2231:                                             ; preds = %2219
  %2232 = load i32, ptr %2222, align 1
  %2233 = load i32, ptr %2221, align 1
  %2234 = xor i32 %2233, %2232
  %2235 = icmp eq i32 %2234, 0
  br i1 %2235, label %2239, label %2236

2236:                                             ; preds = %2231
  %2237 = tail call i32 @llvm.cttz.i32(i32 %2234, i1 true) #7, !range !8
  %2238 = lshr i32 %2237, 3
  br label %2284

2239:                                             ; preds = %2245, %2231
  %2240 = phi ptr [ %2243, %2245 ], [ %2221, %2231 ]
  %2241 = phi ptr [ %2242, %2245 ], [ %2222, %2231 ]
  %2242 = getelementptr i8, ptr %2241, i32 4
  %2243 = getelementptr i8, ptr %2240, i32 4
  %2244 = icmp ult ptr %2243, %2229
  br i1 %2244, label %2245, label %2257

2245:                                             ; preds = %2239
  %2246 = load i32, ptr %2242, align 1
  %2247 = load i32, ptr %2243, align 1
  %2248 = xor i32 %2247, %2246
  %2249 = icmp eq i32 %2248, 0
  br i1 %2249, label %2239, label %2250

2250:                                             ; preds = %2245
  %2251 = tail call i32 @llvm.cttz.i32(i32 %2248, i1 true) #7, !range !8
  %2252 = lshr i32 %2251, 3
  %2253 = getelementptr i8, ptr %2243, i32 %2252
  %2254 = ptrtoint ptr %2253 to i32
  %2255 = ptrtoint ptr %2221 to i32
  %2256 = sub i32 %2254, %2255
  br label %2284

2257:                                             ; preds = %2239, %2219
  %2258 = phi ptr [ %2221, %2219 ], [ %2243, %2239 ]
  %2259 = phi ptr [ %2222, %2219 ], [ %2242, %2239 ]
  %2260 = getelementptr i8, ptr %2228, i32 -1
  %2261 = icmp ult ptr %2258, %2260
  br i1 %2261, label %2262, label %2269

2262:                                             ; preds = %2257
  %2263 = load i16, ptr %2259, align 1
  %2264 = load i16, ptr %2258, align 1
  %2265 = icmp eq i16 %2263, %2264
  br i1 %2265, label %2266, label %2269

2266:                                             ; preds = %2262
  %2267 = getelementptr i8, ptr %2258, i32 2
  %2268 = getelementptr i8, ptr %2259, i32 2
  br label %2269

2269:                                             ; preds = %2266, %2262, %2257
  %2270 = phi ptr [ %2267, %2266 ], [ %2258, %2262 ], [ %2258, %2257 ]
  %2271 = phi ptr [ %2268, %2266 ], [ %2259, %2262 ], [ %2259, %2257 ]
  %2272 = icmp ult ptr %2270, %2228
  br i1 %2272, label %2273, label %2279

2273:                                             ; preds = %2269
  %2274 = load i8, ptr %2271, align 1
  %2275 = load i8, ptr %2270, align 1
  %2276 = icmp eq i8 %2274, %2275
  %2277 = zext i1 %2276 to i32
  %2278 = getelementptr i8, ptr %2270, i32 %2277
  br label %2279

2279:                                             ; preds = %2273, %2269
  %2280 = phi ptr [ %2270, %2269 ], [ %2278, %2273 ]
  %2281 = ptrtoint ptr %2280 to i32
  %2282 = ptrtoint ptr %2221 to i32
  %2283 = sub i32 %2281, %2282
  br label %2284

2284:                                             ; preds = %2279, %2250, %2236
  %2285 = phi i32 [ %2283, %2279 ], [ %2238, %2236 ], [ %2256, %2250 ]
  %2286 = getelementptr i8, ptr %2222, i32 %2285
  %2287 = icmp eq ptr %2286, %2220
  br i1 %2287, label %2288, label %2346

2288:                                             ; preds = %2284
  %2289 = getelementptr i8, ptr %2221, i32 %2285
  %2290 = icmp ugt ptr %33, %2289
  br i1 %2290, label %2291, label %2317

2291:                                             ; preds = %2288
  %2292 = load i32, ptr %12, align 1
  %2293 = load i32, ptr %2289, align 1
  %2294 = xor i32 %2293, %2292
  %2295 = icmp eq i32 %2294, 0
  br i1 %2295, label %2299, label %2296

2296:                                             ; preds = %2291
  %2297 = tail call i32 @llvm.cttz.i32(i32 %2294, i1 true) #7, !range !8
  %2298 = lshr i32 %2297, 3
  br label %2343

2299:                                             ; preds = %2305, %2291
  %2300 = phi ptr [ %2303, %2305 ], [ %2289, %2291 ]
  %2301 = phi ptr [ %2302, %2305 ], [ %12, %2291 ]
  %2302 = getelementptr i8, ptr %2301, i32 4
  %2303 = getelementptr i8, ptr %2300, i32 4
  %2304 = icmp ult ptr %2303, %33
  br i1 %2304, label %2305, label %2317

2305:                                             ; preds = %2299
  %2306 = load i32, ptr %2302, align 1
  %2307 = load i32, ptr %2303, align 1
  %2308 = xor i32 %2307, %2306
  %2309 = icmp eq i32 %2308, 0
  br i1 %2309, label %2299, label %2310

2310:                                             ; preds = %2305
  %2311 = tail call i32 @llvm.cttz.i32(i32 %2308, i1 true) #7, !range !8
  %2312 = lshr i32 %2311, 3
  %2313 = getelementptr i8, ptr %2303, i32 %2312
  %2314 = ptrtoint ptr %2313 to i32
  %2315 = ptrtoint ptr %2289 to i32
  %2316 = sub i32 %2314, %2315
  br label %2343

2317:                                             ; preds = %2299, %2288
  %2318 = phi ptr [ %2289, %2288 ], [ %2303, %2299 ]
  %2319 = phi ptr [ %12, %2288 ], [ %2302, %2299 ]
  %2320 = icmp ult ptr %2318, %34
  br i1 %2320, label %2321, label %2328

2321:                                             ; preds = %2317
  %2322 = load i16, ptr %2319, align 1
  %2323 = load i16, ptr %2318, align 1
  %2324 = icmp eq i16 %2322, %2323
  br i1 %2324, label %2325, label %2328

2325:                                             ; preds = %2321
  %2326 = getelementptr i8, ptr %2318, i32 2
  %2327 = getelementptr i8, ptr %2319, i32 2
  br label %2328

2328:                                             ; preds = %2325, %2321, %2317
  %2329 = phi ptr [ %2326, %2325 ], [ %2318, %2321 ], [ %2318, %2317 ]
  %2330 = phi ptr [ %2327, %2325 ], [ %2319, %2321 ], [ %2319, %2317 ]
  %2331 = icmp ult ptr %2329, %6
  br i1 %2331, label %2332, label %2338

2332:                                             ; preds = %2328
  %2333 = load i8, ptr %2330, align 1
  %2334 = load i8, ptr %2329, align 1
  %2335 = icmp eq i8 %2333, %2334
  %2336 = zext i1 %2335 to i32
  %2337 = getelementptr i8, ptr %2329, i32 %2336
  br label %2338

2338:                                             ; preds = %2332, %2328
  %2339 = phi ptr [ %2329, %2328 ], [ %2337, %2332 ]
  %2340 = ptrtoint ptr %2339 to i32
  %2341 = ptrtoint ptr %2289 to i32
  %2342 = sub i32 %2340, %2341
  br label %2343

2343:                                             ; preds = %2338, %2310, %2296
  %2344 = phi i32 [ %2342, %2338 ], [ %2298, %2296 ], [ %2316, %2310 ]
  %2345 = add i32 %2344, %2285
  br label %2346

2346:                                             ; preds = %2343, %2284
  %2347 = phi i32 [ %2345, %2343 ], [ %2285, %2284 ]
  %2348 = add i32 %2347, 4
  %2349 = add i32 %2347, 1
  %2350 = icmp ugt ptr %2194, %35
  br i1 %2350, label %2354, label %2351

2351:                                             ; preds = %2346
  %2352 = load ptr, ptr %36, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %2352, ptr noundef align 1 dereferenceable(16) %2194, i32 16, i1 false) #7
  %2353 = load ptr, ptr %39, align 4
  br label %2354

2354:                                             ; preds = %2351, %2346
  %2355 = phi ptr [ %2193, %2346 ], [ %2353, %2351 ]
  %2356 = getelementptr inbounds %struct.seqDef_s, ptr %2355, i32 0, i32 1
  store i16 0, ptr %2356, align 4
  %2357 = load ptr, ptr %39, align 4
  store i32 1, ptr %2357, align 4
  %2358 = icmp ugt i32 %2349, 65535
  br i1 %2358, label %2361, label %2359

2359:                                             ; preds = %2354
  %2360 = load ptr, ptr %39, align 4
  br label %2368

2361:                                             ; preds = %2354
  store i32 2, ptr %38, align 4
  %2362 = load ptr, ptr %39, align 4
  %2363 = load ptr, ptr %1, align 4
  %2364 = ptrtoint ptr %2362 to i32
  %2365 = ptrtoint ptr %2363 to i32
  %2366 = sub i32 %2364, %2365
  %2367 = ashr exact i32 %2366, 3
  store i32 %2367, ptr %40, align 4
  br label %2368

2368:                                             ; preds = %2361, %2359
  %2369 = phi ptr [ %2360, %2359 ], [ %2362, %2361 ]
  %2370 = trunc i32 %2349 to i16
  %2371 = getelementptr inbounds %struct.seqDef_s, ptr %2369, i32 0, i32 2
  store i16 %2370, ptr %2371, align 2
  %2372 = load ptr, ptr %39, align 4
  %2373 = getelementptr %struct.seqDef_s, ptr %2372, i32 1
  store ptr %2373, ptr %39, align 4
  %2374 = getelementptr i8, ptr %2194, i32 %2348
  %2375 = icmp ugt ptr %2374, %7
  br i1 %2375, label %2376, label %2192

2376:                                             ; preds = %2368, %2215, %2192, %2184, %1029
  %2377 = phi i32 [ %53, %1029 ], [ %2095, %2184 ], [ %2196, %2192 ], [ %2196, %2215 ], [ %2195, %2368 ]
  %2378 = phi i32 [ %52, %1029 ], [ %2096, %2184 ], [ %2195, %2192 ], [ %2195, %2215 ], [ %2196, %2368 ]
  %2379 = phi ptr [ %51, %1029 ], [ %2190, %2184 ], [ %2194, %2192 ], [ %2194, %2215 ], [ %2374, %2368 ]
  %2380 = phi ptr [ %1034, %1029 ], [ %2190, %2184 ], [ %2194, %2192 ], [ %2194, %2215 ], [ %2374, %2368 ]
  %2381 = icmp ult ptr %2380, %7
  br i1 %2381, label %2382, label %2384

2382:                                             ; preds = %2376
  %2383 = load i32, ptr %16, align 4
  br label %48

2384:                                             ; preds = %2376, %5
  %2385 = phi i32 [ %21, %5 ], [ %2377, %2376 ]
  %2386 = phi i32 [ %19, %5 ], [ %2378, %2376 ]
  %2387 = phi ptr [ %3, %5 ], [ %2379, %2376 ]
  store i32 %2386, ptr %2, align 4
  store i32 %2385, ptr %20, align 4
  %2388 = ptrtoint ptr %6 to i32
  %2389 = ptrtoint ptr %2387 to i32
  %2390 = sub i32 %2388, %2389
  ret i32 %2390
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_lazy2_extDict(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = getelementptr i8, ptr %3, i32 %4
  %7 = getelementptr i8, ptr %6, i32 -8
  %8 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %9 = load ptr, ptr %8, align 4
  %10 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %11 = load i32, ptr %10, align 4
  %12 = getelementptr i8, ptr %9, i32 %11
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %14 = load ptr, ptr %13, align 4
  %15 = getelementptr i8, ptr %14, i32 %11
  %16 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %14, i32 %17
  %19 = load i32, ptr %2, align 4
  %20 = getelementptr i32, ptr %2, i32 1
  %21 = load i32, ptr %20, align 4
  %22 = icmp eq ptr %12, %3
  %23 = zext i1 %22 to i32
  %24 = getelementptr i8, ptr %3, i32 %23
  %25 = icmp ult ptr %24, %7
  br i1 %25, label %26, label %3404

26:                                               ; preds = %5
  %27 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %28 = load i32, ptr %27, align 4
  %29 = ptrtoint ptr %9 to i32
  %30 = shl nuw i32 1, %28
  %31 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %32 = add i32 %11, -1
  %33 = getelementptr i8, ptr %6, i32 -3
  %34 = getelementptr i8, ptr %6, i32 -1
  %35 = getelementptr i8, ptr %6, i32 -32
  %36 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %37 = ptrtoint ptr %35 to i32
  %38 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %39 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %40 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  %41 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %42 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %44 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %45 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %46 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %47 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  br label %48

48:                                               ; preds = %3402, %26
  %49 = phi i32 [ %17, %26 ], [ %3403, %3402 ]
  %50 = phi ptr [ %24, %26 ], [ %3400, %3402 ]
  %51 = phi ptr [ %3, %26 ], [ %3399, %3402 ]
  %52 = phi i32 [ %19, %26 ], [ %3398, %3402 ]
  %53 = phi i32 [ %21, %26 ], [ %3397, %3402 ]
  %54 = getelementptr i8, ptr %50, i32 1
  %55 = ptrtoint ptr %50 to i32
  %56 = sub i32 %55, %29
  %57 = add i32 %56, 1
  %58 = sub i32 %57, %49
  %59 = icmp ugt i32 %58, %30
  %60 = sub i32 %57, %30
  %61 = load i32, ptr %31, align 4
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i1 %59, i1 false
  %64 = select i1 %63, i32 %60, i32 %49
  %65 = sub i32 %57, %52
  %66 = icmp ult i32 %65, %11
  %67 = select i1 %66, ptr %14, ptr %9
  %68 = getelementptr i8, ptr %67, i32 %65
  %69 = sub i32 %32, %65
  %70 = icmp ugt i32 %69, 2
  %71 = icmp ugt i32 %65, %64
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %207

73:                                               ; preds = %48
  %74 = load i32, ptr %54, align 1
  %75 = load i32, ptr %68, align 1
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %207

77:                                               ; preds = %73
  %78 = select i1 %66, ptr %15, ptr %6
  %79 = getelementptr i8, ptr %50, i32 5
  %80 = getelementptr i8, ptr %68, i32 4
  %81 = ptrtoint ptr %78 to i32
  %82 = ptrtoint ptr %80 to i32
  %83 = sub i32 %81, %82
  %84 = getelementptr i8, ptr %79, i32 %83
  %85 = icmp ult ptr %84, %6
  %86 = select i1 %85, ptr %84, ptr %6
  %87 = getelementptr i8, ptr %86, i32 -3
  %88 = icmp ugt ptr %87, %79
  br i1 %88, label %89, label %115

89:                                               ; preds = %77
  %90 = load i32, ptr %80, align 1
  %91 = load i32, ptr %79, align 1
  %92 = xor i32 %91, %90
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = tail call i32 @llvm.cttz.i32(i32 %92, i1 true) #7, !range !8
  %96 = lshr i32 %95, 3
  br label %142

97:                                               ; preds = %103, %89
  %98 = phi ptr [ %101, %103 ], [ %79, %89 ]
  %99 = phi ptr [ %100, %103 ], [ %80, %89 ]
  %100 = getelementptr i8, ptr %99, i32 4
  %101 = getelementptr i8, ptr %98, i32 4
  %102 = icmp ult ptr %101, %87
  br i1 %102, label %103, label %115

103:                                              ; preds = %97
  %104 = load i32, ptr %100, align 1
  %105 = load i32, ptr %101, align 1
  %106 = xor i32 %105, %104
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %97, label %108

108:                                              ; preds = %103
  %109 = tail call i32 @llvm.cttz.i32(i32 %106, i1 true) #7, !range !8
  %110 = lshr i32 %109, 3
  %111 = getelementptr i8, ptr %101, i32 %110
  %112 = ptrtoint ptr %111 to i32
  %113 = ptrtoint ptr %79 to i32
  %114 = sub i32 %112, %113
  br label %142

115:                                              ; preds = %97, %77
  %116 = phi ptr [ %79, %77 ], [ %101, %97 ]
  %117 = phi ptr [ %80, %77 ], [ %100, %97 ]
  %118 = getelementptr i8, ptr %86, i32 -1
  %119 = icmp ult ptr %116, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %115
  %121 = load i16, ptr %117, align 1
  %122 = load i16, ptr %116, align 1
  %123 = icmp eq i16 %121, %122
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr i8, ptr %116, i32 2
  %126 = getelementptr i8, ptr %117, i32 2
  br label %127

127:                                              ; preds = %124, %120, %115
  %128 = phi ptr [ %125, %124 ], [ %116, %120 ], [ %116, %115 ]
  %129 = phi ptr [ %126, %124 ], [ %117, %120 ], [ %117, %115 ]
  %130 = icmp ult ptr %128, %86
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = load i8, ptr %129, align 1
  %133 = load i8, ptr %128, align 1
  %134 = icmp eq i8 %132, %133
  %135 = zext i1 %134 to i32
  %136 = getelementptr i8, ptr %128, i32 %135
  br label %137

137:                                              ; preds = %131, %127
  %138 = phi ptr [ %128, %127 ], [ %136, %131 ]
  %139 = ptrtoint ptr %138 to i32
  %140 = ptrtoint ptr %79 to i32
  %141 = sub i32 %139, %140
  br label %142

142:                                              ; preds = %137, %108, %94
  %143 = phi i32 [ %141, %137 ], [ %96, %94 ], [ %114, %108 ]
  %144 = getelementptr i8, ptr %80, i32 %143
  %145 = icmp eq ptr %144, %78
  br i1 %145, label %146, label %204

146:                                              ; preds = %142
  %147 = getelementptr i8, ptr %79, i32 %143
  %148 = icmp ugt ptr %33, %147
  br i1 %148, label %149, label %175

149:                                              ; preds = %146
  %150 = load i32, ptr %12, align 1
  %151 = load i32, ptr %147, align 1
  %152 = xor i32 %151, %150
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %149
  %155 = tail call i32 @llvm.cttz.i32(i32 %152, i1 true) #7, !range !8
  %156 = lshr i32 %155, 3
  br label %201

157:                                              ; preds = %163, %149
  %158 = phi ptr [ %161, %163 ], [ %147, %149 ]
  %159 = phi ptr [ %160, %163 ], [ %12, %149 ]
  %160 = getelementptr i8, ptr %159, i32 4
  %161 = getelementptr i8, ptr %158, i32 4
  %162 = icmp ult ptr %161, %33
  br i1 %162, label %163, label %175

163:                                              ; preds = %157
  %164 = load i32, ptr %160, align 1
  %165 = load i32, ptr %161, align 1
  %166 = xor i32 %165, %164
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %157, label %168

168:                                              ; preds = %163
  %169 = tail call i32 @llvm.cttz.i32(i32 %166, i1 true) #7, !range !8
  %170 = lshr i32 %169, 3
  %171 = getelementptr i8, ptr %161, i32 %170
  %172 = ptrtoint ptr %171 to i32
  %173 = ptrtoint ptr %147 to i32
  %174 = sub i32 %172, %173
  br label %201

175:                                              ; preds = %157, %146
  %176 = phi ptr [ %147, %146 ], [ %161, %157 ]
  %177 = phi ptr [ %12, %146 ], [ %160, %157 ]
  %178 = icmp ult ptr %176, %34
  br i1 %178, label %179, label %186

179:                                              ; preds = %175
  %180 = load i16, ptr %177, align 1
  %181 = load i16, ptr %176, align 1
  %182 = icmp eq i16 %180, %181
  br i1 %182, label %183, label %186

183:                                              ; preds = %179
  %184 = getelementptr i8, ptr %176, i32 2
  %185 = getelementptr i8, ptr %177, i32 2
  br label %186

186:                                              ; preds = %183, %179, %175
  %187 = phi ptr [ %184, %183 ], [ %176, %179 ], [ %176, %175 ]
  %188 = phi ptr [ %185, %183 ], [ %177, %179 ], [ %177, %175 ]
  %189 = icmp ult ptr %187, %6
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = load i8, ptr %188, align 1
  %192 = load i8, ptr %187, align 1
  %193 = icmp eq i8 %191, %192
  %194 = zext i1 %193 to i32
  %195 = getelementptr i8, ptr %187, i32 %194
  br label %196

196:                                              ; preds = %190, %186
  %197 = phi ptr [ %187, %186 ], [ %195, %190 ]
  %198 = ptrtoint ptr %197 to i32
  %199 = ptrtoint ptr %147 to i32
  %200 = sub i32 %198, %199
  br label %201

201:                                              ; preds = %196, %168, %154
  %202 = phi i32 [ %200, %196 ], [ %156, %154 ], [ %174, %168 ]
  %203 = add i32 %202, %143
  br label %204

204:                                              ; preds = %201, %142
  %205 = phi i32 [ %203, %201 ], [ %143, %142 ]
  %206 = add i32 %205, 4
  br label %207

207:                                              ; preds = %204, %73, %48
  %208 = phi i32 [ %206, %204 ], [ 0, %73 ], [ 0, %48 ]
  %209 = load i32, ptr %41, align 4
  switch i32 %209, label %210 [
    i32 6, label %749
    i32 5, label %475
    i32 7, label %749
  ]

210:                                              ; preds = %207
  %211 = load ptr, ptr %42, align 4
  %212 = load i32, ptr %43, align 4
  %213 = shl nuw i32 1, %212
  %214 = add i32 %213, -1
  %215 = load ptr, ptr %8, align 4
  %216 = load ptr, ptr %13, align 4
  %217 = load i32, ptr %10, align 4
  %218 = getelementptr i8, ptr %215, i32 %217
  %219 = getelementptr i8, ptr %216, i32 %217
  %220 = ptrtoint ptr %215 to i32
  %221 = sub i32 %55, %220
  %222 = load i32, ptr %27, align 4
  %223 = shl nuw i32 1, %222
  %224 = sub i32 %221, %49
  %225 = icmp ugt i32 %224, %223
  %226 = sub i32 %221, %223
  %227 = select i1 %62, i1 %225, i1 false
  %228 = select i1 %227, i32 %226, i32 %49
  %229 = tail call i32 @llvm.usub.sat.i32(i32 %221, i32 %213) #7
  %230 = load i32, ptr %44, align 4
  %231 = shl nuw i32 1, %230
  %232 = load ptr, ptr %45, align 4
  %233 = load i32, ptr %46, align 4
  %234 = shl nsw i32 -1, %212
  %235 = xor i32 %234, -1
  %236 = load i32, ptr %47, align 4
  %237 = icmp ult i32 %236, %221
  %238 = sub i32 32, %233
  br i1 %237, label %239, label %251

239:                                              ; preds = %239, %210
  %240 = phi i32 [ %249, %239 ], [ %236, %210 ]
  %241 = getelementptr i8, ptr %215, i32 %240
  %242 = load i32, ptr %241, align 1
  %243 = mul i32 %242, -1640531535
  %244 = lshr i32 %243, %238
  %245 = getelementptr i32, ptr %232, i32 %244
  %246 = load i32, ptr %245, align 4
  %247 = and i32 %240, %235
  %248 = getelementptr i32, ptr %211, i32 %247
  store i32 %246, ptr %248, align 4
  store i32 %240, ptr %245, align 4
  %249 = add nuw i32 %240, 1
  %250 = icmp ult i32 %249, %221
  br i1 %250, label %239, label %251

251:                                              ; preds = %239, %210
  store i32 %221, ptr %47, align 4
  %252 = load i32, ptr %50, align 1
  %253 = mul i32 %252, -1640531535
  %254 = lshr i32 %253, %238
  %255 = getelementptr i32, ptr %232, i32 %254
  %256 = load i32, ptr %255, align 4
  %257 = icmp ult i32 %256, %228
  br i1 %257, label %1023, label %258

258:                                              ; preds = %251
  %259 = icmp ugt ptr %33, %50
  %260 = getelementptr i8, ptr %50, i32 4
  %261 = ptrtoint ptr %219 to i32
  %262 = ptrtoint ptr %260 to i32
  %263 = add i32 %221, 2
  br label %264

264:                                              ; preds = %467, %258
  %265 = phi i32 [ 999999999, %258 ], [ %464, %467 ]
  %266 = phi i32 [ %256, %258 ], [ %471, %467 ]
  %267 = phi i32 [ 3, %258 ], [ %465, %467 ]
  %268 = phi i32 [ %231, %258 ], [ %470, %467 ]
  %269 = icmp ult i32 %266, %217
  br i1 %269, label %327, label %270

270:                                              ; preds = %264
  %271 = getelementptr i8, ptr %215, i32 %266
  %272 = getelementptr i8, ptr %271, i32 %267
  %273 = load i8, ptr %272, align 1
  %274 = getelementptr i8, ptr %50, i32 %267
  %275 = load i8, ptr %274, align 1
  %276 = icmp eq i8 %273, %275
  br i1 %276, label %277, label %463

277:                                              ; preds = %270
  br i1 %259, label %278, label %302

278:                                              ; preds = %277
  %279 = load i32, ptr %271, align 1
  %280 = xor i32 %279, %252
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %285, label %282

282:                                              ; preds = %278
  %283 = tail call i32 @llvm.cttz.i32(i32 %280, i1 true) #7, !range !8
  %284 = lshr i32 %283, 3
  br label %456

285:                                              ; preds = %291, %278
  %286 = phi ptr [ %289, %291 ], [ %50, %278 ]
  %287 = phi ptr [ %288, %291 ], [ %271, %278 ]
  %288 = getelementptr i8, ptr %287, i32 4
  %289 = getelementptr i8, ptr %286, i32 4
  %290 = icmp ult ptr %289, %33
  br i1 %290, label %291, label %302

291:                                              ; preds = %285
  %292 = load i32, ptr %288, align 1
  %293 = load i32, ptr %289, align 1
  %294 = xor i32 %293, %292
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %285, label %296

296:                                              ; preds = %291
  %297 = tail call i32 @llvm.cttz.i32(i32 %294, i1 true) #7, !range !8
  %298 = lshr i32 %297, 3
  %299 = getelementptr i8, ptr %289, i32 %298
  %300 = ptrtoint ptr %299 to i32
  %301 = sub i32 %300, %55
  br label %456

302:                                              ; preds = %285, %277
  %303 = phi ptr [ %50, %277 ], [ %289, %285 ]
  %304 = phi ptr [ %271, %277 ], [ %288, %285 ]
  %305 = icmp ult ptr %303, %34
  br i1 %305, label %306, label %313

306:                                              ; preds = %302
  %307 = load i16, ptr %304, align 1
  %308 = load i16, ptr %303, align 1
  %309 = icmp eq i16 %307, %308
  br i1 %309, label %310, label %313

310:                                              ; preds = %306
  %311 = getelementptr i8, ptr %303, i32 2
  %312 = getelementptr i8, ptr %304, i32 2
  br label %313

313:                                              ; preds = %310, %306, %302
  %314 = phi ptr [ %311, %310 ], [ %303, %306 ], [ %303, %302 ]
  %315 = phi ptr [ %312, %310 ], [ %304, %306 ], [ %304, %302 ]
  %316 = icmp ult ptr %314, %6
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = load i8, ptr %315, align 1
  %319 = load i8, ptr %314, align 1
  %320 = icmp eq i8 %318, %319
  %321 = zext i1 %320 to i32
  %322 = getelementptr i8, ptr %314, i32 %321
  br label %323

323:                                              ; preds = %317, %313
  %324 = phi ptr [ %314, %313 ], [ %322, %317 ]
  %325 = ptrtoint ptr %324 to i32
  %326 = sub i32 %325, %55
  br label %456

327:                                              ; preds = %264
  %328 = getelementptr i8, ptr %216, i32 %266
  %329 = load i32, ptr %328, align 1
  %330 = icmp eq i32 %329, %252
  br i1 %330, label %331, label %463

331:                                              ; preds = %327
  %332 = getelementptr i8, ptr %328, i32 4
  %333 = ptrtoint ptr %332 to i32
  %334 = sub i32 %261, %333
  %335 = getelementptr i8, ptr %260, i32 %334
  %336 = icmp ult ptr %335, %6
  %337 = select i1 %336, ptr %335, ptr %6
  %338 = getelementptr i8, ptr %337, i32 -3
  %339 = icmp ugt ptr %338, %260
  br i1 %339, label %340, label %365

340:                                              ; preds = %331
  %341 = load i32, ptr %332, align 1
  %342 = load i32, ptr %260, align 1
  %343 = xor i32 %342, %341
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %348, label %345

345:                                              ; preds = %340
  %346 = tail call i32 @llvm.cttz.i32(i32 %343, i1 true) #7, !range !8
  %347 = lshr i32 %346, 3
  br label %391

348:                                              ; preds = %354, %340
  %349 = phi ptr [ %352, %354 ], [ %260, %340 ]
  %350 = phi ptr [ %351, %354 ], [ %332, %340 ]
  %351 = getelementptr i8, ptr %350, i32 4
  %352 = getelementptr i8, ptr %349, i32 4
  %353 = icmp ult ptr %352, %338
  br i1 %353, label %354, label %365

354:                                              ; preds = %348
  %355 = load i32, ptr %351, align 1
  %356 = load i32, ptr %352, align 1
  %357 = xor i32 %356, %355
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %348, label %359

359:                                              ; preds = %354
  %360 = tail call i32 @llvm.cttz.i32(i32 %357, i1 true) #7, !range !8
  %361 = lshr i32 %360, 3
  %362 = getelementptr i8, ptr %352, i32 %361
  %363 = ptrtoint ptr %362 to i32
  %364 = sub i32 %363, %262
  br label %391

365:                                              ; preds = %348, %331
  %366 = phi ptr [ %260, %331 ], [ %352, %348 ]
  %367 = phi ptr [ %332, %331 ], [ %351, %348 ]
  %368 = getelementptr i8, ptr %337, i32 -1
  %369 = icmp ult ptr %366, %368
  br i1 %369, label %370, label %377

370:                                              ; preds = %365
  %371 = load i16, ptr %367, align 1
  %372 = load i16, ptr %366, align 1
  %373 = icmp eq i16 %371, %372
  br i1 %373, label %374, label %377

374:                                              ; preds = %370
  %375 = getelementptr i8, ptr %366, i32 2
  %376 = getelementptr i8, ptr %367, i32 2
  br label %377

377:                                              ; preds = %374, %370, %365
  %378 = phi ptr [ %375, %374 ], [ %366, %370 ], [ %366, %365 ]
  %379 = phi ptr [ %376, %374 ], [ %367, %370 ], [ %367, %365 ]
  %380 = icmp ult ptr %378, %337
  br i1 %380, label %381, label %387

381:                                              ; preds = %377
  %382 = load i8, ptr %379, align 1
  %383 = load i8, ptr %378, align 1
  %384 = icmp eq i8 %382, %383
  %385 = zext i1 %384 to i32
  %386 = getelementptr i8, ptr %378, i32 %385
  br label %387

387:                                              ; preds = %381, %377
  %388 = phi ptr [ %378, %377 ], [ %386, %381 ]
  %389 = ptrtoint ptr %388 to i32
  %390 = sub i32 %389, %262
  br label %391

391:                                              ; preds = %387, %359, %345
  %392 = phi i32 [ %390, %387 ], [ %347, %345 ], [ %364, %359 ]
  %393 = getelementptr i8, ptr %332, i32 %392
  %394 = icmp eq ptr %393, %219
  br i1 %394, label %395, label %453

395:                                              ; preds = %391
  %396 = getelementptr i8, ptr %260, i32 %392
  %397 = icmp ugt ptr %33, %396
  br i1 %397, label %398, label %424

398:                                              ; preds = %395
  %399 = load i32, ptr %218, align 1
  %400 = load i32, ptr %396, align 1
  %401 = xor i32 %400, %399
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %406, label %403

403:                                              ; preds = %398
  %404 = tail call i32 @llvm.cttz.i32(i32 %401, i1 true) #7, !range !8
  %405 = lshr i32 %404, 3
  br label %450

406:                                              ; preds = %412, %398
  %407 = phi ptr [ %410, %412 ], [ %396, %398 ]
  %408 = phi ptr [ %409, %412 ], [ %218, %398 ]
  %409 = getelementptr i8, ptr %408, i32 4
  %410 = getelementptr i8, ptr %407, i32 4
  %411 = icmp ult ptr %410, %33
  br i1 %411, label %412, label %424

412:                                              ; preds = %406
  %413 = load i32, ptr %409, align 1
  %414 = load i32, ptr %410, align 1
  %415 = xor i32 %414, %413
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %406, label %417

417:                                              ; preds = %412
  %418 = tail call i32 @llvm.cttz.i32(i32 %415, i1 true) #7, !range !8
  %419 = lshr i32 %418, 3
  %420 = getelementptr i8, ptr %410, i32 %419
  %421 = ptrtoint ptr %420 to i32
  %422 = ptrtoint ptr %396 to i32
  %423 = sub i32 %421, %422
  br label %450

424:                                              ; preds = %406, %395
  %425 = phi ptr [ %396, %395 ], [ %410, %406 ]
  %426 = phi ptr [ %218, %395 ], [ %409, %406 ]
  %427 = icmp ult ptr %425, %34
  br i1 %427, label %428, label %435

428:                                              ; preds = %424
  %429 = load i16, ptr %426, align 1
  %430 = load i16, ptr %425, align 1
  %431 = icmp eq i16 %429, %430
  br i1 %431, label %432, label %435

432:                                              ; preds = %428
  %433 = getelementptr i8, ptr %425, i32 2
  %434 = getelementptr i8, ptr %426, i32 2
  br label %435

435:                                              ; preds = %432, %428, %424
  %436 = phi ptr [ %433, %432 ], [ %425, %428 ], [ %425, %424 ]
  %437 = phi ptr [ %434, %432 ], [ %426, %428 ], [ %426, %424 ]
  %438 = icmp ult ptr %436, %6
  br i1 %438, label %439, label %445

439:                                              ; preds = %435
  %440 = load i8, ptr %437, align 1
  %441 = load i8, ptr %436, align 1
  %442 = icmp eq i8 %440, %441
  %443 = zext i1 %442 to i32
  %444 = getelementptr i8, ptr %436, i32 %443
  br label %445

445:                                              ; preds = %439, %435
  %446 = phi ptr [ %436, %435 ], [ %444, %439 ]
  %447 = ptrtoint ptr %446 to i32
  %448 = ptrtoint ptr %396 to i32
  %449 = sub i32 %447, %448
  br label %450

450:                                              ; preds = %445, %417, %403
  %451 = phi i32 [ %449, %445 ], [ %405, %403 ], [ %423, %417 ]
  %452 = add i32 %451, %392
  br label %453

453:                                              ; preds = %450, %391
  %454 = phi i32 [ %452, %450 ], [ %392, %391 ]
  %455 = add i32 %454, 4
  br label %456

456:                                              ; preds = %453, %323, %296, %282
  %457 = phi i32 [ %455, %453 ], [ %326, %323 ], [ %284, %282 ], [ %301, %296 ]
  %458 = icmp ugt i32 %457, %267
  br i1 %458, label %459, label %463

459:                                              ; preds = %456
  %460 = sub i32 %263, %266
  %461 = getelementptr i8, ptr %50, i32 %457
  %462 = icmp eq ptr %461, %6
  br i1 %462, label %1023, label %463

463:                                              ; preds = %459, %456, %327, %270
  %464 = phi i32 [ %460, %459 ], [ %265, %456 ], [ %265, %327 ], [ %265, %270 ]
  %465 = phi i32 [ %457, %459 ], [ %267, %456 ], [ %267, %327 ], [ %267, %270 ]
  %466 = icmp ugt i32 %266, %229
  br i1 %466, label %467, label %1023

467:                                              ; preds = %463
  %468 = and i32 %266, %214
  %469 = getelementptr i32, ptr %211, i32 %468
  %470 = add i32 %268, -1
  %471 = load i32, ptr %469, align 4
  %472 = icmp uge i32 %471, %228
  %473 = icmp ne i32 %470, 0
  %474 = and i1 %473, %472
  br i1 %474, label %264, label %1023

475:                                              ; preds = %207
  %476 = load ptr, ptr %42, align 4
  %477 = load i32, ptr %43, align 4
  %478 = shl nuw i32 1, %477
  %479 = add i32 %478, -1
  %480 = load ptr, ptr %8, align 4
  %481 = load ptr, ptr %13, align 4
  %482 = load i32, ptr %10, align 4
  %483 = getelementptr i8, ptr %480, i32 %482
  %484 = getelementptr i8, ptr %481, i32 %482
  %485 = ptrtoint ptr %480 to i32
  %486 = sub i32 %55, %485
  %487 = load i32, ptr %27, align 4
  %488 = shl nuw i32 1, %487
  %489 = sub i32 %486, %49
  %490 = icmp ugt i32 %489, %488
  %491 = sub i32 %486, %488
  %492 = select i1 %62, i1 %490, i1 false
  %493 = select i1 %492, i32 %491, i32 %49
  %494 = tail call i32 @llvm.usub.sat.i32(i32 %486, i32 %478) #7
  %495 = load i32, ptr %44, align 4
  %496 = shl nuw i32 1, %495
  %497 = load ptr, ptr %45, align 4
  %498 = load i32, ptr %46, align 4
  %499 = shl nsw i32 -1, %477
  %500 = xor i32 %499, -1
  %501 = load i32, ptr %47, align 4
  %502 = icmp ult i32 %501, %486
  %503 = sub i32 64, %498
  %504 = zext i32 %503 to i64
  br i1 %502, label %505, label %518

505:                                              ; preds = %505, %475
  %506 = phi i32 [ %516, %505 ], [ %501, %475 ]
  %507 = getelementptr i8, ptr %480, i32 %506
  %508 = load i64, ptr %507, align 1
  %509 = mul i64 %508, -3523014627271114752
  %510 = lshr i64 %509, %504
  %511 = trunc i64 %510 to i32
  %512 = getelementptr i32, ptr %497, i32 %511
  %513 = load i32, ptr %512, align 4
  %514 = and i32 %506, %500
  %515 = getelementptr i32, ptr %476, i32 %514
  store i32 %513, ptr %515, align 4
  store i32 %506, ptr %512, align 4
  %516 = add nuw i32 %506, 1
  %517 = icmp ult i32 %516, %486
  br i1 %517, label %505, label %518

518:                                              ; preds = %505, %475
  store i32 %486, ptr %47, align 4
  %519 = load i64, ptr %50, align 1
  %520 = mul i64 %519, -3523014627271114752
  %521 = lshr i64 %520, %504
  %522 = trunc i64 %521 to i32
  %523 = getelementptr i32, ptr %497, i32 %522
  %524 = load i32, ptr %523, align 4
  %525 = icmp ult i32 %524, %493
  %526 = lshr i64 %519, 32
  %527 = trunc i64 %526 to i32
  br i1 %525, label %1023, label %528

528:                                              ; preds = %518
  %529 = trunc i64 %519 to i32
  %530 = icmp ugt ptr %33, %50
  %531 = getelementptr i8, ptr %50, i32 4
  %532 = ptrtoint ptr %484 to i32
  %533 = ptrtoint ptr %531 to i32
  %534 = add i32 %486, 2
  br label %535

535:                                              ; preds = %741, %528
  %536 = phi i32 [ %529, %528 ], [ %737, %741 ]
  %537 = phi i32 [ 999999999, %528 ], [ %738, %741 ]
  %538 = phi i32 [ %524, %528 ], [ %745, %741 ]
  %539 = phi i32 [ 3, %528 ], [ %739, %741 ]
  %540 = phi i32 [ %496, %528 ], [ %744, %741 ]
  %541 = icmp ult i32 %538, %482
  br i1 %541, label %599, label %542

542:                                              ; preds = %535
  %543 = getelementptr i8, ptr %480, i32 %538
  %544 = getelementptr i8, ptr %543, i32 %539
  %545 = load i8, ptr %544, align 1
  %546 = getelementptr i8, ptr %50, i32 %539
  %547 = load i8, ptr %546, align 1
  %548 = icmp eq i8 %545, %547
  br i1 %548, label %549, label %736

549:                                              ; preds = %542
  br i1 %530, label %550, label %574

550:                                              ; preds = %549
  %551 = load i32, ptr %543, align 1
  %552 = xor i32 %536, %551
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %557, label %554

554:                                              ; preds = %550
  %555 = tail call i32 @llvm.cttz.i32(i32 %552, i1 true) #7, !range !8
  %556 = lshr i32 %555, 3
  br label %728

557:                                              ; preds = %563, %550
  %558 = phi ptr [ %561, %563 ], [ %50, %550 ]
  %559 = phi ptr [ %560, %563 ], [ %543, %550 ]
  %560 = getelementptr i8, ptr %559, i32 4
  %561 = getelementptr i8, ptr %558, i32 4
  %562 = icmp ult ptr %561, %33
  br i1 %562, label %563, label %574

563:                                              ; preds = %557
  %564 = load i32, ptr %560, align 1
  %565 = load i32, ptr %561, align 1
  %566 = xor i32 %565, %564
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %557, label %568

568:                                              ; preds = %563
  %569 = tail call i32 @llvm.cttz.i32(i32 %566, i1 true) #7, !range !8
  %570 = lshr i32 %569, 3
  %571 = getelementptr i8, ptr %561, i32 %570
  %572 = ptrtoint ptr %571 to i32
  %573 = sub i32 %572, %55
  br label %728

574:                                              ; preds = %557, %549
  %575 = phi ptr [ %50, %549 ], [ %561, %557 ]
  %576 = phi ptr [ %543, %549 ], [ %560, %557 ]
  %577 = icmp ult ptr %575, %34
  br i1 %577, label %578, label %585

578:                                              ; preds = %574
  %579 = load i16, ptr %576, align 1
  %580 = load i16, ptr %575, align 1
  %581 = icmp eq i16 %579, %580
  br i1 %581, label %582, label %585

582:                                              ; preds = %578
  %583 = getelementptr i8, ptr %575, i32 2
  %584 = getelementptr i8, ptr %576, i32 2
  br label %585

585:                                              ; preds = %582, %578, %574
  %586 = phi ptr [ %583, %582 ], [ %575, %578 ], [ %575, %574 ]
  %587 = phi ptr [ %584, %582 ], [ %576, %578 ], [ %576, %574 ]
  %588 = icmp ult ptr %586, %6
  br i1 %588, label %589, label %595

589:                                              ; preds = %585
  %590 = load i8, ptr %587, align 1
  %591 = load i8, ptr %586, align 1
  %592 = icmp eq i8 %590, %591
  %593 = zext i1 %592 to i32
  %594 = getelementptr i8, ptr %586, i32 %593
  br label %595

595:                                              ; preds = %589, %585
  %596 = phi ptr [ %586, %585 ], [ %594, %589 ]
  %597 = ptrtoint ptr %596 to i32
  %598 = sub i32 %597, %55
  br label %728

599:                                              ; preds = %535
  %600 = getelementptr i8, ptr %481, i32 %538
  %601 = load i32, ptr %600, align 1
  %602 = load i32, ptr %50, align 1
  %603 = icmp eq i32 %601, %602
  br i1 %603, label %604, label %736

604:                                              ; preds = %599
  %605 = getelementptr i8, ptr %600, i32 4
  %606 = ptrtoint ptr %605 to i32
  %607 = sub i32 %532, %606
  %608 = getelementptr i8, ptr %531, i32 %607
  %609 = icmp ult ptr %608, %6
  %610 = select i1 %609, ptr %608, ptr %6
  %611 = getelementptr i8, ptr %610, i32 -3
  %612 = icmp ugt ptr %611, %531
  br i1 %612, label %613, label %637

613:                                              ; preds = %604
  %614 = load i32, ptr %605, align 1
  %615 = xor i32 %614, %527
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %620, label %617

617:                                              ; preds = %613
  %618 = tail call i32 @llvm.cttz.i32(i32 %615, i1 true) #7, !range !8
  %619 = lshr i32 %618, 3
  br label %663

620:                                              ; preds = %626, %613
  %621 = phi ptr [ %624, %626 ], [ %531, %613 ]
  %622 = phi ptr [ %623, %626 ], [ %605, %613 ]
  %623 = getelementptr i8, ptr %622, i32 4
  %624 = getelementptr i8, ptr %621, i32 4
  %625 = icmp ult ptr %624, %611
  br i1 %625, label %626, label %637

626:                                              ; preds = %620
  %627 = load i32, ptr %623, align 1
  %628 = load i32, ptr %624, align 1
  %629 = xor i32 %628, %627
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %620, label %631

631:                                              ; preds = %626
  %632 = tail call i32 @llvm.cttz.i32(i32 %629, i1 true) #7, !range !8
  %633 = lshr i32 %632, 3
  %634 = getelementptr i8, ptr %624, i32 %633
  %635 = ptrtoint ptr %634 to i32
  %636 = sub i32 %635, %533
  br label %663

637:                                              ; preds = %620, %604
  %638 = phi ptr [ %531, %604 ], [ %624, %620 ]
  %639 = phi ptr [ %605, %604 ], [ %623, %620 ]
  %640 = getelementptr i8, ptr %610, i32 -1
  %641 = icmp ult ptr %638, %640
  br i1 %641, label %642, label %649

642:                                              ; preds = %637
  %643 = load i16, ptr %639, align 1
  %644 = load i16, ptr %638, align 1
  %645 = icmp eq i16 %643, %644
  br i1 %645, label %646, label %649

646:                                              ; preds = %642
  %647 = getelementptr i8, ptr %638, i32 2
  %648 = getelementptr i8, ptr %639, i32 2
  br label %649

649:                                              ; preds = %646, %642, %637
  %650 = phi ptr [ %647, %646 ], [ %638, %642 ], [ %638, %637 ]
  %651 = phi ptr [ %648, %646 ], [ %639, %642 ], [ %639, %637 ]
  %652 = icmp ult ptr %650, %610
  br i1 %652, label %653, label %659

653:                                              ; preds = %649
  %654 = load i8, ptr %651, align 1
  %655 = load i8, ptr %650, align 1
  %656 = icmp eq i8 %654, %655
  %657 = zext i1 %656 to i32
  %658 = getelementptr i8, ptr %650, i32 %657
  br label %659

659:                                              ; preds = %653, %649
  %660 = phi ptr [ %650, %649 ], [ %658, %653 ]
  %661 = ptrtoint ptr %660 to i32
  %662 = sub i32 %661, %533
  br label %663

663:                                              ; preds = %659, %631, %617
  %664 = phi i32 [ %662, %659 ], [ %619, %617 ], [ %636, %631 ]
  %665 = getelementptr i8, ptr %605, i32 %664
  %666 = icmp eq ptr %665, %484
  br i1 %666, label %667, label %725

667:                                              ; preds = %663
  %668 = getelementptr i8, ptr %531, i32 %664
  %669 = icmp ugt ptr %33, %668
  br i1 %669, label %670, label %696

670:                                              ; preds = %667
  %671 = load i32, ptr %483, align 1
  %672 = load i32, ptr %668, align 1
  %673 = xor i32 %672, %671
  %674 = icmp eq i32 %673, 0
  br i1 %674, label %678, label %675

675:                                              ; preds = %670
  %676 = tail call i32 @llvm.cttz.i32(i32 %673, i1 true) #7, !range !8
  %677 = lshr i32 %676, 3
  br label %722

678:                                              ; preds = %684, %670
  %679 = phi ptr [ %682, %684 ], [ %668, %670 ]
  %680 = phi ptr [ %681, %684 ], [ %483, %670 ]
  %681 = getelementptr i8, ptr %680, i32 4
  %682 = getelementptr i8, ptr %679, i32 4
  %683 = icmp ult ptr %682, %33
  br i1 %683, label %684, label %696

684:                                              ; preds = %678
  %685 = load i32, ptr %681, align 1
  %686 = load i32, ptr %682, align 1
  %687 = xor i32 %686, %685
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %678, label %689

689:                                              ; preds = %684
  %690 = tail call i32 @llvm.cttz.i32(i32 %687, i1 true) #7, !range !8
  %691 = lshr i32 %690, 3
  %692 = getelementptr i8, ptr %682, i32 %691
  %693 = ptrtoint ptr %692 to i32
  %694 = ptrtoint ptr %668 to i32
  %695 = sub i32 %693, %694
  br label %722

696:                                              ; preds = %678, %667
  %697 = phi ptr [ %668, %667 ], [ %682, %678 ]
  %698 = phi ptr [ %483, %667 ], [ %681, %678 ]
  %699 = icmp ult ptr %697, %34
  br i1 %699, label %700, label %707

700:                                              ; preds = %696
  %701 = load i16, ptr %698, align 1
  %702 = load i16, ptr %697, align 1
  %703 = icmp eq i16 %701, %702
  br i1 %703, label %704, label %707

704:                                              ; preds = %700
  %705 = getelementptr i8, ptr %697, i32 2
  %706 = getelementptr i8, ptr %698, i32 2
  br label %707

707:                                              ; preds = %704, %700, %696
  %708 = phi ptr [ %705, %704 ], [ %697, %700 ], [ %697, %696 ]
  %709 = phi ptr [ %706, %704 ], [ %698, %700 ], [ %698, %696 ]
  %710 = icmp ult ptr %708, %6
  br i1 %710, label %711, label %717

711:                                              ; preds = %707
  %712 = load i8, ptr %709, align 1
  %713 = load i8, ptr %708, align 1
  %714 = icmp eq i8 %712, %713
  %715 = zext i1 %714 to i32
  %716 = getelementptr i8, ptr %708, i32 %715
  br label %717

717:                                              ; preds = %711, %707
  %718 = phi ptr [ %708, %707 ], [ %716, %711 ]
  %719 = ptrtoint ptr %718 to i32
  %720 = ptrtoint ptr %668 to i32
  %721 = sub i32 %719, %720
  br label %722

722:                                              ; preds = %717, %689, %675
  %723 = phi i32 [ %721, %717 ], [ %677, %675 ], [ %695, %689 ]
  %724 = add i32 %723, %664
  br label %725

725:                                              ; preds = %722, %663
  %726 = phi i32 [ %724, %722 ], [ %664, %663 ]
  %727 = add i32 %726, 4
  br label %728

728:                                              ; preds = %725, %595, %568, %554
  %729 = phi i32 [ %601, %725 ], [ %536, %595 ], [ %536, %554 ], [ %536, %568 ]
  %730 = phi i32 [ %727, %725 ], [ %598, %595 ], [ %556, %554 ], [ %573, %568 ]
  %731 = icmp ugt i32 %730, %539
  br i1 %731, label %732, label %736

732:                                              ; preds = %728
  %733 = sub i32 %534, %538
  %734 = getelementptr i8, ptr %50, i32 %730
  %735 = icmp eq ptr %734, %6
  br i1 %735, label %1023, label %736

736:                                              ; preds = %732, %728, %599, %542
  %737 = phi i32 [ %729, %732 ], [ %729, %728 ], [ %602, %599 ], [ %536, %542 ]
  %738 = phi i32 [ %733, %732 ], [ %537, %728 ], [ %537, %599 ], [ %537, %542 ]
  %739 = phi i32 [ %730, %732 ], [ %539, %728 ], [ %539, %599 ], [ %539, %542 ]
  %740 = icmp ugt i32 %538, %494
  br i1 %740, label %741, label %1023

741:                                              ; preds = %736
  %742 = and i32 %538, %479
  %743 = getelementptr i32, ptr %476, i32 %742
  %744 = add i32 %540, -1
  %745 = load i32, ptr %743, align 4
  %746 = icmp uge i32 %745, %493
  %747 = icmp ne i32 %744, 0
  %748 = and i1 %747, %746
  br i1 %748, label %535, label %1023

749:                                              ; preds = %207, %207
  %750 = load ptr, ptr %42, align 4
  %751 = load i32, ptr %43, align 4
  %752 = shl nuw i32 1, %751
  %753 = add i32 %752, -1
  %754 = load ptr, ptr %8, align 4
  %755 = load ptr, ptr %13, align 4
  %756 = load i32, ptr %10, align 4
  %757 = getelementptr i8, ptr %754, i32 %756
  %758 = getelementptr i8, ptr %755, i32 %756
  %759 = ptrtoint ptr %754 to i32
  %760 = sub i32 %55, %759
  %761 = load i32, ptr %27, align 4
  %762 = shl nuw i32 1, %761
  %763 = sub i32 %760, %49
  %764 = icmp ugt i32 %763, %762
  %765 = sub i32 %760, %762
  %766 = select i1 %62, i1 %764, i1 false
  %767 = select i1 %766, i32 %765, i32 %49
  %768 = tail call i32 @llvm.usub.sat.i32(i32 %760, i32 %752) #7
  %769 = load i32, ptr %44, align 4
  %770 = shl nuw i32 1, %769
  %771 = load ptr, ptr %45, align 4
  %772 = load i32, ptr %46, align 4
  %773 = shl nsw i32 -1, %751
  %774 = xor i32 %773, -1
  %775 = load i32, ptr %47, align 4
  %776 = icmp ult i32 %775, %760
  %777 = sub i32 64, %772
  %778 = zext i32 %777 to i64
  br i1 %776, label %779, label %792

779:                                              ; preds = %779, %749
  %780 = phi i32 [ %790, %779 ], [ %775, %749 ]
  %781 = getelementptr i8, ptr %754, i32 %780
  %782 = load i64, ptr %781, align 1
  %783 = mul i64 %782, -3523014627193847808
  %784 = lshr i64 %783, %778
  %785 = trunc i64 %784 to i32
  %786 = getelementptr i32, ptr %771, i32 %785
  %787 = load i32, ptr %786, align 4
  %788 = and i32 %780, %774
  %789 = getelementptr i32, ptr %750, i32 %788
  store i32 %787, ptr %789, align 4
  store i32 %780, ptr %786, align 4
  %790 = add nuw i32 %780, 1
  %791 = icmp ult i32 %790, %760
  br i1 %791, label %779, label %792

792:                                              ; preds = %779, %749
  store i32 %760, ptr %47, align 4
  %793 = load i64, ptr %50, align 1
  %794 = mul i64 %793, -3523014627193847808
  %795 = lshr i64 %794, %778
  %796 = trunc i64 %795 to i32
  %797 = getelementptr i32, ptr %771, i32 %796
  %798 = load i32, ptr %797, align 4
  %799 = icmp ult i32 %798, %767
  %800 = lshr i64 %793, 32
  %801 = trunc i64 %800 to i32
  br i1 %799, label %1023, label %802

802:                                              ; preds = %792
  %803 = trunc i64 %793 to i32
  %804 = icmp ugt ptr %33, %50
  %805 = getelementptr i8, ptr %50, i32 4
  %806 = ptrtoint ptr %758 to i32
  %807 = ptrtoint ptr %805 to i32
  %808 = add i32 %760, 2
  br label %809

809:                                              ; preds = %1015, %802
  %810 = phi i32 [ %803, %802 ], [ %1011, %1015 ]
  %811 = phi i32 [ 999999999, %802 ], [ %1012, %1015 ]
  %812 = phi i32 [ %798, %802 ], [ %1019, %1015 ]
  %813 = phi i32 [ 3, %802 ], [ %1013, %1015 ]
  %814 = phi i32 [ %770, %802 ], [ %1018, %1015 ]
  %815 = icmp ult i32 %812, %756
  br i1 %815, label %873, label %816

816:                                              ; preds = %809
  %817 = getelementptr i8, ptr %754, i32 %812
  %818 = getelementptr i8, ptr %817, i32 %813
  %819 = load i8, ptr %818, align 1
  %820 = getelementptr i8, ptr %50, i32 %813
  %821 = load i8, ptr %820, align 1
  %822 = icmp eq i8 %819, %821
  br i1 %822, label %823, label %1010

823:                                              ; preds = %816
  br i1 %804, label %824, label %848

824:                                              ; preds = %823
  %825 = load i32, ptr %817, align 1
  %826 = xor i32 %810, %825
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %831, label %828

828:                                              ; preds = %824
  %829 = tail call i32 @llvm.cttz.i32(i32 %826, i1 true) #7, !range !8
  %830 = lshr i32 %829, 3
  br label %1002

831:                                              ; preds = %837, %824
  %832 = phi ptr [ %835, %837 ], [ %50, %824 ]
  %833 = phi ptr [ %834, %837 ], [ %817, %824 ]
  %834 = getelementptr i8, ptr %833, i32 4
  %835 = getelementptr i8, ptr %832, i32 4
  %836 = icmp ult ptr %835, %33
  br i1 %836, label %837, label %848

837:                                              ; preds = %831
  %838 = load i32, ptr %834, align 1
  %839 = load i32, ptr %835, align 1
  %840 = xor i32 %839, %838
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %831, label %842

842:                                              ; preds = %837
  %843 = tail call i32 @llvm.cttz.i32(i32 %840, i1 true) #7, !range !8
  %844 = lshr i32 %843, 3
  %845 = getelementptr i8, ptr %835, i32 %844
  %846 = ptrtoint ptr %845 to i32
  %847 = sub i32 %846, %55
  br label %1002

848:                                              ; preds = %831, %823
  %849 = phi ptr [ %50, %823 ], [ %835, %831 ]
  %850 = phi ptr [ %817, %823 ], [ %834, %831 ]
  %851 = icmp ult ptr %849, %34
  br i1 %851, label %852, label %859

852:                                              ; preds = %848
  %853 = load i16, ptr %850, align 1
  %854 = load i16, ptr %849, align 1
  %855 = icmp eq i16 %853, %854
  br i1 %855, label %856, label %859

856:                                              ; preds = %852
  %857 = getelementptr i8, ptr %849, i32 2
  %858 = getelementptr i8, ptr %850, i32 2
  br label %859

859:                                              ; preds = %856, %852, %848
  %860 = phi ptr [ %857, %856 ], [ %849, %852 ], [ %849, %848 ]
  %861 = phi ptr [ %858, %856 ], [ %850, %852 ], [ %850, %848 ]
  %862 = icmp ult ptr %860, %6
  br i1 %862, label %863, label %869

863:                                              ; preds = %859
  %864 = load i8, ptr %861, align 1
  %865 = load i8, ptr %860, align 1
  %866 = icmp eq i8 %864, %865
  %867 = zext i1 %866 to i32
  %868 = getelementptr i8, ptr %860, i32 %867
  br label %869

869:                                              ; preds = %863, %859
  %870 = phi ptr [ %860, %859 ], [ %868, %863 ]
  %871 = ptrtoint ptr %870 to i32
  %872 = sub i32 %871, %55
  br label %1002

873:                                              ; preds = %809
  %874 = getelementptr i8, ptr %755, i32 %812
  %875 = load i32, ptr %874, align 1
  %876 = load i32, ptr %50, align 1
  %877 = icmp eq i32 %875, %876
  br i1 %877, label %878, label %1010

878:                                              ; preds = %873
  %879 = getelementptr i8, ptr %874, i32 4
  %880 = ptrtoint ptr %879 to i32
  %881 = sub i32 %806, %880
  %882 = getelementptr i8, ptr %805, i32 %881
  %883 = icmp ult ptr %882, %6
  %884 = select i1 %883, ptr %882, ptr %6
  %885 = getelementptr i8, ptr %884, i32 -3
  %886 = icmp ugt ptr %885, %805
  br i1 %886, label %887, label %911

887:                                              ; preds = %878
  %888 = load i32, ptr %879, align 1
  %889 = xor i32 %888, %801
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %894, label %891

891:                                              ; preds = %887
  %892 = tail call i32 @llvm.cttz.i32(i32 %889, i1 true) #7, !range !8
  %893 = lshr i32 %892, 3
  br label %937

894:                                              ; preds = %900, %887
  %895 = phi ptr [ %898, %900 ], [ %805, %887 ]
  %896 = phi ptr [ %897, %900 ], [ %879, %887 ]
  %897 = getelementptr i8, ptr %896, i32 4
  %898 = getelementptr i8, ptr %895, i32 4
  %899 = icmp ult ptr %898, %885
  br i1 %899, label %900, label %911

900:                                              ; preds = %894
  %901 = load i32, ptr %897, align 1
  %902 = load i32, ptr %898, align 1
  %903 = xor i32 %902, %901
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %894, label %905

905:                                              ; preds = %900
  %906 = tail call i32 @llvm.cttz.i32(i32 %903, i1 true) #7, !range !8
  %907 = lshr i32 %906, 3
  %908 = getelementptr i8, ptr %898, i32 %907
  %909 = ptrtoint ptr %908 to i32
  %910 = sub i32 %909, %807
  br label %937

911:                                              ; preds = %894, %878
  %912 = phi ptr [ %805, %878 ], [ %898, %894 ]
  %913 = phi ptr [ %879, %878 ], [ %897, %894 ]
  %914 = getelementptr i8, ptr %884, i32 -1
  %915 = icmp ult ptr %912, %914
  br i1 %915, label %916, label %923

916:                                              ; preds = %911
  %917 = load i16, ptr %913, align 1
  %918 = load i16, ptr %912, align 1
  %919 = icmp eq i16 %917, %918
  br i1 %919, label %920, label %923

920:                                              ; preds = %916
  %921 = getelementptr i8, ptr %912, i32 2
  %922 = getelementptr i8, ptr %913, i32 2
  br label %923

923:                                              ; preds = %920, %916, %911
  %924 = phi ptr [ %921, %920 ], [ %912, %916 ], [ %912, %911 ]
  %925 = phi ptr [ %922, %920 ], [ %913, %916 ], [ %913, %911 ]
  %926 = icmp ult ptr %924, %884
  br i1 %926, label %927, label %933

927:                                              ; preds = %923
  %928 = load i8, ptr %925, align 1
  %929 = load i8, ptr %924, align 1
  %930 = icmp eq i8 %928, %929
  %931 = zext i1 %930 to i32
  %932 = getelementptr i8, ptr %924, i32 %931
  br label %933

933:                                              ; preds = %927, %923
  %934 = phi ptr [ %924, %923 ], [ %932, %927 ]
  %935 = ptrtoint ptr %934 to i32
  %936 = sub i32 %935, %807
  br label %937

937:                                              ; preds = %933, %905, %891
  %938 = phi i32 [ %936, %933 ], [ %893, %891 ], [ %910, %905 ]
  %939 = getelementptr i8, ptr %879, i32 %938
  %940 = icmp eq ptr %939, %758
  br i1 %940, label %941, label %999

941:                                              ; preds = %937
  %942 = getelementptr i8, ptr %805, i32 %938
  %943 = icmp ugt ptr %33, %942
  br i1 %943, label %944, label %970

944:                                              ; preds = %941
  %945 = load i32, ptr %757, align 1
  %946 = load i32, ptr %942, align 1
  %947 = xor i32 %946, %945
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %952, label %949

949:                                              ; preds = %944
  %950 = tail call i32 @llvm.cttz.i32(i32 %947, i1 true) #7, !range !8
  %951 = lshr i32 %950, 3
  br label %996

952:                                              ; preds = %958, %944
  %953 = phi ptr [ %956, %958 ], [ %942, %944 ]
  %954 = phi ptr [ %955, %958 ], [ %757, %944 ]
  %955 = getelementptr i8, ptr %954, i32 4
  %956 = getelementptr i8, ptr %953, i32 4
  %957 = icmp ult ptr %956, %33
  br i1 %957, label %958, label %970

958:                                              ; preds = %952
  %959 = load i32, ptr %955, align 1
  %960 = load i32, ptr %956, align 1
  %961 = xor i32 %960, %959
  %962 = icmp eq i32 %961, 0
  br i1 %962, label %952, label %963

963:                                              ; preds = %958
  %964 = tail call i32 @llvm.cttz.i32(i32 %961, i1 true) #7, !range !8
  %965 = lshr i32 %964, 3
  %966 = getelementptr i8, ptr %956, i32 %965
  %967 = ptrtoint ptr %966 to i32
  %968 = ptrtoint ptr %942 to i32
  %969 = sub i32 %967, %968
  br label %996

970:                                              ; preds = %952, %941
  %971 = phi ptr [ %942, %941 ], [ %956, %952 ]
  %972 = phi ptr [ %757, %941 ], [ %955, %952 ]
  %973 = icmp ult ptr %971, %34
  br i1 %973, label %974, label %981

974:                                              ; preds = %970
  %975 = load i16, ptr %972, align 1
  %976 = load i16, ptr %971, align 1
  %977 = icmp eq i16 %975, %976
  br i1 %977, label %978, label %981

978:                                              ; preds = %974
  %979 = getelementptr i8, ptr %971, i32 2
  %980 = getelementptr i8, ptr %972, i32 2
  br label %981

981:                                              ; preds = %978, %974, %970
  %982 = phi ptr [ %979, %978 ], [ %971, %974 ], [ %971, %970 ]
  %983 = phi ptr [ %980, %978 ], [ %972, %974 ], [ %972, %970 ]
  %984 = icmp ult ptr %982, %6
  br i1 %984, label %985, label %991

985:                                              ; preds = %981
  %986 = load i8, ptr %983, align 1
  %987 = load i8, ptr %982, align 1
  %988 = icmp eq i8 %986, %987
  %989 = zext i1 %988 to i32
  %990 = getelementptr i8, ptr %982, i32 %989
  br label %991

991:                                              ; preds = %985, %981
  %992 = phi ptr [ %982, %981 ], [ %990, %985 ]
  %993 = ptrtoint ptr %992 to i32
  %994 = ptrtoint ptr %942 to i32
  %995 = sub i32 %993, %994
  br label %996

996:                                              ; preds = %991, %963, %949
  %997 = phi i32 [ %995, %991 ], [ %951, %949 ], [ %969, %963 ]
  %998 = add i32 %997, %938
  br label %999

999:                                              ; preds = %996, %937
  %1000 = phi i32 [ %998, %996 ], [ %938, %937 ]
  %1001 = add i32 %1000, 4
  br label %1002

1002:                                             ; preds = %999, %869, %842, %828
  %1003 = phi i32 [ %875, %999 ], [ %810, %869 ], [ %810, %828 ], [ %810, %842 ]
  %1004 = phi i32 [ %1001, %999 ], [ %872, %869 ], [ %830, %828 ], [ %847, %842 ]
  %1005 = icmp ugt i32 %1004, %813
  br i1 %1005, label %1006, label %1010

1006:                                             ; preds = %1002
  %1007 = sub i32 %808, %812
  %1008 = getelementptr i8, ptr %50, i32 %1004
  %1009 = icmp eq ptr %1008, %6
  br i1 %1009, label %1023, label %1010

1010:                                             ; preds = %1006, %1002, %873, %816
  %1011 = phi i32 [ %1003, %1006 ], [ %1003, %1002 ], [ %876, %873 ], [ %810, %816 ]
  %1012 = phi i32 [ %1007, %1006 ], [ %811, %1002 ], [ %811, %873 ], [ %811, %816 ]
  %1013 = phi i32 [ %1004, %1006 ], [ %813, %1002 ], [ %813, %873 ], [ %813, %816 ]
  %1014 = icmp ugt i32 %812, %768
  br i1 %1014, label %1015, label %1023

1015:                                             ; preds = %1010
  %1016 = and i32 %812, %753
  %1017 = getelementptr i32, ptr %750, i32 %1016
  %1018 = add i32 %814, -1
  %1019 = load i32, ptr %1017, align 4
  %1020 = icmp uge i32 %1019, %767
  %1021 = icmp ne i32 %1018, 0
  %1022 = and i1 %1021, %1020
  br i1 %1022, label %809, label %1023

1023:                                             ; preds = %1015, %1010, %1006, %792, %741, %736, %732, %518, %467, %463, %459, %251
  %1024 = phi i32 [ %221, %251 ], [ %486, %518 ], [ %760, %792 ], [ %221, %467 ], [ %221, %463 ], [ %221, %459 ], [ %760, %1015 ], [ %760, %1010 ], [ %760, %1006 ], [ %486, %741 ], [ %486, %736 ], [ %486, %732 ]
  %1025 = phi i32 [ 999999999, %251 ], [ 999999999, %518 ], [ 999999999, %792 ], [ %460, %459 ], [ %464, %463 ], [ %464, %467 ], [ %1007, %1006 ], [ %1012, %1010 ], [ %1012, %1015 ], [ %733, %732 ], [ %738, %736 ], [ %738, %741 ]
  %1026 = phi i32 [ 3, %251 ], [ 3, %518 ], [ 3, %792 ], [ %457, %459 ], [ %465, %463 ], [ %465, %467 ], [ %1004, %1006 ], [ %1013, %1010 ], [ %1013, %1015 ], [ %730, %732 ], [ %739, %736 ], [ %739, %741 ]
  %1027 = tail call i32 @llvm.umax.i32(i32 %1026, i32 %208) #7
  %1028 = icmp ult i32 %1027, 4
  br i1 %1028, label %1029, label %1035

1029:                                             ; preds = %1023
  %1030 = ptrtoint ptr %51 to i32
  %1031 = sub i32 %55, %1030
  %1032 = ashr i32 %1031, 8
  %1033 = add nsw i32 %1032, 1
  %1034 = getelementptr i8, ptr %50, i32 %1033
  br label %3396

1035:                                             ; preds = %1023
  %1036 = icmp ugt i32 %1026, %208
  %1037 = select i1 %1036, ptr %50, ptr %54
  %1038 = select i1 %1036, i32 %1025, i32 0
  %1039 = icmp ult ptr %50, %7
  br i1 %1039, label %1040, label %3080

1040:                                             ; preds = %2058, %1035
  %1041 = phi i32 [ %2059, %2058 ], [ %1024, %1035 ]
  %1042 = phi ptr [ %2061, %2058 ], [ %50, %1035 ]
  %1043 = phi i32 [ %2063, %2058 ], [ %1027, %1035 ]
  %1044 = phi i32 [ %2062, %2058 ], [ %56, %1035 ]
  %1045 = phi ptr [ %2061, %2058 ], [ %1037, %1035 ]
  %1046 = phi i32 [ %2060, %2058 ], [ %1038, %1035 ]
  %1047 = getelementptr i8, ptr %1042, i32 1
  %1048 = add i32 %1044, 1
  %1049 = icmp eq i32 %1046, 0
  br i1 %1049, label %1212, label %1050

1050:                                             ; preds = %1040
  %1051 = load i32, ptr %16, align 4
  %1052 = sub i32 %1048, %1051
  %1053 = icmp ugt i32 %1052, %30
  %1054 = sub i32 %1048, %30
  %1055 = load i32, ptr %31, align 4
  %1056 = icmp eq i32 %1055, 0
  %1057 = select i1 %1056, i1 %1053, i1 false
  %1058 = select i1 %1057, i32 %1054, i32 %1051
  %1059 = sub i32 %1048, %52
  %1060 = icmp ult i32 %1059, %11
  %1061 = select i1 %1060, ptr %14, ptr %9
  %1062 = getelementptr i8, ptr %1061, i32 %1059
  %1063 = sub i32 %32, %1059
  %1064 = icmp ugt i32 %1063, 2
  %1065 = icmp ugt i32 %1059, %1058
  %1066 = and i1 %1064, %1065
  br i1 %1066, label %1067, label %1212

1067:                                             ; preds = %1050
  %1068 = load i32, ptr %1047, align 1
  %1069 = load i32, ptr %1062, align 1
  %1070 = icmp eq i32 %1068, %1069
  br i1 %1070, label %1071, label %1212

1071:                                             ; preds = %1067
  %1072 = select i1 %1060, ptr %15, ptr %6
  %1073 = getelementptr i8, ptr %1042, i32 5
  %1074 = getelementptr i8, ptr %1062, i32 4
  %1075 = ptrtoint ptr %1072 to i32
  %1076 = ptrtoint ptr %1074 to i32
  %1077 = sub i32 %1075, %1076
  %1078 = getelementptr i8, ptr %1073, i32 %1077
  %1079 = icmp ult ptr %1078, %6
  %1080 = select i1 %1079, ptr %1078, ptr %6
  %1081 = getelementptr i8, ptr %1080, i32 -3
  %1082 = icmp ugt ptr %1081, %1073
  br i1 %1082, label %1083, label %1109

1083:                                             ; preds = %1071
  %1084 = load i32, ptr %1074, align 1
  %1085 = load i32, ptr %1073, align 1
  %1086 = xor i32 %1085, %1084
  %1087 = icmp eq i32 %1086, 0
  br i1 %1087, label %1091, label %1088

1088:                                             ; preds = %1083
  %1089 = tail call i32 @llvm.cttz.i32(i32 %1086, i1 true) #7, !range !8
  %1090 = lshr i32 %1089, 3
  br label %1136

1091:                                             ; preds = %1097, %1083
  %1092 = phi ptr [ %1095, %1097 ], [ %1073, %1083 ]
  %1093 = phi ptr [ %1094, %1097 ], [ %1074, %1083 ]
  %1094 = getelementptr i8, ptr %1093, i32 4
  %1095 = getelementptr i8, ptr %1092, i32 4
  %1096 = icmp ult ptr %1095, %1081
  br i1 %1096, label %1097, label %1109

1097:                                             ; preds = %1091
  %1098 = load i32, ptr %1094, align 1
  %1099 = load i32, ptr %1095, align 1
  %1100 = xor i32 %1099, %1098
  %1101 = icmp eq i32 %1100, 0
  br i1 %1101, label %1091, label %1102

1102:                                             ; preds = %1097
  %1103 = tail call i32 @llvm.cttz.i32(i32 %1100, i1 true) #7, !range !8
  %1104 = lshr i32 %1103, 3
  %1105 = getelementptr i8, ptr %1095, i32 %1104
  %1106 = ptrtoint ptr %1105 to i32
  %1107 = ptrtoint ptr %1073 to i32
  %1108 = sub i32 %1106, %1107
  br label %1136

1109:                                             ; preds = %1091, %1071
  %1110 = phi ptr [ %1073, %1071 ], [ %1095, %1091 ]
  %1111 = phi ptr [ %1074, %1071 ], [ %1094, %1091 ]
  %1112 = getelementptr i8, ptr %1080, i32 -1
  %1113 = icmp ult ptr %1110, %1112
  br i1 %1113, label %1114, label %1121

1114:                                             ; preds = %1109
  %1115 = load i16, ptr %1111, align 1
  %1116 = load i16, ptr %1110, align 1
  %1117 = icmp eq i16 %1115, %1116
  br i1 %1117, label %1118, label %1121

1118:                                             ; preds = %1114
  %1119 = getelementptr i8, ptr %1110, i32 2
  %1120 = getelementptr i8, ptr %1111, i32 2
  br label %1121

1121:                                             ; preds = %1118, %1114, %1109
  %1122 = phi ptr [ %1119, %1118 ], [ %1110, %1114 ], [ %1110, %1109 ]
  %1123 = phi ptr [ %1120, %1118 ], [ %1111, %1114 ], [ %1111, %1109 ]
  %1124 = icmp ult ptr %1122, %1080
  br i1 %1124, label %1125, label %1131

1125:                                             ; preds = %1121
  %1126 = load i8, ptr %1123, align 1
  %1127 = load i8, ptr %1122, align 1
  %1128 = icmp eq i8 %1126, %1127
  %1129 = zext i1 %1128 to i32
  %1130 = getelementptr i8, ptr %1122, i32 %1129
  br label %1131

1131:                                             ; preds = %1125, %1121
  %1132 = phi ptr [ %1122, %1121 ], [ %1130, %1125 ]
  %1133 = ptrtoint ptr %1132 to i32
  %1134 = ptrtoint ptr %1073 to i32
  %1135 = sub i32 %1133, %1134
  br label %1136

1136:                                             ; preds = %1131, %1102, %1088
  %1137 = phi i32 [ %1135, %1131 ], [ %1090, %1088 ], [ %1108, %1102 ]
  %1138 = getelementptr i8, ptr %1074, i32 %1137
  %1139 = icmp eq ptr %1138, %1072
  br i1 %1139, label %1140, label %1198

1140:                                             ; preds = %1136
  %1141 = getelementptr i8, ptr %1073, i32 %1137
  %1142 = icmp ugt ptr %33, %1141
  br i1 %1142, label %1143, label %1169

1143:                                             ; preds = %1140
  %1144 = load i32, ptr %12, align 1
  %1145 = load i32, ptr %1141, align 1
  %1146 = xor i32 %1145, %1144
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1151, label %1148

1148:                                             ; preds = %1143
  %1149 = tail call i32 @llvm.cttz.i32(i32 %1146, i1 true) #7, !range !8
  %1150 = lshr i32 %1149, 3
  br label %1195

1151:                                             ; preds = %1157, %1143
  %1152 = phi ptr [ %1155, %1157 ], [ %1141, %1143 ]
  %1153 = phi ptr [ %1154, %1157 ], [ %12, %1143 ]
  %1154 = getelementptr i8, ptr %1153, i32 4
  %1155 = getelementptr i8, ptr %1152, i32 4
  %1156 = icmp ult ptr %1155, %33
  br i1 %1156, label %1157, label %1169

1157:                                             ; preds = %1151
  %1158 = load i32, ptr %1154, align 1
  %1159 = load i32, ptr %1155, align 1
  %1160 = xor i32 %1159, %1158
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1151, label %1162

1162:                                             ; preds = %1157
  %1163 = tail call i32 @llvm.cttz.i32(i32 %1160, i1 true) #7, !range !8
  %1164 = lshr i32 %1163, 3
  %1165 = getelementptr i8, ptr %1155, i32 %1164
  %1166 = ptrtoint ptr %1165 to i32
  %1167 = ptrtoint ptr %1141 to i32
  %1168 = sub i32 %1166, %1167
  br label %1195

1169:                                             ; preds = %1151, %1140
  %1170 = phi ptr [ %1141, %1140 ], [ %1155, %1151 ]
  %1171 = phi ptr [ %12, %1140 ], [ %1154, %1151 ]
  %1172 = icmp ult ptr %1170, %34
  br i1 %1172, label %1173, label %1180

1173:                                             ; preds = %1169
  %1174 = load i16, ptr %1171, align 1
  %1175 = load i16, ptr %1170, align 1
  %1176 = icmp eq i16 %1174, %1175
  br i1 %1176, label %1177, label %1180

1177:                                             ; preds = %1173
  %1178 = getelementptr i8, ptr %1170, i32 2
  %1179 = getelementptr i8, ptr %1171, i32 2
  br label %1180

1180:                                             ; preds = %1177, %1173, %1169
  %1181 = phi ptr [ %1178, %1177 ], [ %1170, %1173 ], [ %1170, %1169 ]
  %1182 = phi ptr [ %1179, %1177 ], [ %1171, %1173 ], [ %1171, %1169 ]
  %1183 = icmp ult ptr %1181, %6
  br i1 %1183, label %1184, label %1190

1184:                                             ; preds = %1180
  %1185 = load i8, ptr %1182, align 1
  %1186 = load i8, ptr %1181, align 1
  %1187 = icmp eq i8 %1185, %1186
  %1188 = zext i1 %1187 to i32
  %1189 = getelementptr i8, ptr %1181, i32 %1188
  br label %1190

1190:                                             ; preds = %1184, %1180
  %1191 = phi ptr [ %1181, %1180 ], [ %1189, %1184 ]
  %1192 = ptrtoint ptr %1191 to i32
  %1193 = ptrtoint ptr %1141 to i32
  %1194 = sub i32 %1192, %1193
  br label %1195

1195:                                             ; preds = %1190, %1162, %1148
  %1196 = phi i32 [ %1194, %1190 ], [ %1150, %1148 ], [ %1168, %1162 ]
  %1197 = add i32 %1196, %1137
  br label %1198

1198:                                             ; preds = %1195, %1136
  %1199 = phi i32 [ %1197, %1195 ], [ %1137, %1136 ]
  %1200 = add i32 %1199, 4
  %1201 = icmp ult i32 %1199, -4
  br i1 %1201, label %1202, label %1212

1202:                                             ; preds = %1198
  %1203 = add i32 %1046, 1
  %1204 = tail call i32 @llvm.ctlz.i32(i32 %1203, i1 false) #7, !range !8
  %1205 = xor i32 %1204, -32
  %1206 = mul i32 %1043, 3
  %1207 = add i32 %1206, 2
  %1208 = add i32 %1207, %1205
  %1209 = mul i32 %1200, 3
  %1210 = icmp sgt i32 %1209, %1208
  br i1 %1210, label %1211, label %1212

1211:                                             ; preds = %1202
  br label %1212

1212:                                             ; preds = %1211, %1202, %1198, %1067, %1050, %1040
  %1213 = phi i32 [ 0, %1040 ], [ %1046, %1067 ], [ %1046, %1050 ], [ 0, %1211 ], [ %1046, %1202 ], [ %1046, %1198 ]
  %1214 = phi ptr [ %1045, %1040 ], [ %1045, %1067 ], [ %1045, %1050 ], [ %1047, %1211 ], [ %1045, %1202 ], [ %1045, %1198 ]
  %1215 = phi i32 [ %1043, %1040 ], [ %1043, %1067 ], [ %1043, %1050 ], [ %1200, %1211 ], [ %1043, %1202 ], [ %1043, %1198 ]
  %1216 = load i32, ptr %41, align 4
  switch i32 %1216, label %1217 [
    i32 6, label %1762
    i32 5, label %1485
    i32 7, label %1762
  ]

1217:                                             ; preds = %1212
  %1218 = load ptr, ptr %42, align 4
  %1219 = load i32, ptr %43, align 4
  %1220 = shl nuw i32 1, %1219
  %1221 = add i32 %1220, -1
  %1222 = load ptr, ptr %8, align 4
  %1223 = load ptr, ptr %13, align 4
  %1224 = load i32, ptr %10, align 4
  %1225 = getelementptr i8, ptr %1222, i32 %1224
  %1226 = getelementptr i8, ptr %1223, i32 %1224
  %1227 = ptrtoint ptr %1047 to i32
  %1228 = ptrtoint ptr %1222 to i32
  %1229 = sub i32 %1227, %1228
  %1230 = load i32, ptr %27, align 4
  %1231 = shl nuw i32 1, %1230
  %1232 = load i32, ptr %16, align 4
  %1233 = sub i32 %1229, %1232
  %1234 = icmp ugt i32 %1233, %1231
  %1235 = sub i32 %1229, %1231
  %1236 = load i32, ptr %31, align 4
  %1237 = icmp eq i32 %1236, 0
  %1238 = select i1 %1237, i1 %1234, i1 false
  %1239 = select i1 %1238, i32 %1235, i32 %1232
  %1240 = tail call i32 @llvm.usub.sat.i32(i32 %1229, i32 %1220) #7
  %1241 = load i32, ptr %44, align 4
  %1242 = shl nuw i32 1, %1241
  %1243 = load ptr, ptr %45, align 4
  %1244 = load i32, ptr %46, align 4
  %1245 = shl nsw i32 -1, %1219
  %1246 = xor i32 %1245, -1
  %1247 = icmp ult i32 %1041, %1229
  %1248 = sub i32 32, %1244
  br i1 %1247, label %1249, label %1261

1249:                                             ; preds = %1249, %1217
  %1250 = phi i32 [ %1259, %1249 ], [ %1041, %1217 ]
  %1251 = getelementptr i8, ptr %1222, i32 %1250
  %1252 = load i32, ptr %1251, align 1
  %1253 = mul i32 %1252, -1640531535
  %1254 = lshr i32 %1253, %1248
  %1255 = getelementptr i32, ptr %1243, i32 %1254
  %1256 = load i32, ptr %1255, align 4
  %1257 = and i32 %1250, %1246
  %1258 = getelementptr i32, ptr %1218, i32 %1257
  store i32 %1256, ptr %1258, align 4
  store i32 %1250, ptr %1255, align 4
  %1259 = add nuw i32 %1250, 1
  %1260 = icmp eq i32 %1259, %1229
  br i1 %1260, label %1261, label %1249

1261:                                             ; preds = %1249, %1217
  store i32 %1229, ptr %47, align 4
  %1262 = load i32, ptr %1047, align 1
  %1263 = mul i32 %1262, -1640531535
  %1264 = lshr i32 %1263, %1248
  %1265 = getelementptr i32, ptr %1243, i32 %1264
  %1266 = load i32, ptr %1265, align 4
  %1267 = icmp ult i32 %1266, %1239
  br i1 %1267, label %2065, label %1268

1268:                                             ; preds = %1261
  %1269 = icmp ugt ptr %33, %1047
  %1270 = getelementptr i8, ptr %1042, i32 5
  %1271 = ptrtoint ptr %1226 to i32
  %1272 = ptrtoint ptr %1270 to i32
  %1273 = add i32 %1229, 2
  br label %1274

1274:                                             ; preds = %1477, %1268
  %1275 = phi i32 [ 999999999, %1268 ], [ %1474, %1477 ]
  %1276 = phi i32 [ %1266, %1268 ], [ %1481, %1477 ]
  %1277 = phi i32 [ 3, %1268 ], [ %1475, %1477 ]
  %1278 = phi i32 [ %1242, %1268 ], [ %1480, %1477 ]
  %1279 = icmp ult i32 %1276, %1224
  br i1 %1279, label %1337, label %1280

1280:                                             ; preds = %1274
  %1281 = getelementptr i8, ptr %1222, i32 %1276
  %1282 = getelementptr i8, ptr %1281, i32 %1277
  %1283 = load i8, ptr %1282, align 1
  %1284 = getelementptr i8, ptr %1047, i32 %1277
  %1285 = load i8, ptr %1284, align 1
  %1286 = icmp eq i8 %1283, %1285
  br i1 %1286, label %1287, label %1473

1287:                                             ; preds = %1280
  br i1 %1269, label %1288, label %1312

1288:                                             ; preds = %1287
  %1289 = load i32, ptr %1281, align 1
  %1290 = xor i32 %1289, %1262
  %1291 = icmp eq i32 %1290, 0
  br i1 %1291, label %1295, label %1292

1292:                                             ; preds = %1288
  %1293 = tail call i32 @llvm.cttz.i32(i32 %1290, i1 true) #7, !range !8
  %1294 = lshr i32 %1293, 3
  br label %1466

1295:                                             ; preds = %1301, %1288
  %1296 = phi ptr [ %1299, %1301 ], [ %1047, %1288 ]
  %1297 = phi ptr [ %1298, %1301 ], [ %1281, %1288 ]
  %1298 = getelementptr i8, ptr %1297, i32 4
  %1299 = getelementptr i8, ptr %1296, i32 4
  %1300 = icmp ult ptr %1299, %33
  br i1 %1300, label %1301, label %1312

1301:                                             ; preds = %1295
  %1302 = load i32, ptr %1298, align 1
  %1303 = load i32, ptr %1299, align 1
  %1304 = xor i32 %1303, %1302
  %1305 = icmp eq i32 %1304, 0
  br i1 %1305, label %1295, label %1306

1306:                                             ; preds = %1301
  %1307 = tail call i32 @llvm.cttz.i32(i32 %1304, i1 true) #7, !range !8
  %1308 = lshr i32 %1307, 3
  %1309 = getelementptr i8, ptr %1299, i32 %1308
  %1310 = ptrtoint ptr %1309 to i32
  %1311 = sub i32 %1310, %1227
  br label %1466

1312:                                             ; preds = %1295, %1287
  %1313 = phi ptr [ %1047, %1287 ], [ %1299, %1295 ]
  %1314 = phi ptr [ %1281, %1287 ], [ %1298, %1295 ]
  %1315 = icmp ult ptr %1313, %34
  br i1 %1315, label %1316, label %1323

1316:                                             ; preds = %1312
  %1317 = load i16, ptr %1314, align 1
  %1318 = load i16, ptr %1313, align 1
  %1319 = icmp eq i16 %1317, %1318
  br i1 %1319, label %1320, label %1323

1320:                                             ; preds = %1316
  %1321 = getelementptr i8, ptr %1313, i32 2
  %1322 = getelementptr i8, ptr %1314, i32 2
  br label %1323

1323:                                             ; preds = %1320, %1316, %1312
  %1324 = phi ptr [ %1321, %1320 ], [ %1313, %1316 ], [ %1313, %1312 ]
  %1325 = phi ptr [ %1322, %1320 ], [ %1314, %1316 ], [ %1314, %1312 ]
  %1326 = icmp ult ptr %1324, %6
  br i1 %1326, label %1327, label %1333

1327:                                             ; preds = %1323
  %1328 = load i8, ptr %1325, align 1
  %1329 = load i8, ptr %1324, align 1
  %1330 = icmp eq i8 %1328, %1329
  %1331 = zext i1 %1330 to i32
  %1332 = getelementptr i8, ptr %1324, i32 %1331
  br label %1333

1333:                                             ; preds = %1327, %1323
  %1334 = phi ptr [ %1324, %1323 ], [ %1332, %1327 ]
  %1335 = ptrtoint ptr %1334 to i32
  %1336 = sub i32 %1335, %1227
  br label %1466

1337:                                             ; preds = %1274
  %1338 = getelementptr i8, ptr %1223, i32 %1276
  %1339 = load i32, ptr %1338, align 1
  %1340 = icmp eq i32 %1339, %1262
  br i1 %1340, label %1341, label %1473

1341:                                             ; preds = %1337
  %1342 = getelementptr i8, ptr %1338, i32 4
  %1343 = ptrtoint ptr %1342 to i32
  %1344 = sub i32 %1271, %1343
  %1345 = getelementptr i8, ptr %1270, i32 %1344
  %1346 = icmp ult ptr %1345, %6
  %1347 = select i1 %1346, ptr %1345, ptr %6
  %1348 = getelementptr i8, ptr %1347, i32 -3
  %1349 = icmp ugt ptr %1348, %1270
  br i1 %1349, label %1350, label %1375

1350:                                             ; preds = %1341
  %1351 = load i32, ptr %1342, align 1
  %1352 = load i32, ptr %1270, align 1
  %1353 = xor i32 %1352, %1351
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1358, label %1355

1355:                                             ; preds = %1350
  %1356 = tail call i32 @llvm.cttz.i32(i32 %1353, i1 true) #7, !range !8
  %1357 = lshr i32 %1356, 3
  br label %1401

1358:                                             ; preds = %1364, %1350
  %1359 = phi ptr [ %1362, %1364 ], [ %1270, %1350 ]
  %1360 = phi ptr [ %1361, %1364 ], [ %1342, %1350 ]
  %1361 = getelementptr i8, ptr %1360, i32 4
  %1362 = getelementptr i8, ptr %1359, i32 4
  %1363 = icmp ult ptr %1362, %1348
  br i1 %1363, label %1364, label %1375

1364:                                             ; preds = %1358
  %1365 = load i32, ptr %1361, align 1
  %1366 = load i32, ptr %1362, align 1
  %1367 = xor i32 %1366, %1365
  %1368 = icmp eq i32 %1367, 0
  br i1 %1368, label %1358, label %1369

1369:                                             ; preds = %1364
  %1370 = tail call i32 @llvm.cttz.i32(i32 %1367, i1 true) #7, !range !8
  %1371 = lshr i32 %1370, 3
  %1372 = getelementptr i8, ptr %1362, i32 %1371
  %1373 = ptrtoint ptr %1372 to i32
  %1374 = sub i32 %1373, %1272
  br label %1401

1375:                                             ; preds = %1358, %1341
  %1376 = phi ptr [ %1270, %1341 ], [ %1362, %1358 ]
  %1377 = phi ptr [ %1342, %1341 ], [ %1361, %1358 ]
  %1378 = getelementptr i8, ptr %1347, i32 -1
  %1379 = icmp ult ptr %1376, %1378
  br i1 %1379, label %1380, label %1387

1380:                                             ; preds = %1375
  %1381 = load i16, ptr %1377, align 1
  %1382 = load i16, ptr %1376, align 1
  %1383 = icmp eq i16 %1381, %1382
  br i1 %1383, label %1384, label %1387

1384:                                             ; preds = %1380
  %1385 = getelementptr i8, ptr %1376, i32 2
  %1386 = getelementptr i8, ptr %1377, i32 2
  br label %1387

1387:                                             ; preds = %1384, %1380, %1375
  %1388 = phi ptr [ %1385, %1384 ], [ %1376, %1380 ], [ %1376, %1375 ]
  %1389 = phi ptr [ %1386, %1384 ], [ %1377, %1380 ], [ %1377, %1375 ]
  %1390 = icmp ult ptr %1388, %1347
  br i1 %1390, label %1391, label %1397

1391:                                             ; preds = %1387
  %1392 = load i8, ptr %1389, align 1
  %1393 = load i8, ptr %1388, align 1
  %1394 = icmp eq i8 %1392, %1393
  %1395 = zext i1 %1394 to i32
  %1396 = getelementptr i8, ptr %1388, i32 %1395
  br label %1397

1397:                                             ; preds = %1391, %1387
  %1398 = phi ptr [ %1388, %1387 ], [ %1396, %1391 ]
  %1399 = ptrtoint ptr %1398 to i32
  %1400 = sub i32 %1399, %1272
  br label %1401

1401:                                             ; preds = %1397, %1369, %1355
  %1402 = phi i32 [ %1400, %1397 ], [ %1357, %1355 ], [ %1374, %1369 ]
  %1403 = getelementptr i8, ptr %1342, i32 %1402
  %1404 = icmp eq ptr %1403, %1226
  br i1 %1404, label %1405, label %1463

1405:                                             ; preds = %1401
  %1406 = getelementptr i8, ptr %1270, i32 %1402
  %1407 = icmp ugt ptr %33, %1406
  br i1 %1407, label %1408, label %1434

1408:                                             ; preds = %1405
  %1409 = load i32, ptr %1225, align 1
  %1410 = load i32, ptr %1406, align 1
  %1411 = xor i32 %1410, %1409
  %1412 = icmp eq i32 %1411, 0
  br i1 %1412, label %1416, label %1413

1413:                                             ; preds = %1408
  %1414 = tail call i32 @llvm.cttz.i32(i32 %1411, i1 true) #7, !range !8
  %1415 = lshr i32 %1414, 3
  br label %1460

1416:                                             ; preds = %1422, %1408
  %1417 = phi ptr [ %1420, %1422 ], [ %1406, %1408 ]
  %1418 = phi ptr [ %1419, %1422 ], [ %1225, %1408 ]
  %1419 = getelementptr i8, ptr %1418, i32 4
  %1420 = getelementptr i8, ptr %1417, i32 4
  %1421 = icmp ult ptr %1420, %33
  br i1 %1421, label %1422, label %1434

1422:                                             ; preds = %1416
  %1423 = load i32, ptr %1419, align 1
  %1424 = load i32, ptr %1420, align 1
  %1425 = xor i32 %1424, %1423
  %1426 = icmp eq i32 %1425, 0
  br i1 %1426, label %1416, label %1427

1427:                                             ; preds = %1422
  %1428 = tail call i32 @llvm.cttz.i32(i32 %1425, i1 true) #7, !range !8
  %1429 = lshr i32 %1428, 3
  %1430 = getelementptr i8, ptr %1420, i32 %1429
  %1431 = ptrtoint ptr %1430 to i32
  %1432 = ptrtoint ptr %1406 to i32
  %1433 = sub i32 %1431, %1432
  br label %1460

1434:                                             ; preds = %1416, %1405
  %1435 = phi ptr [ %1406, %1405 ], [ %1420, %1416 ]
  %1436 = phi ptr [ %1225, %1405 ], [ %1419, %1416 ]
  %1437 = icmp ult ptr %1435, %34
  br i1 %1437, label %1438, label %1445

1438:                                             ; preds = %1434
  %1439 = load i16, ptr %1436, align 1
  %1440 = load i16, ptr %1435, align 1
  %1441 = icmp eq i16 %1439, %1440
  br i1 %1441, label %1442, label %1445

1442:                                             ; preds = %1438
  %1443 = getelementptr i8, ptr %1435, i32 2
  %1444 = getelementptr i8, ptr %1436, i32 2
  br label %1445

1445:                                             ; preds = %1442, %1438, %1434
  %1446 = phi ptr [ %1443, %1442 ], [ %1435, %1438 ], [ %1435, %1434 ]
  %1447 = phi ptr [ %1444, %1442 ], [ %1436, %1438 ], [ %1436, %1434 ]
  %1448 = icmp ult ptr %1446, %6
  br i1 %1448, label %1449, label %1455

1449:                                             ; preds = %1445
  %1450 = load i8, ptr %1447, align 1
  %1451 = load i8, ptr %1446, align 1
  %1452 = icmp eq i8 %1450, %1451
  %1453 = zext i1 %1452 to i32
  %1454 = getelementptr i8, ptr %1446, i32 %1453
  br label %1455

1455:                                             ; preds = %1449, %1445
  %1456 = phi ptr [ %1446, %1445 ], [ %1454, %1449 ]
  %1457 = ptrtoint ptr %1456 to i32
  %1458 = ptrtoint ptr %1406 to i32
  %1459 = sub i32 %1457, %1458
  br label %1460

1460:                                             ; preds = %1455, %1427, %1413
  %1461 = phi i32 [ %1459, %1455 ], [ %1415, %1413 ], [ %1433, %1427 ]
  %1462 = add i32 %1461, %1402
  br label %1463

1463:                                             ; preds = %1460, %1401
  %1464 = phi i32 [ %1462, %1460 ], [ %1402, %1401 ]
  %1465 = add i32 %1464, 4
  br label %1466

1466:                                             ; preds = %1463, %1333, %1306, %1292
  %1467 = phi i32 [ %1465, %1463 ], [ %1336, %1333 ], [ %1294, %1292 ], [ %1311, %1306 ]
  %1468 = icmp ugt i32 %1467, %1277
  br i1 %1468, label %1469, label %1473

1469:                                             ; preds = %1466
  %1470 = sub i32 %1273, %1276
  %1471 = getelementptr i8, ptr %1047, i32 %1467
  %1472 = icmp eq ptr %1471, %6
  br i1 %1472, label %2039, label %1473

1473:                                             ; preds = %1469, %1466, %1337, %1280
  %1474 = phi i32 [ %1470, %1469 ], [ %1275, %1466 ], [ %1275, %1337 ], [ %1275, %1280 ]
  %1475 = phi i32 [ %1467, %1469 ], [ %1277, %1466 ], [ %1277, %1337 ], [ %1277, %1280 ]
  %1476 = icmp ugt i32 %1276, %1240
  br i1 %1476, label %1477, label %2039

1477:                                             ; preds = %1473
  %1478 = and i32 %1276, %1221
  %1479 = getelementptr i32, ptr %1218, i32 %1478
  %1480 = add i32 %1278, -1
  %1481 = load i32, ptr %1479, align 4
  %1482 = icmp uge i32 %1481, %1239
  %1483 = icmp ne i32 %1480, 0
  %1484 = and i1 %1483, %1482
  br i1 %1484, label %1274, label %2039

1485:                                             ; preds = %1212
  %1486 = load ptr, ptr %42, align 4
  %1487 = load i32, ptr %43, align 4
  %1488 = shl nuw i32 1, %1487
  %1489 = add i32 %1488, -1
  %1490 = load ptr, ptr %8, align 4
  %1491 = load ptr, ptr %13, align 4
  %1492 = load i32, ptr %10, align 4
  %1493 = getelementptr i8, ptr %1490, i32 %1492
  %1494 = getelementptr i8, ptr %1491, i32 %1492
  %1495 = ptrtoint ptr %1047 to i32
  %1496 = ptrtoint ptr %1490 to i32
  %1497 = sub i32 %1495, %1496
  %1498 = load i32, ptr %27, align 4
  %1499 = shl nuw i32 1, %1498
  %1500 = load i32, ptr %16, align 4
  %1501 = sub i32 %1497, %1500
  %1502 = icmp ugt i32 %1501, %1499
  %1503 = sub i32 %1497, %1499
  %1504 = load i32, ptr %31, align 4
  %1505 = icmp eq i32 %1504, 0
  %1506 = select i1 %1505, i1 %1502, i1 false
  %1507 = select i1 %1506, i32 %1503, i32 %1500
  %1508 = tail call i32 @llvm.usub.sat.i32(i32 %1497, i32 %1488) #7
  %1509 = load i32, ptr %44, align 4
  %1510 = shl nuw i32 1, %1509
  %1511 = load ptr, ptr %45, align 4
  %1512 = load i32, ptr %46, align 4
  %1513 = shl nsw i32 -1, %1487
  %1514 = xor i32 %1513, -1
  %1515 = icmp ult i32 %1041, %1497
  %1516 = sub i32 64, %1512
  %1517 = zext i32 %1516 to i64
  br i1 %1515, label %1518, label %1531

1518:                                             ; preds = %1518, %1485
  %1519 = phi i32 [ %1529, %1518 ], [ %1041, %1485 ]
  %1520 = getelementptr i8, ptr %1490, i32 %1519
  %1521 = load i64, ptr %1520, align 1
  %1522 = mul i64 %1521, -3523014627271114752
  %1523 = lshr i64 %1522, %1517
  %1524 = trunc i64 %1523 to i32
  %1525 = getelementptr i32, ptr %1511, i32 %1524
  %1526 = load i32, ptr %1525, align 4
  %1527 = and i32 %1519, %1514
  %1528 = getelementptr i32, ptr %1486, i32 %1527
  store i32 %1526, ptr %1528, align 4
  store i32 %1519, ptr %1525, align 4
  %1529 = add nuw i32 %1519, 1
  %1530 = icmp eq i32 %1529, %1497
  br i1 %1530, label %1531, label %1518

1531:                                             ; preds = %1518, %1485
  store i32 %1497, ptr %47, align 4
  %1532 = load i64, ptr %1047, align 1
  %1533 = mul i64 %1532, -3523014627271114752
  %1534 = lshr i64 %1533, %1517
  %1535 = trunc i64 %1534 to i32
  %1536 = getelementptr i32, ptr %1511, i32 %1535
  %1537 = load i32, ptr %1536, align 4
  %1538 = icmp ult i32 %1537, %1507
  %1539 = lshr i64 %1532, 32
  %1540 = trunc i64 %1539 to i32
  br i1 %1538, label %2065, label %1541

1541:                                             ; preds = %1531
  %1542 = trunc i64 %1532 to i32
  %1543 = icmp ugt ptr %33, %1047
  %1544 = getelementptr i8, ptr %1042, i32 5
  %1545 = ptrtoint ptr %1494 to i32
  %1546 = ptrtoint ptr %1544 to i32
  %1547 = add i32 %1497, 2
  br label %1548

1548:                                             ; preds = %1754, %1541
  %1549 = phi i32 [ %1542, %1541 ], [ %1750, %1754 ]
  %1550 = phi i32 [ 999999999, %1541 ], [ %1751, %1754 ]
  %1551 = phi i32 [ %1537, %1541 ], [ %1758, %1754 ]
  %1552 = phi i32 [ 3, %1541 ], [ %1752, %1754 ]
  %1553 = phi i32 [ %1510, %1541 ], [ %1757, %1754 ]
  %1554 = icmp ult i32 %1551, %1492
  br i1 %1554, label %1612, label %1555

1555:                                             ; preds = %1548
  %1556 = getelementptr i8, ptr %1490, i32 %1551
  %1557 = getelementptr i8, ptr %1556, i32 %1552
  %1558 = load i8, ptr %1557, align 1
  %1559 = getelementptr i8, ptr %1047, i32 %1552
  %1560 = load i8, ptr %1559, align 1
  %1561 = icmp eq i8 %1558, %1560
  br i1 %1561, label %1562, label %1749

1562:                                             ; preds = %1555
  br i1 %1543, label %1563, label %1587

1563:                                             ; preds = %1562
  %1564 = load i32, ptr %1556, align 1
  %1565 = xor i32 %1549, %1564
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1570, label %1567

1567:                                             ; preds = %1563
  %1568 = tail call i32 @llvm.cttz.i32(i32 %1565, i1 true) #7, !range !8
  %1569 = lshr i32 %1568, 3
  br label %1741

1570:                                             ; preds = %1576, %1563
  %1571 = phi ptr [ %1574, %1576 ], [ %1047, %1563 ]
  %1572 = phi ptr [ %1573, %1576 ], [ %1556, %1563 ]
  %1573 = getelementptr i8, ptr %1572, i32 4
  %1574 = getelementptr i8, ptr %1571, i32 4
  %1575 = icmp ult ptr %1574, %33
  br i1 %1575, label %1576, label %1587

1576:                                             ; preds = %1570
  %1577 = load i32, ptr %1573, align 1
  %1578 = load i32, ptr %1574, align 1
  %1579 = xor i32 %1578, %1577
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1570, label %1581

1581:                                             ; preds = %1576
  %1582 = tail call i32 @llvm.cttz.i32(i32 %1579, i1 true) #7, !range !8
  %1583 = lshr i32 %1582, 3
  %1584 = getelementptr i8, ptr %1574, i32 %1583
  %1585 = ptrtoint ptr %1584 to i32
  %1586 = sub i32 %1585, %1495
  br label %1741

1587:                                             ; preds = %1570, %1562
  %1588 = phi ptr [ %1047, %1562 ], [ %1574, %1570 ]
  %1589 = phi ptr [ %1556, %1562 ], [ %1573, %1570 ]
  %1590 = icmp ult ptr %1588, %34
  br i1 %1590, label %1591, label %1598

1591:                                             ; preds = %1587
  %1592 = load i16, ptr %1589, align 1
  %1593 = load i16, ptr %1588, align 1
  %1594 = icmp eq i16 %1592, %1593
  br i1 %1594, label %1595, label %1598

1595:                                             ; preds = %1591
  %1596 = getelementptr i8, ptr %1588, i32 2
  %1597 = getelementptr i8, ptr %1589, i32 2
  br label %1598

1598:                                             ; preds = %1595, %1591, %1587
  %1599 = phi ptr [ %1596, %1595 ], [ %1588, %1591 ], [ %1588, %1587 ]
  %1600 = phi ptr [ %1597, %1595 ], [ %1589, %1591 ], [ %1589, %1587 ]
  %1601 = icmp ult ptr %1599, %6
  br i1 %1601, label %1602, label %1608

1602:                                             ; preds = %1598
  %1603 = load i8, ptr %1600, align 1
  %1604 = load i8, ptr %1599, align 1
  %1605 = icmp eq i8 %1603, %1604
  %1606 = zext i1 %1605 to i32
  %1607 = getelementptr i8, ptr %1599, i32 %1606
  br label %1608

1608:                                             ; preds = %1602, %1598
  %1609 = phi ptr [ %1599, %1598 ], [ %1607, %1602 ]
  %1610 = ptrtoint ptr %1609 to i32
  %1611 = sub i32 %1610, %1495
  br label %1741

1612:                                             ; preds = %1548
  %1613 = getelementptr i8, ptr %1491, i32 %1551
  %1614 = load i32, ptr %1613, align 1
  %1615 = load i32, ptr %1047, align 1
  %1616 = icmp eq i32 %1614, %1615
  br i1 %1616, label %1617, label %1749

1617:                                             ; preds = %1612
  %1618 = getelementptr i8, ptr %1613, i32 4
  %1619 = ptrtoint ptr %1618 to i32
  %1620 = sub i32 %1545, %1619
  %1621 = getelementptr i8, ptr %1544, i32 %1620
  %1622 = icmp ult ptr %1621, %6
  %1623 = select i1 %1622, ptr %1621, ptr %6
  %1624 = getelementptr i8, ptr %1623, i32 -3
  %1625 = icmp ugt ptr %1624, %1544
  br i1 %1625, label %1626, label %1650

1626:                                             ; preds = %1617
  %1627 = load i32, ptr %1618, align 1
  %1628 = xor i32 %1627, %1540
  %1629 = icmp eq i32 %1628, 0
  br i1 %1629, label %1633, label %1630

1630:                                             ; preds = %1626
  %1631 = tail call i32 @llvm.cttz.i32(i32 %1628, i1 true) #7, !range !8
  %1632 = lshr i32 %1631, 3
  br label %1676

1633:                                             ; preds = %1639, %1626
  %1634 = phi ptr [ %1637, %1639 ], [ %1544, %1626 ]
  %1635 = phi ptr [ %1636, %1639 ], [ %1618, %1626 ]
  %1636 = getelementptr i8, ptr %1635, i32 4
  %1637 = getelementptr i8, ptr %1634, i32 4
  %1638 = icmp ult ptr %1637, %1624
  br i1 %1638, label %1639, label %1650

1639:                                             ; preds = %1633
  %1640 = load i32, ptr %1636, align 1
  %1641 = load i32, ptr %1637, align 1
  %1642 = xor i32 %1641, %1640
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1633, label %1644

1644:                                             ; preds = %1639
  %1645 = tail call i32 @llvm.cttz.i32(i32 %1642, i1 true) #7, !range !8
  %1646 = lshr i32 %1645, 3
  %1647 = getelementptr i8, ptr %1637, i32 %1646
  %1648 = ptrtoint ptr %1647 to i32
  %1649 = sub i32 %1648, %1546
  br label %1676

1650:                                             ; preds = %1633, %1617
  %1651 = phi ptr [ %1544, %1617 ], [ %1637, %1633 ]
  %1652 = phi ptr [ %1618, %1617 ], [ %1636, %1633 ]
  %1653 = getelementptr i8, ptr %1623, i32 -1
  %1654 = icmp ult ptr %1651, %1653
  br i1 %1654, label %1655, label %1662

1655:                                             ; preds = %1650
  %1656 = load i16, ptr %1652, align 1
  %1657 = load i16, ptr %1651, align 1
  %1658 = icmp eq i16 %1656, %1657
  br i1 %1658, label %1659, label %1662

1659:                                             ; preds = %1655
  %1660 = getelementptr i8, ptr %1651, i32 2
  %1661 = getelementptr i8, ptr %1652, i32 2
  br label %1662

1662:                                             ; preds = %1659, %1655, %1650
  %1663 = phi ptr [ %1660, %1659 ], [ %1651, %1655 ], [ %1651, %1650 ]
  %1664 = phi ptr [ %1661, %1659 ], [ %1652, %1655 ], [ %1652, %1650 ]
  %1665 = icmp ult ptr %1663, %1623
  br i1 %1665, label %1666, label %1672

1666:                                             ; preds = %1662
  %1667 = load i8, ptr %1664, align 1
  %1668 = load i8, ptr %1663, align 1
  %1669 = icmp eq i8 %1667, %1668
  %1670 = zext i1 %1669 to i32
  %1671 = getelementptr i8, ptr %1663, i32 %1670
  br label %1672

1672:                                             ; preds = %1666, %1662
  %1673 = phi ptr [ %1663, %1662 ], [ %1671, %1666 ]
  %1674 = ptrtoint ptr %1673 to i32
  %1675 = sub i32 %1674, %1546
  br label %1676

1676:                                             ; preds = %1672, %1644, %1630
  %1677 = phi i32 [ %1675, %1672 ], [ %1632, %1630 ], [ %1649, %1644 ]
  %1678 = getelementptr i8, ptr %1618, i32 %1677
  %1679 = icmp eq ptr %1678, %1494
  br i1 %1679, label %1680, label %1738

1680:                                             ; preds = %1676
  %1681 = getelementptr i8, ptr %1544, i32 %1677
  %1682 = icmp ugt ptr %33, %1681
  br i1 %1682, label %1683, label %1709

1683:                                             ; preds = %1680
  %1684 = load i32, ptr %1493, align 1
  %1685 = load i32, ptr %1681, align 1
  %1686 = xor i32 %1685, %1684
  %1687 = icmp eq i32 %1686, 0
  br i1 %1687, label %1691, label %1688

1688:                                             ; preds = %1683
  %1689 = tail call i32 @llvm.cttz.i32(i32 %1686, i1 true) #7, !range !8
  %1690 = lshr i32 %1689, 3
  br label %1735

1691:                                             ; preds = %1697, %1683
  %1692 = phi ptr [ %1695, %1697 ], [ %1681, %1683 ]
  %1693 = phi ptr [ %1694, %1697 ], [ %1493, %1683 ]
  %1694 = getelementptr i8, ptr %1693, i32 4
  %1695 = getelementptr i8, ptr %1692, i32 4
  %1696 = icmp ult ptr %1695, %33
  br i1 %1696, label %1697, label %1709

1697:                                             ; preds = %1691
  %1698 = load i32, ptr %1694, align 1
  %1699 = load i32, ptr %1695, align 1
  %1700 = xor i32 %1699, %1698
  %1701 = icmp eq i32 %1700, 0
  br i1 %1701, label %1691, label %1702

1702:                                             ; preds = %1697
  %1703 = tail call i32 @llvm.cttz.i32(i32 %1700, i1 true) #7, !range !8
  %1704 = lshr i32 %1703, 3
  %1705 = getelementptr i8, ptr %1695, i32 %1704
  %1706 = ptrtoint ptr %1705 to i32
  %1707 = ptrtoint ptr %1681 to i32
  %1708 = sub i32 %1706, %1707
  br label %1735

1709:                                             ; preds = %1691, %1680
  %1710 = phi ptr [ %1681, %1680 ], [ %1695, %1691 ]
  %1711 = phi ptr [ %1493, %1680 ], [ %1694, %1691 ]
  %1712 = icmp ult ptr %1710, %34
  br i1 %1712, label %1713, label %1720

1713:                                             ; preds = %1709
  %1714 = load i16, ptr %1711, align 1
  %1715 = load i16, ptr %1710, align 1
  %1716 = icmp eq i16 %1714, %1715
  br i1 %1716, label %1717, label %1720

1717:                                             ; preds = %1713
  %1718 = getelementptr i8, ptr %1710, i32 2
  %1719 = getelementptr i8, ptr %1711, i32 2
  br label %1720

1720:                                             ; preds = %1717, %1713, %1709
  %1721 = phi ptr [ %1718, %1717 ], [ %1710, %1713 ], [ %1710, %1709 ]
  %1722 = phi ptr [ %1719, %1717 ], [ %1711, %1713 ], [ %1711, %1709 ]
  %1723 = icmp ult ptr %1721, %6
  br i1 %1723, label %1724, label %1730

1724:                                             ; preds = %1720
  %1725 = load i8, ptr %1722, align 1
  %1726 = load i8, ptr %1721, align 1
  %1727 = icmp eq i8 %1725, %1726
  %1728 = zext i1 %1727 to i32
  %1729 = getelementptr i8, ptr %1721, i32 %1728
  br label %1730

1730:                                             ; preds = %1724, %1720
  %1731 = phi ptr [ %1721, %1720 ], [ %1729, %1724 ]
  %1732 = ptrtoint ptr %1731 to i32
  %1733 = ptrtoint ptr %1681 to i32
  %1734 = sub i32 %1732, %1733
  br label %1735

1735:                                             ; preds = %1730, %1702, %1688
  %1736 = phi i32 [ %1734, %1730 ], [ %1690, %1688 ], [ %1708, %1702 ]
  %1737 = add i32 %1736, %1677
  br label %1738

1738:                                             ; preds = %1735, %1676
  %1739 = phi i32 [ %1737, %1735 ], [ %1677, %1676 ]
  %1740 = add i32 %1739, 4
  br label %1741

1741:                                             ; preds = %1738, %1608, %1581, %1567
  %1742 = phi i32 [ %1614, %1738 ], [ %1549, %1608 ], [ %1549, %1567 ], [ %1549, %1581 ]
  %1743 = phi i32 [ %1740, %1738 ], [ %1611, %1608 ], [ %1569, %1567 ], [ %1586, %1581 ]
  %1744 = icmp ugt i32 %1743, %1552
  br i1 %1744, label %1745, label %1749

1745:                                             ; preds = %1741
  %1746 = sub i32 %1547, %1551
  %1747 = getelementptr i8, ptr %1047, i32 %1743
  %1748 = icmp eq ptr %1747, %6
  br i1 %1748, label %2039, label %1749

1749:                                             ; preds = %1745, %1741, %1612, %1555
  %1750 = phi i32 [ %1742, %1745 ], [ %1742, %1741 ], [ %1615, %1612 ], [ %1549, %1555 ]
  %1751 = phi i32 [ %1746, %1745 ], [ %1550, %1741 ], [ %1550, %1612 ], [ %1550, %1555 ]
  %1752 = phi i32 [ %1743, %1745 ], [ %1552, %1741 ], [ %1552, %1612 ], [ %1552, %1555 ]
  %1753 = icmp ugt i32 %1551, %1508
  br i1 %1753, label %1754, label %2039

1754:                                             ; preds = %1749
  %1755 = and i32 %1551, %1489
  %1756 = getelementptr i32, ptr %1486, i32 %1755
  %1757 = add i32 %1553, -1
  %1758 = load i32, ptr %1756, align 4
  %1759 = icmp uge i32 %1758, %1507
  %1760 = icmp ne i32 %1757, 0
  %1761 = and i1 %1760, %1759
  br i1 %1761, label %1548, label %2039

1762:                                             ; preds = %1212, %1212
  %1763 = load ptr, ptr %42, align 4
  %1764 = load i32, ptr %43, align 4
  %1765 = shl nuw i32 1, %1764
  %1766 = add i32 %1765, -1
  %1767 = load ptr, ptr %8, align 4
  %1768 = load ptr, ptr %13, align 4
  %1769 = load i32, ptr %10, align 4
  %1770 = getelementptr i8, ptr %1767, i32 %1769
  %1771 = getelementptr i8, ptr %1768, i32 %1769
  %1772 = ptrtoint ptr %1047 to i32
  %1773 = ptrtoint ptr %1767 to i32
  %1774 = sub i32 %1772, %1773
  %1775 = load i32, ptr %27, align 4
  %1776 = shl nuw i32 1, %1775
  %1777 = load i32, ptr %16, align 4
  %1778 = sub i32 %1774, %1777
  %1779 = icmp ugt i32 %1778, %1776
  %1780 = sub i32 %1774, %1776
  %1781 = load i32, ptr %31, align 4
  %1782 = icmp eq i32 %1781, 0
  %1783 = select i1 %1782, i1 %1779, i1 false
  %1784 = select i1 %1783, i32 %1780, i32 %1777
  %1785 = tail call i32 @llvm.usub.sat.i32(i32 %1774, i32 %1765) #7
  %1786 = load i32, ptr %44, align 4
  %1787 = shl nuw i32 1, %1786
  %1788 = load ptr, ptr %45, align 4
  %1789 = load i32, ptr %46, align 4
  %1790 = shl nsw i32 -1, %1764
  %1791 = xor i32 %1790, -1
  %1792 = icmp ult i32 %1041, %1774
  %1793 = sub i32 64, %1789
  %1794 = zext i32 %1793 to i64
  br i1 %1792, label %1795, label %1808

1795:                                             ; preds = %1795, %1762
  %1796 = phi i32 [ %1806, %1795 ], [ %1041, %1762 ]
  %1797 = getelementptr i8, ptr %1767, i32 %1796
  %1798 = load i64, ptr %1797, align 1
  %1799 = mul i64 %1798, -3523014627193847808
  %1800 = lshr i64 %1799, %1794
  %1801 = trunc i64 %1800 to i32
  %1802 = getelementptr i32, ptr %1788, i32 %1801
  %1803 = load i32, ptr %1802, align 4
  %1804 = and i32 %1796, %1791
  %1805 = getelementptr i32, ptr %1763, i32 %1804
  store i32 %1803, ptr %1805, align 4
  store i32 %1796, ptr %1802, align 4
  %1806 = add nuw i32 %1796, 1
  %1807 = icmp eq i32 %1806, %1774
  br i1 %1807, label %1808, label %1795

1808:                                             ; preds = %1795, %1762
  store i32 %1774, ptr %47, align 4
  %1809 = load i64, ptr %1047, align 1
  %1810 = mul i64 %1809, -3523014627193847808
  %1811 = lshr i64 %1810, %1794
  %1812 = trunc i64 %1811 to i32
  %1813 = getelementptr i32, ptr %1788, i32 %1812
  %1814 = load i32, ptr %1813, align 4
  %1815 = icmp ult i32 %1814, %1784
  %1816 = lshr i64 %1809, 32
  %1817 = trunc i64 %1816 to i32
  br i1 %1815, label %2065, label %1818

1818:                                             ; preds = %1808
  %1819 = trunc i64 %1809 to i32
  %1820 = icmp ugt ptr %33, %1047
  %1821 = getelementptr i8, ptr %1042, i32 5
  %1822 = ptrtoint ptr %1771 to i32
  %1823 = ptrtoint ptr %1821 to i32
  %1824 = add i32 %1774, 2
  br label %1825

1825:                                             ; preds = %2031, %1818
  %1826 = phi i32 [ %1819, %1818 ], [ %2027, %2031 ]
  %1827 = phi i32 [ 999999999, %1818 ], [ %2028, %2031 ]
  %1828 = phi i32 [ %1814, %1818 ], [ %2035, %2031 ]
  %1829 = phi i32 [ 3, %1818 ], [ %2029, %2031 ]
  %1830 = phi i32 [ %1787, %1818 ], [ %2034, %2031 ]
  %1831 = icmp ult i32 %1828, %1769
  br i1 %1831, label %1889, label %1832

1832:                                             ; preds = %1825
  %1833 = getelementptr i8, ptr %1767, i32 %1828
  %1834 = getelementptr i8, ptr %1833, i32 %1829
  %1835 = load i8, ptr %1834, align 1
  %1836 = getelementptr i8, ptr %1047, i32 %1829
  %1837 = load i8, ptr %1836, align 1
  %1838 = icmp eq i8 %1835, %1837
  br i1 %1838, label %1839, label %2026

1839:                                             ; preds = %1832
  br i1 %1820, label %1840, label %1864

1840:                                             ; preds = %1839
  %1841 = load i32, ptr %1833, align 1
  %1842 = xor i32 %1826, %1841
  %1843 = icmp eq i32 %1842, 0
  br i1 %1843, label %1847, label %1844

1844:                                             ; preds = %1840
  %1845 = tail call i32 @llvm.cttz.i32(i32 %1842, i1 true) #7, !range !8
  %1846 = lshr i32 %1845, 3
  br label %2018

1847:                                             ; preds = %1853, %1840
  %1848 = phi ptr [ %1851, %1853 ], [ %1047, %1840 ]
  %1849 = phi ptr [ %1850, %1853 ], [ %1833, %1840 ]
  %1850 = getelementptr i8, ptr %1849, i32 4
  %1851 = getelementptr i8, ptr %1848, i32 4
  %1852 = icmp ult ptr %1851, %33
  br i1 %1852, label %1853, label %1864

1853:                                             ; preds = %1847
  %1854 = load i32, ptr %1850, align 1
  %1855 = load i32, ptr %1851, align 1
  %1856 = xor i32 %1855, %1854
  %1857 = icmp eq i32 %1856, 0
  br i1 %1857, label %1847, label %1858

1858:                                             ; preds = %1853
  %1859 = tail call i32 @llvm.cttz.i32(i32 %1856, i1 true) #7, !range !8
  %1860 = lshr i32 %1859, 3
  %1861 = getelementptr i8, ptr %1851, i32 %1860
  %1862 = ptrtoint ptr %1861 to i32
  %1863 = sub i32 %1862, %1772
  br label %2018

1864:                                             ; preds = %1847, %1839
  %1865 = phi ptr [ %1047, %1839 ], [ %1851, %1847 ]
  %1866 = phi ptr [ %1833, %1839 ], [ %1850, %1847 ]
  %1867 = icmp ult ptr %1865, %34
  br i1 %1867, label %1868, label %1875

1868:                                             ; preds = %1864
  %1869 = load i16, ptr %1866, align 1
  %1870 = load i16, ptr %1865, align 1
  %1871 = icmp eq i16 %1869, %1870
  br i1 %1871, label %1872, label %1875

1872:                                             ; preds = %1868
  %1873 = getelementptr i8, ptr %1865, i32 2
  %1874 = getelementptr i8, ptr %1866, i32 2
  br label %1875

1875:                                             ; preds = %1872, %1868, %1864
  %1876 = phi ptr [ %1873, %1872 ], [ %1865, %1868 ], [ %1865, %1864 ]
  %1877 = phi ptr [ %1874, %1872 ], [ %1866, %1868 ], [ %1866, %1864 ]
  %1878 = icmp ult ptr %1876, %6
  br i1 %1878, label %1879, label %1885

1879:                                             ; preds = %1875
  %1880 = load i8, ptr %1877, align 1
  %1881 = load i8, ptr %1876, align 1
  %1882 = icmp eq i8 %1880, %1881
  %1883 = zext i1 %1882 to i32
  %1884 = getelementptr i8, ptr %1876, i32 %1883
  br label %1885

1885:                                             ; preds = %1879, %1875
  %1886 = phi ptr [ %1876, %1875 ], [ %1884, %1879 ]
  %1887 = ptrtoint ptr %1886 to i32
  %1888 = sub i32 %1887, %1772
  br label %2018

1889:                                             ; preds = %1825
  %1890 = getelementptr i8, ptr %1768, i32 %1828
  %1891 = load i32, ptr %1890, align 1
  %1892 = load i32, ptr %1047, align 1
  %1893 = icmp eq i32 %1891, %1892
  br i1 %1893, label %1894, label %2026

1894:                                             ; preds = %1889
  %1895 = getelementptr i8, ptr %1890, i32 4
  %1896 = ptrtoint ptr %1895 to i32
  %1897 = sub i32 %1822, %1896
  %1898 = getelementptr i8, ptr %1821, i32 %1897
  %1899 = icmp ult ptr %1898, %6
  %1900 = select i1 %1899, ptr %1898, ptr %6
  %1901 = getelementptr i8, ptr %1900, i32 -3
  %1902 = icmp ugt ptr %1901, %1821
  br i1 %1902, label %1903, label %1927

1903:                                             ; preds = %1894
  %1904 = load i32, ptr %1895, align 1
  %1905 = xor i32 %1904, %1817
  %1906 = icmp eq i32 %1905, 0
  br i1 %1906, label %1910, label %1907

1907:                                             ; preds = %1903
  %1908 = tail call i32 @llvm.cttz.i32(i32 %1905, i1 true) #7, !range !8
  %1909 = lshr i32 %1908, 3
  br label %1953

1910:                                             ; preds = %1916, %1903
  %1911 = phi ptr [ %1914, %1916 ], [ %1821, %1903 ]
  %1912 = phi ptr [ %1913, %1916 ], [ %1895, %1903 ]
  %1913 = getelementptr i8, ptr %1912, i32 4
  %1914 = getelementptr i8, ptr %1911, i32 4
  %1915 = icmp ult ptr %1914, %1901
  br i1 %1915, label %1916, label %1927

1916:                                             ; preds = %1910
  %1917 = load i32, ptr %1913, align 1
  %1918 = load i32, ptr %1914, align 1
  %1919 = xor i32 %1918, %1917
  %1920 = icmp eq i32 %1919, 0
  br i1 %1920, label %1910, label %1921

1921:                                             ; preds = %1916
  %1922 = tail call i32 @llvm.cttz.i32(i32 %1919, i1 true) #7, !range !8
  %1923 = lshr i32 %1922, 3
  %1924 = getelementptr i8, ptr %1914, i32 %1923
  %1925 = ptrtoint ptr %1924 to i32
  %1926 = sub i32 %1925, %1823
  br label %1953

1927:                                             ; preds = %1910, %1894
  %1928 = phi ptr [ %1821, %1894 ], [ %1914, %1910 ]
  %1929 = phi ptr [ %1895, %1894 ], [ %1913, %1910 ]
  %1930 = getelementptr i8, ptr %1900, i32 -1
  %1931 = icmp ult ptr %1928, %1930
  br i1 %1931, label %1932, label %1939

1932:                                             ; preds = %1927
  %1933 = load i16, ptr %1929, align 1
  %1934 = load i16, ptr %1928, align 1
  %1935 = icmp eq i16 %1933, %1934
  br i1 %1935, label %1936, label %1939

1936:                                             ; preds = %1932
  %1937 = getelementptr i8, ptr %1928, i32 2
  %1938 = getelementptr i8, ptr %1929, i32 2
  br label %1939

1939:                                             ; preds = %1936, %1932, %1927
  %1940 = phi ptr [ %1937, %1936 ], [ %1928, %1932 ], [ %1928, %1927 ]
  %1941 = phi ptr [ %1938, %1936 ], [ %1929, %1932 ], [ %1929, %1927 ]
  %1942 = icmp ult ptr %1940, %1900
  br i1 %1942, label %1943, label %1949

1943:                                             ; preds = %1939
  %1944 = load i8, ptr %1941, align 1
  %1945 = load i8, ptr %1940, align 1
  %1946 = icmp eq i8 %1944, %1945
  %1947 = zext i1 %1946 to i32
  %1948 = getelementptr i8, ptr %1940, i32 %1947
  br label %1949

1949:                                             ; preds = %1943, %1939
  %1950 = phi ptr [ %1940, %1939 ], [ %1948, %1943 ]
  %1951 = ptrtoint ptr %1950 to i32
  %1952 = sub i32 %1951, %1823
  br label %1953

1953:                                             ; preds = %1949, %1921, %1907
  %1954 = phi i32 [ %1952, %1949 ], [ %1909, %1907 ], [ %1926, %1921 ]
  %1955 = getelementptr i8, ptr %1895, i32 %1954
  %1956 = icmp eq ptr %1955, %1771
  br i1 %1956, label %1957, label %2015

1957:                                             ; preds = %1953
  %1958 = getelementptr i8, ptr %1821, i32 %1954
  %1959 = icmp ugt ptr %33, %1958
  br i1 %1959, label %1960, label %1986

1960:                                             ; preds = %1957
  %1961 = load i32, ptr %1770, align 1
  %1962 = load i32, ptr %1958, align 1
  %1963 = xor i32 %1962, %1961
  %1964 = icmp eq i32 %1963, 0
  br i1 %1964, label %1968, label %1965

1965:                                             ; preds = %1960
  %1966 = tail call i32 @llvm.cttz.i32(i32 %1963, i1 true) #7, !range !8
  %1967 = lshr i32 %1966, 3
  br label %2012

1968:                                             ; preds = %1974, %1960
  %1969 = phi ptr [ %1972, %1974 ], [ %1958, %1960 ]
  %1970 = phi ptr [ %1971, %1974 ], [ %1770, %1960 ]
  %1971 = getelementptr i8, ptr %1970, i32 4
  %1972 = getelementptr i8, ptr %1969, i32 4
  %1973 = icmp ult ptr %1972, %33
  br i1 %1973, label %1974, label %1986

1974:                                             ; preds = %1968
  %1975 = load i32, ptr %1971, align 1
  %1976 = load i32, ptr %1972, align 1
  %1977 = xor i32 %1976, %1975
  %1978 = icmp eq i32 %1977, 0
  br i1 %1978, label %1968, label %1979

1979:                                             ; preds = %1974
  %1980 = tail call i32 @llvm.cttz.i32(i32 %1977, i1 true) #7, !range !8
  %1981 = lshr i32 %1980, 3
  %1982 = getelementptr i8, ptr %1972, i32 %1981
  %1983 = ptrtoint ptr %1982 to i32
  %1984 = ptrtoint ptr %1958 to i32
  %1985 = sub i32 %1983, %1984
  br label %2012

1986:                                             ; preds = %1968, %1957
  %1987 = phi ptr [ %1958, %1957 ], [ %1972, %1968 ]
  %1988 = phi ptr [ %1770, %1957 ], [ %1971, %1968 ]
  %1989 = icmp ult ptr %1987, %34
  br i1 %1989, label %1990, label %1997

1990:                                             ; preds = %1986
  %1991 = load i16, ptr %1988, align 1
  %1992 = load i16, ptr %1987, align 1
  %1993 = icmp eq i16 %1991, %1992
  br i1 %1993, label %1994, label %1997

1994:                                             ; preds = %1990
  %1995 = getelementptr i8, ptr %1987, i32 2
  %1996 = getelementptr i8, ptr %1988, i32 2
  br label %1997

1997:                                             ; preds = %1994, %1990, %1986
  %1998 = phi ptr [ %1995, %1994 ], [ %1987, %1990 ], [ %1987, %1986 ]
  %1999 = phi ptr [ %1996, %1994 ], [ %1988, %1990 ], [ %1988, %1986 ]
  %2000 = icmp ult ptr %1998, %6
  br i1 %2000, label %2001, label %2007

2001:                                             ; preds = %1997
  %2002 = load i8, ptr %1999, align 1
  %2003 = load i8, ptr %1998, align 1
  %2004 = icmp eq i8 %2002, %2003
  %2005 = zext i1 %2004 to i32
  %2006 = getelementptr i8, ptr %1998, i32 %2005
  br label %2007

2007:                                             ; preds = %2001, %1997
  %2008 = phi ptr [ %1998, %1997 ], [ %2006, %2001 ]
  %2009 = ptrtoint ptr %2008 to i32
  %2010 = ptrtoint ptr %1958 to i32
  %2011 = sub i32 %2009, %2010
  br label %2012

2012:                                             ; preds = %2007, %1979, %1965
  %2013 = phi i32 [ %2011, %2007 ], [ %1967, %1965 ], [ %1985, %1979 ]
  %2014 = add i32 %2013, %1954
  br label %2015

2015:                                             ; preds = %2012, %1953
  %2016 = phi i32 [ %2014, %2012 ], [ %1954, %1953 ]
  %2017 = add i32 %2016, 4
  br label %2018

2018:                                             ; preds = %2015, %1885, %1858, %1844
  %2019 = phi i32 [ %1891, %2015 ], [ %1826, %1885 ], [ %1826, %1844 ], [ %1826, %1858 ]
  %2020 = phi i32 [ %2017, %2015 ], [ %1888, %1885 ], [ %1846, %1844 ], [ %1863, %1858 ]
  %2021 = icmp ugt i32 %2020, %1829
  br i1 %2021, label %2022, label %2026

2022:                                             ; preds = %2018
  %2023 = sub i32 %1824, %1828
  %2024 = getelementptr i8, ptr %1047, i32 %2020
  %2025 = icmp eq ptr %2024, %6
  br i1 %2025, label %2039, label %2026

2026:                                             ; preds = %2022, %2018, %1889, %1832
  %2027 = phi i32 [ %2019, %2022 ], [ %2019, %2018 ], [ %1892, %1889 ], [ %1826, %1832 ]
  %2028 = phi i32 [ %2023, %2022 ], [ %1827, %2018 ], [ %1827, %1889 ], [ %1827, %1832 ]
  %2029 = phi i32 [ %2020, %2022 ], [ %1829, %2018 ], [ %1829, %1889 ], [ %1829, %1832 ]
  %2030 = icmp ugt i32 %1828, %1785
  br i1 %2030, label %2031, label %2039

2031:                                             ; preds = %2026
  %2032 = and i32 %1828, %1766
  %2033 = getelementptr i32, ptr %1763, i32 %2032
  %2034 = add i32 %1830, -1
  %2035 = load i32, ptr %2033, align 4
  %2036 = icmp uge i32 %2035, %1784
  %2037 = icmp ne i32 %2034, 0
  %2038 = and i1 %2037, %2036
  br i1 %2038, label %1825, label %2039

2039:                                             ; preds = %2031, %2026, %2022, %1754, %1749, %1745, %1477, %1473, %1469
  %2040 = phi i32 [ %1229, %1477 ], [ %1229, %1473 ], [ %1229, %1469 ], [ %1774, %2031 ], [ %1774, %2026 ], [ %1774, %2022 ], [ %1497, %1754 ], [ %1497, %1749 ], [ %1497, %1745 ]
  %2041 = phi i32 [ %1470, %1469 ], [ %1474, %1473 ], [ %1474, %1477 ], [ %2023, %2022 ], [ %2028, %2026 ], [ %2028, %2031 ], [ %1746, %1745 ], [ %1751, %1749 ], [ %1751, %1754 ]
  %2042 = phi i32 [ %1467, %1469 ], [ %1475, %1473 ], [ %1475, %1477 ], [ %2020, %2022 ], [ %2029, %2026 ], [ %2029, %2031 ], [ %1743, %1745 ], [ %1752, %1749 ], [ %1752, %1754 ]
  %2043 = icmp ugt i32 %2042, 3
  br i1 %2043, label %2044, label %2065

2044:                                             ; preds = %2039
  %2045 = add i32 %1213, 1
  %2046 = tail call i32 @llvm.ctlz.i32(i32 %2045, i1 false) #7, !range !8
  %2047 = xor i32 %2046, -32
  %2048 = add i32 %2041, 1
  %2049 = tail call i32 @llvm.ctlz.i32(i32 %2048, i1 false) #7, !range !8
  %2050 = xor i32 %2049, -32
  %2051 = shl i32 %1215, 2
  %2052 = add nsw i32 %2047, 5
  %2053 = add i32 %2052, %2051
  %2054 = shl i32 %2042, 2
  %2055 = or i32 %2054, 1
  %2056 = add i32 %2055, %2050
  %2057 = icmp sgt i32 %2056, %2053
  br i1 %2057, label %2058, label %2065

2058:                                             ; preds = %3066, %2044
  %2059 = phi i32 [ %2040, %2044 ], [ %3062, %3066 ]
  %2060 = phi i32 [ %2041, %2044 ], [ %3063, %3066 ]
  %2061 = phi ptr [ %1047, %2044 ], [ %2069, %3066 ]
  %2062 = phi i32 [ %1048, %2044 ], [ %2070, %3066 ]
  %2063 = phi i32 [ %2042, %2044 ], [ %3064, %3066 ]
  %2064 = icmp ult ptr %2061, %7
  br i1 %2064, label %1040, label %3080

2065:                                             ; preds = %2044, %2039, %1808, %1531, %1261
  %2066 = phi i32 [ %1774, %1808 ], [ %1497, %1531 ], [ %1229, %1261 ], [ %2040, %2044 ], [ %2040, %2039 ]
  %2067 = icmp ult ptr %1047, %7
  br i1 %2067, label %2068, label %3080

2068:                                             ; preds = %2065
  %2069 = getelementptr i8, ptr %1042, i32 2
  %2070 = add i32 %1044, 2
  %2071 = icmp eq i32 %1213, 0
  br i1 %2071, label %2234, label %2072

2072:                                             ; preds = %2068
  %2073 = load i32, ptr %16, align 4
  %2074 = sub i32 %2070, %2073
  %2075 = icmp ugt i32 %2074, %30
  %2076 = sub i32 %2070, %30
  %2077 = load i32, ptr %31, align 4
  %2078 = icmp eq i32 %2077, 0
  %2079 = select i1 %2078, i1 %2075, i1 false
  %2080 = select i1 %2079, i32 %2076, i32 %2073
  %2081 = sub i32 %2070, %52
  %2082 = icmp ult i32 %2081, %11
  %2083 = select i1 %2082, ptr %14, ptr %9
  %2084 = getelementptr i8, ptr %2083, i32 %2081
  %2085 = sub i32 %32, %2081
  %2086 = icmp ugt i32 %2085, 2
  %2087 = icmp ugt i32 %2081, %2080
  %2088 = and i1 %2086, %2087
  br i1 %2088, label %2089, label %2234

2089:                                             ; preds = %2072
  %2090 = load i32, ptr %2069, align 1
  %2091 = load i32, ptr %2084, align 1
  %2092 = icmp eq i32 %2090, %2091
  br i1 %2092, label %2093, label %2234

2093:                                             ; preds = %2089
  %2094 = select i1 %2082, ptr %15, ptr %6
  %2095 = getelementptr i8, ptr %1042, i32 6
  %2096 = getelementptr i8, ptr %2084, i32 4
  %2097 = ptrtoint ptr %2094 to i32
  %2098 = ptrtoint ptr %2096 to i32
  %2099 = sub i32 %2097, %2098
  %2100 = getelementptr i8, ptr %2095, i32 %2099
  %2101 = icmp ult ptr %2100, %6
  %2102 = select i1 %2101, ptr %2100, ptr %6
  %2103 = getelementptr i8, ptr %2102, i32 -3
  %2104 = icmp ugt ptr %2103, %2095
  br i1 %2104, label %2105, label %2131

2105:                                             ; preds = %2093
  %2106 = load i32, ptr %2096, align 1
  %2107 = load i32, ptr %2095, align 1
  %2108 = xor i32 %2107, %2106
  %2109 = icmp eq i32 %2108, 0
  br i1 %2109, label %2113, label %2110

2110:                                             ; preds = %2105
  %2111 = tail call i32 @llvm.cttz.i32(i32 %2108, i1 true) #7, !range !8
  %2112 = lshr i32 %2111, 3
  br label %2158

2113:                                             ; preds = %2119, %2105
  %2114 = phi ptr [ %2117, %2119 ], [ %2095, %2105 ]
  %2115 = phi ptr [ %2116, %2119 ], [ %2096, %2105 ]
  %2116 = getelementptr i8, ptr %2115, i32 4
  %2117 = getelementptr i8, ptr %2114, i32 4
  %2118 = icmp ult ptr %2117, %2103
  br i1 %2118, label %2119, label %2131

2119:                                             ; preds = %2113
  %2120 = load i32, ptr %2116, align 1
  %2121 = load i32, ptr %2117, align 1
  %2122 = xor i32 %2121, %2120
  %2123 = icmp eq i32 %2122, 0
  br i1 %2123, label %2113, label %2124

2124:                                             ; preds = %2119
  %2125 = tail call i32 @llvm.cttz.i32(i32 %2122, i1 true) #7, !range !8
  %2126 = lshr i32 %2125, 3
  %2127 = getelementptr i8, ptr %2117, i32 %2126
  %2128 = ptrtoint ptr %2127 to i32
  %2129 = ptrtoint ptr %2095 to i32
  %2130 = sub i32 %2128, %2129
  br label %2158

2131:                                             ; preds = %2113, %2093
  %2132 = phi ptr [ %2095, %2093 ], [ %2117, %2113 ]
  %2133 = phi ptr [ %2096, %2093 ], [ %2116, %2113 ]
  %2134 = getelementptr i8, ptr %2102, i32 -1
  %2135 = icmp ult ptr %2132, %2134
  br i1 %2135, label %2136, label %2143

2136:                                             ; preds = %2131
  %2137 = load i16, ptr %2133, align 1
  %2138 = load i16, ptr %2132, align 1
  %2139 = icmp eq i16 %2137, %2138
  br i1 %2139, label %2140, label %2143

2140:                                             ; preds = %2136
  %2141 = getelementptr i8, ptr %2132, i32 2
  %2142 = getelementptr i8, ptr %2133, i32 2
  br label %2143

2143:                                             ; preds = %2140, %2136, %2131
  %2144 = phi ptr [ %2141, %2140 ], [ %2132, %2136 ], [ %2132, %2131 ]
  %2145 = phi ptr [ %2142, %2140 ], [ %2133, %2136 ], [ %2133, %2131 ]
  %2146 = icmp ult ptr %2144, %2102
  br i1 %2146, label %2147, label %2153

2147:                                             ; preds = %2143
  %2148 = load i8, ptr %2145, align 1
  %2149 = load i8, ptr %2144, align 1
  %2150 = icmp eq i8 %2148, %2149
  %2151 = zext i1 %2150 to i32
  %2152 = getelementptr i8, ptr %2144, i32 %2151
  br label %2153

2153:                                             ; preds = %2147, %2143
  %2154 = phi ptr [ %2144, %2143 ], [ %2152, %2147 ]
  %2155 = ptrtoint ptr %2154 to i32
  %2156 = ptrtoint ptr %2095 to i32
  %2157 = sub i32 %2155, %2156
  br label %2158

2158:                                             ; preds = %2153, %2124, %2110
  %2159 = phi i32 [ %2157, %2153 ], [ %2112, %2110 ], [ %2130, %2124 ]
  %2160 = getelementptr i8, ptr %2096, i32 %2159
  %2161 = icmp eq ptr %2160, %2094
  br i1 %2161, label %2162, label %2220

2162:                                             ; preds = %2158
  %2163 = getelementptr i8, ptr %2095, i32 %2159
  %2164 = icmp ugt ptr %33, %2163
  br i1 %2164, label %2165, label %2191

2165:                                             ; preds = %2162
  %2166 = load i32, ptr %12, align 1
  %2167 = load i32, ptr %2163, align 1
  %2168 = xor i32 %2167, %2166
  %2169 = icmp eq i32 %2168, 0
  br i1 %2169, label %2173, label %2170

2170:                                             ; preds = %2165
  %2171 = tail call i32 @llvm.cttz.i32(i32 %2168, i1 true) #7, !range !8
  %2172 = lshr i32 %2171, 3
  br label %2217

2173:                                             ; preds = %2179, %2165
  %2174 = phi ptr [ %2177, %2179 ], [ %2163, %2165 ]
  %2175 = phi ptr [ %2176, %2179 ], [ %12, %2165 ]
  %2176 = getelementptr i8, ptr %2175, i32 4
  %2177 = getelementptr i8, ptr %2174, i32 4
  %2178 = icmp ult ptr %2177, %33
  br i1 %2178, label %2179, label %2191

2179:                                             ; preds = %2173
  %2180 = load i32, ptr %2176, align 1
  %2181 = load i32, ptr %2177, align 1
  %2182 = xor i32 %2181, %2180
  %2183 = icmp eq i32 %2182, 0
  br i1 %2183, label %2173, label %2184

2184:                                             ; preds = %2179
  %2185 = tail call i32 @llvm.cttz.i32(i32 %2182, i1 true) #7, !range !8
  %2186 = lshr i32 %2185, 3
  %2187 = getelementptr i8, ptr %2177, i32 %2186
  %2188 = ptrtoint ptr %2187 to i32
  %2189 = ptrtoint ptr %2163 to i32
  %2190 = sub i32 %2188, %2189
  br label %2217

2191:                                             ; preds = %2173, %2162
  %2192 = phi ptr [ %2163, %2162 ], [ %2177, %2173 ]
  %2193 = phi ptr [ %12, %2162 ], [ %2176, %2173 ]
  %2194 = icmp ult ptr %2192, %34
  br i1 %2194, label %2195, label %2202

2195:                                             ; preds = %2191
  %2196 = load i16, ptr %2193, align 1
  %2197 = load i16, ptr %2192, align 1
  %2198 = icmp eq i16 %2196, %2197
  br i1 %2198, label %2199, label %2202

2199:                                             ; preds = %2195
  %2200 = getelementptr i8, ptr %2192, i32 2
  %2201 = getelementptr i8, ptr %2193, i32 2
  br label %2202

2202:                                             ; preds = %2199, %2195, %2191
  %2203 = phi ptr [ %2200, %2199 ], [ %2192, %2195 ], [ %2192, %2191 ]
  %2204 = phi ptr [ %2201, %2199 ], [ %2193, %2195 ], [ %2193, %2191 ]
  %2205 = icmp ult ptr %2203, %6
  br i1 %2205, label %2206, label %2212

2206:                                             ; preds = %2202
  %2207 = load i8, ptr %2204, align 1
  %2208 = load i8, ptr %2203, align 1
  %2209 = icmp eq i8 %2207, %2208
  %2210 = zext i1 %2209 to i32
  %2211 = getelementptr i8, ptr %2203, i32 %2210
  br label %2212

2212:                                             ; preds = %2206, %2202
  %2213 = phi ptr [ %2203, %2202 ], [ %2211, %2206 ]
  %2214 = ptrtoint ptr %2213 to i32
  %2215 = ptrtoint ptr %2163 to i32
  %2216 = sub i32 %2214, %2215
  br label %2217

2217:                                             ; preds = %2212, %2184, %2170
  %2218 = phi i32 [ %2216, %2212 ], [ %2172, %2170 ], [ %2190, %2184 ]
  %2219 = add i32 %2218, %2159
  br label %2220

2220:                                             ; preds = %2217, %2158
  %2221 = phi i32 [ %2219, %2217 ], [ %2159, %2158 ]
  %2222 = add i32 %2221, 4
  %2223 = icmp ult i32 %2221, -4
  br i1 %2223, label %2224, label %2234

2224:                                             ; preds = %2220
  %2225 = add i32 %1213, 1
  %2226 = tail call i32 @llvm.ctlz.i32(i32 %2225, i1 false) #7, !range !8
  %2227 = xor i32 %2226, -32
  %2228 = shl i32 %1215, 2
  %2229 = add nsw i32 %2227, 2
  %2230 = add i32 %2229, %2228
  %2231 = shl i32 %2222, 2
  %2232 = icmp sgt i32 %2231, %2230
  br i1 %2232, label %2233, label %2234

2233:                                             ; preds = %2224
  br label %2234

2234:                                             ; preds = %2233, %2224, %2220, %2089, %2072, %2068
  %2235 = phi i32 [ 0, %2068 ], [ %1213, %2089 ], [ %1213, %2072 ], [ 0, %2233 ], [ %1213, %2224 ], [ %1213, %2220 ]
  %2236 = phi ptr [ %1214, %2068 ], [ %1214, %2089 ], [ %1214, %2072 ], [ %2069, %2233 ], [ %1214, %2224 ], [ %1214, %2220 ]
  %2237 = phi i32 [ %1215, %2068 ], [ %1215, %2089 ], [ %1215, %2072 ], [ %2222, %2233 ], [ %1215, %2224 ], [ %1215, %2220 ]
  %2238 = load i32, ptr %41, align 4
  switch i32 %2238, label %2239 [
    i32 6, label %2784
    i32 5, label %2507
    i32 7, label %2784
  ]

2239:                                             ; preds = %2234
  %2240 = load ptr, ptr %42, align 4
  %2241 = load i32, ptr %43, align 4
  %2242 = shl nuw i32 1, %2241
  %2243 = add i32 %2242, -1
  %2244 = load ptr, ptr %8, align 4
  %2245 = load ptr, ptr %13, align 4
  %2246 = load i32, ptr %10, align 4
  %2247 = getelementptr i8, ptr %2244, i32 %2246
  %2248 = getelementptr i8, ptr %2245, i32 %2246
  %2249 = ptrtoint ptr %2069 to i32
  %2250 = ptrtoint ptr %2244 to i32
  %2251 = sub i32 %2249, %2250
  %2252 = load i32, ptr %27, align 4
  %2253 = shl nuw i32 1, %2252
  %2254 = load i32, ptr %16, align 4
  %2255 = sub i32 %2251, %2254
  %2256 = icmp ugt i32 %2255, %2253
  %2257 = sub i32 %2251, %2253
  %2258 = load i32, ptr %31, align 4
  %2259 = icmp eq i32 %2258, 0
  %2260 = select i1 %2259, i1 %2256, i1 false
  %2261 = select i1 %2260, i32 %2257, i32 %2254
  %2262 = tail call i32 @llvm.usub.sat.i32(i32 %2251, i32 %2242) #7
  %2263 = load i32, ptr %44, align 4
  %2264 = shl nuw i32 1, %2263
  %2265 = load ptr, ptr %45, align 4
  %2266 = load i32, ptr %46, align 4
  %2267 = shl nsw i32 -1, %2241
  %2268 = xor i32 %2267, -1
  %2269 = icmp ult i32 %2066, %2251
  %2270 = sub i32 32, %2266
  br i1 %2269, label %2271, label %2283

2271:                                             ; preds = %2271, %2239
  %2272 = phi i32 [ %2281, %2271 ], [ %2066, %2239 ]
  %2273 = getelementptr i8, ptr %2244, i32 %2272
  %2274 = load i32, ptr %2273, align 1
  %2275 = mul i32 %2274, -1640531535
  %2276 = lshr i32 %2275, %2270
  %2277 = getelementptr i32, ptr %2265, i32 %2276
  %2278 = load i32, ptr %2277, align 4
  %2279 = and i32 %2272, %2268
  %2280 = getelementptr i32, ptr %2240, i32 %2279
  store i32 %2278, ptr %2280, align 4
  store i32 %2272, ptr %2277, align 4
  %2281 = add nuw i32 %2272, 1
  %2282 = icmp ult i32 %2281, %2251
  br i1 %2282, label %2271, label %2283

2283:                                             ; preds = %2271, %2239
  store i32 %2251, ptr %47, align 4
  %2284 = load i32, ptr %2069, align 1
  %2285 = mul i32 %2284, -1640531535
  %2286 = lshr i32 %2285, %2270
  %2287 = getelementptr i32, ptr %2265, i32 %2286
  %2288 = load i32, ptr %2287, align 4
  %2289 = icmp ult i32 %2288, %2261
  br i1 %2289, label %3080, label %2290

2290:                                             ; preds = %2283
  %2291 = icmp ugt ptr %33, %2069
  %2292 = getelementptr i8, ptr %1042, i32 6
  %2293 = ptrtoint ptr %2248 to i32
  %2294 = ptrtoint ptr %2292 to i32
  %2295 = add i32 %2251, 2
  br label %2296

2296:                                             ; preds = %2499, %2290
  %2297 = phi i32 [ 999999999, %2290 ], [ %2496, %2499 ]
  %2298 = phi i32 [ %2288, %2290 ], [ %2503, %2499 ]
  %2299 = phi i32 [ 3, %2290 ], [ %2497, %2499 ]
  %2300 = phi i32 [ %2264, %2290 ], [ %2502, %2499 ]
  %2301 = icmp ult i32 %2298, %2246
  br i1 %2301, label %2359, label %2302

2302:                                             ; preds = %2296
  %2303 = getelementptr i8, ptr %2244, i32 %2298
  %2304 = getelementptr i8, ptr %2303, i32 %2299
  %2305 = load i8, ptr %2304, align 1
  %2306 = getelementptr i8, ptr %2069, i32 %2299
  %2307 = load i8, ptr %2306, align 1
  %2308 = icmp eq i8 %2305, %2307
  br i1 %2308, label %2309, label %2495

2309:                                             ; preds = %2302
  br i1 %2291, label %2310, label %2334

2310:                                             ; preds = %2309
  %2311 = load i32, ptr %2303, align 1
  %2312 = xor i32 %2311, %2284
  %2313 = icmp eq i32 %2312, 0
  br i1 %2313, label %2317, label %2314

2314:                                             ; preds = %2310
  %2315 = tail call i32 @llvm.cttz.i32(i32 %2312, i1 true) #7, !range !8
  %2316 = lshr i32 %2315, 3
  br label %2488

2317:                                             ; preds = %2323, %2310
  %2318 = phi ptr [ %2321, %2323 ], [ %2069, %2310 ]
  %2319 = phi ptr [ %2320, %2323 ], [ %2303, %2310 ]
  %2320 = getelementptr i8, ptr %2319, i32 4
  %2321 = getelementptr i8, ptr %2318, i32 4
  %2322 = icmp ult ptr %2321, %33
  br i1 %2322, label %2323, label %2334

2323:                                             ; preds = %2317
  %2324 = load i32, ptr %2320, align 1
  %2325 = load i32, ptr %2321, align 1
  %2326 = xor i32 %2325, %2324
  %2327 = icmp eq i32 %2326, 0
  br i1 %2327, label %2317, label %2328

2328:                                             ; preds = %2323
  %2329 = tail call i32 @llvm.cttz.i32(i32 %2326, i1 true) #7, !range !8
  %2330 = lshr i32 %2329, 3
  %2331 = getelementptr i8, ptr %2321, i32 %2330
  %2332 = ptrtoint ptr %2331 to i32
  %2333 = sub i32 %2332, %2249
  br label %2488

2334:                                             ; preds = %2317, %2309
  %2335 = phi ptr [ %2069, %2309 ], [ %2321, %2317 ]
  %2336 = phi ptr [ %2303, %2309 ], [ %2320, %2317 ]
  %2337 = icmp ult ptr %2335, %34
  br i1 %2337, label %2338, label %2345

2338:                                             ; preds = %2334
  %2339 = load i16, ptr %2336, align 1
  %2340 = load i16, ptr %2335, align 1
  %2341 = icmp eq i16 %2339, %2340
  br i1 %2341, label %2342, label %2345

2342:                                             ; preds = %2338
  %2343 = getelementptr i8, ptr %2335, i32 2
  %2344 = getelementptr i8, ptr %2336, i32 2
  br label %2345

2345:                                             ; preds = %2342, %2338, %2334
  %2346 = phi ptr [ %2343, %2342 ], [ %2335, %2338 ], [ %2335, %2334 ]
  %2347 = phi ptr [ %2344, %2342 ], [ %2336, %2338 ], [ %2336, %2334 ]
  %2348 = icmp ult ptr %2346, %6
  br i1 %2348, label %2349, label %2355

2349:                                             ; preds = %2345
  %2350 = load i8, ptr %2347, align 1
  %2351 = load i8, ptr %2346, align 1
  %2352 = icmp eq i8 %2350, %2351
  %2353 = zext i1 %2352 to i32
  %2354 = getelementptr i8, ptr %2346, i32 %2353
  br label %2355

2355:                                             ; preds = %2349, %2345
  %2356 = phi ptr [ %2346, %2345 ], [ %2354, %2349 ]
  %2357 = ptrtoint ptr %2356 to i32
  %2358 = sub i32 %2357, %2249
  br label %2488

2359:                                             ; preds = %2296
  %2360 = getelementptr i8, ptr %2245, i32 %2298
  %2361 = load i32, ptr %2360, align 1
  %2362 = icmp eq i32 %2361, %2284
  br i1 %2362, label %2363, label %2495

2363:                                             ; preds = %2359
  %2364 = getelementptr i8, ptr %2360, i32 4
  %2365 = ptrtoint ptr %2364 to i32
  %2366 = sub i32 %2293, %2365
  %2367 = getelementptr i8, ptr %2292, i32 %2366
  %2368 = icmp ult ptr %2367, %6
  %2369 = select i1 %2368, ptr %2367, ptr %6
  %2370 = getelementptr i8, ptr %2369, i32 -3
  %2371 = icmp ugt ptr %2370, %2292
  br i1 %2371, label %2372, label %2397

2372:                                             ; preds = %2363
  %2373 = load i32, ptr %2364, align 1
  %2374 = load i32, ptr %2292, align 1
  %2375 = xor i32 %2374, %2373
  %2376 = icmp eq i32 %2375, 0
  br i1 %2376, label %2380, label %2377

2377:                                             ; preds = %2372
  %2378 = tail call i32 @llvm.cttz.i32(i32 %2375, i1 true) #7, !range !8
  %2379 = lshr i32 %2378, 3
  br label %2423

2380:                                             ; preds = %2386, %2372
  %2381 = phi ptr [ %2384, %2386 ], [ %2292, %2372 ]
  %2382 = phi ptr [ %2383, %2386 ], [ %2364, %2372 ]
  %2383 = getelementptr i8, ptr %2382, i32 4
  %2384 = getelementptr i8, ptr %2381, i32 4
  %2385 = icmp ult ptr %2384, %2370
  br i1 %2385, label %2386, label %2397

2386:                                             ; preds = %2380
  %2387 = load i32, ptr %2383, align 1
  %2388 = load i32, ptr %2384, align 1
  %2389 = xor i32 %2388, %2387
  %2390 = icmp eq i32 %2389, 0
  br i1 %2390, label %2380, label %2391

2391:                                             ; preds = %2386
  %2392 = tail call i32 @llvm.cttz.i32(i32 %2389, i1 true) #7, !range !8
  %2393 = lshr i32 %2392, 3
  %2394 = getelementptr i8, ptr %2384, i32 %2393
  %2395 = ptrtoint ptr %2394 to i32
  %2396 = sub i32 %2395, %2294
  br label %2423

2397:                                             ; preds = %2380, %2363
  %2398 = phi ptr [ %2292, %2363 ], [ %2384, %2380 ]
  %2399 = phi ptr [ %2364, %2363 ], [ %2383, %2380 ]
  %2400 = getelementptr i8, ptr %2369, i32 -1
  %2401 = icmp ult ptr %2398, %2400
  br i1 %2401, label %2402, label %2409

2402:                                             ; preds = %2397
  %2403 = load i16, ptr %2399, align 1
  %2404 = load i16, ptr %2398, align 1
  %2405 = icmp eq i16 %2403, %2404
  br i1 %2405, label %2406, label %2409

2406:                                             ; preds = %2402
  %2407 = getelementptr i8, ptr %2398, i32 2
  %2408 = getelementptr i8, ptr %2399, i32 2
  br label %2409

2409:                                             ; preds = %2406, %2402, %2397
  %2410 = phi ptr [ %2407, %2406 ], [ %2398, %2402 ], [ %2398, %2397 ]
  %2411 = phi ptr [ %2408, %2406 ], [ %2399, %2402 ], [ %2399, %2397 ]
  %2412 = icmp ult ptr %2410, %2369
  br i1 %2412, label %2413, label %2419

2413:                                             ; preds = %2409
  %2414 = load i8, ptr %2411, align 1
  %2415 = load i8, ptr %2410, align 1
  %2416 = icmp eq i8 %2414, %2415
  %2417 = zext i1 %2416 to i32
  %2418 = getelementptr i8, ptr %2410, i32 %2417
  br label %2419

2419:                                             ; preds = %2413, %2409
  %2420 = phi ptr [ %2410, %2409 ], [ %2418, %2413 ]
  %2421 = ptrtoint ptr %2420 to i32
  %2422 = sub i32 %2421, %2294
  br label %2423

2423:                                             ; preds = %2419, %2391, %2377
  %2424 = phi i32 [ %2422, %2419 ], [ %2379, %2377 ], [ %2396, %2391 ]
  %2425 = getelementptr i8, ptr %2364, i32 %2424
  %2426 = icmp eq ptr %2425, %2248
  br i1 %2426, label %2427, label %2485

2427:                                             ; preds = %2423
  %2428 = getelementptr i8, ptr %2292, i32 %2424
  %2429 = icmp ugt ptr %33, %2428
  br i1 %2429, label %2430, label %2456

2430:                                             ; preds = %2427
  %2431 = load i32, ptr %2247, align 1
  %2432 = load i32, ptr %2428, align 1
  %2433 = xor i32 %2432, %2431
  %2434 = icmp eq i32 %2433, 0
  br i1 %2434, label %2438, label %2435

2435:                                             ; preds = %2430
  %2436 = tail call i32 @llvm.cttz.i32(i32 %2433, i1 true) #7, !range !8
  %2437 = lshr i32 %2436, 3
  br label %2482

2438:                                             ; preds = %2444, %2430
  %2439 = phi ptr [ %2442, %2444 ], [ %2428, %2430 ]
  %2440 = phi ptr [ %2441, %2444 ], [ %2247, %2430 ]
  %2441 = getelementptr i8, ptr %2440, i32 4
  %2442 = getelementptr i8, ptr %2439, i32 4
  %2443 = icmp ult ptr %2442, %33
  br i1 %2443, label %2444, label %2456

2444:                                             ; preds = %2438
  %2445 = load i32, ptr %2441, align 1
  %2446 = load i32, ptr %2442, align 1
  %2447 = xor i32 %2446, %2445
  %2448 = icmp eq i32 %2447, 0
  br i1 %2448, label %2438, label %2449

2449:                                             ; preds = %2444
  %2450 = tail call i32 @llvm.cttz.i32(i32 %2447, i1 true) #7, !range !8
  %2451 = lshr i32 %2450, 3
  %2452 = getelementptr i8, ptr %2442, i32 %2451
  %2453 = ptrtoint ptr %2452 to i32
  %2454 = ptrtoint ptr %2428 to i32
  %2455 = sub i32 %2453, %2454
  br label %2482

2456:                                             ; preds = %2438, %2427
  %2457 = phi ptr [ %2428, %2427 ], [ %2442, %2438 ]
  %2458 = phi ptr [ %2247, %2427 ], [ %2441, %2438 ]
  %2459 = icmp ult ptr %2457, %34
  br i1 %2459, label %2460, label %2467

2460:                                             ; preds = %2456
  %2461 = load i16, ptr %2458, align 1
  %2462 = load i16, ptr %2457, align 1
  %2463 = icmp eq i16 %2461, %2462
  br i1 %2463, label %2464, label %2467

2464:                                             ; preds = %2460
  %2465 = getelementptr i8, ptr %2457, i32 2
  %2466 = getelementptr i8, ptr %2458, i32 2
  br label %2467

2467:                                             ; preds = %2464, %2460, %2456
  %2468 = phi ptr [ %2465, %2464 ], [ %2457, %2460 ], [ %2457, %2456 ]
  %2469 = phi ptr [ %2466, %2464 ], [ %2458, %2460 ], [ %2458, %2456 ]
  %2470 = icmp ult ptr %2468, %6
  br i1 %2470, label %2471, label %2477

2471:                                             ; preds = %2467
  %2472 = load i8, ptr %2469, align 1
  %2473 = load i8, ptr %2468, align 1
  %2474 = icmp eq i8 %2472, %2473
  %2475 = zext i1 %2474 to i32
  %2476 = getelementptr i8, ptr %2468, i32 %2475
  br label %2477

2477:                                             ; preds = %2471, %2467
  %2478 = phi ptr [ %2468, %2467 ], [ %2476, %2471 ]
  %2479 = ptrtoint ptr %2478 to i32
  %2480 = ptrtoint ptr %2428 to i32
  %2481 = sub i32 %2479, %2480
  br label %2482

2482:                                             ; preds = %2477, %2449, %2435
  %2483 = phi i32 [ %2481, %2477 ], [ %2437, %2435 ], [ %2455, %2449 ]
  %2484 = add i32 %2483, %2424
  br label %2485

2485:                                             ; preds = %2482, %2423
  %2486 = phi i32 [ %2484, %2482 ], [ %2424, %2423 ]
  %2487 = add i32 %2486, 4
  br label %2488

2488:                                             ; preds = %2485, %2355, %2328, %2314
  %2489 = phi i32 [ %2487, %2485 ], [ %2358, %2355 ], [ %2316, %2314 ], [ %2333, %2328 ]
  %2490 = icmp ugt i32 %2489, %2299
  br i1 %2490, label %2491, label %2495

2491:                                             ; preds = %2488
  %2492 = sub i32 %2295, %2298
  %2493 = getelementptr i8, ptr %2069, i32 %2489
  %2494 = icmp eq ptr %2493, %6
  br i1 %2494, label %3061, label %2495

2495:                                             ; preds = %2491, %2488, %2359, %2302
  %2496 = phi i32 [ %2492, %2491 ], [ %2297, %2488 ], [ %2297, %2359 ], [ %2297, %2302 ]
  %2497 = phi i32 [ %2489, %2491 ], [ %2299, %2488 ], [ %2299, %2359 ], [ %2299, %2302 ]
  %2498 = icmp ugt i32 %2298, %2262
  br i1 %2498, label %2499, label %3061

2499:                                             ; preds = %2495
  %2500 = and i32 %2298, %2243
  %2501 = getelementptr i32, ptr %2240, i32 %2500
  %2502 = add i32 %2300, -1
  %2503 = load i32, ptr %2501, align 4
  %2504 = icmp uge i32 %2503, %2261
  %2505 = icmp ne i32 %2502, 0
  %2506 = and i1 %2505, %2504
  br i1 %2506, label %2296, label %3061

2507:                                             ; preds = %2234
  %2508 = load ptr, ptr %42, align 4
  %2509 = load i32, ptr %43, align 4
  %2510 = shl nuw i32 1, %2509
  %2511 = add i32 %2510, -1
  %2512 = load ptr, ptr %8, align 4
  %2513 = load ptr, ptr %13, align 4
  %2514 = load i32, ptr %10, align 4
  %2515 = getelementptr i8, ptr %2512, i32 %2514
  %2516 = getelementptr i8, ptr %2513, i32 %2514
  %2517 = ptrtoint ptr %2069 to i32
  %2518 = ptrtoint ptr %2512 to i32
  %2519 = sub i32 %2517, %2518
  %2520 = load i32, ptr %27, align 4
  %2521 = shl nuw i32 1, %2520
  %2522 = load i32, ptr %16, align 4
  %2523 = sub i32 %2519, %2522
  %2524 = icmp ugt i32 %2523, %2521
  %2525 = sub i32 %2519, %2521
  %2526 = load i32, ptr %31, align 4
  %2527 = icmp eq i32 %2526, 0
  %2528 = select i1 %2527, i1 %2524, i1 false
  %2529 = select i1 %2528, i32 %2525, i32 %2522
  %2530 = tail call i32 @llvm.usub.sat.i32(i32 %2519, i32 %2510) #7
  %2531 = load i32, ptr %44, align 4
  %2532 = shl nuw i32 1, %2531
  %2533 = load ptr, ptr %45, align 4
  %2534 = load i32, ptr %46, align 4
  %2535 = shl nsw i32 -1, %2509
  %2536 = xor i32 %2535, -1
  %2537 = icmp ult i32 %2066, %2519
  %2538 = sub i32 64, %2534
  %2539 = zext i32 %2538 to i64
  br i1 %2537, label %2540, label %2553

2540:                                             ; preds = %2540, %2507
  %2541 = phi i32 [ %2551, %2540 ], [ %2066, %2507 ]
  %2542 = getelementptr i8, ptr %2512, i32 %2541
  %2543 = load i64, ptr %2542, align 1
  %2544 = mul i64 %2543, -3523014627271114752
  %2545 = lshr i64 %2544, %2539
  %2546 = trunc i64 %2545 to i32
  %2547 = getelementptr i32, ptr %2533, i32 %2546
  %2548 = load i32, ptr %2547, align 4
  %2549 = and i32 %2541, %2536
  %2550 = getelementptr i32, ptr %2508, i32 %2549
  store i32 %2548, ptr %2550, align 4
  store i32 %2541, ptr %2547, align 4
  %2551 = add nuw i32 %2541, 1
  %2552 = icmp ult i32 %2551, %2519
  br i1 %2552, label %2540, label %2553

2553:                                             ; preds = %2540, %2507
  store i32 %2519, ptr %47, align 4
  %2554 = load i64, ptr %2069, align 1
  %2555 = mul i64 %2554, -3523014627271114752
  %2556 = lshr i64 %2555, %2539
  %2557 = trunc i64 %2556 to i32
  %2558 = getelementptr i32, ptr %2533, i32 %2557
  %2559 = load i32, ptr %2558, align 4
  %2560 = icmp ult i32 %2559, %2529
  %2561 = lshr i64 %2554, 32
  %2562 = trunc i64 %2561 to i32
  br i1 %2560, label %3080, label %2563

2563:                                             ; preds = %2553
  %2564 = trunc i64 %2554 to i32
  %2565 = icmp ugt ptr %33, %2069
  %2566 = getelementptr i8, ptr %1042, i32 6
  %2567 = ptrtoint ptr %2516 to i32
  %2568 = ptrtoint ptr %2566 to i32
  %2569 = add i32 %2519, 2
  br label %2570

2570:                                             ; preds = %2776, %2563
  %2571 = phi i32 [ %2564, %2563 ], [ %2772, %2776 ]
  %2572 = phi i32 [ 999999999, %2563 ], [ %2773, %2776 ]
  %2573 = phi i32 [ %2559, %2563 ], [ %2780, %2776 ]
  %2574 = phi i32 [ 3, %2563 ], [ %2774, %2776 ]
  %2575 = phi i32 [ %2532, %2563 ], [ %2779, %2776 ]
  %2576 = icmp ult i32 %2573, %2514
  br i1 %2576, label %2634, label %2577

2577:                                             ; preds = %2570
  %2578 = getelementptr i8, ptr %2512, i32 %2573
  %2579 = getelementptr i8, ptr %2578, i32 %2574
  %2580 = load i8, ptr %2579, align 1
  %2581 = getelementptr i8, ptr %2069, i32 %2574
  %2582 = load i8, ptr %2581, align 1
  %2583 = icmp eq i8 %2580, %2582
  br i1 %2583, label %2584, label %2771

2584:                                             ; preds = %2577
  br i1 %2565, label %2585, label %2609

2585:                                             ; preds = %2584
  %2586 = load i32, ptr %2578, align 1
  %2587 = xor i32 %2571, %2586
  %2588 = icmp eq i32 %2587, 0
  br i1 %2588, label %2592, label %2589

2589:                                             ; preds = %2585
  %2590 = tail call i32 @llvm.cttz.i32(i32 %2587, i1 true) #7, !range !8
  %2591 = lshr i32 %2590, 3
  br label %2763

2592:                                             ; preds = %2598, %2585
  %2593 = phi ptr [ %2596, %2598 ], [ %2069, %2585 ]
  %2594 = phi ptr [ %2595, %2598 ], [ %2578, %2585 ]
  %2595 = getelementptr i8, ptr %2594, i32 4
  %2596 = getelementptr i8, ptr %2593, i32 4
  %2597 = icmp ult ptr %2596, %33
  br i1 %2597, label %2598, label %2609

2598:                                             ; preds = %2592
  %2599 = load i32, ptr %2595, align 1
  %2600 = load i32, ptr %2596, align 1
  %2601 = xor i32 %2600, %2599
  %2602 = icmp eq i32 %2601, 0
  br i1 %2602, label %2592, label %2603

2603:                                             ; preds = %2598
  %2604 = tail call i32 @llvm.cttz.i32(i32 %2601, i1 true) #7, !range !8
  %2605 = lshr i32 %2604, 3
  %2606 = getelementptr i8, ptr %2596, i32 %2605
  %2607 = ptrtoint ptr %2606 to i32
  %2608 = sub i32 %2607, %2517
  br label %2763

2609:                                             ; preds = %2592, %2584
  %2610 = phi ptr [ %2069, %2584 ], [ %2596, %2592 ]
  %2611 = phi ptr [ %2578, %2584 ], [ %2595, %2592 ]
  %2612 = icmp ult ptr %2610, %34
  br i1 %2612, label %2613, label %2620

2613:                                             ; preds = %2609
  %2614 = load i16, ptr %2611, align 1
  %2615 = load i16, ptr %2610, align 1
  %2616 = icmp eq i16 %2614, %2615
  br i1 %2616, label %2617, label %2620

2617:                                             ; preds = %2613
  %2618 = getelementptr i8, ptr %2610, i32 2
  %2619 = getelementptr i8, ptr %2611, i32 2
  br label %2620

2620:                                             ; preds = %2617, %2613, %2609
  %2621 = phi ptr [ %2618, %2617 ], [ %2610, %2613 ], [ %2610, %2609 ]
  %2622 = phi ptr [ %2619, %2617 ], [ %2611, %2613 ], [ %2611, %2609 ]
  %2623 = icmp ult ptr %2621, %6
  br i1 %2623, label %2624, label %2630

2624:                                             ; preds = %2620
  %2625 = load i8, ptr %2622, align 1
  %2626 = load i8, ptr %2621, align 1
  %2627 = icmp eq i8 %2625, %2626
  %2628 = zext i1 %2627 to i32
  %2629 = getelementptr i8, ptr %2621, i32 %2628
  br label %2630

2630:                                             ; preds = %2624, %2620
  %2631 = phi ptr [ %2621, %2620 ], [ %2629, %2624 ]
  %2632 = ptrtoint ptr %2631 to i32
  %2633 = sub i32 %2632, %2517
  br label %2763

2634:                                             ; preds = %2570
  %2635 = getelementptr i8, ptr %2513, i32 %2573
  %2636 = load i32, ptr %2635, align 1
  %2637 = load i32, ptr %2069, align 1
  %2638 = icmp eq i32 %2636, %2637
  br i1 %2638, label %2639, label %2771

2639:                                             ; preds = %2634
  %2640 = getelementptr i8, ptr %2635, i32 4
  %2641 = ptrtoint ptr %2640 to i32
  %2642 = sub i32 %2567, %2641
  %2643 = getelementptr i8, ptr %2566, i32 %2642
  %2644 = icmp ult ptr %2643, %6
  %2645 = select i1 %2644, ptr %2643, ptr %6
  %2646 = getelementptr i8, ptr %2645, i32 -3
  %2647 = icmp ugt ptr %2646, %2566
  br i1 %2647, label %2648, label %2672

2648:                                             ; preds = %2639
  %2649 = load i32, ptr %2640, align 1
  %2650 = xor i32 %2649, %2562
  %2651 = icmp eq i32 %2650, 0
  br i1 %2651, label %2655, label %2652

2652:                                             ; preds = %2648
  %2653 = tail call i32 @llvm.cttz.i32(i32 %2650, i1 true) #7, !range !8
  %2654 = lshr i32 %2653, 3
  br label %2698

2655:                                             ; preds = %2661, %2648
  %2656 = phi ptr [ %2659, %2661 ], [ %2566, %2648 ]
  %2657 = phi ptr [ %2658, %2661 ], [ %2640, %2648 ]
  %2658 = getelementptr i8, ptr %2657, i32 4
  %2659 = getelementptr i8, ptr %2656, i32 4
  %2660 = icmp ult ptr %2659, %2646
  br i1 %2660, label %2661, label %2672

2661:                                             ; preds = %2655
  %2662 = load i32, ptr %2658, align 1
  %2663 = load i32, ptr %2659, align 1
  %2664 = xor i32 %2663, %2662
  %2665 = icmp eq i32 %2664, 0
  br i1 %2665, label %2655, label %2666

2666:                                             ; preds = %2661
  %2667 = tail call i32 @llvm.cttz.i32(i32 %2664, i1 true) #7, !range !8
  %2668 = lshr i32 %2667, 3
  %2669 = getelementptr i8, ptr %2659, i32 %2668
  %2670 = ptrtoint ptr %2669 to i32
  %2671 = sub i32 %2670, %2568
  br label %2698

2672:                                             ; preds = %2655, %2639
  %2673 = phi ptr [ %2566, %2639 ], [ %2659, %2655 ]
  %2674 = phi ptr [ %2640, %2639 ], [ %2658, %2655 ]
  %2675 = getelementptr i8, ptr %2645, i32 -1
  %2676 = icmp ult ptr %2673, %2675
  br i1 %2676, label %2677, label %2684

2677:                                             ; preds = %2672
  %2678 = load i16, ptr %2674, align 1
  %2679 = load i16, ptr %2673, align 1
  %2680 = icmp eq i16 %2678, %2679
  br i1 %2680, label %2681, label %2684

2681:                                             ; preds = %2677
  %2682 = getelementptr i8, ptr %2673, i32 2
  %2683 = getelementptr i8, ptr %2674, i32 2
  br label %2684

2684:                                             ; preds = %2681, %2677, %2672
  %2685 = phi ptr [ %2682, %2681 ], [ %2673, %2677 ], [ %2673, %2672 ]
  %2686 = phi ptr [ %2683, %2681 ], [ %2674, %2677 ], [ %2674, %2672 ]
  %2687 = icmp ult ptr %2685, %2645
  br i1 %2687, label %2688, label %2694

2688:                                             ; preds = %2684
  %2689 = load i8, ptr %2686, align 1
  %2690 = load i8, ptr %2685, align 1
  %2691 = icmp eq i8 %2689, %2690
  %2692 = zext i1 %2691 to i32
  %2693 = getelementptr i8, ptr %2685, i32 %2692
  br label %2694

2694:                                             ; preds = %2688, %2684
  %2695 = phi ptr [ %2685, %2684 ], [ %2693, %2688 ]
  %2696 = ptrtoint ptr %2695 to i32
  %2697 = sub i32 %2696, %2568
  br label %2698

2698:                                             ; preds = %2694, %2666, %2652
  %2699 = phi i32 [ %2697, %2694 ], [ %2654, %2652 ], [ %2671, %2666 ]
  %2700 = getelementptr i8, ptr %2640, i32 %2699
  %2701 = icmp eq ptr %2700, %2516
  br i1 %2701, label %2702, label %2760

2702:                                             ; preds = %2698
  %2703 = getelementptr i8, ptr %2566, i32 %2699
  %2704 = icmp ugt ptr %33, %2703
  br i1 %2704, label %2705, label %2731

2705:                                             ; preds = %2702
  %2706 = load i32, ptr %2515, align 1
  %2707 = load i32, ptr %2703, align 1
  %2708 = xor i32 %2707, %2706
  %2709 = icmp eq i32 %2708, 0
  br i1 %2709, label %2713, label %2710

2710:                                             ; preds = %2705
  %2711 = tail call i32 @llvm.cttz.i32(i32 %2708, i1 true) #7, !range !8
  %2712 = lshr i32 %2711, 3
  br label %2757

2713:                                             ; preds = %2719, %2705
  %2714 = phi ptr [ %2717, %2719 ], [ %2703, %2705 ]
  %2715 = phi ptr [ %2716, %2719 ], [ %2515, %2705 ]
  %2716 = getelementptr i8, ptr %2715, i32 4
  %2717 = getelementptr i8, ptr %2714, i32 4
  %2718 = icmp ult ptr %2717, %33
  br i1 %2718, label %2719, label %2731

2719:                                             ; preds = %2713
  %2720 = load i32, ptr %2716, align 1
  %2721 = load i32, ptr %2717, align 1
  %2722 = xor i32 %2721, %2720
  %2723 = icmp eq i32 %2722, 0
  br i1 %2723, label %2713, label %2724

2724:                                             ; preds = %2719
  %2725 = tail call i32 @llvm.cttz.i32(i32 %2722, i1 true) #7, !range !8
  %2726 = lshr i32 %2725, 3
  %2727 = getelementptr i8, ptr %2717, i32 %2726
  %2728 = ptrtoint ptr %2727 to i32
  %2729 = ptrtoint ptr %2703 to i32
  %2730 = sub i32 %2728, %2729
  br label %2757

2731:                                             ; preds = %2713, %2702
  %2732 = phi ptr [ %2703, %2702 ], [ %2717, %2713 ]
  %2733 = phi ptr [ %2515, %2702 ], [ %2716, %2713 ]
  %2734 = icmp ult ptr %2732, %34
  br i1 %2734, label %2735, label %2742

2735:                                             ; preds = %2731
  %2736 = load i16, ptr %2733, align 1
  %2737 = load i16, ptr %2732, align 1
  %2738 = icmp eq i16 %2736, %2737
  br i1 %2738, label %2739, label %2742

2739:                                             ; preds = %2735
  %2740 = getelementptr i8, ptr %2732, i32 2
  %2741 = getelementptr i8, ptr %2733, i32 2
  br label %2742

2742:                                             ; preds = %2739, %2735, %2731
  %2743 = phi ptr [ %2740, %2739 ], [ %2732, %2735 ], [ %2732, %2731 ]
  %2744 = phi ptr [ %2741, %2739 ], [ %2733, %2735 ], [ %2733, %2731 ]
  %2745 = icmp ult ptr %2743, %6
  br i1 %2745, label %2746, label %2752

2746:                                             ; preds = %2742
  %2747 = load i8, ptr %2744, align 1
  %2748 = load i8, ptr %2743, align 1
  %2749 = icmp eq i8 %2747, %2748
  %2750 = zext i1 %2749 to i32
  %2751 = getelementptr i8, ptr %2743, i32 %2750
  br label %2752

2752:                                             ; preds = %2746, %2742
  %2753 = phi ptr [ %2743, %2742 ], [ %2751, %2746 ]
  %2754 = ptrtoint ptr %2753 to i32
  %2755 = ptrtoint ptr %2703 to i32
  %2756 = sub i32 %2754, %2755
  br label %2757

2757:                                             ; preds = %2752, %2724, %2710
  %2758 = phi i32 [ %2756, %2752 ], [ %2712, %2710 ], [ %2730, %2724 ]
  %2759 = add i32 %2758, %2699
  br label %2760

2760:                                             ; preds = %2757, %2698
  %2761 = phi i32 [ %2759, %2757 ], [ %2699, %2698 ]
  %2762 = add i32 %2761, 4
  br label %2763

2763:                                             ; preds = %2760, %2630, %2603, %2589
  %2764 = phi i32 [ %2636, %2760 ], [ %2571, %2630 ], [ %2571, %2589 ], [ %2571, %2603 ]
  %2765 = phi i32 [ %2762, %2760 ], [ %2633, %2630 ], [ %2591, %2589 ], [ %2608, %2603 ]
  %2766 = icmp ugt i32 %2765, %2574
  br i1 %2766, label %2767, label %2771

2767:                                             ; preds = %2763
  %2768 = sub i32 %2569, %2573
  %2769 = getelementptr i8, ptr %2069, i32 %2765
  %2770 = icmp eq ptr %2769, %6
  br i1 %2770, label %3061, label %2771

2771:                                             ; preds = %2767, %2763, %2634, %2577
  %2772 = phi i32 [ %2764, %2767 ], [ %2764, %2763 ], [ %2637, %2634 ], [ %2571, %2577 ]
  %2773 = phi i32 [ %2768, %2767 ], [ %2572, %2763 ], [ %2572, %2634 ], [ %2572, %2577 ]
  %2774 = phi i32 [ %2765, %2767 ], [ %2574, %2763 ], [ %2574, %2634 ], [ %2574, %2577 ]
  %2775 = icmp ugt i32 %2573, %2530
  br i1 %2775, label %2776, label %3061

2776:                                             ; preds = %2771
  %2777 = and i32 %2573, %2511
  %2778 = getelementptr i32, ptr %2508, i32 %2777
  %2779 = add i32 %2575, -1
  %2780 = load i32, ptr %2778, align 4
  %2781 = icmp uge i32 %2780, %2529
  %2782 = icmp ne i32 %2779, 0
  %2783 = and i1 %2782, %2781
  br i1 %2783, label %2570, label %3061

2784:                                             ; preds = %2234, %2234
  %2785 = load ptr, ptr %42, align 4
  %2786 = load i32, ptr %43, align 4
  %2787 = shl nuw i32 1, %2786
  %2788 = add i32 %2787, -1
  %2789 = load ptr, ptr %8, align 4
  %2790 = load ptr, ptr %13, align 4
  %2791 = load i32, ptr %10, align 4
  %2792 = getelementptr i8, ptr %2789, i32 %2791
  %2793 = getelementptr i8, ptr %2790, i32 %2791
  %2794 = ptrtoint ptr %2069 to i32
  %2795 = ptrtoint ptr %2789 to i32
  %2796 = sub i32 %2794, %2795
  %2797 = load i32, ptr %27, align 4
  %2798 = shl nuw i32 1, %2797
  %2799 = load i32, ptr %16, align 4
  %2800 = sub i32 %2796, %2799
  %2801 = icmp ugt i32 %2800, %2798
  %2802 = sub i32 %2796, %2798
  %2803 = load i32, ptr %31, align 4
  %2804 = icmp eq i32 %2803, 0
  %2805 = select i1 %2804, i1 %2801, i1 false
  %2806 = select i1 %2805, i32 %2802, i32 %2799
  %2807 = tail call i32 @llvm.usub.sat.i32(i32 %2796, i32 %2787) #7
  %2808 = load i32, ptr %44, align 4
  %2809 = shl nuw i32 1, %2808
  %2810 = load ptr, ptr %45, align 4
  %2811 = load i32, ptr %46, align 4
  %2812 = shl nsw i32 -1, %2786
  %2813 = xor i32 %2812, -1
  %2814 = icmp ult i32 %2066, %2796
  %2815 = sub i32 64, %2811
  %2816 = zext i32 %2815 to i64
  br i1 %2814, label %2817, label %2830

2817:                                             ; preds = %2817, %2784
  %2818 = phi i32 [ %2828, %2817 ], [ %2066, %2784 ]
  %2819 = getelementptr i8, ptr %2789, i32 %2818
  %2820 = load i64, ptr %2819, align 1
  %2821 = mul i64 %2820, -3523014627193847808
  %2822 = lshr i64 %2821, %2816
  %2823 = trunc i64 %2822 to i32
  %2824 = getelementptr i32, ptr %2810, i32 %2823
  %2825 = load i32, ptr %2824, align 4
  %2826 = and i32 %2818, %2813
  %2827 = getelementptr i32, ptr %2785, i32 %2826
  store i32 %2825, ptr %2827, align 4
  store i32 %2818, ptr %2824, align 4
  %2828 = add nuw i32 %2818, 1
  %2829 = icmp ult i32 %2828, %2796
  br i1 %2829, label %2817, label %2830

2830:                                             ; preds = %2817, %2784
  store i32 %2796, ptr %47, align 4
  %2831 = load i64, ptr %2069, align 1
  %2832 = mul i64 %2831, -3523014627193847808
  %2833 = lshr i64 %2832, %2816
  %2834 = trunc i64 %2833 to i32
  %2835 = getelementptr i32, ptr %2810, i32 %2834
  %2836 = load i32, ptr %2835, align 4
  %2837 = icmp ult i32 %2836, %2806
  %2838 = lshr i64 %2831, 32
  %2839 = trunc i64 %2838 to i32
  br i1 %2837, label %3080, label %2840

2840:                                             ; preds = %2830
  %2841 = trunc i64 %2831 to i32
  %2842 = icmp ugt ptr %33, %2069
  %2843 = getelementptr i8, ptr %1042, i32 6
  %2844 = ptrtoint ptr %2793 to i32
  %2845 = ptrtoint ptr %2843 to i32
  %2846 = add i32 %2796, 2
  br label %2847

2847:                                             ; preds = %3053, %2840
  %2848 = phi i32 [ %2841, %2840 ], [ %3049, %3053 ]
  %2849 = phi i32 [ 999999999, %2840 ], [ %3050, %3053 ]
  %2850 = phi i32 [ %2836, %2840 ], [ %3057, %3053 ]
  %2851 = phi i32 [ 3, %2840 ], [ %3051, %3053 ]
  %2852 = phi i32 [ %2809, %2840 ], [ %3056, %3053 ]
  %2853 = icmp ult i32 %2850, %2791
  br i1 %2853, label %2911, label %2854

2854:                                             ; preds = %2847
  %2855 = getelementptr i8, ptr %2789, i32 %2850
  %2856 = getelementptr i8, ptr %2855, i32 %2851
  %2857 = load i8, ptr %2856, align 1
  %2858 = getelementptr i8, ptr %2069, i32 %2851
  %2859 = load i8, ptr %2858, align 1
  %2860 = icmp eq i8 %2857, %2859
  br i1 %2860, label %2861, label %3048

2861:                                             ; preds = %2854
  br i1 %2842, label %2862, label %2886

2862:                                             ; preds = %2861
  %2863 = load i32, ptr %2855, align 1
  %2864 = xor i32 %2848, %2863
  %2865 = icmp eq i32 %2864, 0
  br i1 %2865, label %2869, label %2866

2866:                                             ; preds = %2862
  %2867 = tail call i32 @llvm.cttz.i32(i32 %2864, i1 true) #7, !range !8
  %2868 = lshr i32 %2867, 3
  br label %3040

2869:                                             ; preds = %2875, %2862
  %2870 = phi ptr [ %2873, %2875 ], [ %2069, %2862 ]
  %2871 = phi ptr [ %2872, %2875 ], [ %2855, %2862 ]
  %2872 = getelementptr i8, ptr %2871, i32 4
  %2873 = getelementptr i8, ptr %2870, i32 4
  %2874 = icmp ult ptr %2873, %33
  br i1 %2874, label %2875, label %2886

2875:                                             ; preds = %2869
  %2876 = load i32, ptr %2872, align 1
  %2877 = load i32, ptr %2873, align 1
  %2878 = xor i32 %2877, %2876
  %2879 = icmp eq i32 %2878, 0
  br i1 %2879, label %2869, label %2880

2880:                                             ; preds = %2875
  %2881 = tail call i32 @llvm.cttz.i32(i32 %2878, i1 true) #7, !range !8
  %2882 = lshr i32 %2881, 3
  %2883 = getelementptr i8, ptr %2873, i32 %2882
  %2884 = ptrtoint ptr %2883 to i32
  %2885 = sub i32 %2884, %2794
  br label %3040

2886:                                             ; preds = %2869, %2861
  %2887 = phi ptr [ %2069, %2861 ], [ %2873, %2869 ]
  %2888 = phi ptr [ %2855, %2861 ], [ %2872, %2869 ]
  %2889 = icmp ult ptr %2887, %34
  br i1 %2889, label %2890, label %2897

2890:                                             ; preds = %2886
  %2891 = load i16, ptr %2888, align 1
  %2892 = load i16, ptr %2887, align 1
  %2893 = icmp eq i16 %2891, %2892
  br i1 %2893, label %2894, label %2897

2894:                                             ; preds = %2890
  %2895 = getelementptr i8, ptr %2887, i32 2
  %2896 = getelementptr i8, ptr %2888, i32 2
  br label %2897

2897:                                             ; preds = %2894, %2890, %2886
  %2898 = phi ptr [ %2895, %2894 ], [ %2887, %2890 ], [ %2887, %2886 ]
  %2899 = phi ptr [ %2896, %2894 ], [ %2888, %2890 ], [ %2888, %2886 ]
  %2900 = icmp ult ptr %2898, %6
  br i1 %2900, label %2901, label %2907

2901:                                             ; preds = %2897
  %2902 = load i8, ptr %2899, align 1
  %2903 = load i8, ptr %2898, align 1
  %2904 = icmp eq i8 %2902, %2903
  %2905 = zext i1 %2904 to i32
  %2906 = getelementptr i8, ptr %2898, i32 %2905
  br label %2907

2907:                                             ; preds = %2901, %2897
  %2908 = phi ptr [ %2898, %2897 ], [ %2906, %2901 ]
  %2909 = ptrtoint ptr %2908 to i32
  %2910 = sub i32 %2909, %2794
  br label %3040

2911:                                             ; preds = %2847
  %2912 = getelementptr i8, ptr %2790, i32 %2850
  %2913 = load i32, ptr %2912, align 1
  %2914 = load i32, ptr %2069, align 1
  %2915 = icmp eq i32 %2913, %2914
  br i1 %2915, label %2916, label %3048

2916:                                             ; preds = %2911
  %2917 = getelementptr i8, ptr %2912, i32 4
  %2918 = ptrtoint ptr %2917 to i32
  %2919 = sub i32 %2844, %2918
  %2920 = getelementptr i8, ptr %2843, i32 %2919
  %2921 = icmp ult ptr %2920, %6
  %2922 = select i1 %2921, ptr %2920, ptr %6
  %2923 = getelementptr i8, ptr %2922, i32 -3
  %2924 = icmp ugt ptr %2923, %2843
  br i1 %2924, label %2925, label %2949

2925:                                             ; preds = %2916
  %2926 = load i32, ptr %2917, align 1
  %2927 = xor i32 %2926, %2839
  %2928 = icmp eq i32 %2927, 0
  br i1 %2928, label %2932, label %2929

2929:                                             ; preds = %2925
  %2930 = tail call i32 @llvm.cttz.i32(i32 %2927, i1 true) #7, !range !8
  %2931 = lshr i32 %2930, 3
  br label %2975

2932:                                             ; preds = %2938, %2925
  %2933 = phi ptr [ %2936, %2938 ], [ %2843, %2925 ]
  %2934 = phi ptr [ %2935, %2938 ], [ %2917, %2925 ]
  %2935 = getelementptr i8, ptr %2934, i32 4
  %2936 = getelementptr i8, ptr %2933, i32 4
  %2937 = icmp ult ptr %2936, %2923
  br i1 %2937, label %2938, label %2949

2938:                                             ; preds = %2932
  %2939 = load i32, ptr %2935, align 1
  %2940 = load i32, ptr %2936, align 1
  %2941 = xor i32 %2940, %2939
  %2942 = icmp eq i32 %2941, 0
  br i1 %2942, label %2932, label %2943

2943:                                             ; preds = %2938
  %2944 = tail call i32 @llvm.cttz.i32(i32 %2941, i1 true) #7, !range !8
  %2945 = lshr i32 %2944, 3
  %2946 = getelementptr i8, ptr %2936, i32 %2945
  %2947 = ptrtoint ptr %2946 to i32
  %2948 = sub i32 %2947, %2845
  br label %2975

2949:                                             ; preds = %2932, %2916
  %2950 = phi ptr [ %2843, %2916 ], [ %2936, %2932 ]
  %2951 = phi ptr [ %2917, %2916 ], [ %2935, %2932 ]
  %2952 = getelementptr i8, ptr %2922, i32 -1
  %2953 = icmp ult ptr %2950, %2952
  br i1 %2953, label %2954, label %2961

2954:                                             ; preds = %2949
  %2955 = load i16, ptr %2951, align 1
  %2956 = load i16, ptr %2950, align 1
  %2957 = icmp eq i16 %2955, %2956
  br i1 %2957, label %2958, label %2961

2958:                                             ; preds = %2954
  %2959 = getelementptr i8, ptr %2950, i32 2
  %2960 = getelementptr i8, ptr %2951, i32 2
  br label %2961

2961:                                             ; preds = %2958, %2954, %2949
  %2962 = phi ptr [ %2959, %2958 ], [ %2950, %2954 ], [ %2950, %2949 ]
  %2963 = phi ptr [ %2960, %2958 ], [ %2951, %2954 ], [ %2951, %2949 ]
  %2964 = icmp ult ptr %2962, %2922
  br i1 %2964, label %2965, label %2971

2965:                                             ; preds = %2961
  %2966 = load i8, ptr %2963, align 1
  %2967 = load i8, ptr %2962, align 1
  %2968 = icmp eq i8 %2966, %2967
  %2969 = zext i1 %2968 to i32
  %2970 = getelementptr i8, ptr %2962, i32 %2969
  br label %2971

2971:                                             ; preds = %2965, %2961
  %2972 = phi ptr [ %2962, %2961 ], [ %2970, %2965 ]
  %2973 = ptrtoint ptr %2972 to i32
  %2974 = sub i32 %2973, %2845
  br label %2975

2975:                                             ; preds = %2971, %2943, %2929
  %2976 = phi i32 [ %2974, %2971 ], [ %2931, %2929 ], [ %2948, %2943 ]
  %2977 = getelementptr i8, ptr %2917, i32 %2976
  %2978 = icmp eq ptr %2977, %2793
  br i1 %2978, label %2979, label %3037

2979:                                             ; preds = %2975
  %2980 = getelementptr i8, ptr %2843, i32 %2976
  %2981 = icmp ugt ptr %33, %2980
  br i1 %2981, label %2982, label %3008

2982:                                             ; preds = %2979
  %2983 = load i32, ptr %2792, align 1
  %2984 = load i32, ptr %2980, align 1
  %2985 = xor i32 %2984, %2983
  %2986 = icmp eq i32 %2985, 0
  br i1 %2986, label %2990, label %2987

2987:                                             ; preds = %2982
  %2988 = tail call i32 @llvm.cttz.i32(i32 %2985, i1 true) #7, !range !8
  %2989 = lshr i32 %2988, 3
  br label %3034

2990:                                             ; preds = %2996, %2982
  %2991 = phi ptr [ %2994, %2996 ], [ %2980, %2982 ]
  %2992 = phi ptr [ %2993, %2996 ], [ %2792, %2982 ]
  %2993 = getelementptr i8, ptr %2992, i32 4
  %2994 = getelementptr i8, ptr %2991, i32 4
  %2995 = icmp ult ptr %2994, %33
  br i1 %2995, label %2996, label %3008

2996:                                             ; preds = %2990
  %2997 = load i32, ptr %2993, align 1
  %2998 = load i32, ptr %2994, align 1
  %2999 = xor i32 %2998, %2997
  %3000 = icmp eq i32 %2999, 0
  br i1 %3000, label %2990, label %3001

3001:                                             ; preds = %2996
  %3002 = tail call i32 @llvm.cttz.i32(i32 %2999, i1 true) #7, !range !8
  %3003 = lshr i32 %3002, 3
  %3004 = getelementptr i8, ptr %2994, i32 %3003
  %3005 = ptrtoint ptr %3004 to i32
  %3006 = ptrtoint ptr %2980 to i32
  %3007 = sub i32 %3005, %3006
  br label %3034

3008:                                             ; preds = %2990, %2979
  %3009 = phi ptr [ %2980, %2979 ], [ %2994, %2990 ]
  %3010 = phi ptr [ %2792, %2979 ], [ %2993, %2990 ]
  %3011 = icmp ult ptr %3009, %34
  br i1 %3011, label %3012, label %3019

3012:                                             ; preds = %3008
  %3013 = load i16, ptr %3010, align 1
  %3014 = load i16, ptr %3009, align 1
  %3015 = icmp eq i16 %3013, %3014
  br i1 %3015, label %3016, label %3019

3016:                                             ; preds = %3012
  %3017 = getelementptr i8, ptr %3009, i32 2
  %3018 = getelementptr i8, ptr %3010, i32 2
  br label %3019

3019:                                             ; preds = %3016, %3012, %3008
  %3020 = phi ptr [ %3017, %3016 ], [ %3009, %3012 ], [ %3009, %3008 ]
  %3021 = phi ptr [ %3018, %3016 ], [ %3010, %3012 ], [ %3010, %3008 ]
  %3022 = icmp ult ptr %3020, %6
  br i1 %3022, label %3023, label %3029

3023:                                             ; preds = %3019
  %3024 = load i8, ptr %3021, align 1
  %3025 = load i8, ptr %3020, align 1
  %3026 = icmp eq i8 %3024, %3025
  %3027 = zext i1 %3026 to i32
  %3028 = getelementptr i8, ptr %3020, i32 %3027
  br label %3029

3029:                                             ; preds = %3023, %3019
  %3030 = phi ptr [ %3020, %3019 ], [ %3028, %3023 ]
  %3031 = ptrtoint ptr %3030 to i32
  %3032 = ptrtoint ptr %2980 to i32
  %3033 = sub i32 %3031, %3032
  br label %3034

3034:                                             ; preds = %3029, %3001, %2987
  %3035 = phi i32 [ %3033, %3029 ], [ %2989, %2987 ], [ %3007, %3001 ]
  %3036 = add i32 %3035, %2976
  br label %3037

3037:                                             ; preds = %3034, %2975
  %3038 = phi i32 [ %3036, %3034 ], [ %2976, %2975 ]
  %3039 = add i32 %3038, 4
  br label %3040

3040:                                             ; preds = %3037, %2907, %2880, %2866
  %3041 = phi i32 [ %2913, %3037 ], [ %2848, %2907 ], [ %2848, %2866 ], [ %2848, %2880 ]
  %3042 = phi i32 [ %3039, %3037 ], [ %2910, %2907 ], [ %2868, %2866 ], [ %2885, %2880 ]
  %3043 = icmp ugt i32 %3042, %2851
  br i1 %3043, label %3044, label %3048

3044:                                             ; preds = %3040
  %3045 = sub i32 %2846, %2850
  %3046 = getelementptr i8, ptr %2069, i32 %3042
  %3047 = icmp eq ptr %3046, %6
  br i1 %3047, label %3061, label %3048

3048:                                             ; preds = %3044, %3040, %2911, %2854
  %3049 = phi i32 [ %3041, %3044 ], [ %3041, %3040 ], [ %2914, %2911 ], [ %2848, %2854 ]
  %3050 = phi i32 [ %3045, %3044 ], [ %2849, %3040 ], [ %2849, %2911 ], [ %2849, %2854 ]
  %3051 = phi i32 [ %3042, %3044 ], [ %2851, %3040 ], [ %2851, %2911 ], [ %2851, %2854 ]
  %3052 = icmp ugt i32 %2850, %2807
  br i1 %3052, label %3053, label %3061

3053:                                             ; preds = %3048
  %3054 = and i32 %2850, %2788
  %3055 = getelementptr i32, ptr %2785, i32 %3054
  %3056 = add i32 %2852, -1
  %3057 = load i32, ptr %3055, align 4
  %3058 = icmp uge i32 %3057, %2806
  %3059 = icmp ne i32 %3056, 0
  %3060 = and i1 %3059, %3058
  br i1 %3060, label %2847, label %3061

3061:                                             ; preds = %3053, %3048, %3044, %2776, %2771, %2767, %2499, %2495, %2491
  %3062 = phi i32 [ %2251, %2499 ], [ %2251, %2495 ], [ %2251, %2491 ], [ %2796, %3053 ], [ %2796, %3048 ], [ %2796, %3044 ], [ %2519, %2776 ], [ %2519, %2771 ], [ %2519, %2767 ]
  %3063 = phi i32 [ %2492, %2491 ], [ %2496, %2495 ], [ %2496, %2499 ], [ %3045, %3044 ], [ %3050, %3048 ], [ %3050, %3053 ], [ %2768, %2767 ], [ %2773, %2771 ], [ %2773, %2776 ]
  %3064 = phi i32 [ %2489, %2491 ], [ %2497, %2495 ], [ %2497, %2499 ], [ %3042, %3044 ], [ %3051, %3048 ], [ %3051, %3053 ], [ %2765, %2767 ], [ %2774, %2771 ], [ %2774, %2776 ]
  %3065 = icmp ugt i32 %3064, 3
  br i1 %3065, label %3066, label %3080

3066:                                             ; preds = %3061
  %3067 = add i32 %2235, 1
  %3068 = tail call i32 @llvm.ctlz.i32(i32 %3067, i1 false) #7, !range !8
  %3069 = xor i32 %3068, -32
  %3070 = add i32 %3063, 1
  %3071 = tail call i32 @llvm.ctlz.i32(i32 %3070, i1 false) #7, !range !8
  %3072 = xor i32 %3071, -32
  %3073 = shl i32 %2237, 2
  %3074 = add nsw i32 %3069, 8
  %3075 = add i32 %3074, %3073
  %3076 = shl i32 %3064, 2
  %3077 = or i32 %3076, 1
  %3078 = add i32 %3077, %3072
  %3079 = icmp sgt i32 %3078, %3075
  br i1 %3079, label %2058, label %3080

3080:                                             ; preds = %3066, %3061, %2830, %2553, %2283, %2065, %2058, %1035
  %3081 = phi i32 [ %1038, %1035 ], [ %2235, %2830 ], [ %2235, %2553 ], [ %2235, %2283 ], [ %2235, %3061 ], [ %2235, %3066 ], [ %2060, %2058 ], [ %1213, %2065 ]
  %3082 = phi ptr [ %1037, %1035 ], [ %2236, %2830 ], [ %2236, %2553 ], [ %2236, %2283 ], [ %2236, %3061 ], [ %2236, %3066 ], [ %2061, %2058 ], [ %1214, %2065 ]
  %3083 = phi i32 [ %1027, %1035 ], [ %2237, %2830 ], [ %2237, %2553 ], [ %2237, %2283 ], [ %2237, %3061 ], [ %2237, %3066 ], [ %2063, %2058 ], [ %1215, %2065 ]
  %3084 = icmp eq i32 %3081, 0
  br i1 %3084, label %3112, label %3085

3085:                                             ; preds = %3080
  %3086 = ptrtoint ptr %3082 to i32
  %3087 = add i32 %3081, -2
  %3088 = add i32 %3081, %29
  %3089 = sub i32 2, %3088
  %3090 = add i32 %3089, %3086
  %3091 = icmp ult i32 %3090, %11
  %3092 = select i1 %3091, ptr %14, ptr %9
  %3093 = getelementptr i8, ptr %3092, i32 %3090
  %3094 = select i1 %3091, ptr %18, ptr %12
  %3095 = icmp ugt ptr %3082, %51
  %3096 = icmp ugt ptr %3093, %3094
  %3097 = select i1 %3095, i1 %3096, i1 false
  br i1 %3097, label %3098, label %3112

3098:                                             ; preds = %3107, %3085
  %3099 = phi ptr [ %3104, %3107 ], [ %3093, %3085 ]
  %3100 = phi i32 [ %3108, %3107 ], [ %3083, %3085 ]
  %3101 = phi ptr [ %3102, %3107 ], [ %3082, %3085 ]
  %3102 = getelementptr i8, ptr %3101, i32 -1
  %3103 = load i8, ptr %3102, align 1
  %3104 = getelementptr i8, ptr %3099, i32 -1
  %3105 = load i8, ptr %3104, align 1
  %3106 = icmp eq i8 %3103, %3105
  br i1 %3106, label %3107, label %3112

3107:                                             ; preds = %3098
  %3108 = add i32 %3100, 1
  %3109 = icmp ugt ptr %3102, %51
  %3110 = icmp ugt ptr %3104, %3094
  %3111 = select i1 %3109, i1 %3110, i1 false
  br i1 %3111, label %3098, label %3112

3112:                                             ; preds = %3107, %3098, %3085, %3080
  %3113 = phi ptr [ %3082, %3080 ], [ %3082, %3085 ], [ %3102, %3107 ], [ %3101, %3098 ]
  %3114 = phi i32 [ %3083, %3080 ], [ %3083, %3085 ], [ %3108, %3107 ], [ %3100, %3098 ]
  %3115 = phi i32 [ %53, %3080 ], [ %52, %3085 ], [ %52, %3098 ], [ %52, %3107 ]
  %3116 = phi i32 [ %52, %3080 ], [ %3087, %3085 ], [ %3087, %3098 ], [ %3087, %3107 ]
  %3117 = ptrtoint ptr %3113 to i32
  %3118 = ptrtoint ptr %51 to i32
  %3119 = sub i32 %3117, %3118
  %3120 = add i32 %3114, -3
  %3121 = getelementptr i8, ptr %51, i32 %3119
  %3122 = icmp ugt ptr %3121, %35
  %3123 = load ptr, ptr %36, align 4
  br i1 %3122, label %3145, label %3124

3124:                                             ; preds = %3112
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3123, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %3125 = icmp ugt i32 %3119, 16
  %3126 = load ptr, ptr %36, align 4
  br i1 %3125, label %3129, label %3127

3127:                                             ; preds = %3124
  %3128 = getelementptr i8, ptr %3126, i32 %3119
  store ptr %3128, ptr %36, align 4
  br label %3188

3129:                                             ; preds = %3124
  %3130 = getelementptr i8, ptr %3126, i32 16
  %3131 = getelementptr i8, ptr %51, i32 16
  %3132 = add i32 %3119, -16
  %3133 = getelementptr i8, ptr %3126, i32 %3119
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3130, ptr noundef align 1 dereferenceable(16) %3131, i32 16, i1 false) #7
  %3134 = icmp slt i32 %3132, 17
  br i1 %3134, label %3177, label %3135

3135:                                             ; preds = %3129
  %3136 = getelementptr i8, ptr %3126, i32 32
  br label %3137

3137:                                             ; preds = %3137, %3135
  %3138 = phi ptr [ %3131, %3135 ], [ %3142, %3137 ]
  %3139 = phi ptr [ %3136, %3135 ], [ %3143, %3137 ]
  %3140 = getelementptr i8, ptr %3138, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3139, ptr noundef align 1 dereferenceable(16) %3140, i32 16, i1 false) #7
  %3141 = getelementptr i8, ptr %3139, i32 16
  %3142 = getelementptr i8, ptr %3138, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3141, ptr noundef align 1 dereferenceable(16) %3142, i32 16, i1 false) #7
  %3143 = getelementptr i8, ptr %3139, i32 32
  %3144 = icmp ult ptr %3143, %3133
  br i1 %3144, label %3137, label %3177

3145:                                             ; preds = %3112
  %3146 = ptrtoint ptr %3121 to i32
  %3147 = icmp ult ptr %35, %51
  br i1 %3147, label %3162, label %3148

3148:                                             ; preds = %3145
  %3149 = sub i32 %37, %3118
  %3150 = getelementptr i8, ptr %3123, i32 %3149
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3123, ptr noundef align 1 dereferenceable(16) %51, i32 16, i1 false) #7
  %3151 = icmp slt i32 %3149, 17
  br i1 %3151, label %3162, label %3152

3152:                                             ; preds = %3148
  %3153 = getelementptr i8, ptr %3123, i32 16
  br label %3154

3154:                                             ; preds = %3154, %3152
  %3155 = phi ptr [ %51, %3152 ], [ %3159, %3154 ]
  %3156 = phi ptr [ %3153, %3152 ], [ %3160, %3154 ]
  %3157 = getelementptr i8, ptr %3155, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3156, ptr noundef align 1 dereferenceable(16) %3157, i32 16, i1 false) #7
  %3158 = getelementptr i8, ptr %3156, i32 16
  %3159 = getelementptr i8, ptr %3155, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3158, ptr noundef align 1 dereferenceable(16) %3159, i32 16, i1 false) #7
  %3160 = getelementptr i8, ptr %3156, i32 32
  %3161 = icmp ult ptr %3160, %3150
  br i1 %3161, label %3154, label %3162

3162:                                             ; preds = %3154, %3148, %3145
  %3163 = phi ptr [ %35, %3148 ], [ %51, %3145 ], [ %35, %3154 ]
  %3164 = phi ptr [ %3150, %3148 ], [ %3123, %3145 ], [ %3150, %3154 ]
  %3165 = icmp ult ptr %3163, %3121
  br i1 %3165, label %3166, label %3177

3166:                                             ; preds = %3162
  %3167 = ptrtoint ptr %3163 to i32
  %3168 = sub i32 %3146, %3167
  %3169 = getelementptr i8, ptr %3163, i32 %3168
  br label %3170

3170:                                             ; preds = %3170, %3166
  %3171 = phi ptr [ %3175, %3170 ], [ %3164, %3166 ]
  %3172 = phi ptr [ %3173, %3170 ], [ %3163, %3166 ]
  %3173 = getelementptr i8, ptr %3172, i32 1
  %3174 = load i8, ptr %3172, align 1
  %3175 = getelementptr i8, ptr %3171, i32 1
  store i8 %3174, ptr %3171, align 1
  %3176 = icmp eq ptr %3173, %3169
  br i1 %3176, label %3177, label %3170

3177:                                             ; preds = %3170, %3162, %3137, %3129
  %3178 = load ptr, ptr %36, align 4
  %3179 = getelementptr i8, ptr %3178, i32 %3119
  store ptr %3179, ptr %36, align 4
  %3180 = icmp ugt i32 %3119, 65535
  br i1 %3180, label %3181, label %3188

3181:                                             ; preds = %3177
  store i32 1, ptr %38, align 4
  %3182 = load ptr, ptr %39, align 4
  %3183 = load ptr, ptr %1, align 4
  %3184 = ptrtoint ptr %3182 to i32
  %3185 = ptrtoint ptr %3183 to i32
  %3186 = sub i32 %3184, %3185
  %3187 = ashr exact i32 %3186, 3
  store i32 %3187, ptr %40, align 4
  br label %3188

3188:                                             ; preds = %3181, %3177, %3127
  %3189 = trunc i32 %3119 to i16
  %3190 = load ptr, ptr %39, align 4
  %3191 = getelementptr inbounds %struct.seqDef_s, ptr %3190, i32 0, i32 1
  store i16 %3189, ptr %3191, align 4
  %3192 = add i32 %3081, 1
  %3193 = load ptr, ptr %39, align 4
  store i32 %3192, ptr %3193, align 4
  %3194 = icmp ugt i32 %3120, 65535
  br i1 %3194, label %3197, label %3195

3195:                                             ; preds = %3188
  %3196 = load ptr, ptr %39, align 4
  br label %3204

3197:                                             ; preds = %3188
  store i32 2, ptr %38, align 4
  %3198 = load ptr, ptr %39, align 4
  %3199 = load ptr, ptr %1, align 4
  %3200 = ptrtoint ptr %3198 to i32
  %3201 = ptrtoint ptr %3199 to i32
  %3202 = sub i32 %3200, %3201
  %3203 = ashr exact i32 %3202, 3
  store i32 %3203, ptr %40, align 4
  br label %3204

3204:                                             ; preds = %3197, %3195
  %3205 = phi ptr [ %3196, %3195 ], [ %3198, %3197 ]
  %3206 = trunc i32 %3120 to i16
  %3207 = getelementptr inbounds %struct.seqDef_s, ptr %3205, i32 0, i32 2
  store i16 %3206, ptr %3207, align 2
  %3208 = load ptr, ptr %39, align 4
  %3209 = getelementptr %struct.seqDef_s, ptr %3208, i32 1
  store ptr %3209, ptr %39, align 4
  %3210 = getelementptr i8, ptr %3113, i32 %3114
  %3211 = icmp ugt ptr %3210, %7
  br i1 %3211, label %3396, label %3212

3212:                                             ; preds = %3388, %3204
  %3213 = phi ptr [ %3393, %3388 ], [ %3209, %3204 ]
  %3214 = phi ptr [ %3394, %3388 ], [ %3210, %3204 ]
  %3215 = phi i32 [ %3216, %3388 ], [ %3116, %3204 ]
  %3216 = phi i32 [ %3215, %3388 ], [ %3115, %3204 ]
  %3217 = ptrtoint ptr %3214 to i32
  %3218 = sub i32 %3217, %29
  %3219 = load i32, ptr %16, align 4
  %3220 = sub i32 %3218, %3219
  %3221 = icmp ugt i32 %3220, %30
  %3222 = sub i32 %3218, %30
  %3223 = load i32, ptr %31, align 4
  %3224 = icmp eq i32 %3223, 0
  %3225 = select i1 %3224, i1 %3221, i1 false
  %3226 = select i1 %3225, i32 %3222, i32 %3219
  %3227 = sub i32 %3218, %3216
  %3228 = icmp ult i32 %3227, %11
  %3229 = select i1 %3228, ptr %14, ptr %9
  %3230 = getelementptr i8, ptr %3229, i32 %3227
  %3231 = sub i32 %32, %3227
  %3232 = icmp ugt i32 %3231, 2
  %3233 = icmp ugt i32 %3227, %3226
  %3234 = and i1 %3232, %3233
  br i1 %3234, label %3235, label %3396

3235:                                             ; preds = %3212
  %3236 = load i32, ptr %3214, align 1
  %3237 = load i32, ptr %3230, align 1
  %3238 = icmp eq i32 %3236, %3237
  br i1 %3238, label %3239, label %3396

3239:                                             ; preds = %3235
  %3240 = select i1 %3228, ptr %15, ptr %6
  %3241 = getelementptr i8, ptr %3214, i32 4
  %3242 = getelementptr i8, ptr %3230, i32 4
  %3243 = ptrtoint ptr %3240 to i32
  %3244 = ptrtoint ptr %3242 to i32
  %3245 = sub i32 %3243, %3244
  %3246 = getelementptr i8, ptr %3241, i32 %3245
  %3247 = icmp ult ptr %3246, %6
  %3248 = select i1 %3247, ptr %3246, ptr %6
  %3249 = getelementptr i8, ptr %3248, i32 -3
  %3250 = icmp ugt ptr %3249, %3241
  br i1 %3250, label %3251, label %3277

3251:                                             ; preds = %3239
  %3252 = load i32, ptr %3242, align 1
  %3253 = load i32, ptr %3241, align 1
  %3254 = xor i32 %3253, %3252
  %3255 = icmp eq i32 %3254, 0
  br i1 %3255, label %3259, label %3256

3256:                                             ; preds = %3251
  %3257 = tail call i32 @llvm.cttz.i32(i32 %3254, i1 true) #7, !range !8
  %3258 = lshr i32 %3257, 3
  br label %3304

3259:                                             ; preds = %3265, %3251
  %3260 = phi ptr [ %3263, %3265 ], [ %3241, %3251 ]
  %3261 = phi ptr [ %3262, %3265 ], [ %3242, %3251 ]
  %3262 = getelementptr i8, ptr %3261, i32 4
  %3263 = getelementptr i8, ptr %3260, i32 4
  %3264 = icmp ult ptr %3263, %3249
  br i1 %3264, label %3265, label %3277

3265:                                             ; preds = %3259
  %3266 = load i32, ptr %3262, align 1
  %3267 = load i32, ptr %3263, align 1
  %3268 = xor i32 %3267, %3266
  %3269 = icmp eq i32 %3268, 0
  br i1 %3269, label %3259, label %3270

3270:                                             ; preds = %3265
  %3271 = tail call i32 @llvm.cttz.i32(i32 %3268, i1 true) #7, !range !8
  %3272 = lshr i32 %3271, 3
  %3273 = getelementptr i8, ptr %3263, i32 %3272
  %3274 = ptrtoint ptr %3273 to i32
  %3275 = ptrtoint ptr %3241 to i32
  %3276 = sub i32 %3274, %3275
  br label %3304

3277:                                             ; preds = %3259, %3239
  %3278 = phi ptr [ %3241, %3239 ], [ %3263, %3259 ]
  %3279 = phi ptr [ %3242, %3239 ], [ %3262, %3259 ]
  %3280 = getelementptr i8, ptr %3248, i32 -1
  %3281 = icmp ult ptr %3278, %3280
  br i1 %3281, label %3282, label %3289

3282:                                             ; preds = %3277
  %3283 = load i16, ptr %3279, align 1
  %3284 = load i16, ptr %3278, align 1
  %3285 = icmp eq i16 %3283, %3284
  br i1 %3285, label %3286, label %3289

3286:                                             ; preds = %3282
  %3287 = getelementptr i8, ptr %3278, i32 2
  %3288 = getelementptr i8, ptr %3279, i32 2
  br label %3289

3289:                                             ; preds = %3286, %3282, %3277
  %3290 = phi ptr [ %3287, %3286 ], [ %3278, %3282 ], [ %3278, %3277 ]
  %3291 = phi ptr [ %3288, %3286 ], [ %3279, %3282 ], [ %3279, %3277 ]
  %3292 = icmp ult ptr %3290, %3248
  br i1 %3292, label %3293, label %3299

3293:                                             ; preds = %3289
  %3294 = load i8, ptr %3291, align 1
  %3295 = load i8, ptr %3290, align 1
  %3296 = icmp eq i8 %3294, %3295
  %3297 = zext i1 %3296 to i32
  %3298 = getelementptr i8, ptr %3290, i32 %3297
  br label %3299

3299:                                             ; preds = %3293, %3289
  %3300 = phi ptr [ %3290, %3289 ], [ %3298, %3293 ]
  %3301 = ptrtoint ptr %3300 to i32
  %3302 = ptrtoint ptr %3241 to i32
  %3303 = sub i32 %3301, %3302
  br label %3304

3304:                                             ; preds = %3299, %3270, %3256
  %3305 = phi i32 [ %3303, %3299 ], [ %3258, %3256 ], [ %3276, %3270 ]
  %3306 = getelementptr i8, ptr %3242, i32 %3305
  %3307 = icmp eq ptr %3306, %3240
  br i1 %3307, label %3308, label %3366

3308:                                             ; preds = %3304
  %3309 = getelementptr i8, ptr %3241, i32 %3305
  %3310 = icmp ugt ptr %33, %3309
  br i1 %3310, label %3311, label %3337

3311:                                             ; preds = %3308
  %3312 = load i32, ptr %12, align 1
  %3313 = load i32, ptr %3309, align 1
  %3314 = xor i32 %3313, %3312
  %3315 = icmp eq i32 %3314, 0
  br i1 %3315, label %3319, label %3316

3316:                                             ; preds = %3311
  %3317 = tail call i32 @llvm.cttz.i32(i32 %3314, i1 true) #7, !range !8
  %3318 = lshr i32 %3317, 3
  br label %3363

3319:                                             ; preds = %3325, %3311
  %3320 = phi ptr [ %3323, %3325 ], [ %3309, %3311 ]
  %3321 = phi ptr [ %3322, %3325 ], [ %12, %3311 ]
  %3322 = getelementptr i8, ptr %3321, i32 4
  %3323 = getelementptr i8, ptr %3320, i32 4
  %3324 = icmp ult ptr %3323, %33
  br i1 %3324, label %3325, label %3337

3325:                                             ; preds = %3319
  %3326 = load i32, ptr %3322, align 1
  %3327 = load i32, ptr %3323, align 1
  %3328 = xor i32 %3327, %3326
  %3329 = icmp eq i32 %3328, 0
  br i1 %3329, label %3319, label %3330

3330:                                             ; preds = %3325
  %3331 = tail call i32 @llvm.cttz.i32(i32 %3328, i1 true) #7, !range !8
  %3332 = lshr i32 %3331, 3
  %3333 = getelementptr i8, ptr %3323, i32 %3332
  %3334 = ptrtoint ptr %3333 to i32
  %3335 = ptrtoint ptr %3309 to i32
  %3336 = sub i32 %3334, %3335
  br label %3363

3337:                                             ; preds = %3319, %3308
  %3338 = phi ptr [ %3309, %3308 ], [ %3323, %3319 ]
  %3339 = phi ptr [ %12, %3308 ], [ %3322, %3319 ]
  %3340 = icmp ult ptr %3338, %34
  br i1 %3340, label %3341, label %3348

3341:                                             ; preds = %3337
  %3342 = load i16, ptr %3339, align 1
  %3343 = load i16, ptr %3338, align 1
  %3344 = icmp eq i16 %3342, %3343
  br i1 %3344, label %3345, label %3348

3345:                                             ; preds = %3341
  %3346 = getelementptr i8, ptr %3338, i32 2
  %3347 = getelementptr i8, ptr %3339, i32 2
  br label %3348

3348:                                             ; preds = %3345, %3341, %3337
  %3349 = phi ptr [ %3346, %3345 ], [ %3338, %3341 ], [ %3338, %3337 ]
  %3350 = phi ptr [ %3347, %3345 ], [ %3339, %3341 ], [ %3339, %3337 ]
  %3351 = icmp ult ptr %3349, %6
  br i1 %3351, label %3352, label %3358

3352:                                             ; preds = %3348
  %3353 = load i8, ptr %3350, align 1
  %3354 = load i8, ptr %3349, align 1
  %3355 = icmp eq i8 %3353, %3354
  %3356 = zext i1 %3355 to i32
  %3357 = getelementptr i8, ptr %3349, i32 %3356
  br label %3358

3358:                                             ; preds = %3352, %3348
  %3359 = phi ptr [ %3349, %3348 ], [ %3357, %3352 ]
  %3360 = ptrtoint ptr %3359 to i32
  %3361 = ptrtoint ptr %3309 to i32
  %3362 = sub i32 %3360, %3361
  br label %3363

3363:                                             ; preds = %3358, %3330, %3316
  %3364 = phi i32 [ %3362, %3358 ], [ %3318, %3316 ], [ %3336, %3330 ]
  %3365 = add i32 %3364, %3305
  br label %3366

3366:                                             ; preds = %3363, %3304
  %3367 = phi i32 [ %3365, %3363 ], [ %3305, %3304 ]
  %3368 = add i32 %3367, 4
  %3369 = add i32 %3367, 1
  %3370 = icmp ugt ptr %3214, %35
  br i1 %3370, label %3374, label %3371

3371:                                             ; preds = %3366
  %3372 = load ptr, ptr %36, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %3372, ptr noundef align 1 dereferenceable(16) %3214, i32 16, i1 false) #7
  %3373 = load ptr, ptr %39, align 4
  br label %3374

3374:                                             ; preds = %3371, %3366
  %3375 = phi ptr [ %3213, %3366 ], [ %3373, %3371 ]
  %3376 = getelementptr inbounds %struct.seqDef_s, ptr %3375, i32 0, i32 1
  store i16 0, ptr %3376, align 4
  %3377 = load ptr, ptr %39, align 4
  store i32 1, ptr %3377, align 4
  %3378 = icmp ugt i32 %3369, 65535
  br i1 %3378, label %3381, label %3379

3379:                                             ; preds = %3374
  %3380 = load ptr, ptr %39, align 4
  br label %3388

3381:                                             ; preds = %3374
  store i32 2, ptr %38, align 4
  %3382 = load ptr, ptr %39, align 4
  %3383 = load ptr, ptr %1, align 4
  %3384 = ptrtoint ptr %3382 to i32
  %3385 = ptrtoint ptr %3383 to i32
  %3386 = sub i32 %3384, %3385
  %3387 = ashr exact i32 %3386, 3
  store i32 %3387, ptr %40, align 4
  br label %3388

3388:                                             ; preds = %3381, %3379
  %3389 = phi ptr [ %3380, %3379 ], [ %3382, %3381 ]
  %3390 = trunc i32 %3369 to i16
  %3391 = getelementptr inbounds %struct.seqDef_s, ptr %3389, i32 0, i32 2
  store i16 %3390, ptr %3391, align 2
  %3392 = load ptr, ptr %39, align 4
  %3393 = getelementptr %struct.seqDef_s, ptr %3392, i32 1
  store ptr %3393, ptr %39, align 4
  %3394 = getelementptr i8, ptr %3214, i32 %3368
  %3395 = icmp ugt ptr %3394, %7
  br i1 %3395, label %3396, label %3212

3396:                                             ; preds = %3388, %3235, %3212, %3204, %1029
  %3397 = phi i32 [ %53, %1029 ], [ %3115, %3204 ], [ %3216, %3212 ], [ %3216, %3235 ], [ %3215, %3388 ]
  %3398 = phi i32 [ %52, %1029 ], [ %3116, %3204 ], [ %3215, %3212 ], [ %3215, %3235 ], [ %3216, %3388 ]
  %3399 = phi ptr [ %51, %1029 ], [ %3210, %3204 ], [ %3214, %3212 ], [ %3214, %3235 ], [ %3394, %3388 ]
  %3400 = phi ptr [ %1034, %1029 ], [ %3210, %3204 ], [ %3214, %3212 ], [ %3214, %3235 ], [ %3394, %3388 ]
  %3401 = icmp ult ptr %3400, %7
  br i1 %3401, label %3402, label %3404

3402:                                             ; preds = %3396
  %3403 = load i32, ptr %16, align 4
  br label %48

3404:                                             ; preds = %3396, %5
  %3405 = phi i32 [ %21, %5 ], [ %3397, %3396 ]
  %3406 = phi i32 [ %19, %5 ], [ %3398, %3396 ]
  %3407 = phi ptr [ %3, %5 ], [ %3399, %3396 ]
  store i32 %3406, ptr %2, align 4
  store i32 %3405, ptr %20, align 4
  %3408 = ptrtoint ptr %6 to i32
  %3409 = ptrtoint ptr %3407 to i32
  %3410 = sub i32 %3408, %3409
  ret i32 %3410
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define dso_local i32 @ZSTD_compressBlock_btlazy2_extDict(ptr noundef %0, ptr nocapture noundef %1, ptr nocapture noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr i8, ptr %3, i32 %4
  %10 = getelementptr i8, ptr %9, i32 -8
  %11 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %12 = load ptr, ptr %11, align 4
  %13 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %14 = load i32, ptr %13, align 4
  %15 = getelementptr i8, ptr %12, i32 %14
  %16 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %17 = load ptr, ptr %16, align 4
  %18 = getelementptr i8, ptr %17, i32 %14
  %19 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %20 = load i32, ptr %19, align 4
  %21 = getelementptr i8, ptr %17, i32 %20
  %22 = load i32, ptr %2, align 4
  %23 = getelementptr i32, ptr %2, i32 1
  %24 = load i32, ptr %23, align 4
  %25 = icmp eq ptr %15, %3
  %26 = zext i1 %25 to i32
  %27 = getelementptr i8, ptr %3, i32 %26
  %28 = icmp ult ptr %27, %10
  br i1 %28, label %29, label %934

29:                                               ; preds = %5
  %30 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %31 = load i32, ptr %30, align 4
  %32 = ptrtoint ptr %12 to i32
  %33 = shl nuw i32 1, %31
  %34 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %35 = add i32 %14, -1
  %36 = getelementptr i8, ptr %9, i32 -3
  %37 = getelementptr i8, ptr %9, i32 -1
  %38 = getelementptr i8, ptr %9, i32 -32
  %39 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 3
  %40 = ptrtoint ptr %38 to i32
  %41 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 9
  %42 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 1
  %43 = getelementptr inbounds %struct.seqStore_t, ptr %1, i32 0, i32 10
  br label %44

44:                                               ; preds = %932, %29
  %45 = phi i32 [ %20, %29 ], [ %933, %932 ]
  %46 = phi ptr [ %27, %29 ], [ %930, %932 ]
  %47 = phi ptr [ %3, %29 ], [ %929, %932 ]
  %48 = phi i32 [ %22, %29 ], [ %928, %932 ]
  %49 = phi i32 [ %24, %29 ], [ %927, %932 ]
  %50 = getelementptr i8, ptr %46, i32 1
  %51 = ptrtoint ptr %46 to i32
  %52 = sub i32 %51, %32
  %53 = add i32 %52, 1
  %54 = sub i32 %53, %45
  %55 = icmp ugt i32 %54, %33
  %56 = sub i32 %53, %33
  %57 = load i32, ptr %34, align 4
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i1 %55, i1 false
  %60 = select i1 %59, i32 %56, i32 %45
  %61 = sub i32 %53, %48
  %62 = icmp ult i32 %61, %14
  %63 = select i1 %62, ptr %17, ptr %12
  %64 = getelementptr i8, ptr %63, i32 %61
  %65 = sub i32 %35, %61
  %66 = icmp ugt i32 %65, 2
  %67 = icmp ugt i32 %61, %60
  %68 = and i1 %66, %67
  br i1 %68, label %69, label %203

69:                                               ; preds = %44
  %70 = load i32, ptr %50, align 1
  %71 = load i32, ptr %64, align 1
  %72 = icmp eq i32 %70, %71
  br i1 %72, label %73, label %203

73:                                               ; preds = %69
  %74 = select i1 %62, ptr %18, ptr %9
  %75 = getelementptr i8, ptr %46, i32 5
  %76 = getelementptr i8, ptr %64, i32 4
  %77 = ptrtoint ptr %74 to i32
  %78 = ptrtoint ptr %76 to i32
  %79 = sub i32 %77, %78
  %80 = getelementptr i8, ptr %75, i32 %79
  %81 = icmp ult ptr %80, %9
  %82 = select i1 %81, ptr %80, ptr %9
  %83 = getelementptr i8, ptr %82, i32 -3
  %84 = icmp ugt ptr %83, %75
  br i1 %84, label %85, label %111

85:                                               ; preds = %73
  %86 = load i32, ptr %76, align 1
  %87 = load i32, ptr %75, align 1
  %88 = xor i32 %87, %86
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %85
  %91 = tail call i32 @llvm.cttz.i32(i32 %88, i1 true) #7, !range !8
  %92 = lshr i32 %91, 3
  br label %138

93:                                               ; preds = %99, %85
  %94 = phi ptr [ %97, %99 ], [ %75, %85 ]
  %95 = phi ptr [ %96, %99 ], [ %76, %85 ]
  %96 = getelementptr i8, ptr %95, i32 4
  %97 = getelementptr i8, ptr %94, i32 4
  %98 = icmp ult ptr %97, %83
  br i1 %98, label %99, label %111

99:                                               ; preds = %93
  %100 = load i32, ptr %96, align 1
  %101 = load i32, ptr %97, align 1
  %102 = xor i32 %101, %100
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %93, label %104

104:                                              ; preds = %99
  %105 = tail call i32 @llvm.cttz.i32(i32 %102, i1 true) #7, !range !8
  %106 = lshr i32 %105, 3
  %107 = getelementptr i8, ptr %97, i32 %106
  %108 = ptrtoint ptr %107 to i32
  %109 = ptrtoint ptr %75 to i32
  %110 = sub i32 %108, %109
  br label %138

111:                                              ; preds = %93, %73
  %112 = phi ptr [ %75, %73 ], [ %97, %93 ]
  %113 = phi ptr [ %76, %73 ], [ %96, %93 ]
  %114 = getelementptr i8, ptr %82, i32 -1
  %115 = icmp ult ptr %112, %114
  br i1 %115, label %116, label %123

116:                                              ; preds = %111
  %117 = load i16, ptr %113, align 1
  %118 = load i16, ptr %112, align 1
  %119 = icmp eq i16 %117, %118
  br i1 %119, label %120, label %123

120:                                              ; preds = %116
  %121 = getelementptr i8, ptr %112, i32 2
  %122 = getelementptr i8, ptr %113, i32 2
  br label %123

123:                                              ; preds = %120, %116, %111
  %124 = phi ptr [ %121, %120 ], [ %112, %116 ], [ %112, %111 ]
  %125 = phi ptr [ %122, %120 ], [ %113, %116 ], [ %113, %111 ]
  %126 = icmp ult ptr %124, %82
  br i1 %126, label %127, label %133

127:                                              ; preds = %123
  %128 = load i8, ptr %125, align 1
  %129 = load i8, ptr %124, align 1
  %130 = icmp eq i8 %128, %129
  %131 = zext i1 %130 to i32
  %132 = getelementptr i8, ptr %124, i32 %131
  br label %133

133:                                              ; preds = %127, %123
  %134 = phi ptr [ %124, %123 ], [ %132, %127 ]
  %135 = ptrtoint ptr %134 to i32
  %136 = ptrtoint ptr %75 to i32
  %137 = sub i32 %135, %136
  br label %138

138:                                              ; preds = %133, %104, %90
  %139 = phi i32 [ %137, %133 ], [ %92, %90 ], [ %110, %104 ]
  %140 = getelementptr i8, ptr %76, i32 %139
  %141 = icmp eq ptr %140, %74
  br i1 %141, label %142, label %200

142:                                              ; preds = %138
  %143 = getelementptr i8, ptr %75, i32 %139
  %144 = icmp ugt ptr %36, %143
  br i1 %144, label %145, label %171

145:                                              ; preds = %142
  %146 = load i32, ptr %15, align 1
  %147 = load i32, ptr %143, align 1
  %148 = xor i32 %147, %146
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %145
  %151 = tail call i32 @llvm.cttz.i32(i32 %148, i1 true) #7, !range !8
  %152 = lshr i32 %151, 3
  br label %197

153:                                              ; preds = %159, %145
  %154 = phi ptr [ %157, %159 ], [ %143, %145 ]
  %155 = phi ptr [ %156, %159 ], [ %15, %145 ]
  %156 = getelementptr i8, ptr %155, i32 4
  %157 = getelementptr i8, ptr %154, i32 4
  %158 = icmp ult ptr %157, %36
  br i1 %158, label %159, label %171

159:                                              ; preds = %153
  %160 = load i32, ptr %156, align 1
  %161 = load i32, ptr %157, align 1
  %162 = xor i32 %161, %160
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %153, label %164

164:                                              ; preds = %159
  %165 = tail call i32 @llvm.cttz.i32(i32 %162, i1 true) #7, !range !8
  %166 = lshr i32 %165, 3
  %167 = getelementptr i8, ptr %157, i32 %166
  %168 = ptrtoint ptr %167 to i32
  %169 = ptrtoint ptr %143 to i32
  %170 = sub i32 %168, %169
  br label %197

171:                                              ; preds = %153, %142
  %172 = phi ptr [ %143, %142 ], [ %157, %153 ]
  %173 = phi ptr [ %15, %142 ], [ %156, %153 ]
  %174 = icmp ult ptr %172, %37
  br i1 %174, label %175, label %182

175:                                              ; preds = %171
  %176 = load i16, ptr %173, align 1
  %177 = load i16, ptr %172, align 1
  %178 = icmp eq i16 %176, %177
  br i1 %178, label %179, label %182

179:                                              ; preds = %175
  %180 = getelementptr i8, ptr %172, i32 2
  %181 = getelementptr i8, ptr %173, i32 2
  br label %182

182:                                              ; preds = %179, %175, %171
  %183 = phi ptr [ %180, %179 ], [ %172, %175 ], [ %172, %171 ]
  %184 = phi ptr [ %181, %179 ], [ %173, %175 ], [ %173, %171 ]
  %185 = icmp ult ptr %183, %9
  br i1 %185, label %186, label %192

186:                                              ; preds = %182
  %187 = load i8, ptr %184, align 1
  %188 = load i8, ptr %183, align 1
  %189 = icmp eq i8 %187, %188
  %190 = zext i1 %189 to i32
  %191 = getelementptr i8, ptr %183, i32 %190
  br label %192

192:                                              ; preds = %186, %182
  %193 = phi ptr [ %183, %182 ], [ %191, %186 ]
  %194 = ptrtoint ptr %193 to i32
  %195 = ptrtoint ptr %143 to i32
  %196 = sub i32 %194, %195
  br label %197

197:                                              ; preds = %192, %164, %150
  %198 = phi i32 [ %196, %192 ], [ %152, %150 ], [ %170, %164 ]
  %199 = add i32 %198, %139
  br label %200

200:                                              ; preds = %197, %138
  %201 = phi i32 [ %199, %197 ], [ %139, %138 ]
  %202 = add i32 %201, 4
  br label %203

203:                                              ; preds = %200, %69, %44
  %204 = phi i32 [ %202, %200 ], [ 0, %69 ], [ 0, %44 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #7
  store i32 999999999, ptr %6, align 4
  %205 = call fastcc i32 @ZSTD_BtFindBestMatch_extDict_selectMLS(ptr noundef %0, ptr noundef %46, ptr noundef %9, ptr noundef nonnull %6) #7, !callees !9
  %206 = load i32, ptr %6, align 4
  %207 = tail call i32 @llvm.umax.i32(i32 %205, i32 %204) #7
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #7
  %208 = icmp ult i32 %207, 4
  br i1 %208, label %209, label %215

209:                                              ; preds = %203
  %210 = ptrtoint ptr %47 to i32
  %211 = sub i32 %51, %210
  %212 = ashr i32 %211, 8
  %213 = add nsw i32 %212, 1
  %214 = getelementptr i8, ptr %46, i32 %213
  br label %926

215:                                              ; preds = %203
  %216 = icmp ugt i32 %205, %204
  %217 = select i1 %216, ptr %46, ptr %50
  %218 = select i1 %216, i32 %206, i32 0
  %219 = icmp ult ptr %46, %10
  br i1 %219, label %220, label %610

220:                                              ; preds = %413, %215
  %221 = phi ptr [ %415, %413 ], [ %46, %215 ]
  %222 = phi i32 [ %417, %413 ], [ %207, %215 ]
  %223 = phi i32 [ %416, %413 ], [ %52, %215 ]
  %224 = phi ptr [ %415, %413 ], [ %217, %215 ]
  %225 = phi i32 [ %414, %413 ], [ %218, %215 ]
  %226 = getelementptr i8, ptr %221, i32 1
  %227 = add i32 %223, 1
  %228 = icmp eq i32 %225, 0
  br i1 %228, label %391, label %229

229:                                              ; preds = %220
  %230 = load i32, ptr %19, align 4
  %231 = sub i32 %227, %230
  %232 = icmp ugt i32 %231, %33
  %233 = sub i32 %227, %33
  %234 = load i32, ptr %34, align 4
  %235 = icmp eq i32 %234, 0
  %236 = select i1 %235, i1 %232, i1 false
  %237 = select i1 %236, i32 %233, i32 %230
  %238 = sub i32 %227, %48
  %239 = icmp ult i32 %238, %14
  %240 = select i1 %239, ptr %17, ptr %12
  %241 = getelementptr i8, ptr %240, i32 %238
  %242 = sub i32 %35, %238
  %243 = icmp ugt i32 %242, 2
  %244 = icmp ugt i32 %238, %237
  %245 = and i1 %243, %244
  br i1 %245, label %246, label %391

246:                                              ; preds = %229
  %247 = load i32, ptr %226, align 1
  %248 = load i32, ptr %241, align 1
  %249 = icmp eq i32 %247, %248
  br i1 %249, label %250, label %391

250:                                              ; preds = %246
  %251 = select i1 %239, ptr %18, ptr %9
  %252 = getelementptr i8, ptr %221, i32 5
  %253 = getelementptr i8, ptr %241, i32 4
  %254 = ptrtoint ptr %251 to i32
  %255 = ptrtoint ptr %253 to i32
  %256 = sub i32 %254, %255
  %257 = getelementptr i8, ptr %252, i32 %256
  %258 = icmp ult ptr %257, %9
  %259 = select i1 %258, ptr %257, ptr %9
  %260 = getelementptr i8, ptr %259, i32 -3
  %261 = icmp ugt ptr %260, %252
  br i1 %261, label %262, label %288

262:                                              ; preds = %250
  %263 = load i32, ptr %253, align 1
  %264 = load i32, ptr %252, align 1
  %265 = xor i32 %264, %263
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %270, label %267

267:                                              ; preds = %262
  %268 = tail call i32 @llvm.cttz.i32(i32 %265, i1 true) #7, !range !8
  %269 = lshr i32 %268, 3
  br label %315

270:                                              ; preds = %276, %262
  %271 = phi ptr [ %274, %276 ], [ %252, %262 ]
  %272 = phi ptr [ %273, %276 ], [ %253, %262 ]
  %273 = getelementptr i8, ptr %272, i32 4
  %274 = getelementptr i8, ptr %271, i32 4
  %275 = icmp ult ptr %274, %260
  br i1 %275, label %276, label %288

276:                                              ; preds = %270
  %277 = load i32, ptr %273, align 1
  %278 = load i32, ptr %274, align 1
  %279 = xor i32 %278, %277
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %270, label %281

281:                                              ; preds = %276
  %282 = tail call i32 @llvm.cttz.i32(i32 %279, i1 true) #7, !range !8
  %283 = lshr i32 %282, 3
  %284 = getelementptr i8, ptr %274, i32 %283
  %285 = ptrtoint ptr %284 to i32
  %286 = ptrtoint ptr %252 to i32
  %287 = sub i32 %285, %286
  br label %315

288:                                              ; preds = %270, %250
  %289 = phi ptr [ %252, %250 ], [ %274, %270 ]
  %290 = phi ptr [ %253, %250 ], [ %273, %270 ]
  %291 = getelementptr i8, ptr %259, i32 -1
  %292 = icmp ult ptr %289, %291
  br i1 %292, label %293, label %300

293:                                              ; preds = %288
  %294 = load i16, ptr %290, align 1
  %295 = load i16, ptr %289, align 1
  %296 = icmp eq i16 %294, %295
  br i1 %296, label %297, label %300

297:                                              ; preds = %293
  %298 = getelementptr i8, ptr %289, i32 2
  %299 = getelementptr i8, ptr %290, i32 2
  br label %300

300:                                              ; preds = %297, %293, %288
  %301 = phi ptr [ %298, %297 ], [ %289, %293 ], [ %289, %288 ]
  %302 = phi ptr [ %299, %297 ], [ %290, %293 ], [ %290, %288 ]
  %303 = icmp ult ptr %301, %259
  br i1 %303, label %304, label %310

304:                                              ; preds = %300
  %305 = load i8, ptr %302, align 1
  %306 = load i8, ptr %301, align 1
  %307 = icmp eq i8 %305, %306
  %308 = zext i1 %307 to i32
  %309 = getelementptr i8, ptr %301, i32 %308
  br label %310

310:                                              ; preds = %304, %300
  %311 = phi ptr [ %301, %300 ], [ %309, %304 ]
  %312 = ptrtoint ptr %311 to i32
  %313 = ptrtoint ptr %252 to i32
  %314 = sub i32 %312, %313
  br label %315

315:                                              ; preds = %310, %281, %267
  %316 = phi i32 [ %314, %310 ], [ %269, %267 ], [ %287, %281 ]
  %317 = getelementptr i8, ptr %253, i32 %316
  %318 = icmp eq ptr %317, %251
  br i1 %318, label %319, label %377

319:                                              ; preds = %315
  %320 = getelementptr i8, ptr %252, i32 %316
  %321 = icmp ugt ptr %36, %320
  br i1 %321, label %322, label %348

322:                                              ; preds = %319
  %323 = load i32, ptr %15, align 1
  %324 = load i32, ptr %320, align 1
  %325 = xor i32 %324, %323
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %330, label %327

327:                                              ; preds = %322
  %328 = tail call i32 @llvm.cttz.i32(i32 %325, i1 true) #7, !range !8
  %329 = lshr i32 %328, 3
  br label %374

330:                                              ; preds = %336, %322
  %331 = phi ptr [ %334, %336 ], [ %320, %322 ]
  %332 = phi ptr [ %333, %336 ], [ %15, %322 ]
  %333 = getelementptr i8, ptr %332, i32 4
  %334 = getelementptr i8, ptr %331, i32 4
  %335 = icmp ult ptr %334, %36
  br i1 %335, label %336, label %348

336:                                              ; preds = %330
  %337 = load i32, ptr %333, align 1
  %338 = load i32, ptr %334, align 1
  %339 = xor i32 %338, %337
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %330, label %341

341:                                              ; preds = %336
  %342 = tail call i32 @llvm.cttz.i32(i32 %339, i1 true) #7, !range !8
  %343 = lshr i32 %342, 3
  %344 = getelementptr i8, ptr %334, i32 %343
  %345 = ptrtoint ptr %344 to i32
  %346 = ptrtoint ptr %320 to i32
  %347 = sub i32 %345, %346
  br label %374

348:                                              ; preds = %330, %319
  %349 = phi ptr [ %320, %319 ], [ %334, %330 ]
  %350 = phi ptr [ %15, %319 ], [ %333, %330 ]
  %351 = icmp ult ptr %349, %37
  br i1 %351, label %352, label %359

352:                                              ; preds = %348
  %353 = load i16, ptr %350, align 1
  %354 = load i16, ptr %349, align 1
  %355 = icmp eq i16 %353, %354
  br i1 %355, label %356, label %359

356:                                              ; preds = %352
  %357 = getelementptr i8, ptr %349, i32 2
  %358 = getelementptr i8, ptr %350, i32 2
  br label %359

359:                                              ; preds = %356, %352, %348
  %360 = phi ptr [ %357, %356 ], [ %349, %352 ], [ %349, %348 ]
  %361 = phi ptr [ %358, %356 ], [ %350, %352 ], [ %350, %348 ]
  %362 = icmp ult ptr %360, %9
  br i1 %362, label %363, label %369

363:                                              ; preds = %359
  %364 = load i8, ptr %361, align 1
  %365 = load i8, ptr %360, align 1
  %366 = icmp eq i8 %364, %365
  %367 = zext i1 %366 to i32
  %368 = getelementptr i8, ptr %360, i32 %367
  br label %369

369:                                              ; preds = %363, %359
  %370 = phi ptr [ %360, %359 ], [ %368, %363 ]
  %371 = ptrtoint ptr %370 to i32
  %372 = ptrtoint ptr %320 to i32
  %373 = sub i32 %371, %372
  br label %374

374:                                              ; preds = %369, %341, %327
  %375 = phi i32 [ %373, %369 ], [ %329, %327 ], [ %347, %341 ]
  %376 = add i32 %375, %316
  br label %377

377:                                              ; preds = %374, %315
  %378 = phi i32 [ %376, %374 ], [ %316, %315 ]
  %379 = add i32 %378, 4
  %380 = icmp ult i32 %378, -4
  br i1 %380, label %381, label %391

381:                                              ; preds = %377
  %382 = add i32 %225, 1
  %383 = tail call i32 @llvm.ctlz.i32(i32 %382, i1 false) #7, !range !8
  %384 = xor i32 %383, -32
  %385 = mul i32 %222, 3
  %386 = add i32 %385, 2
  %387 = add i32 %386, %384
  %388 = mul i32 %379, 3
  %389 = icmp sgt i32 %388, %387
  br i1 %389, label %390, label %391

390:                                              ; preds = %381
  br label %391

391:                                              ; preds = %390, %381, %377, %246, %229, %220
  %392 = phi i32 [ 0, %220 ], [ %225, %246 ], [ %225, %229 ], [ 0, %390 ], [ %225, %381 ], [ %225, %377 ]
  %393 = phi ptr [ %224, %220 ], [ %224, %246 ], [ %224, %229 ], [ %226, %390 ], [ %224, %381 ], [ %224, %377 ]
  %394 = phi i32 [ %222, %220 ], [ %222, %246 ], [ %222, %229 ], [ %379, %390 ], [ %222, %381 ], [ %222, %377 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #7
  store i32 999999999, ptr %7, align 4
  %395 = call fastcc i32 @ZSTD_BtFindBestMatch_extDict_selectMLS(ptr noundef %0, ptr noundef %226, ptr noundef %9, ptr noundef nonnull %7) #7, !callees !9
  %396 = load i32, ptr %7, align 4
  %397 = icmp ugt i32 %395, 3
  br i1 %397, label %398, label %419

398:                                              ; preds = %391
  %399 = add i32 %392, 1
  %400 = tail call i32 @llvm.ctlz.i32(i32 %399, i1 false) #7, !range !8
  %401 = xor i32 %400, -32
  %402 = add i32 %396, 1
  %403 = tail call i32 @llvm.ctlz.i32(i32 %402, i1 false) #7, !range !8
  %404 = xor i32 %403, -32
  %405 = shl i32 %394, 2
  %406 = add nsw i32 %401, 5
  %407 = add i32 %406, %405
  %408 = shl i32 %395, 2
  %409 = or i32 %408, 1
  %410 = add i32 %409, %404
  %411 = icmp sgt i32 %410, %407
  br i1 %411, label %412, label %419

412:                                              ; preds = %398
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  br label %413

413:                                              ; preds = %609, %412
  %414 = phi i32 [ %396, %412 ], [ %592, %609 ]
  %415 = phi ptr [ %226, %412 ], [ %422, %609 ]
  %416 = phi i32 [ %227, %412 ], [ %423, %609 ]
  %417 = phi i32 [ %395, %412 ], [ %591, %609 ]
  %418 = icmp ult ptr %415, %10
  br i1 %418, label %220, label %610

419:                                              ; preds = %398, %391
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #7
  %420 = icmp ult ptr %226, %10
  br i1 %420, label %421, label %610

421:                                              ; preds = %419
  %422 = getelementptr i8, ptr %221, i32 2
  %423 = add i32 %223, 2
  %424 = icmp eq i32 %392, 0
  br i1 %424, label %587, label %425

425:                                              ; preds = %421
  %426 = load i32, ptr %19, align 4
  %427 = sub i32 %423, %426
  %428 = icmp ugt i32 %427, %33
  %429 = sub i32 %423, %33
  %430 = load i32, ptr %34, align 4
  %431 = icmp eq i32 %430, 0
  %432 = select i1 %431, i1 %428, i1 false
  %433 = select i1 %432, i32 %429, i32 %426
  %434 = sub i32 %423, %48
  %435 = icmp ult i32 %434, %14
  %436 = select i1 %435, ptr %17, ptr %12
  %437 = getelementptr i8, ptr %436, i32 %434
  %438 = sub i32 %35, %434
  %439 = icmp ugt i32 %438, 2
  %440 = icmp ugt i32 %434, %433
  %441 = and i1 %439, %440
  br i1 %441, label %442, label %587

442:                                              ; preds = %425
  %443 = load i32, ptr %422, align 1
  %444 = load i32, ptr %437, align 1
  %445 = icmp eq i32 %443, %444
  br i1 %445, label %446, label %587

446:                                              ; preds = %442
  %447 = select i1 %435, ptr %18, ptr %9
  %448 = getelementptr i8, ptr %221, i32 6
  %449 = getelementptr i8, ptr %437, i32 4
  %450 = ptrtoint ptr %447 to i32
  %451 = ptrtoint ptr %449 to i32
  %452 = sub i32 %450, %451
  %453 = getelementptr i8, ptr %448, i32 %452
  %454 = icmp ult ptr %453, %9
  %455 = select i1 %454, ptr %453, ptr %9
  %456 = getelementptr i8, ptr %455, i32 -3
  %457 = icmp ugt ptr %456, %448
  br i1 %457, label %458, label %484

458:                                              ; preds = %446
  %459 = load i32, ptr %449, align 1
  %460 = load i32, ptr %448, align 1
  %461 = xor i32 %460, %459
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %466, label %463

463:                                              ; preds = %458
  %464 = tail call i32 @llvm.cttz.i32(i32 %461, i1 true) #7, !range !8
  %465 = lshr i32 %464, 3
  br label %511

466:                                              ; preds = %472, %458
  %467 = phi ptr [ %470, %472 ], [ %448, %458 ]
  %468 = phi ptr [ %469, %472 ], [ %449, %458 ]
  %469 = getelementptr i8, ptr %468, i32 4
  %470 = getelementptr i8, ptr %467, i32 4
  %471 = icmp ult ptr %470, %456
  br i1 %471, label %472, label %484

472:                                              ; preds = %466
  %473 = load i32, ptr %469, align 1
  %474 = load i32, ptr %470, align 1
  %475 = xor i32 %474, %473
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %466, label %477

477:                                              ; preds = %472
  %478 = tail call i32 @llvm.cttz.i32(i32 %475, i1 true) #7, !range !8
  %479 = lshr i32 %478, 3
  %480 = getelementptr i8, ptr %470, i32 %479
  %481 = ptrtoint ptr %480 to i32
  %482 = ptrtoint ptr %448 to i32
  %483 = sub i32 %481, %482
  br label %511

484:                                              ; preds = %466, %446
  %485 = phi ptr [ %448, %446 ], [ %470, %466 ]
  %486 = phi ptr [ %449, %446 ], [ %469, %466 ]
  %487 = getelementptr i8, ptr %455, i32 -1
  %488 = icmp ult ptr %485, %487
  br i1 %488, label %489, label %496

489:                                              ; preds = %484
  %490 = load i16, ptr %486, align 1
  %491 = load i16, ptr %485, align 1
  %492 = icmp eq i16 %490, %491
  br i1 %492, label %493, label %496

493:                                              ; preds = %489
  %494 = getelementptr i8, ptr %485, i32 2
  %495 = getelementptr i8, ptr %486, i32 2
  br label %496

496:                                              ; preds = %493, %489, %484
  %497 = phi ptr [ %494, %493 ], [ %485, %489 ], [ %485, %484 ]
  %498 = phi ptr [ %495, %493 ], [ %486, %489 ], [ %486, %484 ]
  %499 = icmp ult ptr %497, %455
  br i1 %499, label %500, label %506

500:                                              ; preds = %496
  %501 = load i8, ptr %498, align 1
  %502 = load i8, ptr %497, align 1
  %503 = icmp eq i8 %501, %502
  %504 = zext i1 %503 to i32
  %505 = getelementptr i8, ptr %497, i32 %504
  br label %506

506:                                              ; preds = %500, %496
  %507 = phi ptr [ %497, %496 ], [ %505, %500 ]
  %508 = ptrtoint ptr %507 to i32
  %509 = ptrtoint ptr %448 to i32
  %510 = sub i32 %508, %509
  br label %511

511:                                              ; preds = %506, %477, %463
  %512 = phi i32 [ %510, %506 ], [ %465, %463 ], [ %483, %477 ]
  %513 = getelementptr i8, ptr %449, i32 %512
  %514 = icmp eq ptr %513, %447
  br i1 %514, label %515, label %573

515:                                              ; preds = %511
  %516 = getelementptr i8, ptr %448, i32 %512
  %517 = icmp ugt ptr %36, %516
  br i1 %517, label %518, label %544

518:                                              ; preds = %515
  %519 = load i32, ptr %15, align 1
  %520 = load i32, ptr %516, align 1
  %521 = xor i32 %520, %519
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %526, label %523

523:                                              ; preds = %518
  %524 = tail call i32 @llvm.cttz.i32(i32 %521, i1 true) #7, !range !8
  %525 = lshr i32 %524, 3
  br label %570

526:                                              ; preds = %532, %518
  %527 = phi ptr [ %530, %532 ], [ %516, %518 ]
  %528 = phi ptr [ %529, %532 ], [ %15, %518 ]
  %529 = getelementptr i8, ptr %528, i32 4
  %530 = getelementptr i8, ptr %527, i32 4
  %531 = icmp ult ptr %530, %36
  br i1 %531, label %532, label %544

532:                                              ; preds = %526
  %533 = load i32, ptr %529, align 1
  %534 = load i32, ptr %530, align 1
  %535 = xor i32 %534, %533
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %526, label %537

537:                                              ; preds = %532
  %538 = tail call i32 @llvm.cttz.i32(i32 %535, i1 true) #7, !range !8
  %539 = lshr i32 %538, 3
  %540 = getelementptr i8, ptr %530, i32 %539
  %541 = ptrtoint ptr %540 to i32
  %542 = ptrtoint ptr %516 to i32
  %543 = sub i32 %541, %542
  br label %570

544:                                              ; preds = %526, %515
  %545 = phi ptr [ %516, %515 ], [ %530, %526 ]
  %546 = phi ptr [ %15, %515 ], [ %529, %526 ]
  %547 = icmp ult ptr %545, %37
  br i1 %547, label %548, label %555

548:                                              ; preds = %544
  %549 = load i16, ptr %546, align 1
  %550 = load i16, ptr %545, align 1
  %551 = icmp eq i16 %549, %550
  br i1 %551, label %552, label %555

552:                                              ; preds = %548
  %553 = getelementptr i8, ptr %545, i32 2
  %554 = getelementptr i8, ptr %546, i32 2
  br label %555

555:                                              ; preds = %552, %548, %544
  %556 = phi ptr [ %553, %552 ], [ %545, %548 ], [ %545, %544 ]
  %557 = phi ptr [ %554, %552 ], [ %546, %548 ], [ %546, %544 ]
  %558 = icmp ult ptr %556, %9
  br i1 %558, label %559, label %565

559:                                              ; preds = %555
  %560 = load i8, ptr %557, align 1
  %561 = load i8, ptr %556, align 1
  %562 = icmp eq i8 %560, %561
  %563 = zext i1 %562 to i32
  %564 = getelementptr i8, ptr %556, i32 %563
  br label %565

565:                                              ; preds = %559, %555
  %566 = phi ptr [ %556, %555 ], [ %564, %559 ]
  %567 = ptrtoint ptr %566 to i32
  %568 = ptrtoint ptr %516 to i32
  %569 = sub i32 %567, %568
  br label %570

570:                                              ; preds = %565, %537, %523
  %571 = phi i32 [ %569, %565 ], [ %525, %523 ], [ %543, %537 ]
  %572 = add i32 %571, %512
  br label %573

573:                                              ; preds = %570, %511
  %574 = phi i32 [ %572, %570 ], [ %512, %511 ]
  %575 = add i32 %574, 4
  %576 = icmp ult i32 %574, -4
  br i1 %576, label %577, label %587

577:                                              ; preds = %573
  %578 = add i32 %392, 1
  %579 = tail call i32 @llvm.ctlz.i32(i32 %578, i1 false) #7, !range !8
  %580 = xor i32 %579, -32
  %581 = shl i32 %394, 2
  %582 = add nsw i32 %580, 2
  %583 = add i32 %582, %581
  %584 = shl i32 %575, 2
  %585 = icmp sgt i32 %584, %583
  br i1 %585, label %586, label %587

586:                                              ; preds = %577
  br label %587

587:                                              ; preds = %586, %577, %573, %442, %425, %421
  %588 = phi i32 [ 0, %421 ], [ %392, %442 ], [ %392, %425 ], [ 0, %586 ], [ %392, %577 ], [ %392, %573 ]
  %589 = phi ptr [ %393, %421 ], [ %393, %442 ], [ %393, %425 ], [ %422, %586 ], [ %393, %577 ], [ %393, %573 ]
  %590 = phi i32 [ %394, %421 ], [ %394, %442 ], [ %394, %425 ], [ %575, %586 ], [ %394, %577 ], [ %394, %573 ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #7
  store i32 999999999, ptr %8, align 4
  %591 = call fastcc i32 @ZSTD_BtFindBestMatch_extDict_selectMLS(ptr noundef %0, ptr noundef %422, ptr noundef %9, ptr noundef nonnull %8) #7, !callees !9
  %592 = load i32, ptr %8, align 4
  %593 = icmp ugt i32 %591, 3
  br i1 %593, label %594, label %608

594:                                              ; preds = %587
  %595 = add i32 %588, 1
  %596 = tail call i32 @llvm.ctlz.i32(i32 %595, i1 false) #7, !range !8
  %597 = xor i32 %596, -32
  %598 = add i32 %592, 1
  %599 = tail call i32 @llvm.ctlz.i32(i32 %598, i1 false) #7, !range !8
  %600 = xor i32 %599, -32
  %601 = shl i32 %590, 2
  %602 = add nsw i32 %597, 8
  %603 = add i32 %602, %601
  %604 = shl i32 %591, 2
  %605 = or i32 %604, 1
  %606 = add i32 %605, %600
  %607 = icmp sgt i32 %606, %603
  br i1 %607, label %609, label %608

608:                                              ; preds = %594, %587
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %610

609:                                              ; preds = %594
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #7
  br label %413

610:                                              ; preds = %608, %419, %413, %215
  %611 = phi i32 [ %218, %215 ], [ %588, %608 ], [ %414, %413 ], [ %392, %419 ]
  %612 = phi ptr [ %217, %215 ], [ %589, %608 ], [ %415, %413 ], [ %393, %419 ]
  %613 = phi i32 [ %207, %215 ], [ %590, %608 ], [ %417, %413 ], [ %394, %419 ]
  %614 = icmp eq i32 %611, 0
  br i1 %614, label %642, label %615

615:                                              ; preds = %610
  %616 = ptrtoint ptr %612 to i32
  %617 = add i32 %611, -2
  %618 = add i32 %611, %32
  %619 = sub i32 2, %618
  %620 = add i32 %619, %616
  %621 = icmp ult i32 %620, %14
  %622 = select i1 %621, ptr %17, ptr %12
  %623 = getelementptr i8, ptr %622, i32 %620
  %624 = select i1 %621, ptr %21, ptr %15
  %625 = icmp ugt ptr %612, %47
  %626 = icmp ugt ptr %623, %624
  %627 = select i1 %625, i1 %626, i1 false
  br i1 %627, label %628, label %642

628:                                              ; preds = %637, %615
  %629 = phi ptr [ %634, %637 ], [ %623, %615 ]
  %630 = phi i32 [ %638, %637 ], [ %613, %615 ]
  %631 = phi ptr [ %632, %637 ], [ %612, %615 ]
  %632 = getelementptr i8, ptr %631, i32 -1
  %633 = load i8, ptr %632, align 1
  %634 = getelementptr i8, ptr %629, i32 -1
  %635 = load i8, ptr %634, align 1
  %636 = icmp eq i8 %633, %635
  br i1 %636, label %637, label %642

637:                                              ; preds = %628
  %638 = add i32 %630, 1
  %639 = icmp ugt ptr %632, %47
  %640 = icmp ugt ptr %634, %624
  %641 = select i1 %639, i1 %640, i1 false
  br i1 %641, label %628, label %642

642:                                              ; preds = %637, %628, %615, %610
  %643 = phi ptr [ %612, %610 ], [ %612, %615 ], [ %632, %637 ], [ %631, %628 ]
  %644 = phi i32 [ %613, %610 ], [ %613, %615 ], [ %638, %637 ], [ %630, %628 ]
  %645 = phi i32 [ %49, %610 ], [ %48, %615 ], [ %48, %628 ], [ %48, %637 ]
  %646 = phi i32 [ %48, %610 ], [ %617, %615 ], [ %617, %628 ], [ %617, %637 ]
  %647 = ptrtoint ptr %643 to i32
  %648 = ptrtoint ptr %47 to i32
  %649 = sub i32 %647, %648
  %650 = add i32 %644, -3
  %651 = getelementptr i8, ptr %47, i32 %649
  %652 = icmp ugt ptr %651, %38
  %653 = load ptr, ptr %39, align 4
  br i1 %652, label %675, label %654

654:                                              ; preds = %642
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %653, ptr noundef align 1 dereferenceable(16) %47, i32 16, i1 false) #7
  %655 = icmp ugt i32 %649, 16
  %656 = load ptr, ptr %39, align 4
  br i1 %655, label %659, label %657

657:                                              ; preds = %654
  %658 = getelementptr i8, ptr %656, i32 %649
  store ptr %658, ptr %39, align 4
  br label %718

659:                                              ; preds = %654
  %660 = getelementptr i8, ptr %656, i32 16
  %661 = getelementptr i8, ptr %47, i32 16
  %662 = add i32 %649, -16
  %663 = getelementptr i8, ptr %656, i32 %649
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %660, ptr noundef align 1 dereferenceable(16) %661, i32 16, i1 false) #7
  %664 = icmp slt i32 %662, 17
  br i1 %664, label %707, label %665

665:                                              ; preds = %659
  %666 = getelementptr i8, ptr %656, i32 32
  br label %667

667:                                              ; preds = %667, %665
  %668 = phi ptr [ %661, %665 ], [ %672, %667 ]
  %669 = phi ptr [ %666, %665 ], [ %673, %667 ]
  %670 = getelementptr i8, ptr %668, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %669, ptr noundef align 1 dereferenceable(16) %670, i32 16, i1 false) #7
  %671 = getelementptr i8, ptr %669, i32 16
  %672 = getelementptr i8, ptr %668, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %671, ptr noundef align 1 dereferenceable(16) %672, i32 16, i1 false) #7
  %673 = getelementptr i8, ptr %669, i32 32
  %674 = icmp ult ptr %673, %663
  br i1 %674, label %667, label %707

675:                                              ; preds = %642
  %676 = ptrtoint ptr %651 to i32
  %677 = icmp ult ptr %38, %47
  br i1 %677, label %692, label %678

678:                                              ; preds = %675
  %679 = sub i32 %40, %648
  %680 = getelementptr i8, ptr %653, i32 %679
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %653, ptr noundef align 1 dereferenceable(16) %47, i32 16, i1 false) #7
  %681 = icmp slt i32 %679, 17
  br i1 %681, label %692, label %682

682:                                              ; preds = %678
  %683 = getelementptr i8, ptr %653, i32 16
  br label %684

684:                                              ; preds = %684, %682
  %685 = phi ptr [ %47, %682 ], [ %689, %684 ]
  %686 = phi ptr [ %683, %682 ], [ %690, %684 ]
  %687 = getelementptr i8, ptr %685, i32 16
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %686, ptr noundef align 1 dereferenceable(16) %687, i32 16, i1 false) #7
  %688 = getelementptr i8, ptr %686, i32 16
  %689 = getelementptr i8, ptr %685, i32 32
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %688, ptr noundef align 1 dereferenceable(16) %689, i32 16, i1 false) #7
  %690 = getelementptr i8, ptr %686, i32 32
  %691 = icmp ult ptr %690, %680
  br i1 %691, label %684, label %692

692:                                              ; preds = %684, %678, %675
  %693 = phi ptr [ %38, %678 ], [ %47, %675 ], [ %38, %684 ]
  %694 = phi ptr [ %680, %678 ], [ %653, %675 ], [ %680, %684 ]
  %695 = icmp ult ptr %693, %651
  br i1 %695, label %696, label %707

696:                                              ; preds = %692
  %697 = ptrtoint ptr %693 to i32
  %698 = sub i32 %676, %697
  %699 = getelementptr i8, ptr %693, i32 %698
  br label %700

700:                                              ; preds = %700, %696
  %701 = phi ptr [ %705, %700 ], [ %694, %696 ]
  %702 = phi ptr [ %703, %700 ], [ %693, %696 ]
  %703 = getelementptr i8, ptr %702, i32 1
  %704 = load i8, ptr %702, align 1
  %705 = getelementptr i8, ptr %701, i32 1
  store i8 %704, ptr %701, align 1
  %706 = icmp eq ptr %703, %699
  br i1 %706, label %707, label %700

707:                                              ; preds = %700, %692, %667, %659
  %708 = load ptr, ptr %39, align 4
  %709 = getelementptr i8, ptr %708, i32 %649
  store ptr %709, ptr %39, align 4
  %710 = icmp ugt i32 %649, 65535
  br i1 %710, label %711, label %718

711:                                              ; preds = %707
  store i32 1, ptr %41, align 4
  %712 = load ptr, ptr %42, align 4
  %713 = load ptr, ptr %1, align 4
  %714 = ptrtoint ptr %712 to i32
  %715 = ptrtoint ptr %713 to i32
  %716 = sub i32 %714, %715
  %717 = ashr exact i32 %716, 3
  store i32 %717, ptr %43, align 4
  br label %718

718:                                              ; preds = %711, %707, %657
  %719 = trunc i32 %649 to i16
  %720 = load ptr, ptr %42, align 4
  %721 = getelementptr inbounds %struct.seqDef_s, ptr %720, i32 0, i32 1
  store i16 %719, ptr %721, align 4
  %722 = add i32 %611, 1
  %723 = load ptr, ptr %42, align 4
  store i32 %722, ptr %723, align 4
  %724 = icmp ugt i32 %650, 65535
  br i1 %724, label %727, label %725

725:                                              ; preds = %718
  %726 = load ptr, ptr %42, align 4
  br label %734

727:                                              ; preds = %718
  store i32 2, ptr %41, align 4
  %728 = load ptr, ptr %42, align 4
  %729 = load ptr, ptr %1, align 4
  %730 = ptrtoint ptr %728 to i32
  %731 = ptrtoint ptr %729 to i32
  %732 = sub i32 %730, %731
  %733 = ashr exact i32 %732, 3
  store i32 %733, ptr %43, align 4
  br label %734

734:                                              ; preds = %727, %725
  %735 = phi ptr [ %726, %725 ], [ %728, %727 ]
  %736 = trunc i32 %650 to i16
  %737 = getelementptr inbounds %struct.seqDef_s, ptr %735, i32 0, i32 2
  store i16 %736, ptr %737, align 2
  %738 = load ptr, ptr %42, align 4
  %739 = getelementptr %struct.seqDef_s, ptr %738, i32 1
  store ptr %739, ptr %42, align 4
  %740 = getelementptr i8, ptr %643, i32 %644
  %741 = icmp ugt ptr %740, %10
  br i1 %741, label %926, label %742

742:                                              ; preds = %918, %734
  %743 = phi ptr [ %923, %918 ], [ %739, %734 ]
  %744 = phi ptr [ %924, %918 ], [ %740, %734 ]
  %745 = phi i32 [ %746, %918 ], [ %646, %734 ]
  %746 = phi i32 [ %745, %918 ], [ %645, %734 ]
  %747 = ptrtoint ptr %744 to i32
  %748 = sub i32 %747, %32
  %749 = load i32, ptr %19, align 4
  %750 = sub i32 %748, %749
  %751 = icmp ugt i32 %750, %33
  %752 = sub i32 %748, %33
  %753 = load i32, ptr %34, align 4
  %754 = icmp eq i32 %753, 0
  %755 = select i1 %754, i1 %751, i1 false
  %756 = select i1 %755, i32 %752, i32 %749
  %757 = sub i32 %748, %746
  %758 = icmp ult i32 %757, %14
  %759 = select i1 %758, ptr %17, ptr %12
  %760 = getelementptr i8, ptr %759, i32 %757
  %761 = sub i32 %35, %757
  %762 = icmp ugt i32 %761, 2
  %763 = icmp ugt i32 %757, %756
  %764 = and i1 %762, %763
  br i1 %764, label %765, label %926

765:                                              ; preds = %742
  %766 = load i32, ptr %744, align 1
  %767 = load i32, ptr %760, align 1
  %768 = icmp eq i32 %766, %767
  br i1 %768, label %769, label %926

769:                                              ; preds = %765
  %770 = select i1 %758, ptr %18, ptr %9
  %771 = getelementptr i8, ptr %744, i32 4
  %772 = getelementptr i8, ptr %760, i32 4
  %773 = ptrtoint ptr %770 to i32
  %774 = ptrtoint ptr %772 to i32
  %775 = sub i32 %773, %774
  %776 = getelementptr i8, ptr %771, i32 %775
  %777 = icmp ult ptr %776, %9
  %778 = select i1 %777, ptr %776, ptr %9
  %779 = getelementptr i8, ptr %778, i32 -3
  %780 = icmp ugt ptr %779, %771
  br i1 %780, label %781, label %807

781:                                              ; preds = %769
  %782 = load i32, ptr %772, align 1
  %783 = load i32, ptr %771, align 1
  %784 = xor i32 %783, %782
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %789, label %786

786:                                              ; preds = %781
  %787 = tail call i32 @llvm.cttz.i32(i32 %784, i1 true) #7, !range !8
  %788 = lshr i32 %787, 3
  br label %834

789:                                              ; preds = %795, %781
  %790 = phi ptr [ %793, %795 ], [ %771, %781 ]
  %791 = phi ptr [ %792, %795 ], [ %772, %781 ]
  %792 = getelementptr i8, ptr %791, i32 4
  %793 = getelementptr i8, ptr %790, i32 4
  %794 = icmp ult ptr %793, %779
  br i1 %794, label %795, label %807

795:                                              ; preds = %789
  %796 = load i32, ptr %792, align 1
  %797 = load i32, ptr %793, align 1
  %798 = xor i32 %797, %796
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %789, label %800

800:                                              ; preds = %795
  %801 = tail call i32 @llvm.cttz.i32(i32 %798, i1 true) #7, !range !8
  %802 = lshr i32 %801, 3
  %803 = getelementptr i8, ptr %793, i32 %802
  %804 = ptrtoint ptr %803 to i32
  %805 = ptrtoint ptr %771 to i32
  %806 = sub i32 %804, %805
  br label %834

807:                                              ; preds = %789, %769
  %808 = phi ptr [ %771, %769 ], [ %793, %789 ]
  %809 = phi ptr [ %772, %769 ], [ %792, %789 ]
  %810 = getelementptr i8, ptr %778, i32 -1
  %811 = icmp ult ptr %808, %810
  br i1 %811, label %812, label %819

812:                                              ; preds = %807
  %813 = load i16, ptr %809, align 1
  %814 = load i16, ptr %808, align 1
  %815 = icmp eq i16 %813, %814
  br i1 %815, label %816, label %819

816:                                              ; preds = %812
  %817 = getelementptr i8, ptr %808, i32 2
  %818 = getelementptr i8, ptr %809, i32 2
  br label %819

819:                                              ; preds = %816, %812, %807
  %820 = phi ptr [ %817, %816 ], [ %808, %812 ], [ %808, %807 ]
  %821 = phi ptr [ %818, %816 ], [ %809, %812 ], [ %809, %807 ]
  %822 = icmp ult ptr %820, %778
  br i1 %822, label %823, label %829

823:                                              ; preds = %819
  %824 = load i8, ptr %821, align 1
  %825 = load i8, ptr %820, align 1
  %826 = icmp eq i8 %824, %825
  %827 = zext i1 %826 to i32
  %828 = getelementptr i8, ptr %820, i32 %827
  br label %829

829:                                              ; preds = %823, %819
  %830 = phi ptr [ %820, %819 ], [ %828, %823 ]
  %831 = ptrtoint ptr %830 to i32
  %832 = ptrtoint ptr %771 to i32
  %833 = sub i32 %831, %832
  br label %834

834:                                              ; preds = %829, %800, %786
  %835 = phi i32 [ %833, %829 ], [ %788, %786 ], [ %806, %800 ]
  %836 = getelementptr i8, ptr %772, i32 %835
  %837 = icmp eq ptr %836, %770
  br i1 %837, label %838, label %896

838:                                              ; preds = %834
  %839 = getelementptr i8, ptr %771, i32 %835
  %840 = icmp ugt ptr %36, %839
  br i1 %840, label %841, label %867

841:                                              ; preds = %838
  %842 = load i32, ptr %15, align 1
  %843 = load i32, ptr %839, align 1
  %844 = xor i32 %843, %842
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %849, label %846

846:                                              ; preds = %841
  %847 = tail call i32 @llvm.cttz.i32(i32 %844, i1 true) #7, !range !8
  %848 = lshr i32 %847, 3
  br label %893

849:                                              ; preds = %855, %841
  %850 = phi ptr [ %853, %855 ], [ %839, %841 ]
  %851 = phi ptr [ %852, %855 ], [ %15, %841 ]
  %852 = getelementptr i8, ptr %851, i32 4
  %853 = getelementptr i8, ptr %850, i32 4
  %854 = icmp ult ptr %853, %36
  br i1 %854, label %855, label %867

855:                                              ; preds = %849
  %856 = load i32, ptr %852, align 1
  %857 = load i32, ptr %853, align 1
  %858 = xor i32 %857, %856
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %849, label %860

860:                                              ; preds = %855
  %861 = tail call i32 @llvm.cttz.i32(i32 %858, i1 true) #7, !range !8
  %862 = lshr i32 %861, 3
  %863 = getelementptr i8, ptr %853, i32 %862
  %864 = ptrtoint ptr %863 to i32
  %865 = ptrtoint ptr %839 to i32
  %866 = sub i32 %864, %865
  br label %893

867:                                              ; preds = %849, %838
  %868 = phi ptr [ %839, %838 ], [ %853, %849 ]
  %869 = phi ptr [ %15, %838 ], [ %852, %849 ]
  %870 = icmp ult ptr %868, %37
  br i1 %870, label %871, label %878

871:                                              ; preds = %867
  %872 = load i16, ptr %869, align 1
  %873 = load i16, ptr %868, align 1
  %874 = icmp eq i16 %872, %873
  br i1 %874, label %875, label %878

875:                                              ; preds = %871
  %876 = getelementptr i8, ptr %868, i32 2
  %877 = getelementptr i8, ptr %869, i32 2
  br label %878

878:                                              ; preds = %875, %871, %867
  %879 = phi ptr [ %876, %875 ], [ %868, %871 ], [ %868, %867 ]
  %880 = phi ptr [ %877, %875 ], [ %869, %871 ], [ %869, %867 ]
  %881 = icmp ult ptr %879, %9
  br i1 %881, label %882, label %888

882:                                              ; preds = %878
  %883 = load i8, ptr %880, align 1
  %884 = load i8, ptr %879, align 1
  %885 = icmp eq i8 %883, %884
  %886 = zext i1 %885 to i32
  %887 = getelementptr i8, ptr %879, i32 %886
  br label %888

888:                                              ; preds = %882, %878
  %889 = phi ptr [ %879, %878 ], [ %887, %882 ]
  %890 = ptrtoint ptr %889 to i32
  %891 = ptrtoint ptr %839 to i32
  %892 = sub i32 %890, %891
  br label %893

893:                                              ; preds = %888, %860, %846
  %894 = phi i32 [ %892, %888 ], [ %848, %846 ], [ %866, %860 ]
  %895 = add i32 %894, %835
  br label %896

896:                                              ; preds = %893, %834
  %897 = phi i32 [ %895, %893 ], [ %835, %834 ]
  %898 = add i32 %897, 4
  %899 = add i32 %897, 1
  %900 = icmp ugt ptr %744, %38
  br i1 %900, label %904, label %901

901:                                              ; preds = %896
  %902 = load ptr, ptr %39, align 4
  tail call void @llvm.memcpy.p0.p0.i32(ptr noundef align 1 dereferenceable(16) %902, ptr noundef align 1 dereferenceable(16) %744, i32 16, i1 false) #7
  %903 = load ptr, ptr %42, align 4
  br label %904

904:                                              ; preds = %901, %896
  %905 = phi ptr [ %743, %896 ], [ %903, %901 ]
  %906 = getelementptr inbounds %struct.seqDef_s, ptr %905, i32 0, i32 1
  store i16 0, ptr %906, align 4
  %907 = load ptr, ptr %42, align 4
  store i32 1, ptr %907, align 4
  %908 = icmp ugt i32 %899, 65535
  br i1 %908, label %911, label %909

909:                                              ; preds = %904
  %910 = load ptr, ptr %42, align 4
  br label %918

911:                                              ; preds = %904
  store i32 2, ptr %41, align 4
  %912 = load ptr, ptr %42, align 4
  %913 = load ptr, ptr %1, align 4
  %914 = ptrtoint ptr %912 to i32
  %915 = ptrtoint ptr %913 to i32
  %916 = sub i32 %914, %915
  %917 = ashr exact i32 %916, 3
  store i32 %917, ptr %43, align 4
  br label %918

918:                                              ; preds = %911, %909
  %919 = phi ptr [ %910, %909 ], [ %912, %911 ]
  %920 = trunc i32 %899 to i16
  %921 = getelementptr inbounds %struct.seqDef_s, ptr %919, i32 0, i32 2
  store i16 %920, ptr %921, align 2
  %922 = load ptr, ptr %42, align 4
  %923 = getelementptr %struct.seqDef_s, ptr %922, i32 1
  store ptr %923, ptr %42, align 4
  %924 = getelementptr i8, ptr %744, i32 %898
  %925 = icmp ugt ptr %924, %10
  br i1 %925, label %926, label %742

926:                                              ; preds = %918, %765, %742, %734, %209
  %927 = phi i32 [ %49, %209 ], [ %645, %734 ], [ %746, %742 ], [ %746, %765 ], [ %745, %918 ]
  %928 = phi i32 [ %48, %209 ], [ %646, %734 ], [ %745, %742 ], [ %745, %765 ], [ %746, %918 ]
  %929 = phi ptr [ %47, %209 ], [ %740, %734 ], [ %744, %742 ], [ %744, %765 ], [ %924, %918 ]
  %930 = phi ptr [ %214, %209 ], [ %740, %734 ], [ %744, %742 ], [ %744, %765 ], [ %924, %918 ]
  %931 = icmp ult ptr %930, %10
  br i1 %931, label %932, label %934

932:                                              ; preds = %926
  %933 = load i32, ptr %19, align 4
  br label %44

934:                                              ; preds = %926, %5
  %935 = phi i32 [ %24, %5 ], [ %927, %926 ]
  %936 = phi i32 [ %22, %5 ], [ %928, %926 ]
  %937 = phi ptr [ %3, %5 ], [ %929, %926 ]
  store i32 %936, ptr %2, align 4
  store i32 %935, ptr %23, align 4
  %938 = ptrtoint ptr %9 to i32
  %939 = ptrtoint ptr %937 to i32
  %940 = sub i32 %938, %939
  ret i32 %940
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ZSTD_BtFindBestMatch_selectMLS(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2, ptr nocapture noundef %3) unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %12 = load i32, ptr %11, align 4
  switch i32 %12, label %13 [
    i32 6, label %787
    i32 5, label %398
    i32 7, label %787
  ]

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %15, i32 %17
  %19 = icmp ugt ptr %18, %1
  br i1 %19, label %1176, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, -1
  %28 = shl nsw i32 -1, %27
  %29 = xor i32 %28, -1
  %30 = ptrtoint ptr %1 to i32
  %31 = ptrtoint ptr %15 to i32
  %32 = sub i32 %30, %31
  %33 = icmp ult i32 %17, %32
  br i1 %33, label %34, label %62

34:                                               ; preds = %20
  %35 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %36 = load i32, ptr %35, align 4
  %37 = sub i32 32, %36
  br label %38

38:                                               ; preds = %38, %34
  %39 = phi i32 [ %17, %34 ], [ %50, %38 ]
  %40 = getelementptr i8, ptr %15, i32 %39
  %41 = load i32, ptr %40, align 1
  %42 = mul i32 %41, -1640531535
  %43 = lshr i32 %42, %37
  %44 = getelementptr i32, ptr %22, i32 %43
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %39, %29
  %47 = shl i32 %46, 1
  %48 = getelementptr i32, ptr %24, i32 %47
  %49 = getelementptr i32, ptr %48, i32 1
  store i32 %39, ptr %44, align 4
  store i32 %45, ptr %48, align 4
  store i32 1, ptr %49, align 4
  %50 = add nuw i32 %39, 1
  %51 = icmp ult i32 %50, %32
  br i1 %51, label %38, label %52

52:                                               ; preds = %38
  %53 = load ptr, ptr %21, align 4
  %54 = load ptr, ptr %14, align 4
  %55 = load ptr, ptr %23, align 4
  %56 = load i32, ptr %25, align 4
  %57 = ptrtoint ptr %54 to i32
  %58 = sub i32 %30, %57
  %59 = add i32 %56, -1
  %60 = shl nsw i32 -1, %59
  %61 = xor i32 %60, -1
  br label %62

62:                                               ; preds = %52, %20
  %63 = phi i32 [ %61, %52 ], [ %29, %20 ]
  %64 = phi i32 [ %58, %52 ], [ %32, %20 ]
  %65 = phi ptr [ %55, %52 ], [ %24, %20 ]
  %66 = phi ptr [ %54, %52 ], [ %15, %20 ]
  %67 = phi ptr [ %53, %52 ], [ %22, %20 ]
  store i32 %32, ptr %16, align 4
  %68 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %69 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %70 = load i32, ptr %69, align 4
  %71 = load i32, ptr %1, align 1
  %72 = mul i32 %71, -1640531535
  %73 = sub i32 32, %70
  %74 = lshr i32 %72, %73
  %75 = getelementptr i32, ptr %67, i32 %74
  %76 = load i32, ptr %68, align 4
  %77 = shl nuw i32 1, %76
  %78 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %79 = load i32, ptr %78, align 4
  %80 = sub i32 %64, %79
  %81 = icmp ugt i32 %80, %77
  %82 = sub i32 %64, %77
  %83 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %84 = load i32, ptr %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i1 %81, i1 false
  %87 = select i1 %86, i32 %82, i32 %79
  %88 = tail call i32 @llvm.usub.sat.i32(i32 %64, i32 %63) #7
  %89 = tail call i32 @llvm.umax.i32(i32 %88, i32 %87) #7
  %90 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = shl nuw i32 1, %91
  %93 = load i32, ptr %75, align 4
  %94 = icmp ugt i32 %93, %89
  br i1 %94, label %95, label %258

95:                                               ; preds = %107, %62
  %96 = phi i32 [ %109, %107 ], [ %93, %62 ]
  %97 = phi i32 [ %96, %107 ], [ 0, %62 ]
  %98 = phi i32 [ %108, %107 ], [ %92, %62 ]
  %99 = and i32 %96, %63
  %100 = shl i32 %99, 1
  %101 = getelementptr i32, ptr %65, i32 %100
  %102 = getelementptr i32, ptr %101, i32 1
  %103 = load i32, ptr %102, align 4
  %104 = icmp eq i32 %103, 1
  %105 = icmp ugt i32 %98, 1
  %106 = select i1 %104, i1 %105, i1 false
  br i1 %106, label %107, label %111

107:                                              ; preds = %95
  store i32 %97, ptr %102, align 4
  %108 = add i32 %98, -1
  %109 = load i32, ptr %101, align 4
  %110 = icmp ugt i32 %109, %89
  br i1 %110, label %95, label %115

111:                                              ; preds = %95
  br i1 %104, label %112, label %113

112:                                              ; preds = %111
  store i32 0, ptr %102, align 4
  store i32 0, ptr %101, align 4
  br label %113

113:                                              ; preds = %112, %111
  %114 = icmp eq i32 %97, 0
  br i1 %114, label %258, label %115

115:                                              ; preds = %113, %107
  %116 = phi i32 [ %97, %113 ], [ %96, %107 ]
  %117 = phi i32 [ %98, %113 ], [ %108, %107 ]
  %118 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %119 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %120 = getelementptr i32, ptr %65, i32 1
  br label %121

121:                                              ; preds = %253, %115
  %122 = phi i32 [ %116, %115 ], [ %127, %253 ]
  %123 = phi i32 [ %117, %115 ], [ %256, %253 ]
  %124 = and i32 %122, %63
  %125 = shl i32 %124, 1
  %126 = getelementptr i32, ptr %120, i32 %125
  %127 = load i32, ptr %126, align 4
  %128 = load ptr, ptr %23, align 4
  %129 = load i32, ptr %25, align 4
  %130 = add i32 %129, -1
  %131 = shl nsw i32 -1, %130
  %132 = xor i32 %131, -1
  %133 = load ptr, ptr %14, align 4
  %134 = load ptr, ptr %118, align 4
  %135 = load i32, ptr %119, align 4
  %136 = icmp ugt i32 %135, %122
  %137 = select i1 %136, ptr %134, ptr %133
  %138 = getelementptr i8, ptr %137, i32 %122
  %139 = getelementptr i8, ptr %134, i32 %135
  %140 = select i1 %136, ptr %139, ptr %2
  %141 = and i32 %122, %132
  %142 = shl i32 %141, 1
  %143 = getelementptr i32, ptr %128, i32 %142
  %144 = getelementptr i32, ptr %143, i32 1
  %145 = load i32, ptr %143, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9)
  store i32 0, ptr %9, align 4
  %146 = load i32, ptr %78, align 4
  %147 = load i32, ptr %68, align 4
  %148 = shl nuw i32 1, %147
  %149 = sub i32 %122, %146
  %150 = icmp ugt i32 %149, %148
  %151 = sub i32 %122, %148
  %152 = select i1 %150, i32 %151, i32 %146
  %153 = icmp ne i32 %123, 0
  %154 = icmp ugt i32 %145, %152
  %155 = select i1 %153, i1 %154, i1 false
  br i1 %155, label %156, label %253

156:                                              ; preds = %121
  %157 = getelementptr i8, ptr %140, i32 -3
  %158 = getelementptr i8, ptr %140, i32 -1
  br label %159

159:                                              ; preds = %242, %156
  %160 = phi i32 [ %123, %156 ], [ %249, %242 ]
  %161 = phi i32 [ %145, %156 ], [ %248, %242 ]
  %162 = phi ptr [ %144, %156 ], [ %246, %242 ]
  %163 = phi ptr [ %143, %156 ], [ %245, %242 ]
  %164 = phi i32 [ 0, %156 ], [ %244, %242 ]
  %165 = phi i32 [ 0, %156 ], [ %243, %242 ]
  %166 = and i32 %161, %132
  %167 = shl i32 %166, 1
  %168 = getelementptr i32, ptr %128, i32 %167
  %169 = tail call i32 @llvm.umin.i32(i32 %165, i32 %164) #7
  %170 = getelementptr i8, ptr %133, i32 %161
  %171 = getelementptr i8, ptr %138, i32 %169
  %172 = getelementptr i8, ptr %170, i32 %169
  %173 = icmp ugt ptr %157, %171
  br i1 %173, label %174, label %200

174:                                              ; preds = %159
  %175 = load i32, ptr %172, align 1
  %176 = load i32, ptr %171, align 1
  %177 = xor i32 %176, %175
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = tail call i32 @llvm.cttz.i32(i32 %177, i1 true) #7, !range !8
  %181 = lshr i32 %180, 3
  br label %226

182:                                              ; preds = %188, %174
  %183 = phi ptr [ %186, %188 ], [ %171, %174 ]
  %184 = phi ptr [ %185, %188 ], [ %172, %174 ]
  %185 = getelementptr i8, ptr %184, i32 4
  %186 = getelementptr i8, ptr %183, i32 4
  %187 = icmp ult ptr %186, %157
  br i1 %187, label %188, label %200

188:                                              ; preds = %182
  %189 = load i32, ptr %185, align 1
  %190 = load i32, ptr %186, align 1
  %191 = xor i32 %190, %189
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %182, label %193

193:                                              ; preds = %188
  %194 = tail call i32 @llvm.cttz.i32(i32 %191, i1 true) #7, !range !8
  %195 = lshr i32 %194, 3
  %196 = getelementptr i8, ptr %186, i32 %195
  %197 = ptrtoint ptr %196 to i32
  %198 = ptrtoint ptr %171 to i32
  %199 = sub i32 %197, %198
  br label %226

200:                                              ; preds = %182, %159
  %201 = phi ptr [ %171, %159 ], [ %186, %182 ]
  %202 = phi ptr [ %172, %159 ], [ %185, %182 ]
  %203 = icmp ult ptr %201, %158
  br i1 %203, label %204, label %211

204:                                              ; preds = %200
  %205 = load i16, ptr %202, align 1
  %206 = load i16, ptr %201, align 1
  %207 = icmp eq i16 %205, %206
  br i1 %207, label %208, label %211

208:                                              ; preds = %204
  %209 = getelementptr i8, ptr %201, i32 2
  %210 = getelementptr i8, ptr %202, i32 2
  br label %211

211:                                              ; preds = %208, %204, %200
  %212 = phi ptr [ %209, %208 ], [ %201, %204 ], [ %201, %200 ]
  %213 = phi ptr [ %210, %208 ], [ %202, %204 ], [ %202, %200 ]
  %214 = icmp ult ptr %212, %140
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = load i8, ptr %213, align 1
  %217 = load i8, ptr %212, align 1
  %218 = icmp eq i8 %216, %217
  %219 = zext i1 %218 to i32
  %220 = getelementptr i8, ptr %212, i32 %219
  br label %221

221:                                              ; preds = %215, %211
  %222 = phi ptr [ %212, %211 ], [ %220, %215 ]
  %223 = ptrtoint ptr %222 to i32
  %224 = ptrtoint ptr %171 to i32
  %225 = sub i32 %223, %224
  br label %226

226:                                              ; preds = %221, %193, %179
  %227 = phi i32 [ %225, %221 ], [ %181, %179 ], [ %199, %193 ]
  %228 = add i32 %227, %169
  %229 = getelementptr i8, ptr %138, i32 %228
  %230 = icmp eq ptr %229, %140
  br i1 %230, label %253, label %231

231:                                              ; preds = %226
  %232 = getelementptr i8, ptr %170, i32 %228
  %233 = load i8, ptr %232, align 1
  %234 = load i8, ptr %229, align 1
  %235 = icmp ult i8 %233, %234
  br i1 %235, label %236, label %240

236:                                              ; preds = %231
  store i32 %161, ptr %163, align 4
  %237 = icmp ugt i32 %161, %89
  br i1 %237, label %238, label %253

238:                                              ; preds = %236
  %239 = getelementptr i32, ptr %168, i32 1
  br label %242

240:                                              ; preds = %231
  store i32 %161, ptr %162, align 4
  %241 = icmp ugt i32 %161, %89
  br i1 %241, label %242, label %253

242:                                              ; preds = %240, %238
  %243 = phi i32 [ %228, %238 ], [ %165, %240 ]
  %244 = phi i32 [ %164, %238 ], [ %228, %240 ]
  %245 = phi ptr [ %239, %238 ], [ %163, %240 ]
  %246 = phi ptr [ %162, %238 ], [ %168, %240 ]
  %247 = phi ptr [ %239, %238 ], [ %168, %240 ]
  %248 = load i32, ptr %247, align 4
  %249 = add i32 %160, -1
  %250 = icmp ne i32 %249, 0
  %251 = icmp ugt i32 %248, %152
  %252 = select i1 %250, i1 %251, i1 false
  br i1 %252, label %159, label %253

253:                                              ; preds = %242, %240, %236, %226, %121
  %254 = phi ptr [ %143, %121 ], [ %245, %242 ], [ %163, %226 ], [ %9, %236 ], [ %163, %240 ]
  %255 = phi ptr [ %144, %121 ], [ %246, %242 ], [ %162, %226 ], [ %162, %236 ], [ %9, %240 ]
  store i32 0, ptr %255, align 4
  store i32 0, ptr %254, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9)
  %256 = add i32 %123, 1
  %257 = icmp eq i32 %127, 0
  br i1 %257, label %258, label %121

258:                                              ; preds = %253, %113, %62
  %259 = and i32 %64, %63
  %260 = shl i32 %259, 1
  %261 = getelementptr i32, ptr %65, i32 %260
  %262 = getelementptr i32, ptr %261, i32 1
  %263 = add i32 %64, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4
  %264 = load i32, ptr %75, align 4
  store i32 %64, ptr %75, align 4
  %265 = icmp ugt i32 %264, %87
  br i1 %265, label %266, label %392

266:                                              ; preds = %258
  %267 = getelementptr i8, ptr %2, i32 -3
  %268 = getelementptr i8, ptr %2, i32 -1
  %269 = add i32 %64, 1
  %270 = add i32 %64, 2
  br label %271

271:                                              ; preds = %381, %266
  %272 = phi i32 [ 0, %266 ], [ %369, %381 ]
  %273 = phi i32 [ %263, %266 ], [ %368, %381 ]
  %274 = phi ptr [ %262, %266 ], [ %386, %381 ]
  %275 = phi ptr [ %261, %266 ], [ %385, %381 ]
  %276 = phi i32 [ 0, %266 ], [ %384, %381 ]
  %277 = phi i32 [ 0, %266 ], [ %383, %381 ]
  %278 = phi i32 [ %264, %266 ], [ %387, %381 ]
  %279 = phi i32 [ %92, %266 ], [ %388, %381 ]
  %280 = and i32 %278, %63
  %281 = shl i32 %280, 1
  %282 = getelementptr i32, ptr %65, i32 %281
  %283 = tail call i32 @llvm.umin.i32(i32 %277, i32 %276) #7
  %284 = getelementptr i8, ptr %66, i32 %278
  %285 = getelementptr i8, ptr %1, i32 %283
  %286 = getelementptr i8, ptr %284, i32 %283
  %287 = icmp ugt ptr %267, %285
  br i1 %287, label %288, label %314

288:                                              ; preds = %271
  %289 = load i32, ptr %286, align 1
  %290 = load i32, ptr %285, align 1
  %291 = xor i32 %290, %289
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %296, label %293

293:                                              ; preds = %288
  %294 = tail call i32 @llvm.cttz.i32(i32 %291, i1 true) #7, !range !8
  %295 = lshr i32 %294, 3
  br label %340

296:                                              ; preds = %302, %288
  %297 = phi ptr [ %300, %302 ], [ %285, %288 ]
  %298 = phi ptr [ %299, %302 ], [ %286, %288 ]
  %299 = getelementptr i8, ptr %298, i32 4
  %300 = getelementptr i8, ptr %297, i32 4
  %301 = icmp ult ptr %300, %267
  br i1 %301, label %302, label %314

302:                                              ; preds = %296
  %303 = load i32, ptr %299, align 1
  %304 = load i32, ptr %300, align 1
  %305 = xor i32 %304, %303
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %296, label %307

307:                                              ; preds = %302
  %308 = tail call i32 @llvm.cttz.i32(i32 %305, i1 true) #7, !range !8
  %309 = lshr i32 %308, 3
  %310 = getelementptr i8, ptr %300, i32 %309
  %311 = ptrtoint ptr %310 to i32
  %312 = ptrtoint ptr %285 to i32
  %313 = sub i32 %311, %312
  br label %340

314:                                              ; preds = %296, %271
  %315 = phi ptr [ %285, %271 ], [ %300, %296 ]
  %316 = phi ptr [ %286, %271 ], [ %299, %296 ]
  %317 = icmp ult ptr %315, %268
  br i1 %317, label %318, label %325

318:                                              ; preds = %314
  %319 = load i16, ptr %316, align 1
  %320 = load i16, ptr %315, align 1
  %321 = icmp eq i16 %319, %320
  br i1 %321, label %322, label %325

322:                                              ; preds = %318
  %323 = getelementptr i8, ptr %315, i32 2
  %324 = getelementptr i8, ptr %316, i32 2
  br label %325

325:                                              ; preds = %322, %318, %314
  %326 = phi ptr [ %323, %322 ], [ %315, %318 ], [ %315, %314 ]
  %327 = phi ptr [ %324, %322 ], [ %316, %318 ], [ %316, %314 ]
  %328 = icmp ult ptr %326, %2
  br i1 %328, label %329, label %335

329:                                              ; preds = %325
  %330 = load i8, ptr %327, align 1
  %331 = load i8, ptr %326, align 1
  %332 = icmp eq i8 %330, %331
  %333 = zext i1 %332 to i32
  %334 = getelementptr i8, ptr %326, i32 %333
  br label %335

335:                                              ; preds = %329, %325
  %336 = phi ptr [ %326, %325 ], [ %334, %329 ]
  %337 = ptrtoint ptr %336 to i32
  %338 = ptrtoint ptr %285 to i32
  %339 = sub i32 %337, %338
  br label %340

340:                                              ; preds = %335, %307, %293
  %341 = phi i32 [ %339, %335 ], [ %295, %293 ], [ %313, %307 ]
  %342 = add i32 %341, %283
  %343 = icmp ugt i32 %342, %272
  br i1 %343, label %344, label %367

344:                                              ; preds = %340
  %345 = sub i32 %273, %278
  %346 = icmp ugt i32 %342, %345
  %347 = add i32 %342, %278
  %348 = select i1 %346, i32 %347, i32 %273
  %349 = sub i32 %342, %272
  %350 = shl i32 %349, 2
  %351 = sub i32 %269, %278
  %352 = tail call i32 @llvm.ctlz.i32(i32 %351, i1 false) #7, !range !8
  %353 = xor i32 %352, 31
  %354 = load i32, ptr %3, align 4
  %355 = add i32 %354, 1
  %356 = tail call i32 @llvm.ctlz.i32(i32 %355, i1 false) #7, !range !8
  %357 = xor i32 %356, -32
  %358 = add nuw nsw i32 %353, 1
  %359 = add nsw i32 %358, %357
  %360 = icmp sgt i32 %350, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %344
  %362 = sub i32 %270, %278
  store i32 %362, ptr %3, align 4
  br label %363

363:                                              ; preds = %361, %344
  %364 = phi i32 [ %342, %361 ], [ %272, %344 ]
  %365 = getelementptr i8, ptr %1, i32 %342
  %366 = icmp eq ptr %365, %2
  br i1 %366, label %392, label %367

367:                                              ; preds = %363, %340
  %368 = phi i32 [ %348, %363 ], [ %273, %340 ]
  %369 = phi i32 [ %364, %363 ], [ %272, %340 ]
  %370 = getelementptr i8, ptr %284, i32 %342
  %371 = load i8, ptr %370, align 1
  %372 = getelementptr i8, ptr %1, i32 %342
  %373 = load i8, ptr %372, align 1
  %374 = icmp ult i8 %371, %373
  br i1 %374, label %375, label %379

375:                                              ; preds = %367
  store i32 %278, ptr %275, align 4
  %376 = icmp ugt i32 %278, %88
  br i1 %376, label %377, label %392

377:                                              ; preds = %375
  %378 = getelementptr i32, ptr %282, i32 1
  br label %381

379:                                              ; preds = %367
  store i32 %278, ptr %274, align 4
  %380 = icmp ugt i32 %278, %88
  br i1 %380, label %381, label %392

381:                                              ; preds = %379, %377
  %382 = phi ptr [ %378, %377 ], [ %282, %379 ]
  %383 = phi i32 [ %342, %377 ], [ %277, %379 ]
  %384 = phi i32 [ %276, %377 ], [ %342, %379 ]
  %385 = phi ptr [ %378, %377 ], [ %275, %379 ]
  %386 = phi ptr [ %274, %377 ], [ %282, %379 ]
  %387 = load i32, ptr %382, align 4
  %388 = add i32 %279, -1
  %389 = icmp ne i32 %388, 0
  %390 = icmp ugt i32 %387, %87
  %391 = select i1 %389, i1 %390, i1 false
  br i1 %391, label %271, label %392

392:                                              ; preds = %381, %379, %375, %363, %258
  %393 = phi ptr [ %261, %258 ], [ %275, %363 ], [ %385, %381 ], [ %10, %375 ], [ %275, %379 ]
  %394 = phi ptr [ %262, %258 ], [ %274, %363 ], [ %386, %381 ], [ %274, %375 ], [ %10, %379 ]
  %395 = phi i32 [ %263, %258 ], [ %348, %363 ], [ %368, %381 ], [ %368, %375 ], [ %368, %379 ]
  %396 = phi i32 [ 0, %258 ], [ %364, %363 ], [ %369, %381 ], [ %369, %375 ], [ %369, %379 ]
  store i32 0, ptr %394, align 4
  store i32 0, ptr %393, align 4
  %397 = add i32 %395, -8
  store i32 %397, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  br label %1176

398:                                              ; preds = %4
  %399 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %400 = load ptr, ptr %399, align 4
  %401 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %402 = load i32, ptr %401, align 4
  %403 = getelementptr i8, ptr %400, i32 %402
  %404 = icmp ugt ptr %403, %1
  br i1 %404, label %1176, label %405

405:                                              ; preds = %398
  %406 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %407 = load ptr, ptr %406, align 4
  %408 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %409 = load ptr, ptr %408, align 4
  %410 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %411 = load i32, ptr %410, align 4
  %412 = add i32 %411, -1
  %413 = shl nsw i32 -1, %412
  %414 = xor i32 %413, -1
  %415 = ptrtoint ptr %1 to i32
  %416 = ptrtoint ptr %400 to i32
  %417 = sub i32 %415, %416
  %418 = icmp ult i32 %402, %417
  br i1 %418, label %419, label %449

419:                                              ; preds = %405
  %420 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %421 = load i32, ptr %420, align 4
  %422 = sub i32 64, %421
  %423 = zext i32 %422 to i64
  br label %424

424:                                              ; preds = %424, %419
  %425 = phi i32 [ %402, %419 ], [ %437, %424 ]
  %426 = getelementptr i8, ptr %400, i32 %425
  %427 = load i64, ptr %426, align 1
  %428 = mul i64 %427, -3523014627271114752
  %429 = lshr i64 %428, %423
  %430 = trunc i64 %429 to i32
  %431 = getelementptr i32, ptr %407, i32 %430
  %432 = load i32, ptr %431, align 4
  %433 = and i32 %425, %414
  %434 = shl i32 %433, 1
  %435 = getelementptr i32, ptr %409, i32 %434
  %436 = getelementptr i32, ptr %435, i32 1
  store i32 %425, ptr %431, align 4
  store i32 %432, ptr %435, align 4
  store i32 1, ptr %436, align 4
  %437 = add nuw i32 %425, 1
  %438 = icmp ult i32 %437, %417
  br i1 %438, label %424, label %439

439:                                              ; preds = %424
  %440 = load ptr, ptr %406, align 4
  %441 = load ptr, ptr %399, align 4
  %442 = load ptr, ptr %408, align 4
  %443 = load i32, ptr %410, align 4
  %444 = ptrtoint ptr %441 to i32
  %445 = sub i32 %415, %444
  %446 = add i32 %443, -1
  %447 = shl nsw i32 -1, %446
  %448 = xor i32 %447, -1
  br label %449

449:                                              ; preds = %439, %405
  %450 = phi i32 [ %448, %439 ], [ %414, %405 ]
  %451 = phi i32 [ %445, %439 ], [ %417, %405 ]
  %452 = phi ptr [ %442, %439 ], [ %409, %405 ]
  %453 = phi ptr [ %441, %439 ], [ %400, %405 ]
  %454 = phi ptr [ %440, %439 ], [ %407, %405 ]
  store i32 %417, ptr %401, align 4
  %455 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %456 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %457 = load i32, ptr %456, align 4
  %458 = load i64, ptr %1, align 1
  %459 = mul i64 %458, -3523014627271114752
  %460 = sub i32 64, %457
  %461 = zext i32 %460 to i64
  %462 = lshr i64 %459, %461
  %463 = trunc i64 %462 to i32
  %464 = getelementptr i32, ptr %454, i32 %463
  %465 = load i32, ptr %455, align 4
  %466 = shl nuw i32 1, %465
  %467 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %468 = load i32, ptr %467, align 4
  %469 = sub i32 %451, %468
  %470 = icmp ugt i32 %469, %466
  %471 = sub i32 %451, %466
  %472 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %473 = load i32, ptr %472, align 4
  %474 = icmp eq i32 %473, 0
  %475 = select i1 %474, i1 %470, i1 false
  %476 = select i1 %475, i32 %471, i32 %468
  %477 = tail call i32 @llvm.usub.sat.i32(i32 %451, i32 %450) #7
  %478 = tail call i32 @llvm.umax.i32(i32 %477, i32 %476) #7
  %479 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %480 = load i32, ptr %479, align 4
  %481 = shl nuw i32 1, %480
  %482 = load i32, ptr %464, align 4
  %483 = icmp ugt i32 %482, %478
  br i1 %483, label %484, label %647

484:                                              ; preds = %496, %449
  %485 = phi i32 [ %498, %496 ], [ %482, %449 ]
  %486 = phi i32 [ %485, %496 ], [ 0, %449 ]
  %487 = phi i32 [ %497, %496 ], [ %481, %449 ]
  %488 = and i32 %485, %450
  %489 = shl i32 %488, 1
  %490 = getelementptr i32, ptr %452, i32 %489
  %491 = getelementptr i32, ptr %490, i32 1
  %492 = load i32, ptr %491, align 4
  %493 = icmp eq i32 %492, 1
  %494 = icmp ugt i32 %487, 1
  %495 = select i1 %493, i1 %494, i1 false
  br i1 %495, label %496, label %500

496:                                              ; preds = %484
  store i32 %486, ptr %491, align 4
  %497 = add i32 %487, -1
  %498 = load i32, ptr %490, align 4
  %499 = icmp ugt i32 %498, %478
  br i1 %499, label %484, label %504

500:                                              ; preds = %484
  br i1 %493, label %501, label %502

501:                                              ; preds = %500
  store i32 0, ptr %491, align 4
  store i32 0, ptr %490, align 4
  br label %502

502:                                              ; preds = %501, %500
  %503 = icmp eq i32 %486, 0
  br i1 %503, label %647, label %504

504:                                              ; preds = %502, %496
  %505 = phi i32 [ %486, %502 ], [ %485, %496 ]
  %506 = phi i32 [ %487, %502 ], [ %497, %496 ]
  %507 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %508 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %509 = getelementptr i32, ptr %452, i32 1
  br label %510

510:                                              ; preds = %642, %504
  %511 = phi i32 [ %505, %504 ], [ %516, %642 ]
  %512 = phi i32 [ %506, %504 ], [ %645, %642 ]
  %513 = and i32 %511, %450
  %514 = shl i32 %513, 1
  %515 = getelementptr i32, ptr %509, i32 %514
  %516 = load i32, ptr %515, align 4
  %517 = load ptr, ptr %408, align 4
  %518 = load i32, ptr %410, align 4
  %519 = add i32 %518, -1
  %520 = shl nsw i32 -1, %519
  %521 = xor i32 %520, -1
  %522 = load ptr, ptr %399, align 4
  %523 = load ptr, ptr %507, align 4
  %524 = load i32, ptr %508, align 4
  %525 = icmp ugt i32 %524, %511
  %526 = select i1 %525, ptr %523, ptr %522
  %527 = getelementptr i8, ptr %526, i32 %511
  %528 = getelementptr i8, ptr %523, i32 %524
  %529 = select i1 %525, ptr %528, ptr %2
  %530 = and i32 %511, %521
  %531 = shl i32 %530, 1
  %532 = getelementptr i32, ptr %517, i32 %531
  %533 = getelementptr i32, ptr %532, i32 1
  %534 = load i32, ptr %532, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7)
  store i32 0, ptr %7, align 4
  %535 = load i32, ptr %467, align 4
  %536 = load i32, ptr %455, align 4
  %537 = shl nuw i32 1, %536
  %538 = sub i32 %511, %535
  %539 = icmp ugt i32 %538, %537
  %540 = sub i32 %511, %537
  %541 = select i1 %539, i32 %540, i32 %535
  %542 = icmp ne i32 %512, 0
  %543 = icmp ugt i32 %534, %541
  %544 = select i1 %542, i1 %543, i1 false
  br i1 %544, label %545, label %642

545:                                              ; preds = %510
  %546 = getelementptr i8, ptr %529, i32 -3
  %547 = getelementptr i8, ptr %529, i32 -1
  br label %548

548:                                              ; preds = %631, %545
  %549 = phi i32 [ %512, %545 ], [ %638, %631 ]
  %550 = phi i32 [ %534, %545 ], [ %637, %631 ]
  %551 = phi ptr [ %533, %545 ], [ %635, %631 ]
  %552 = phi ptr [ %532, %545 ], [ %634, %631 ]
  %553 = phi i32 [ 0, %545 ], [ %633, %631 ]
  %554 = phi i32 [ 0, %545 ], [ %632, %631 ]
  %555 = and i32 %550, %521
  %556 = shl i32 %555, 1
  %557 = getelementptr i32, ptr %517, i32 %556
  %558 = tail call i32 @llvm.umin.i32(i32 %554, i32 %553) #7
  %559 = getelementptr i8, ptr %522, i32 %550
  %560 = getelementptr i8, ptr %527, i32 %558
  %561 = getelementptr i8, ptr %559, i32 %558
  %562 = icmp ugt ptr %546, %560
  br i1 %562, label %563, label %589

563:                                              ; preds = %548
  %564 = load i32, ptr %561, align 1
  %565 = load i32, ptr %560, align 1
  %566 = xor i32 %565, %564
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %571, label %568

568:                                              ; preds = %563
  %569 = tail call i32 @llvm.cttz.i32(i32 %566, i1 true) #7, !range !8
  %570 = lshr i32 %569, 3
  br label %615

571:                                              ; preds = %577, %563
  %572 = phi ptr [ %575, %577 ], [ %560, %563 ]
  %573 = phi ptr [ %574, %577 ], [ %561, %563 ]
  %574 = getelementptr i8, ptr %573, i32 4
  %575 = getelementptr i8, ptr %572, i32 4
  %576 = icmp ult ptr %575, %546
  br i1 %576, label %577, label %589

577:                                              ; preds = %571
  %578 = load i32, ptr %574, align 1
  %579 = load i32, ptr %575, align 1
  %580 = xor i32 %579, %578
  %581 = icmp eq i32 %580, 0
  br i1 %581, label %571, label %582

582:                                              ; preds = %577
  %583 = tail call i32 @llvm.cttz.i32(i32 %580, i1 true) #7, !range !8
  %584 = lshr i32 %583, 3
  %585 = getelementptr i8, ptr %575, i32 %584
  %586 = ptrtoint ptr %585 to i32
  %587 = ptrtoint ptr %560 to i32
  %588 = sub i32 %586, %587
  br label %615

589:                                              ; preds = %571, %548
  %590 = phi ptr [ %560, %548 ], [ %575, %571 ]
  %591 = phi ptr [ %561, %548 ], [ %574, %571 ]
  %592 = icmp ult ptr %590, %547
  br i1 %592, label %593, label %600

593:                                              ; preds = %589
  %594 = load i16, ptr %591, align 1
  %595 = load i16, ptr %590, align 1
  %596 = icmp eq i16 %594, %595
  br i1 %596, label %597, label %600

597:                                              ; preds = %593
  %598 = getelementptr i8, ptr %590, i32 2
  %599 = getelementptr i8, ptr %591, i32 2
  br label %600

600:                                              ; preds = %597, %593, %589
  %601 = phi ptr [ %598, %597 ], [ %590, %593 ], [ %590, %589 ]
  %602 = phi ptr [ %599, %597 ], [ %591, %593 ], [ %591, %589 ]
  %603 = icmp ult ptr %601, %529
  br i1 %603, label %604, label %610

604:                                              ; preds = %600
  %605 = load i8, ptr %602, align 1
  %606 = load i8, ptr %601, align 1
  %607 = icmp eq i8 %605, %606
  %608 = zext i1 %607 to i32
  %609 = getelementptr i8, ptr %601, i32 %608
  br label %610

610:                                              ; preds = %604, %600
  %611 = phi ptr [ %601, %600 ], [ %609, %604 ]
  %612 = ptrtoint ptr %611 to i32
  %613 = ptrtoint ptr %560 to i32
  %614 = sub i32 %612, %613
  br label %615

615:                                              ; preds = %610, %582, %568
  %616 = phi i32 [ %614, %610 ], [ %570, %568 ], [ %588, %582 ]
  %617 = add i32 %616, %558
  %618 = getelementptr i8, ptr %527, i32 %617
  %619 = icmp eq ptr %618, %529
  br i1 %619, label %642, label %620

620:                                              ; preds = %615
  %621 = getelementptr i8, ptr %559, i32 %617
  %622 = load i8, ptr %621, align 1
  %623 = load i8, ptr %618, align 1
  %624 = icmp ult i8 %622, %623
  br i1 %624, label %625, label %629

625:                                              ; preds = %620
  store i32 %550, ptr %552, align 4
  %626 = icmp ugt i32 %550, %478
  br i1 %626, label %627, label %642

627:                                              ; preds = %625
  %628 = getelementptr i32, ptr %557, i32 1
  br label %631

629:                                              ; preds = %620
  store i32 %550, ptr %551, align 4
  %630 = icmp ugt i32 %550, %478
  br i1 %630, label %631, label %642

631:                                              ; preds = %629, %627
  %632 = phi i32 [ %617, %627 ], [ %554, %629 ]
  %633 = phi i32 [ %553, %627 ], [ %617, %629 ]
  %634 = phi ptr [ %628, %627 ], [ %552, %629 ]
  %635 = phi ptr [ %551, %627 ], [ %557, %629 ]
  %636 = phi ptr [ %628, %627 ], [ %557, %629 ]
  %637 = load i32, ptr %636, align 4
  %638 = add i32 %549, -1
  %639 = icmp ne i32 %638, 0
  %640 = icmp ugt i32 %637, %541
  %641 = select i1 %639, i1 %640, i1 false
  br i1 %641, label %548, label %642

642:                                              ; preds = %631, %629, %625, %615, %510
  %643 = phi ptr [ %532, %510 ], [ %634, %631 ], [ %552, %615 ], [ %7, %625 ], [ %552, %629 ]
  %644 = phi ptr [ %533, %510 ], [ %635, %631 ], [ %551, %615 ], [ %551, %625 ], [ %7, %629 ]
  store i32 0, ptr %644, align 4
  store i32 0, ptr %643, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7)
  %645 = add i32 %512, 1
  %646 = icmp eq i32 %516, 0
  br i1 %646, label %647, label %510

647:                                              ; preds = %642, %502, %449
  %648 = and i32 %451, %450
  %649 = shl i32 %648, 1
  %650 = getelementptr i32, ptr %452, i32 %649
  %651 = getelementptr i32, ptr %650, i32 1
  %652 = add i32 %451, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4
  %653 = load i32, ptr %464, align 4
  store i32 %451, ptr %464, align 4
  %654 = icmp ugt i32 %653, %476
  br i1 %654, label %655, label %781

655:                                              ; preds = %647
  %656 = getelementptr i8, ptr %2, i32 -3
  %657 = getelementptr i8, ptr %2, i32 -1
  %658 = add i32 %451, 1
  %659 = add i32 %451, 2
  br label %660

660:                                              ; preds = %770, %655
  %661 = phi i32 [ 0, %655 ], [ %758, %770 ]
  %662 = phi i32 [ %652, %655 ], [ %757, %770 ]
  %663 = phi ptr [ %651, %655 ], [ %775, %770 ]
  %664 = phi ptr [ %650, %655 ], [ %774, %770 ]
  %665 = phi i32 [ 0, %655 ], [ %773, %770 ]
  %666 = phi i32 [ 0, %655 ], [ %772, %770 ]
  %667 = phi i32 [ %653, %655 ], [ %776, %770 ]
  %668 = phi i32 [ %481, %655 ], [ %777, %770 ]
  %669 = and i32 %667, %450
  %670 = shl i32 %669, 1
  %671 = getelementptr i32, ptr %452, i32 %670
  %672 = tail call i32 @llvm.umin.i32(i32 %666, i32 %665) #7
  %673 = getelementptr i8, ptr %453, i32 %667
  %674 = getelementptr i8, ptr %1, i32 %672
  %675 = getelementptr i8, ptr %673, i32 %672
  %676 = icmp ugt ptr %656, %674
  br i1 %676, label %677, label %703

677:                                              ; preds = %660
  %678 = load i32, ptr %675, align 1
  %679 = load i32, ptr %674, align 1
  %680 = xor i32 %679, %678
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %685, label %682

682:                                              ; preds = %677
  %683 = tail call i32 @llvm.cttz.i32(i32 %680, i1 true) #7, !range !8
  %684 = lshr i32 %683, 3
  br label %729

685:                                              ; preds = %691, %677
  %686 = phi ptr [ %689, %691 ], [ %674, %677 ]
  %687 = phi ptr [ %688, %691 ], [ %675, %677 ]
  %688 = getelementptr i8, ptr %687, i32 4
  %689 = getelementptr i8, ptr %686, i32 4
  %690 = icmp ult ptr %689, %656
  br i1 %690, label %691, label %703

691:                                              ; preds = %685
  %692 = load i32, ptr %688, align 1
  %693 = load i32, ptr %689, align 1
  %694 = xor i32 %693, %692
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %685, label %696

696:                                              ; preds = %691
  %697 = tail call i32 @llvm.cttz.i32(i32 %694, i1 true) #7, !range !8
  %698 = lshr i32 %697, 3
  %699 = getelementptr i8, ptr %689, i32 %698
  %700 = ptrtoint ptr %699 to i32
  %701 = ptrtoint ptr %674 to i32
  %702 = sub i32 %700, %701
  br label %729

703:                                              ; preds = %685, %660
  %704 = phi ptr [ %674, %660 ], [ %689, %685 ]
  %705 = phi ptr [ %675, %660 ], [ %688, %685 ]
  %706 = icmp ult ptr %704, %657
  br i1 %706, label %707, label %714

707:                                              ; preds = %703
  %708 = load i16, ptr %705, align 1
  %709 = load i16, ptr %704, align 1
  %710 = icmp eq i16 %708, %709
  br i1 %710, label %711, label %714

711:                                              ; preds = %707
  %712 = getelementptr i8, ptr %704, i32 2
  %713 = getelementptr i8, ptr %705, i32 2
  br label %714

714:                                              ; preds = %711, %707, %703
  %715 = phi ptr [ %712, %711 ], [ %704, %707 ], [ %704, %703 ]
  %716 = phi ptr [ %713, %711 ], [ %705, %707 ], [ %705, %703 ]
  %717 = icmp ult ptr %715, %2
  br i1 %717, label %718, label %724

718:                                              ; preds = %714
  %719 = load i8, ptr %716, align 1
  %720 = load i8, ptr %715, align 1
  %721 = icmp eq i8 %719, %720
  %722 = zext i1 %721 to i32
  %723 = getelementptr i8, ptr %715, i32 %722
  br label %724

724:                                              ; preds = %718, %714
  %725 = phi ptr [ %715, %714 ], [ %723, %718 ]
  %726 = ptrtoint ptr %725 to i32
  %727 = ptrtoint ptr %674 to i32
  %728 = sub i32 %726, %727
  br label %729

729:                                              ; preds = %724, %696, %682
  %730 = phi i32 [ %728, %724 ], [ %684, %682 ], [ %702, %696 ]
  %731 = add i32 %730, %672
  %732 = icmp ugt i32 %731, %661
  br i1 %732, label %733, label %756

733:                                              ; preds = %729
  %734 = sub i32 %662, %667
  %735 = icmp ugt i32 %731, %734
  %736 = add i32 %731, %667
  %737 = select i1 %735, i32 %736, i32 %662
  %738 = sub i32 %731, %661
  %739 = shl i32 %738, 2
  %740 = sub i32 %658, %667
  %741 = tail call i32 @llvm.ctlz.i32(i32 %740, i1 false) #7, !range !8
  %742 = xor i32 %741, 31
  %743 = load i32, ptr %3, align 4
  %744 = add i32 %743, 1
  %745 = tail call i32 @llvm.ctlz.i32(i32 %744, i1 false) #7, !range !8
  %746 = xor i32 %745, -32
  %747 = add nuw nsw i32 %742, 1
  %748 = add nsw i32 %747, %746
  %749 = icmp sgt i32 %739, %748
  br i1 %749, label %750, label %752

750:                                              ; preds = %733
  %751 = sub i32 %659, %667
  store i32 %751, ptr %3, align 4
  br label %752

752:                                              ; preds = %750, %733
  %753 = phi i32 [ %731, %750 ], [ %661, %733 ]
  %754 = getelementptr i8, ptr %1, i32 %731
  %755 = icmp eq ptr %754, %2
  br i1 %755, label %781, label %756

756:                                              ; preds = %752, %729
  %757 = phi i32 [ %737, %752 ], [ %662, %729 ]
  %758 = phi i32 [ %753, %752 ], [ %661, %729 ]
  %759 = getelementptr i8, ptr %673, i32 %731
  %760 = load i8, ptr %759, align 1
  %761 = getelementptr i8, ptr %1, i32 %731
  %762 = load i8, ptr %761, align 1
  %763 = icmp ult i8 %760, %762
  br i1 %763, label %764, label %768

764:                                              ; preds = %756
  store i32 %667, ptr %664, align 4
  %765 = icmp ugt i32 %667, %477
  br i1 %765, label %766, label %781

766:                                              ; preds = %764
  %767 = getelementptr i32, ptr %671, i32 1
  br label %770

768:                                              ; preds = %756
  store i32 %667, ptr %663, align 4
  %769 = icmp ugt i32 %667, %477
  br i1 %769, label %770, label %781

770:                                              ; preds = %768, %766
  %771 = phi ptr [ %767, %766 ], [ %671, %768 ]
  %772 = phi i32 [ %731, %766 ], [ %666, %768 ]
  %773 = phi i32 [ %665, %766 ], [ %731, %768 ]
  %774 = phi ptr [ %767, %766 ], [ %664, %768 ]
  %775 = phi ptr [ %663, %766 ], [ %671, %768 ]
  %776 = load i32, ptr %771, align 4
  %777 = add i32 %668, -1
  %778 = icmp ne i32 %777, 0
  %779 = icmp ugt i32 %776, %476
  %780 = select i1 %778, i1 %779, i1 false
  br i1 %780, label %660, label %781

781:                                              ; preds = %770, %768, %764, %752, %647
  %782 = phi ptr [ %650, %647 ], [ %664, %752 ], [ %774, %770 ], [ %8, %764 ], [ %664, %768 ]
  %783 = phi ptr [ %651, %647 ], [ %663, %752 ], [ %775, %770 ], [ %663, %764 ], [ %8, %768 ]
  %784 = phi i32 [ %652, %647 ], [ %737, %752 ], [ %757, %770 ], [ %757, %764 ], [ %757, %768 ]
  %785 = phi i32 [ 0, %647 ], [ %753, %752 ], [ %758, %770 ], [ %758, %764 ], [ %758, %768 ]
  store i32 0, ptr %783, align 4
  store i32 0, ptr %782, align 4
  %786 = add i32 %784, -8
  store i32 %786, ptr %401, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  br label %1176

787:                                              ; preds = %4, %4
  %788 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %789 = load ptr, ptr %788, align 4
  %790 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %791 = load i32, ptr %790, align 4
  %792 = getelementptr i8, ptr %789, i32 %791
  %793 = icmp ugt ptr %792, %1
  br i1 %793, label %1176, label %794

794:                                              ; preds = %787
  %795 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %796 = load ptr, ptr %795, align 4
  %797 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %798 = load ptr, ptr %797, align 4
  %799 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %800 = load i32, ptr %799, align 4
  %801 = add i32 %800, -1
  %802 = shl nsw i32 -1, %801
  %803 = xor i32 %802, -1
  %804 = ptrtoint ptr %1 to i32
  %805 = ptrtoint ptr %789 to i32
  %806 = sub i32 %804, %805
  %807 = icmp ult i32 %791, %806
  br i1 %807, label %808, label %838

808:                                              ; preds = %794
  %809 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %810 = load i32, ptr %809, align 4
  %811 = sub i32 64, %810
  %812 = zext i32 %811 to i64
  br label %813

813:                                              ; preds = %813, %808
  %814 = phi i32 [ %791, %808 ], [ %826, %813 ]
  %815 = getelementptr i8, ptr %789, i32 %814
  %816 = load i64, ptr %815, align 1
  %817 = mul i64 %816, -3523014627193847808
  %818 = lshr i64 %817, %812
  %819 = trunc i64 %818 to i32
  %820 = getelementptr i32, ptr %796, i32 %819
  %821 = load i32, ptr %820, align 4
  %822 = and i32 %814, %803
  %823 = shl i32 %822, 1
  %824 = getelementptr i32, ptr %798, i32 %823
  %825 = getelementptr i32, ptr %824, i32 1
  store i32 %814, ptr %820, align 4
  store i32 %821, ptr %824, align 4
  store i32 1, ptr %825, align 4
  %826 = add nuw i32 %814, 1
  %827 = icmp ult i32 %826, %806
  br i1 %827, label %813, label %828

828:                                              ; preds = %813
  %829 = load ptr, ptr %795, align 4
  %830 = load ptr, ptr %788, align 4
  %831 = load ptr, ptr %797, align 4
  %832 = load i32, ptr %799, align 4
  %833 = ptrtoint ptr %830 to i32
  %834 = sub i32 %804, %833
  %835 = add i32 %832, -1
  %836 = shl nsw i32 -1, %835
  %837 = xor i32 %836, -1
  br label %838

838:                                              ; preds = %828, %794
  %839 = phi i32 [ %837, %828 ], [ %803, %794 ]
  %840 = phi i32 [ %834, %828 ], [ %806, %794 ]
  %841 = phi ptr [ %831, %828 ], [ %798, %794 ]
  %842 = phi ptr [ %830, %828 ], [ %789, %794 ]
  %843 = phi ptr [ %829, %828 ], [ %796, %794 ]
  store i32 %806, ptr %790, align 4
  %844 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %845 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %846 = load i32, ptr %845, align 4
  %847 = load i64, ptr %1, align 1
  %848 = mul i64 %847, -3523014627193847808
  %849 = sub i32 64, %846
  %850 = zext i32 %849 to i64
  %851 = lshr i64 %848, %850
  %852 = trunc i64 %851 to i32
  %853 = getelementptr i32, ptr %843, i32 %852
  %854 = load i32, ptr %844, align 4
  %855 = shl nuw i32 1, %854
  %856 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %857 = load i32, ptr %856, align 4
  %858 = sub i32 %840, %857
  %859 = icmp ugt i32 %858, %855
  %860 = sub i32 %840, %855
  %861 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %862 = load i32, ptr %861, align 4
  %863 = icmp eq i32 %862, 0
  %864 = select i1 %863, i1 %859, i1 false
  %865 = select i1 %864, i32 %860, i32 %857
  %866 = tail call i32 @llvm.usub.sat.i32(i32 %840, i32 %839) #7
  %867 = tail call i32 @llvm.umax.i32(i32 %866, i32 %865) #7
  %868 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %869 = load i32, ptr %868, align 4
  %870 = shl nuw i32 1, %869
  %871 = load i32, ptr %853, align 4
  %872 = icmp ugt i32 %871, %867
  br i1 %872, label %873, label %1036

873:                                              ; preds = %885, %838
  %874 = phi i32 [ %887, %885 ], [ %871, %838 ]
  %875 = phi i32 [ %874, %885 ], [ 0, %838 ]
  %876 = phi i32 [ %886, %885 ], [ %870, %838 ]
  %877 = and i32 %874, %839
  %878 = shl i32 %877, 1
  %879 = getelementptr i32, ptr %841, i32 %878
  %880 = getelementptr i32, ptr %879, i32 1
  %881 = load i32, ptr %880, align 4
  %882 = icmp eq i32 %881, 1
  %883 = icmp ugt i32 %876, 1
  %884 = select i1 %882, i1 %883, i1 false
  br i1 %884, label %885, label %889

885:                                              ; preds = %873
  store i32 %875, ptr %880, align 4
  %886 = add i32 %876, -1
  %887 = load i32, ptr %879, align 4
  %888 = icmp ugt i32 %887, %867
  br i1 %888, label %873, label %893

889:                                              ; preds = %873
  br i1 %882, label %890, label %891

890:                                              ; preds = %889
  store i32 0, ptr %880, align 4
  store i32 0, ptr %879, align 4
  br label %891

891:                                              ; preds = %890, %889
  %892 = icmp eq i32 %875, 0
  br i1 %892, label %1036, label %893

893:                                              ; preds = %891, %885
  %894 = phi i32 [ %875, %891 ], [ %874, %885 ]
  %895 = phi i32 [ %876, %891 ], [ %886, %885 ]
  %896 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %897 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %898 = getelementptr i32, ptr %841, i32 1
  br label %899

899:                                              ; preds = %1031, %893
  %900 = phi i32 [ %894, %893 ], [ %905, %1031 ]
  %901 = phi i32 [ %895, %893 ], [ %1034, %1031 ]
  %902 = and i32 %900, %839
  %903 = shl i32 %902, 1
  %904 = getelementptr i32, ptr %898, i32 %903
  %905 = load i32, ptr %904, align 4
  %906 = load ptr, ptr %797, align 4
  %907 = load i32, ptr %799, align 4
  %908 = add i32 %907, -1
  %909 = shl nsw i32 -1, %908
  %910 = xor i32 %909, -1
  %911 = load ptr, ptr %788, align 4
  %912 = load ptr, ptr %896, align 4
  %913 = load i32, ptr %897, align 4
  %914 = icmp ugt i32 %913, %900
  %915 = select i1 %914, ptr %912, ptr %911
  %916 = getelementptr i8, ptr %915, i32 %900
  %917 = getelementptr i8, ptr %912, i32 %913
  %918 = select i1 %914, ptr %917, ptr %2
  %919 = and i32 %900, %910
  %920 = shl i32 %919, 1
  %921 = getelementptr i32, ptr %906, i32 %920
  %922 = getelementptr i32, ptr %921, i32 1
  %923 = load i32, ptr %921, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5)
  store i32 0, ptr %5, align 4
  %924 = load i32, ptr %856, align 4
  %925 = load i32, ptr %844, align 4
  %926 = shl nuw i32 1, %925
  %927 = sub i32 %900, %924
  %928 = icmp ugt i32 %927, %926
  %929 = sub i32 %900, %926
  %930 = select i1 %928, i32 %929, i32 %924
  %931 = icmp ne i32 %901, 0
  %932 = icmp ugt i32 %923, %930
  %933 = select i1 %931, i1 %932, i1 false
  br i1 %933, label %934, label %1031

934:                                              ; preds = %899
  %935 = getelementptr i8, ptr %918, i32 -3
  %936 = getelementptr i8, ptr %918, i32 -1
  br label %937

937:                                              ; preds = %1020, %934
  %938 = phi i32 [ %901, %934 ], [ %1027, %1020 ]
  %939 = phi i32 [ %923, %934 ], [ %1026, %1020 ]
  %940 = phi ptr [ %922, %934 ], [ %1024, %1020 ]
  %941 = phi ptr [ %921, %934 ], [ %1023, %1020 ]
  %942 = phi i32 [ 0, %934 ], [ %1022, %1020 ]
  %943 = phi i32 [ 0, %934 ], [ %1021, %1020 ]
  %944 = and i32 %939, %910
  %945 = shl i32 %944, 1
  %946 = getelementptr i32, ptr %906, i32 %945
  %947 = tail call i32 @llvm.umin.i32(i32 %943, i32 %942) #7
  %948 = getelementptr i8, ptr %911, i32 %939
  %949 = getelementptr i8, ptr %916, i32 %947
  %950 = getelementptr i8, ptr %948, i32 %947
  %951 = icmp ugt ptr %935, %949
  br i1 %951, label %952, label %978

952:                                              ; preds = %937
  %953 = load i32, ptr %950, align 1
  %954 = load i32, ptr %949, align 1
  %955 = xor i32 %954, %953
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %960, label %957

957:                                              ; preds = %952
  %958 = tail call i32 @llvm.cttz.i32(i32 %955, i1 true) #7, !range !8
  %959 = lshr i32 %958, 3
  br label %1004

960:                                              ; preds = %966, %952
  %961 = phi ptr [ %964, %966 ], [ %949, %952 ]
  %962 = phi ptr [ %963, %966 ], [ %950, %952 ]
  %963 = getelementptr i8, ptr %962, i32 4
  %964 = getelementptr i8, ptr %961, i32 4
  %965 = icmp ult ptr %964, %935
  br i1 %965, label %966, label %978

966:                                              ; preds = %960
  %967 = load i32, ptr %963, align 1
  %968 = load i32, ptr %964, align 1
  %969 = xor i32 %968, %967
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %960, label %971

971:                                              ; preds = %966
  %972 = tail call i32 @llvm.cttz.i32(i32 %969, i1 true) #7, !range !8
  %973 = lshr i32 %972, 3
  %974 = getelementptr i8, ptr %964, i32 %973
  %975 = ptrtoint ptr %974 to i32
  %976 = ptrtoint ptr %949 to i32
  %977 = sub i32 %975, %976
  br label %1004

978:                                              ; preds = %960, %937
  %979 = phi ptr [ %949, %937 ], [ %964, %960 ]
  %980 = phi ptr [ %950, %937 ], [ %963, %960 ]
  %981 = icmp ult ptr %979, %936
  br i1 %981, label %982, label %989

982:                                              ; preds = %978
  %983 = load i16, ptr %980, align 1
  %984 = load i16, ptr %979, align 1
  %985 = icmp eq i16 %983, %984
  br i1 %985, label %986, label %989

986:                                              ; preds = %982
  %987 = getelementptr i8, ptr %979, i32 2
  %988 = getelementptr i8, ptr %980, i32 2
  br label %989

989:                                              ; preds = %986, %982, %978
  %990 = phi ptr [ %987, %986 ], [ %979, %982 ], [ %979, %978 ]
  %991 = phi ptr [ %988, %986 ], [ %980, %982 ], [ %980, %978 ]
  %992 = icmp ult ptr %990, %918
  br i1 %992, label %993, label %999

993:                                              ; preds = %989
  %994 = load i8, ptr %991, align 1
  %995 = load i8, ptr %990, align 1
  %996 = icmp eq i8 %994, %995
  %997 = zext i1 %996 to i32
  %998 = getelementptr i8, ptr %990, i32 %997
  br label %999

999:                                              ; preds = %993, %989
  %1000 = phi ptr [ %990, %989 ], [ %998, %993 ]
  %1001 = ptrtoint ptr %1000 to i32
  %1002 = ptrtoint ptr %949 to i32
  %1003 = sub i32 %1001, %1002
  br label %1004

1004:                                             ; preds = %999, %971, %957
  %1005 = phi i32 [ %1003, %999 ], [ %959, %957 ], [ %977, %971 ]
  %1006 = add i32 %1005, %947
  %1007 = getelementptr i8, ptr %916, i32 %1006
  %1008 = icmp eq ptr %1007, %918
  br i1 %1008, label %1031, label %1009

1009:                                             ; preds = %1004
  %1010 = getelementptr i8, ptr %948, i32 %1006
  %1011 = load i8, ptr %1010, align 1
  %1012 = load i8, ptr %1007, align 1
  %1013 = icmp ult i8 %1011, %1012
  br i1 %1013, label %1014, label %1018

1014:                                             ; preds = %1009
  store i32 %939, ptr %941, align 4
  %1015 = icmp ugt i32 %939, %867
  br i1 %1015, label %1016, label %1031

1016:                                             ; preds = %1014
  %1017 = getelementptr i32, ptr %946, i32 1
  br label %1020

1018:                                             ; preds = %1009
  store i32 %939, ptr %940, align 4
  %1019 = icmp ugt i32 %939, %867
  br i1 %1019, label %1020, label %1031

1020:                                             ; preds = %1018, %1016
  %1021 = phi i32 [ %1006, %1016 ], [ %943, %1018 ]
  %1022 = phi i32 [ %942, %1016 ], [ %1006, %1018 ]
  %1023 = phi ptr [ %1017, %1016 ], [ %941, %1018 ]
  %1024 = phi ptr [ %940, %1016 ], [ %946, %1018 ]
  %1025 = phi ptr [ %1017, %1016 ], [ %946, %1018 ]
  %1026 = load i32, ptr %1025, align 4
  %1027 = add i32 %938, -1
  %1028 = icmp ne i32 %1027, 0
  %1029 = icmp ugt i32 %1026, %930
  %1030 = select i1 %1028, i1 %1029, i1 false
  br i1 %1030, label %937, label %1031

1031:                                             ; preds = %1020, %1018, %1014, %1004, %899
  %1032 = phi ptr [ %921, %899 ], [ %1023, %1020 ], [ %941, %1004 ], [ %5, %1014 ], [ %941, %1018 ]
  %1033 = phi ptr [ %922, %899 ], [ %1024, %1020 ], [ %940, %1004 ], [ %940, %1014 ], [ %5, %1018 ]
  store i32 0, ptr %1033, align 4
  store i32 0, ptr %1032, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5)
  %1034 = add i32 %901, 1
  %1035 = icmp eq i32 %905, 0
  br i1 %1035, label %1036, label %899

1036:                                             ; preds = %1031, %891, %838
  %1037 = and i32 %840, %839
  %1038 = shl i32 %1037, 1
  %1039 = getelementptr i32, ptr %841, i32 %1038
  %1040 = getelementptr i32, ptr %1039, i32 1
  %1041 = add i32 %840, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4
  %1042 = load i32, ptr %853, align 4
  store i32 %840, ptr %853, align 4
  %1043 = icmp ugt i32 %1042, %865
  br i1 %1043, label %1044, label %1170

1044:                                             ; preds = %1036
  %1045 = getelementptr i8, ptr %2, i32 -3
  %1046 = getelementptr i8, ptr %2, i32 -1
  %1047 = add i32 %840, 1
  %1048 = add i32 %840, 2
  br label %1049

1049:                                             ; preds = %1159, %1044
  %1050 = phi i32 [ 0, %1044 ], [ %1147, %1159 ]
  %1051 = phi i32 [ %1041, %1044 ], [ %1146, %1159 ]
  %1052 = phi ptr [ %1040, %1044 ], [ %1164, %1159 ]
  %1053 = phi ptr [ %1039, %1044 ], [ %1163, %1159 ]
  %1054 = phi i32 [ 0, %1044 ], [ %1162, %1159 ]
  %1055 = phi i32 [ 0, %1044 ], [ %1161, %1159 ]
  %1056 = phi i32 [ %1042, %1044 ], [ %1165, %1159 ]
  %1057 = phi i32 [ %870, %1044 ], [ %1166, %1159 ]
  %1058 = and i32 %1056, %839
  %1059 = shl i32 %1058, 1
  %1060 = getelementptr i32, ptr %841, i32 %1059
  %1061 = tail call i32 @llvm.umin.i32(i32 %1055, i32 %1054) #7
  %1062 = getelementptr i8, ptr %842, i32 %1056
  %1063 = getelementptr i8, ptr %1, i32 %1061
  %1064 = getelementptr i8, ptr %1062, i32 %1061
  %1065 = icmp ugt ptr %1045, %1063
  br i1 %1065, label %1066, label %1092

1066:                                             ; preds = %1049
  %1067 = load i32, ptr %1064, align 1
  %1068 = load i32, ptr %1063, align 1
  %1069 = xor i32 %1068, %1067
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1074, label %1071

1071:                                             ; preds = %1066
  %1072 = tail call i32 @llvm.cttz.i32(i32 %1069, i1 true) #7, !range !8
  %1073 = lshr i32 %1072, 3
  br label %1118

1074:                                             ; preds = %1080, %1066
  %1075 = phi ptr [ %1078, %1080 ], [ %1063, %1066 ]
  %1076 = phi ptr [ %1077, %1080 ], [ %1064, %1066 ]
  %1077 = getelementptr i8, ptr %1076, i32 4
  %1078 = getelementptr i8, ptr %1075, i32 4
  %1079 = icmp ult ptr %1078, %1045
  br i1 %1079, label %1080, label %1092

1080:                                             ; preds = %1074
  %1081 = load i32, ptr %1077, align 1
  %1082 = load i32, ptr %1078, align 1
  %1083 = xor i32 %1082, %1081
  %1084 = icmp eq i32 %1083, 0
  br i1 %1084, label %1074, label %1085

1085:                                             ; preds = %1080
  %1086 = tail call i32 @llvm.cttz.i32(i32 %1083, i1 true) #7, !range !8
  %1087 = lshr i32 %1086, 3
  %1088 = getelementptr i8, ptr %1078, i32 %1087
  %1089 = ptrtoint ptr %1088 to i32
  %1090 = ptrtoint ptr %1063 to i32
  %1091 = sub i32 %1089, %1090
  br label %1118

1092:                                             ; preds = %1074, %1049
  %1093 = phi ptr [ %1063, %1049 ], [ %1078, %1074 ]
  %1094 = phi ptr [ %1064, %1049 ], [ %1077, %1074 ]
  %1095 = icmp ult ptr %1093, %1046
  br i1 %1095, label %1096, label %1103

1096:                                             ; preds = %1092
  %1097 = load i16, ptr %1094, align 1
  %1098 = load i16, ptr %1093, align 1
  %1099 = icmp eq i16 %1097, %1098
  br i1 %1099, label %1100, label %1103

1100:                                             ; preds = %1096
  %1101 = getelementptr i8, ptr %1093, i32 2
  %1102 = getelementptr i8, ptr %1094, i32 2
  br label %1103

1103:                                             ; preds = %1100, %1096, %1092
  %1104 = phi ptr [ %1101, %1100 ], [ %1093, %1096 ], [ %1093, %1092 ]
  %1105 = phi ptr [ %1102, %1100 ], [ %1094, %1096 ], [ %1094, %1092 ]
  %1106 = icmp ult ptr %1104, %2
  br i1 %1106, label %1107, label %1113

1107:                                             ; preds = %1103
  %1108 = load i8, ptr %1105, align 1
  %1109 = load i8, ptr %1104, align 1
  %1110 = icmp eq i8 %1108, %1109
  %1111 = zext i1 %1110 to i32
  %1112 = getelementptr i8, ptr %1104, i32 %1111
  br label %1113

1113:                                             ; preds = %1107, %1103
  %1114 = phi ptr [ %1104, %1103 ], [ %1112, %1107 ]
  %1115 = ptrtoint ptr %1114 to i32
  %1116 = ptrtoint ptr %1063 to i32
  %1117 = sub i32 %1115, %1116
  br label %1118

1118:                                             ; preds = %1113, %1085, %1071
  %1119 = phi i32 [ %1117, %1113 ], [ %1073, %1071 ], [ %1091, %1085 ]
  %1120 = add i32 %1119, %1061
  %1121 = icmp ugt i32 %1120, %1050
  br i1 %1121, label %1122, label %1145

1122:                                             ; preds = %1118
  %1123 = sub i32 %1051, %1056
  %1124 = icmp ugt i32 %1120, %1123
  %1125 = add i32 %1120, %1056
  %1126 = select i1 %1124, i32 %1125, i32 %1051
  %1127 = sub i32 %1120, %1050
  %1128 = shl i32 %1127, 2
  %1129 = sub i32 %1047, %1056
  %1130 = tail call i32 @llvm.ctlz.i32(i32 %1129, i1 false) #7, !range !8
  %1131 = xor i32 %1130, 31
  %1132 = load i32, ptr %3, align 4
  %1133 = add i32 %1132, 1
  %1134 = tail call i32 @llvm.ctlz.i32(i32 %1133, i1 false) #7, !range !8
  %1135 = xor i32 %1134, -32
  %1136 = add nuw nsw i32 %1131, 1
  %1137 = add nsw i32 %1136, %1135
  %1138 = icmp sgt i32 %1128, %1137
  br i1 %1138, label %1139, label %1141

1139:                                             ; preds = %1122
  %1140 = sub i32 %1048, %1056
  store i32 %1140, ptr %3, align 4
  br label %1141

1141:                                             ; preds = %1139, %1122
  %1142 = phi i32 [ %1120, %1139 ], [ %1050, %1122 ]
  %1143 = getelementptr i8, ptr %1, i32 %1120
  %1144 = icmp eq ptr %1143, %2
  br i1 %1144, label %1170, label %1145

1145:                                             ; preds = %1141, %1118
  %1146 = phi i32 [ %1126, %1141 ], [ %1051, %1118 ]
  %1147 = phi i32 [ %1142, %1141 ], [ %1050, %1118 ]
  %1148 = getelementptr i8, ptr %1062, i32 %1120
  %1149 = load i8, ptr %1148, align 1
  %1150 = getelementptr i8, ptr %1, i32 %1120
  %1151 = load i8, ptr %1150, align 1
  %1152 = icmp ult i8 %1149, %1151
  br i1 %1152, label %1153, label %1157

1153:                                             ; preds = %1145
  store i32 %1056, ptr %1053, align 4
  %1154 = icmp ugt i32 %1056, %866
  br i1 %1154, label %1155, label %1170

1155:                                             ; preds = %1153
  %1156 = getelementptr i32, ptr %1060, i32 1
  br label %1159

1157:                                             ; preds = %1145
  store i32 %1056, ptr %1052, align 4
  %1158 = icmp ugt i32 %1056, %866
  br i1 %1158, label %1159, label %1170

1159:                                             ; preds = %1157, %1155
  %1160 = phi ptr [ %1156, %1155 ], [ %1060, %1157 ]
  %1161 = phi i32 [ %1120, %1155 ], [ %1055, %1157 ]
  %1162 = phi i32 [ %1054, %1155 ], [ %1120, %1157 ]
  %1163 = phi ptr [ %1156, %1155 ], [ %1053, %1157 ]
  %1164 = phi ptr [ %1052, %1155 ], [ %1060, %1157 ]
  %1165 = load i32, ptr %1160, align 4
  %1166 = add i32 %1057, -1
  %1167 = icmp ne i32 %1166, 0
  %1168 = icmp ugt i32 %1165, %865
  %1169 = select i1 %1167, i1 %1168, i1 false
  br i1 %1169, label %1049, label %1170

1170:                                             ; preds = %1159, %1157, %1153, %1141, %1036
  %1171 = phi ptr [ %1039, %1036 ], [ %1053, %1141 ], [ %1163, %1159 ], [ %6, %1153 ], [ %1053, %1157 ]
  %1172 = phi ptr [ %1040, %1036 ], [ %1052, %1141 ], [ %1164, %1159 ], [ %1052, %1153 ], [ %6, %1157 ]
  %1173 = phi i32 [ %1041, %1036 ], [ %1126, %1141 ], [ %1146, %1159 ], [ %1146, %1153 ], [ %1146, %1157 ]
  %1174 = phi i32 [ 0, %1036 ], [ %1142, %1141 ], [ %1147, %1159 ], [ %1147, %1153 ], [ %1147, %1157 ]
  store i32 0, ptr %1172, align 4
  store i32 0, ptr %1171, align 4
  %1175 = add i32 %1173, -8
  store i32 %1175, ptr %790, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  br label %1176

1176:                                             ; preds = %1170, %787, %781, %398, %392, %13
  %1177 = phi i32 [ %396, %392 ], [ 0, %13 ], [ %785, %781 ], [ 0, %398 ], [ %1174, %1170 ], [ 0, %787 ]
  ret i32 %1177
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ZSTD_HcFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2, ptr nocapture noundef writeonly %3) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %6 = load i32, ptr %5, align 4
  switch i32 %6, label %7 [
    i32 6, label %698
    i32 5, label %349
    i32 7, label %698
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %9 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = shl nuw i32 1, %12
  %14 = add i32 %13, -1
  %15 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr i8, ptr %16, i32 %18
  %20 = ptrtoint ptr %1 to i32
  %21 = ptrtoint ptr %16 to i32
  %22 = sub i32 %20, %21
  %23 = load i32, ptr %8, align 4
  %24 = shl nuw i32 1, %23
  %25 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %26 = load i32, ptr %25, align 4
  %27 = sub i32 %22, %26
  %28 = icmp ugt i32 %27, %24
  %29 = sub i32 %22, %24
  %30 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, i1 %28, i1 false
  %34 = select i1 %33, i32 %29, i32 %26
  %35 = tail call i32 @llvm.usub.sat.i32(i32 %22, i32 %13) #7
  %36 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = shl nuw i32 1, %37
  %39 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %42 = load ptr, ptr %41, align 4
  %43 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %44 = load i32, ptr %43, align 4
  %45 = shl nsw i32 -1, %12
  %46 = xor i32 %45, -1
  %47 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %48 = load i32, ptr %47, align 4
  %49 = icmp ult i32 %48, %22
  %50 = sub i32 32, %44
  br i1 %49, label %51, label %63

51:                                               ; preds = %51, %7
  %52 = phi i32 [ %61, %51 ], [ %48, %7 ]
  %53 = getelementptr i8, ptr %16, i32 %52
  %54 = load i32, ptr %53, align 1
  %55 = mul i32 %54, -1640531535
  %56 = lshr i32 %55, %50
  %57 = getelementptr i32, ptr %42, i32 %56
  %58 = load i32, ptr %57, align 4
  %59 = and i32 %52, %46
  %60 = getelementptr i32, ptr %10, i32 %59
  store i32 %58, ptr %60, align 4
  store i32 %52, ptr %57, align 4
  %61 = add nuw i32 %52, 1
  %62 = icmp ult i32 %61, %22
  br i1 %62, label %51, label %63

63:                                               ; preds = %51, %7
  store i32 %22, ptr %47, align 4
  %64 = load i32, ptr %1, align 1
  %65 = mul i32 %64, -1640531535
  %66 = lshr i32 %65, %50
  %67 = getelementptr i32, ptr %42, i32 %66
  %68 = load i32, ptr %67, align 4
  %69 = icmp ult i32 %68, %34
  br i1 %69, label %159, label %70

70:                                               ; preds = %63
  %71 = getelementptr i8, ptr %2, i32 -3
  %72 = icmp ugt ptr %71, %1
  %73 = getelementptr i8, ptr %2, i32 -1
  %74 = add i32 %22, 2
  br label %75

75:                                               ; preds = %146, %70
  %76 = phi i32 [ %68, %70 ], [ %150, %146 ]
  %77 = phi i32 [ 3, %70 ], [ %144, %146 ]
  %78 = phi i32 [ %38, %70 ], [ %149, %146 ]
  %79 = getelementptr i8, ptr %16, i32 %76
  %80 = getelementptr i8, ptr %79, i32 %77
  %81 = load i8, ptr %80, align 1
  %82 = getelementptr i8, ptr %1, i32 %77
  %83 = load i8, ptr %82, align 1
  %84 = icmp eq i8 %81, %83
  br i1 %84, label %85, label %143

85:                                               ; preds = %75
  br i1 %72, label %86, label %111

86:                                               ; preds = %85
  %87 = load i32, ptr %79, align 1
  %88 = load i32, ptr %1, align 1
  %89 = xor i32 %88, %87
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = tail call i32 @llvm.cttz.i32(i32 %89, i1 true) #7, !range !8
  %93 = lshr i32 %92, 3
  br label %136

94:                                               ; preds = %100, %86
  %95 = phi ptr [ %98, %100 ], [ %1, %86 ]
  %96 = phi ptr [ %97, %100 ], [ %79, %86 ]
  %97 = getelementptr i8, ptr %96, i32 4
  %98 = getelementptr i8, ptr %95, i32 4
  %99 = icmp ult ptr %98, %71
  br i1 %99, label %100, label %111

100:                                              ; preds = %94
  %101 = load i32, ptr %97, align 1
  %102 = load i32, ptr %98, align 1
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %94, label %105

105:                                              ; preds = %100
  %106 = tail call i32 @llvm.cttz.i32(i32 %103, i1 true) #7, !range !8
  %107 = lshr i32 %106, 3
  %108 = getelementptr i8, ptr %98, i32 %107
  %109 = ptrtoint ptr %108 to i32
  %110 = sub i32 %109, %20
  br label %136

111:                                              ; preds = %94, %85
  %112 = phi ptr [ %1, %85 ], [ %98, %94 ]
  %113 = phi ptr [ %79, %85 ], [ %97, %94 ]
  %114 = icmp ult ptr %112, %73
  br i1 %114, label %115, label %122

115:                                              ; preds = %111
  %116 = load i16, ptr %113, align 1
  %117 = load i16, ptr %112, align 1
  %118 = icmp eq i16 %116, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %115
  %120 = getelementptr i8, ptr %112, i32 2
  %121 = getelementptr i8, ptr %113, i32 2
  br label %122

122:                                              ; preds = %119, %115, %111
  %123 = phi ptr [ %120, %119 ], [ %112, %115 ], [ %112, %111 ]
  %124 = phi ptr [ %121, %119 ], [ %113, %115 ], [ %113, %111 ]
  %125 = icmp ult ptr %123, %2
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = load i8, ptr %124, align 1
  %128 = load i8, ptr %123, align 1
  %129 = icmp eq i8 %127, %128
  %130 = zext i1 %129 to i32
  %131 = getelementptr i8, ptr %123, i32 %130
  br label %132

132:                                              ; preds = %126, %122
  %133 = phi ptr [ %123, %122 ], [ %131, %126 ]
  %134 = ptrtoint ptr %133 to i32
  %135 = sub i32 %134, %20
  br label %136

136:                                              ; preds = %132, %105, %91
  %137 = phi i32 [ %135, %132 ], [ %93, %91 ], [ %110, %105 ]
  %138 = icmp ugt i32 %137, %77
  br i1 %138, label %139, label %143

139:                                              ; preds = %136
  %140 = sub i32 %74, %76
  store i32 %140, ptr %3, align 4
  %141 = getelementptr i8, ptr %1, i32 %137
  %142 = icmp eq ptr %141, %2
  br i1 %142, label %154, label %143

143:                                              ; preds = %139, %136, %75
  %144 = phi i32 [ %137, %139 ], [ %77, %136 ], [ %77, %75 ]
  %145 = icmp ugt i32 %76, %35
  br i1 %145, label %146, label %154

146:                                              ; preds = %143
  %147 = and i32 %76, %14
  %148 = getelementptr i32, ptr %10, i32 %147
  %149 = add i32 %78, -1
  %150 = load i32, ptr %148, align 4
  %151 = icmp uge i32 %150, %34
  %152 = icmp ne i32 %149, 0
  %153 = and i1 %152, %151
  br i1 %153, label %75, label %154

154:                                              ; preds = %146, %143, %139
  %155 = phi i32 [ %78, %143 ], [ %78, %139 ], [ %149, %146 ]
  %156 = phi i32 [ %144, %143 ], [ %137, %139 ], [ %144, %146 ]
  %157 = load i32, ptr %1, align 1
  %158 = mul i32 %157, -1640531535
  br label %159

159:                                              ; preds = %154, %63
  %160 = phi i32 [ %158, %154 ], [ %65, %63 ]
  %161 = phi i32 [ %157, %154 ], [ %64, %63 ]
  %162 = phi i32 [ %155, %154 ], [ %38, %63 ]
  %163 = phi i32 [ %156, %154 ], [ 3, %63 ]
  %164 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 6
  %165 = load ptr, ptr %164, align 4
  %166 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 10, i32 1
  %167 = load i32, ptr %166, align 4
  %168 = shl nuw i32 1, %167
  %169 = add i32 %168, -1
  %170 = getelementptr inbounds %struct.ZSTD_window_t, ptr %40, i32 0, i32 3
  %171 = load i32, ptr %170, align 4
  %172 = getelementptr inbounds %struct.ZSTD_window_t, ptr %40, i32 0, i32 1
  %173 = load ptr, ptr %172, align 4
  %174 = load ptr, ptr %40, align 4
  %175 = ptrtoint ptr %174 to i32
  %176 = ptrtoint ptr %173 to i32
  %177 = sub i32 %175, %176
  %178 = tail call i32 @llvm.usub.sat.i32(i32 %177, i32 %168) #7
  %179 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 4
  %180 = load ptr, ptr %179, align 4
  %181 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 10, i32 2
  %182 = load i32, ptr %181, align 4
  %183 = sub i32 32, %182
  %184 = lshr i32 %160, %183
  %185 = getelementptr i32, ptr %180, i32 %184
  %186 = load i32, ptr %185, align 4
  %187 = icmp uge i32 %186, %171
  %188 = icmp ne i32 %162, 0
  %189 = and i1 %188, %187
  br i1 %189, label %190, label %1047

190:                                              ; preds = %159
  %191 = getelementptr i8, ptr %1, i32 4
  %192 = ptrtoint ptr %191 to i32
  %193 = getelementptr i8, ptr %2, i32 -3
  %194 = getelementptr i8, ptr %2, i32 -1
  %195 = sub i32 2, %18
  %196 = add i32 %195, %22
  %197 = add i32 %196, %177
  br label %198

198:                                              ; preds = %347, %190
  %199 = phi i32 [ %161, %190 ], [ %348, %347 ]
  %200 = phi i32 [ %186, %190 ], [ %343, %347 ]
  %201 = phi i32 [ %163, %190 ], [ %337, %347 ]
  %202 = phi i32 [ %162, %190 ], [ %342, %347 ]
  %203 = getelementptr i8, ptr %173, i32 %200
  %204 = load i32, ptr %203, align 1
  %205 = icmp eq i32 %204, %199
  br i1 %205, label %206, label %336

206:                                              ; preds = %198
  %207 = getelementptr i8, ptr %203, i32 4
  %208 = ptrtoint ptr %207 to i32
  %209 = sub i32 %175, %208
  %210 = getelementptr i8, ptr %191, i32 %209
  %211 = icmp ult ptr %210, %2
  %212 = select i1 %211, ptr %210, ptr %2
  %213 = getelementptr i8, ptr %212, i32 -3
  %214 = icmp ugt ptr %213, %191
  br i1 %214, label %215, label %240

215:                                              ; preds = %206
  %216 = load i32, ptr %207, align 1
  %217 = load i32, ptr %191, align 1
  %218 = xor i32 %217, %216
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %223, label %220

220:                                              ; preds = %215
  %221 = tail call i32 @llvm.cttz.i32(i32 %218, i1 true) #7, !range !8
  %222 = lshr i32 %221, 3
  br label %266

223:                                              ; preds = %229, %215
  %224 = phi ptr [ %227, %229 ], [ %191, %215 ]
  %225 = phi ptr [ %226, %229 ], [ %207, %215 ]
  %226 = getelementptr i8, ptr %225, i32 4
  %227 = getelementptr i8, ptr %224, i32 4
  %228 = icmp ult ptr %227, %213
  br i1 %228, label %229, label %240

229:                                              ; preds = %223
  %230 = load i32, ptr %226, align 1
  %231 = load i32, ptr %227, align 1
  %232 = xor i32 %231, %230
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %223, label %234

234:                                              ; preds = %229
  %235 = tail call i32 @llvm.cttz.i32(i32 %232, i1 true) #7, !range !8
  %236 = lshr i32 %235, 3
  %237 = getelementptr i8, ptr %227, i32 %236
  %238 = ptrtoint ptr %237 to i32
  %239 = sub i32 %238, %192
  br label %266

240:                                              ; preds = %223, %206
  %241 = phi ptr [ %191, %206 ], [ %227, %223 ]
  %242 = phi ptr [ %207, %206 ], [ %226, %223 ]
  %243 = getelementptr i8, ptr %212, i32 -1
  %244 = icmp ult ptr %241, %243
  br i1 %244, label %245, label %252

245:                                              ; preds = %240
  %246 = load i16, ptr %242, align 1
  %247 = load i16, ptr %241, align 1
  %248 = icmp eq i16 %246, %247
  br i1 %248, label %249, label %252

249:                                              ; preds = %245
  %250 = getelementptr i8, ptr %241, i32 2
  %251 = getelementptr i8, ptr %242, i32 2
  br label %252

252:                                              ; preds = %249, %245, %240
  %253 = phi ptr [ %250, %249 ], [ %241, %245 ], [ %241, %240 ]
  %254 = phi ptr [ %251, %249 ], [ %242, %245 ], [ %242, %240 ]
  %255 = icmp ult ptr %253, %212
  br i1 %255, label %256, label %262

256:                                              ; preds = %252
  %257 = load i8, ptr %254, align 1
  %258 = load i8, ptr %253, align 1
  %259 = icmp eq i8 %257, %258
  %260 = zext i1 %259 to i32
  %261 = getelementptr i8, ptr %253, i32 %260
  br label %262

262:                                              ; preds = %256, %252
  %263 = phi ptr [ %253, %252 ], [ %261, %256 ]
  %264 = ptrtoint ptr %263 to i32
  %265 = sub i32 %264, %192
  br label %266

266:                                              ; preds = %262, %234, %220
  %267 = phi i32 [ %265, %262 ], [ %222, %220 ], [ %239, %234 ]
  %268 = getelementptr i8, ptr %207, i32 %267
  %269 = icmp eq ptr %268, %174
  br i1 %269, label %270, label %328

270:                                              ; preds = %266
  %271 = getelementptr i8, ptr %191, i32 %267
  %272 = icmp ugt ptr %193, %271
  br i1 %272, label %273, label %299

273:                                              ; preds = %270
  %274 = load i32, ptr %19, align 1
  %275 = load i32, ptr %271, align 1
  %276 = xor i32 %275, %274
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %281, label %278

278:                                              ; preds = %273
  %279 = tail call i32 @llvm.cttz.i32(i32 %276, i1 true) #7, !range !8
  %280 = lshr i32 %279, 3
  br label %325

281:                                              ; preds = %287, %273
  %282 = phi ptr [ %285, %287 ], [ %271, %273 ]
  %283 = phi ptr [ %284, %287 ], [ %19, %273 ]
  %284 = getelementptr i8, ptr %283, i32 4
  %285 = getelementptr i8, ptr %282, i32 4
  %286 = icmp ult ptr %285, %193
  br i1 %286, label %287, label %299

287:                                              ; preds = %281
  %288 = load i32, ptr %284, align 1
  %289 = load i32, ptr %285, align 1
  %290 = xor i32 %289, %288
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %281, label %292

292:                                              ; preds = %287
  %293 = tail call i32 @llvm.cttz.i32(i32 %290, i1 true) #7, !range !8
  %294 = lshr i32 %293, 3
  %295 = getelementptr i8, ptr %285, i32 %294
  %296 = ptrtoint ptr %295 to i32
  %297 = ptrtoint ptr %271 to i32
  %298 = sub i32 %296, %297
  br label %325

299:                                              ; preds = %281, %270
  %300 = phi ptr [ %271, %270 ], [ %285, %281 ]
  %301 = phi ptr [ %19, %270 ], [ %284, %281 ]
  %302 = icmp ult ptr %300, %194
  br i1 %302, label %303, label %310

303:                                              ; preds = %299
  %304 = load i16, ptr %301, align 1
  %305 = load i16, ptr %300, align 1
  %306 = icmp eq i16 %304, %305
  br i1 %306, label %307, label %310

307:                                              ; preds = %303
  %308 = getelementptr i8, ptr %300, i32 2
  %309 = getelementptr i8, ptr %301, i32 2
  br label %310

310:                                              ; preds = %307, %303, %299
  %311 = phi ptr [ %308, %307 ], [ %300, %303 ], [ %300, %299 ]
  %312 = phi ptr [ %309, %307 ], [ %301, %303 ], [ %301, %299 ]
  %313 = icmp ult ptr %311, %2
  br i1 %313, label %314, label %320

314:                                              ; preds = %310
  %315 = load i8, ptr %312, align 1
  %316 = load i8, ptr %311, align 1
  %317 = icmp eq i8 %315, %316
  %318 = zext i1 %317 to i32
  %319 = getelementptr i8, ptr %311, i32 %318
  br label %320

320:                                              ; preds = %314, %310
  %321 = phi ptr [ %311, %310 ], [ %319, %314 ]
  %322 = ptrtoint ptr %321 to i32
  %323 = ptrtoint ptr %271 to i32
  %324 = sub i32 %322, %323
  br label %325

325:                                              ; preds = %320, %292, %278
  %326 = phi i32 [ %324, %320 ], [ %280, %278 ], [ %298, %292 ]
  %327 = add i32 %326, %267
  br label %328

328:                                              ; preds = %325, %266
  %329 = phi i32 [ %327, %325 ], [ %267, %266 ]
  %330 = add i32 %329, 4
  %331 = icmp ugt i32 %330, %201
  br i1 %331, label %332, label %336

332:                                              ; preds = %328
  %333 = sub i32 %197, %200
  store i32 %333, ptr %3, align 4
  %334 = getelementptr i8, ptr %1, i32 %330
  %335 = icmp eq ptr %334, %2
  br i1 %335, label %1047, label %336

336:                                              ; preds = %332, %328, %198
  %337 = phi i32 [ %330, %332 ], [ %201, %328 ], [ %201, %198 ]
  %338 = icmp ugt i32 %200, %178
  br i1 %338, label %339, label %1047

339:                                              ; preds = %336
  %340 = and i32 %200, %169
  %341 = getelementptr i32, ptr %165, i32 %340
  %342 = add i32 %202, -1
  %343 = load i32, ptr %341, align 4
  %344 = icmp uge i32 %343, %171
  %345 = icmp ne i32 %342, 0
  %346 = and i1 %345, %344
  br i1 %346, label %347, label %1047

347:                                              ; preds = %339
  %348 = load i32, ptr %1, align 1
  br label %198

349:                                              ; preds = %4
  %350 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %351 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %352 = load ptr, ptr %351, align 4
  %353 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %354 = load i32, ptr %353, align 4
  %355 = shl nuw i32 1, %354
  %356 = add i32 %355, -1
  %357 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %358 = load ptr, ptr %357, align 4
  %359 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %360 = load i32, ptr %359, align 4
  %361 = getelementptr i8, ptr %358, i32 %360
  %362 = ptrtoint ptr %1 to i32
  %363 = ptrtoint ptr %358 to i32
  %364 = sub i32 %362, %363
  %365 = load i32, ptr %350, align 4
  %366 = shl nuw i32 1, %365
  %367 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %368 = load i32, ptr %367, align 4
  %369 = sub i32 %364, %368
  %370 = icmp ugt i32 %369, %366
  %371 = sub i32 %364, %366
  %372 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %373 = load i32, ptr %372, align 4
  %374 = icmp eq i32 %373, 0
  %375 = select i1 %374, i1 %370, i1 false
  %376 = select i1 %375, i32 %371, i32 %368
  %377 = tail call i32 @llvm.usub.sat.i32(i32 %364, i32 %355) #7
  %378 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %379 = load i32, ptr %378, align 4
  %380 = shl nuw i32 1, %379
  %381 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %382 = load ptr, ptr %381, align 4
  %383 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %384 = load ptr, ptr %383, align 4
  %385 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %386 = load i32, ptr %385, align 4
  %387 = shl nsw i32 -1, %354
  %388 = xor i32 %387, -1
  %389 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %390 = load i32, ptr %389, align 4
  %391 = icmp ult i32 %390, %364
  %392 = sub i32 64, %386
  %393 = zext i32 %392 to i64
  br i1 %391, label %394, label %407

394:                                              ; preds = %394, %349
  %395 = phi i32 [ %405, %394 ], [ %390, %349 ]
  %396 = getelementptr i8, ptr %358, i32 %395
  %397 = load i64, ptr %396, align 1
  %398 = mul i64 %397, -3523014627271114752
  %399 = lshr i64 %398, %393
  %400 = trunc i64 %399 to i32
  %401 = getelementptr i32, ptr %384, i32 %400
  %402 = load i32, ptr %401, align 4
  %403 = and i32 %395, %388
  %404 = getelementptr i32, ptr %352, i32 %403
  store i32 %402, ptr %404, align 4
  store i32 %395, ptr %401, align 4
  %405 = add nuw i32 %395, 1
  %406 = icmp ult i32 %405, %364
  br i1 %406, label %394, label %407

407:                                              ; preds = %394, %349
  store i32 %364, ptr %389, align 4
  %408 = load i64, ptr %1, align 1
  %409 = mul i64 %408, -3523014627271114752
  %410 = lshr i64 %409, %393
  %411 = trunc i64 %410 to i32
  %412 = getelementptr i32, ptr %384, i32 %411
  %413 = load i32, ptr %412, align 4
  %414 = icmp ult i32 %413, %376
  %415 = trunc i64 %408 to i32
  br i1 %414, label %506, label %416

416:                                              ; preds = %407
  %417 = getelementptr i8, ptr %2, i32 -3
  %418 = icmp ugt ptr %417, %1
  %419 = getelementptr i8, ptr %2, i32 -1
  %420 = add i32 %364, 2
  br label %421

421:                                              ; preds = %492, %416
  %422 = phi i32 [ %413, %416 ], [ %496, %492 ]
  %423 = phi i32 [ 3, %416 ], [ %490, %492 ]
  %424 = phi i32 [ %380, %416 ], [ %495, %492 ]
  %425 = getelementptr i8, ptr %358, i32 %422
  %426 = getelementptr i8, ptr %425, i32 %423
  %427 = load i8, ptr %426, align 1
  %428 = getelementptr i8, ptr %1, i32 %423
  %429 = load i8, ptr %428, align 1
  %430 = icmp eq i8 %427, %429
  br i1 %430, label %431, label %489

431:                                              ; preds = %421
  br i1 %418, label %432, label %457

432:                                              ; preds = %431
  %433 = load i32, ptr %425, align 1
  %434 = load i32, ptr %1, align 1
  %435 = xor i32 %434, %433
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %440, label %437

437:                                              ; preds = %432
  %438 = tail call i32 @llvm.cttz.i32(i32 %435, i1 true) #7, !range !8
  %439 = lshr i32 %438, 3
  br label %482

440:                                              ; preds = %446, %432
  %441 = phi ptr [ %444, %446 ], [ %1, %432 ]
  %442 = phi ptr [ %443, %446 ], [ %425, %432 ]
  %443 = getelementptr i8, ptr %442, i32 4
  %444 = getelementptr i8, ptr %441, i32 4
  %445 = icmp ult ptr %444, %417
  br i1 %445, label %446, label %457

446:                                              ; preds = %440
  %447 = load i32, ptr %443, align 1
  %448 = load i32, ptr %444, align 1
  %449 = xor i32 %448, %447
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %440, label %451

451:                                              ; preds = %446
  %452 = tail call i32 @llvm.cttz.i32(i32 %449, i1 true) #7, !range !8
  %453 = lshr i32 %452, 3
  %454 = getelementptr i8, ptr %444, i32 %453
  %455 = ptrtoint ptr %454 to i32
  %456 = sub i32 %455, %362
  br label %482

457:                                              ; preds = %440, %431
  %458 = phi ptr [ %1, %431 ], [ %444, %440 ]
  %459 = phi ptr [ %425, %431 ], [ %443, %440 ]
  %460 = icmp ult ptr %458, %419
  br i1 %460, label %461, label %468

461:                                              ; preds = %457
  %462 = load i16, ptr %459, align 1
  %463 = load i16, ptr %458, align 1
  %464 = icmp eq i16 %462, %463
  br i1 %464, label %465, label %468

465:                                              ; preds = %461
  %466 = getelementptr i8, ptr %458, i32 2
  %467 = getelementptr i8, ptr %459, i32 2
  br label %468

468:                                              ; preds = %465, %461, %457
  %469 = phi ptr [ %466, %465 ], [ %458, %461 ], [ %458, %457 ]
  %470 = phi ptr [ %467, %465 ], [ %459, %461 ], [ %459, %457 ]
  %471 = icmp ult ptr %469, %2
  br i1 %471, label %472, label %478

472:                                              ; preds = %468
  %473 = load i8, ptr %470, align 1
  %474 = load i8, ptr %469, align 1
  %475 = icmp eq i8 %473, %474
  %476 = zext i1 %475 to i32
  %477 = getelementptr i8, ptr %469, i32 %476
  br label %478

478:                                              ; preds = %472, %468
  %479 = phi ptr [ %469, %468 ], [ %477, %472 ]
  %480 = ptrtoint ptr %479 to i32
  %481 = sub i32 %480, %362
  br label %482

482:                                              ; preds = %478, %451, %437
  %483 = phi i32 [ %481, %478 ], [ %439, %437 ], [ %456, %451 ]
  %484 = icmp ugt i32 %483, %423
  br i1 %484, label %485, label %489

485:                                              ; preds = %482
  %486 = sub i32 %420, %422
  store i32 %486, ptr %3, align 4
  %487 = getelementptr i8, ptr %1, i32 %483
  %488 = icmp eq ptr %487, %2
  br i1 %488, label %500, label %489

489:                                              ; preds = %485, %482, %421
  %490 = phi i32 [ %483, %485 ], [ %423, %482 ], [ %423, %421 ]
  %491 = icmp ugt i32 %422, %377
  br i1 %491, label %492, label %500

492:                                              ; preds = %489
  %493 = and i32 %422, %356
  %494 = getelementptr i32, ptr %352, i32 %493
  %495 = add i32 %424, -1
  %496 = load i32, ptr %494, align 4
  %497 = icmp uge i32 %496, %376
  %498 = icmp ne i32 %495, 0
  %499 = and i1 %498, %497
  br i1 %499, label %421, label %500

500:                                              ; preds = %492, %489, %485
  %501 = phi i32 [ %424, %489 ], [ %424, %485 ], [ %495, %492 ]
  %502 = phi i32 [ %490, %489 ], [ %483, %485 ], [ %490, %492 ]
  %503 = load i64, ptr %1, align 1
  %504 = mul i64 %503, -3523014627271114752
  %505 = trunc i64 %503 to i32
  br label %506

506:                                              ; preds = %500, %407
  %507 = phi i64 [ %504, %500 ], [ %409, %407 ]
  %508 = phi i32 [ %505, %500 ], [ %415, %407 ]
  %509 = phi i32 [ %501, %500 ], [ %380, %407 ]
  %510 = phi i32 [ %502, %500 ], [ 3, %407 ]
  %511 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %382, i32 0, i32 6
  %512 = load ptr, ptr %511, align 4
  %513 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %382, i32 0, i32 10, i32 1
  %514 = load i32, ptr %513, align 4
  %515 = shl nuw i32 1, %514
  %516 = add i32 %515, -1
  %517 = getelementptr inbounds %struct.ZSTD_window_t, ptr %382, i32 0, i32 3
  %518 = load i32, ptr %517, align 4
  %519 = getelementptr inbounds %struct.ZSTD_window_t, ptr %382, i32 0, i32 1
  %520 = load ptr, ptr %519, align 4
  %521 = load ptr, ptr %382, align 4
  %522 = ptrtoint ptr %521 to i32
  %523 = ptrtoint ptr %520 to i32
  %524 = sub i32 %522, %523
  %525 = tail call i32 @llvm.usub.sat.i32(i32 %524, i32 %515) #7
  %526 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %382, i32 0, i32 4
  %527 = load ptr, ptr %526, align 4
  %528 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %382, i32 0, i32 10, i32 2
  %529 = load i32, ptr %528, align 4
  %530 = sub i32 64, %529
  %531 = zext i32 %530 to i64
  %532 = lshr i64 %507, %531
  %533 = trunc i64 %532 to i32
  %534 = getelementptr i32, ptr %527, i32 %533
  %535 = load i32, ptr %534, align 4
  %536 = icmp uge i32 %535, %518
  %537 = icmp ne i32 %509, 0
  %538 = and i1 %537, %536
  br i1 %538, label %539, label %1047

539:                                              ; preds = %506
  %540 = getelementptr i8, ptr %1, i32 4
  %541 = ptrtoint ptr %540 to i32
  %542 = getelementptr i8, ptr %2, i32 -3
  %543 = getelementptr i8, ptr %2, i32 -1
  %544 = sub i32 2, %360
  %545 = add i32 %544, %364
  %546 = add i32 %545, %524
  br label %547

547:                                              ; preds = %696, %539
  %548 = phi i32 [ %508, %539 ], [ %697, %696 ]
  %549 = phi i32 [ %535, %539 ], [ %692, %696 ]
  %550 = phi i32 [ %510, %539 ], [ %686, %696 ]
  %551 = phi i32 [ %509, %539 ], [ %691, %696 ]
  %552 = getelementptr i8, ptr %520, i32 %549
  %553 = load i32, ptr %552, align 1
  %554 = icmp eq i32 %553, %548
  br i1 %554, label %555, label %685

555:                                              ; preds = %547
  %556 = getelementptr i8, ptr %552, i32 4
  %557 = ptrtoint ptr %556 to i32
  %558 = sub i32 %522, %557
  %559 = getelementptr i8, ptr %540, i32 %558
  %560 = icmp ult ptr %559, %2
  %561 = select i1 %560, ptr %559, ptr %2
  %562 = getelementptr i8, ptr %561, i32 -3
  %563 = icmp ugt ptr %562, %540
  br i1 %563, label %564, label %589

564:                                              ; preds = %555
  %565 = load i32, ptr %556, align 1
  %566 = load i32, ptr %540, align 1
  %567 = xor i32 %566, %565
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %572, label %569

569:                                              ; preds = %564
  %570 = tail call i32 @llvm.cttz.i32(i32 %567, i1 true) #7, !range !8
  %571 = lshr i32 %570, 3
  br label %615

572:                                              ; preds = %578, %564
  %573 = phi ptr [ %576, %578 ], [ %540, %564 ]
  %574 = phi ptr [ %575, %578 ], [ %556, %564 ]
  %575 = getelementptr i8, ptr %574, i32 4
  %576 = getelementptr i8, ptr %573, i32 4
  %577 = icmp ult ptr %576, %562
  br i1 %577, label %578, label %589

578:                                              ; preds = %572
  %579 = load i32, ptr %575, align 1
  %580 = load i32, ptr %576, align 1
  %581 = xor i32 %580, %579
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %572, label %583

583:                                              ; preds = %578
  %584 = tail call i32 @llvm.cttz.i32(i32 %581, i1 true) #7, !range !8
  %585 = lshr i32 %584, 3
  %586 = getelementptr i8, ptr %576, i32 %585
  %587 = ptrtoint ptr %586 to i32
  %588 = sub i32 %587, %541
  br label %615

589:                                              ; preds = %572, %555
  %590 = phi ptr [ %540, %555 ], [ %576, %572 ]
  %591 = phi ptr [ %556, %555 ], [ %575, %572 ]
  %592 = getelementptr i8, ptr %561, i32 -1
  %593 = icmp ult ptr %590, %592
  br i1 %593, label %594, label %601

594:                                              ; preds = %589
  %595 = load i16, ptr %591, align 1
  %596 = load i16, ptr %590, align 1
  %597 = icmp eq i16 %595, %596
  br i1 %597, label %598, label %601

598:                                              ; preds = %594
  %599 = getelementptr i8, ptr %590, i32 2
  %600 = getelementptr i8, ptr %591, i32 2
  br label %601

601:                                              ; preds = %598, %594, %589
  %602 = phi ptr [ %599, %598 ], [ %590, %594 ], [ %590, %589 ]
  %603 = phi ptr [ %600, %598 ], [ %591, %594 ], [ %591, %589 ]
  %604 = icmp ult ptr %602, %561
  br i1 %604, label %605, label %611

605:                                              ; preds = %601
  %606 = load i8, ptr %603, align 1
  %607 = load i8, ptr %602, align 1
  %608 = icmp eq i8 %606, %607
  %609 = zext i1 %608 to i32
  %610 = getelementptr i8, ptr %602, i32 %609
  br label %611

611:                                              ; preds = %605, %601
  %612 = phi ptr [ %602, %601 ], [ %610, %605 ]
  %613 = ptrtoint ptr %612 to i32
  %614 = sub i32 %613, %541
  br label %615

615:                                              ; preds = %611, %583, %569
  %616 = phi i32 [ %614, %611 ], [ %571, %569 ], [ %588, %583 ]
  %617 = getelementptr i8, ptr %556, i32 %616
  %618 = icmp eq ptr %617, %521
  br i1 %618, label %619, label %677

619:                                              ; preds = %615
  %620 = getelementptr i8, ptr %540, i32 %616
  %621 = icmp ugt ptr %542, %620
  br i1 %621, label %622, label %648

622:                                              ; preds = %619
  %623 = load i32, ptr %361, align 1
  %624 = load i32, ptr %620, align 1
  %625 = xor i32 %624, %623
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %630, label %627

627:                                              ; preds = %622
  %628 = tail call i32 @llvm.cttz.i32(i32 %625, i1 true) #7, !range !8
  %629 = lshr i32 %628, 3
  br label %674

630:                                              ; preds = %636, %622
  %631 = phi ptr [ %634, %636 ], [ %620, %622 ]
  %632 = phi ptr [ %633, %636 ], [ %361, %622 ]
  %633 = getelementptr i8, ptr %632, i32 4
  %634 = getelementptr i8, ptr %631, i32 4
  %635 = icmp ult ptr %634, %542
  br i1 %635, label %636, label %648

636:                                              ; preds = %630
  %637 = load i32, ptr %633, align 1
  %638 = load i32, ptr %634, align 1
  %639 = xor i32 %638, %637
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %630, label %641

641:                                              ; preds = %636
  %642 = tail call i32 @llvm.cttz.i32(i32 %639, i1 true) #7, !range !8
  %643 = lshr i32 %642, 3
  %644 = getelementptr i8, ptr %634, i32 %643
  %645 = ptrtoint ptr %644 to i32
  %646 = ptrtoint ptr %620 to i32
  %647 = sub i32 %645, %646
  br label %674

648:                                              ; preds = %630, %619
  %649 = phi ptr [ %620, %619 ], [ %634, %630 ]
  %650 = phi ptr [ %361, %619 ], [ %633, %630 ]
  %651 = icmp ult ptr %649, %543
  br i1 %651, label %652, label %659

652:                                              ; preds = %648
  %653 = load i16, ptr %650, align 1
  %654 = load i16, ptr %649, align 1
  %655 = icmp eq i16 %653, %654
  br i1 %655, label %656, label %659

656:                                              ; preds = %652
  %657 = getelementptr i8, ptr %649, i32 2
  %658 = getelementptr i8, ptr %650, i32 2
  br label %659

659:                                              ; preds = %656, %652, %648
  %660 = phi ptr [ %657, %656 ], [ %649, %652 ], [ %649, %648 ]
  %661 = phi ptr [ %658, %656 ], [ %650, %652 ], [ %650, %648 ]
  %662 = icmp ult ptr %660, %2
  br i1 %662, label %663, label %669

663:                                              ; preds = %659
  %664 = load i8, ptr %661, align 1
  %665 = load i8, ptr %660, align 1
  %666 = icmp eq i8 %664, %665
  %667 = zext i1 %666 to i32
  %668 = getelementptr i8, ptr %660, i32 %667
  br label %669

669:                                              ; preds = %663, %659
  %670 = phi ptr [ %660, %659 ], [ %668, %663 ]
  %671 = ptrtoint ptr %670 to i32
  %672 = ptrtoint ptr %620 to i32
  %673 = sub i32 %671, %672
  br label %674

674:                                              ; preds = %669, %641, %627
  %675 = phi i32 [ %673, %669 ], [ %629, %627 ], [ %647, %641 ]
  %676 = add i32 %675, %616
  br label %677

677:                                              ; preds = %674, %615
  %678 = phi i32 [ %676, %674 ], [ %616, %615 ]
  %679 = add i32 %678, 4
  %680 = icmp ugt i32 %679, %550
  br i1 %680, label %681, label %685

681:                                              ; preds = %677
  %682 = sub i32 %546, %549
  store i32 %682, ptr %3, align 4
  %683 = getelementptr i8, ptr %1, i32 %679
  %684 = icmp eq ptr %683, %2
  br i1 %684, label %1047, label %685

685:                                              ; preds = %681, %677, %547
  %686 = phi i32 [ %679, %681 ], [ %550, %677 ], [ %550, %547 ]
  %687 = icmp ugt i32 %549, %525
  br i1 %687, label %688, label %1047

688:                                              ; preds = %685
  %689 = and i32 %549, %516
  %690 = getelementptr i32, ptr %512, i32 %689
  %691 = add i32 %551, -1
  %692 = load i32, ptr %690, align 4
  %693 = icmp uge i32 %692, %518
  %694 = icmp ne i32 %691, 0
  %695 = and i1 %694, %693
  br i1 %695, label %696, label %1047

696:                                              ; preds = %688
  %697 = load i32, ptr %1, align 1
  br label %547

698:                                              ; preds = %4, %4
  %699 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %700 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %701 = load ptr, ptr %700, align 4
  %702 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %703 = load i32, ptr %702, align 4
  %704 = shl nuw i32 1, %703
  %705 = add i32 %704, -1
  %706 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %707 = load ptr, ptr %706, align 4
  %708 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %709 = load i32, ptr %708, align 4
  %710 = getelementptr i8, ptr %707, i32 %709
  %711 = ptrtoint ptr %1 to i32
  %712 = ptrtoint ptr %707 to i32
  %713 = sub i32 %711, %712
  %714 = load i32, ptr %699, align 4
  %715 = shl nuw i32 1, %714
  %716 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %717 = load i32, ptr %716, align 4
  %718 = sub i32 %713, %717
  %719 = icmp ugt i32 %718, %715
  %720 = sub i32 %713, %715
  %721 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %722 = load i32, ptr %721, align 4
  %723 = icmp eq i32 %722, 0
  %724 = select i1 %723, i1 %719, i1 false
  %725 = select i1 %724, i32 %720, i32 %717
  %726 = tail call i32 @llvm.usub.sat.i32(i32 %713, i32 %704) #7
  %727 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %728 = load i32, ptr %727, align 4
  %729 = shl nuw i32 1, %728
  %730 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %731 = load ptr, ptr %730, align 4
  %732 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %733 = load ptr, ptr %732, align 4
  %734 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %735 = load i32, ptr %734, align 4
  %736 = shl nsw i32 -1, %703
  %737 = xor i32 %736, -1
  %738 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %739 = load i32, ptr %738, align 4
  %740 = icmp ult i32 %739, %713
  %741 = sub i32 64, %735
  %742 = zext i32 %741 to i64
  br i1 %740, label %743, label %756

743:                                              ; preds = %743, %698
  %744 = phi i32 [ %754, %743 ], [ %739, %698 ]
  %745 = getelementptr i8, ptr %707, i32 %744
  %746 = load i64, ptr %745, align 1
  %747 = mul i64 %746, -3523014627193847808
  %748 = lshr i64 %747, %742
  %749 = trunc i64 %748 to i32
  %750 = getelementptr i32, ptr %733, i32 %749
  %751 = load i32, ptr %750, align 4
  %752 = and i32 %744, %737
  %753 = getelementptr i32, ptr %701, i32 %752
  store i32 %751, ptr %753, align 4
  store i32 %744, ptr %750, align 4
  %754 = add nuw i32 %744, 1
  %755 = icmp ult i32 %754, %713
  br i1 %755, label %743, label %756

756:                                              ; preds = %743, %698
  store i32 %713, ptr %738, align 4
  %757 = load i64, ptr %1, align 1
  %758 = mul i64 %757, -3523014627193847808
  %759 = lshr i64 %758, %742
  %760 = trunc i64 %759 to i32
  %761 = getelementptr i32, ptr %733, i32 %760
  %762 = load i32, ptr %761, align 4
  %763 = icmp ult i32 %762, %725
  %764 = trunc i64 %757 to i32
  br i1 %763, label %855, label %765

765:                                              ; preds = %756
  %766 = getelementptr i8, ptr %2, i32 -3
  %767 = icmp ugt ptr %766, %1
  %768 = getelementptr i8, ptr %2, i32 -1
  %769 = add i32 %713, 2
  br label %770

770:                                              ; preds = %841, %765
  %771 = phi i32 [ %762, %765 ], [ %845, %841 ]
  %772 = phi i32 [ 3, %765 ], [ %839, %841 ]
  %773 = phi i32 [ %729, %765 ], [ %844, %841 ]
  %774 = getelementptr i8, ptr %707, i32 %771
  %775 = getelementptr i8, ptr %774, i32 %772
  %776 = load i8, ptr %775, align 1
  %777 = getelementptr i8, ptr %1, i32 %772
  %778 = load i8, ptr %777, align 1
  %779 = icmp eq i8 %776, %778
  br i1 %779, label %780, label %838

780:                                              ; preds = %770
  br i1 %767, label %781, label %806

781:                                              ; preds = %780
  %782 = load i32, ptr %774, align 1
  %783 = load i32, ptr %1, align 1
  %784 = xor i32 %783, %782
  %785 = icmp eq i32 %784, 0
  br i1 %785, label %789, label %786

786:                                              ; preds = %781
  %787 = tail call i32 @llvm.cttz.i32(i32 %784, i1 true) #7, !range !8
  %788 = lshr i32 %787, 3
  br label %831

789:                                              ; preds = %795, %781
  %790 = phi ptr [ %793, %795 ], [ %1, %781 ]
  %791 = phi ptr [ %792, %795 ], [ %774, %781 ]
  %792 = getelementptr i8, ptr %791, i32 4
  %793 = getelementptr i8, ptr %790, i32 4
  %794 = icmp ult ptr %793, %766
  br i1 %794, label %795, label %806

795:                                              ; preds = %789
  %796 = load i32, ptr %792, align 1
  %797 = load i32, ptr %793, align 1
  %798 = xor i32 %797, %796
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %789, label %800

800:                                              ; preds = %795
  %801 = tail call i32 @llvm.cttz.i32(i32 %798, i1 true) #7, !range !8
  %802 = lshr i32 %801, 3
  %803 = getelementptr i8, ptr %793, i32 %802
  %804 = ptrtoint ptr %803 to i32
  %805 = sub i32 %804, %711
  br label %831

806:                                              ; preds = %789, %780
  %807 = phi ptr [ %1, %780 ], [ %793, %789 ]
  %808 = phi ptr [ %774, %780 ], [ %792, %789 ]
  %809 = icmp ult ptr %807, %768
  br i1 %809, label %810, label %817

810:                                              ; preds = %806
  %811 = load i16, ptr %808, align 1
  %812 = load i16, ptr %807, align 1
  %813 = icmp eq i16 %811, %812
  br i1 %813, label %814, label %817

814:                                              ; preds = %810
  %815 = getelementptr i8, ptr %807, i32 2
  %816 = getelementptr i8, ptr %808, i32 2
  br label %817

817:                                              ; preds = %814, %810, %806
  %818 = phi ptr [ %815, %814 ], [ %807, %810 ], [ %807, %806 ]
  %819 = phi ptr [ %816, %814 ], [ %808, %810 ], [ %808, %806 ]
  %820 = icmp ult ptr %818, %2
  br i1 %820, label %821, label %827

821:                                              ; preds = %817
  %822 = load i8, ptr %819, align 1
  %823 = load i8, ptr %818, align 1
  %824 = icmp eq i8 %822, %823
  %825 = zext i1 %824 to i32
  %826 = getelementptr i8, ptr %818, i32 %825
  br label %827

827:                                              ; preds = %821, %817
  %828 = phi ptr [ %818, %817 ], [ %826, %821 ]
  %829 = ptrtoint ptr %828 to i32
  %830 = sub i32 %829, %711
  br label %831

831:                                              ; preds = %827, %800, %786
  %832 = phi i32 [ %830, %827 ], [ %788, %786 ], [ %805, %800 ]
  %833 = icmp ugt i32 %832, %772
  br i1 %833, label %834, label %838

834:                                              ; preds = %831
  %835 = sub i32 %769, %771
  store i32 %835, ptr %3, align 4
  %836 = getelementptr i8, ptr %1, i32 %832
  %837 = icmp eq ptr %836, %2
  br i1 %837, label %849, label %838

838:                                              ; preds = %834, %831, %770
  %839 = phi i32 [ %832, %834 ], [ %772, %831 ], [ %772, %770 ]
  %840 = icmp ugt i32 %771, %726
  br i1 %840, label %841, label %849

841:                                              ; preds = %838
  %842 = and i32 %771, %705
  %843 = getelementptr i32, ptr %701, i32 %842
  %844 = add i32 %773, -1
  %845 = load i32, ptr %843, align 4
  %846 = icmp uge i32 %845, %725
  %847 = icmp ne i32 %844, 0
  %848 = and i1 %847, %846
  br i1 %848, label %770, label %849

849:                                              ; preds = %841, %838, %834
  %850 = phi i32 [ %773, %838 ], [ %773, %834 ], [ %844, %841 ]
  %851 = phi i32 [ %839, %838 ], [ %832, %834 ], [ %839, %841 ]
  %852 = load i64, ptr %1, align 1
  %853 = mul i64 %852, -3523014627193847808
  %854 = trunc i64 %852 to i32
  br label %855

855:                                              ; preds = %849, %756
  %856 = phi i64 [ %853, %849 ], [ %758, %756 ]
  %857 = phi i32 [ %854, %849 ], [ %764, %756 ]
  %858 = phi i32 [ %850, %849 ], [ %729, %756 ]
  %859 = phi i32 [ %851, %849 ], [ 3, %756 ]
  %860 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %731, i32 0, i32 6
  %861 = load ptr, ptr %860, align 4
  %862 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %731, i32 0, i32 10, i32 1
  %863 = load i32, ptr %862, align 4
  %864 = shl nuw i32 1, %863
  %865 = add i32 %864, -1
  %866 = getelementptr inbounds %struct.ZSTD_window_t, ptr %731, i32 0, i32 3
  %867 = load i32, ptr %866, align 4
  %868 = getelementptr inbounds %struct.ZSTD_window_t, ptr %731, i32 0, i32 1
  %869 = load ptr, ptr %868, align 4
  %870 = load ptr, ptr %731, align 4
  %871 = ptrtoint ptr %870 to i32
  %872 = ptrtoint ptr %869 to i32
  %873 = sub i32 %871, %872
  %874 = tail call i32 @llvm.usub.sat.i32(i32 %873, i32 %864) #7
  %875 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %731, i32 0, i32 4
  %876 = load ptr, ptr %875, align 4
  %877 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %731, i32 0, i32 10, i32 2
  %878 = load i32, ptr %877, align 4
  %879 = sub i32 64, %878
  %880 = zext i32 %879 to i64
  %881 = lshr i64 %856, %880
  %882 = trunc i64 %881 to i32
  %883 = getelementptr i32, ptr %876, i32 %882
  %884 = load i32, ptr %883, align 4
  %885 = icmp uge i32 %884, %867
  %886 = icmp ne i32 %858, 0
  %887 = and i1 %886, %885
  br i1 %887, label %888, label %1047

888:                                              ; preds = %855
  %889 = getelementptr i8, ptr %1, i32 4
  %890 = ptrtoint ptr %889 to i32
  %891 = getelementptr i8, ptr %2, i32 -3
  %892 = getelementptr i8, ptr %2, i32 -1
  %893 = sub i32 2, %709
  %894 = add i32 %893, %713
  %895 = add i32 %894, %873
  br label %896

896:                                              ; preds = %1045, %888
  %897 = phi i32 [ %857, %888 ], [ %1046, %1045 ]
  %898 = phi i32 [ %884, %888 ], [ %1041, %1045 ]
  %899 = phi i32 [ %859, %888 ], [ %1035, %1045 ]
  %900 = phi i32 [ %858, %888 ], [ %1040, %1045 ]
  %901 = getelementptr i8, ptr %869, i32 %898
  %902 = load i32, ptr %901, align 1
  %903 = icmp eq i32 %902, %897
  br i1 %903, label %904, label %1034

904:                                              ; preds = %896
  %905 = getelementptr i8, ptr %901, i32 4
  %906 = ptrtoint ptr %905 to i32
  %907 = sub i32 %871, %906
  %908 = getelementptr i8, ptr %889, i32 %907
  %909 = icmp ult ptr %908, %2
  %910 = select i1 %909, ptr %908, ptr %2
  %911 = getelementptr i8, ptr %910, i32 -3
  %912 = icmp ugt ptr %911, %889
  br i1 %912, label %913, label %938

913:                                              ; preds = %904
  %914 = load i32, ptr %905, align 1
  %915 = load i32, ptr %889, align 1
  %916 = xor i32 %915, %914
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %921, label %918

918:                                              ; preds = %913
  %919 = tail call i32 @llvm.cttz.i32(i32 %916, i1 true) #7, !range !8
  %920 = lshr i32 %919, 3
  br label %964

921:                                              ; preds = %927, %913
  %922 = phi ptr [ %925, %927 ], [ %889, %913 ]
  %923 = phi ptr [ %924, %927 ], [ %905, %913 ]
  %924 = getelementptr i8, ptr %923, i32 4
  %925 = getelementptr i8, ptr %922, i32 4
  %926 = icmp ult ptr %925, %911
  br i1 %926, label %927, label %938

927:                                              ; preds = %921
  %928 = load i32, ptr %924, align 1
  %929 = load i32, ptr %925, align 1
  %930 = xor i32 %929, %928
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %921, label %932

932:                                              ; preds = %927
  %933 = tail call i32 @llvm.cttz.i32(i32 %930, i1 true) #7, !range !8
  %934 = lshr i32 %933, 3
  %935 = getelementptr i8, ptr %925, i32 %934
  %936 = ptrtoint ptr %935 to i32
  %937 = sub i32 %936, %890
  br label %964

938:                                              ; preds = %921, %904
  %939 = phi ptr [ %889, %904 ], [ %925, %921 ]
  %940 = phi ptr [ %905, %904 ], [ %924, %921 ]
  %941 = getelementptr i8, ptr %910, i32 -1
  %942 = icmp ult ptr %939, %941
  br i1 %942, label %943, label %950

943:                                              ; preds = %938
  %944 = load i16, ptr %940, align 1
  %945 = load i16, ptr %939, align 1
  %946 = icmp eq i16 %944, %945
  br i1 %946, label %947, label %950

947:                                              ; preds = %943
  %948 = getelementptr i8, ptr %939, i32 2
  %949 = getelementptr i8, ptr %940, i32 2
  br label %950

950:                                              ; preds = %947, %943, %938
  %951 = phi ptr [ %948, %947 ], [ %939, %943 ], [ %939, %938 ]
  %952 = phi ptr [ %949, %947 ], [ %940, %943 ], [ %940, %938 ]
  %953 = icmp ult ptr %951, %910
  br i1 %953, label %954, label %960

954:                                              ; preds = %950
  %955 = load i8, ptr %952, align 1
  %956 = load i8, ptr %951, align 1
  %957 = icmp eq i8 %955, %956
  %958 = zext i1 %957 to i32
  %959 = getelementptr i8, ptr %951, i32 %958
  br label %960

960:                                              ; preds = %954, %950
  %961 = phi ptr [ %951, %950 ], [ %959, %954 ]
  %962 = ptrtoint ptr %961 to i32
  %963 = sub i32 %962, %890
  br label %964

964:                                              ; preds = %960, %932, %918
  %965 = phi i32 [ %963, %960 ], [ %920, %918 ], [ %937, %932 ]
  %966 = getelementptr i8, ptr %905, i32 %965
  %967 = icmp eq ptr %966, %870
  br i1 %967, label %968, label %1026

968:                                              ; preds = %964
  %969 = getelementptr i8, ptr %889, i32 %965
  %970 = icmp ugt ptr %891, %969
  br i1 %970, label %971, label %997

971:                                              ; preds = %968
  %972 = load i32, ptr %710, align 1
  %973 = load i32, ptr %969, align 1
  %974 = xor i32 %973, %972
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %979, label %976

976:                                              ; preds = %971
  %977 = tail call i32 @llvm.cttz.i32(i32 %974, i1 true) #7, !range !8
  %978 = lshr i32 %977, 3
  br label %1023

979:                                              ; preds = %985, %971
  %980 = phi ptr [ %983, %985 ], [ %969, %971 ]
  %981 = phi ptr [ %982, %985 ], [ %710, %971 ]
  %982 = getelementptr i8, ptr %981, i32 4
  %983 = getelementptr i8, ptr %980, i32 4
  %984 = icmp ult ptr %983, %891
  br i1 %984, label %985, label %997

985:                                              ; preds = %979
  %986 = load i32, ptr %982, align 1
  %987 = load i32, ptr %983, align 1
  %988 = xor i32 %987, %986
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %979, label %990

990:                                              ; preds = %985
  %991 = tail call i32 @llvm.cttz.i32(i32 %988, i1 true) #7, !range !8
  %992 = lshr i32 %991, 3
  %993 = getelementptr i8, ptr %983, i32 %992
  %994 = ptrtoint ptr %993 to i32
  %995 = ptrtoint ptr %969 to i32
  %996 = sub i32 %994, %995
  br label %1023

997:                                              ; preds = %979, %968
  %998 = phi ptr [ %969, %968 ], [ %983, %979 ]
  %999 = phi ptr [ %710, %968 ], [ %982, %979 ]
  %1000 = icmp ult ptr %998, %892
  br i1 %1000, label %1001, label %1008

1001:                                             ; preds = %997
  %1002 = load i16, ptr %999, align 1
  %1003 = load i16, ptr %998, align 1
  %1004 = icmp eq i16 %1002, %1003
  br i1 %1004, label %1005, label %1008

1005:                                             ; preds = %1001
  %1006 = getelementptr i8, ptr %998, i32 2
  %1007 = getelementptr i8, ptr %999, i32 2
  br label %1008

1008:                                             ; preds = %1005, %1001, %997
  %1009 = phi ptr [ %1006, %1005 ], [ %998, %1001 ], [ %998, %997 ]
  %1010 = phi ptr [ %1007, %1005 ], [ %999, %1001 ], [ %999, %997 ]
  %1011 = icmp ult ptr %1009, %2
  br i1 %1011, label %1012, label %1018

1012:                                             ; preds = %1008
  %1013 = load i8, ptr %1010, align 1
  %1014 = load i8, ptr %1009, align 1
  %1015 = icmp eq i8 %1013, %1014
  %1016 = zext i1 %1015 to i32
  %1017 = getelementptr i8, ptr %1009, i32 %1016
  br label %1018

1018:                                             ; preds = %1012, %1008
  %1019 = phi ptr [ %1009, %1008 ], [ %1017, %1012 ]
  %1020 = ptrtoint ptr %1019 to i32
  %1021 = ptrtoint ptr %969 to i32
  %1022 = sub i32 %1020, %1021
  br label %1023

1023:                                             ; preds = %1018, %990, %976
  %1024 = phi i32 [ %1022, %1018 ], [ %978, %976 ], [ %996, %990 ]
  %1025 = add i32 %1024, %965
  br label %1026

1026:                                             ; preds = %1023, %964
  %1027 = phi i32 [ %1025, %1023 ], [ %965, %964 ]
  %1028 = add i32 %1027, 4
  %1029 = icmp ugt i32 %1028, %899
  br i1 %1029, label %1030, label %1034

1030:                                             ; preds = %1026
  %1031 = sub i32 %895, %898
  store i32 %1031, ptr %3, align 4
  %1032 = getelementptr i8, ptr %1, i32 %1028
  %1033 = icmp eq ptr %1032, %2
  br i1 %1033, label %1047, label %1034

1034:                                             ; preds = %1030, %1026, %896
  %1035 = phi i32 [ %1028, %1030 ], [ %899, %1026 ], [ %899, %896 ]
  %1036 = icmp ugt i32 %898, %874
  br i1 %1036, label %1037, label %1047

1037:                                             ; preds = %1034
  %1038 = and i32 %898, %865
  %1039 = getelementptr i32, ptr %861, i32 %1038
  %1040 = add i32 %900, -1
  %1041 = load i32, ptr %1039, align 4
  %1042 = icmp uge i32 %1041, %867
  %1043 = icmp ne i32 %1040, 0
  %1044 = and i1 %1043, %1042
  br i1 %1044, label %1045, label %1047

1045:                                             ; preds = %1037
  %1046 = load i32, ptr %1, align 1
  br label %896

1047:                                             ; preds = %1037, %1034, %1030, %855, %688, %685, %681, %506, %339, %336, %332, %159
  %1048 = phi i32 [ %163, %159 ], [ %510, %506 ], [ %859, %855 ], [ %337, %336 ], [ %330, %332 ], [ %337, %339 ], [ %1035, %1034 ], [ %1028, %1030 ], [ %1035, %1037 ], [ %686, %685 ], [ %679, %681 ], [ %686, %688 ]
  ret i32 %1048
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ZSTD_BtFindBestMatch_dictMatchState_selectMLS(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2, ptr nocapture noundef %3) unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %12 = load i32, ptr %11, align 4
  switch i32 %12, label %13 [
    i32 6, label %1267
    i32 5, label %637
    i32 7, label %1267
  ]

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %15, i32 %17
  %19 = icmp ugt ptr %18, %1
  br i1 %19, label %1897, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, -1
  %28 = shl nsw i32 -1, %27
  %29 = xor i32 %28, -1
  %30 = ptrtoint ptr %1 to i32
  %31 = ptrtoint ptr %15 to i32
  %32 = sub i32 %30, %31
  %33 = icmp ult i32 %17, %32
  br i1 %33, label %34, label %62

34:                                               ; preds = %20
  %35 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %36 = load i32, ptr %35, align 4
  %37 = sub i32 32, %36
  br label %38

38:                                               ; preds = %38, %34
  %39 = phi i32 [ %17, %34 ], [ %50, %38 ]
  %40 = getelementptr i8, ptr %15, i32 %39
  %41 = load i32, ptr %40, align 1
  %42 = mul i32 %41, -1640531535
  %43 = lshr i32 %42, %37
  %44 = getelementptr i32, ptr %22, i32 %43
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %39, %29
  %47 = shl i32 %46, 1
  %48 = getelementptr i32, ptr %24, i32 %47
  %49 = getelementptr i32, ptr %48, i32 1
  store i32 %39, ptr %44, align 4
  store i32 %45, ptr %48, align 4
  store i32 1, ptr %49, align 4
  %50 = add nuw i32 %39, 1
  %51 = icmp ult i32 %50, %32
  br i1 %51, label %38, label %52

52:                                               ; preds = %38
  %53 = load ptr, ptr %21, align 4
  %54 = load ptr, ptr %14, align 4
  %55 = load ptr, ptr %23, align 4
  %56 = load i32, ptr %25, align 4
  %57 = ptrtoint ptr %54 to i32
  %58 = sub i32 %30, %57
  %59 = add i32 %56, -1
  %60 = shl nsw i32 -1, %59
  %61 = xor i32 %60, -1
  br label %62

62:                                               ; preds = %52, %20
  %63 = phi i32 [ %61, %52 ], [ %29, %20 ]
  %64 = phi i32 [ %58, %52 ], [ %32, %20 ]
  %65 = phi ptr [ %55, %52 ], [ %24, %20 ]
  %66 = phi ptr [ %54, %52 ], [ %15, %20 ]
  %67 = phi ptr [ %53, %52 ], [ %22, %20 ]
  store i32 %32, ptr %16, align 4
  %68 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %69 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %70 = load i32, ptr %69, align 4
  %71 = load i32, ptr %1, align 1
  %72 = mul i32 %71, -1640531535
  %73 = sub i32 32, %70
  %74 = lshr i32 %72, %73
  %75 = getelementptr i32, ptr %67, i32 %74
  %76 = load i32, ptr %68, align 4
  %77 = shl nuw i32 1, %76
  %78 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %79 = load i32, ptr %78, align 4
  %80 = sub i32 %64, %79
  %81 = icmp ugt i32 %80, %77
  %82 = sub i32 %64, %77
  %83 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %84 = load i32, ptr %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i1 %81, i1 false
  %87 = select i1 %86, i32 %82, i32 %79
  %88 = tail call i32 @llvm.usub.sat.i32(i32 %64, i32 %63) #7
  %89 = tail call i32 @llvm.umax.i32(i32 %88, i32 %87) #7
  %90 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = shl nuw i32 1, %91
  %93 = load i32, ptr %75, align 4
  %94 = icmp ugt i32 %93, %89
  br i1 %94, label %95, label %258

95:                                               ; preds = %107, %62
  %96 = phi i32 [ %109, %107 ], [ %93, %62 ]
  %97 = phi i32 [ %96, %107 ], [ 0, %62 ]
  %98 = phi i32 [ %108, %107 ], [ %92, %62 ]
  %99 = and i32 %96, %63
  %100 = shl i32 %99, 1
  %101 = getelementptr i32, ptr %65, i32 %100
  %102 = getelementptr i32, ptr %101, i32 1
  %103 = load i32, ptr %102, align 4
  %104 = icmp eq i32 %103, 1
  %105 = icmp ugt i32 %98, 1
  %106 = select i1 %104, i1 %105, i1 false
  br i1 %106, label %107, label %111

107:                                              ; preds = %95
  store i32 %97, ptr %102, align 4
  %108 = add i32 %98, -1
  %109 = load i32, ptr %101, align 4
  %110 = icmp ugt i32 %109, %89
  br i1 %110, label %95, label %115

111:                                              ; preds = %95
  br i1 %104, label %112, label %113

112:                                              ; preds = %111
  store i32 0, ptr %102, align 4
  store i32 0, ptr %101, align 4
  br label %113

113:                                              ; preds = %112, %111
  %114 = icmp eq i32 %97, 0
  br i1 %114, label %258, label %115

115:                                              ; preds = %113, %107
  %116 = phi i32 [ %97, %113 ], [ %96, %107 ]
  %117 = phi i32 [ %98, %113 ], [ %108, %107 ]
  %118 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %119 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %120 = getelementptr i32, ptr %65, i32 1
  br label %121

121:                                              ; preds = %253, %115
  %122 = phi i32 [ %116, %115 ], [ %127, %253 ]
  %123 = phi i32 [ %117, %115 ], [ %256, %253 ]
  %124 = and i32 %122, %63
  %125 = shl i32 %124, 1
  %126 = getelementptr i32, ptr %120, i32 %125
  %127 = load i32, ptr %126, align 4
  %128 = load ptr, ptr %23, align 4
  %129 = load i32, ptr %25, align 4
  %130 = add i32 %129, -1
  %131 = shl nsw i32 -1, %130
  %132 = xor i32 %131, -1
  %133 = load ptr, ptr %14, align 4
  %134 = load ptr, ptr %118, align 4
  %135 = load i32, ptr %119, align 4
  %136 = icmp ugt i32 %135, %122
  %137 = select i1 %136, ptr %134, ptr %133
  %138 = getelementptr i8, ptr %137, i32 %122
  %139 = getelementptr i8, ptr %134, i32 %135
  %140 = select i1 %136, ptr %139, ptr %2
  %141 = and i32 %122, %132
  %142 = shl i32 %141, 1
  %143 = getelementptr i32, ptr %128, i32 %142
  %144 = getelementptr i32, ptr %143, i32 1
  %145 = load i32, ptr %143, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9)
  store i32 0, ptr %9, align 4
  %146 = load i32, ptr %78, align 4
  %147 = load i32, ptr %68, align 4
  %148 = shl nuw i32 1, %147
  %149 = sub i32 %122, %146
  %150 = icmp ugt i32 %149, %148
  %151 = sub i32 %122, %148
  %152 = select i1 %150, i32 %151, i32 %146
  %153 = icmp ne i32 %123, 0
  %154 = icmp ugt i32 %145, %152
  %155 = select i1 %153, i1 %154, i1 false
  br i1 %155, label %156, label %253

156:                                              ; preds = %121
  %157 = getelementptr i8, ptr %140, i32 -3
  %158 = getelementptr i8, ptr %140, i32 -1
  br label %159

159:                                              ; preds = %242, %156
  %160 = phi i32 [ %123, %156 ], [ %249, %242 ]
  %161 = phi i32 [ %145, %156 ], [ %248, %242 ]
  %162 = phi ptr [ %144, %156 ], [ %246, %242 ]
  %163 = phi ptr [ %143, %156 ], [ %245, %242 ]
  %164 = phi i32 [ 0, %156 ], [ %244, %242 ]
  %165 = phi i32 [ 0, %156 ], [ %243, %242 ]
  %166 = and i32 %161, %132
  %167 = shl i32 %166, 1
  %168 = getelementptr i32, ptr %128, i32 %167
  %169 = tail call i32 @llvm.umin.i32(i32 %165, i32 %164) #7
  %170 = getelementptr i8, ptr %133, i32 %161
  %171 = getelementptr i8, ptr %138, i32 %169
  %172 = getelementptr i8, ptr %170, i32 %169
  %173 = icmp ugt ptr %157, %171
  br i1 %173, label %174, label %200

174:                                              ; preds = %159
  %175 = load i32, ptr %172, align 1
  %176 = load i32, ptr %171, align 1
  %177 = xor i32 %176, %175
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = tail call i32 @llvm.cttz.i32(i32 %177, i1 true) #7, !range !8
  %181 = lshr i32 %180, 3
  br label %226

182:                                              ; preds = %188, %174
  %183 = phi ptr [ %186, %188 ], [ %171, %174 ]
  %184 = phi ptr [ %185, %188 ], [ %172, %174 ]
  %185 = getelementptr i8, ptr %184, i32 4
  %186 = getelementptr i8, ptr %183, i32 4
  %187 = icmp ult ptr %186, %157
  br i1 %187, label %188, label %200

188:                                              ; preds = %182
  %189 = load i32, ptr %185, align 1
  %190 = load i32, ptr %186, align 1
  %191 = xor i32 %190, %189
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %182, label %193

193:                                              ; preds = %188
  %194 = tail call i32 @llvm.cttz.i32(i32 %191, i1 true) #7, !range !8
  %195 = lshr i32 %194, 3
  %196 = getelementptr i8, ptr %186, i32 %195
  %197 = ptrtoint ptr %196 to i32
  %198 = ptrtoint ptr %171 to i32
  %199 = sub i32 %197, %198
  br label %226

200:                                              ; preds = %182, %159
  %201 = phi ptr [ %171, %159 ], [ %186, %182 ]
  %202 = phi ptr [ %172, %159 ], [ %185, %182 ]
  %203 = icmp ult ptr %201, %158
  br i1 %203, label %204, label %211

204:                                              ; preds = %200
  %205 = load i16, ptr %202, align 1
  %206 = load i16, ptr %201, align 1
  %207 = icmp eq i16 %205, %206
  br i1 %207, label %208, label %211

208:                                              ; preds = %204
  %209 = getelementptr i8, ptr %201, i32 2
  %210 = getelementptr i8, ptr %202, i32 2
  br label %211

211:                                              ; preds = %208, %204, %200
  %212 = phi ptr [ %209, %208 ], [ %201, %204 ], [ %201, %200 ]
  %213 = phi ptr [ %210, %208 ], [ %202, %204 ], [ %202, %200 ]
  %214 = icmp ult ptr %212, %140
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = load i8, ptr %213, align 1
  %217 = load i8, ptr %212, align 1
  %218 = icmp eq i8 %216, %217
  %219 = zext i1 %218 to i32
  %220 = getelementptr i8, ptr %212, i32 %219
  br label %221

221:                                              ; preds = %215, %211
  %222 = phi ptr [ %212, %211 ], [ %220, %215 ]
  %223 = ptrtoint ptr %222 to i32
  %224 = ptrtoint ptr %171 to i32
  %225 = sub i32 %223, %224
  br label %226

226:                                              ; preds = %221, %193, %179
  %227 = phi i32 [ %225, %221 ], [ %181, %179 ], [ %199, %193 ]
  %228 = add i32 %227, %169
  %229 = getelementptr i8, ptr %138, i32 %228
  %230 = icmp eq ptr %229, %140
  br i1 %230, label %253, label %231

231:                                              ; preds = %226
  %232 = getelementptr i8, ptr %170, i32 %228
  %233 = load i8, ptr %232, align 1
  %234 = load i8, ptr %229, align 1
  %235 = icmp ult i8 %233, %234
  br i1 %235, label %236, label %240

236:                                              ; preds = %231
  store i32 %161, ptr %163, align 4
  %237 = icmp ugt i32 %161, %89
  br i1 %237, label %238, label %253

238:                                              ; preds = %236
  %239 = getelementptr i32, ptr %168, i32 1
  br label %242

240:                                              ; preds = %231
  store i32 %161, ptr %162, align 4
  %241 = icmp ugt i32 %161, %89
  br i1 %241, label %242, label %253

242:                                              ; preds = %240, %238
  %243 = phi i32 [ %228, %238 ], [ %165, %240 ]
  %244 = phi i32 [ %164, %238 ], [ %228, %240 ]
  %245 = phi ptr [ %239, %238 ], [ %163, %240 ]
  %246 = phi ptr [ %162, %238 ], [ %168, %240 ]
  %247 = phi ptr [ %239, %238 ], [ %168, %240 ]
  %248 = load i32, ptr %247, align 4
  %249 = add i32 %160, -1
  %250 = icmp ne i32 %249, 0
  %251 = icmp ugt i32 %248, %152
  %252 = select i1 %250, i1 %251, i1 false
  br i1 %252, label %159, label %253

253:                                              ; preds = %242, %240, %236, %226, %121
  %254 = phi ptr [ %143, %121 ], [ %245, %242 ], [ %163, %226 ], [ %9, %236 ], [ %163, %240 ]
  %255 = phi ptr [ %144, %121 ], [ %246, %242 ], [ %162, %226 ], [ %162, %236 ], [ %9, %240 ]
  store i32 0, ptr %255, align 4
  store i32 0, ptr %254, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9)
  %256 = add i32 %123, 1
  %257 = icmp eq i32 %127, 0
  br i1 %257, label %258, label %121

258:                                              ; preds = %253, %113, %62
  %259 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %260 = and i32 %64, %63
  %261 = shl i32 %260, 1
  %262 = getelementptr i32, ptr %65, i32 %261
  %263 = getelementptr i32, ptr %262, i32 1
  %264 = add i32 %64, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4
  %265 = load i32, ptr %75, align 4
  store i32 %64, ptr %75, align 4
  %266 = icmp ugt i32 %265, %87
  br i1 %266, label %268, label %267

267:                                              ; preds = %258
  store i32 0, ptr %263, align 4
  store i32 0, ptr %262, align 4
  br label %400

268:                                              ; preds = %258
  %269 = getelementptr i8, ptr %2, i32 -3
  %270 = getelementptr i8, ptr %2, i32 -1
  %271 = add i32 %64, 1
  %272 = add i32 %64, 2
  br label %273

273:                                              ; preds = %384, %268
  %274 = phi i32 [ 0, %268 ], [ %372, %384 ]
  %275 = phi i32 [ %264, %268 ], [ %371, %384 ]
  %276 = phi ptr [ %263, %268 ], [ %389, %384 ]
  %277 = phi ptr [ %262, %268 ], [ %388, %384 ]
  %278 = phi i32 [ 0, %268 ], [ %387, %384 ]
  %279 = phi i32 [ 0, %268 ], [ %386, %384 ]
  %280 = phi i32 [ %265, %268 ], [ %390, %384 ]
  %281 = phi i32 [ %92, %268 ], [ %391, %384 ]
  %282 = and i32 %280, %63
  %283 = shl i32 %282, 1
  %284 = getelementptr i32, ptr %65, i32 %283
  %285 = tail call i32 @llvm.umin.i32(i32 %279, i32 %278) #7
  %286 = getelementptr i8, ptr %66, i32 %280
  %287 = getelementptr i8, ptr %1, i32 %285
  %288 = getelementptr i8, ptr %286, i32 %285
  %289 = icmp ugt ptr %269, %287
  br i1 %289, label %290, label %316

290:                                              ; preds = %273
  %291 = load i32, ptr %288, align 1
  %292 = load i32, ptr %287, align 1
  %293 = xor i32 %292, %291
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %290
  %296 = tail call i32 @llvm.cttz.i32(i32 %293, i1 true) #7, !range !8
  %297 = lshr i32 %296, 3
  br label %342

298:                                              ; preds = %304, %290
  %299 = phi ptr [ %302, %304 ], [ %287, %290 ]
  %300 = phi ptr [ %301, %304 ], [ %288, %290 ]
  %301 = getelementptr i8, ptr %300, i32 4
  %302 = getelementptr i8, ptr %299, i32 4
  %303 = icmp ult ptr %302, %269
  br i1 %303, label %304, label %316

304:                                              ; preds = %298
  %305 = load i32, ptr %301, align 1
  %306 = load i32, ptr %302, align 1
  %307 = xor i32 %306, %305
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %298, label %309

309:                                              ; preds = %304
  %310 = tail call i32 @llvm.cttz.i32(i32 %307, i1 true) #7, !range !8
  %311 = lshr i32 %310, 3
  %312 = getelementptr i8, ptr %302, i32 %311
  %313 = ptrtoint ptr %312 to i32
  %314 = ptrtoint ptr %287 to i32
  %315 = sub i32 %313, %314
  br label %342

316:                                              ; preds = %298, %273
  %317 = phi ptr [ %287, %273 ], [ %302, %298 ]
  %318 = phi ptr [ %288, %273 ], [ %301, %298 ]
  %319 = icmp ult ptr %317, %270
  br i1 %319, label %320, label %327

320:                                              ; preds = %316
  %321 = load i16, ptr %318, align 1
  %322 = load i16, ptr %317, align 1
  %323 = icmp eq i16 %321, %322
  br i1 %323, label %324, label %327

324:                                              ; preds = %320
  %325 = getelementptr i8, ptr %317, i32 2
  %326 = getelementptr i8, ptr %318, i32 2
  br label %327

327:                                              ; preds = %324, %320, %316
  %328 = phi ptr [ %325, %324 ], [ %317, %320 ], [ %317, %316 ]
  %329 = phi ptr [ %326, %324 ], [ %318, %320 ], [ %318, %316 ]
  %330 = icmp ult ptr %328, %2
  br i1 %330, label %331, label %337

331:                                              ; preds = %327
  %332 = load i8, ptr %329, align 1
  %333 = load i8, ptr %328, align 1
  %334 = icmp eq i8 %332, %333
  %335 = zext i1 %334 to i32
  %336 = getelementptr i8, ptr %328, i32 %335
  br label %337

337:                                              ; preds = %331, %327
  %338 = phi ptr [ %328, %327 ], [ %336, %331 ]
  %339 = ptrtoint ptr %338 to i32
  %340 = ptrtoint ptr %287 to i32
  %341 = sub i32 %339, %340
  br label %342

342:                                              ; preds = %337, %309, %295
  %343 = phi i32 [ %341, %337 ], [ %297, %295 ], [ %315, %309 ]
  %344 = add i32 %343, %285
  %345 = icmp ugt i32 %344, %274
  br i1 %345, label %346, label %370

346:                                              ; preds = %342
  %347 = sub i32 %275, %280
  %348 = icmp ugt i32 %344, %347
  %349 = add i32 %344, %280
  %350 = select i1 %348, i32 %349, i32 %275
  %351 = sub i32 %344, %274
  %352 = shl i32 %351, 2
  %353 = sub i32 %271, %280
  %354 = tail call i32 @llvm.ctlz.i32(i32 %353, i1 false) #7, !range !8
  %355 = xor i32 %354, 31
  %356 = load i32, ptr %3, align 4
  %357 = add i32 %356, 1
  %358 = tail call i32 @llvm.ctlz.i32(i32 %357, i1 false) #7, !range !8
  %359 = xor i32 %358, -32
  %360 = add nuw nsw i32 %355, 1
  %361 = add nsw i32 %360, %359
  %362 = icmp sgt i32 %352, %361
  br i1 %362, label %363, label %365

363:                                              ; preds = %346
  %364 = sub i32 %272, %280
  store i32 %364, ptr %3, align 4
  br label %365

365:                                              ; preds = %363, %346
  %366 = phi i32 [ %344, %363 ], [ %274, %346 ]
  %367 = getelementptr i8, ptr %1, i32 %344
  %368 = icmp eq ptr %367, %2
  br i1 %368, label %369, label %370

369:                                              ; preds = %365
  store i32 0, ptr %276, align 4
  store i32 0, ptr %277, align 4
  br label %633

370:                                              ; preds = %365, %342
  %371 = phi i32 [ %350, %365 ], [ %275, %342 ]
  %372 = phi i32 [ %366, %365 ], [ %274, %342 ]
  %373 = getelementptr i8, ptr %286, i32 %344
  %374 = load i8, ptr %373, align 1
  %375 = getelementptr i8, ptr %1, i32 %344
  %376 = load i8, ptr %375, align 1
  %377 = icmp ult i8 %374, %376
  br i1 %377, label %378, label %382

378:                                              ; preds = %370
  store i32 %280, ptr %277, align 4
  %379 = icmp ugt i32 %280, %88
  br i1 %379, label %380, label %395

380:                                              ; preds = %378
  %381 = getelementptr i32, ptr %284, i32 1
  br label %384

382:                                              ; preds = %370
  store i32 %280, ptr %276, align 4
  %383 = icmp ugt i32 %280, %88
  br i1 %383, label %384, label %395

384:                                              ; preds = %382, %380
  %385 = phi ptr [ %381, %380 ], [ %284, %382 ]
  %386 = phi i32 [ %344, %380 ], [ %279, %382 ]
  %387 = phi i32 [ %278, %380 ], [ %344, %382 ]
  %388 = phi ptr [ %381, %380 ], [ %277, %382 ]
  %389 = phi ptr [ %276, %380 ], [ %284, %382 ]
  %390 = load i32, ptr %385, align 4
  %391 = add i32 %281, -1
  %392 = icmp ne i32 %391, 0
  %393 = icmp ugt i32 %390, %87
  %394 = select i1 %392, i1 %393, i1 false
  br i1 %394, label %273, label %395

395:                                              ; preds = %384, %382, %378
  %396 = phi i32 [ %281, %382 ], [ %281, %378 ], [ %391, %384 ]
  %397 = phi ptr [ %277, %382 ], [ %10, %378 ], [ %388, %384 ]
  %398 = phi ptr [ %10, %382 ], [ %276, %378 ], [ %389, %384 ]
  store i32 0, ptr %398, align 4
  store i32 0, ptr %397, align 4
  %399 = icmp eq i32 %396, 0
  br i1 %399, label %633, label %400

400:                                              ; preds = %395, %267
  %401 = phi i32 [ 0, %267 ], [ %372, %395 ]
  %402 = phi i32 [ %264, %267 ], [ %371, %395 ]
  %403 = phi i32 [ %92, %267 ], [ %396, %395 ]
  %404 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %405 = load ptr, ptr %404, align 4
  %406 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %405, i32 0, i32 4
  %407 = load ptr, ptr %406, align 4
  %408 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %405, i32 0, i32 10, i32 2
  %409 = load i32, ptr %408, align 4
  %410 = load i32, ptr %1, align 1
  %411 = mul i32 %410, -1640531535
  %412 = sub i32 32, %409
  %413 = lshr i32 %411, %412
  %414 = getelementptr i32, ptr %407, i32 %413
  %415 = load ptr, ptr %14, align 4
  %416 = load i32, ptr %259, align 4
  %417 = getelementptr i8, ptr %415, i32 %416
  %418 = getelementptr inbounds %struct.ZSTD_window_t, ptr %405, i32 0, i32 1
  %419 = load ptr, ptr %418, align 4
  %420 = load ptr, ptr %405, align 4
  %421 = ptrtoint ptr %420 to i32
  %422 = ptrtoint ptr %419 to i32
  %423 = sub i32 %421, %422
  %424 = getelementptr inbounds %struct.ZSTD_window_t, ptr %405, i32 0, i32 4
  %425 = load i32, ptr %424, align 4
  %426 = load i32, ptr %78, align 4
  %427 = sub i32 %426, %423
  %428 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %405, i32 0, i32 6
  %429 = load ptr, ptr %428, align 4
  %430 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %405, i32 0, i32 10, i32 1
  %431 = load i32, ptr %430, align 4
  %432 = add i32 %431, -1
  %433 = shl nsw i32 -1, %432
  %434 = xor i32 %433, -1
  %435 = sub i32 %423, %425
  %436 = icmp ugt i32 %435, %434
  %437 = sub i32 %423, %434
  %438 = select i1 %436, i32 %437, i32 %425
  %439 = load i32, ptr %414, align 4
  %440 = icmp ugt i32 %439, %425
  br i1 %440, label %441, label %633

441:                                              ; preds = %400
  %442 = ptrtoint ptr %415 to i32
  %443 = sub i32 %30, %442
  %444 = getelementptr i8, ptr %2, i32 -3
  %445 = getelementptr i8, ptr %2, i32 -1
  %446 = add i32 %443, 1
  %447 = add i32 %443, 2
  %448 = getelementptr i8, ptr %415, i32 %427
  br label %449

449:                                              ; preds = %624, %441
  %450 = phi i32 [ %439, %441 ], [ %629, %624 ]
  %451 = phi i32 [ %401, %441 ], [ %613, %624 ]
  %452 = phi i32 [ 0, %441 ], [ %627, %624 ]
  %453 = phi i32 [ 0, %441 ], [ %626, %624 ]
  %454 = phi i32 [ %403, %441 ], [ %628, %624 ]
  %455 = and i32 %450, %434
  %456 = shl i32 %455, 1
  %457 = getelementptr i32, ptr %429, i32 %456
  %458 = tail call i32 @llvm.umin.i32(i32 %453, i32 %452) #7
  %459 = getelementptr i8, ptr %419, i32 %450
  %460 = getelementptr i8, ptr %1, i32 %458
  %461 = getelementptr i8, ptr %459, i32 %458
  %462 = ptrtoint ptr %461 to i32
  %463 = sub i32 %421, %462
  %464 = getelementptr i8, ptr %460, i32 %463
  %465 = icmp ult ptr %464, %2
  %466 = select i1 %465, ptr %464, ptr %2
  %467 = getelementptr i8, ptr %466, i32 -3
  %468 = icmp ugt ptr %467, %460
  br i1 %468, label %469, label %495

469:                                              ; preds = %449
  %470 = load i32, ptr %461, align 1
  %471 = load i32, ptr %460, align 1
  %472 = xor i32 %471, %470
  %473 = icmp eq i32 %472, 0
  br i1 %473, label %477, label %474

474:                                              ; preds = %469
  %475 = tail call i32 @llvm.cttz.i32(i32 %472, i1 true) #7, !range !8
  %476 = lshr i32 %475, 3
  br label %522

477:                                              ; preds = %483, %469
  %478 = phi ptr [ %481, %483 ], [ %460, %469 ]
  %479 = phi ptr [ %480, %483 ], [ %461, %469 ]
  %480 = getelementptr i8, ptr %479, i32 4
  %481 = getelementptr i8, ptr %478, i32 4
  %482 = icmp ult ptr %481, %467
  br i1 %482, label %483, label %495

483:                                              ; preds = %477
  %484 = load i32, ptr %480, align 1
  %485 = load i32, ptr %481, align 1
  %486 = xor i32 %485, %484
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %477, label %488

488:                                              ; preds = %483
  %489 = tail call i32 @llvm.cttz.i32(i32 %486, i1 true) #7, !range !8
  %490 = lshr i32 %489, 3
  %491 = getelementptr i8, ptr %481, i32 %490
  %492 = ptrtoint ptr %491 to i32
  %493 = ptrtoint ptr %460 to i32
  %494 = sub i32 %492, %493
  br label %522

495:                                              ; preds = %477, %449
  %496 = phi ptr [ %460, %449 ], [ %481, %477 ]
  %497 = phi ptr [ %461, %449 ], [ %480, %477 ]
  %498 = getelementptr i8, ptr %466, i32 -1
  %499 = icmp ult ptr %496, %498
  br i1 %499, label %500, label %507

500:                                              ; preds = %495
  %501 = load i16, ptr %497, align 1
  %502 = load i16, ptr %496, align 1
  %503 = icmp eq i16 %501, %502
  br i1 %503, label %504, label %507

504:                                              ; preds = %500
  %505 = getelementptr i8, ptr %496, i32 2
  %506 = getelementptr i8, ptr %497, i32 2
  br label %507

507:                                              ; preds = %504, %500, %495
  %508 = phi ptr [ %505, %504 ], [ %496, %500 ], [ %496, %495 ]
  %509 = phi ptr [ %506, %504 ], [ %497, %500 ], [ %497, %495 ]
  %510 = icmp ult ptr %508, %466
  br i1 %510, label %511, label %517

511:                                              ; preds = %507
  %512 = load i8, ptr %509, align 1
  %513 = load i8, ptr %508, align 1
  %514 = icmp eq i8 %512, %513
  %515 = zext i1 %514 to i32
  %516 = getelementptr i8, ptr %508, i32 %515
  br label %517

517:                                              ; preds = %511, %507
  %518 = phi ptr [ %508, %507 ], [ %516, %511 ]
  %519 = ptrtoint ptr %518 to i32
  %520 = ptrtoint ptr %460 to i32
  %521 = sub i32 %519, %520
  br label %522

522:                                              ; preds = %517, %488, %474
  %523 = phi i32 [ %521, %517 ], [ %476, %474 ], [ %494, %488 ]
  %524 = getelementptr i8, ptr %461, i32 %523
  %525 = icmp eq ptr %524, %420
  br i1 %525, label %526, label %584

526:                                              ; preds = %522
  %527 = getelementptr i8, ptr %460, i32 %523
  %528 = icmp ugt ptr %444, %527
  br i1 %528, label %529, label %555

529:                                              ; preds = %526
  %530 = load i32, ptr %417, align 1
  %531 = load i32, ptr %527, align 1
  %532 = xor i32 %531, %530
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %537, label %534

534:                                              ; preds = %529
  %535 = tail call i32 @llvm.cttz.i32(i32 %532, i1 true) #7, !range !8
  %536 = lshr i32 %535, 3
  br label %581

537:                                              ; preds = %543, %529
  %538 = phi ptr [ %541, %543 ], [ %527, %529 ]
  %539 = phi ptr [ %540, %543 ], [ %417, %529 ]
  %540 = getelementptr i8, ptr %539, i32 4
  %541 = getelementptr i8, ptr %538, i32 4
  %542 = icmp ult ptr %541, %444
  br i1 %542, label %543, label %555

543:                                              ; preds = %537
  %544 = load i32, ptr %540, align 1
  %545 = load i32, ptr %541, align 1
  %546 = xor i32 %545, %544
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %537, label %548

548:                                              ; preds = %543
  %549 = tail call i32 @llvm.cttz.i32(i32 %546, i1 true) #7, !range !8
  %550 = lshr i32 %549, 3
  %551 = getelementptr i8, ptr %541, i32 %550
  %552 = ptrtoint ptr %551 to i32
  %553 = ptrtoint ptr %527 to i32
  %554 = sub i32 %552, %553
  br label %581

555:                                              ; preds = %537, %526
  %556 = phi ptr [ %527, %526 ], [ %541, %537 ]
  %557 = phi ptr [ %417, %526 ], [ %540, %537 ]
  %558 = icmp ult ptr %556, %445
  br i1 %558, label %559, label %566

559:                                              ; preds = %555
  %560 = load i16, ptr %557, align 1
  %561 = load i16, ptr %556, align 1
  %562 = icmp eq i16 %560, %561
  br i1 %562, label %563, label %566

563:                                              ; preds = %559
  %564 = getelementptr i8, ptr %556, i32 2
  %565 = getelementptr i8, ptr %557, i32 2
  br label %566

566:                                              ; preds = %563, %559, %555
  %567 = phi ptr [ %564, %563 ], [ %556, %559 ], [ %556, %555 ]
  %568 = phi ptr [ %565, %563 ], [ %557, %559 ], [ %557, %555 ]
  %569 = icmp ult ptr %567, %2
  br i1 %569, label %570, label %576

570:                                              ; preds = %566
  %571 = load i8, ptr %568, align 1
  %572 = load i8, ptr %567, align 1
  %573 = icmp eq i8 %571, %572
  %574 = zext i1 %573 to i32
  %575 = getelementptr i8, ptr %567, i32 %574
  br label %576

576:                                              ; preds = %570, %566
  %577 = phi ptr [ %567, %566 ], [ %575, %570 ]
  %578 = ptrtoint ptr %577 to i32
  %579 = ptrtoint ptr %527 to i32
  %580 = sub i32 %578, %579
  br label %581

581:                                              ; preds = %576, %548, %534
  %582 = phi i32 [ %580, %576 ], [ %536, %534 ], [ %554, %548 ]
  %583 = add i32 %582, %523
  br label %584

584:                                              ; preds = %581, %522
  %585 = phi i32 [ %583, %581 ], [ %523, %522 ]
  %586 = add i32 %585, %458
  %587 = add i32 %586, %450
  %588 = icmp ult i32 %587, %423
  %589 = getelementptr i8, ptr %448, i32 %450
  %590 = select i1 %588, ptr %459, ptr %589
  %591 = icmp ugt i32 %586, %451
  br i1 %591, label %592, label %612

592:                                              ; preds = %584
  %593 = add i32 %450, %427
  %594 = sub i32 %586, %451
  %595 = shl i32 %594, 2
  %596 = sub i32 %446, %593
  %597 = tail call i32 @llvm.ctlz.i32(i32 %596, i1 false) #7, !range !8
  %598 = xor i32 %597, 31
  %599 = load i32, ptr %3, align 4
  %600 = add i32 %599, 1
  %601 = tail call i32 @llvm.ctlz.i32(i32 %600, i1 false) #7, !range !8
  %602 = xor i32 %601, -32
  %603 = add nuw nsw i32 %598, 1
  %604 = add nsw i32 %603, %602
  %605 = icmp sgt i32 %595, %604
  br i1 %605, label %606, label %608

606:                                              ; preds = %592
  %607 = sub i32 %447, %593
  store i32 %607, ptr %3, align 4
  br label %608

608:                                              ; preds = %606, %592
  %609 = phi i32 [ %586, %606 ], [ %451, %592 ]
  %610 = getelementptr i8, ptr %1, i32 %586
  %611 = icmp eq ptr %610, %2
  br i1 %611, label %633, label %612

612:                                              ; preds = %608, %584
  %613 = phi i32 [ %609, %608 ], [ %451, %584 ]
  %614 = getelementptr i8, ptr %590, i32 %586
  %615 = load i8, ptr %614, align 1
  %616 = getelementptr i8, ptr %1, i32 %586
  %617 = load i8, ptr %616, align 1
  %618 = icmp ult i8 %615, %617
  %619 = icmp ugt i32 %450, %438
  br i1 %618, label %620, label %623

620:                                              ; preds = %612
  br i1 %619, label %621, label %633

621:                                              ; preds = %620
  %622 = getelementptr i32, ptr %457, i32 1
  br label %624

623:                                              ; preds = %612
  br i1 %619, label %624, label %633

624:                                              ; preds = %623, %621
  %625 = phi ptr [ %622, %621 ], [ %457, %623 ]
  %626 = phi i32 [ %586, %621 ], [ %453, %623 ]
  %627 = phi i32 [ %452, %621 ], [ %586, %623 ]
  %628 = add i32 %454, -1
  %629 = load i32, ptr %625, align 4
  %630 = icmp ne i32 %628, 0
  %631 = icmp ugt i32 %629, %425
  %632 = select i1 %630, i1 %631, i1 false
  br i1 %632, label %449, label %633

633:                                              ; preds = %624, %623, %620, %608, %400, %395, %369
  %634 = phi i32 [ %371, %395 ], [ %402, %400 ], [ %350, %369 ], [ %402, %608 ], [ %402, %620 ], [ %402, %623 ], [ %402, %624 ]
  %635 = phi i32 [ %372, %395 ], [ %401, %400 ], [ %366, %369 ], [ %613, %624 ], [ %613, %623 ], [ %613, %620 ], [ %609, %608 ]
  %636 = add i32 %634, -8
  store i32 %636, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  br label %1897

637:                                              ; preds = %4
  %638 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %639 = load ptr, ptr %638, align 4
  %640 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %641 = load i32, ptr %640, align 4
  %642 = getelementptr i8, ptr %639, i32 %641
  %643 = icmp ugt ptr %642, %1
  br i1 %643, label %1897, label %644

644:                                              ; preds = %637
  %645 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %646 = load ptr, ptr %645, align 4
  %647 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %648 = load ptr, ptr %647, align 4
  %649 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %650 = load i32, ptr %649, align 4
  %651 = add i32 %650, -1
  %652 = shl nsw i32 -1, %651
  %653 = xor i32 %652, -1
  %654 = ptrtoint ptr %1 to i32
  %655 = ptrtoint ptr %639 to i32
  %656 = sub i32 %654, %655
  %657 = icmp ult i32 %641, %656
  br i1 %657, label %658, label %688

658:                                              ; preds = %644
  %659 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %660 = load i32, ptr %659, align 4
  %661 = sub i32 64, %660
  %662 = zext i32 %661 to i64
  br label %663

663:                                              ; preds = %663, %658
  %664 = phi i32 [ %641, %658 ], [ %676, %663 ]
  %665 = getelementptr i8, ptr %639, i32 %664
  %666 = load i64, ptr %665, align 1
  %667 = mul i64 %666, -3523014627271114752
  %668 = lshr i64 %667, %662
  %669 = trunc i64 %668 to i32
  %670 = getelementptr i32, ptr %646, i32 %669
  %671 = load i32, ptr %670, align 4
  %672 = and i32 %664, %653
  %673 = shl i32 %672, 1
  %674 = getelementptr i32, ptr %648, i32 %673
  %675 = getelementptr i32, ptr %674, i32 1
  store i32 %664, ptr %670, align 4
  store i32 %671, ptr %674, align 4
  store i32 1, ptr %675, align 4
  %676 = add nuw i32 %664, 1
  %677 = icmp ult i32 %676, %656
  br i1 %677, label %663, label %678

678:                                              ; preds = %663
  %679 = load ptr, ptr %645, align 4
  %680 = load ptr, ptr %638, align 4
  %681 = load ptr, ptr %647, align 4
  %682 = load i32, ptr %649, align 4
  %683 = ptrtoint ptr %680 to i32
  %684 = sub i32 %654, %683
  %685 = add i32 %682, -1
  %686 = shl nsw i32 -1, %685
  %687 = xor i32 %686, -1
  br label %688

688:                                              ; preds = %678, %644
  %689 = phi i32 [ %687, %678 ], [ %653, %644 ]
  %690 = phi i32 [ %684, %678 ], [ %656, %644 ]
  %691 = phi ptr [ %681, %678 ], [ %648, %644 ]
  %692 = phi ptr [ %680, %678 ], [ %639, %644 ]
  %693 = phi ptr [ %679, %678 ], [ %646, %644 ]
  store i32 %656, ptr %640, align 4
  %694 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %695 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %696 = load i32, ptr %695, align 4
  %697 = load i64, ptr %1, align 1
  %698 = mul i64 %697, -3523014627271114752
  %699 = sub i32 64, %696
  %700 = zext i32 %699 to i64
  %701 = lshr i64 %698, %700
  %702 = trunc i64 %701 to i32
  %703 = getelementptr i32, ptr %693, i32 %702
  %704 = load i32, ptr %694, align 4
  %705 = shl nuw i32 1, %704
  %706 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %707 = load i32, ptr %706, align 4
  %708 = sub i32 %690, %707
  %709 = icmp ugt i32 %708, %705
  %710 = sub i32 %690, %705
  %711 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %712 = load i32, ptr %711, align 4
  %713 = icmp eq i32 %712, 0
  %714 = select i1 %713, i1 %709, i1 false
  %715 = select i1 %714, i32 %710, i32 %707
  %716 = tail call i32 @llvm.usub.sat.i32(i32 %690, i32 %689) #7
  %717 = tail call i32 @llvm.umax.i32(i32 %716, i32 %715) #7
  %718 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %719 = load i32, ptr %718, align 4
  %720 = shl nuw i32 1, %719
  %721 = load i32, ptr %703, align 4
  %722 = icmp ugt i32 %721, %717
  br i1 %722, label %723, label %886

723:                                              ; preds = %735, %688
  %724 = phi i32 [ %737, %735 ], [ %721, %688 ]
  %725 = phi i32 [ %724, %735 ], [ 0, %688 ]
  %726 = phi i32 [ %736, %735 ], [ %720, %688 ]
  %727 = and i32 %724, %689
  %728 = shl i32 %727, 1
  %729 = getelementptr i32, ptr %691, i32 %728
  %730 = getelementptr i32, ptr %729, i32 1
  %731 = load i32, ptr %730, align 4
  %732 = icmp eq i32 %731, 1
  %733 = icmp ugt i32 %726, 1
  %734 = select i1 %732, i1 %733, i1 false
  br i1 %734, label %735, label %739

735:                                              ; preds = %723
  store i32 %725, ptr %730, align 4
  %736 = add i32 %726, -1
  %737 = load i32, ptr %729, align 4
  %738 = icmp ugt i32 %737, %717
  br i1 %738, label %723, label %743

739:                                              ; preds = %723
  br i1 %732, label %740, label %741

740:                                              ; preds = %739
  store i32 0, ptr %730, align 4
  store i32 0, ptr %729, align 4
  br label %741

741:                                              ; preds = %740, %739
  %742 = icmp eq i32 %725, 0
  br i1 %742, label %886, label %743

743:                                              ; preds = %741, %735
  %744 = phi i32 [ %725, %741 ], [ %724, %735 ]
  %745 = phi i32 [ %726, %741 ], [ %736, %735 ]
  %746 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %747 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %748 = getelementptr i32, ptr %691, i32 1
  br label %749

749:                                              ; preds = %881, %743
  %750 = phi i32 [ %744, %743 ], [ %755, %881 ]
  %751 = phi i32 [ %745, %743 ], [ %884, %881 ]
  %752 = and i32 %750, %689
  %753 = shl i32 %752, 1
  %754 = getelementptr i32, ptr %748, i32 %753
  %755 = load i32, ptr %754, align 4
  %756 = load ptr, ptr %647, align 4
  %757 = load i32, ptr %649, align 4
  %758 = add i32 %757, -1
  %759 = shl nsw i32 -1, %758
  %760 = xor i32 %759, -1
  %761 = load ptr, ptr %638, align 4
  %762 = load ptr, ptr %746, align 4
  %763 = load i32, ptr %747, align 4
  %764 = icmp ugt i32 %763, %750
  %765 = select i1 %764, ptr %762, ptr %761
  %766 = getelementptr i8, ptr %765, i32 %750
  %767 = getelementptr i8, ptr %762, i32 %763
  %768 = select i1 %764, ptr %767, ptr %2
  %769 = and i32 %750, %760
  %770 = shl i32 %769, 1
  %771 = getelementptr i32, ptr %756, i32 %770
  %772 = getelementptr i32, ptr %771, i32 1
  %773 = load i32, ptr %771, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7)
  store i32 0, ptr %7, align 4
  %774 = load i32, ptr %706, align 4
  %775 = load i32, ptr %694, align 4
  %776 = shl nuw i32 1, %775
  %777 = sub i32 %750, %774
  %778 = icmp ugt i32 %777, %776
  %779 = sub i32 %750, %776
  %780 = select i1 %778, i32 %779, i32 %774
  %781 = icmp ne i32 %751, 0
  %782 = icmp ugt i32 %773, %780
  %783 = select i1 %781, i1 %782, i1 false
  br i1 %783, label %784, label %881

784:                                              ; preds = %749
  %785 = getelementptr i8, ptr %768, i32 -3
  %786 = getelementptr i8, ptr %768, i32 -1
  br label %787

787:                                              ; preds = %870, %784
  %788 = phi i32 [ %751, %784 ], [ %877, %870 ]
  %789 = phi i32 [ %773, %784 ], [ %876, %870 ]
  %790 = phi ptr [ %772, %784 ], [ %874, %870 ]
  %791 = phi ptr [ %771, %784 ], [ %873, %870 ]
  %792 = phi i32 [ 0, %784 ], [ %872, %870 ]
  %793 = phi i32 [ 0, %784 ], [ %871, %870 ]
  %794 = and i32 %789, %760
  %795 = shl i32 %794, 1
  %796 = getelementptr i32, ptr %756, i32 %795
  %797 = tail call i32 @llvm.umin.i32(i32 %793, i32 %792) #7
  %798 = getelementptr i8, ptr %761, i32 %789
  %799 = getelementptr i8, ptr %766, i32 %797
  %800 = getelementptr i8, ptr %798, i32 %797
  %801 = icmp ugt ptr %785, %799
  br i1 %801, label %802, label %828

802:                                              ; preds = %787
  %803 = load i32, ptr %800, align 1
  %804 = load i32, ptr %799, align 1
  %805 = xor i32 %804, %803
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %810, label %807

807:                                              ; preds = %802
  %808 = tail call i32 @llvm.cttz.i32(i32 %805, i1 true) #7, !range !8
  %809 = lshr i32 %808, 3
  br label %854

810:                                              ; preds = %816, %802
  %811 = phi ptr [ %814, %816 ], [ %799, %802 ]
  %812 = phi ptr [ %813, %816 ], [ %800, %802 ]
  %813 = getelementptr i8, ptr %812, i32 4
  %814 = getelementptr i8, ptr %811, i32 4
  %815 = icmp ult ptr %814, %785
  br i1 %815, label %816, label %828

816:                                              ; preds = %810
  %817 = load i32, ptr %813, align 1
  %818 = load i32, ptr %814, align 1
  %819 = xor i32 %818, %817
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %810, label %821

821:                                              ; preds = %816
  %822 = tail call i32 @llvm.cttz.i32(i32 %819, i1 true) #7, !range !8
  %823 = lshr i32 %822, 3
  %824 = getelementptr i8, ptr %814, i32 %823
  %825 = ptrtoint ptr %824 to i32
  %826 = ptrtoint ptr %799 to i32
  %827 = sub i32 %825, %826
  br label %854

828:                                              ; preds = %810, %787
  %829 = phi ptr [ %799, %787 ], [ %814, %810 ]
  %830 = phi ptr [ %800, %787 ], [ %813, %810 ]
  %831 = icmp ult ptr %829, %786
  br i1 %831, label %832, label %839

832:                                              ; preds = %828
  %833 = load i16, ptr %830, align 1
  %834 = load i16, ptr %829, align 1
  %835 = icmp eq i16 %833, %834
  br i1 %835, label %836, label %839

836:                                              ; preds = %832
  %837 = getelementptr i8, ptr %829, i32 2
  %838 = getelementptr i8, ptr %830, i32 2
  br label %839

839:                                              ; preds = %836, %832, %828
  %840 = phi ptr [ %837, %836 ], [ %829, %832 ], [ %829, %828 ]
  %841 = phi ptr [ %838, %836 ], [ %830, %832 ], [ %830, %828 ]
  %842 = icmp ult ptr %840, %768
  br i1 %842, label %843, label %849

843:                                              ; preds = %839
  %844 = load i8, ptr %841, align 1
  %845 = load i8, ptr %840, align 1
  %846 = icmp eq i8 %844, %845
  %847 = zext i1 %846 to i32
  %848 = getelementptr i8, ptr %840, i32 %847
  br label %849

849:                                              ; preds = %843, %839
  %850 = phi ptr [ %840, %839 ], [ %848, %843 ]
  %851 = ptrtoint ptr %850 to i32
  %852 = ptrtoint ptr %799 to i32
  %853 = sub i32 %851, %852
  br label %854

854:                                              ; preds = %849, %821, %807
  %855 = phi i32 [ %853, %849 ], [ %809, %807 ], [ %827, %821 ]
  %856 = add i32 %855, %797
  %857 = getelementptr i8, ptr %766, i32 %856
  %858 = icmp eq ptr %857, %768
  br i1 %858, label %881, label %859

859:                                              ; preds = %854
  %860 = getelementptr i8, ptr %798, i32 %856
  %861 = load i8, ptr %860, align 1
  %862 = load i8, ptr %857, align 1
  %863 = icmp ult i8 %861, %862
  br i1 %863, label %864, label %868

864:                                              ; preds = %859
  store i32 %789, ptr %791, align 4
  %865 = icmp ugt i32 %789, %717
  br i1 %865, label %866, label %881

866:                                              ; preds = %864
  %867 = getelementptr i32, ptr %796, i32 1
  br label %870

868:                                              ; preds = %859
  store i32 %789, ptr %790, align 4
  %869 = icmp ugt i32 %789, %717
  br i1 %869, label %870, label %881

870:                                              ; preds = %868, %866
  %871 = phi i32 [ %856, %866 ], [ %793, %868 ]
  %872 = phi i32 [ %792, %866 ], [ %856, %868 ]
  %873 = phi ptr [ %867, %866 ], [ %791, %868 ]
  %874 = phi ptr [ %790, %866 ], [ %796, %868 ]
  %875 = phi ptr [ %867, %866 ], [ %796, %868 ]
  %876 = load i32, ptr %875, align 4
  %877 = add i32 %788, -1
  %878 = icmp ne i32 %877, 0
  %879 = icmp ugt i32 %876, %780
  %880 = select i1 %878, i1 %879, i1 false
  br i1 %880, label %787, label %881

881:                                              ; preds = %870, %868, %864, %854, %749
  %882 = phi ptr [ %771, %749 ], [ %873, %870 ], [ %791, %854 ], [ %7, %864 ], [ %791, %868 ]
  %883 = phi ptr [ %772, %749 ], [ %874, %870 ], [ %790, %854 ], [ %790, %864 ], [ %7, %868 ]
  store i32 0, ptr %883, align 4
  store i32 0, ptr %882, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7)
  %884 = add i32 %751, 1
  %885 = icmp eq i32 %755, 0
  br i1 %885, label %886, label %749

886:                                              ; preds = %881, %741, %688
  %887 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %888 = and i32 %690, %689
  %889 = shl i32 %888, 1
  %890 = getelementptr i32, ptr %691, i32 %889
  %891 = getelementptr i32, ptr %890, i32 1
  %892 = add i32 %690, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4
  %893 = load i32, ptr %703, align 4
  store i32 %690, ptr %703, align 4
  %894 = icmp ugt i32 %893, %715
  br i1 %894, label %896, label %895

895:                                              ; preds = %886
  store i32 0, ptr %891, align 4
  store i32 0, ptr %890, align 4
  br label %1028

896:                                              ; preds = %886
  %897 = getelementptr i8, ptr %2, i32 -3
  %898 = getelementptr i8, ptr %2, i32 -1
  %899 = add i32 %690, 1
  %900 = add i32 %690, 2
  br label %901

901:                                              ; preds = %1012, %896
  %902 = phi i32 [ 0, %896 ], [ %1000, %1012 ]
  %903 = phi i32 [ %892, %896 ], [ %999, %1012 ]
  %904 = phi ptr [ %891, %896 ], [ %1017, %1012 ]
  %905 = phi ptr [ %890, %896 ], [ %1016, %1012 ]
  %906 = phi i32 [ 0, %896 ], [ %1015, %1012 ]
  %907 = phi i32 [ 0, %896 ], [ %1014, %1012 ]
  %908 = phi i32 [ %893, %896 ], [ %1018, %1012 ]
  %909 = phi i32 [ %720, %896 ], [ %1019, %1012 ]
  %910 = and i32 %908, %689
  %911 = shl i32 %910, 1
  %912 = getelementptr i32, ptr %691, i32 %911
  %913 = tail call i32 @llvm.umin.i32(i32 %907, i32 %906) #7
  %914 = getelementptr i8, ptr %692, i32 %908
  %915 = getelementptr i8, ptr %1, i32 %913
  %916 = getelementptr i8, ptr %914, i32 %913
  %917 = icmp ugt ptr %897, %915
  br i1 %917, label %918, label %944

918:                                              ; preds = %901
  %919 = load i32, ptr %916, align 1
  %920 = load i32, ptr %915, align 1
  %921 = xor i32 %920, %919
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %926, label %923

923:                                              ; preds = %918
  %924 = tail call i32 @llvm.cttz.i32(i32 %921, i1 true) #7, !range !8
  %925 = lshr i32 %924, 3
  br label %970

926:                                              ; preds = %932, %918
  %927 = phi ptr [ %930, %932 ], [ %915, %918 ]
  %928 = phi ptr [ %929, %932 ], [ %916, %918 ]
  %929 = getelementptr i8, ptr %928, i32 4
  %930 = getelementptr i8, ptr %927, i32 4
  %931 = icmp ult ptr %930, %897
  br i1 %931, label %932, label %944

932:                                              ; preds = %926
  %933 = load i32, ptr %929, align 1
  %934 = load i32, ptr %930, align 1
  %935 = xor i32 %934, %933
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %926, label %937

937:                                              ; preds = %932
  %938 = tail call i32 @llvm.cttz.i32(i32 %935, i1 true) #7, !range !8
  %939 = lshr i32 %938, 3
  %940 = getelementptr i8, ptr %930, i32 %939
  %941 = ptrtoint ptr %940 to i32
  %942 = ptrtoint ptr %915 to i32
  %943 = sub i32 %941, %942
  br label %970

944:                                              ; preds = %926, %901
  %945 = phi ptr [ %915, %901 ], [ %930, %926 ]
  %946 = phi ptr [ %916, %901 ], [ %929, %926 ]
  %947 = icmp ult ptr %945, %898
  br i1 %947, label %948, label %955

948:                                              ; preds = %944
  %949 = load i16, ptr %946, align 1
  %950 = load i16, ptr %945, align 1
  %951 = icmp eq i16 %949, %950
  br i1 %951, label %952, label %955

952:                                              ; preds = %948
  %953 = getelementptr i8, ptr %945, i32 2
  %954 = getelementptr i8, ptr %946, i32 2
  br label %955

955:                                              ; preds = %952, %948, %944
  %956 = phi ptr [ %953, %952 ], [ %945, %948 ], [ %945, %944 ]
  %957 = phi ptr [ %954, %952 ], [ %946, %948 ], [ %946, %944 ]
  %958 = icmp ult ptr %956, %2
  br i1 %958, label %959, label %965

959:                                              ; preds = %955
  %960 = load i8, ptr %957, align 1
  %961 = load i8, ptr %956, align 1
  %962 = icmp eq i8 %960, %961
  %963 = zext i1 %962 to i32
  %964 = getelementptr i8, ptr %956, i32 %963
  br label %965

965:                                              ; preds = %959, %955
  %966 = phi ptr [ %956, %955 ], [ %964, %959 ]
  %967 = ptrtoint ptr %966 to i32
  %968 = ptrtoint ptr %915 to i32
  %969 = sub i32 %967, %968
  br label %970

970:                                              ; preds = %965, %937, %923
  %971 = phi i32 [ %969, %965 ], [ %925, %923 ], [ %943, %937 ]
  %972 = add i32 %971, %913
  %973 = icmp ugt i32 %972, %902
  br i1 %973, label %974, label %998

974:                                              ; preds = %970
  %975 = sub i32 %903, %908
  %976 = icmp ugt i32 %972, %975
  %977 = add i32 %972, %908
  %978 = select i1 %976, i32 %977, i32 %903
  %979 = sub i32 %972, %902
  %980 = shl i32 %979, 2
  %981 = sub i32 %899, %908
  %982 = tail call i32 @llvm.ctlz.i32(i32 %981, i1 false) #7, !range !8
  %983 = xor i32 %982, 31
  %984 = load i32, ptr %3, align 4
  %985 = add i32 %984, 1
  %986 = tail call i32 @llvm.ctlz.i32(i32 %985, i1 false) #7, !range !8
  %987 = xor i32 %986, -32
  %988 = add nuw nsw i32 %983, 1
  %989 = add nsw i32 %988, %987
  %990 = icmp sgt i32 %980, %989
  br i1 %990, label %991, label %993

991:                                              ; preds = %974
  %992 = sub i32 %900, %908
  store i32 %992, ptr %3, align 4
  br label %993

993:                                              ; preds = %991, %974
  %994 = phi i32 [ %972, %991 ], [ %902, %974 ]
  %995 = getelementptr i8, ptr %1, i32 %972
  %996 = icmp eq ptr %995, %2
  br i1 %996, label %997, label %998

997:                                              ; preds = %993
  store i32 0, ptr %904, align 4
  store i32 0, ptr %905, align 4
  br label %1263

998:                                              ; preds = %993, %970
  %999 = phi i32 [ %978, %993 ], [ %903, %970 ]
  %1000 = phi i32 [ %994, %993 ], [ %902, %970 ]
  %1001 = getelementptr i8, ptr %914, i32 %972
  %1002 = load i8, ptr %1001, align 1
  %1003 = getelementptr i8, ptr %1, i32 %972
  %1004 = load i8, ptr %1003, align 1
  %1005 = icmp ult i8 %1002, %1004
  br i1 %1005, label %1006, label %1010

1006:                                             ; preds = %998
  store i32 %908, ptr %905, align 4
  %1007 = icmp ugt i32 %908, %716
  br i1 %1007, label %1008, label %1023

1008:                                             ; preds = %1006
  %1009 = getelementptr i32, ptr %912, i32 1
  br label %1012

1010:                                             ; preds = %998
  store i32 %908, ptr %904, align 4
  %1011 = icmp ugt i32 %908, %716
  br i1 %1011, label %1012, label %1023

1012:                                             ; preds = %1010, %1008
  %1013 = phi ptr [ %1009, %1008 ], [ %912, %1010 ]
  %1014 = phi i32 [ %972, %1008 ], [ %907, %1010 ]
  %1015 = phi i32 [ %906, %1008 ], [ %972, %1010 ]
  %1016 = phi ptr [ %1009, %1008 ], [ %905, %1010 ]
  %1017 = phi ptr [ %904, %1008 ], [ %912, %1010 ]
  %1018 = load i32, ptr %1013, align 4
  %1019 = add i32 %909, -1
  %1020 = icmp ne i32 %1019, 0
  %1021 = icmp ugt i32 %1018, %715
  %1022 = select i1 %1020, i1 %1021, i1 false
  br i1 %1022, label %901, label %1023

1023:                                             ; preds = %1012, %1010, %1006
  %1024 = phi i32 [ %909, %1010 ], [ %909, %1006 ], [ %1019, %1012 ]
  %1025 = phi ptr [ %905, %1010 ], [ %8, %1006 ], [ %1016, %1012 ]
  %1026 = phi ptr [ %8, %1010 ], [ %904, %1006 ], [ %1017, %1012 ]
  store i32 0, ptr %1026, align 4
  store i32 0, ptr %1025, align 4
  %1027 = icmp eq i32 %1024, 0
  br i1 %1027, label %1263, label %1028

1028:                                             ; preds = %1023, %895
  %1029 = phi i32 [ 0, %895 ], [ %1000, %1023 ]
  %1030 = phi i32 [ %892, %895 ], [ %999, %1023 ]
  %1031 = phi i32 [ %720, %895 ], [ %1024, %1023 ]
  %1032 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %1033 = load ptr, ptr %1032, align 4
  %1034 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1033, i32 0, i32 4
  %1035 = load ptr, ptr %1034, align 4
  %1036 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1033, i32 0, i32 10, i32 2
  %1037 = load i32, ptr %1036, align 4
  %1038 = load i64, ptr %1, align 1
  %1039 = mul i64 %1038, -3523014627271114752
  %1040 = sub i32 64, %1037
  %1041 = zext i32 %1040 to i64
  %1042 = lshr i64 %1039, %1041
  %1043 = trunc i64 %1042 to i32
  %1044 = getelementptr i32, ptr %1035, i32 %1043
  %1045 = load ptr, ptr %638, align 4
  %1046 = load i32, ptr %887, align 4
  %1047 = getelementptr i8, ptr %1045, i32 %1046
  %1048 = getelementptr inbounds %struct.ZSTD_window_t, ptr %1033, i32 0, i32 1
  %1049 = load ptr, ptr %1048, align 4
  %1050 = load ptr, ptr %1033, align 4
  %1051 = ptrtoint ptr %1050 to i32
  %1052 = ptrtoint ptr %1049 to i32
  %1053 = sub i32 %1051, %1052
  %1054 = getelementptr inbounds %struct.ZSTD_window_t, ptr %1033, i32 0, i32 4
  %1055 = load i32, ptr %1054, align 4
  %1056 = load i32, ptr %706, align 4
  %1057 = sub i32 %1056, %1053
  %1058 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1033, i32 0, i32 6
  %1059 = load ptr, ptr %1058, align 4
  %1060 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1033, i32 0, i32 10, i32 1
  %1061 = load i32, ptr %1060, align 4
  %1062 = add i32 %1061, -1
  %1063 = shl nsw i32 -1, %1062
  %1064 = xor i32 %1063, -1
  %1065 = sub i32 %1053, %1055
  %1066 = icmp ugt i32 %1065, %1064
  %1067 = sub i32 %1053, %1064
  %1068 = select i1 %1066, i32 %1067, i32 %1055
  %1069 = load i32, ptr %1044, align 4
  %1070 = icmp ugt i32 %1069, %1055
  br i1 %1070, label %1071, label %1263

1071:                                             ; preds = %1028
  %1072 = ptrtoint ptr %1045 to i32
  %1073 = sub i32 %654, %1072
  %1074 = getelementptr i8, ptr %2, i32 -3
  %1075 = getelementptr i8, ptr %2, i32 -1
  %1076 = add i32 %1073, 1
  %1077 = add i32 %1073, 2
  %1078 = getelementptr i8, ptr %1045, i32 %1057
  br label %1079

1079:                                             ; preds = %1254, %1071
  %1080 = phi i32 [ %1069, %1071 ], [ %1259, %1254 ]
  %1081 = phi i32 [ %1029, %1071 ], [ %1243, %1254 ]
  %1082 = phi i32 [ 0, %1071 ], [ %1257, %1254 ]
  %1083 = phi i32 [ 0, %1071 ], [ %1256, %1254 ]
  %1084 = phi i32 [ %1031, %1071 ], [ %1258, %1254 ]
  %1085 = and i32 %1080, %1064
  %1086 = shl i32 %1085, 1
  %1087 = getelementptr i32, ptr %1059, i32 %1086
  %1088 = tail call i32 @llvm.umin.i32(i32 %1083, i32 %1082) #7
  %1089 = getelementptr i8, ptr %1049, i32 %1080
  %1090 = getelementptr i8, ptr %1, i32 %1088
  %1091 = getelementptr i8, ptr %1089, i32 %1088
  %1092 = ptrtoint ptr %1091 to i32
  %1093 = sub i32 %1051, %1092
  %1094 = getelementptr i8, ptr %1090, i32 %1093
  %1095 = icmp ult ptr %1094, %2
  %1096 = select i1 %1095, ptr %1094, ptr %2
  %1097 = getelementptr i8, ptr %1096, i32 -3
  %1098 = icmp ugt ptr %1097, %1090
  br i1 %1098, label %1099, label %1125

1099:                                             ; preds = %1079
  %1100 = load i32, ptr %1091, align 1
  %1101 = load i32, ptr %1090, align 1
  %1102 = xor i32 %1101, %1100
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1107, label %1104

1104:                                             ; preds = %1099
  %1105 = tail call i32 @llvm.cttz.i32(i32 %1102, i1 true) #7, !range !8
  %1106 = lshr i32 %1105, 3
  br label %1152

1107:                                             ; preds = %1113, %1099
  %1108 = phi ptr [ %1111, %1113 ], [ %1090, %1099 ]
  %1109 = phi ptr [ %1110, %1113 ], [ %1091, %1099 ]
  %1110 = getelementptr i8, ptr %1109, i32 4
  %1111 = getelementptr i8, ptr %1108, i32 4
  %1112 = icmp ult ptr %1111, %1097
  br i1 %1112, label %1113, label %1125

1113:                                             ; preds = %1107
  %1114 = load i32, ptr %1110, align 1
  %1115 = load i32, ptr %1111, align 1
  %1116 = xor i32 %1115, %1114
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1107, label %1118

1118:                                             ; preds = %1113
  %1119 = tail call i32 @llvm.cttz.i32(i32 %1116, i1 true) #7, !range !8
  %1120 = lshr i32 %1119, 3
  %1121 = getelementptr i8, ptr %1111, i32 %1120
  %1122 = ptrtoint ptr %1121 to i32
  %1123 = ptrtoint ptr %1090 to i32
  %1124 = sub i32 %1122, %1123
  br label %1152

1125:                                             ; preds = %1107, %1079
  %1126 = phi ptr [ %1090, %1079 ], [ %1111, %1107 ]
  %1127 = phi ptr [ %1091, %1079 ], [ %1110, %1107 ]
  %1128 = getelementptr i8, ptr %1096, i32 -1
  %1129 = icmp ult ptr %1126, %1128
  br i1 %1129, label %1130, label %1137

1130:                                             ; preds = %1125
  %1131 = load i16, ptr %1127, align 1
  %1132 = load i16, ptr %1126, align 1
  %1133 = icmp eq i16 %1131, %1132
  br i1 %1133, label %1134, label %1137

1134:                                             ; preds = %1130
  %1135 = getelementptr i8, ptr %1126, i32 2
  %1136 = getelementptr i8, ptr %1127, i32 2
  br label %1137

1137:                                             ; preds = %1134, %1130, %1125
  %1138 = phi ptr [ %1135, %1134 ], [ %1126, %1130 ], [ %1126, %1125 ]
  %1139 = phi ptr [ %1136, %1134 ], [ %1127, %1130 ], [ %1127, %1125 ]
  %1140 = icmp ult ptr %1138, %1096
  br i1 %1140, label %1141, label %1147

1141:                                             ; preds = %1137
  %1142 = load i8, ptr %1139, align 1
  %1143 = load i8, ptr %1138, align 1
  %1144 = icmp eq i8 %1142, %1143
  %1145 = zext i1 %1144 to i32
  %1146 = getelementptr i8, ptr %1138, i32 %1145
  br label %1147

1147:                                             ; preds = %1141, %1137
  %1148 = phi ptr [ %1138, %1137 ], [ %1146, %1141 ]
  %1149 = ptrtoint ptr %1148 to i32
  %1150 = ptrtoint ptr %1090 to i32
  %1151 = sub i32 %1149, %1150
  br label %1152

1152:                                             ; preds = %1147, %1118, %1104
  %1153 = phi i32 [ %1151, %1147 ], [ %1106, %1104 ], [ %1124, %1118 ]
  %1154 = getelementptr i8, ptr %1091, i32 %1153
  %1155 = icmp eq ptr %1154, %1050
  br i1 %1155, label %1156, label %1214

1156:                                             ; preds = %1152
  %1157 = getelementptr i8, ptr %1090, i32 %1153
  %1158 = icmp ugt ptr %1074, %1157
  br i1 %1158, label %1159, label %1185

1159:                                             ; preds = %1156
  %1160 = load i32, ptr %1047, align 1
  %1161 = load i32, ptr %1157, align 1
  %1162 = xor i32 %1161, %1160
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1167, label %1164

1164:                                             ; preds = %1159
  %1165 = tail call i32 @llvm.cttz.i32(i32 %1162, i1 true) #7, !range !8
  %1166 = lshr i32 %1165, 3
  br label %1211

1167:                                             ; preds = %1173, %1159
  %1168 = phi ptr [ %1171, %1173 ], [ %1157, %1159 ]
  %1169 = phi ptr [ %1170, %1173 ], [ %1047, %1159 ]
  %1170 = getelementptr i8, ptr %1169, i32 4
  %1171 = getelementptr i8, ptr %1168, i32 4
  %1172 = icmp ult ptr %1171, %1074
  br i1 %1172, label %1173, label %1185

1173:                                             ; preds = %1167
  %1174 = load i32, ptr %1170, align 1
  %1175 = load i32, ptr %1171, align 1
  %1176 = xor i32 %1175, %1174
  %1177 = icmp eq i32 %1176, 0
  br i1 %1177, label %1167, label %1178

1178:                                             ; preds = %1173
  %1179 = tail call i32 @llvm.cttz.i32(i32 %1176, i1 true) #7, !range !8
  %1180 = lshr i32 %1179, 3
  %1181 = getelementptr i8, ptr %1171, i32 %1180
  %1182 = ptrtoint ptr %1181 to i32
  %1183 = ptrtoint ptr %1157 to i32
  %1184 = sub i32 %1182, %1183
  br label %1211

1185:                                             ; preds = %1167, %1156
  %1186 = phi ptr [ %1157, %1156 ], [ %1171, %1167 ]
  %1187 = phi ptr [ %1047, %1156 ], [ %1170, %1167 ]
  %1188 = icmp ult ptr %1186, %1075
  br i1 %1188, label %1189, label %1196

1189:                                             ; preds = %1185
  %1190 = load i16, ptr %1187, align 1
  %1191 = load i16, ptr %1186, align 1
  %1192 = icmp eq i16 %1190, %1191
  br i1 %1192, label %1193, label %1196

1193:                                             ; preds = %1189
  %1194 = getelementptr i8, ptr %1186, i32 2
  %1195 = getelementptr i8, ptr %1187, i32 2
  br label %1196

1196:                                             ; preds = %1193, %1189, %1185
  %1197 = phi ptr [ %1194, %1193 ], [ %1186, %1189 ], [ %1186, %1185 ]
  %1198 = phi ptr [ %1195, %1193 ], [ %1187, %1189 ], [ %1187, %1185 ]
  %1199 = icmp ult ptr %1197, %2
  br i1 %1199, label %1200, label %1206

1200:                                             ; preds = %1196
  %1201 = load i8, ptr %1198, align 1
  %1202 = load i8, ptr %1197, align 1
  %1203 = icmp eq i8 %1201, %1202
  %1204 = zext i1 %1203 to i32
  %1205 = getelementptr i8, ptr %1197, i32 %1204
  br label %1206

1206:                                             ; preds = %1200, %1196
  %1207 = phi ptr [ %1197, %1196 ], [ %1205, %1200 ]
  %1208 = ptrtoint ptr %1207 to i32
  %1209 = ptrtoint ptr %1157 to i32
  %1210 = sub i32 %1208, %1209
  br label %1211

1211:                                             ; preds = %1206, %1178, %1164
  %1212 = phi i32 [ %1210, %1206 ], [ %1166, %1164 ], [ %1184, %1178 ]
  %1213 = add i32 %1212, %1153
  br label %1214

1214:                                             ; preds = %1211, %1152
  %1215 = phi i32 [ %1213, %1211 ], [ %1153, %1152 ]
  %1216 = add i32 %1215, %1088
  %1217 = add i32 %1216, %1080
  %1218 = icmp ult i32 %1217, %1053
  %1219 = getelementptr i8, ptr %1078, i32 %1080
  %1220 = select i1 %1218, ptr %1089, ptr %1219
  %1221 = icmp ugt i32 %1216, %1081
  br i1 %1221, label %1222, label %1242

1222:                                             ; preds = %1214
  %1223 = add i32 %1080, %1057
  %1224 = sub i32 %1216, %1081
  %1225 = shl i32 %1224, 2
  %1226 = sub i32 %1076, %1223
  %1227 = tail call i32 @llvm.ctlz.i32(i32 %1226, i1 false) #7, !range !8
  %1228 = xor i32 %1227, 31
  %1229 = load i32, ptr %3, align 4
  %1230 = add i32 %1229, 1
  %1231 = tail call i32 @llvm.ctlz.i32(i32 %1230, i1 false) #7, !range !8
  %1232 = xor i32 %1231, -32
  %1233 = add nuw nsw i32 %1228, 1
  %1234 = add nsw i32 %1233, %1232
  %1235 = icmp sgt i32 %1225, %1234
  br i1 %1235, label %1236, label %1238

1236:                                             ; preds = %1222
  %1237 = sub i32 %1077, %1223
  store i32 %1237, ptr %3, align 4
  br label %1238

1238:                                             ; preds = %1236, %1222
  %1239 = phi i32 [ %1216, %1236 ], [ %1081, %1222 ]
  %1240 = getelementptr i8, ptr %1, i32 %1216
  %1241 = icmp eq ptr %1240, %2
  br i1 %1241, label %1263, label %1242

1242:                                             ; preds = %1238, %1214
  %1243 = phi i32 [ %1239, %1238 ], [ %1081, %1214 ]
  %1244 = getelementptr i8, ptr %1220, i32 %1216
  %1245 = load i8, ptr %1244, align 1
  %1246 = getelementptr i8, ptr %1, i32 %1216
  %1247 = load i8, ptr %1246, align 1
  %1248 = icmp ult i8 %1245, %1247
  %1249 = icmp ugt i32 %1080, %1068
  br i1 %1248, label %1250, label %1253

1250:                                             ; preds = %1242
  br i1 %1249, label %1251, label %1263

1251:                                             ; preds = %1250
  %1252 = getelementptr i32, ptr %1087, i32 1
  br label %1254

1253:                                             ; preds = %1242
  br i1 %1249, label %1254, label %1263

1254:                                             ; preds = %1253, %1251
  %1255 = phi ptr [ %1252, %1251 ], [ %1087, %1253 ]
  %1256 = phi i32 [ %1216, %1251 ], [ %1083, %1253 ]
  %1257 = phi i32 [ %1082, %1251 ], [ %1216, %1253 ]
  %1258 = add i32 %1084, -1
  %1259 = load i32, ptr %1255, align 4
  %1260 = icmp ne i32 %1258, 0
  %1261 = icmp ugt i32 %1259, %1055
  %1262 = select i1 %1260, i1 %1261, i1 false
  br i1 %1262, label %1079, label %1263

1263:                                             ; preds = %1254, %1253, %1250, %1238, %1028, %1023, %997
  %1264 = phi i32 [ %999, %1023 ], [ %1030, %1028 ], [ %978, %997 ], [ %1030, %1238 ], [ %1030, %1250 ], [ %1030, %1253 ], [ %1030, %1254 ]
  %1265 = phi i32 [ %1000, %1023 ], [ %1029, %1028 ], [ %994, %997 ], [ %1243, %1254 ], [ %1243, %1253 ], [ %1243, %1250 ], [ %1239, %1238 ]
  %1266 = add i32 %1264, -8
  store i32 %1266, ptr %640, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  br label %1897

1267:                                             ; preds = %4, %4
  %1268 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %1269 = load ptr, ptr %1268, align 4
  %1270 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %1271 = load i32, ptr %1270, align 4
  %1272 = getelementptr i8, ptr %1269, i32 %1271
  %1273 = icmp ugt ptr %1272, %1
  br i1 %1273, label %1897, label %1274

1274:                                             ; preds = %1267
  %1275 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %1276 = load ptr, ptr %1275, align 4
  %1277 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %1278 = load ptr, ptr %1277, align 4
  %1279 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %1280 = load i32, ptr %1279, align 4
  %1281 = add i32 %1280, -1
  %1282 = shl nsw i32 -1, %1281
  %1283 = xor i32 %1282, -1
  %1284 = ptrtoint ptr %1 to i32
  %1285 = ptrtoint ptr %1269 to i32
  %1286 = sub i32 %1284, %1285
  %1287 = icmp ult i32 %1271, %1286
  br i1 %1287, label %1288, label %1318

1288:                                             ; preds = %1274
  %1289 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %1290 = load i32, ptr %1289, align 4
  %1291 = sub i32 64, %1290
  %1292 = zext i32 %1291 to i64
  br label %1293

1293:                                             ; preds = %1293, %1288
  %1294 = phi i32 [ %1271, %1288 ], [ %1306, %1293 ]
  %1295 = getelementptr i8, ptr %1269, i32 %1294
  %1296 = load i64, ptr %1295, align 1
  %1297 = mul i64 %1296, -3523014627193847808
  %1298 = lshr i64 %1297, %1292
  %1299 = trunc i64 %1298 to i32
  %1300 = getelementptr i32, ptr %1276, i32 %1299
  %1301 = load i32, ptr %1300, align 4
  %1302 = and i32 %1294, %1283
  %1303 = shl i32 %1302, 1
  %1304 = getelementptr i32, ptr %1278, i32 %1303
  %1305 = getelementptr i32, ptr %1304, i32 1
  store i32 %1294, ptr %1300, align 4
  store i32 %1301, ptr %1304, align 4
  store i32 1, ptr %1305, align 4
  %1306 = add nuw i32 %1294, 1
  %1307 = icmp ult i32 %1306, %1286
  br i1 %1307, label %1293, label %1308

1308:                                             ; preds = %1293
  %1309 = load ptr, ptr %1275, align 4
  %1310 = load ptr, ptr %1268, align 4
  %1311 = load ptr, ptr %1277, align 4
  %1312 = load i32, ptr %1279, align 4
  %1313 = ptrtoint ptr %1310 to i32
  %1314 = sub i32 %1284, %1313
  %1315 = add i32 %1312, -1
  %1316 = shl nsw i32 -1, %1315
  %1317 = xor i32 %1316, -1
  br label %1318

1318:                                             ; preds = %1308, %1274
  %1319 = phi i32 [ %1317, %1308 ], [ %1283, %1274 ]
  %1320 = phi i32 [ %1314, %1308 ], [ %1286, %1274 ]
  %1321 = phi ptr [ %1311, %1308 ], [ %1278, %1274 ]
  %1322 = phi ptr [ %1310, %1308 ], [ %1269, %1274 ]
  %1323 = phi ptr [ %1309, %1308 ], [ %1276, %1274 ]
  store i32 %1286, ptr %1270, align 4
  %1324 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %1325 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %1326 = load i32, ptr %1325, align 4
  %1327 = load i64, ptr %1, align 1
  %1328 = mul i64 %1327, -3523014627193847808
  %1329 = sub i32 64, %1326
  %1330 = zext i32 %1329 to i64
  %1331 = lshr i64 %1328, %1330
  %1332 = trunc i64 %1331 to i32
  %1333 = getelementptr i32, ptr %1323, i32 %1332
  %1334 = load i32, ptr %1324, align 4
  %1335 = shl nuw i32 1, %1334
  %1336 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %1337 = load i32, ptr %1336, align 4
  %1338 = sub i32 %1320, %1337
  %1339 = icmp ugt i32 %1338, %1335
  %1340 = sub i32 %1320, %1335
  %1341 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %1342 = load i32, ptr %1341, align 4
  %1343 = icmp eq i32 %1342, 0
  %1344 = select i1 %1343, i1 %1339, i1 false
  %1345 = select i1 %1344, i32 %1340, i32 %1337
  %1346 = tail call i32 @llvm.usub.sat.i32(i32 %1320, i32 %1319) #7
  %1347 = tail call i32 @llvm.umax.i32(i32 %1346, i32 %1345) #7
  %1348 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %1349 = load i32, ptr %1348, align 4
  %1350 = shl nuw i32 1, %1349
  %1351 = load i32, ptr %1333, align 4
  %1352 = icmp ugt i32 %1351, %1347
  br i1 %1352, label %1353, label %1516

1353:                                             ; preds = %1365, %1318
  %1354 = phi i32 [ %1367, %1365 ], [ %1351, %1318 ]
  %1355 = phi i32 [ %1354, %1365 ], [ 0, %1318 ]
  %1356 = phi i32 [ %1366, %1365 ], [ %1350, %1318 ]
  %1357 = and i32 %1354, %1319
  %1358 = shl i32 %1357, 1
  %1359 = getelementptr i32, ptr %1321, i32 %1358
  %1360 = getelementptr i32, ptr %1359, i32 1
  %1361 = load i32, ptr %1360, align 4
  %1362 = icmp eq i32 %1361, 1
  %1363 = icmp ugt i32 %1356, 1
  %1364 = select i1 %1362, i1 %1363, i1 false
  br i1 %1364, label %1365, label %1369

1365:                                             ; preds = %1353
  store i32 %1355, ptr %1360, align 4
  %1366 = add i32 %1356, -1
  %1367 = load i32, ptr %1359, align 4
  %1368 = icmp ugt i32 %1367, %1347
  br i1 %1368, label %1353, label %1373

1369:                                             ; preds = %1353
  br i1 %1362, label %1370, label %1371

1370:                                             ; preds = %1369
  store i32 0, ptr %1360, align 4
  store i32 0, ptr %1359, align 4
  br label %1371

1371:                                             ; preds = %1370, %1369
  %1372 = icmp eq i32 %1355, 0
  br i1 %1372, label %1516, label %1373

1373:                                             ; preds = %1371, %1365
  %1374 = phi i32 [ %1355, %1371 ], [ %1354, %1365 ]
  %1375 = phi i32 [ %1356, %1371 ], [ %1366, %1365 ]
  %1376 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %1377 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1378 = getelementptr i32, ptr %1321, i32 1
  br label %1379

1379:                                             ; preds = %1511, %1373
  %1380 = phi i32 [ %1374, %1373 ], [ %1385, %1511 ]
  %1381 = phi i32 [ %1375, %1373 ], [ %1514, %1511 ]
  %1382 = and i32 %1380, %1319
  %1383 = shl i32 %1382, 1
  %1384 = getelementptr i32, ptr %1378, i32 %1383
  %1385 = load i32, ptr %1384, align 4
  %1386 = load ptr, ptr %1277, align 4
  %1387 = load i32, ptr %1279, align 4
  %1388 = add i32 %1387, -1
  %1389 = shl nsw i32 -1, %1388
  %1390 = xor i32 %1389, -1
  %1391 = load ptr, ptr %1268, align 4
  %1392 = load ptr, ptr %1376, align 4
  %1393 = load i32, ptr %1377, align 4
  %1394 = icmp ugt i32 %1393, %1380
  %1395 = select i1 %1394, ptr %1392, ptr %1391
  %1396 = getelementptr i8, ptr %1395, i32 %1380
  %1397 = getelementptr i8, ptr %1392, i32 %1393
  %1398 = select i1 %1394, ptr %1397, ptr %2
  %1399 = and i32 %1380, %1390
  %1400 = shl i32 %1399, 1
  %1401 = getelementptr i32, ptr %1386, i32 %1400
  %1402 = getelementptr i32, ptr %1401, i32 1
  %1403 = load i32, ptr %1401, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5)
  store i32 0, ptr %5, align 4
  %1404 = load i32, ptr %1336, align 4
  %1405 = load i32, ptr %1324, align 4
  %1406 = shl nuw i32 1, %1405
  %1407 = sub i32 %1380, %1404
  %1408 = icmp ugt i32 %1407, %1406
  %1409 = sub i32 %1380, %1406
  %1410 = select i1 %1408, i32 %1409, i32 %1404
  %1411 = icmp ne i32 %1381, 0
  %1412 = icmp ugt i32 %1403, %1410
  %1413 = select i1 %1411, i1 %1412, i1 false
  br i1 %1413, label %1414, label %1511

1414:                                             ; preds = %1379
  %1415 = getelementptr i8, ptr %1398, i32 -3
  %1416 = getelementptr i8, ptr %1398, i32 -1
  br label %1417

1417:                                             ; preds = %1500, %1414
  %1418 = phi i32 [ %1381, %1414 ], [ %1507, %1500 ]
  %1419 = phi i32 [ %1403, %1414 ], [ %1506, %1500 ]
  %1420 = phi ptr [ %1402, %1414 ], [ %1504, %1500 ]
  %1421 = phi ptr [ %1401, %1414 ], [ %1503, %1500 ]
  %1422 = phi i32 [ 0, %1414 ], [ %1502, %1500 ]
  %1423 = phi i32 [ 0, %1414 ], [ %1501, %1500 ]
  %1424 = and i32 %1419, %1390
  %1425 = shl i32 %1424, 1
  %1426 = getelementptr i32, ptr %1386, i32 %1425
  %1427 = tail call i32 @llvm.umin.i32(i32 %1423, i32 %1422) #7
  %1428 = getelementptr i8, ptr %1391, i32 %1419
  %1429 = getelementptr i8, ptr %1396, i32 %1427
  %1430 = getelementptr i8, ptr %1428, i32 %1427
  %1431 = icmp ugt ptr %1415, %1429
  br i1 %1431, label %1432, label %1458

1432:                                             ; preds = %1417
  %1433 = load i32, ptr %1430, align 1
  %1434 = load i32, ptr %1429, align 1
  %1435 = xor i32 %1434, %1433
  %1436 = icmp eq i32 %1435, 0
  br i1 %1436, label %1440, label %1437

1437:                                             ; preds = %1432
  %1438 = tail call i32 @llvm.cttz.i32(i32 %1435, i1 true) #7, !range !8
  %1439 = lshr i32 %1438, 3
  br label %1484

1440:                                             ; preds = %1446, %1432
  %1441 = phi ptr [ %1444, %1446 ], [ %1429, %1432 ]
  %1442 = phi ptr [ %1443, %1446 ], [ %1430, %1432 ]
  %1443 = getelementptr i8, ptr %1442, i32 4
  %1444 = getelementptr i8, ptr %1441, i32 4
  %1445 = icmp ult ptr %1444, %1415
  br i1 %1445, label %1446, label %1458

1446:                                             ; preds = %1440
  %1447 = load i32, ptr %1443, align 1
  %1448 = load i32, ptr %1444, align 1
  %1449 = xor i32 %1448, %1447
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1440, label %1451

1451:                                             ; preds = %1446
  %1452 = tail call i32 @llvm.cttz.i32(i32 %1449, i1 true) #7, !range !8
  %1453 = lshr i32 %1452, 3
  %1454 = getelementptr i8, ptr %1444, i32 %1453
  %1455 = ptrtoint ptr %1454 to i32
  %1456 = ptrtoint ptr %1429 to i32
  %1457 = sub i32 %1455, %1456
  br label %1484

1458:                                             ; preds = %1440, %1417
  %1459 = phi ptr [ %1429, %1417 ], [ %1444, %1440 ]
  %1460 = phi ptr [ %1430, %1417 ], [ %1443, %1440 ]
  %1461 = icmp ult ptr %1459, %1416
  br i1 %1461, label %1462, label %1469

1462:                                             ; preds = %1458
  %1463 = load i16, ptr %1460, align 1
  %1464 = load i16, ptr %1459, align 1
  %1465 = icmp eq i16 %1463, %1464
  br i1 %1465, label %1466, label %1469

1466:                                             ; preds = %1462
  %1467 = getelementptr i8, ptr %1459, i32 2
  %1468 = getelementptr i8, ptr %1460, i32 2
  br label %1469

1469:                                             ; preds = %1466, %1462, %1458
  %1470 = phi ptr [ %1467, %1466 ], [ %1459, %1462 ], [ %1459, %1458 ]
  %1471 = phi ptr [ %1468, %1466 ], [ %1460, %1462 ], [ %1460, %1458 ]
  %1472 = icmp ult ptr %1470, %1398
  br i1 %1472, label %1473, label %1479

1473:                                             ; preds = %1469
  %1474 = load i8, ptr %1471, align 1
  %1475 = load i8, ptr %1470, align 1
  %1476 = icmp eq i8 %1474, %1475
  %1477 = zext i1 %1476 to i32
  %1478 = getelementptr i8, ptr %1470, i32 %1477
  br label %1479

1479:                                             ; preds = %1473, %1469
  %1480 = phi ptr [ %1470, %1469 ], [ %1478, %1473 ]
  %1481 = ptrtoint ptr %1480 to i32
  %1482 = ptrtoint ptr %1429 to i32
  %1483 = sub i32 %1481, %1482
  br label %1484

1484:                                             ; preds = %1479, %1451, %1437
  %1485 = phi i32 [ %1483, %1479 ], [ %1439, %1437 ], [ %1457, %1451 ]
  %1486 = add i32 %1485, %1427
  %1487 = getelementptr i8, ptr %1396, i32 %1486
  %1488 = icmp eq ptr %1487, %1398
  br i1 %1488, label %1511, label %1489

1489:                                             ; preds = %1484
  %1490 = getelementptr i8, ptr %1428, i32 %1486
  %1491 = load i8, ptr %1490, align 1
  %1492 = load i8, ptr %1487, align 1
  %1493 = icmp ult i8 %1491, %1492
  br i1 %1493, label %1494, label %1498

1494:                                             ; preds = %1489
  store i32 %1419, ptr %1421, align 4
  %1495 = icmp ugt i32 %1419, %1347
  br i1 %1495, label %1496, label %1511

1496:                                             ; preds = %1494
  %1497 = getelementptr i32, ptr %1426, i32 1
  br label %1500

1498:                                             ; preds = %1489
  store i32 %1419, ptr %1420, align 4
  %1499 = icmp ugt i32 %1419, %1347
  br i1 %1499, label %1500, label %1511

1500:                                             ; preds = %1498, %1496
  %1501 = phi i32 [ %1486, %1496 ], [ %1423, %1498 ]
  %1502 = phi i32 [ %1422, %1496 ], [ %1486, %1498 ]
  %1503 = phi ptr [ %1497, %1496 ], [ %1421, %1498 ]
  %1504 = phi ptr [ %1420, %1496 ], [ %1426, %1498 ]
  %1505 = phi ptr [ %1497, %1496 ], [ %1426, %1498 ]
  %1506 = load i32, ptr %1505, align 4
  %1507 = add i32 %1418, -1
  %1508 = icmp ne i32 %1507, 0
  %1509 = icmp ugt i32 %1506, %1410
  %1510 = select i1 %1508, i1 %1509, i1 false
  br i1 %1510, label %1417, label %1511

1511:                                             ; preds = %1500, %1498, %1494, %1484, %1379
  %1512 = phi ptr [ %1401, %1379 ], [ %1503, %1500 ], [ %1421, %1484 ], [ %5, %1494 ], [ %1421, %1498 ]
  %1513 = phi ptr [ %1402, %1379 ], [ %1504, %1500 ], [ %1420, %1484 ], [ %1420, %1494 ], [ %5, %1498 ]
  store i32 0, ptr %1513, align 4
  store i32 0, ptr %1512, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5)
  %1514 = add i32 %1381, 1
  %1515 = icmp eq i32 %1385, 0
  br i1 %1515, label %1516, label %1379

1516:                                             ; preds = %1511, %1371, %1318
  %1517 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1518 = and i32 %1320, %1319
  %1519 = shl i32 %1518, 1
  %1520 = getelementptr i32, ptr %1321, i32 %1519
  %1521 = getelementptr i32, ptr %1520, i32 1
  %1522 = add i32 %1320, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4
  %1523 = load i32, ptr %1333, align 4
  store i32 %1320, ptr %1333, align 4
  %1524 = icmp ugt i32 %1523, %1345
  br i1 %1524, label %1526, label %1525

1525:                                             ; preds = %1516
  store i32 0, ptr %1521, align 4
  store i32 0, ptr %1520, align 4
  br label %1658

1526:                                             ; preds = %1516
  %1527 = getelementptr i8, ptr %2, i32 -3
  %1528 = getelementptr i8, ptr %2, i32 -1
  %1529 = add i32 %1320, 1
  %1530 = add i32 %1320, 2
  br label %1531

1531:                                             ; preds = %1642, %1526
  %1532 = phi i32 [ 0, %1526 ], [ %1630, %1642 ]
  %1533 = phi i32 [ %1522, %1526 ], [ %1629, %1642 ]
  %1534 = phi ptr [ %1521, %1526 ], [ %1647, %1642 ]
  %1535 = phi ptr [ %1520, %1526 ], [ %1646, %1642 ]
  %1536 = phi i32 [ 0, %1526 ], [ %1645, %1642 ]
  %1537 = phi i32 [ 0, %1526 ], [ %1644, %1642 ]
  %1538 = phi i32 [ %1523, %1526 ], [ %1648, %1642 ]
  %1539 = phi i32 [ %1350, %1526 ], [ %1649, %1642 ]
  %1540 = and i32 %1538, %1319
  %1541 = shl i32 %1540, 1
  %1542 = getelementptr i32, ptr %1321, i32 %1541
  %1543 = tail call i32 @llvm.umin.i32(i32 %1537, i32 %1536) #7
  %1544 = getelementptr i8, ptr %1322, i32 %1538
  %1545 = getelementptr i8, ptr %1, i32 %1543
  %1546 = getelementptr i8, ptr %1544, i32 %1543
  %1547 = icmp ugt ptr %1527, %1545
  br i1 %1547, label %1548, label %1574

1548:                                             ; preds = %1531
  %1549 = load i32, ptr %1546, align 1
  %1550 = load i32, ptr %1545, align 1
  %1551 = xor i32 %1550, %1549
  %1552 = icmp eq i32 %1551, 0
  br i1 %1552, label %1556, label %1553

1553:                                             ; preds = %1548
  %1554 = tail call i32 @llvm.cttz.i32(i32 %1551, i1 true) #7, !range !8
  %1555 = lshr i32 %1554, 3
  br label %1600

1556:                                             ; preds = %1562, %1548
  %1557 = phi ptr [ %1560, %1562 ], [ %1545, %1548 ]
  %1558 = phi ptr [ %1559, %1562 ], [ %1546, %1548 ]
  %1559 = getelementptr i8, ptr %1558, i32 4
  %1560 = getelementptr i8, ptr %1557, i32 4
  %1561 = icmp ult ptr %1560, %1527
  br i1 %1561, label %1562, label %1574

1562:                                             ; preds = %1556
  %1563 = load i32, ptr %1559, align 1
  %1564 = load i32, ptr %1560, align 1
  %1565 = xor i32 %1564, %1563
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1556, label %1567

1567:                                             ; preds = %1562
  %1568 = tail call i32 @llvm.cttz.i32(i32 %1565, i1 true) #7, !range !8
  %1569 = lshr i32 %1568, 3
  %1570 = getelementptr i8, ptr %1560, i32 %1569
  %1571 = ptrtoint ptr %1570 to i32
  %1572 = ptrtoint ptr %1545 to i32
  %1573 = sub i32 %1571, %1572
  br label %1600

1574:                                             ; preds = %1556, %1531
  %1575 = phi ptr [ %1545, %1531 ], [ %1560, %1556 ]
  %1576 = phi ptr [ %1546, %1531 ], [ %1559, %1556 ]
  %1577 = icmp ult ptr %1575, %1528
  br i1 %1577, label %1578, label %1585

1578:                                             ; preds = %1574
  %1579 = load i16, ptr %1576, align 1
  %1580 = load i16, ptr %1575, align 1
  %1581 = icmp eq i16 %1579, %1580
  br i1 %1581, label %1582, label %1585

1582:                                             ; preds = %1578
  %1583 = getelementptr i8, ptr %1575, i32 2
  %1584 = getelementptr i8, ptr %1576, i32 2
  br label %1585

1585:                                             ; preds = %1582, %1578, %1574
  %1586 = phi ptr [ %1583, %1582 ], [ %1575, %1578 ], [ %1575, %1574 ]
  %1587 = phi ptr [ %1584, %1582 ], [ %1576, %1578 ], [ %1576, %1574 ]
  %1588 = icmp ult ptr %1586, %2
  br i1 %1588, label %1589, label %1595

1589:                                             ; preds = %1585
  %1590 = load i8, ptr %1587, align 1
  %1591 = load i8, ptr %1586, align 1
  %1592 = icmp eq i8 %1590, %1591
  %1593 = zext i1 %1592 to i32
  %1594 = getelementptr i8, ptr %1586, i32 %1593
  br label %1595

1595:                                             ; preds = %1589, %1585
  %1596 = phi ptr [ %1586, %1585 ], [ %1594, %1589 ]
  %1597 = ptrtoint ptr %1596 to i32
  %1598 = ptrtoint ptr %1545 to i32
  %1599 = sub i32 %1597, %1598
  br label %1600

1600:                                             ; preds = %1595, %1567, %1553
  %1601 = phi i32 [ %1599, %1595 ], [ %1555, %1553 ], [ %1573, %1567 ]
  %1602 = add i32 %1601, %1543
  %1603 = icmp ugt i32 %1602, %1532
  br i1 %1603, label %1604, label %1628

1604:                                             ; preds = %1600
  %1605 = sub i32 %1533, %1538
  %1606 = icmp ugt i32 %1602, %1605
  %1607 = add i32 %1602, %1538
  %1608 = select i1 %1606, i32 %1607, i32 %1533
  %1609 = sub i32 %1602, %1532
  %1610 = shl i32 %1609, 2
  %1611 = sub i32 %1529, %1538
  %1612 = tail call i32 @llvm.ctlz.i32(i32 %1611, i1 false) #7, !range !8
  %1613 = xor i32 %1612, 31
  %1614 = load i32, ptr %3, align 4
  %1615 = add i32 %1614, 1
  %1616 = tail call i32 @llvm.ctlz.i32(i32 %1615, i1 false) #7, !range !8
  %1617 = xor i32 %1616, -32
  %1618 = add nuw nsw i32 %1613, 1
  %1619 = add nsw i32 %1618, %1617
  %1620 = icmp sgt i32 %1610, %1619
  br i1 %1620, label %1621, label %1623

1621:                                             ; preds = %1604
  %1622 = sub i32 %1530, %1538
  store i32 %1622, ptr %3, align 4
  br label %1623

1623:                                             ; preds = %1621, %1604
  %1624 = phi i32 [ %1602, %1621 ], [ %1532, %1604 ]
  %1625 = getelementptr i8, ptr %1, i32 %1602
  %1626 = icmp eq ptr %1625, %2
  br i1 %1626, label %1627, label %1628

1627:                                             ; preds = %1623
  store i32 0, ptr %1534, align 4
  store i32 0, ptr %1535, align 4
  br label %1893

1628:                                             ; preds = %1623, %1600
  %1629 = phi i32 [ %1608, %1623 ], [ %1533, %1600 ]
  %1630 = phi i32 [ %1624, %1623 ], [ %1532, %1600 ]
  %1631 = getelementptr i8, ptr %1544, i32 %1602
  %1632 = load i8, ptr %1631, align 1
  %1633 = getelementptr i8, ptr %1, i32 %1602
  %1634 = load i8, ptr %1633, align 1
  %1635 = icmp ult i8 %1632, %1634
  br i1 %1635, label %1636, label %1640

1636:                                             ; preds = %1628
  store i32 %1538, ptr %1535, align 4
  %1637 = icmp ugt i32 %1538, %1346
  br i1 %1637, label %1638, label %1653

1638:                                             ; preds = %1636
  %1639 = getelementptr i32, ptr %1542, i32 1
  br label %1642

1640:                                             ; preds = %1628
  store i32 %1538, ptr %1534, align 4
  %1641 = icmp ugt i32 %1538, %1346
  br i1 %1641, label %1642, label %1653

1642:                                             ; preds = %1640, %1638
  %1643 = phi ptr [ %1639, %1638 ], [ %1542, %1640 ]
  %1644 = phi i32 [ %1602, %1638 ], [ %1537, %1640 ]
  %1645 = phi i32 [ %1536, %1638 ], [ %1602, %1640 ]
  %1646 = phi ptr [ %1639, %1638 ], [ %1535, %1640 ]
  %1647 = phi ptr [ %1534, %1638 ], [ %1542, %1640 ]
  %1648 = load i32, ptr %1643, align 4
  %1649 = add i32 %1539, -1
  %1650 = icmp ne i32 %1649, 0
  %1651 = icmp ugt i32 %1648, %1345
  %1652 = select i1 %1650, i1 %1651, i1 false
  br i1 %1652, label %1531, label %1653

1653:                                             ; preds = %1642, %1640, %1636
  %1654 = phi i32 [ %1539, %1640 ], [ %1539, %1636 ], [ %1649, %1642 ]
  %1655 = phi ptr [ %1535, %1640 ], [ %6, %1636 ], [ %1646, %1642 ]
  %1656 = phi ptr [ %6, %1640 ], [ %1534, %1636 ], [ %1647, %1642 ]
  store i32 0, ptr %1656, align 4
  store i32 0, ptr %1655, align 4
  %1657 = icmp eq i32 %1654, 0
  br i1 %1657, label %1893, label %1658

1658:                                             ; preds = %1653, %1525
  %1659 = phi i32 [ 0, %1525 ], [ %1630, %1653 ]
  %1660 = phi i32 [ %1522, %1525 ], [ %1629, %1653 ]
  %1661 = phi i32 [ %1350, %1525 ], [ %1654, %1653 ]
  %1662 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %1663 = load ptr, ptr %1662, align 4
  %1664 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1663, i32 0, i32 4
  %1665 = load ptr, ptr %1664, align 4
  %1666 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1663, i32 0, i32 10, i32 2
  %1667 = load i32, ptr %1666, align 4
  %1668 = load i64, ptr %1, align 1
  %1669 = mul i64 %1668, -3523014627193847808
  %1670 = sub i32 64, %1667
  %1671 = zext i32 %1670 to i64
  %1672 = lshr i64 %1669, %1671
  %1673 = trunc i64 %1672 to i32
  %1674 = getelementptr i32, ptr %1665, i32 %1673
  %1675 = load ptr, ptr %1268, align 4
  %1676 = load i32, ptr %1517, align 4
  %1677 = getelementptr i8, ptr %1675, i32 %1676
  %1678 = getelementptr inbounds %struct.ZSTD_window_t, ptr %1663, i32 0, i32 1
  %1679 = load ptr, ptr %1678, align 4
  %1680 = load ptr, ptr %1663, align 4
  %1681 = ptrtoint ptr %1680 to i32
  %1682 = ptrtoint ptr %1679 to i32
  %1683 = sub i32 %1681, %1682
  %1684 = getelementptr inbounds %struct.ZSTD_window_t, ptr %1663, i32 0, i32 4
  %1685 = load i32, ptr %1684, align 4
  %1686 = load i32, ptr %1336, align 4
  %1687 = sub i32 %1686, %1683
  %1688 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1663, i32 0, i32 6
  %1689 = load ptr, ptr %1688, align 4
  %1690 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1663, i32 0, i32 10, i32 1
  %1691 = load i32, ptr %1690, align 4
  %1692 = add i32 %1691, -1
  %1693 = shl nsw i32 -1, %1692
  %1694 = xor i32 %1693, -1
  %1695 = sub i32 %1683, %1685
  %1696 = icmp ugt i32 %1695, %1694
  %1697 = sub i32 %1683, %1694
  %1698 = select i1 %1696, i32 %1697, i32 %1685
  %1699 = load i32, ptr %1674, align 4
  %1700 = icmp ugt i32 %1699, %1685
  br i1 %1700, label %1701, label %1893

1701:                                             ; preds = %1658
  %1702 = ptrtoint ptr %1675 to i32
  %1703 = sub i32 %1284, %1702
  %1704 = getelementptr i8, ptr %2, i32 -3
  %1705 = getelementptr i8, ptr %2, i32 -1
  %1706 = add i32 %1703, 1
  %1707 = add i32 %1703, 2
  %1708 = getelementptr i8, ptr %1675, i32 %1687
  br label %1709

1709:                                             ; preds = %1884, %1701
  %1710 = phi i32 [ %1699, %1701 ], [ %1889, %1884 ]
  %1711 = phi i32 [ %1659, %1701 ], [ %1873, %1884 ]
  %1712 = phi i32 [ 0, %1701 ], [ %1887, %1884 ]
  %1713 = phi i32 [ 0, %1701 ], [ %1886, %1884 ]
  %1714 = phi i32 [ %1661, %1701 ], [ %1888, %1884 ]
  %1715 = and i32 %1710, %1694
  %1716 = shl i32 %1715, 1
  %1717 = getelementptr i32, ptr %1689, i32 %1716
  %1718 = tail call i32 @llvm.umin.i32(i32 %1713, i32 %1712) #7
  %1719 = getelementptr i8, ptr %1679, i32 %1710
  %1720 = getelementptr i8, ptr %1, i32 %1718
  %1721 = getelementptr i8, ptr %1719, i32 %1718
  %1722 = ptrtoint ptr %1721 to i32
  %1723 = sub i32 %1681, %1722
  %1724 = getelementptr i8, ptr %1720, i32 %1723
  %1725 = icmp ult ptr %1724, %2
  %1726 = select i1 %1725, ptr %1724, ptr %2
  %1727 = getelementptr i8, ptr %1726, i32 -3
  %1728 = icmp ugt ptr %1727, %1720
  br i1 %1728, label %1729, label %1755

1729:                                             ; preds = %1709
  %1730 = load i32, ptr %1721, align 1
  %1731 = load i32, ptr %1720, align 1
  %1732 = xor i32 %1731, %1730
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1737, label %1734

1734:                                             ; preds = %1729
  %1735 = tail call i32 @llvm.cttz.i32(i32 %1732, i1 true) #7, !range !8
  %1736 = lshr i32 %1735, 3
  br label %1782

1737:                                             ; preds = %1743, %1729
  %1738 = phi ptr [ %1741, %1743 ], [ %1720, %1729 ]
  %1739 = phi ptr [ %1740, %1743 ], [ %1721, %1729 ]
  %1740 = getelementptr i8, ptr %1739, i32 4
  %1741 = getelementptr i8, ptr %1738, i32 4
  %1742 = icmp ult ptr %1741, %1727
  br i1 %1742, label %1743, label %1755

1743:                                             ; preds = %1737
  %1744 = load i32, ptr %1740, align 1
  %1745 = load i32, ptr %1741, align 1
  %1746 = xor i32 %1745, %1744
  %1747 = icmp eq i32 %1746, 0
  br i1 %1747, label %1737, label %1748

1748:                                             ; preds = %1743
  %1749 = tail call i32 @llvm.cttz.i32(i32 %1746, i1 true) #7, !range !8
  %1750 = lshr i32 %1749, 3
  %1751 = getelementptr i8, ptr %1741, i32 %1750
  %1752 = ptrtoint ptr %1751 to i32
  %1753 = ptrtoint ptr %1720 to i32
  %1754 = sub i32 %1752, %1753
  br label %1782

1755:                                             ; preds = %1737, %1709
  %1756 = phi ptr [ %1720, %1709 ], [ %1741, %1737 ]
  %1757 = phi ptr [ %1721, %1709 ], [ %1740, %1737 ]
  %1758 = getelementptr i8, ptr %1726, i32 -1
  %1759 = icmp ult ptr %1756, %1758
  br i1 %1759, label %1760, label %1767

1760:                                             ; preds = %1755
  %1761 = load i16, ptr %1757, align 1
  %1762 = load i16, ptr %1756, align 1
  %1763 = icmp eq i16 %1761, %1762
  br i1 %1763, label %1764, label %1767

1764:                                             ; preds = %1760
  %1765 = getelementptr i8, ptr %1756, i32 2
  %1766 = getelementptr i8, ptr %1757, i32 2
  br label %1767

1767:                                             ; preds = %1764, %1760, %1755
  %1768 = phi ptr [ %1765, %1764 ], [ %1756, %1760 ], [ %1756, %1755 ]
  %1769 = phi ptr [ %1766, %1764 ], [ %1757, %1760 ], [ %1757, %1755 ]
  %1770 = icmp ult ptr %1768, %1726
  br i1 %1770, label %1771, label %1777

1771:                                             ; preds = %1767
  %1772 = load i8, ptr %1769, align 1
  %1773 = load i8, ptr %1768, align 1
  %1774 = icmp eq i8 %1772, %1773
  %1775 = zext i1 %1774 to i32
  %1776 = getelementptr i8, ptr %1768, i32 %1775
  br label %1777

1777:                                             ; preds = %1771, %1767
  %1778 = phi ptr [ %1768, %1767 ], [ %1776, %1771 ]
  %1779 = ptrtoint ptr %1778 to i32
  %1780 = ptrtoint ptr %1720 to i32
  %1781 = sub i32 %1779, %1780
  br label %1782

1782:                                             ; preds = %1777, %1748, %1734
  %1783 = phi i32 [ %1781, %1777 ], [ %1736, %1734 ], [ %1754, %1748 ]
  %1784 = getelementptr i8, ptr %1721, i32 %1783
  %1785 = icmp eq ptr %1784, %1680
  br i1 %1785, label %1786, label %1844

1786:                                             ; preds = %1782
  %1787 = getelementptr i8, ptr %1720, i32 %1783
  %1788 = icmp ugt ptr %1704, %1787
  br i1 %1788, label %1789, label %1815

1789:                                             ; preds = %1786
  %1790 = load i32, ptr %1677, align 1
  %1791 = load i32, ptr %1787, align 1
  %1792 = xor i32 %1791, %1790
  %1793 = icmp eq i32 %1792, 0
  br i1 %1793, label %1797, label %1794

1794:                                             ; preds = %1789
  %1795 = tail call i32 @llvm.cttz.i32(i32 %1792, i1 true) #7, !range !8
  %1796 = lshr i32 %1795, 3
  br label %1841

1797:                                             ; preds = %1803, %1789
  %1798 = phi ptr [ %1801, %1803 ], [ %1787, %1789 ]
  %1799 = phi ptr [ %1800, %1803 ], [ %1677, %1789 ]
  %1800 = getelementptr i8, ptr %1799, i32 4
  %1801 = getelementptr i8, ptr %1798, i32 4
  %1802 = icmp ult ptr %1801, %1704
  br i1 %1802, label %1803, label %1815

1803:                                             ; preds = %1797
  %1804 = load i32, ptr %1800, align 1
  %1805 = load i32, ptr %1801, align 1
  %1806 = xor i32 %1805, %1804
  %1807 = icmp eq i32 %1806, 0
  br i1 %1807, label %1797, label %1808

1808:                                             ; preds = %1803
  %1809 = tail call i32 @llvm.cttz.i32(i32 %1806, i1 true) #7, !range !8
  %1810 = lshr i32 %1809, 3
  %1811 = getelementptr i8, ptr %1801, i32 %1810
  %1812 = ptrtoint ptr %1811 to i32
  %1813 = ptrtoint ptr %1787 to i32
  %1814 = sub i32 %1812, %1813
  br label %1841

1815:                                             ; preds = %1797, %1786
  %1816 = phi ptr [ %1787, %1786 ], [ %1801, %1797 ]
  %1817 = phi ptr [ %1677, %1786 ], [ %1800, %1797 ]
  %1818 = icmp ult ptr %1816, %1705
  br i1 %1818, label %1819, label %1826

1819:                                             ; preds = %1815
  %1820 = load i16, ptr %1817, align 1
  %1821 = load i16, ptr %1816, align 1
  %1822 = icmp eq i16 %1820, %1821
  br i1 %1822, label %1823, label %1826

1823:                                             ; preds = %1819
  %1824 = getelementptr i8, ptr %1816, i32 2
  %1825 = getelementptr i8, ptr %1817, i32 2
  br label %1826

1826:                                             ; preds = %1823, %1819, %1815
  %1827 = phi ptr [ %1824, %1823 ], [ %1816, %1819 ], [ %1816, %1815 ]
  %1828 = phi ptr [ %1825, %1823 ], [ %1817, %1819 ], [ %1817, %1815 ]
  %1829 = icmp ult ptr %1827, %2
  br i1 %1829, label %1830, label %1836

1830:                                             ; preds = %1826
  %1831 = load i8, ptr %1828, align 1
  %1832 = load i8, ptr %1827, align 1
  %1833 = icmp eq i8 %1831, %1832
  %1834 = zext i1 %1833 to i32
  %1835 = getelementptr i8, ptr %1827, i32 %1834
  br label %1836

1836:                                             ; preds = %1830, %1826
  %1837 = phi ptr [ %1827, %1826 ], [ %1835, %1830 ]
  %1838 = ptrtoint ptr %1837 to i32
  %1839 = ptrtoint ptr %1787 to i32
  %1840 = sub i32 %1838, %1839
  br label %1841

1841:                                             ; preds = %1836, %1808, %1794
  %1842 = phi i32 [ %1840, %1836 ], [ %1796, %1794 ], [ %1814, %1808 ]
  %1843 = add i32 %1842, %1783
  br label %1844

1844:                                             ; preds = %1841, %1782
  %1845 = phi i32 [ %1843, %1841 ], [ %1783, %1782 ]
  %1846 = add i32 %1845, %1718
  %1847 = add i32 %1846, %1710
  %1848 = icmp ult i32 %1847, %1683
  %1849 = getelementptr i8, ptr %1708, i32 %1710
  %1850 = select i1 %1848, ptr %1719, ptr %1849
  %1851 = icmp ugt i32 %1846, %1711
  br i1 %1851, label %1852, label %1872

1852:                                             ; preds = %1844
  %1853 = add i32 %1710, %1687
  %1854 = sub i32 %1846, %1711
  %1855 = shl i32 %1854, 2
  %1856 = sub i32 %1706, %1853
  %1857 = tail call i32 @llvm.ctlz.i32(i32 %1856, i1 false) #7, !range !8
  %1858 = xor i32 %1857, 31
  %1859 = load i32, ptr %3, align 4
  %1860 = add i32 %1859, 1
  %1861 = tail call i32 @llvm.ctlz.i32(i32 %1860, i1 false) #7, !range !8
  %1862 = xor i32 %1861, -32
  %1863 = add nuw nsw i32 %1858, 1
  %1864 = add nsw i32 %1863, %1862
  %1865 = icmp sgt i32 %1855, %1864
  br i1 %1865, label %1866, label %1868

1866:                                             ; preds = %1852
  %1867 = sub i32 %1707, %1853
  store i32 %1867, ptr %3, align 4
  br label %1868

1868:                                             ; preds = %1866, %1852
  %1869 = phi i32 [ %1846, %1866 ], [ %1711, %1852 ]
  %1870 = getelementptr i8, ptr %1, i32 %1846
  %1871 = icmp eq ptr %1870, %2
  br i1 %1871, label %1893, label %1872

1872:                                             ; preds = %1868, %1844
  %1873 = phi i32 [ %1869, %1868 ], [ %1711, %1844 ]
  %1874 = getelementptr i8, ptr %1850, i32 %1846
  %1875 = load i8, ptr %1874, align 1
  %1876 = getelementptr i8, ptr %1, i32 %1846
  %1877 = load i8, ptr %1876, align 1
  %1878 = icmp ult i8 %1875, %1877
  %1879 = icmp ugt i32 %1710, %1698
  br i1 %1878, label %1880, label %1883

1880:                                             ; preds = %1872
  br i1 %1879, label %1881, label %1893

1881:                                             ; preds = %1880
  %1882 = getelementptr i32, ptr %1717, i32 1
  br label %1884

1883:                                             ; preds = %1872
  br i1 %1879, label %1884, label %1893

1884:                                             ; preds = %1883, %1881
  %1885 = phi ptr [ %1882, %1881 ], [ %1717, %1883 ]
  %1886 = phi i32 [ %1846, %1881 ], [ %1713, %1883 ]
  %1887 = phi i32 [ %1712, %1881 ], [ %1846, %1883 ]
  %1888 = add i32 %1714, -1
  %1889 = load i32, ptr %1885, align 4
  %1890 = icmp ne i32 %1888, 0
  %1891 = icmp ugt i32 %1889, %1685
  %1892 = select i1 %1890, i1 %1891, i1 false
  br i1 %1892, label %1709, label %1893

1893:                                             ; preds = %1884, %1883, %1880, %1868, %1658, %1653, %1627
  %1894 = phi i32 [ %1629, %1653 ], [ %1660, %1658 ], [ %1608, %1627 ], [ %1660, %1868 ], [ %1660, %1880 ], [ %1660, %1883 ], [ %1660, %1884 ]
  %1895 = phi i32 [ %1630, %1653 ], [ %1659, %1658 ], [ %1624, %1627 ], [ %1873, %1884 ], [ %1873, %1883 ], [ %1873, %1880 ], [ %1869, %1868 ]
  %1896 = add i32 %1894, -8
  store i32 %1896, ptr %1270, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  br label %1897

1897:                                             ; preds = %1893, %1267, %1263, %637, %633, %13
  %1898 = phi i32 [ %635, %633 ], [ 0, %13 ], [ %1265, %1263 ], [ 0, %637 ], [ %1895, %1893 ], [ 0, %1267 ]
  ret i32 %1898
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ZSTD_HcFindBestMatch_dedicatedDictSearch_selectMLS(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2, ptr nocapture noundef writeonly %3) unnamed_addr #2 {
  %5 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %6 = load i32, ptr %5, align 4
  switch i32 %6, label %7 [
    i32 6, label %1088
    i32 5, label %545
    i32 7, label %1088
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %9 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %10 = load ptr, ptr %9, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %12 = load i32, ptr %11, align 4
  %13 = shl nuw i32 1, %12
  %14 = add i32 %13, -1
  %15 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %16 = load ptr, ptr %15, align 4
  %17 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %18 = load i32, ptr %17, align 4
  %19 = getelementptr i8, ptr %16, i32 %18
  %20 = ptrtoint ptr %1 to i32
  %21 = ptrtoint ptr %16 to i32
  %22 = sub i32 %20, %21
  %23 = load i32, ptr %8, align 4
  %24 = shl nuw i32 1, %23
  %25 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %26 = load i32, ptr %25, align 4
  %27 = sub i32 %22, %26
  %28 = icmp ugt i32 %27, %24
  %29 = sub i32 %22, %24
  %30 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %31 = load i32, ptr %30, align 4
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, i1 %28, i1 false
  %34 = select i1 %33, i32 %29, i32 %26
  %35 = tail call i32 @llvm.usub.sat.i32(i32 %22, i32 %13) #7
  %36 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %37 = load i32, ptr %36, align 4
  %38 = shl nuw i32 1, %37
  %39 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %40 = load ptr, ptr %39, align 4
  %41 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 10, i32 2
  %42 = load i32, ptr %41, align 4
  %43 = load i32, ptr %1, align 1
  %44 = mul i32 %43, -1640531535
  %45 = sub i32 34, %42
  %46 = lshr i32 %44, %45
  %47 = shl i32 %46, 2
  %48 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 4
  %49 = load ptr, ptr %48, align 4
  %50 = getelementptr i32, ptr %49, i32 %47
  tail call void @llvm.prefetch.p0(ptr %50, i32 0, i32 3, i32 1) #7
  %51 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %52 = load ptr, ptr %51, align 4
  %53 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %54 = load i32, ptr %53, align 4
  %55 = shl nsw i32 -1, %12
  %56 = xor i32 %55, -1
  %57 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %58 = load i32, ptr %57, align 4
  %59 = icmp ult i32 %58, %22
  %60 = sub i32 32, %54
  br i1 %59, label %61, label %73

61:                                               ; preds = %61, %7
  %62 = phi i32 [ %71, %61 ], [ %58, %7 ]
  %63 = getelementptr i8, ptr %16, i32 %62
  %64 = load i32, ptr %63, align 1
  %65 = mul i32 %64, -1640531535
  %66 = lshr i32 %65, %60
  %67 = getelementptr i32, ptr %52, i32 %66
  %68 = load i32, ptr %67, align 4
  %69 = and i32 %62, %56
  %70 = getelementptr i32, ptr %10, i32 %69
  store i32 %68, ptr %70, align 4
  store i32 %62, ptr %67, align 4
  %71 = add nuw i32 %62, 1
  %72 = icmp ult i32 %71, %22
  br i1 %72, label %61, label %73

73:                                               ; preds = %61, %7
  store i32 %22, ptr %57, align 4
  %74 = load i32, ptr %1, align 1
  %75 = mul i32 %74, -1640531535
  %76 = lshr i32 %75, %60
  %77 = getelementptr i32, ptr %52, i32 %76
  %78 = load i32, ptr %77, align 4
  %79 = icmp ult i32 %78, %34
  br i1 %79, label %164, label %80

80:                                               ; preds = %73
  %81 = getelementptr i8, ptr %2, i32 -3
  %82 = icmp ugt ptr %81, %1
  %83 = getelementptr i8, ptr %2, i32 -1
  %84 = add i32 %22, 2
  br label %85

85:                                               ; preds = %156, %80
  %86 = phi i32 [ %78, %80 ], [ %160, %156 ]
  %87 = phi i32 [ 3, %80 ], [ %154, %156 ]
  %88 = phi i32 [ %38, %80 ], [ %159, %156 ]
  %89 = getelementptr i8, ptr %16, i32 %86
  %90 = getelementptr i8, ptr %89, i32 %87
  %91 = load i8, ptr %90, align 1
  %92 = getelementptr i8, ptr %1, i32 %87
  %93 = load i8, ptr %92, align 1
  %94 = icmp eq i8 %91, %93
  br i1 %94, label %95, label %153

95:                                               ; preds = %85
  br i1 %82, label %96, label %121

96:                                               ; preds = %95
  %97 = load i32, ptr %89, align 1
  %98 = load i32, ptr %1, align 1
  %99 = xor i32 %98, %97
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %96
  %102 = tail call i32 @llvm.cttz.i32(i32 %99, i1 true) #7, !range !8
  %103 = lshr i32 %102, 3
  br label %146

104:                                              ; preds = %110, %96
  %105 = phi ptr [ %108, %110 ], [ %1, %96 ]
  %106 = phi ptr [ %107, %110 ], [ %89, %96 ]
  %107 = getelementptr i8, ptr %106, i32 4
  %108 = getelementptr i8, ptr %105, i32 4
  %109 = icmp ult ptr %108, %81
  br i1 %109, label %110, label %121

110:                                              ; preds = %104
  %111 = load i32, ptr %107, align 1
  %112 = load i32, ptr %108, align 1
  %113 = xor i32 %112, %111
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %104, label %115

115:                                              ; preds = %110
  %116 = tail call i32 @llvm.cttz.i32(i32 %113, i1 true) #7, !range !8
  %117 = lshr i32 %116, 3
  %118 = getelementptr i8, ptr %108, i32 %117
  %119 = ptrtoint ptr %118 to i32
  %120 = sub i32 %119, %20
  br label %146

121:                                              ; preds = %104, %95
  %122 = phi ptr [ %1, %95 ], [ %108, %104 ]
  %123 = phi ptr [ %89, %95 ], [ %107, %104 ]
  %124 = icmp ult ptr %122, %83
  br i1 %124, label %125, label %132

125:                                              ; preds = %121
  %126 = load i16, ptr %123, align 1
  %127 = load i16, ptr %122, align 1
  %128 = icmp eq i16 %126, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %125
  %130 = getelementptr i8, ptr %122, i32 2
  %131 = getelementptr i8, ptr %123, i32 2
  br label %132

132:                                              ; preds = %129, %125, %121
  %133 = phi ptr [ %130, %129 ], [ %122, %125 ], [ %122, %121 ]
  %134 = phi ptr [ %131, %129 ], [ %123, %125 ], [ %123, %121 ]
  %135 = icmp ult ptr %133, %2
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = load i8, ptr %134, align 1
  %138 = load i8, ptr %133, align 1
  %139 = icmp eq i8 %137, %138
  %140 = zext i1 %139 to i32
  %141 = getelementptr i8, ptr %133, i32 %140
  br label %142

142:                                              ; preds = %136, %132
  %143 = phi ptr [ %133, %132 ], [ %141, %136 ]
  %144 = ptrtoint ptr %143 to i32
  %145 = sub i32 %144, %20
  br label %146

146:                                              ; preds = %142, %115, %101
  %147 = phi i32 [ %145, %142 ], [ %103, %101 ], [ %120, %115 ]
  %148 = icmp ugt i32 %147, %87
  br i1 %148, label %149, label %153

149:                                              ; preds = %146
  %150 = sub i32 %84, %86
  store i32 %150, ptr %3, align 4
  %151 = getelementptr i8, ptr %1, i32 %147
  %152 = icmp eq ptr %151, %2
  br i1 %152, label %164, label %153

153:                                              ; preds = %149, %146, %85
  %154 = phi i32 [ %147, %149 ], [ %87, %146 ], [ %87, %85 ]
  %155 = icmp ugt i32 %86, %35
  br i1 %155, label %156, label %164

156:                                              ; preds = %153
  %157 = and i32 %86, %14
  %158 = getelementptr i32, ptr %10, i32 %157
  %159 = add i32 %88, -1
  %160 = load i32, ptr %158, align 4
  %161 = icmp uge i32 %160, %34
  %162 = icmp ne i32 %159, 0
  %163 = and i1 %162, %161
  br i1 %163, label %85, label %164

164:                                              ; preds = %156, %153, %149, %73
  %165 = phi i32 [ %38, %73 ], [ %159, %156 ], [ %88, %149 ], [ %88, %153 ]
  %166 = phi i32 [ 3, %73 ], [ %154, %156 ], [ %147, %149 ], [ %154, %153 ]
  %167 = getelementptr inbounds %struct.ZSTD_window_t, ptr %40, i32 0, i32 1
  %168 = load ptr, ptr %167, align 4
  %169 = load ptr, ptr %40, align 4
  %170 = ptrtoint ptr %169 to i32
  %171 = ptrtoint ptr %168 to i32
  %172 = add i32 %18, %171
  %173 = sub i32 %170, %172
  %174 = load ptr, ptr %48, align 4
  %175 = getelementptr i32, ptr %174, i32 %47
  %176 = load i32, ptr %175, align 4
  %177 = getelementptr i8, ptr %168, i32 %176
  tail call void @llvm.prefetch.p0(ptr %177, i32 0, i32 3, i32 1) #7
  %178 = or i32 %47, 1
  %179 = getelementptr i32, ptr %174, i32 %178
  %180 = load i32, ptr %179, align 4
  %181 = getelementptr i8, ptr %168, i32 %180
  tail call void @llvm.prefetch.p0(ptr %181, i32 0, i32 3, i32 1) #7
  %182 = or i32 %47, 2
  %183 = getelementptr i32, ptr %174, i32 %182
  %184 = load i32, ptr %183, align 4
  %185 = getelementptr i8, ptr %168, i32 %184
  tail call void @llvm.prefetch.p0(ptr %185, i32 0, i32 3, i32 1) #7
  %186 = tail call i32 @llvm.umin.i32(i32 %165, i32 3) #7
  %187 = or i32 %47, 3
  %188 = getelementptr i32, ptr %174, i32 %187
  %189 = load i32, ptr %188, align 4
  %190 = lshr i32 %189, 8
  %191 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %40, i32 0, i32 6
  %192 = load ptr, ptr %191, align 4
  %193 = getelementptr i32, ptr %192, i32 %190
  tail call void @llvm.prefetch.p0(ptr %193, i32 0, i32 3, i32 1) #7
  %194 = icmp eq i32 %186, 0
  br i1 %194, label %363, label %195

195:                                              ; preds = %164
  %196 = getelementptr i8, ptr %1, i32 4
  %197 = ptrtoint ptr %196 to i32
  %198 = getelementptr i8, ptr %2, i32 -3
  %199 = getelementptr i8, ptr %2, i32 -1
  %200 = add i32 %22, 2
  %201 = add i32 %200, %173
  %202 = icmp eq i32 %176, 0
  br i1 %202, label %1631, label %203

203:                                              ; preds = %348, %195
  %204 = phi i32 [ %351, %348 ], [ %176, %195 ]
  %205 = phi i32 [ %343, %348 ], [ %166, %195 ]
  %206 = phi i32 [ %344, %348 ], [ 0, %195 ]
  %207 = phi i1 [ %345, %348 ], [ true, %195 ]
  %208 = getelementptr i8, ptr %168, i32 %204
  %209 = load i32, ptr %208, align 1
  %210 = load i32, ptr %1, align 1
  %211 = icmp eq i32 %209, %210
  br i1 %211, label %212, label %342

212:                                              ; preds = %203
  %213 = getelementptr i8, ptr %208, i32 4
  %214 = ptrtoint ptr %213 to i32
  %215 = sub i32 %170, %214
  %216 = getelementptr i8, ptr %196, i32 %215
  %217 = icmp ult ptr %216, %2
  %218 = select i1 %217, ptr %216, ptr %2
  %219 = getelementptr i8, ptr %218, i32 -3
  %220 = icmp ugt ptr %219, %196
  br i1 %220, label %221, label %246

221:                                              ; preds = %212
  %222 = load i32, ptr %213, align 1
  %223 = load i32, ptr %196, align 1
  %224 = xor i32 %223, %222
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %229, label %226

226:                                              ; preds = %221
  %227 = tail call i32 @llvm.cttz.i32(i32 %224, i1 true) #7, !range !8
  %228 = lshr i32 %227, 3
  br label %272

229:                                              ; preds = %235, %221
  %230 = phi ptr [ %233, %235 ], [ %196, %221 ]
  %231 = phi ptr [ %232, %235 ], [ %213, %221 ]
  %232 = getelementptr i8, ptr %231, i32 4
  %233 = getelementptr i8, ptr %230, i32 4
  %234 = icmp ult ptr %233, %219
  br i1 %234, label %235, label %246

235:                                              ; preds = %229
  %236 = load i32, ptr %232, align 1
  %237 = load i32, ptr %233, align 1
  %238 = xor i32 %237, %236
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %229, label %240

240:                                              ; preds = %235
  %241 = tail call i32 @llvm.cttz.i32(i32 %238, i1 true) #7, !range !8
  %242 = lshr i32 %241, 3
  %243 = getelementptr i8, ptr %233, i32 %242
  %244 = ptrtoint ptr %243 to i32
  %245 = sub i32 %244, %197
  br label %272

246:                                              ; preds = %229, %212
  %247 = phi ptr [ %196, %212 ], [ %233, %229 ]
  %248 = phi ptr [ %213, %212 ], [ %232, %229 ]
  %249 = getelementptr i8, ptr %218, i32 -1
  %250 = icmp ult ptr %247, %249
  br i1 %250, label %251, label %258

251:                                              ; preds = %246
  %252 = load i16, ptr %248, align 1
  %253 = load i16, ptr %247, align 1
  %254 = icmp eq i16 %252, %253
  br i1 %254, label %255, label %258

255:                                              ; preds = %251
  %256 = getelementptr i8, ptr %247, i32 2
  %257 = getelementptr i8, ptr %248, i32 2
  br label %258

258:                                              ; preds = %255, %251, %246
  %259 = phi ptr [ %256, %255 ], [ %247, %251 ], [ %247, %246 ]
  %260 = phi ptr [ %257, %255 ], [ %248, %251 ], [ %248, %246 ]
  %261 = icmp ult ptr %259, %218
  br i1 %261, label %262, label %268

262:                                              ; preds = %258
  %263 = load i8, ptr %260, align 1
  %264 = load i8, ptr %259, align 1
  %265 = icmp eq i8 %263, %264
  %266 = zext i1 %265 to i32
  %267 = getelementptr i8, ptr %259, i32 %266
  br label %268

268:                                              ; preds = %262, %258
  %269 = phi ptr [ %259, %258 ], [ %267, %262 ]
  %270 = ptrtoint ptr %269 to i32
  %271 = sub i32 %270, %197
  br label %272

272:                                              ; preds = %268, %240, %226
  %273 = phi i32 [ %271, %268 ], [ %228, %226 ], [ %245, %240 ]
  %274 = getelementptr i8, ptr %213, i32 %273
  %275 = icmp eq ptr %274, %169
  br i1 %275, label %276, label %334

276:                                              ; preds = %272
  %277 = getelementptr i8, ptr %196, i32 %273
  %278 = icmp ugt ptr %198, %277
  br i1 %278, label %279, label %305

279:                                              ; preds = %276
  %280 = load i32, ptr %19, align 1
  %281 = load i32, ptr %277, align 1
  %282 = xor i32 %281, %280
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %279
  %285 = tail call i32 @llvm.cttz.i32(i32 %282, i1 true) #7, !range !8
  %286 = lshr i32 %285, 3
  br label %331

287:                                              ; preds = %293, %279
  %288 = phi ptr [ %291, %293 ], [ %277, %279 ]
  %289 = phi ptr [ %290, %293 ], [ %19, %279 ]
  %290 = getelementptr i8, ptr %289, i32 4
  %291 = getelementptr i8, ptr %288, i32 4
  %292 = icmp ult ptr %291, %198
  br i1 %292, label %293, label %305

293:                                              ; preds = %287
  %294 = load i32, ptr %290, align 1
  %295 = load i32, ptr %291, align 1
  %296 = xor i32 %295, %294
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %287, label %298

298:                                              ; preds = %293
  %299 = tail call i32 @llvm.cttz.i32(i32 %296, i1 true) #7, !range !8
  %300 = lshr i32 %299, 3
  %301 = getelementptr i8, ptr %291, i32 %300
  %302 = ptrtoint ptr %301 to i32
  %303 = ptrtoint ptr %277 to i32
  %304 = sub i32 %302, %303
  br label %331

305:                                              ; preds = %287, %276
  %306 = phi ptr [ %277, %276 ], [ %291, %287 ]
  %307 = phi ptr [ %19, %276 ], [ %290, %287 ]
  %308 = icmp ult ptr %306, %199
  br i1 %308, label %309, label %316

309:                                              ; preds = %305
  %310 = load i16, ptr %307, align 1
  %311 = load i16, ptr %306, align 1
  %312 = icmp eq i16 %310, %311
  br i1 %312, label %313, label %316

313:                                              ; preds = %309
  %314 = getelementptr i8, ptr %306, i32 2
  %315 = getelementptr i8, ptr %307, i32 2
  br label %316

316:                                              ; preds = %313, %309, %305
  %317 = phi ptr [ %314, %313 ], [ %306, %309 ], [ %306, %305 ]
  %318 = phi ptr [ %315, %313 ], [ %307, %309 ], [ %307, %305 ]
  %319 = icmp ult ptr %317, %2
  br i1 %319, label %320, label %326

320:                                              ; preds = %316
  %321 = load i8, ptr %318, align 1
  %322 = load i8, ptr %317, align 1
  %323 = icmp eq i8 %321, %322
  %324 = zext i1 %323 to i32
  %325 = getelementptr i8, ptr %317, i32 %324
  br label %326

326:                                              ; preds = %320, %316
  %327 = phi ptr [ %317, %316 ], [ %325, %320 ]
  %328 = ptrtoint ptr %327 to i32
  %329 = ptrtoint ptr %277 to i32
  %330 = sub i32 %328, %329
  br label %331

331:                                              ; preds = %326, %298, %284
  %332 = phi i32 [ %330, %326 ], [ %286, %284 ], [ %304, %298 ]
  %333 = add i32 %332, %273
  br label %334

334:                                              ; preds = %331, %272
  %335 = phi i32 [ %333, %331 ], [ %273, %272 ]
  %336 = add i32 %335, 4
  %337 = icmp ugt i32 %336, %205
  br i1 %337, label %338, label %342

338:                                              ; preds = %334
  %339 = sub i32 %201, %204
  store i32 %339, ptr %3, align 4
  %340 = getelementptr i8, ptr %1, i32 %336
  %341 = icmp eq ptr %340, %2
  br i1 %341, label %539, label %342

342:                                              ; preds = %338, %334, %203
  %343 = phi i32 [ %336, %338 ], [ %205, %334 ], [ %205, %203 ]
  %344 = add nuw nsw i32 %206, 1
  %345 = icmp ult i32 %344, %186
  %346 = icmp eq i32 %344, %186
  %347 = load ptr, ptr %48, align 4
  br i1 %346, label %353, label %348

348:                                              ; preds = %342
  %349 = add nuw nsw i32 %344, %47
  %350 = getelementptr i32, ptr %347, i32 %349
  %351 = load i32, ptr %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %1631, label %203

353:                                              ; preds = %342
  %354 = getelementptr i32, ptr %347, i32 %187
  %355 = load i32, ptr %354, align 4
  %356 = and i32 %355, 255
  %357 = sub i32 %165, %186
  %358 = tail call i32 @llvm.umin.i32(i32 %357, i32 %356) #7
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %543, label %360

360:                                              ; preds = %353
  %361 = lshr i32 %355, 8
  %362 = load ptr, ptr %191, align 4
  br label %367

363:                                              ; preds = %164
  %364 = and i32 %189, 255
  %365 = tail call i32 @llvm.umin.i32(i32 %165, i32 %364) #7
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %543, label %367

367:                                              ; preds = %363, %360
  %368 = phi ptr [ %192, %363 ], [ %362, %360 ]
  %369 = phi i32 [ %365, %363 ], [ %358, %360 ]
  %370 = phi i1 [ false, %363 ], [ %345, %360 ]
  %371 = phi i32 [ %166, %363 ], [ %343, %360 ]
  %372 = phi i32 [ %190, %363 ], [ %361, %360 ]
  br label %381

373:                                              ; preds = %381
  %374 = getelementptr i8, ptr %1, i32 4
  %375 = ptrtoint ptr %374 to i32
  %376 = getelementptr i8, ptr %2, i32 -3
  %377 = getelementptr i8, ptr %2, i32 -1
  %378 = add i32 %22, 2
  %379 = add i32 %378, %173
  %380 = load i32, ptr %1, align 1
  br label %389

381:                                              ; preds = %381, %367
  %382 = phi i32 [ 0, %367 ], [ %387, %381 ]
  %383 = add nuw nsw i32 %382, %372
  %384 = getelementptr i32, ptr %368, i32 %383
  %385 = load i32, ptr %384, align 4
  %386 = getelementptr i8, ptr %168, i32 %385
  tail call void @llvm.prefetch.p0(ptr %386, i32 0, i32 3, i32 1) #7
  %387 = add nuw nsw i32 %382, 1
  %388 = icmp eq i32 %387, %369
  br i1 %388, label %373, label %381

389:                                              ; preds = %536, %373
  %390 = phi ptr [ %368, %373 ], [ %538, %536 ]
  %391 = phi i32 [ %380, %373 ], [ %532, %536 ]
  %392 = phi i32 [ 0, %373 ], [ %534, %536 ]
  %393 = phi i32 [ %372, %373 ], [ %537, %536 ]
  %394 = phi i32 [ %371, %373 ], [ %533, %536 ]
  %395 = getelementptr i32, ptr %390, i32 %393
  %396 = load i32, ptr %395, align 4
  %397 = getelementptr i8, ptr %168, i32 %396
  %398 = load i32, ptr %397, align 1
  %399 = icmp eq i32 %398, %391
  br i1 %399, label %400, label %531

400:                                              ; preds = %389
  %401 = getelementptr i8, ptr %397, i32 4
  %402 = ptrtoint ptr %401 to i32
  %403 = sub i32 %170, %402
  %404 = getelementptr i8, ptr %374, i32 %403
  %405 = icmp ult ptr %404, %2
  %406 = select i1 %405, ptr %404, ptr %2
  %407 = getelementptr i8, ptr %406, i32 -3
  %408 = icmp ugt ptr %407, %374
  br i1 %408, label %409, label %434

409:                                              ; preds = %400
  %410 = load i32, ptr %401, align 1
  %411 = load i32, ptr %374, align 1
  %412 = xor i32 %411, %410
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %409
  %415 = tail call i32 @llvm.cttz.i32(i32 %412, i1 true) #7, !range !8
  %416 = lshr i32 %415, 3
  br label %460

417:                                              ; preds = %423, %409
  %418 = phi ptr [ %421, %423 ], [ %374, %409 ]
  %419 = phi ptr [ %420, %423 ], [ %401, %409 ]
  %420 = getelementptr i8, ptr %419, i32 4
  %421 = getelementptr i8, ptr %418, i32 4
  %422 = icmp ult ptr %421, %407
  br i1 %422, label %423, label %434

423:                                              ; preds = %417
  %424 = load i32, ptr %420, align 1
  %425 = load i32, ptr %421, align 1
  %426 = xor i32 %425, %424
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %417, label %428

428:                                              ; preds = %423
  %429 = tail call i32 @llvm.cttz.i32(i32 %426, i1 true) #7, !range !8
  %430 = lshr i32 %429, 3
  %431 = getelementptr i8, ptr %421, i32 %430
  %432 = ptrtoint ptr %431 to i32
  %433 = sub i32 %432, %375
  br label %460

434:                                              ; preds = %417, %400
  %435 = phi ptr [ %374, %400 ], [ %421, %417 ]
  %436 = phi ptr [ %401, %400 ], [ %420, %417 ]
  %437 = getelementptr i8, ptr %406, i32 -1
  %438 = icmp ult ptr %435, %437
  br i1 %438, label %439, label %446

439:                                              ; preds = %434
  %440 = load i16, ptr %436, align 1
  %441 = load i16, ptr %435, align 1
  %442 = icmp eq i16 %440, %441
  br i1 %442, label %443, label %446

443:                                              ; preds = %439
  %444 = getelementptr i8, ptr %435, i32 2
  %445 = getelementptr i8, ptr %436, i32 2
  br label %446

446:                                              ; preds = %443, %439, %434
  %447 = phi ptr [ %444, %443 ], [ %435, %439 ], [ %435, %434 ]
  %448 = phi ptr [ %445, %443 ], [ %436, %439 ], [ %436, %434 ]
  %449 = icmp ult ptr %447, %406
  br i1 %449, label %450, label %456

450:                                              ; preds = %446
  %451 = load i8, ptr %448, align 1
  %452 = load i8, ptr %447, align 1
  %453 = icmp eq i8 %451, %452
  %454 = zext i1 %453 to i32
  %455 = getelementptr i8, ptr %447, i32 %454
  br label %456

456:                                              ; preds = %450, %446
  %457 = phi ptr [ %447, %446 ], [ %455, %450 ]
  %458 = ptrtoint ptr %457 to i32
  %459 = sub i32 %458, %375
  br label %460

460:                                              ; preds = %456, %428, %414
  %461 = phi i32 [ %459, %456 ], [ %416, %414 ], [ %433, %428 ]
  %462 = getelementptr i8, ptr %401, i32 %461
  %463 = icmp eq ptr %462, %169
  br i1 %463, label %464, label %522

464:                                              ; preds = %460
  %465 = getelementptr i8, ptr %374, i32 %461
  %466 = icmp ugt ptr %376, %465
  br i1 %466, label %467, label %493

467:                                              ; preds = %464
  %468 = load i32, ptr %19, align 1
  %469 = load i32, ptr %465, align 1
  %470 = xor i32 %469, %468
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %475, label %472

472:                                              ; preds = %467
  %473 = tail call i32 @llvm.cttz.i32(i32 %470, i1 true) #7, !range !8
  %474 = lshr i32 %473, 3
  br label %519

475:                                              ; preds = %481, %467
  %476 = phi ptr [ %479, %481 ], [ %465, %467 ]
  %477 = phi ptr [ %478, %481 ], [ %19, %467 ]
  %478 = getelementptr i8, ptr %477, i32 4
  %479 = getelementptr i8, ptr %476, i32 4
  %480 = icmp ult ptr %479, %376
  br i1 %480, label %481, label %493

481:                                              ; preds = %475
  %482 = load i32, ptr %478, align 1
  %483 = load i32, ptr %479, align 1
  %484 = xor i32 %483, %482
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %475, label %486

486:                                              ; preds = %481
  %487 = tail call i32 @llvm.cttz.i32(i32 %484, i1 true) #7, !range !8
  %488 = lshr i32 %487, 3
  %489 = getelementptr i8, ptr %479, i32 %488
  %490 = ptrtoint ptr %489 to i32
  %491 = ptrtoint ptr %465 to i32
  %492 = sub i32 %490, %491
  br label %519

493:                                              ; preds = %475, %464
  %494 = phi ptr [ %465, %464 ], [ %479, %475 ]
  %495 = phi ptr [ %19, %464 ], [ %478, %475 ]
  %496 = icmp ult ptr %494, %377
  br i1 %496, label %497, label %504

497:                                              ; preds = %493
  %498 = load i16, ptr %495, align 1
  %499 = load i16, ptr %494, align 1
  %500 = icmp eq i16 %498, %499
  br i1 %500, label %501, label %504

501:                                              ; preds = %497
  %502 = getelementptr i8, ptr %494, i32 2
  %503 = getelementptr i8, ptr %495, i32 2
  br label %504

504:                                              ; preds = %501, %497, %493
  %505 = phi ptr [ %502, %501 ], [ %494, %497 ], [ %494, %493 ]
  %506 = phi ptr [ %503, %501 ], [ %495, %497 ], [ %495, %493 ]
  %507 = icmp ult ptr %505, %2
  br i1 %507, label %508, label %514

508:                                              ; preds = %504
  %509 = load i8, ptr %506, align 1
  %510 = load i8, ptr %505, align 1
  %511 = icmp eq i8 %509, %510
  %512 = zext i1 %511 to i32
  %513 = getelementptr i8, ptr %505, i32 %512
  br label %514

514:                                              ; preds = %508, %504
  %515 = phi ptr [ %505, %504 ], [ %513, %508 ]
  %516 = ptrtoint ptr %515 to i32
  %517 = ptrtoint ptr %465 to i32
  %518 = sub i32 %516, %517
  br label %519

519:                                              ; preds = %514, %486, %472
  %520 = phi i32 [ %518, %514 ], [ %474, %472 ], [ %492, %486 ]
  %521 = add i32 %520, %461
  br label %522

522:                                              ; preds = %519, %460
  %523 = phi i32 [ %521, %519 ], [ %461, %460 ]
  %524 = add i32 %523, 4
  %525 = icmp ugt i32 %524, %394
  br i1 %525, label %526, label %531

526:                                              ; preds = %522
  %527 = sub i32 %379, %396
  store i32 %527, ptr %3, align 4
  %528 = getelementptr i8, ptr %1, i32 %524
  %529 = icmp eq ptr %528, %2
  %530 = load i32, ptr %1, align 1
  br i1 %529, label %539, label %531

531:                                              ; preds = %526, %522, %389
  %532 = phi i32 [ %530, %526 ], [ %391, %522 ], [ %391, %389 ]
  %533 = phi i32 [ %524, %526 ], [ %394, %522 ], [ %394, %389 ]
  %534 = add nuw nsw i32 %392, 1
  %535 = icmp eq i32 %534, %369
  br i1 %535, label %539, label %536

536:                                              ; preds = %531
  %537 = add nuw nsw i32 %393, 1
  %538 = load ptr, ptr %191, align 4
  br label %389

539:                                              ; preds = %531, %526, %338
  %540 = phi i1 [ %370, %526 ], [ %370, %531 ], [ %207, %338 ]
  %541 = phi i32 [ %533, %531 ], [ %524, %526 ], [ %336, %338 ]
  %542 = phi i32 [ undef, %526 ], [ undef, %531 ], [ %336, %338 ]
  br i1 %540, label %1631, label %543

543:                                              ; preds = %539, %363, %353
  %544 = phi i32 [ %541, %539 ], [ %166, %363 ], [ %343, %353 ]
  br label %1631

545:                                              ; preds = %4
  %546 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %547 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %548 = load ptr, ptr %547, align 4
  %549 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %550 = load i32, ptr %549, align 4
  %551 = shl nuw i32 1, %550
  %552 = add i32 %551, -1
  %553 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %554 = load ptr, ptr %553, align 4
  %555 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %556 = load i32, ptr %555, align 4
  %557 = getelementptr i8, ptr %554, i32 %556
  %558 = ptrtoint ptr %1 to i32
  %559 = ptrtoint ptr %554 to i32
  %560 = sub i32 %558, %559
  %561 = load i32, ptr %546, align 4
  %562 = shl nuw i32 1, %561
  %563 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %564 = load i32, ptr %563, align 4
  %565 = sub i32 %560, %564
  %566 = icmp ugt i32 %565, %562
  %567 = sub i32 %560, %562
  %568 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %569 = load i32, ptr %568, align 4
  %570 = icmp eq i32 %569, 0
  %571 = select i1 %570, i1 %566, i1 false
  %572 = select i1 %571, i32 %567, i32 %564
  %573 = tail call i32 @llvm.usub.sat.i32(i32 %560, i32 %551) #7
  %574 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %575 = load i32, ptr %574, align 4
  %576 = shl nuw i32 1, %575
  %577 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %578 = load ptr, ptr %577, align 4
  %579 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %578, i32 0, i32 10, i32 2
  %580 = load i32, ptr %579, align 4
  %581 = load i64, ptr %1, align 1
  %582 = mul i64 %581, -3523014627271114752
  %583 = sub i32 66, %580
  %584 = zext i32 %583 to i64
  %585 = lshr i64 %582, %584
  %586 = trunc i64 %585 to i32
  %587 = shl i32 %586, 2
  %588 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %578, i32 0, i32 4
  %589 = load ptr, ptr %588, align 4
  %590 = getelementptr i32, ptr %589, i32 %587
  tail call void @llvm.prefetch.p0(ptr %590, i32 0, i32 3, i32 1) #7
  %591 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %592 = load ptr, ptr %591, align 4
  %593 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %594 = load i32, ptr %593, align 4
  %595 = shl nsw i32 -1, %550
  %596 = xor i32 %595, -1
  %597 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %598 = load i32, ptr %597, align 4
  %599 = icmp ult i32 %598, %560
  %600 = sub i32 64, %594
  %601 = zext i32 %600 to i64
  br i1 %599, label %602, label %615

602:                                              ; preds = %602, %545
  %603 = phi i32 [ %613, %602 ], [ %598, %545 ]
  %604 = getelementptr i8, ptr %554, i32 %603
  %605 = load i64, ptr %604, align 1
  %606 = mul i64 %605, -3523014627271114752
  %607 = lshr i64 %606, %601
  %608 = trunc i64 %607 to i32
  %609 = getelementptr i32, ptr %592, i32 %608
  %610 = load i32, ptr %609, align 4
  %611 = and i32 %603, %596
  %612 = getelementptr i32, ptr %548, i32 %611
  store i32 %610, ptr %612, align 4
  store i32 %603, ptr %609, align 4
  %613 = add nuw i32 %603, 1
  %614 = icmp ult i32 %613, %560
  br i1 %614, label %602, label %615

615:                                              ; preds = %602, %545
  store i32 %560, ptr %597, align 4
  %616 = load i64, ptr %1, align 1
  %617 = mul i64 %616, -3523014627271114752
  %618 = lshr i64 %617, %601
  %619 = trunc i64 %618 to i32
  %620 = getelementptr i32, ptr %592, i32 %619
  %621 = load i32, ptr %620, align 4
  %622 = icmp ult i32 %621, %572
  br i1 %622, label %707, label %623

623:                                              ; preds = %615
  %624 = getelementptr i8, ptr %2, i32 -3
  %625 = icmp ugt ptr %624, %1
  %626 = getelementptr i8, ptr %2, i32 -1
  %627 = add i32 %560, 2
  br label %628

628:                                              ; preds = %699, %623
  %629 = phi i32 [ %621, %623 ], [ %703, %699 ]
  %630 = phi i32 [ 3, %623 ], [ %697, %699 ]
  %631 = phi i32 [ %576, %623 ], [ %702, %699 ]
  %632 = getelementptr i8, ptr %554, i32 %629
  %633 = getelementptr i8, ptr %632, i32 %630
  %634 = load i8, ptr %633, align 1
  %635 = getelementptr i8, ptr %1, i32 %630
  %636 = load i8, ptr %635, align 1
  %637 = icmp eq i8 %634, %636
  br i1 %637, label %638, label %696

638:                                              ; preds = %628
  br i1 %625, label %639, label %664

639:                                              ; preds = %638
  %640 = load i32, ptr %632, align 1
  %641 = load i32, ptr %1, align 1
  %642 = xor i32 %641, %640
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %647, label %644

644:                                              ; preds = %639
  %645 = tail call i32 @llvm.cttz.i32(i32 %642, i1 true) #7, !range !8
  %646 = lshr i32 %645, 3
  br label %689

647:                                              ; preds = %653, %639
  %648 = phi ptr [ %651, %653 ], [ %1, %639 ]
  %649 = phi ptr [ %650, %653 ], [ %632, %639 ]
  %650 = getelementptr i8, ptr %649, i32 4
  %651 = getelementptr i8, ptr %648, i32 4
  %652 = icmp ult ptr %651, %624
  br i1 %652, label %653, label %664

653:                                              ; preds = %647
  %654 = load i32, ptr %650, align 1
  %655 = load i32, ptr %651, align 1
  %656 = xor i32 %655, %654
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %647, label %658

658:                                              ; preds = %653
  %659 = tail call i32 @llvm.cttz.i32(i32 %656, i1 true) #7, !range !8
  %660 = lshr i32 %659, 3
  %661 = getelementptr i8, ptr %651, i32 %660
  %662 = ptrtoint ptr %661 to i32
  %663 = sub i32 %662, %558
  br label %689

664:                                              ; preds = %647, %638
  %665 = phi ptr [ %1, %638 ], [ %651, %647 ]
  %666 = phi ptr [ %632, %638 ], [ %650, %647 ]
  %667 = icmp ult ptr %665, %626
  br i1 %667, label %668, label %675

668:                                              ; preds = %664
  %669 = load i16, ptr %666, align 1
  %670 = load i16, ptr %665, align 1
  %671 = icmp eq i16 %669, %670
  br i1 %671, label %672, label %675

672:                                              ; preds = %668
  %673 = getelementptr i8, ptr %665, i32 2
  %674 = getelementptr i8, ptr %666, i32 2
  br label %675

675:                                              ; preds = %672, %668, %664
  %676 = phi ptr [ %673, %672 ], [ %665, %668 ], [ %665, %664 ]
  %677 = phi ptr [ %674, %672 ], [ %666, %668 ], [ %666, %664 ]
  %678 = icmp ult ptr %676, %2
  br i1 %678, label %679, label %685

679:                                              ; preds = %675
  %680 = load i8, ptr %677, align 1
  %681 = load i8, ptr %676, align 1
  %682 = icmp eq i8 %680, %681
  %683 = zext i1 %682 to i32
  %684 = getelementptr i8, ptr %676, i32 %683
  br label %685

685:                                              ; preds = %679, %675
  %686 = phi ptr [ %676, %675 ], [ %684, %679 ]
  %687 = ptrtoint ptr %686 to i32
  %688 = sub i32 %687, %558
  br label %689

689:                                              ; preds = %685, %658, %644
  %690 = phi i32 [ %688, %685 ], [ %646, %644 ], [ %663, %658 ]
  %691 = icmp ugt i32 %690, %630
  br i1 %691, label %692, label %696

692:                                              ; preds = %689
  %693 = sub i32 %627, %629
  store i32 %693, ptr %3, align 4
  %694 = getelementptr i8, ptr %1, i32 %690
  %695 = icmp eq ptr %694, %2
  br i1 %695, label %707, label %696

696:                                              ; preds = %692, %689, %628
  %697 = phi i32 [ %690, %692 ], [ %630, %689 ], [ %630, %628 ]
  %698 = icmp ugt i32 %629, %573
  br i1 %698, label %699, label %707

699:                                              ; preds = %696
  %700 = and i32 %629, %552
  %701 = getelementptr i32, ptr %548, i32 %700
  %702 = add i32 %631, -1
  %703 = load i32, ptr %701, align 4
  %704 = icmp uge i32 %703, %572
  %705 = icmp ne i32 %702, 0
  %706 = and i1 %705, %704
  br i1 %706, label %628, label %707

707:                                              ; preds = %699, %696, %692, %615
  %708 = phi i32 [ %576, %615 ], [ %702, %699 ], [ %631, %692 ], [ %631, %696 ]
  %709 = phi i32 [ 3, %615 ], [ %697, %699 ], [ %690, %692 ], [ %697, %696 ]
  %710 = getelementptr inbounds %struct.ZSTD_window_t, ptr %578, i32 0, i32 1
  %711 = load ptr, ptr %710, align 4
  %712 = load ptr, ptr %578, align 4
  %713 = ptrtoint ptr %712 to i32
  %714 = ptrtoint ptr %711 to i32
  %715 = add i32 %556, %714
  %716 = sub i32 %713, %715
  %717 = load ptr, ptr %588, align 4
  %718 = getelementptr i32, ptr %717, i32 %587
  %719 = load i32, ptr %718, align 4
  %720 = getelementptr i8, ptr %711, i32 %719
  tail call void @llvm.prefetch.p0(ptr %720, i32 0, i32 3, i32 1) #7
  %721 = or i32 %587, 1
  %722 = getelementptr i32, ptr %717, i32 %721
  %723 = load i32, ptr %722, align 4
  %724 = getelementptr i8, ptr %711, i32 %723
  tail call void @llvm.prefetch.p0(ptr %724, i32 0, i32 3, i32 1) #7
  %725 = or i32 %587, 2
  %726 = getelementptr i32, ptr %717, i32 %725
  %727 = load i32, ptr %726, align 4
  %728 = getelementptr i8, ptr %711, i32 %727
  tail call void @llvm.prefetch.p0(ptr %728, i32 0, i32 3, i32 1) #7
  %729 = tail call i32 @llvm.umin.i32(i32 %708, i32 3) #7
  %730 = or i32 %587, 3
  %731 = getelementptr i32, ptr %717, i32 %730
  %732 = load i32, ptr %731, align 4
  %733 = lshr i32 %732, 8
  %734 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %578, i32 0, i32 6
  %735 = load ptr, ptr %734, align 4
  %736 = getelementptr i32, ptr %735, i32 %733
  tail call void @llvm.prefetch.p0(ptr %736, i32 0, i32 3, i32 1) #7
  %737 = icmp eq i32 %729, 0
  br i1 %737, label %906, label %738

738:                                              ; preds = %707
  %739 = getelementptr i8, ptr %1, i32 4
  %740 = ptrtoint ptr %739 to i32
  %741 = getelementptr i8, ptr %2, i32 -3
  %742 = getelementptr i8, ptr %2, i32 -1
  %743 = add i32 %560, 2
  %744 = add i32 %743, %716
  %745 = icmp eq i32 %719, 0
  br i1 %745, label %1631, label %746

746:                                              ; preds = %891, %738
  %747 = phi i32 [ %894, %891 ], [ %719, %738 ]
  %748 = phi i32 [ %886, %891 ], [ %709, %738 ]
  %749 = phi i32 [ %887, %891 ], [ 0, %738 ]
  %750 = phi i1 [ %888, %891 ], [ true, %738 ]
  %751 = getelementptr i8, ptr %711, i32 %747
  %752 = load i32, ptr %751, align 1
  %753 = load i32, ptr %1, align 1
  %754 = icmp eq i32 %752, %753
  br i1 %754, label %755, label %885

755:                                              ; preds = %746
  %756 = getelementptr i8, ptr %751, i32 4
  %757 = ptrtoint ptr %756 to i32
  %758 = sub i32 %713, %757
  %759 = getelementptr i8, ptr %739, i32 %758
  %760 = icmp ult ptr %759, %2
  %761 = select i1 %760, ptr %759, ptr %2
  %762 = getelementptr i8, ptr %761, i32 -3
  %763 = icmp ugt ptr %762, %739
  br i1 %763, label %764, label %789

764:                                              ; preds = %755
  %765 = load i32, ptr %756, align 1
  %766 = load i32, ptr %739, align 1
  %767 = xor i32 %766, %765
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %772, label %769

769:                                              ; preds = %764
  %770 = tail call i32 @llvm.cttz.i32(i32 %767, i1 true) #7, !range !8
  %771 = lshr i32 %770, 3
  br label %815

772:                                              ; preds = %778, %764
  %773 = phi ptr [ %776, %778 ], [ %739, %764 ]
  %774 = phi ptr [ %775, %778 ], [ %756, %764 ]
  %775 = getelementptr i8, ptr %774, i32 4
  %776 = getelementptr i8, ptr %773, i32 4
  %777 = icmp ult ptr %776, %762
  br i1 %777, label %778, label %789

778:                                              ; preds = %772
  %779 = load i32, ptr %775, align 1
  %780 = load i32, ptr %776, align 1
  %781 = xor i32 %780, %779
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %772, label %783

783:                                              ; preds = %778
  %784 = tail call i32 @llvm.cttz.i32(i32 %781, i1 true) #7, !range !8
  %785 = lshr i32 %784, 3
  %786 = getelementptr i8, ptr %776, i32 %785
  %787 = ptrtoint ptr %786 to i32
  %788 = sub i32 %787, %740
  br label %815

789:                                              ; preds = %772, %755
  %790 = phi ptr [ %739, %755 ], [ %776, %772 ]
  %791 = phi ptr [ %756, %755 ], [ %775, %772 ]
  %792 = getelementptr i8, ptr %761, i32 -1
  %793 = icmp ult ptr %790, %792
  br i1 %793, label %794, label %801

794:                                              ; preds = %789
  %795 = load i16, ptr %791, align 1
  %796 = load i16, ptr %790, align 1
  %797 = icmp eq i16 %795, %796
  br i1 %797, label %798, label %801

798:                                              ; preds = %794
  %799 = getelementptr i8, ptr %790, i32 2
  %800 = getelementptr i8, ptr %791, i32 2
  br label %801

801:                                              ; preds = %798, %794, %789
  %802 = phi ptr [ %799, %798 ], [ %790, %794 ], [ %790, %789 ]
  %803 = phi ptr [ %800, %798 ], [ %791, %794 ], [ %791, %789 ]
  %804 = icmp ult ptr %802, %761
  br i1 %804, label %805, label %811

805:                                              ; preds = %801
  %806 = load i8, ptr %803, align 1
  %807 = load i8, ptr %802, align 1
  %808 = icmp eq i8 %806, %807
  %809 = zext i1 %808 to i32
  %810 = getelementptr i8, ptr %802, i32 %809
  br label %811

811:                                              ; preds = %805, %801
  %812 = phi ptr [ %802, %801 ], [ %810, %805 ]
  %813 = ptrtoint ptr %812 to i32
  %814 = sub i32 %813, %740
  br label %815

815:                                              ; preds = %811, %783, %769
  %816 = phi i32 [ %814, %811 ], [ %771, %769 ], [ %788, %783 ]
  %817 = getelementptr i8, ptr %756, i32 %816
  %818 = icmp eq ptr %817, %712
  br i1 %818, label %819, label %877

819:                                              ; preds = %815
  %820 = getelementptr i8, ptr %739, i32 %816
  %821 = icmp ugt ptr %741, %820
  br i1 %821, label %822, label %848

822:                                              ; preds = %819
  %823 = load i32, ptr %557, align 1
  %824 = load i32, ptr %820, align 1
  %825 = xor i32 %824, %823
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %830, label %827

827:                                              ; preds = %822
  %828 = tail call i32 @llvm.cttz.i32(i32 %825, i1 true) #7, !range !8
  %829 = lshr i32 %828, 3
  br label %874

830:                                              ; preds = %836, %822
  %831 = phi ptr [ %834, %836 ], [ %820, %822 ]
  %832 = phi ptr [ %833, %836 ], [ %557, %822 ]
  %833 = getelementptr i8, ptr %832, i32 4
  %834 = getelementptr i8, ptr %831, i32 4
  %835 = icmp ult ptr %834, %741
  br i1 %835, label %836, label %848

836:                                              ; preds = %830
  %837 = load i32, ptr %833, align 1
  %838 = load i32, ptr %834, align 1
  %839 = xor i32 %838, %837
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %830, label %841

841:                                              ; preds = %836
  %842 = tail call i32 @llvm.cttz.i32(i32 %839, i1 true) #7, !range !8
  %843 = lshr i32 %842, 3
  %844 = getelementptr i8, ptr %834, i32 %843
  %845 = ptrtoint ptr %844 to i32
  %846 = ptrtoint ptr %820 to i32
  %847 = sub i32 %845, %846
  br label %874

848:                                              ; preds = %830, %819
  %849 = phi ptr [ %820, %819 ], [ %834, %830 ]
  %850 = phi ptr [ %557, %819 ], [ %833, %830 ]
  %851 = icmp ult ptr %849, %742
  br i1 %851, label %852, label %859

852:                                              ; preds = %848
  %853 = load i16, ptr %850, align 1
  %854 = load i16, ptr %849, align 1
  %855 = icmp eq i16 %853, %854
  br i1 %855, label %856, label %859

856:                                              ; preds = %852
  %857 = getelementptr i8, ptr %849, i32 2
  %858 = getelementptr i8, ptr %850, i32 2
  br label %859

859:                                              ; preds = %856, %852, %848
  %860 = phi ptr [ %857, %856 ], [ %849, %852 ], [ %849, %848 ]
  %861 = phi ptr [ %858, %856 ], [ %850, %852 ], [ %850, %848 ]
  %862 = icmp ult ptr %860, %2
  br i1 %862, label %863, label %869

863:                                              ; preds = %859
  %864 = load i8, ptr %861, align 1
  %865 = load i8, ptr %860, align 1
  %866 = icmp eq i8 %864, %865
  %867 = zext i1 %866 to i32
  %868 = getelementptr i8, ptr %860, i32 %867
  br label %869

869:                                              ; preds = %863, %859
  %870 = phi ptr [ %860, %859 ], [ %868, %863 ]
  %871 = ptrtoint ptr %870 to i32
  %872 = ptrtoint ptr %820 to i32
  %873 = sub i32 %871, %872
  br label %874

874:                                              ; preds = %869, %841, %827
  %875 = phi i32 [ %873, %869 ], [ %829, %827 ], [ %847, %841 ]
  %876 = add i32 %875, %816
  br label %877

877:                                              ; preds = %874, %815
  %878 = phi i32 [ %876, %874 ], [ %816, %815 ]
  %879 = add i32 %878, 4
  %880 = icmp ugt i32 %879, %748
  br i1 %880, label %881, label %885

881:                                              ; preds = %877
  %882 = sub i32 %744, %747
  store i32 %882, ptr %3, align 4
  %883 = getelementptr i8, ptr %1, i32 %879
  %884 = icmp eq ptr %883, %2
  br i1 %884, label %1082, label %885

885:                                              ; preds = %881, %877, %746
  %886 = phi i32 [ %879, %881 ], [ %748, %877 ], [ %748, %746 ]
  %887 = add nuw nsw i32 %749, 1
  %888 = icmp ult i32 %887, %729
  %889 = icmp eq i32 %887, %729
  %890 = load ptr, ptr %588, align 4
  br i1 %889, label %896, label %891

891:                                              ; preds = %885
  %892 = add nuw nsw i32 %887, %587
  %893 = getelementptr i32, ptr %890, i32 %892
  %894 = load i32, ptr %893, align 4
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %1631, label %746

896:                                              ; preds = %885
  %897 = getelementptr i32, ptr %890, i32 %730
  %898 = load i32, ptr %897, align 4
  %899 = and i32 %898, 255
  %900 = sub i32 %708, %729
  %901 = tail call i32 @llvm.umin.i32(i32 %900, i32 %899) #7
  %902 = icmp eq i32 %901, 0
  br i1 %902, label %1086, label %903

903:                                              ; preds = %896
  %904 = lshr i32 %898, 8
  %905 = load ptr, ptr %734, align 4
  br label %910

906:                                              ; preds = %707
  %907 = and i32 %732, 255
  %908 = tail call i32 @llvm.umin.i32(i32 %708, i32 %907) #7
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %1086, label %910

910:                                              ; preds = %906, %903
  %911 = phi ptr [ %735, %906 ], [ %905, %903 ]
  %912 = phi i32 [ %908, %906 ], [ %901, %903 ]
  %913 = phi i1 [ false, %906 ], [ %888, %903 ]
  %914 = phi i32 [ %709, %906 ], [ %886, %903 ]
  %915 = phi i32 [ %733, %906 ], [ %904, %903 ]
  br label %924

916:                                              ; preds = %924
  %917 = getelementptr i8, ptr %1, i32 4
  %918 = ptrtoint ptr %917 to i32
  %919 = getelementptr i8, ptr %2, i32 -3
  %920 = getelementptr i8, ptr %2, i32 -1
  %921 = add i32 %560, 2
  %922 = add i32 %921, %716
  %923 = load i32, ptr %1, align 1
  br label %932

924:                                              ; preds = %924, %910
  %925 = phi i32 [ 0, %910 ], [ %930, %924 ]
  %926 = add nuw nsw i32 %925, %915
  %927 = getelementptr i32, ptr %911, i32 %926
  %928 = load i32, ptr %927, align 4
  %929 = getelementptr i8, ptr %711, i32 %928
  tail call void @llvm.prefetch.p0(ptr %929, i32 0, i32 3, i32 1) #7
  %930 = add nuw nsw i32 %925, 1
  %931 = icmp eq i32 %930, %912
  br i1 %931, label %916, label %924

932:                                              ; preds = %1079, %916
  %933 = phi ptr [ %911, %916 ], [ %1081, %1079 ]
  %934 = phi i32 [ %923, %916 ], [ %1075, %1079 ]
  %935 = phi i32 [ 0, %916 ], [ %1077, %1079 ]
  %936 = phi i32 [ %915, %916 ], [ %1080, %1079 ]
  %937 = phi i32 [ %914, %916 ], [ %1076, %1079 ]
  %938 = getelementptr i32, ptr %933, i32 %936
  %939 = load i32, ptr %938, align 4
  %940 = getelementptr i8, ptr %711, i32 %939
  %941 = load i32, ptr %940, align 1
  %942 = icmp eq i32 %941, %934
  br i1 %942, label %943, label %1074

943:                                              ; preds = %932
  %944 = getelementptr i8, ptr %940, i32 4
  %945 = ptrtoint ptr %944 to i32
  %946 = sub i32 %713, %945
  %947 = getelementptr i8, ptr %917, i32 %946
  %948 = icmp ult ptr %947, %2
  %949 = select i1 %948, ptr %947, ptr %2
  %950 = getelementptr i8, ptr %949, i32 -3
  %951 = icmp ugt ptr %950, %917
  br i1 %951, label %952, label %977

952:                                              ; preds = %943
  %953 = load i32, ptr %944, align 1
  %954 = load i32, ptr %917, align 1
  %955 = xor i32 %954, %953
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %960, label %957

957:                                              ; preds = %952
  %958 = tail call i32 @llvm.cttz.i32(i32 %955, i1 true) #7, !range !8
  %959 = lshr i32 %958, 3
  br label %1003

960:                                              ; preds = %966, %952
  %961 = phi ptr [ %964, %966 ], [ %917, %952 ]
  %962 = phi ptr [ %963, %966 ], [ %944, %952 ]
  %963 = getelementptr i8, ptr %962, i32 4
  %964 = getelementptr i8, ptr %961, i32 4
  %965 = icmp ult ptr %964, %950
  br i1 %965, label %966, label %977

966:                                              ; preds = %960
  %967 = load i32, ptr %963, align 1
  %968 = load i32, ptr %964, align 1
  %969 = xor i32 %968, %967
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %960, label %971

971:                                              ; preds = %966
  %972 = tail call i32 @llvm.cttz.i32(i32 %969, i1 true) #7, !range !8
  %973 = lshr i32 %972, 3
  %974 = getelementptr i8, ptr %964, i32 %973
  %975 = ptrtoint ptr %974 to i32
  %976 = sub i32 %975, %918
  br label %1003

977:                                              ; preds = %960, %943
  %978 = phi ptr [ %917, %943 ], [ %964, %960 ]
  %979 = phi ptr [ %944, %943 ], [ %963, %960 ]
  %980 = getelementptr i8, ptr %949, i32 -1
  %981 = icmp ult ptr %978, %980
  br i1 %981, label %982, label %989

982:                                              ; preds = %977
  %983 = load i16, ptr %979, align 1
  %984 = load i16, ptr %978, align 1
  %985 = icmp eq i16 %983, %984
  br i1 %985, label %986, label %989

986:                                              ; preds = %982
  %987 = getelementptr i8, ptr %978, i32 2
  %988 = getelementptr i8, ptr %979, i32 2
  br label %989

989:                                              ; preds = %986, %982, %977
  %990 = phi ptr [ %987, %986 ], [ %978, %982 ], [ %978, %977 ]
  %991 = phi ptr [ %988, %986 ], [ %979, %982 ], [ %979, %977 ]
  %992 = icmp ult ptr %990, %949
  br i1 %992, label %993, label %999

993:                                              ; preds = %989
  %994 = load i8, ptr %991, align 1
  %995 = load i8, ptr %990, align 1
  %996 = icmp eq i8 %994, %995
  %997 = zext i1 %996 to i32
  %998 = getelementptr i8, ptr %990, i32 %997
  br label %999

999:                                              ; preds = %993, %989
  %1000 = phi ptr [ %990, %989 ], [ %998, %993 ]
  %1001 = ptrtoint ptr %1000 to i32
  %1002 = sub i32 %1001, %918
  br label %1003

1003:                                             ; preds = %999, %971, %957
  %1004 = phi i32 [ %1002, %999 ], [ %959, %957 ], [ %976, %971 ]
  %1005 = getelementptr i8, ptr %944, i32 %1004
  %1006 = icmp eq ptr %1005, %712
  br i1 %1006, label %1007, label %1065

1007:                                             ; preds = %1003
  %1008 = getelementptr i8, ptr %917, i32 %1004
  %1009 = icmp ugt ptr %919, %1008
  br i1 %1009, label %1010, label %1036

1010:                                             ; preds = %1007
  %1011 = load i32, ptr %557, align 1
  %1012 = load i32, ptr %1008, align 1
  %1013 = xor i32 %1012, %1011
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1018, label %1015

1015:                                             ; preds = %1010
  %1016 = tail call i32 @llvm.cttz.i32(i32 %1013, i1 true) #7, !range !8
  %1017 = lshr i32 %1016, 3
  br label %1062

1018:                                             ; preds = %1024, %1010
  %1019 = phi ptr [ %1022, %1024 ], [ %1008, %1010 ]
  %1020 = phi ptr [ %1021, %1024 ], [ %557, %1010 ]
  %1021 = getelementptr i8, ptr %1020, i32 4
  %1022 = getelementptr i8, ptr %1019, i32 4
  %1023 = icmp ult ptr %1022, %919
  br i1 %1023, label %1024, label %1036

1024:                                             ; preds = %1018
  %1025 = load i32, ptr %1021, align 1
  %1026 = load i32, ptr %1022, align 1
  %1027 = xor i32 %1026, %1025
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1018, label %1029

1029:                                             ; preds = %1024
  %1030 = tail call i32 @llvm.cttz.i32(i32 %1027, i1 true) #7, !range !8
  %1031 = lshr i32 %1030, 3
  %1032 = getelementptr i8, ptr %1022, i32 %1031
  %1033 = ptrtoint ptr %1032 to i32
  %1034 = ptrtoint ptr %1008 to i32
  %1035 = sub i32 %1033, %1034
  br label %1062

1036:                                             ; preds = %1018, %1007
  %1037 = phi ptr [ %1008, %1007 ], [ %1022, %1018 ]
  %1038 = phi ptr [ %557, %1007 ], [ %1021, %1018 ]
  %1039 = icmp ult ptr %1037, %920
  br i1 %1039, label %1040, label %1047

1040:                                             ; preds = %1036
  %1041 = load i16, ptr %1038, align 1
  %1042 = load i16, ptr %1037, align 1
  %1043 = icmp eq i16 %1041, %1042
  br i1 %1043, label %1044, label %1047

1044:                                             ; preds = %1040
  %1045 = getelementptr i8, ptr %1037, i32 2
  %1046 = getelementptr i8, ptr %1038, i32 2
  br label %1047

1047:                                             ; preds = %1044, %1040, %1036
  %1048 = phi ptr [ %1045, %1044 ], [ %1037, %1040 ], [ %1037, %1036 ]
  %1049 = phi ptr [ %1046, %1044 ], [ %1038, %1040 ], [ %1038, %1036 ]
  %1050 = icmp ult ptr %1048, %2
  br i1 %1050, label %1051, label %1057

1051:                                             ; preds = %1047
  %1052 = load i8, ptr %1049, align 1
  %1053 = load i8, ptr %1048, align 1
  %1054 = icmp eq i8 %1052, %1053
  %1055 = zext i1 %1054 to i32
  %1056 = getelementptr i8, ptr %1048, i32 %1055
  br label %1057

1057:                                             ; preds = %1051, %1047
  %1058 = phi ptr [ %1048, %1047 ], [ %1056, %1051 ]
  %1059 = ptrtoint ptr %1058 to i32
  %1060 = ptrtoint ptr %1008 to i32
  %1061 = sub i32 %1059, %1060
  br label %1062

1062:                                             ; preds = %1057, %1029, %1015
  %1063 = phi i32 [ %1061, %1057 ], [ %1017, %1015 ], [ %1035, %1029 ]
  %1064 = add i32 %1063, %1004
  br label %1065

1065:                                             ; preds = %1062, %1003
  %1066 = phi i32 [ %1064, %1062 ], [ %1004, %1003 ]
  %1067 = add i32 %1066, 4
  %1068 = icmp ugt i32 %1067, %937
  br i1 %1068, label %1069, label %1074

1069:                                             ; preds = %1065
  %1070 = sub i32 %922, %939
  store i32 %1070, ptr %3, align 4
  %1071 = getelementptr i8, ptr %1, i32 %1067
  %1072 = icmp eq ptr %1071, %2
  %1073 = load i32, ptr %1, align 1
  br i1 %1072, label %1082, label %1074

1074:                                             ; preds = %1069, %1065, %932
  %1075 = phi i32 [ %1073, %1069 ], [ %934, %1065 ], [ %934, %932 ]
  %1076 = phi i32 [ %1067, %1069 ], [ %937, %1065 ], [ %937, %932 ]
  %1077 = add nuw nsw i32 %935, 1
  %1078 = icmp eq i32 %1077, %912
  br i1 %1078, label %1082, label %1079

1079:                                             ; preds = %1074
  %1080 = add nuw nsw i32 %936, 1
  %1081 = load ptr, ptr %734, align 4
  br label %932

1082:                                             ; preds = %1074, %1069, %881
  %1083 = phi i1 [ %913, %1069 ], [ %913, %1074 ], [ %750, %881 ]
  %1084 = phi i32 [ %1076, %1074 ], [ %1067, %1069 ], [ %879, %881 ]
  %1085 = phi i32 [ undef, %1069 ], [ undef, %1074 ], [ %879, %881 ]
  br i1 %1083, label %1631, label %1086

1086:                                             ; preds = %1082, %906, %896
  %1087 = phi i32 [ %1084, %1082 ], [ %709, %906 ], [ %886, %896 ]
  br label %1631

1088:                                             ; preds = %4, %4
  %1089 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %1090 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %1091 = load ptr, ptr %1090, align 4
  %1092 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %1093 = load i32, ptr %1092, align 4
  %1094 = shl nuw i32 1, %1093
  %1095 = add i32 %1094, -1
  %1096 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %1097 = load ptr, ptr %1096, align 4
  %1098 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1099 = load i32, ptr %1098, align 4
  %1100 = getelementptr i8, ptr %1097, i32 %1099
  %1101 = ptrtoint ptr %1 to i32
  %1102 = ptrtoint ptr %1097 to i32
  %1103 = sub i32 %1101, %1102
  %1104 = load i32, ptr %1089, align 4
  %1105 = shl nuw i32 1, %1104
  %1106 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %1107 = load i32, ptr %1106, align 4
  %1108 = sub i32 %1103, %1107
  %1109 = icmp ugt i32 %1108, %1105
  %1110 = sub i32 %1103, %1105
  %1111 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %1112 = load i32, ptr %1111, align 4
  %1113 = icmp eq i32 %1112, 0
  %1114 = select i1 %1113, i1 %1109, i1 false
  %1115 = select i1 %1114, i32 %1110, i32 %1107
  %1116 = tail call i32 @llvm.usub.sat.i32(i32 %1103, i32 %1094) #7
  %1117 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %1118 = load i32, ptr %1117, align 4
  %1119 = shl nuw i32 1, %1118
  %1120 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 9
  %1121 = load ptr, ptr %1120, align 4
  %1122 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1121, i32 0, i32 10, i32 2
  %1123 = load i32, ptr %1122, align 4
  %1124 = load i64, ptr %1, align 1
  %1125 = mul i64 %1124, -3523014627193847808
  %1126 = sub i32 66, %1123
  %1127 = zext i32 %1126 to i64
  %1128 = lshr i64 %1125, %1127
  %1129 = trunc i64 %1128 to i32
  %1130 = shl i32 %1129, 2
  %1131 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1121, i32 0, i32 4
  %1132 = load ptr, ptr %1131, align 4
  %1133 = getelementptr i32, ptr %1132, i32 %1130
  tail call void @llvm.prefetch.p0(ptr %1133, i32 0, i32 3, i32 1) #7
  %1134 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %1135 = load ptr, ptr %1134, align 4
  %1136 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %1137 = load i32, ptr %1136, align 4
  %1138 = shl nsw i32 -1, %1093
  %1139 = xor i32 %1138, -1
  %1140 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %1141 = load i32, ptr %1140, align 4
  %1142 = icmp ult i32 %1141, %1103
  %1143 = sub i32 64, %1137
  %1144 = zext i32 %1143 to i64
  br i1 %1142, label %1145, label %1158

1145:                                             ; preds = %1145, %1088
  %1146 = phi i32 [ %1156, %1145 ], [ %1141, %1088 ]
  %1147 = getelementptr i8, ptr %1097, i32 %1146
  %1148 = load i64, ptr %1147, align 1
  %1149 = mul i64 %1148, -3523014627193847808
  %1150 = lshr i64 %1149, %1144
  %1151 = trunc i64 %1150 to i32
  %1152 = getelementptr i32, ptr %1135, i32 %1151
  %1153 = load i32, ptr %1152, align 4
  %1154 = and i32 %1146, %1139
  %1155 = getelementptr i32, ptr %1091, i32 %1154
  store i32 %1153, ptr %1155, align 4
  store i32 %1146, ptr %1152, align 4
  %1156 = add nuw i32 %1146, 1
  %1157 = icmp ult i32 %1156, %1103
  br i1 %1157, label %1145, label %1158

1158:                                             ; preds = %1145, %1088
  store i32 %1103, ptr %1140, align 4
  %1159 = load i64, ptr %1, align 1
  %1160 = mul i64 %1159, -3523014627193847808
  %1161 = lshr i64 %1160, %1144
  %1162 = trunc i64 %1161 to i32
  %1163 = getelementptr i32, ptr %1135, i32 %1162
  %1164 = load i32, ptr %1163, align 4
  %1165 = icmp ult i32 %1164, %1115
  br i1 %1165, label %1250, label %1166

1166:                                             ; preds = %1158
  %1167 = getelementptr i8, ptr %2, i32 -3
  %1168 = icmp ugt ptr %1167, %1
  %1169 = getelementptr i8, ptr %2, i32 -1
  %1170 = add i32 %1103, 2
  br label %1171

1171:                                             ; preds = %1242, %1166
  %1172 = phi i32 [ %1164, %1166 ], [ %1246, %1242 ]
  %1173 = phi i32 [ 3, %1166 ], [ %1240, %1242 ]
  %1174 = phi i32 [ %1119, %1166 ], [ %1245, %1242 ]
  %1175 = getelementptr i8, ptr %1097, i32 %1172
  %1176 = getelementptr i8, ptr %1175, i32 %1173
  %1177 = load i8, ptr %1176, align 1
  %1178 = getelementptr i8, ptr %1, i32 %1173
  %1179 = load i8, ptr %1178, align 1
  %1180 = icmp eq i8 %1177, %1179
  br i1 %1180, label %1181, label %1239

1181:                                             ; preds = %1171
  br i1 %1168, label %1182, label %1207

1182:                                             ; preds = %1181
  %1183 = load i32, ptr %1175, align 1
  %1184 = load i32, ptr %1, align 1
  %1185 = xor i32 %1184, %1183
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1190, label %1187

1187:                                             ; preds = %1182
  %1188 = tail call i32 @llvm.cttz.i32(i32 %1185, i1 true) #7, !range !8
  %1189 = lshr i32 %1188, 3
  br label %1232

1190:                                             ; preds = %1196, %1182
  %1191 = phi ptr [ %1194, %1196 ], [ %1, %1182 ]
  %1192 = phi ptr [ %1193, %1196 ], [ %1175, %1182 ]
  %1193 = getelementptr i8, ptr %1192, i32 4
  %1194 = getelementptr i8, ptr %1191, i32 4
  %1195 = icmp ult ptr %1194, %1167
  br i1 %1195, label %1196, label %1207

1196:                                             ; preds = %1190
  %1197 = load i32, ptr %1193, align 1
  %1198 = load i32, ptr %1194, align 1
  %1199 = xor i32 %1198, %1197
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1190, label %1201

1201:                                             ; preds = %1196
  %1202 = tail call i32 @llvm.cttz.i32(i32 %1199, i1 true) #7, !range !8
  %1203 = lshr i32 %1202, 3
  %1204 = getelementptr i8, ptr %1194, i32 %1203
  %1205 = ptrtoint ptr %1204 to i32
  %1206 = sub i32 %1205, %1101
  br label %1232

1207:                                             ; preds = %1190, %1181
  %1208 = phi ptr [ %1, %1181 ], [ %1194, %1190 ]
  %1209 = phi ptr [ %1175, %1181 ], [ %1193, %1190 ]
  %1210 = icmp ult ptr %1208, %1169
  br i1 %1210, label %1211, label %1218

1211:                                             ; preds = %1207
  %1212 = load i16, ptr %1209, align 1
  %1213 = load i16, ptr %1208, align 1
  %1214 = icmp eq i16 %1212, %1213
  br i1 %1214, label %1215, label %1218

1215:                                             ; preds = %1211
  %1216 = getelementptr i8, ptr %1208, i32 2
  %1217 = getelementptr i8, ptr %1209, i32 2
  br label %1218

1218:                                             ; preds = %1215, %1211, %1207
  %1219 = phi ptr [ %1216, %1215 ], [ %1208, %1211 ], [ %1208, %1207 ]
  %1220 = phi ptr [ %1217, %1215 ], [ %1209, %1211 ], [ %1209, %1207 ]
  %1221 = icmp ult ptr %1219, %2
  br i1 %1221, label %1222, label %1228

1222:                                             ; preds = %1218
  %1223 = load i8, ptr %1220, align 1
  %1224 = load i8, ptr %1219, align 1
  %1225 = icmp eq i8 %1223, %1224
  %1226 = zext i1 %1225 to i32
  %1227 = getelementptr i8, ptr %1219, i32 %1226
  br label %1228

1228:                                             ; preds = %1222, %1218
  %1229 = phi ptr [ %1219, %1218 ], [ %1227, %1222 ]
  %1230 = ptrtoint ptr %1229 to i32
  %1231 = sub i32 %1230, %1101
  br label %1232

1232:                                             ; preds = %1228, %1201, %1187
  %1233 = phi i32 [ %1231, %1228 ], [ %1189, %1187 ], [ %1206, %1201 ]
  %1234 = icmp ugt i32 %1233, %1173
  br i1 %1234, label %1235, label %1239

1235:                                             ; preds = %1232
  %1236 = sub i32 %1170, %1172
  store i32 %1236, ptr %3, align 4
  %1237 = getelementptr i8, ptr %1, i32 %1233
  %1238 = icmp eq ptr %1237, %2
  br i1 %1238, label %1250, label %1239

1239:                                             ; preds = %1235, %1232, %1171
  %1240 = phi i32 [ %1233, %1235 ], [ %1173, %1232 ], [ %1173, %1171 ]
  %1241 = icmp ugt i32 %1172, %1116
  br i1 %1241, label %1242, label %1250

1242:                                             ; preds = %1239
  %1243 = and i32 %1172, %1095
  %1244 = getelementptr i32, ptr %1091, i32 %1243
  %1245 = add i32 %1174, -1
  %1246 = load i32, ptr %1244, align 4
  %1247 = icmp uge i32 %1246, %1115
  %1248 = icmp ne i32 %1245, 0
  %1249 = and i1 %1248, %1247
  br i1 %1249, label %1171, label %1250

1250:                                             ; preds = %1242, %1239, %1235, %1158
  %1251 = phi i32 [ %1119, %1158 ], [ %1245, %1242 ], [ %1174, %1235 ], [ %1174, %1239 ]
  %1252 = phi i32 [ 3, %1158 ], [ %1240, %1242 ], [ %1233, %1235 ], [ %1240, %1239 ]
  %1253 = getelementptr inbounds %struct.ZSTD_window_t, ptr %1121, i32 0, i32 1
  %1254 = load ptr, ptr %1253, align 4
  %1255 = load ptr, ptr %1121, align 4
  %1256 = ptrtoint ptr %1255 to i32
  %1257 = ptrtoint ptr %1254 to i32
  %1258 = add i32 %1099, %1257
  %1259 = sub i32 %1256, %1258
  %1260 = load ptr, ptr %1131, align 4
  %1261 = getelementptr i32, ptr %1260, i32 %1130
  %1262 = load i32, ptr %1261, align 4
  %1263 = getelementptr i8, ptr %1254, i32 %1262
  tail call void @llvm.prefetch.p0(ptr %1263, i32 0, i32 3, i32 1) #7
  %1264 = or i32 %1130, 1
  %1265 = getelementptr i32, ptr %1260, i32 %1264
  %1266 = load i32, ptr %1265, align 4
  %1267 = getelementptr i8, ptr %1254, i32 %1266
  tail call void @llvm.prefetch.p0(ptr %1267, i32 0, i32 3, i32 1) #7
  %1268 = or i32 %1130, 2
  %1269 = getelementptr i32, ptr %1260, i32 %1268
  %1270 = load i32, ptr %1269, align 4
  %1271 = getelementptr i8, ptr %1254, i32 %1270
  tail call void @llvm.prefetch.p0(ptr %1271, i32 0, i32 3, i32 1) #7
  %1272 = tail call i32 @llvm.umin.i32(i32 %1251, i32 3) #7
  %1273 = or i32 %1130, 3
  %1274 = getelementptr i32, ptr %1260, i32 %1273
  %1275 = load i32, ptr %1274, align 4
  %1276 = lshr i32 %1275, 8
  %1277 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %1121, i32 0, i32 6
  %1278 = load ptr, ptr %1277, align 4
  %1279 = getelementptr i32, ptr %1278, i32 %1276
  tail call void @llvm.prefetch.p0(ptr %1279, i32 0, i32 3, i32 1) #7
  %1280 = icmp eq i32 %1272, 0
  br i1 %1280, label %1449, label %1281

1281:                                             ; preds = %1250
  %1282 = getelementptr i8, ptr %1, i32 4
  %1283 = ptrtoint ptr %1282 to i32
  %1284 = getelementptr i8, ptr %2, i32 -3
  %1285 = getelementptr i8, ptr %2, i32 -1
  %1286 = add i32 %1103, 2
  %1287 = add i32 %1286, %1259
  %1288 = icmp eq i32 %1262, 0
  br i1 %1288, label %1631, label %1289

1289:                                             ; preds = %1434, %1281
  %1290 = phi i32 [ %1437, %1434 ], [ %1262, %1281 ]
  %1291 = phi i32 [ %1429, %1434 ], [ %1252, %1281 ]
  %1292 = phi i32 [ %1430, %1434 ], [ 0, %1281 ]
  %1293 = phi i1 [ %1431, %1434 ], [ true, %1281 ]
  %1294 = getelementptr i8, ptr %1254, i32 %1290
  %1295 = load i32, ptr %1294, align 1
  %1296 = load i32, ptr %1, align 1
  %1297 = icmp eq i32 %1295, %1296
  br i1 %1297, label %1298, label %1428

1298:                                             ; preds = %1289
  %1299 = getelementptr i8, ptr %1294, i32 4
  %1300 = ptrtoint ptr %1299 to i32
  %1301 = sub i32 %1256, %1300
  %1302 = getelementptr i8, ptr %1282, i32 %1301
  %1303 = icmp ult ptr %1302, %2
  %1304 = select i1 %1303, ptr %1302, ptr %2
  %1305 = getelementptr i8, ptr %1304, i32 -3
  %1306 = icmp ugt ptr %1305, %1282
  br i1 %1306, label %1307, label %1332

1307:                                             ; preds = %1298
  %1308 = load i32, ptr %1299, align 1
  %1309 = load i32, ptr %1282, align 1
  %1310 = xor i32 %1309, %1308
  %1311 = icmp eq i32 %1310, 0
  br i1 %1311, label %1315, label %1312

1312:                                             ; preds = %1307
  %1313 = tail call i32 @llvm.cttz.i32(i32 %1310, i1 true) #7, !range !8
  %1314 = lshr i32 %1313, 3
  br label %1358

1315:                                             ; preds = %1321, %1307
  %1316 = phi ptr [ %1319, %1321 ], [ %1282, %1307 ]
  %1317 = phi ptr [ %1318, %1321 ], [ %1299, %1307 ]
  %1318 = getelementptr i8, ptr %1317, i32 4
  %1319 = getelementptr i8, ptr %1316, i32 4
  %1320 = icmp ult ptr %1319, %1305
  br i1 %1320, label %1321, label %1332

1321:                                             ; preds = %1315
  %1322 = load i32, ptr %1318, align 1
  %1323 = load i32, ptr %1319, align 1
  %1324 = xor i32 %1323, %1322
  %1325 = icmp eq i32 %1324, 0
  br i1 %1325, label %1315, label %1326

1326:                                             ; preds = %1321
  %1327 = tail call i32 @llvm.cttz.i32(i32 %1324, i1 true) #7, !range !8
  %1328 = lshr i32 %1327, 3
  %1329 = getelementptr i8, ptr %1319, i32 %1328
  %1330 = ptrtoint ptr %1329 to i32
  %1331 = sub i32 %1330, %1283
  br label %1358

1332:                                             ; preds = %1315, %1298
  %1333 = phi ptr [ %1282, %1298 ], [ %1319, %1315 ]
  %1334 = phi ptr [ %1299, %1298 ], [ %1318, %1315 ]
  %1335 = getelementptr i8, ptr %1304, i32 -1
  %1336 = icmp ult ptr %1333, %1335
  br i1 %1336, label %1337, label %1344

1337:                                             ; preds = %1332
  %1338 = load i16, ptr %1334, align 1
  %1339 = load i16, ptr %1333, align 1
  %1340 = icmp eq i16 %1338, %1339
  br i1 %1340, label %1341, label %1344

1341:                                             ; preds = %1337
  %1342 = getelementptr i8, ptr %1333, i32 2
  %1343 = getelementptr i8, ptr %1334, i32 2
  br label %1344

1344:                                             ; preds = %1341, %1337, %1332
  %1345 = phi ptr [ %1342, %1341 ], [ %1333, %1337 ], [ %1333, %1332 ]
  %1346 = phi ptr [ %1343, %1341 ], [ %1334, %1337 ], [ %1334, %1332 ]
  %1347 = icmp ult ptr %1345, %1304
  br i1 %1347, label %1348, label %1354

1348:                                             ; preds = %1344
  %1349 = load i8, ptr %1346, align 1
  %1350 = load i8, ptr %1345, align 1
  %1351 = icmp eq i8 %1349, %1350
  %1352 = zext i1 %1351 to i32
  %1353 = getelementptr i8, ptr %1345, i32 %1352
  br label %1354

1354:                                             ; preds = %1348, %1344
  %1355 = phi ptr [ %1345, %1344 ], [ %1353, %1348 ]
  %1356 = ptrtoint ptr %1355 to i32
  %1357 = sub i32 %1356, %1283
  br label %1358

1358:                                             ; preds = %1354, %1326, %1312
  %1359 = phi i32 [ %1357, %1354 ], [ %1314, %1312 ], [ %1331, %1326 ]
  %1360 = getelementptr i8, ptr %1299, i32 %1359
  %1361 = icmp eq ptr %1360, %1255
  br i1 %1361, label %1362, label %1420

1362:                                             ; preds = %1358
  %1363 = getelementptr i8, ptr %1282, i32 %1359
  %1364 = icmp ugt ptr %1284, %1363
  br i1 %1364, label %1365, label %1391

1365:                                             ; preds = %1362
  %1366 = load i32, ptr %1100, align 1
  %1367 = load i32, ptr %1363, align 1
  %1368 = xor i32 %1367, %1366
  %1369 = icmp eq i32 %1368, 0
  br i1 %1369, label %1373, label %1370

1370:                                             ; preds = %1365
  %1371 = tail call i32 @llvm.cttz.i32(i32 %1368, i1 true) #7, !range !8
  %1372 = lshr i32 %1371, 3
  br label %1417

1373:                                             ; preds = %1379, %1365
  %1374 = phi ptr [ %1377, %1379 ], [ %1363, %1365 ]
  %1375 = phi ptr [ %1376, %1379 ], [ %1100, %1365 ]
  %1376 = getelementptr i8, ptr %1375, i32 4
  %1377 = getelementptr i8, ptr %1374, i32 4
  %1378 = icmp ult ptr %1377, %1284
  br i1 %1378, label %1379, label %1391

1379:                                             ; preds = %1373
  %1380 = load i32, ptr %1376, align 1
  %1381 = load i32, ptr %1377, align 1
  %1382 = xor i32 %1381, %1380
  %1383 = icmp eq i32 %1382, 0
  br i1 %1383, label %1373, label %1384

1384:                                             ; preds = %1379
  %1385 = tail call i32 @llvm.cttz.i32(i32 %1382, i1 true) #7, !range !8
  %1386 = lshr i32 %1385, 3
  %1387 = getelementptr i8, ptr %1377, i32 %1386
  %1388 = ptrtoint ptr %1387 to i32
  %1389 = ptrtoint ptr %1363 to i32
  %1390 = sub i32 %1388, %1389
  br label %1417

1391:                                             ; preds = %1373, %1362
  %1392 = phi ptr [ %1363, %1362 ], [ %1377, %1373 ]
  %1393 = phi ptr [ %1100, %1362 ], [ %1376, %1373 ]
  %1394 = icmp ult ptr %1392, %1285
  br i1 %1394, label %1395, label %1402

1395:                                             ; preds = %1391
  %1396 = load i16, ptr %1393, align 1
  %1397 = load i16, ptr %1392, align 1
  %1398 = icmp eq i16 %1396, %1397
  br i1 %1398, label %1399, label %1402

1399:                                             ; preds = %1395
  %1400 = getelementptr i8, ptr %1392, i32 2
  %1401 = getelementptr i8, ptr %1393, i32 2
  br label %1402

1402:                                             ; preds = %1399, %1395, %1391
  %1403 = phi ptr [ %1400, %1399 ], [ %1392, %1395 ], [ %1392, %1391 ]
  %1404 = phi ptr [ %1401, %1399 ], [ %1393, %1395 ], [ %1393, %1391 ]
  %1405 = icmp ult ptr %1403, %2
  br i1 %1405, label %1406, label %1412

1406:                                             ; preds = %1402
  %1407 = load i8, ptr %1404, align 1
  %1408 = load i8, ptr %1403, align 1
  %1409 = icmp eq i8 %1407, %1408
  %1410 = zext i1 %1409 to i32
  %1411 = getelementptr i8, ptr %1403, i32 %1410
  br label %1412

1412:                                             ; preds = %1406, %1402
  %1413 = phi ptr [ %1403, %1402 ], [ %1411, %1406 ]
  %1414 = ptrtoint ptr %1413 to i32
  %1415 = ptrtoint ptr %1363 to i32
  %1416 = sub i32 %1414, %1415
  br label %1417

1417:                                             ; preds = %1412, %1384, %1370
  %1418 = phi i32 [ %1416, %1412 ], [ %1372, %1370 ], [ %1390, %1384 ]
  %1419 = add i32 %1418, %1359
  br label %1420

1420:                                             ; preds = %1417, %1358
  %1421 = phi i32 [ %1419, %1417 ], [ %1359, %1358 ]
  %1422 = add i32 %1421, 4
  %1423 = icmp ugt i32 %1422, %1291
  br i1 %1423, label %1424, label %1428

1424:                                             ; preds = %1420
  %1425 = sub i32 %1287, %1290
  store i32 %1425, ptr %3, align 4
  %1426 = getelementptr i8, ptr %1, i32 %1422
  %1427 = icmp eq ptr %1426, %2
  br i1 %1427, label %1625, label %1428

1428:                                             ; preds = %1424, %1420, %1289
  %1429 = phi i32 [ %1422, %1424 ], [ %1291, %1420 ], [ %1291, %1289 ]
  %1430 = add nuw nsw i32 %1292, 1
  %1431 = icmp ult i32 %1430, %1272
  %1432 = icmp eq i32 %1430, %1272
  %1433 = load ptr, ptr %1131, align 4
  br i1 %1432, label %1439, label %1434

1434:                                             ; preds = %1428
  %1435 = add nuw nsw i32 %1430, %1130
  %1436 = getelementptr i32, ptr %1433, i32 %1435
  %1437 = load i32, ptr %1436, align 4
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1631, label %1289

1439:                                             ; preds = %1428
  %1440 = getelementptr i32, ptr %1433, i32 %1273
  %1441 = load i32, ptr %1440, align 4
  %1442 = and i32 %1441, 255
  %1443 = sub i32 %1251, %1272
  %1444 = tail call i32 @llvm.umin.i32(i32 %1443, i32 %1442) #7
  %1445 = icmp eq i32 %1444, 0
  br i1 %1445, label %1629, label %1446

1446:                                             ; preds = %1439
  %1447 = lshr i32 %1441, 8
  %1448 = load ptr, ptr %1277, align 4
  br label %1453

1449:                                             ; preds = %1250
  %1450 = and i32 %1275, 255
  %1451 = tail call i32 @llvm.umin.i32(i32 %1251, i32 %1450) #7
  %1452 = icmp eq i32 %1451, 0
  br i1 %1452, label %1629, label %1453

1453:                                             ; preds = %1449, %1446
  %1454 = phi ptr [ %1278, %1449 ], [ %1448, %1446 ]
  %1455 = phi i32 [ %1451, %1449 ], [ %1444, %1446 ]
  %1456 = phi i1 [ false, %1449 ], [ %1431, %1446 ]
  %1457 = phi i32 [ %1252, %1449 ], [ %1429, %1446 ]
  %1458 = phi i32 [ %1276, %1449 ], [ %1447, %1446 ]
  br label %1467

1459:                                             ; preds = %1467
  %1460 = getelementptr i8, ptr %1, i32 4
  %1461 = ptrtoint ptr %1460 to i32
  %1462 = getelementptr i8, ptr %2, i32 -3
  %1463 = getelementptr i8, ptr %2, i32 -1
  %1464 = add i32 %1103, 2
  %1465 = add i32 %1464, %1259
  %1466 = load i32, ptr %1, align 1
  br label %1475

1467:                                             ; preds = %1467, %1453
  %1468 = phi i32 [ 0, %1453 ], [ %1473, %1467 ]
  %1469 = add nuw nsw i32 %1468, %1458
  %1470 = getelementptr i32, ptr %1454, i32 %1469
  %1471 = load i32, ptr %1470, align 4
  %1472 = getelementptr i8, ptr %1254, i32 %1471
  tail call void @llvm.prefetch.p0(ptr %1472, i32 0, i32 3, i32 1) #7
  %1473 = add nuw nsw i32 %1468, 1
  %1474 = icmp eq i32 %1473, %1455
  br i1 %1474, label %1459, label %1467

1475:                                             ; preds = %1622, %1459
  %1476 = phi ptr [ %1454, %1459 ], [ %1624, %1622 ]
  %1477 = phi i32 [ %1466, %1459 ], [ %1618, %1622 ]
  %1478 = phi i32 [ 0, %1459 ], [ %1620, %1622 ]
  %1479 = phi i32 [ %1458, %1459 ], [ %1623, %1622 ]
  %1480 = phi i32 [ %1457, %1459 ], [ %1619, %1622 ]
  %1481 = getelementptr i32, ptr %1476, i32 %1479
  %1482 = load i32, ptr %1481, align 4
  %1483 = getelementptr i8, ptr %1254, i32 %1482
  %1484 = load i32, ptr %1483, align 1
  %1485 = icmp eq i32 %1484, %1477
  br i1 %1485, label %1486, label %1617

1486:                                             ; preds = %1475
  %1487 = getelementptr i8, ptr %1483, i32 4
  %1488 = ptrtoint ptr %1487 to i32
  %1489 = sub i32 %1256, %1488
  %1490 = getelementptr i8, ptr %1460, i32 %1489
  %1491 = icmp ult ptr %1490, %2
  %1492 = select i1 %1491, ptr %1490, ptr %2
  %1493 = getelementptr i8, ptr %1492, i32 -3
  %1494 = icmp ugt ptr %1493, %1460
  br i1 %1494, label %1495, label %1520

1495:                                             ; preds = %1486
  %1496 = load i32, ptr %1487, align 1
  %1497 = load i32, ptr %1460, align 1
  %1498 = xor i32 %1497, %1496
  %1499 = icmp eq i32 %1498, 0
  br i1 %1499, label %1503, label %1500

1500:                                             ; preds = %1495
  %1501 = tail call i32 @llvm.cttz.i32(i32 %1498, i1 true) #7, !range !8
  %1502 = lshr i32 %1501, 3
  br label %1546

1503:                                             ; preds = %1509, %1495
  %1504 = phi ptr [ %1507, %1509 ], [ %1460, %1495 ]
  %1505 = phi ptr [ %1506, %1509 ], [ %1487, %1495 ]
  %1506 = getelementptr i8, ptr %1505, i32 4
  %1507 = getelementptr i8, ptr %1504, i32 4
  %1508 = icmp ult ptr %1507, %1493
  br i1 %1508, label %1509, label %1520

1509:                                             ; preds = %1503
  %1510 = load i32, ptr %1506, align 1
  %1511 = load i32, ptr %1507, align 1
  %1512 = xor i32 %1511, %1510
  %1513 = icmp eq i32 %1512, 0
  br i1 %1513, label %1503, label %1514

1514:                                             ; preds = %1509
  %1515 = tail call i32 @llvm.cttz.i32(i32 %1512, i1 true) #7, !range !8
  %1516 = lshr i32 %1515, 3
  %1517 = getelementptr i8, ptr %1507, i32 %1516
  %1518 = ptrtoint ptr %1517 to i32
  %1519 = sub i32 %1518, %1461
  br label %1546

1520:                                             ; preds = %1503, %1486
  %1521 = phi ptr [ %1460, %1486 ], [ %1507, %1503 ]
  %1522 = phi ptr [ %1487, %1486 ], [ %1506, %1503 ]
  %1523 = getelementptr i8, ptr %1492, i32 -1
  %1524 = icmp ult ptr %1521, %1523
  br i1 %1524, label %1525, label %1532

1525:                                             ; preds = %1520
  %1526 = load i16, ptr %1522, align 1
  %1527 = load i16, ptr %1521, align 1
  %1528 = icmp eq i16 %1526, %1527
  br i1 %1528, label %1529, label %1532

1529:                                             ; preds = %1525
  %1530 = getelementptr i8, ptr %1521, i32 2
  %1531 = getelementptr i8, ptr %1522, i32 2
  br label %1532

1532:                                             ; preds = %1529, %1525, %1520
  %1533 = phi ptr [ %1530, %1529 ], [ %1521, %1525 ], [ %1521, %1520 ]
  %1534 = phi ptr [ %1531, %1529 ], [ %1522, %1525 ], [ %1522, %1520 ]
  %1535 = icmp ult ptr %1533, %1492
  br i1 %1535, label %1536, label %1542

1536:                                             ; preds = %1532
  %1537 = load i8, ptr %1534, align 1
  %1538 = load i8, ptr %1533, align 1
  %1539 = icmp eq i8 %1537, %1538
  %1540 = zext i1 %1539 to i32
  %1541 = getelementptr i8, ptr %1533, i32 %1540
  br label %1542

1542:                                             ; preds = %1536, %1532
  %1543 = phi ptr [ %1533, %1532 ], [ %1541, %1536 ]
  %1544 = ptrtoint ptr %1543 to i32
  %1545 = sub i32 %1544, %1461
  br label %1546

1546:                                             ; preds = %1542, %1514, %1500
  %1547 = phi i32 [ %1545, %1542 ], [ %1502, %1500 ], [ %1519, %1514 ]
  %1548 = getelementptr i8, ptr %1487, i32 %1547
  %1549 = icmp eq ptr %1548, %1255
  br i1 %1549, label %1550, label %1608

1550:                                             ; preds = %1546
  %1551 = getelementptr i8, ptr %1460, i32 %1547
  %1552 = icmp ugt ptr %1462, %1551
  br i1 %1552, label %1553, label %1579

1553:                                             ; preds = %1550
  %1554 = load i32, ptr %1100, align 1
  %1555 = load i32, ptr %1551, align 1
  %1556 = xor i32 %1555, %1554
  %1557 = icmp eq i32 %1556, 0
  br i1 %1557, label %1561, label %1558

1558:                                             ; preds = %1553
  %1559 = tail call i32 @llvm.cttz.i32(i32 %1556, i1 true) #7, !range !8
  %1560 = lshr i32 %1559, 3
  br label %1605

1561:                                             ; preds = %1567, %1553
  %1562 = phi ptr [ %1565, %1567 ], [ %1551, %1553 ]
  %1563 = phi ptr [ %1564, %1567 ], [ %1100, %1553 ]
  %1564 = getelementptr i8, ptr %1563, i32 4
  %1565 = getelementptr i8, ptr %1562, i32 4
  %1566 = icmp ult ptr %1565, %1462
  br i1 %1566, label %1567, label %1579

1567:                                             ; preds = %1561
  %1568 = load i32, ptr %1564, align 1
  %1569 = load i32, ptr %1565, align 1
  %1570 = xor i32 %1569, %1568
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1561, label %1572

1572:                                             ; preds = %1567
  %1573 = tail call i32 @llvm.cttz.i32(i32 %1570, i1 true) #7, !range !8
  %1574 = lshr i32 %1573, 3
  %1575 = getelementptr i8, ptr %1565, i32 %1574
  %1576 = ptrtoint ptr %1575 to i32
  %1577 = ptrtoint ptr %1551 to i32
  %1578 = sub i32 %1576, %1577
  br label %1605

1579:                                             ; preds = %1561, %1550
  %1580 = phi ptr [ %1551, %1550 ], [ %1565, %1561 ]
  %1581 = phi ptr [ %1100, %1550 ], [ %1564, %1561 ]
  %1582 = icmp ult ptr %1580, %1463
  br i1 %1582, label %1583, label %1590

1583:                                             ; preds = %1579
  %1584 = load i16, ptr %1581, align 1
  %1585 = load i16, ptr %1580, align 1
  %1586 = icmp eq i16 %1584, %1585
  br i1 %1586, label %1587, label %1590

1587:                                             ; preds = %1583
  %1588 = getelementptr i8, ptr %1580, i32 2
  %1589 = getelementptr i8, ptr %1581, i32 2
  br label %1590

1590:                                             ; preds = %1587, %1583, %1579
  %1591 = phi ptr [ %1588, %1587 ], [ %1580, %1583 ], [ %1580, %1579 ]
  %1592 = phi ptr [ %1589, %1587 ], [ %1581, %1583 ], [ %1581, %1579 ]
  %1593 = icmp ult ptr %1591, %2
  br i1 %1593, label %1594, label %1600

1594:                                             ; preds = %1590
  %1595 = load i8, ptr %1592, align 1
  %1596 = load i8, ptr %1591, align 1
  %1597 = icmp eq i8 %1595, %1596
  %1598 = zext i1 %1597 to i32
  %1599 = getelementptr i8, ptr %1591, i32 %1598
  br label %1600

1600:                                             ; preds = %1594, %1590
  %1601 = phi ptr [ %1591, %1590 ], [ %1599, %1594 ]
  %1602 = ptrtoint ptr %1601 to i32
  %1603 = ptrtoint ptr %1551 to i32
  %1604 = sub i32 %1602, %1603
  br label %1605

1605:                                             ; preds = %1600, %1572, %1558
  %1606 = phi i32 [ %1604, %1600 ], [ %1560, %1558 ], [ %1578, %1572 ]
  %1607 = add i32 %1606, %1547
  br label %1608

1608:                                             ; preds = %1605, %1546
  %1609 = phi i32 [ %1607, %1605 ], [ %1547, %1546 ]
  %1610 = add i32 %1609, 4
  %1611 = icmp ugt i32 %1610, %1480
  br i1 %1611, label %1612, label %1617

1612:                                             ; preds = %1608
  %1613 = sub i32 %1465, %1482
  store i32 %1613, ptr %3, align 4
  %1614 = getelementptr i8, ptr %1, i32 %1610
  %1615 = icmp eq ptr %1614, %2
  %1616 = load i32, ptr %1, align 1
  br i1 %1615, label %1625, label %1617

1617:                                             ; preds = %1612, %1608, %1475
  %1618 = phi i32 [ %1616, %1612 ], [ %1477, %1608 ], [ %1477, %1475 ]
  %1619 = phi i32 [ %1610, %1612 ], [ %1480, %1608 ], [ %1480, %1475 ]
  %1620 = add nuw nsw i32 %1478, 1
  %1621 = icmp eq i32 %1620, %1455
  br i1 %1621, label %1625, label %1622

1622:                                             ; preds = %1617
  %1623 = add nuw nsw i32 %1479, 1
  %1624 = load ptr, ptr %1277, align 4
  br label %1475

1625:                                             ; preds = %1617, %1612, %1424
  %1626 = phi i1 [ %1456, %1612 ], [ %1456, %1617 ], [ %1293, %1424 ]
  %1627 = phi i32 [ %1619, %1617 ], [ %1610, %1612 ], [ %1422, %1424 ]
  %1628 = phi i32 [ undef, %1612 ], [ undef, %1617 ], [ %1422, %1424 ]
  br i1 %1626, label %1631, label %1629

1629:                                             ; preds = %1625, %1449, %1439
  %1630 = phi i32 [ %1627, %1625 ], [ %1252, %1449 ], [ %1429, %1439 ]
  br label %1631

1631:                                             ; preds = %1629, %1625, %1434, %1281, %1086, %1082, %891, %738, %543, %539, %348, %195
  %1632 = phi i32 [ %544, %543 ], [ %542, %539 ], [ %1087, %1086 ], [ %1085, %1082 ], [ %1630, %1629 ], [ %1628, %1625 ], [ %166, %195 ], [ %1252, %1281 ], [ %709, %738 ], [ %343, %348 ], [ %1429, %1434 ], [ %886, %891 ]
  ret i32 %1632
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i32(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i32, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #4

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync)
define internal fastcc i32 @ZSTD_BtFindBestMatch_extDict_selectMLS(ptr noundef %0, ptr noundef %1, ptr noundef readnone %2, ptr nocapture noundef %3) unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 4
  %12 = load i32, ptr %11, align 4
  switch i32 %12, label %13 [
    i32 6, label %1367
    i32 5, label %688
    i32 7, label %1367
  ]

13:                                               ; preds = %4
  %14 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %15 = load ptr, ptr %14, align 4
  %16 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %17 = load i32, ptr %16, align 4
  %18 = getelementptr i8, ptr %15, i32 %17
  %19 = icmp ugt ptr %18, %1
  br i1 %19, label %2046, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %22 = load ptr, ptr %21, align 4
  %23 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %24 = load ptr, ptr %23, align 4
  %25 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %26, -1
  %28 = shl nsw i32 -1, %27
  %29 = xor i32 %28, -1
  %30 = ptrtoint ptr %1 to i32
  %31 = ptrtoint ptr %15 to i32
  %32 = sub i32 %30, %31
  %33 = icmp ult i32 %17, %32
  br i1 %33, label %34, label %62

34:                                               ; preds = %20
  %35 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %36 = load i32, ptr %35, align 4
  %37 = sub i32 32, %36
  br label %38

38:                                               ; preds = %38, %34
  %39 = phi i32 [ %17, %34 ], [ %50, %38 ]
  %40 = getelementptr i8, ptr %15, i32 %39
  %41 = load i32, ptr %40, align 1
  %42 = mul i32 %41, -1640531535
  %43 = lshr i32 %42, %37
  %44 = getelementptr i32, ptr %22, i32 %43
  %45 = load i32, ptr %44, align 4
  %46 = and i32 %39, %29
  %47 = shl i32 %46, 1
  %48 = getelementptr i32, ptr %24, i32 %47
  %49 = getelementptr i32, ptr %48, i32 1
  store i32 %39, ptr %44, align 4
  store i32 %45, ptr %48, align 4
  store i32 1, ptr %49, align 4
  %50 = add nuw i32 %39, 1
  %51 = icmp ult i32 %50, %32
  br i1 %51, label %38, label %52

52:                                               ; preds = %38
  %53 = load ptr, ptr %21, align 4
  %54 = load ptr, ptr %14, align 4
  %55 = load ptr, ptr %23, align 4
  %56 = load i32, ptr %25, align 4
  %57 = ptrtoint ptr %54 to i32
  %58 = sub i32 %30, %57
  %59 = add i32 %56, -1
  %60 = shl nsw i32 -1, %59
  %61 = xor i32 %60, -1
  br label %62

62:                                               ; preds = %52, %20
  %63 = phi i32 [ %61, %52 ], [ %29, %20 ]
  %64 = phi i32 [ %58, %52 ], [ %32, %20 ]
  %65 = phi ptr [ %55, %52 ], [ %24, %20 ]
  %66 = phi ptr [ %54, %52 ], [ %15, %20 ]
  %67 = phi ptr [ %53, %52 ], [ %22, %20 ]
  store i32 %32, ptr %16, align 4
  %68 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %69 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %70 = load i32, ptr %69, align 4
  %71 = load i32, ptr %1, align 1
  %72 = mul i32 %71, -1640531535
  %73 = sub i32 32, %70
  %74 = lshr i32 %72, %73
  %75 = getelementptr i32, ptr %67, i32 %74
  %76 = load i32, ptr %68, align 4
  %77 = shl nuw i32 1, %76
  %78 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %79 = load i32, ptr %78, align 4
  %80 = sub i32 %64, %79
  %81 = icmp ugt i32 %80, %77
  %82 = sub i32 %64, %77
  %83 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %84 = load i32, ptr %83, align 4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i1 %81, i1 false
  %87 = select i1 %86, i32 %82, i32 %79
  %88 = tail call i32 @llvm.usub.sat.i32(i32 %64, i32 %63) #7
  %89 = tail call i32 @llvm.umax.i32(i32 %88, i32 %87) #7
  %90 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %91 = load i32, ptr %90, align 4
  %92 = shl nuw i32 1, %91
  %93 = load i32, ptr %75, align 4
  %94 = icmp ugt i32 %93, %89
  br i1 %94, label %95, label %402

95:                                               ; preds = %107, %62
  %96 = phi i32 [ %109, %107 ], [ %93, %62 ]
  %97 = phi i32 [ %96, %107 ], [ 0, %62 ]
  %98 = phi i32 [ %108, %107 ], [ %92, %62 ]
  %99 = and i32 %96, %63
  %100 = shl i32 %99, 1
  %101 = getelementptr i32, ptr %65, i32 %100
  %102 = getelementptr i32, ptr %101, i32 1
  %103 = load i32, ptr %102, align 4
  %104 = icmp eq i32 %103, 1
  %105 = icmp ugt i32 %98, 1
  %106 = select i1 %104, i1 %105, i1 false
  br i1 %106, label %107, label %111

107:                                              ; preds = %95
  store i32 %97, ptr %102, align 4
  %108 = add i32 %98, -1
  %109 = load i32, ptr %101, align 4
  %110 = icmp ugt i32 %109, %89
  br i1 %110, label %95, label %115

111:                                              ; preds = %95
  br i1 %104, label %112, label %113

112:                                              ; preds = %111
  store i32 0, ptr %102, align 4
  store i32 0, ptr %101, align 4
  br label %113

113:                                              ; preds = %112, %111
  %114 = icmp eq i32 %97, 0
  br i1 %114, label %402, label %115

115:                                              ; preds = %113, %107
  %116 = phi i32 [ %97, %113 ], [ %96, %107 ]
  %117 = phi i32 [ %98, %113 ], [ %108, %107 ]
  %118 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %119 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %120 = getelementptr i32, ptr %65, i32 1
  br label %121

121:                                              ; preds = %397, %115
  %122 = phi i32 [ %116, %115 ], [ %127, %397 ]
  %123 = phi i32 [ %117, %115 ], [ %400, %397 ]
  %124 = and i32 %122, %63
  %125 = shl i32 %124, 1
  %126 = getelementptr i32, ptr %120, i32 %125
  %127 = load i32, ptr %126, align 4
  %128 = load ptr, ptr %23, align 4
  %129 = load i32, ptr %25, align 4
  %130 = add i32 %129, -1
  %131 = shl nsw i32 -1, %130
  %132 = xor i32 %131, -1
  %133 = load ptr, ptr %14, align 4
  %134 = load ptr, ptr %118, align 4
  %135 = load i32, ptr %119, align 4
  %136 = icmp ugt i32 %135, %122
  %137 = select i1 %136, ptr %134, ptr %133
  %138 = getelementptr i8, ptr %137, i32 %122
  %139 = getelementptr i8, ptr %134, i32 %135
  %140 = select i1 %136, ptr %139, ptr %2
  %141 = getelementptr i8, ptr %133, i32 %135
  %142 = and i32 %122, %132
  %143 = shl i32 %142, 1
  %144 = getelementptr i32, ptr %128, i32 %143
  %145 = getelementptr i32, ptr %144, i32 1
  %146 = load i32, ptr %144, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9)
  store i32 0, ptr %9, align 4
  %147 = load i32, ptr %78, align 4
  %148 = load i32, ptr %68, align 4
  %149 = shl nuw i32 1, %148
  %150 = sub i32 %122, %147
  %151 = icmp ugt i32 %150, %149
  %152 = sub i32 %122, %149
  %153 = select i1 %151, i32 %152, i32 %147
  %154 = icmp ne i32 %123, 0
  %155 = icmp ugt i32 %146, %153
  %156 = select i1 %154, i1 %155, i1 false
  br i1 %156, label %157, label %397

157:                                              ; preds = %121
  %158 = ptrtoint ptr %139 to i32
  %159 = getelementptr i8, ptr %140, i32 -3
  %160 = getelementptr i8, ptr %140, i32 -1
  br label %161

161:                                              ; preds = %386, %157
  %162 = phi i32 [ %123, %157 ], [ %393, %386 ]
  %163 = phi i32 [ %146, %157 ], [ %392, %386 ]
  %164 = phi ptr [ %145, %157 ], [ %390, %386 ]
  %165 = phi ptr [ %144, %157 ], [ %389, %386 ]
  %166 = phi i32 [ 0, %157 ], [ %388, %386 ]
  %167 = phi i32 [ 0, %157 ], [ %387, %386 ]
  %168 = and i32 %163, %132
  %169 = shl i32 %168, 1
  %170 = getelementptr i32, ptr %128, i32 %169
  %171 = tail call i32 @llvm.umin.i32(i32 %167, i32 %166) #7
  %172 = add i32 %171, %163
  %173 = icmp ult i32 %172, %135
  %174 = xor i1 %173, true
  %175 = select i1 %174, i1 true, i1 %136
  br i1 %175, label %176, label %237

176:                                              ; preds = %161
  %177 = select i1 %173, ptr %134, ptr %133
  %178 = getelementptr i8, ptr %177, i32 %163
  %179 = getelementptr i8, ptr %138, i32 %171
  %180 = getelementptr i8, ptr %178, i32 %171
  %181 = icmp ugt ptr %159, %179
  br i1 %181, label %182, label %208

182:                                              ; preds = %176
  %183 = load i32, ptr %180, align 1
  %184 = load i32, ptr %179, align 1
  %185 = xor i32 %184, %183
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = tail call i32 @llvm.cttz.i32(i32 %185, i1 true) #7, !range !8
  %189 = lshr i32 %188, 3
  br label %234

190:                                              ; preds = %196, %182
  %191 = phi ptr [ %194, %196 ], [ %179, %182 ]
  %192 = phi ptr [ %193, %196 ], [ %180, %182 ]
  %193 = getelementptr i8, ptr %192, i32 4
  %194 = getelementptr i8, ptr %191, i32 4
  %195 = icmp ult ptr %194, %159
  br i1 %195, label %196, label %208

196:                                              ; preds = %190
  %197 = load i32, ptr %193, align 1
  %198 = load i32, ptr %194, align 1
  %199 = xor i32 %198, %197
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %190, label %201

201:                                              ; preds = %196
  %202 = tail call i32 @llvm.cttz.i32(i32 %199, i1 true) #7, !range !8
  %203 = lshr i32 %202, 3
  %204 = getelementptr i8, ptr %194, i32 %203
  %205 = ptrtoint ptr %204 to i32
  %206 = ptrtoint ptr %179 to i32
  %207 = sub i32 %205, %206
  br label %234

208:                                              ; preds = %190, %176
  %209 = phi ptr [ %179, %176 ], [ %194, %190 ]
  %210 = phi ptr [ %180, %176 ], [ %193, %190 ]
  %211 = icmp ult ptr %209, %160
  br i1 %211, label %212, label %219

212:                                              ; preds = %208
  %213 = load i16, ptr %210, align 1
  %214 = load i16, ptr %209, align 1
  %215 = icmp eq i16 %213, %214
  br i1 %215, label %216, label %219

216:                                              ; preds = %212
  %217 = getelementptr i8, ptr %209, i32 2
  %218 = getelementptr i8, ptr %210, i32 2
  br label %219

219:                                              ; preds = %216, %212, %208
  %220 = phi ptr [ %217, %216 ], [ %209, %212 ], [ %209, %208 ]
  %221 = phi ptr [ %218, %216 ], [ %210, %212 ], [ %210, %208 ]
  %222 = icmp ult ptr %220, %140
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = load i8, ptr %221, align 1
  %225 = load i8, ptr %220, align 1
  %226 = icmp eq i8 %224, %225
  %227 = zext i1 %226 to i32
  %228 = getelementptr i8, ptr %220, i32 %227
  br label %229

229:                                              ; preds = %223, %219
  %230 = phi ptr [ %220, %219 ], [ %228, %223 ]
  %231 = ptrtoint ptr %230 to i32
  %232 = ptrtoint ptr %179 to i32
  %233 = sub i32 %231, %232
  br label %234

234:                                              ; preds = %229, %201, %187
  %235 = phi i32 [ %233, %229 ], [ %189, %187 ], [ %207, %201 ]
  %236 = add i32 %235, %171
  br label %370

237:                                              ; preds = %161
  %238 = getelementptr i8, ptr %134, i32 %163
  %239 = getelementptr i8, ptr %138, i32 %171
  %240 = getelementptr i8, ptr %238, i32 %171
  %241 = ptrtoint ptr %240 to i32
  %242 = sub i32 %158, %241
  %243 = getelementptr i8, ptr %239, i32 %242
  %244 = icmp ult ptr %243, %140
  %245 = select i1 %244, ptr %243, ptr %140
  %246 = getelementptr i8, ptr %245, i32 -3
  %247 = icmp ugt ptr %246, %239
  br i1 %247, label %248, label %274

248:                                              ; preds = %237
  %249 = load i32, ptr %240, align 1
  %250 = load i32, ptr %239, align 1
  %251 = xor i32 %250, %249
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %256, label %253

253:                                              ; preds = %248
  %254 = tail call i32 @llvm.cttz.i32(i32 %251, i1 true) #7, !range !8
  %255 = lshr i32 %254, 3
  br label %301

256:                                              ; preds = %262, %248
  %257 = phi ptr [ %260, %262 ], [ %239, %248 ]
  %258 = phi ptr [ %259, %262 ], [ %240, %248 ]
  %259 = getelementptr i8, ptr %258, i32 4
  %260 = getelementptr i8, ptr %257, i32 4
  %261 = icmp ult ptr %260, %246
  br i1 %261, label %262, label %274

262:                                              ; preds = %256
  %263 = load i32, ptr %259, align 1
  %264 = load i32, ptr %260, align 1
  %265 = xor i32 %264, %263
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %256, label %267

267:                                              ; preds = %262
  %268 = tail call i32 @llvm.cttz.i32(i32 %265, i1 true) #7, !range !8
  %269 = lshr i32 %268, 3
  %270 = getelementptr i8, ptr %260, i32 %269
  %271 = ptrtoint ptr %270 to i32
  %272 = ptrtoint ptr %239 to i32
  %273 = sub i32 %271, %272
  br label %301

274:                                              ; preds = %256, %237
  %275 = phi ptr [ %239, %237 ], [ %260, %256 ]
  %276 = phi ptr [ %240, %237 ], [ %259, %256 ]
  %277 = getelementptr i8, ptr %245, i32 -1
  %278 = icmp ult ptr %275, %277
  br i1 %278, label %279, label %286

279:                                              ; preds = %274
  %280 = load i16, ptr %276, align 1
  %281 = load i16, ptr %275, align 1
  %282 = icmp eq i16 %280, %281
  br i1 %282, label %283, label %286

283:                                              ; preds = %279
  %284 = getelementptr i8, ptr %275, i32 2
  %285 = getelementptr i8, ptr %276, i32 2
  br label %286

286:                                              ; preds = %283, %279, %274
  %287 = phi ptr [ %284, %283 ], [ %275, %279 ], [ %275, %274 ]
  %288 = phi ptr [ %285, %283 ], [ %276, %279 ], [ %276, %274 ]
  %289 = icmp ult ptr %287, %245
  br i1 %289, label %290, label %296

290:                                              ; preds = %286
  %291 = load i8, ptr %288, align 1
  %292 = load i8, ptr %287, align 1
  %293 = icmp eq i8 %291, %292
  %294 = zext i1 %293 to i32
  %295 = getelementptr i8, ptr %287, i32 %294
  br label %296

296:                                              ; preds = %290, %286
  %297 = phi ptr [ %287, %286 ], [ %295, %290 ]
  %298 = ptrtoint ptr %297 to i32
  %299 = ptrtoint ptr %239 to i32
  %300 = sub i32 %298, %299
  br label %301

301:                                              ; preds = %296, %267, %253
  %302 = phi i32 [ %300, %296 ], [ %255, %253 ], [ %273, %267 ]
  %303 = getelementptr i8, ptr %240, i32 %302
  %304 = icmp eq ptr %303, %139
  br i1 %304, label %305, label %363

305:                                              ; preds = %301
  %306 = getelementptr i8, ptr %239, i32 %302
  %307 = icmp ugt ptr %159, %306
  br i1 %307, label %308, label %334

308:                                              ; preds = %305
  %309 = load i32, ptr %141, align 1
  %310 = load i32, ptr %306, align 1
  %311 = xor i32 %310, %309
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %308
  %314 = tail call i32 @llvm.cttz.i32(i32 %311, i1 true) #7, !range !8
  %315 = lshr i32 %314, 3
  br label %360

316:                                              ; preds = %322, %308
  %317 = phi ptr [ %320, %322 ], [ %306, %308 ]
  %318 = phi ptr [ %319, %322 ], [ %141, %308 ]
  %319 = getelementptr i8, ptr %318, i32 4
  %320 = getelementptr i8, ptr %317, i32 4
  %321 = icmp ult ptr %320, %159
  br i1 %321, label %322, label %334

322:                                              ; preds = %316
  %323 = load i32, ptr %319, align 1
  %324 = load i32, ptr %320, align 1
  %325 = xor i32 %324, %323
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %316, label %327

327:                                              ; preds = %322
  %328 = tail call i32 @llvm.cttz.i32(i32 %325, i1 true) #7, !range !8
  %329 = lshr i32 %328, 3
  %330 = getelementptr i8, ptr %320, i32 %329
  %331 = ptrtoint ptr %330 to i32
  %332 = ptrtoint ptr %306 to i32
  %333 = sub i32 %331, %332
  br label %360

334:                                              ; preds = %316, %305
  %335 = phi ptr [ %306, %305 ], [ %320, %316 ]
  %336 = phi ptr [ %141, %305 ], [ %319, %316 ]
  %337 = icmp ult ptr %335, %160
  br i1 %337, label %338, label %345

338:                                              ; preds = %334
  %339 = load i16, ptr %336, align 1
  %340 = load i16, ptr %335, align 1
  %341 = icmp eq i16 %339, %340
  br i1 %341, label %342, label %345

342:                                              ; preds = %338
  %343 = getelementptr i8, ptr %335, i32 2
  %344 = getelementptr i8, ptr %336, i32 2
  br label %345

345:                                              ; preds = %342, %338, %334
  %346 = phi ptr [ %343, %342 ], [ %335, %338 ], [ %335, %334 ]
  %347 = phi ptr [ %344, %342 ], [ %336, %338 ], [ %336, %334 ]
  %348 = icmp ult ptr %346, %140
  br i1 %348, label %349, label %355

349:                                              ; preds = %345
  %350 = load i8, ptr %347, align 1
  %351 = load i8, ptr %346, align 1
  %352 = icmp eq i8 %350, %351
  %353 = zext i1 %352 to i32
  %354 = getelementptr i8, ptr %346, i32 %353
  br label %355

355:                                              ; preds = %349, %345
  %356 = phi ptr [ %346, %345 ], [ %354, %349 ]
  %357 = ptrtoint ptr %356 to i32
  %358 = ptrtoint ptr %306 to i32
  %359 = sub i32 %357, %358
  br label %360

360:                                              ; preds = %355, %327, %313
  %361 = phi i32 [ %359, %355 ], [ %315, %313 ], [ %333, %327 ]
  %362 = add i32 %361, %302
  br label %363

363:                                              ; preds = %360, %301
  %364 = phi i32 [ %362, %360 ], [ %302, %301 ]
  %365 = add i32 %364, %171
  %366 = add i32 %365, %163
  %367 = icmp ult i32 %366, %135
  %368 = getelementptr i8, ptr %133, i32 %163
  %369 = select i1 %367, ptr %238, ptr %368
  br label %370

370:                                              ; preds = %363, %234
  %371 = phi ptr [ %178, %234 ], [ %369, %363 ]
  %372 = phi i32 [ %236, %234 ], [ %365, %363 ]
  %373 = getelementptr i8, ptr %138, i32 %372
  %374 = icmp eq ptr %373, %140
  br i1 %374, label %397, label %375

375:                                              ; preds = %370
  %376 = getelementptr i8, ptr %371, i32 %372
  %377 = load i8, ptr %376, align 1
  %378 = load i8, ptr %373, align 1
  %379 = icmp ult i8 %377, %378
  br i1 %379, label %380, label %384

380:                                              ; preds = %375
  store i32 %163, ptr %165, align 4
  %381 = icmp ugt i32 %163, %89
  br i1 %381, label %382, label %397

382:                                              ; preds = %380
  %383 = getelementptr i32, ptr %170, i32 1
  br label %386

384:                                              ; preds = %375
  store i32 %163, ptr %164, align 4
  %385 = icmp ugt i32 %163, %89
  br i1 %385, label %386, label %397

386:                                              ; preds = %384, %382
  %387 = phi i32 [ %372, %382 ], [ %167, %384 ]
  %388 = phi i32 [ %166, %382 ], [ %372, %384 ]
  %389 = phi ptr [ %383, %382 ], [ %165, %384 ]
  %390 = phi ptr [ %164, %382 ], [ %170, %384 ]
  %391 = phi ptr [ %383, %382 ], [ %170, %384 ]
  %392 = load i32, ptr %391, align 4
  %393 = add i32 %162, -1
  %394 = icmp ne i32 %393, 0
  %395 = icmp ugt i32 %392, %153
  %396 = select i1 %394, i1 %395, i1 false
  br i1 %396, label %161, label %397

397:                                              ; preds = %386, %384, %380, %370, %121
  %398 = phi ptr [ %144, %121 ], [ %389, %386 ], [ %165, %370 ], [ %9, %380 ], [ %165, %384 ]
  %399 = phi ptr [ %145, %121 ], [ %390, %386 ], [ %164, %370 ], [ %164, %380 ], [ %9, %384 ]
  store i32 0, ptr %399, align 4
  store i32 0, ptr %398, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9)
  %400 = add i32 %123, 1
  %401 = icmp eq i32 %127, 0
  br i1 %401, label %402, label %121

402:                                              ; preds = %397, %113, %62
  %403 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %404 = load ptr, ptr %403, align 4
  %405 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %406 = load i32, ptr %405, align 4
  %407 = getelementptr i8, ptr %404, i32 %406
  %408 = getelementptr i8, ptr %66, i32 %406
  %409 = and i32 %64, %63
  %410 = shl i32 %409, 1
  %411 = getelementptr i32, ptr %65, i32 %410
  %412 = getelementptr i32, ptr %411, i32 1
  %413 = add i32 %64, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10)
  store i32 0, ptr %10, align 4
  %414 = load i32, ptr %75, align 4
  store i32 %64, ptr %75, align 4
  %415 = icmp ugt i32 %414, %87
  br i1 %415, label %416, label %682

416:                                              ; preds = %402
  %417 = getelementptr i8, ptr %2, i32 -3
  %418 = getelementptr i8, ptr %2, i32 -1
  %419 = ptrtoint ptr %407 to i32
  %420 = add i32 %64, 1
  %421 = add i32 %64, 2
  br label %422

422:                                              ; preds = %671, %416
  %423 = phi i32 [ 0, %416 ], [ %658, %671 ]
  %424 = phi i32 [ %413, %416 ], [ %657, %671 ]
  %425 = phi ptr [ %412, %416 ], [ %676, %671 ]
  %426 = phi ptr [ %411, %416 ], [ %675, %671 ]
  %427 = phi i32 [ 0, %416 ], [ %674, %671 ]
  %428 = phi i32 [ 0, %416 ], [ %673, %671 ]
  %429 = phi i32 [ %414, %416 ], [ %677, %671 ]
  %430 = phi i32 [ %92, %416 ], [ %678, %671 ]
  %431 = and i32 %429, %63
  %432 = shl i32 %431, 1
  %433 = getelementptr i32, ptr %65, i32 %432
  %434 = tail call i32 @llvm.umin.i32(i32 %428, i32 %427) #7
  %435 = add i32 %434, %429
  %436 = icmp ult i32 %435, %406
  br i1 %436, label %497, label %437

437:                                              ; preds = %422
  %438 = getelementptr i8, ptr %66, i32 %429
  %439 = getelementptr i8, ptr %1, i32 %434
  %440 = getelementptr i8, ptr %438, i32 %434
  %441 = icmp ugt ptr %417, %439
  br i1 %441, label %442, label %468

442:                                              ; preds = %437
  %443 = load i32, ptr %440, align 1
  %444 = load i32, ptr %439, align 1
  %445 = xor i32 %444, %443
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %450, label %447

447:                                              ; preds = %442
  %448 = tail call i32 @llvm.cttz.i32(i32 %445, i1 true) #7, !range !8
  %449 = lshr i32 %448, 3
  br label %494

450:                                              ; preds = %456, %442
  %451 = phi ptr [ %454, %456 ], [ %439, %442 ]
  %452 = phi ptr [ %453, %456 ], [ %440, %442 ]
  %453 = getelementptr i8, ptr %452, i32 4
  %454 = getelementptr i8, ptr %451, i32 4
  %455 = icmp ult ptr %454, %417
  br i1 %455, label %456, label %468

456:                                              ; preds = %450
  %457 = load i32, ptr %453, align 1
  %458 = load i32, ptr %454, align 1
  %459 = xor i32 %458, %457
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %450, label %461

461:                                              ; preds = %456
  %462 = tail call i32 @llvm.cttz.i32(i32 %459, i1 true) #7, !range !8
  %463 = lshr i32 %462, 3
  %464 = getelementptr i8, ptr %454, i32 %463
  %465 = ptrtoint ptr %464 to i32
  %466 = ptrtoint ptr %439 to i32
  %467 = sub i32 %465, %466
  br label %494

468:                                              ; preds = %450, %437
  %469 = phi ptr [ %439, %437 ], [ %454, %450 ]
  %470 = phi ptr [ %440, %437 ], [ %453, %450 ]
  %471 = icmp ult ptr %469, %418
  br i1 %471, label %472, label %479

472:                                              ; preds = %468
  %473 = load i16, ptr %470, align 1
  %474 = load i16, ptr %469, align 1
  %475 = icmp eq i16 %473, %474
  br i1 %475, label %476, label %479

476:                                              ; preds = %472
  %477 = getelementptr i8, ptr %469, i32 2
  %478 = getelementptr i8, ptr %470, i32 2
  br label %479

479:                                              ; preds = %476, %472, %468
  %480 = phi ptr [ %477, %476 ], [ %469, %472 ], [ %469, %468 ]
  %481 = phi ptr [ %478, %476 ], [ %470, %472 ], [ %470, %468 ]
  %482 = icmp ult ptr %480, %2
  br i1 %482, label %483, label %489

483:                                              ; preds = %479
  %484 = load i8, ptr %481, align 1
  %485 = load i8, ptr %480, align 1
  %486 = icmp eq i8 %484, %485
  %487 = zext i1 %486 to i32
  %488 = getelementptr i8, ptr %480, i32 %487
  br label %489

489:                                              ; preds = %483, %479
  %490 = phi ptr [ %480, %479 ], [ %488, %483 ]
  %491 = ptrtoint ptr %490 to i32
  %492 = ptrtoint ptr %439 to i32
  %493 = sub i32 %491, %492
  br label %494

494:                                              ; preds = %489, %461, %447
  %495 = phi i32 [ %493, %489 ], [ %449, %447 ], [ %467, %461 ]
  %496 = add i32 %495, %434
  br label %629

497:                                              ; preds = %422
  %498 = getelementptr i8, ptr %404, i32 %429
  %499 = getelementptr i8, ptr %1, i32 %434
  %500 = getelementptr i8, ptr %498, i32 %434
  %501 = ptrtoint ptr %500 to i32
  %502 = sub i32 %419, %501
  %503 = getelementptr i8, ptr %499, i32 %502
  %504 = icmp ult ptr %503, %2
  %505 = select i1 %504, ptr %503, ptr %2
  %506 = getelementptr i8, ptr %505, i32 -3
  %507 = icmp ugt ptr %506, %499
  br i1 %507, label %508, label %534

508:                                              ; preds = %497
  %509 = load i32, ptr %500, align 1
  %510 = load i32, ptr %499, align 1
  %511 = xor i32 %510, %509
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %516, label %513

513:                                              ; preds = %508
  %514 = tail call i32 @llvm.cttz.i32(i32 %511, i1 true) #7, !range !8
  %515 = lshr i32 %514, 3
  br label %561

516:                                              ; preds = %522, %508
  %517 = phi ptr [ %520, %522 ], [ %499, %508 ]
  %518 = phi ptr [ %519, %522 ], [ %500, %508 ]
  %519 = getelementptr i8, ptr %518, i32 4
  %520 = getelementptr i8, ptr %517, i32 4
  %521 = icmp ult ptr %520, %506
  br i1 %521, label %522, label %534

522:                                              ; preds = %516
  %523 = load i32, ptr %519, align 1
  %524 = load i32, ptr %520, align 1
  %525 = xor i32 %524, %523
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %516, label %527

527:                                              ; preds = %522
  %528 = tail call i32 @llvm.cttz.i32(i32 %525, i1 true) #7, !range !8
  %529 = lshr i32 %528, 3
  %530 = getelementptr i8, ptr %520, i32 %529
  %531 = ptrtoint ptr %530 to i32
  %532 = ptrtoint ptr %499 to i32
  %533 = sub i32 %531, %532
  br label %561

534:                                              ; preds = %516, %497
  %535 = phi ptr [ %499, %497 ], [ %520, %516 ]
  %536 = phi ptr [ %500, %497 ], [ %519, %516 ]
  %537 = getelementptr i8, ptr %505, i32 -1
  %538 = icmp ult ptr %535, %537
  br i1 %538, label %539, label %546

539:                                              ; preds = %534
  %540 = load i16, ptr %536, align 1
  %541 = load i16, ptr %535, align 1
  %542 = icmp eq i16 %540, %541
  br i1 %542, label %543, label %546

543:                                              ; preds = %539
  %544 = getelementptr i8, ptr %535, i32 2
  %545 = getelementptr i8, ptr %536, i32 2
  br label %546

546:                                              ; preds = %543, %539, %534
  %547 = phi ptr [ %544, %543 ], [ %535, %539 ], [ %535, %534 ]
  %548 = phi ptr [ %545, %543 ], [ %536, %539 ], [ %536, %534 ]
  %549 = icmp ult ptr %547, %505
  br i1 %549, label %550, label %556

550:                                              ; preds = %546
  %551 = load i8, ptr %548, align 1
  %552 = load i8, ptr %547, align 1
  %553 = icmp eq i8 %551, %552
  %554 = zext i1 %553 to i32
  %555 = getelementptr i8, ptr %547, i32 %554
  br label %556

556:                                              ; preds = %550, %546
  %557 = phi ptr [ %547, %546 ], [ %555, %550 ]
  %558 = ptrtoint ptr %557 to i32
  %559 = ptrtoint ptr %499 to i32
  %560 = sub i32 %558, %559
  br label %561

561:                                              ; preds = %556, %527, %513
  %562 = phi i32 [ %560, %556 ], [ %515, %513 ], [ %533, %527 ]
  %563 = getelementptr i8, ptr %500, i32 %562
  %564 = icmp eq ptr %563, %407
  br i1 %564, label %565, label %623

565:                                              ; preds = %561
  %566 = getelementptr i8, ptr %499, i32 %562
  %567 = icmp ugt ptr %417, %566
  br i1 %567, label %568, label %594

568:                                              ; preds = %565
  %569 = load i32, ptr %408, align 1
  %570 = load i32, ptr %566, align 1
  %571 = xor i32 %570, %569
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %576, label %573

573:                                              ; preds = %568
  %574 = tail call i32 @llvm.cttz.i32(i32 %571, i1 true) #7, !range !8
  %575 = lshr i32 %574, 3
  br label %620

576:                                              ; preds = %582, %568
  %577 = phi ptr [ %580, %582 ], [ %566, %568 ]
  %578 = phi ptr [ %579, %582 ], [ %408, %568 ]
  %579 = getelementptr i8, ptr %578, i32 4
  %580 = getelementptr i8, ptr %577, i32 4
  %581 = icmp ult ptr %580, %417
  br i1 %581, label %582, label %594

582:                                              ; preds = %576
  %583 = load i32, ptr %579, align 1
  %584 = load i32, ptr %580, align 1
  %585 = xor i32 %584, %583
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %576, label %587

587:                                              ; preds = %582
  %588 = tail call i32 @llvm.cttz.i32(i32 %585, i1 true) #7, !range !8
  %589 = lshr i32 %588, 3
  %590 = getelementptr i8, ptr %580, i32 %589
  %591 = ptrtoint ptr %590 to i32
  %592 = ptrtoint ptr %566 to i32
  %593 = sub i32 %591, %592
  br label %620

594:                                              ; preds = %576, %565
  %595 = phi ptr [ %566, %565 ], [ %580, %576 ]
  %596 = phi ptr [ %408, %565 ], [ %579, %576 ]
  %597 = icmp ult ptr %595, %418
  br i1 %597, label %598, label %605

598:                                              ; preds = %594
  %599 = load i16, ptr %596, align 1
  %600 = load i16, ptr %595, align 1
  %601 = icmp eq i16 %599, %600
  br i1 %601, label %602, label %605

602:                                              ; preds = %598
  %603 = getelementptr i8, ptr %595, i32 2
  %604 = getelementptr i8, ptr %596, i32 2
  br label %605

605:                                              ; preds = %602, %598, %594
  %606 = phi ptr [ %603, %602 ], [ %595, %598 ], [ %595, %594 ]
  %607 = phi ptr [ %604, %602 ], [ %596, %598 ], [ %596, %594 ]
  %608 = icmp ult ptr %606, %2
  br i1 %608, label %609, label %615

609:                                              ; preds = %605
  %610 = load i8, ptr %607, align 1
  %611 = load i8, ptr %606, align 1
  %612 = icmp eq i8 %610, %611
  %613 = zext i1 %612 to i32
  %614 = getelementptr i8, ptr %606, i32 %613
  br label %615

615:                                              ; preds = %609, %605
  %616 = phi ptr [ %606, %605 ], [ %614, %609 ]
  %617 = ptrtoint ptr %616 to i32
  %618 = ptrtoint ptr %566 to i32
  %619 = sub i32 %617, %618
  br label %620

620:                                              ; preds = %615, %587, %573
  %621 = phi i32 [ %619, %615 ], [ %575, %573 ], [ %593, %587 ]
  %622 = add i32 %621, %562
  br label %623

623:                                              ; preds = %620, %561
  %624 = phi i32 [ %622, %620 ], [ %562, %561 ]
  %625 = add i32 %624, %434
  %626 = add i32 %625, %429
  %627 = icmp ult i32 %626, %406
  %628 = select i1 %627, ptr %404, ptr %66
  br label %629

629:                                              ; preds = %623, %494
  %630 = phi i32 [ %496, %494 ], [ %625, %623 ]
  %631 = phi ptr [ %66, %494 ], [ %628, %623 ]
  %632 = icmp ugt i32 %630, %423
  br i1 %632, label %633, label %656

633:                                              ; preds = %629
  %634 = sub i32 %424, %429
  %635 = icmp ugt i32 %630, %634
  %636 = add i32 %630, %429
  %637 = select i1 %635, i32 %636, i32 %424
  %638 = sub i32 %630, %423
  %639 = shl i32 %638, 2
  %640 = sub i32 %420, %429
  %641 = tail call i32 @llvm.ctlz.i32(i32 %640, i1 false) #7, !range !8
  %642 = xor i32 %641, 31
  %643 = load i32, ptr %3, align 4
  %644 = add i32 %643, 1
  %645 = tail call i32 @llvm.ctlz.i32(i32 %644, i1 false) #7, !range !8
  %646 = xor i32 %645, -32
  %647 = add nuw nsw i32 %642, 1
  %648 = add nsw i32 %647, %646
  %649 = icmp sgt i32 %639, %648
  br i1 %649, label %650, label %652

650:                                              ; preds = %633
  %651 = sub i32 %421, %429
  store i32 %651, ptr %3, align 4
  br label %652

652:                                              ; preds = %650, %633
  %653 = phi i32 [ %630, %650 ], [ %423, %633 ]
  %654 = getelementptr i8, ptr %1, i32 %630
  %655 = icmp eq ptr %654, %2
  br i1 %655, label %682, label %656

656:                                              ; preds = %652, %629
  %657 = phi i32 [ %637, %652 ], [ %424, %629 ]
  %658 = phi i32 [ %653, %652 ], [ %423, %629 ]
  %659 = getelementptr i8, ptr %631, i32 %429
  %660 = getelementptr i8, ptr %659, i32 %630
  %661 = load i8, ptr %660, align 1
  %662 = getelementptr i8, ptr %1, i32 %630
  %663 = load i8, ptr %662, align 1
  %664 = icmp ult i8 %661, %663
  br i1 %664, label %665, label %669

665:                                              ; preds = %656
  store i32 %429, ptr %426, align 4
  %666 = icmp ugt i32 %429, %88
  br i1 %666, label %667, label %682

667:                                              ; preds = %665
  %668 = getelementptr i32, ptr %433, i32 1
  br label %671

669:                                              ; preds = %656
  store i32 %429, ptr %425, align 4
  %670 = icmp ugt i32 %429, %88
  br i1 %670, label %671, label %682

671:                                              ; preds = %669, %667
  %672 = phi ptr [ %668, %667 ], [ %433, %669 ]
  %673 = phi i32 [ %630, %667 ], [ %428, %669 ]
  %674 = phi i32 [ %427, %667 ], [ %630, %669 ]
  %675 = phi ptr [ %668, %667 ], [ %426, %669 ]
  %676 = phi ptr [ %425, %667 ], [ %433, %669 ]
  %677 = load i32, ptr %672, align 4
  %678 = add i32 %430, -1
  %679 = icmp ne i32 %678, 0
  %680 = icmp ugt i32 %677, %87
  %681 = select i1 %679, i1 %680, i1 false
  br i1 %681, label %422, label %682

682:                                              ; preds = %671, %669, %665, %652, %402
  %683 = phi ptr [ %411, %402 ], [ %426, %652 ], [ %675, %671 ], [ %10, %665 ], [ %426, %669 ]
  %684 = phi ptr [ %412, %402 ], [ %425, %652 ], [ %676, %671 ], [ %425, %665 ], [ %10, %669 ]
  %685 = phi i32 [ %413, %402 ], [ %637, %652 ], [ %657, %671 ], [ %657, %665 ], [ %657, %669 ]
  %686 = phi i32 [ 0, %402 ], [ %653, %652 ], [ %658, %671 ], [ %658, %665 ], [ %658, %669 ]
  store i32 0, ptr %684, align 4
  store i32 0, ptr %683, align 4
  %687 = add i32 %685, -8
  store i32 %687, ptr %16, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10)
  br label %2046

688:                                              ; preds = %4
  %689 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %690 = load ptr, ptr %689, align 4
  %691 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %692 = load i32, ptr %691, align 4
  %693 = getelementptr i8, ptr %690, i32 %692
  %694 = icmp ugt ptr %693, %1
  br i1 %694, label %2046, label %695

695:                                              ; preds = %688
  %696 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %697 = load ptr, ptr %696, align 4
  %698 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %699 = load ptr, ptr %698, align 4
  %700 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %701 = load i32, ptr %700, align 4
  %702 = add i32 %701, -1
  %703 = shl nsw i32 -1, %702
  %704 = xor i32 %703, -1
  %705 = ptrtoint ptr %1 to i32
  %706 = ptrtoint ptr %690 to i32
  %707 = sub i32 %705, %706
  %708 = icmp ult i32 %692, %707
  br i1 %708, label %709, label %739

709:                                              ; preds = %695
  %710 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %711 = load i32, ptr %710, align 4
  %712 = sub i32 64, %711
  %713 = zext i32 %712 to i64
  br label %714

714:                                              ; preds = %714, %709
  %715 = phi i32 [ %692, %709 ], [ %727, %714 ]
  %716 = getelementptr i8, ptr %690, i32 %715
  %717 = load i64, ptr %716, align 1
  %718 = mul i64 %717, -3523014627271114752
  %719 = lshr i64 %718, %713
  %720 = trunc i64 %719 to i32
  %721 = getelementptr i32, ptr %697, i32 %720
  %722 = load i32, ptr %721, align 4
  %723 = and i32 %715, %704
  %724 = shl i32 %723, 1
  %725 = getelementptr i32, ptr %699, i32 %724
  %726 = getelementptr i32, ptr %725, i32 1
  store i32 %715, ptr %721, align 4
  store i32 %722, ptr %725, align 4
  store i32 1, ptr %726, align 4
  %727 = add nuw i32 %715, 1
  %728 = icmp ult i32 %727, %707
  br i1 %728, label %714, label %729

729:                                              ; preds = %714
  %730 = load ptr, ptr %696, align 4
  %731 = load ptr, ptr %689, align 4
  %732 = load ptr, ptr %698, align 4
  %733 = load i32, ptr %700, align 4
  %734 = ptrtoint ptr %731 to i32
  %735 = sub i32 %705, %734
  %736 = add i32 %733, -1
  %737 = shl nsw i32 -1, %736
  %738 = xor i32 %737, -1
  br label %739

739:                                              ; preds = %729, %695
  %740 = phi i32 [ %738, %729 ], [ %704, %695 ]
  %741 = phi i32 [ %735, %729 ], [ %707, %695 ]
  %742 = phi ptr [ %732, %729 ], [ %699, %695 ]
  %743 = phi ptr [ %731, %729 ], [ %690, %695 ]
  %744 = phi ptr [ %730, %729 ], [ %697, %695 ]
  store i32 %707, ptr %691, align 4
  %745 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %746 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %747 = load i32, ptr %746, align 4
  %748 = load i64, ptr %1, align 1
  %749 = mul i64 %748, -3523014627271114752
  %750 = sub i32 64, %747
  %751 = zext i32 %750 to i64
  %752 = lshr i64 %749, %751
  %753 = trunc i64 %752 to i32
  %754 = getelementptr i32, ptr %744, i32 %753
  %755 = load i32, ptr %745, align 4
  %756 = shl nuw i32 1, %755
  %757 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %758 = load i32, ptr %757, align 4
  %759 = sub i32 %741, %758
  %760 = icmp ugt i32 %759, %756
  %761 = sub i32 %741, %756
  %762 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %763 = load i32, ptr %762, align 4
  %764 = icmp eq i32 %763, 0
  %765 = select i1 %764, i1 %760, i1 false
  %766 = select i1 %765, i32 %761, i32 %758
  %767 = tail call i32 @llvm.usub.sat.i32(i32 %741, i32 %740) #7
  %768 = tail call i32 @llvm.umax.i32(i32 %767, i32 %766) #7
  %769 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %770 = load i32, ptr %769, align 4
  %771 = shl nuw i32 1, %770
  %772 = load i32, ptr %754, align 4
  %773 = icmp ugt i32 %772, %768
  br i1 %773, label %774, label %1081

774:                                              ; preds = %786, %739
  %775 = phi i32 [ %788, %786 ], [ %772, %739 ]
  %776 = phi i32 [ %775, %786 ], [ 0, %739 ]
  %777 = phi i32 [ %787, %786 ], [ %771, %739 ]
  %778 = and i32 %775, %740
  %779 = shl i32 %778, 1
  %780 = getelementptr i32, ptr %742, i32 %779
  %781 = getelementptr i32, ptr %780, i32 1
  %782 = load i32, ptr %781, align 4
  %783 = icmp eq i32 %782, 1
  %784 = icmp ugt i32 %777, 1
  %785 = select i1 %783, i1 %784, i1 false
  br i1 %785, label %786, label %790

786:                                              ; preds = %774
  store i32 %776, ptr %781, align 4
  %787 = add i32 %777, -1
  %788 = load i32, ptr %780, align 4
  %789 = icmp ugt i32 %788, %768
  br i1 %789, label %774, label %794

790:                                              ; preds = %774
  br i1 %783, label %791, label %792

791:                                              ; preds = %790
  store i32 0, ptr %781, align 4
  store i32 0, ptr %780, align 4
  br label %792

792:                                              ; preds = %791, %790
  %793 = icmp eq i32 %776, 0
  br i1 %793, label %1081, label %794

794:                                              ; preds = %792, %786
  %795 = phi i32 [ %776, %792 ], [ %775, %786 ]
  %796 = phi i32 [ %777, %792 ], [ %787, %786 ]
  %797 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %798 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %799 = getelementptr i32, ptr %742, i32 1
  br label %800

800:                                              ; preds = %1076, %794
  %801 = phi i32 [ %795, %794 ], [ %806, %1076 ]
  %802 = phi i32 [ %796, %794 ], [ %1079, %1076 ]
  %803 = and i32 %801, %740
  %804 = shl i32 %803, 1
  %805 = getelementptr i32, ptr %799, i32 %804
  %806 = load i32, ptr %805, align 4
  %807 = load ptr, ptr %698, align 4
  %808 = load i32, ptr %700, align 4
  %809 = add i32 %808, -1
  %810 = shl nsw i32 -1, %809
  %811 = xor i32 %810, -1
  %812 = load ptr, ptr %689, align 4
  %813 = load ptr, ptr %797, align 4
  %814 = load i32, ptr %798, align 4
  %815 = icmp ugt i32 %814, %801
  %816 = select i1 %815, ptr %813, ptr %812
  %817 = getelementptr i8, ptr %816, i32 %801
  %818 = getelementptr i8, ptr %813, i32 %814
  %819 = select i1 %815, ptr %818, ptr %2
  %820 = getelementptr i8, ptr %812, i32 %814
  %821 = and i32 %801, %811
  %822 = shl i32 %821, 1
  %823 = getelementptr i32, ptr %807, i32 %822
  %824 = getelementptr i32, ptr %823, i32 1
  %825 = load i32, ptr %823, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7)
  store i32 0, ptr %7, align 4
  %826 = load i32, ptr %757, align 4
  %827 = load i32, ptr %745, align 4
  %828 = shl nuw i32 1, %827
  %829 = sub i32 %801, %826
  %830 = icmp ugt i32 %829, %828
  %831 = sub i32 %801, %828
  %832 = select i1 %830, i32 %831, i32 %826
  %833 = icmp ne i32 %802, 0
  %834 = icmp ugt i32 %825, %832
  %835 = select i1 %833, i1 %834, i1 false
  br i1 %835, label %836, label %1076

836:                                              ; preds = %800
  %837 = ptrtoint ptr %818 to i32
  %838 = getelementptr i8, ptr %819, i32 -3
  %839 = getelementptr i8, ptr %819, i32 -1
  br label %840

840:                                              ; preds = %1065, %836
  %841 = phi i32 [ %802, %836 ], [ %1072, %1065 ]
  %842 = phi i32 [ %825, %836 ], [ %1071, %1065 ]
  %843 = phi ptr [ %824, %836 ], [ %1069, %1065 ]
  %844 = phi ptr [ %823, %836 ], [ %1068, %1065 ]
  %845 = phi i32 [ 0, %836 ], [ %1067, %1065 ]
  %846 = phi i32 [ 0, %836 ], [ %1066, %1065 ]
  %847 = and i32 %842, %811
  %848 = shl i32 %847, 1
  %849 = getelementptr i32, ptr %807, i32 %848
  %850 = tail call i32 @llvm.umin.i32(i32 %846, i32 %845) #7
  %851 = add i32 %850, %842
  %852 = icmp ult i32 %851, %814
  %853 = xor i1 %852, true
  %854 = select i1 %853, i1 true, i1 %815
  br i1 %854, label %855, label %916

855:                                              ; preds = %840
  %856 = select i1 %852, ptr %813, ptr %812
  %857 = getelementptr i8, ptr %856, i32 %842
  %858 = getelementptr i8, ptr %817, i32 %850
  %859 = getelementptr i8, ptr %857, i32 %850
  %860 = icmp ugt ptr %838, %858
  br i1 %860, label %861, label %887

861:                                              ; preds = %855
  %862 = load i32, ptr %859, align 1
  %863 = load i32, ptr %858, align 1
  %864 = xor i32 %863, %862
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %869, label %866

866:                                              ; preds = %861
  %867 = tail call i32 @llvm.cttz.i32(i32 %864, i1 true) #7, !range !8
  %868 = lshr i32 %867, 3
  br label %913

869:                                              ; preds = %875, %861
  %870 = phi ptr [ %873, %875 ], [ %858, %861 ]
  %871 = phi ptr [ %872, %875 ], [ %859, %861 ]
  %872 = getelementptr i8, ptr %871, i32 4
  %873 = getelementptr i8, ptr %870, i32 4
  %874 = icmp ult ptr %873, %838
  br i1 %874, label %875, label %887

875:                                              ; preds = %869
  %876 = load i32, ptr %872, align 1
  %877 = load i32, ptr %873, align 1
  %878 = xor i32 %877, %876
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %869, label %880

880:                                              ; preds = %875
  %881 = tail call i32 @llvm.cttz.i32(i32 %878, i1 true) #7, !range !8
  %882 = lshr i32 %881, 3
  %883 = getelementptr i8, ptr %873, i32 %882
  %884 = ptrtoint ptr %883 to i32
  %885 = ptrtoint ptr %858 to i32
  %886 = sub i32 %884, %885
  br label %913

887:                                              ; preds = %869, %855
  %888 = phi ptr [ %858, %855 ], [ %873, %869 ]
  %889 = phi ptr [ %859, %855 ], [ %872, %869 ]
  %890 = icmp ult ptr %888, %839
  br i1 %890, label %891, label %898

891:                                              ; preds = %887
  %892 = load i16, ptr %889, align 1
  %893 = load i16, ptr %888, align 1
  %894 = icmp eq i16 %892, %893
  br i1 %894, label %895, label %898

895:                                              ; preds = %891
  %896 = getelementptr i8, ptr %888, i32 2
  %897 = getelementptr i8, ptr %889, i32 2
  br label %898

898:                                              ; preds = %895, %891, %887
  %899 = phi ptr [ %896, %895 ], [ %888, %891 ], [ %888, %887 ]
  %900 = phi ptr [ %897, %895 ], [ %889, %891 ], [ %889, %887 ]
  %901 = icmp ult ptr %899, %819
  br i1 %901, label %902, label %908

902:                                              ; preds = %898
  %903 = load i8, ptr %900, align 1
  %904 = load i8, ptr %899, align 1
  %905 = icmp eq i8 %903, %904
  %906 = zext i1 %905 to i32
  %907 = getelementptr i8, ptr %899, i32 %906
  br label %908

908:                                              ; preds = %902, %898
  %909 = phi ptr [ %899, %898 ], [ %907, %902 ]
  %910 = ptrtoint ptr %909 to i32
  %911 = ptrtoint ptr %858 to i32
  %912 = sub i32 %910, %911
  br label %913

913:                                              ; preds = %908, %880, %866
  %914 = phi i32 [ %912, %908 ], [ %868, %866 ], [ %886, %880 ]
  %915 = add i32 %914, %850
  br label %1049

916:                                              ; preds = %840
  %917 = getelementptr i8, ptr %813, i32 %842
  %918 = getelementptr i8, ptr %817, i32 %850
  %919 = getelementptr i8, ptr %917, i32 %850
  %920 = ptrtoint ptr %919 to i32
  %921 = sub i32 %837, %920
  %922 = getelementptr i8, ptr %918, i32 %921
  %923 = icmp ult ptr %922, %819
  %924 = select i1 %923, ptr %922, ptr %819
  %925 = getelementptr i8, ptr %924, i32 -3
  %926 = icmp ugt ptr %925, %918
  br i1 %926, label %927, label %953

927:                                              ; preds = %916
  %928 = load i32, ptr %919, align 1
  %929 = load i32, ptr %918, align 1
  %930 = xor i32 %929, %928
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %935, label %932

932:                                              ; preds = %927
  %933 = tail call i32 @llvm.cttz.i32(i32 %930, i1 true) #7, !range !8
  %934 = lshr i32 %933, 3
  br label %980

935:                                              ; preds = %941, %927
  %936 = phi ptr [ %939, %941 ], [ %918, %927 ]
  %937 = phi ptr [ %938, %941 ], [ %919, %927 ]
  %938 = getelementptr i8, ptr %937, i32 4
  %939 = getelementptr i8, ptr %936, i32 4
  %940 = icmp ult ptr %939, %925
  br i1 %940, label %941, label %953

941:                                              ; preds = %935
  %942 = load i32, ptr %938, align 1
  %943 = load i32, ptr %939, align 1
  %944 = xor i32 %943, %942
  %945 = icmp eq i32 %944, 0
  br i1 %945, label %935, label %946

946:                                              ; preds = %941
  %947 = tail call i32 @llvm.cttz.i32(i32 %944, i1 true) #7, !range !8
  %948 = lshr i32 %947, 3
  %949 = getelementptr i8, ptr %939, i32 %948
  %950 = ptrtoint ptr %949 to i32
  %951 = ptrtoint ptr %918 to i32
  %952 = sub i32 %950, %951
  br label %980

953:                                              ; preds = %935, %916
  %954 = phi ptr [ %918, %916 ], [ %939, %935 ]
  %955 = phi ptr [ %919, %916 ], [ %938, %935 ]
  %956 = getelementptr i8, ptr %924, i32 -1
  %957 = icmp ult ptr %954, %956
  br i1 %957, label %958, label %965

958:                                              ; preds = %953
  %959 = load i16, ptr %955, align 1
  %960 = load i16, ptr %954, align 1
  %961 = icmp eq i16 %959, %960
  br i1 %961, label %962, label %965

962:                                              ; preds = %958
  %963 = getelementptr i8, ptr %954, i32 2
  %964 = getelementptr i8, ptr %955, i32 2
  br label %965

965:                                              ; preds = %962, %958, %953
  %966 = phi ptr [ %963, %962 ], [ %954, %958 ], [ %954, %953 ]
  %967 = phi ptr [ %964, %962 ], [ %955, %958 ], [ %955, %953 ]
  %968 = icmp ult ptr %966, %924
  br i1 %968, label %969, label %975

969:                                              ; preds = %965
  %970 = load i8, ptr %967, align 1
  %971 = load i8, ptr %966, align 1
  %972 = icmp eq i8 %970, %971
  %973 = zext i1 %972 to i32
  %974 = getelementptr i8, ptr %966, i32 %973
  br label %975

975:                                              ; preds = %969, %965
  %976 = phi ptr [ %966, %965 ], [ %974, %969 ]
  %977 = ptrtoint ptr %976 to i32
  %978 = ptrtoint ptr %918 to i32
  %979 = sub i32 %977, %978
  br label %980

980:                                              ; preds = %975, %946, %932
  %981 = phi i32 [ %979, %975 ], [ %934, %932 ], [ %952, %946 ]
  %982 = getelementptr i8, ptr %919, i32 %981
  %983 = icmp eq ptr %982, %818
  br i1 %983, label %984, label %1042

984:                                              ; preds = %980
  %985 = getelementptr i8, ptr %918, i32 %981
  %986 = icmp ugt ptr %838, %985
  br i1 %986, label %987, label %1013

987:                                              ; preds = %984
  %988 = load i32, ptr %820, align 1
  %989 = load i32, ptr %985, align 1
  %990 = xor i32 %989, %988
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %995, label %992

992:                                              ; preds = %987
  %993 = tail call i32 @llvm.cttz.i32(i32 %990, i1 true) #7, !range !8
  %994 = lshr i32 %993, 3
  br label %1039

995:                                              ; preds = %1001, %987
  %996 = phi ptr [ %999, %1001 ], [ %985, %987 ]
  %997 = phi ptr [ %998, %1001 ], [ %820, %987 ]
  %998 = getelementptr i8, ptr %997, i32 4
  %999 = getelementptr i8, ptr %996, i32 4
  %1000 = icmp ult ptr %999, %838
  br i1 %1000, label %1001, label %1013

1001:                                             ; preds = %995
  %1002 = load i32, ptr %998, align 1
  %1003 = load i32, ptr %999, align 1
  %1004 = xor i32 %1003, %1002
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %995, label %1006

1006:                                             ; preds = %1001
  %1007 = tail call i32 @llvm.cttz.i32(i32 %1004, i1 true) #7, !range !8
  %1008 = lshr i32 %1007, 3
  %1009 = getelementptr i8, ptr %999, i32 %1008
  %1010 = ptrtoint ptr %1009 to i32
  %1011 = ptrtoint ptr %985 to i32
  %1012 = sub i32 %1010, %1011
  br label %1039

1013:                                             ; preds = %995, %984
  %1014 = phi ptr [ %985, %984 ], [ %999, %995 ]
  %1015 = phi ptr [ %820, %984 ], [ %998, %995 ]
  %1016 = icmp ult ptr %1014, %839
  br i1 %1016, label %1017, label %1024

1017:                                             ; preds = %1013
  %1018 = load i16, ptr %1015, align 1
  %1019 = load i16, ptr %1014, align 1
  %1020 = icmp eq i16 %1018, %1019
  br i1 %1020, label %1021, label %1024

1021:                                             ; preds = %1017
  %1022 = getelementptr i8, ptr %1014, i32 2
  %1023 = getelementptr i8, ptr %1015, i32 2
  br label %1024

1024:                                             ; preds = %1021, %1017, %1013
  %1025 = phi ptr [ %1022, %1021 ], [ %1014, %1017 ], [ %1014, %1013 ]
  %1026 = phi ptr [ %1023, %1021 ], [ %1015, %1017 ], [ %1015, %1013 ]
  %1027 = icmp ult ptr %1025, %819
  br i1 %1027, label %1028, label %1034

1028:                                             ; preds = %1024
  %1029 = load i8, ptr %1026, align 1
  %1030 = load i8, ptr %1025, align 1
  %1031 = icmp eq i8 %1029, %1030
  %1032 = zext i1 %1031 to i32
  %1033 = getelementptr i8, ptr %1025, i32 %1032
  br label %1034

1034:                                             ; preds = %1028, %1024
  %1035 = phi ptr [ %1025, %1024 ], [ %1033, %1028 ]
  %1036 = ptrtoint ptr %1035 to i32
  %1037 = ptrtoint ptr %985 to i32
  %1038 = sub i32 %1036, %1037
  br label %1039

1039:                                             ; preds = %1034, %1006, %992
  %1040 = phi i32 [ %1038, %1034 ], [ %994, %992 ], [ %1012, %1006 ]
  %1041 = add i32 %1040, %981
  br label %1042

1042:                                             ; preds = %1039, %980
  %1043 = phi i32 [ %1041, %1039 ], [ %981, %980 ]
  %1044 = add i32 %1043, %850
  %1045 = add i32 %1044, %842
  %1046 = icmp ult i32 %1045, %814
  %1047 = getelementptr i8, ptr %812, i32 %842
  %1048 = select i1 %1046, ptr %917, ptr %1047
  br label %1049

1049:                                             ; preds = %1042, %913
  %1050 = phi ptr [ %857, %913 ], [ %1048, %1042 ]
  %1051 = phi i32 [ %915, %913 ], [ %1044, %1042 ]
  %1052 = getelementptr i8, ptr %817, i32 %1051
  %1053 = icmp eq ptr %1052, %819
  br i1 %1053, label %1076, label %1054

1054:                                             ; preds = %1049
  %1055 = getelementptr i8, ptr %1050, i32 %1051
  %1056 = load i8, ptr %1055, align 1
  %1057 = load i8, ptr %1052, align 1
  %1058 = icmp ult i8 %1056, %1057
  br i1 %1058, label %1059, label %1063

1059:                                             ; preds = %1054
  store i32 %842, ptr %844, align 4
  %1060 = icmp ugt i32 %842, %768
  br i1 %1060, label %1061, label %1076

1061:                                             ; preds = %1059
  %1062 = getelementptr i32, ptr %849, i32 1
  br label %1065

1063:                                             ; preds = %1054
  store i32 %842, ptr %843, align 4
  %1064 = icmp ugt i32 %842, %768
  br i1 %1064, label %1065, label %1076

1065:                                             ; preds = %1063, %1061
  %1066 = phi i32 [ %1051, %1061 ], [ %846, %1063 ]
  %1067 = phi i32 [ %845, %1061 ], [ %1051, %1063 ]
  %1068 = phi ptr [ %1062, %1061 ], [ %844, %1063 ]
  %1069 = phi ptr [ %843, %1061 ], [ %849, %1063 ]
  %1070 = phi ptr [ %1062, %1061 ], [ %849, %1063 ]
  %1071 = load i32, ptr %1070, align 4
  %1072 = add i32 %841, -1
  %1073 = icmp ne i32 %1072, 0
  %1074 = icmp ugt i32 %1071, %832
  %1075 = select i1 %1073, i1 %1074, i1 false
  br i1 %1075, label %840, label %1076

1076:                                             ; preds = %1065, %1063, %1059, %1049, %800
  %1077 = phi ptr [ %823, %800 ], [ %1068, %1065 ], [ %844, %1049 ], [ %7, %1059 ], [ %844, %1063 ]
  %1078 = phi ptr [ %824, %800 ], [ %1069, %1065 ], [ %843, %1049 ], [ %843, %1059 ], [ %7, %1063 ]
  store i32 0, ptr %1078, align 4
  store i32 0, ptr %1077, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7)
  %1079 = add i32 %802, 1
  %1080 = icmp eq i32 %806, 0
  br i1 %1080, label %1081, label %800

1081:                                             ; preds = %1076, %792, %739
  %1082 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %1083 = load ptr, ptr %1082, align 4
  %1084 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1085 = load i32, ptr %1084, align 4
  %1086 = getelementptr i8, ptr %1083, i32 %1085
  %1087 = getelementptr i8, ptr %743, i32 %1085
  %1088 = and i32 %741, %740
  %1089 = shl i32 %1088, 1
  %1090 = getelementptr i32, ptr %742, i32 %1089
  %1091 = getelementptr i32, ptr %1090, i32 1
  %1092 = add i32 %741, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8)
  store i32 0, ptr %8, align 4
  %1093 = load i32, ptr %754, align 4
  store i32 %741, ptr %754, align 4
  %1094 = icmp ugt i32 %1093, %766
  br i1 %1094, label %1095, label %1361

1095:                                             ; preds = %1081
  %1096 = getelementptr i8, ptr %2, i32 -3
  %1097 = getelementptr i8, ptr %2, i32 -1
  %1098 = ptrtoint ptr %1086 to i32
  %1099 = add i32 %741, 1
  %1100 = add i32 %741, 2
  br label %1101

1101:                                             ; preds = %1350, %1095
  %1102 = phi i32 [ 0, %1095 ], [ %1337, %1350 ]
  %1103 = phi i32 [ %1092, %1095 ], [ %1336, %1350 ]
  %1104 = phi ptr [ %1091, %1095 ], [ %1355, %1350 ]
  %1105 = phi ptr [ %1090, %1095 ], [ %1354, %1350 ]
  %1106 = phi i32 [ 0, %1095 ], [ %1353, %1350 ]
  %1107 = phi i32 [ 0, %1095 ], [ %1352, %1350 ]
  %1108 = phi i32 [ %1093, %1095 ], [ %1356, %1350 ]
  %1109 = phi i32 [ %771, %1095 ], [ %1357, %1350 ]
  %1110 = and i32 %1108, %740
  %1111 = shl i32 %1110, 1
  %1112 = getelementptr i32, ptr %742, i32 %1111
  %1113 = tail call i32 @llvm.umin.i32(i32 %1107, i32 %1106) #7
  %1114 = add i32 %1113, %1108
  %1115 = icmp ult i32 %1114, %1085
  br i1 %1115, label %1176, label %1116

1116:                                             ; preds = %1101
  %1117 = getelementptr i8, ptr %743, i32 %1108
  %1118 = getelementptr i8, ptr %1, i32 %1113
  %1119 = getelementptr i8, ptr %1117, i32 %1113
  %1120 = icmp ugt ptr %1096, %1118
  br i1 %1120, label %1121, label %1147

1121:                                             ; preds = %1116
  %1122 = load i32, ptr %1119, align 1
  %1123 = load i32, ptr %1118, align 1
  %1124 = xor i32 %1123, %1122
  %1125 = icmp eq i32 %1124, 0
  br i1 %1125, label %1129, label %1126

1126:                                             ; preds = %1121
  %1127 = tail call i32 @llvm.cttz.i32(i32 %1124, i1 true) #7, !range !8
  %1128 = lshr i32 %1127, 3
  br label %1173

1129:                                             ; preds = %1135, %1121
  %1130 = phi ptr [ %1133, %1135 ], [ %1118, %1121 ]
  %1131 = phi ptr [ %1132, %1135 ], [ %1119, %1121 ]
  %1132 = getelementptr i8, ptr %1131, i32 4
  %1133 = getelementptr i8, ptr %1130, i32 4
  %1134 = icmp ult ptr %1133, %1096
  br i1 %1134, label %1135, label %1147

1135:                                             ; preds = %1129
  %1136 = load i32, ptr %1132, align 1
  %1137 = load i32, ptr %1133, align 1
  %1138 = xor i32 %1137, %1136
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1129, label %1140

1140:                                             ; preds = %1135
  %1141 = tail call i32 @llvm.cttz.i32(i32 %1138, i1 true) #7, !range !8
  %1142 = lshr i32 %1141, 3
  %1143 = getelementptr i8, ptr %1133, i32 %1142
  %1144 = ptrtoint ptr %1143 to i32
  %1145 = ptrtoint ptr %1118 to i32
  %1146 = sub i32 %1144, %1145
  br label %1173

1147:                                             ; preds = %1129, %1116
  %1148 = phi ptr [ %1118, %1116 ], [ %1133, %1129 ]
  %1149 = phi ptr [ %1119, %1116 ], [ %1132, %1129 ]
  %1150 = icmp ult ptr %1148, %1097
  br i1 %1150, label %1151, label %1158

1151:                                             ; preds = %1147
  %1152 = load i16, ptr %1149, align 1
  %1153 = load i16, ptr %1148, align 1
  %1154 = icmp eq i16 %1152, %1153
  br i1 %1154, label %1155, label %1158

1155:                                             ; preds = %1151
  %1156 = getelementptr i8, ptr %1148, i32 2
  %1157 = getelementptr i8, ptr %1149, i32 2
  br label %1158

1158:                                             ; preds = %1155, %1151, %1147
  %1159 = phi ptr [ %1156, %1155 ], [ %1148, %1151 ], [ %1148, %1147 ]
  %1160 = phi ptr [ %1157, %1155 ], [ %1149, %1151 ], [ %1149, %1147 ]
  %1161 = icmp ult ptr %1159, %2
  br i1 %1161, label %1162, label %1168

1162:                                             ; preds = %1158
  %1163 = load i8, ptr %1160, align 1
  %1164 = load i8, ptr %1159, align 1
  %1165 = icmp eq i8 %1163, %1164
  %1166 = zext i1 %1165 to i32
  %1167 = getelementptr i8, ptr %1159, i32 %1166
  br label %1168

1168:                                             ; preds = %1162, %1158
  %1169 = phi ptr [ %1159, %1158 ], [ %1167, %1162 ]
  %1170 = ptrtoint ptr %1169 to i32
  %1171 = ptrtoint ptr %1118 to i32
  %1172 = sub i32 %1170, %1171
  br label %1173

1173:                                             ; preds = %1168, %1140, %1126
  %1174 = phi i32 [ %1172, %1168 ], [ %1128, %1126 ], [ %1146, %1140 ]
  %1175 = add i32 %1174, %1113
  br label %1308

1176:                                             ; preds = %1101
  %1177 = getelementptr i8, ptr %1083, i32 %1108
  %1178 = getelementptr i8, ptr %1, i32 %1113
  %1179 = getelementptr i8, ptr %1177, i32 %1113
  %1180 = ptrtoint ptr %1179 to i32
  %1181 = sub i32 %1098, %1180
  %1182 = getelementptr i8, ptr %1178, i32 %1181
  %1183 = icmp ult ptr %1182, %2
  %1184 = select i1 %1183, ptr %1182, ptr %2
  %1185 = getelementptr i8, ptr %1184, i32 -3
  %1186 = icmp ugt ptr %1185, %1178
  br i1 %1186, label %1187, label %1213

1187:                                             ; preds = %1176
  %1188 = load i32, ptr %1179, align 1
  %1189 = load i32, ptr %1178, align 1
  %1190 = xor i32 %1189, %1188
  %1191 = icmp eq i32 %1190, 0
  br i1 %1191, label %1195, label %1192

1192:                                             ; preds = %1187
  %1193 = tail call i32 @llvm.cttz.i32(i32 %1190, i1 true) #7, !range !8
  %1194 = lshr i32 %1193, 3
  br label %1240

1195:                                             ; preds = %1201, %1187
  %1196 = phi ptr [ %1199, %1201 ], [ %1178, %1187 ]
  %1197 = phi ptr [ %1198, %1201 ], [ %1179, %1187 ]
  %1198 = getelementptr i8, ptr %1197, i32 4
  %1199 = getelementptr i8, ptr %1196, i32 4
  %1200 = icmp ult ptr %1199, %1185
  br i1 %1200, label %1201, label %1213

1201:                                             ; preds = %1195
  %1202 = load i32, ptr %1198, align 1
  %1203 = load i32, ptr %1199, align 1
  %1204 = xor i32 %1203, %1202
  %1205 = icmp eq i32 %1204, 0
  br i1 %1205, label %1195, label %1206

1206:                                             ; preds = %1201
  %1207 = tail call i32 @llvm.cttz.i32(i32 %1204, i1 true) #7, !range !8
  %1208 = lshr i32 %1207, 3
  %1209 = getelementptr i8, ptr %1199, i32 %1208
  %1210 = ptrtoint ptr %1209 to i32
  %1211 = ptrtoint ptr %1178 to i32
  %1212 = sub i32 %1210, %1211
  br label %1240

1213:                                             ; preds = %1195, %1176
  %1214 = phi ptr [ %1178, %1176 ], [ %1199, %1195 ]
  %1215 = phi ptr [ %1179, %1176 ], [ %1198, %1195 ]
  %1216 = getelementptr i8, ptr %1184, i32 -1
  %1217 = icmp ult ptr %1214, %1216
  br i1 %1217, label %1218, label %1225

1218:                                             ; preds = %1213
  %1219 = load i16, ptr %1215, align 1
  %1220 = load i16, ptr %1214, align 1
  %1221 = icmp eq i16 %1219, %1220
  br i1 %1221, label %1222, label %1225

1222:                                             ; preds = %1218
  %1223 = getelementptr i8, ptr %1214, i32 2
  %1224 = getelementptr i8, ptr %1215, i32 2
  br label %1225

1225:                                             ; preds = %1222, %1218, %1213
  %1226 = phi ptr [ %1223, %1222 ], [ %1214, %1218 ], [ %1214, %1213 ]
  %1227 = phi ptr [ %1224, %1222 ], [ %1215, %1218 ], [ %1215, %1213 ]
  %1228 = icmp ult ptr %1226, %1184
  br i1 %1228, label %1229, label %1235

1229:                                             ; preds = %1225
  %1230 = load i8, ptr %1227, align 1
  %1231 = load i8, ptr %1226, align 1
  %1232 = icmp eq i8 %1230, %1231
  %1233 = zext i1 %1232 to i32
  %1234 = getelementptr i8, ptr %1226, i32 %1233
  br label %1235

1235:                                             ; preds = %1229, %1225
  %1236 = phi ptr [ %1226, %1225 ], [ %1234, %1229 ]
  %1237 = ptrtoint ptr %1236 to i32
  %1238 = ptrtoint ptr %1178 to i32
  %1239 = sub i32 %1237, %1238
  br label %1240

1240:                                             ; preds = %1235, %1206, %1192
  %1241 = phi i32 [ %1239, %1235 ], [ %1194, %1192 ], [ %1212, %1206 ]
  %1242 = getelementptr i8, ptr %1179, i32 %1241
  %1243 = icmp eq ptr %1242, %1086
  br i1 %1243, label %1244, label %1302

1244:                                             ; preds = %1240
  %1245 = getelementptr i8, ptr %1178, i32 %1241
  %1246 = icmp ugt ptr %1096, %1245
  br i1 %1246, label %1247, label %1273

1247:                                             ; preds = %1244
  %1248 = load i32, ptr %1087, align 1
  %1249 = load i32, ptr %1245, align 1
  %1250 = xor i32 %1249, %1248
  %1251 = icmp eq i32 %1250, 0
  br i1 %1251, label %1255, label %1252

1252:                                             ; preds = %1247
  %1253 = tail call i32 @llvm.cttz.i32(i32 %1250, i1 true) #7, !range !8
  %1254 = lshr i32 %1253, 3
  br label %1299

1255:                                             ; preds = %1261, %1247
  %1256 = phi ptr [ %1259, %1261 ], [ %1245, %1247 ]
  %1257 = phi ptr [ %1258, %1261 ], [ %1087, %1247 ]
  %1258 = getelementptr i8, ptr %1257, i32 4
  %1259 = getelementptr i8, ptr %1256, i32 4
  %1260 = icmp ult ptr %1259, %1096
  br i1 %1260, label %1261, label %1273

1261:                                             ; preds = %1255
  %1262 = load i32, ptr %1258, align 1
  %1263 = load i32, ptr %1259, align 1
  %1264 = xor i32 %1263, %1262
  %1265 = icmp eq i32 %1264, 0
  br i1 %1265, label %1255, label %1266

1266:                                             ; preds = %1261
  %1267 = tail call i32 @llvm.cttz.i32(i32 %1264, i1 true) #7, !range !8
  %1268 = lshr i32 %1267, 3
  %1269 = getelementptr i8, ptr %1259, i32 %1268
  %1270 = ptrtoint ptr %1269 to i32
  %1271 = ptrtoint ptr %1245 to i32
  %1272 = sub i32 %1270, %1271
  br label %1299

1273:                                             ; preds = %1255, %1244
  %1274 = phi ptr [ %1245, %1244 ], [ %1259, %1255 ]
  %1275 = phi ptr [ %1087, %1244 ], [ %1258, %1255 ]
  %1276 = icmp ult ptr %1274, %1097
  br i1 %1276, label %1277, label %1284

1277:                                             ; preds = %1273
  %1278 = load i16, ptr %1275, align 1
  %1279 = load i16, ptr %1274, align 1
  %1280 = icmp eq i16 %1278, %1279
  br i1 %1280, label %1281, label %1284

1281:                                             ; preds = %1277
  %1282 = getelementptr i8, ptr %1274, i32 2
  %1283 = getelementptr i8, ptr %1275, i32 2
  br label %1284

1284:                                             ; preds = %1281, %1277, %1273
  %1285 = phi ptr [ %1282, %1281 ], [ %1274, %1277 ], [ %1274, %1273 ]
  %1286 = phi ptr [ %1283, %1281 ], [ %1275, %1277 ], [ %1275, %1273 ]
  %1287 = icmp ult ptr %1285, %2
  br i1 %1287, label %1288, label %1294

1288:                                             ; preds = %1284
  %1289 = load i8, ptr %1286, align 1
  %1290 = load i8, ptr %1285, align 1
  %1291 = icmp eq i8 %1289, %1290
  %1292 = zext i1 %1291 to i32
  %1293 = getelementptr i8, ptr %1285, i32 %1292
  br label %1294

1294:                                             ; preds = %1288, %1284
  %1295 = phi ptr [ %1285, %1284 ], [ %1293, %1288 ]
  %1296 = ptrtoint ptr %1295 to i32
  %1297 = ptrtoint ptr %1245 to i32
  %1298 = sub i32 %1296, %1297
  br label %1299

1299:                                             ; preds = %1294, %1266, %1252
  %1300 = phi i32 [ %1298, %1294 ], [ %1254, %1252 ], [ %1272, %1266 ]
  %1301 = add i32 %1300, %1241
  br label %1302

1302:                                             ; preds = %1299, %1240
  %1303 = phi i32 [ %1301, %1299 ], [ %1241, %1240 ]
  %1304 = add i32 %1303, %1113
  %1305 = add i32 %1304, %1108
  %1306 = icmp ult i32 %1305, %1085
  %1307 = select i1 %1306, ptr %1083, ptr %743
  br label %1308

1308:                                             ; preds = %1302, %1173
  %1309 = phi i32 [ %1175, %1173 ], [ %1304, %1302 ]
  %1310 = phi ptr [ %743, %1173 ], [ %1307, %1302 ]
  %1311 = icmp ugt i32 %1309, %1102
  br i1 %1311, label %1312, label %1335

1312:                                             ; preds = %1308
  %1313 = sub i32 %1103, %1108
  %1314 = icmp ugt i32 %1309, %1313
  %1315 = add i32 %1309, %1108
  %1316 = select i1 %1314, i32 %1315, i32 %1103
  %1317 = sub i32 %1309, %1102
  %1318 = shl i32 %1317, 2
  %1319 = sub i32 %1099, %1108
  %1320 = tail call i32 @llvm.ctlz.i32(i32 %1319, i1 false) #7, !range !8
  %1321 = xor i32 %1320, 31
  %1322 = load i32, ptr %3, align 4
  %1323 = add i32 %1322, 1
  %1324 = tail call i32 @llvm.ctlz.i32(i32 %1323, i1 false) #7, !range !8
  %1325 = xor i32 %1324, -32
  %1326 = add nuw nsw i32 %1321, 1
  %1327 = add nsw i32 %1326, %1325
  %1328 = icmp sgt i32 %1318, %1327
  br i1 %1328, label %1329, label %1331

1329:                                             ; preds = %1312
  %1330 = sub i32 %1100, %1108
  store i32 %1330, ptr %3, align 4
  br label %1331

1331:                                             ; preds = %1329, %1312
  %1332 = phi i32 [ %1309, %1329 ], [ %1102, %1312 ]
  %1333 = getelementptr i8, ptr %1, i32 %1309
  %1334 = icmp eq ptr %1333, %2
  br i1 %1334, label %1361, label %1335

1335:                                             ; preds = %1331, %1308
  %1336 = phi i32 [ %1316, %1331 ], [ %1103, %1308 ]
  %1337 = phi i32 [ %1332, %1331 ], [ %1102, %1308 ]
  %1338 = getelementptr i8, ptr %1310, i32 %1108
  %1339 = getelementptr i8, ptr %1338, i32 %1309
  %1340 = load i8, ptr %1339, align 1
  %1341 = getelementptr i8, ptr %1, i32 %1309
  %1342 = load i8, ptr %1341, align 1
  %1343 = icmp ult i8 %1340, %1342
  br i1 %1343, label %1344, label %1348

1344:                                             ; preds = %1335
  store i32 %1108, ptr %1105, align 4
  %1345 = icmp ugt i32 %1108, %767
  br i1 %1345, label %1346, label %1361

1346:                                             ; preds = %1344
  %1347 = getelementptr i32, ptr %1112, i32 1
  br label %1350

1348:                                             ; preds = %1335
  store i32 %1108, ptr %1104, align 4
  %1349 = icmp ugt i32 %1108, %767
  br i1 %1349, label %1350, label %1361

1350:                                             ; preds = %1348, %1346
  %1351 = phi ptr [ %1347, %1346 ], [ %1112, %1348 ]
  %1352 = phi i32 [ %1309, %1346 ], [ %1107, %1348 ]
  %1353 = phi i32 [ %1106, %1346 ], [ %1309, %1348 ]
  %1354 = phi ptr [ %1347, %1346 ], [ %1105, %1348 ]
  %1355 = phi ptr [ %1104, %1346 ], [ %1112, %1348 ]
  %1356 = load i32, ptr %1351, align 4
  %1357 = add i32 %1109, -1
  %1358 = icmp ne i32 %1357, 0
  %1359 = icmp ugt i32 %1356, %766
  %1360 = select i1 %1358, i1 %1359, i1 false
  br i1 %1360, label %1101, label %1361

1361:                                             ; preds = %1350, %1348, %1344, %1331, %1081
  %1362 = phi ptr [ %1090, %1081 ], [ %1105, %1331 ], [ %1354, %1350 ], [ %8, %1344 ], [ %1105, %1348 ]
  %1363 = phi ptr [ %1091, %1081 ], [ %1104, %1331 ], [ %1355, %1350 ], [ %1104, %1344 ], [ %8, %1348 ]
  %1364 = phi i32 [ %1092, %1081 ], [ %1316, %1331 ], [ %1336, %1350 ], [ %1336, %1344 ], [ %1336, %1348 ]
  %1365 = phi i32 [ 0, %1081 ], [ %1332, %1331 ], [ %1337, %1350 ], [ %1337, %1344 ], [ %1337, %1348 ]
  store i32 0, ptr %1363, align 4
  store i32 0, ptr %1362, align 4
  %1366 = add i32 %1364, -8
  store i32 %1366, ptr %691, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8)
  br label %2046

1367:                                             ; preds = %4, %4
  %1368 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 1
  %1369 = load ptr, ptr %1368, align 4
  %1370 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 2
  %1371 = load i32, ptr %1370, align 4
  %1372 = getelementptr i8, ptr %1369, i32 %1371
  %1373 = icmp ugt ptr %1372, %1
  br i1 %1373, label %2046, label %1374

1374:                                             ; preds = %1367
  %1375 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 4
  %1376 = load ptr, ptr %1375, align 4
  %1377 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 6
  %1378 = load ptr, ptr %1377, align 4
  %1379 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 1
  %1380 = load i32, ptr %1379, align 4
  %1381 = add i32 %1380, -1
  %1382 = shl nsw i32 -1, %1381
  %1383 = xor i32 %1382, -1
  %1384 = ptrtoint ptr %1 to i32
  %1385 = ptrtoint ptr %1369 to i32
  %1386 = sub i32 %1384, %1385
  %1387 = icmp ult i32 %1371, %1386
  br i1 %1387, label %1388, label %1418

1388:                                             ; preds = %1374
  %1389 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %1390 = load i32, ptr %1389, align 4
  %1391 = sub i32 64, %1390
  %1392 = zext i32 %1391 to i64
  br label %1393

1393:                                             ; preds = %1393, %1388
  %1394 = phi i32 [ %1371, %1388 ], [ %1406, %1393 ]
  %1395 = getelementptr i8, ptr %1369, i32 %1394
  %1396 = load i64, ptr %1395, align 1
  %1397 = mul i64 %1396, -3523014627193847808
  %1398 = lshr i64 %1397, %1392
  %1399 = trunc i64 %1398 to i32
  %1400 = getelementptr i32, ptr %1376, i32 %1399
  %1401 = load i32, ptr %1400, align 4
  %1402 = and i32 %1394, %1383
  %1403 = shl i32 %1402, 1
  %1404 = getelementptr i32, ptr %1378, i32 %1403
  %1405 = getelementptr i32, ptr %1404, i32 1
  store i32 %1394, ptr %1400, align 4
  store i32 %1401, ptr %1404, align 4
  store i32 1, ptr %1405, align 4
  %1406 = add nuw i32 %1394, 1
  %1407 = icmp ult i32 %1406, %1386
  br i1 %1407, label %1393, label %1408

1408:                                             ; preds = %1393
  %1409 = load ptr, ptr %1375, align 4
  %1410 = load ptr, ptr %1368, align 4
  %1411 = load ptr, ptr %1377, align 4
  %1412 = load i32, ptr %1379, align 4
  %1413 = ptrtoint ptr %1410 to i32
  %1414 = sub i32 %1384, %1413
  %1415 = add i32 %1412, -1
  %1416 = shl nsw i32 -1, %1415
  %1417 = xor i32 %1416, -1
  br label %1418

1418:                                             ; preds = %1408, %1374
  %1419 = phi i32 [ %1417, %1408 ], [ %1383, %1374 ]
  %1420 = phi i32 [ %1414, %1408 ], [ %1386, %1374 ]
  %1421 = phi ptr [ %1411, %1408 ], [ %1378, %1374 ]
  %1422 = phi ptr [ %1410, %1408 ], [ %1369, %1374 ]
  %1423 = phi ptr [ %1409, %1408 ], [ %1376, %1374 ]
  store i32 %1386, ptr %1370, align 4
  %1424 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10
  %1425 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 2
  %1426 = load i32, ptr %1425, align 4
  %1427 = load i64, ptr %1, align 1
  %1428 = mul i64 %1427, -3523014627193847808
  %1429 = sub i32 64, %1426
  %1430 = zext i32 %1429 to i64
  %1431 = lshr i64 %1428, %1430
  %1432 = trunc i64 %1431 to i32
  %1433 = getelementptr i32, ptr %1423, i32 %1432
  %1434 = load i32, ptr %1424, align 4
  %1435 = shl nuw i32 1, %1434
  %1436 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 4
  %1437 = load i32, ptr %1436, align 4
  %1438 = sub i32 %1420, %1437
  %1439 = icmp ugt i32 %1438, %1435
  %1440 = sub i32 %1420, %1435
  %1441 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 1
  %1442 = load i32, ptr %1441, align 4
  %1443 = icmp eq i32 %1442, 0
  %1444 = select i1 %1443, i1 %1439, i1 false
  %1445 = select i1 %1444, i32 %1440, i32 %1437
  %1446 = tail call i32 @llvm.usub.sat.i32(i32 %1420, i32 %1419) #7
  %1447 = tail call i32 @llvm.umax.i32(i32 %1446, i32 %1445) #7
  %1448 = getelementptr inbounds %struct.ZSTD_matchState_t, ptr %0, i32 0, i32 10, i32 3
  %1449 = load i32, ptr %1448, align 4
  %1450 = shl nuw i32 1, %1449
  %1451 = load i32, ptr %1433, align 4
  %1452 = icmp ugt i32 %1451, %1447
  br i1 %1452, label %1453, label %1760

1453:                                             ; preds = %1465, %1418
  %1454 = phi i32 [ %1467, %1465 ], [ %1451, %1418 ]
  %1455 = phi i32 [ %1454, %1465 ], [ 0, %1418 ]
  %1456 = phi i32 [ %1466, %1465 ], [ %1450, %1418 ]
  %1457 = and i32 %1454, %1419
  %1458 = shl i32 %1457, 1
  %1459 = getelementptr i32, ptr %1421, i32 %1458
  %1460 = getelementptr i32, ptr %1459, i32 1
  %1461 = load i32, ptr %1460, align 4
  %1462 = icmp eq i32 %1461, 1
  %1463 = icmp ugt i32 %1456, 1
  %1464 = select i1 %1462, i1 %1463, i1 false
  br i1 %1464, label %1465, label %1469

1465:                                             ; preds = %1453
  store i32 %1455, ptr %1460, align 4
  %1466 = add i32 %1456, -1
  %1467 = load i32, ptr %1459, align 4
  %1468 = icmp ugt i32 %1467, %1447
  br i1 %1468, label %1453, label %1473

1469:                                             ; preds = %1453
  br i1 %1462, label %1470, label %1471

1470:                                             ; preds = %1469
  store i32 0, ptr %1460, align 4
  store i32 0, ptr %1459, align 4
  br label %1471

1471:                                             ; preds = %1470, %1469
  %1472 = icmp eq i32 %1455, 0
  br i1 %1472, label %1760, label %1473

1473:                                             ; preds = %1471, %1465
  %1474 = phi i32 [ %1455, %1471 ], [ %1454, %1465 ]
  %1475 = phi i32 [ %1456, %1471 ], [ %1466, %1465 ]
  %1476 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %1477 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1478 = getelementptr i32, ptr %1421, i32 1
  br label %1479

1479:                                             ; preds = %1755, %1473
  %1480 = phi i32 [ %1474, %1473 ], [ %1485, %1755 ]
  %1481 = phi i32 [ %1475, %1473 ], [ %1758, %1755 ]
  %1482 = and i32 %1480, %1419
  %1483 = shl i32 %1482, 1
  %1484 = getelementptr i32, ptr %1478, i32 %1483
  %1485 = load i32, ptr %1484, align 4
  %1486 = load ptr, ptr %1377, align 4
  %1487 = load i32, ptr %1379, align 4
  %1488 = add i32 %1487, -1
  %1489 = shl nsw i32 -1, %1488
  %1490 = xor i32 %1489, -1
  %1491 = load ptr, ptr %1368, align 4
  %1492 = load ptr, ptr %1476, align 4
  %1493 = load i32, ptr %1477, align 4
  %1494 = icmp ugt i32 %1493, %1480
  %1495 = select i1 %1494, ptr %1492, ptr %1491
  %1496 = getelementptr i8, ptr %1495, i32 %1480
  %1497 = getelementptr i8, ptr %1492, i32 %1493
  %1498 = select i1 %1494, ptr %1497, ptr %2
  %1499 = getelementptr i8, ptr %1491, i32 %1493
  %1500 = and i32 %1480, %1490
  %1501 = shl i32 %1500, 1
  %1502 = getelementptr i32, ptr %1486, i32 %1501
  %1503 = getelementptr i32, ptr %1502, i32 1
  %1504 = load i32, ptr %1502, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5)
  store i32 0, ptr %5, align 4
  %1505 = load i32, ptr %1436, align 4
  %1506 = load i32, ptr %1424, align 4
  %1507 = shl nuw i32 1, %1506
  %1508 = sub i32 %1480, %1505
  %1509 = icmp ugt i32 %1508, %1507
  %1510 = sub i32 %1480, %1507
  %1511 = select i1 %1509, i32 %1510, i32 %1505
  %1512 = icmp ne i32 %1481, 0
  %1513 = icmp ugt i32 %1504, %1511
  %1514 = select i1 %1512, i1 %1513, i1 false
  br i1 %1514, label %1515, label %1755

1515:                                             ; preds = %1479
  %1516 = ptrtoint ptr %1497 to i32
  %1517 = getelementptr i8, ptr %1498, i32 -3
  %1518 = getelementptr i8, ptr %1498, i32 -1
  br label %1519

1519:                                             ; preds = %1744, %1515
  %1520 = phi i32 [ %1481, %1515 ], [ %1751, %1744 ]
  %1521 = phi i32 [ %1504, %1515 ], [ %1750, %1744 ]
  %1522 = phi ptr [ %1503, %1515 ], [ %1748, %1744 ]
  %1523 = phi ptr [ %1502, %1515 ], [ %1747, %1744 ]
  %1524 = phi i32 [ 0, %1515 ], [ %1746, %1744 ]
  %1525 = phi i32 [ 0, %1515 ], [ %1745, %1744 ]
  %1526 = and i32 %1521, %1490
  %1527 = shl i32 %1526, 1
  %1528 = getelementptr i32, ptr %1486, i32 %1527
  %1529 = tail call i32 @llvm.umin.i32(i32 %1525, i32 %1524) #7
  %1530 = add i32 %1529, %1521
  %1531 = icmp ult i32 %1530, %1493
  %1532 = xor i1 %1531, true
  %1533 = select i1 %1532, i1 true, i1 %1494
  br i1 %1533, label %1534, label %1595

1534:                                             ; preds = %1519
  %1535 = select i1 %1531, ptr %1492, ptr %1491
  %1536 = getelementptr i8, ptr %1535, i32 %1521
  %1537 = getelementptr i8, ptr %1496, i32 %1529
  %1538 = getelementptr i8, ptr %1536, i32 %1529
  %1539 = icmp ugt ptr %1517, %1537
  br i1 %1539, label %1540, label %1566

1540:                                             ; preds = %1534
  %1541 = load i32, ptr %1538, align 1
  %1542 = load i32, ptr %1537, align 1
  %1543 = xor i32 %1542, %1541
  %1544 = icmp eq i32 %1543, 0
  br i1 %1544, label %1548, label %1545

1545:                                             ; preds = %1540
  %1546 = tail call i32 @llvm.cttz.i32(i32 %1543, i1 true) #7, !range !8
  %1547 = lshr i32 %1546, 3
  br label %1592

1548:                                             ; preds = %1554, %1540
  %1549 = phi ptr [ %1552, %1554 ], [ %1537, %1540 ]
  %1550 = phi ptr [ %1551, %1554 ], [ %1538, %1540 ]
  %1551 = getelementptr i8, ptr %1550, i32 4
  %1552 = getelementptr i8, ptr %1549, i32 4
  %1553 = icmp ult ptr %1552, %1517
  br i1 %1553, label %1554, label %1566

1554:                                             ; preds = %1548
  %1555 = load i32, ptr %1551, align 1
  %1556 = load i32, ptr %1552, align 1
  %1557 = xor i32 %1556, %1555
  %1558 = icmp eq i32 %1557, 0
  br i1 %1558, label %1548, label %1559

1559:                                             ; preds = %1554
  %1560 = tail call i32 @llvm.cttz.i32(i32 %1557, i1 true) #7, !range !8
  %1561 = lshr i32 %1560, 3
  %1562 = getelementptr i8, ptr %1552, i32 %1561
  %1563 = ptrtoint ptr %1562 to i32
  %1564 = ptrtoint ptr %1537 to i32
  %1565 = sub i32 %1563, %1564
  br label %1592

1566:                                             ; preds = %1548, %1534
  %1567 = phi ptr [ %1537, %1534 ], [ %1552, %1548 ]
  %1568 = phi ptr [ %1538, %1534 ], [ %1551, %1548 ]
  %1569 = icmp ult ptr %1567, %1518
  br i1 %1569, label %1570, label %1577

1570:                                             ; preds = %1566
  %1571 = load i16, ptr %1568, align 1
  %1572 = load i16, ptr %1567, align 1
  %1573 = icmp eq i16 %1571, %1572
  br i1 %1573, label %1574, label %1577

1574:                                             ; preds = %1570
  %1575 = getelementptr i8, ptr %1567, i32 2
  %1576 = getelementptr i8, ptr %1568, i32 2
  br label %1577

1577:                                             ; preds = %1574, %1570, %1566
  %1578 = phi ptr [ %1575, %1574 ], [ %1567, %1570 ], [ %1567, %1566 ]
  %1579 = phi ptr [ %1576, %1574 ], [ %1568, %1570 ], [ %1568, %1566 ]
  %1580 = icmp ult ptr %1578, %1498
  br i1 %1580, label %1581, label %1587

1581:                                             ; preds = %1577
  %1582 = load i8, ptr %1579, align 1
  %1583 = load i8, ptr %1578, align 1
  %1584 = icmp eq i8 %1582, %1583
  %1585 = zext i1 %1584 to i32
  %1586 = getelementptr i8, ptr %1578, i32 %1585
  br label %1587

1587:                                             ; preds = %1581, %1577
  %1588 = phi ptr [ %1578, %1577 ], [ %1586, %1581 ]
  %1589 = ptrtoint ptr %1588 to i32
  %1590 = ptrtoint ptr %1537 to i32
  %1591 = sub i32 %1589, %1590
  br label %1592

1592:                                             ; preds = %1587, %1559, %1545
  %1593 = phi i32 [ %1591, %1587 ], [ %1547, %1545 ], [ %1565, %1559 ]
  %1594 = add i32 %1593, %1529
  br label %1728

1595:                                             ; preds = %1519
  %1596 = getelementptr i8, ptr %1492, i32 %1521
  %1597 = getelementptr i8, ptr %1496, i32 %1529
  %1598 = getelementptr i8, ptr %1596, i32 %1529
  %1599 = ptrtoint ptr %1598 to i32
  %1600 = sub i32 %1516, %1599
  %1601 = getelementptr i8, ptr %1597, i32 %1600
  %1602 = icmp ult ptr %1601, %1498
  %1603 = select i1 %1602, ptr %1601, ptr %1498
  %1604 = getelementptr i8, ptr %1603, i32 -3
  %1605 = icmp ugt ptr %1604, %1597
  br i1 %1605, label %1606, label %1632

1606:                                             ; preds = %1595
  %1607 = load i32, ptr %1598, align 1
  %1608 = load i32, ptr %1597, align 1
  %1609 = xor i32 %1608, %1607
  %1610 = icmp eq i32 %1609, 0
  br i1 %1610, label %1614, label %1611

1611:                                             ; preds = %1606
  %1612 = tail call i32 @llvm.cttz.i32(i32 %1609, i1 true) #7, !range !8
  %1613 = lshr i32 %1612, 3
  br label %1659

1614:                                             ; preds = %1620, %1606
  %1615 = phi ptr [ %1618, %1620 ], [ %1597, %1606 ]
  %1616 = phi ptr [ %1617, %1620 ], [ %1598, %1606 ]
  %1617 = getelementptr i8, ptr %1616, i32 4
  %1618 = getelementptr i8, ptr %1615, i32 4
  %1619 = icmp ult ptr %1618, %1604
  br i1 %1619, label %1620, label %1632

1620:                                             ; preds = %1614
  %1621 = load i32, ptr %1617, align 1
  %1622 = load i32, ptr %1618, align 1
  %1623 = xor i32 %1622, %1621
  %1624 = icmp eq i32 %1623, 0
  br i1 %1624, label %1614, label %1625

1625:                                             ; preds = %1620
  %1626 = tail call i32 @llvm.cttz.i32(i32 %1623, i1 true) #7, !range !8
  %1627 = lshr i32 %1626, 3
  %1628 = getelementptr i8, ptr %1618, i32 %1627
  %1629 = ptrtoint ptr %1628 to i32
  %1630 = ptrtoint ptr %1597 to i32
  %1631 = sub i32 %1629, %1630
  br label %1659

1632:                                             ; preds = %1614, %1595
  %1633 = phi ptr [ %1597, %1595 ], [ %1618, %1614 ]
  %1634 = phi ptr [ %1598, %1595 ], [ %1617, %1614 ]
  %1635 = getelementptr i8, ptr %1603, i32 -1
  %1636 = icmp ult ptr %1633, %1635
  br i1 %1636, label %1637, label %1644

1637:                                             ; preds = %1632
  %1638 = load i16, ptr %1634, align 1
  %1639 = load i16, ptr %1633, align 1
  %1640 = icmp eq i16 %1638, %1639
  br i1 %1640, label %1641, label %1644

1641:                                             ; preds = %1637
  %1642 = getelementptr i8, ptr %1633, i32 2
  %1643 = getelementptr i8, ptr %1634, i32 2
  br label %1644

1644:                                             ; preds = %1641, %1637, %1632
  %1645 = phi ptr [ %1642, %1641 ], [ %1633, %1637 ], [ %1633, %1632 ]
  %1646 = phi ptr [ %1643, %1641 ], [ %1634, %1637 ], [ %1634, %1632 ]
  %1647 = icmp ult ptr %1645, %1603
  br i1 %1647, label %1648, label %1654

1648:                                             ; preds = %1644
  %1649 = load i8, ptr %1646, align 1
  %1650 = load i8, ptr %1645, align 1
  %1651 = icmp eq i8 %1649, %1650
  %1652 = zext i1 %1651 to i32
  %1653 = getelementptr i8, ptr %1645, i32 %1652
  br label %1654

1654:                                             ; preds = %1648, %1644
  %1655 = phi ptr [ %1645, %1644 ], [ %1653, %1648 ]
  %1656 = ptrtoint ptr %1655 to i32
  %1657 = ptrtoint ptr %1597 to i32
  %1658 = sub i32 %1656, %1657
  br label %1659

1659:                                             ; preds = %1654, %1625, %1611
  %1660 = phi i32 [ %1658, %1654 ], [ %1613, %1611 ], [ %1631, %1625 ]
  %1661 = getelementptr i8, ptr %1598, i32 %1660
  %1662 = icmp eq ptr %1661, %1497
  br i1 %1662, label %1663, label %1721

1663:                                             ; preds = %1659
  %1664 = getelementptr i8, ptr %1597, i32 %1660
  %1665 = icmp ugt ptr %1517, %1664
  br i1 %1665, label %1666, label %1692

1666:                                             ; preds = %1663
  %1667 = load i32, ptr %1499, align 1
  %1668 = load i32, ptr %1664, align 1
  %1669 = xor i32 %1668, %1667
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %1674, label %1671

1671:                                             ; preds = %1666
  %1672 = tail call i32 @llvm.cttz.i32(i32 %1669, i1 true) #7, !range !8
  %1673 = lshr i32 %1672, 3
  br label %1718

1674:                                             ; preds = %1680, %1666
  %1675 = phi ptr [ %1678, %1680 ], [ %1664, %1666 ]
  %1676 = phi ptr [ %1677, %1680 ], [ %1499, %1666 ]
  %1677 = getelementptr i8, ptr %1676, i32 4
  %1678 = getelementptr i8, ptr %1675, i32 4
  %1679 = icmp ult ptr %1678, %1517
  br i1 %1679, label %1680, label %1692

1680:                                             ; preds = %1674
  %1681 = load i32, ptr %1677, align 1
  %1682 = load i32, ptr %1678, align 1
  %1683 = xor i32 %1682, %1681
  %1684 = icmp eq i32 %1683, 0
  br i1 %1684, label %1674, label %1685

1685:                                             ; preds = %1680
  %1686 = tail call i32 @llvm.cttz.i32(i32 %1683, i1 true) #7, !range !8
  %1687 = lshr i32 %1686, 3
  %1688 = getelementptr i8, ptr %1678, i32 %1687
  %1689 = ptrtoint ptr %1688 to i32
  %1690 = ptrtoint ptr %1664 to i32
  %1691 = sub i32 %1689, %1690
  br label %1718

1692:                                             ; preds = %1674, %1663
  %1693 = phi ptr [ %1664, %1663 ], [ %1678, %1674 ]
  %1694 = phi ptr [ %1499, %1663 ], [ %1677, %1674 ]
  %1695 = icmp ult ptr %1693, %1518
  br i1 %1695, label %1696, label %1703

1696:                                             ; preds = %1692
  %1697 = load i16, ptr %1694, align 1
  %1698 = load i16, ptr %1693, align 1
  %1699 = icmp eq i16 %1697, %1698
  br i1 %1699, label %1700, label %1703

1700:                                             ; preds = %1696
  %1701 = getelementptr i8, ptr %1693, i32 2
  %1702 = getelementptr i8, ptr %1694, i32 2
  br label %1703

1703:                                             ; preds = %1700, %1696, %1692
  %1704 = phi ptr [ %1701, %1700 ], [ %1693, %1696 ], [ %1693, %1692 ]
  %1705 = phi ptr [ %1702, %1700 ], [ %1694, %1696 ], [ %1694, %1692 ]
  %1706 = icmp ult ptr %1704, %1498
  br i1 %1706, label %1707, label %1713

1707:                                             ; preds = %1703
  %1708 = load i8, ptr %1705, align 1
  %1709 = load i8, ptr %1704, align 1
  %1710 = icmp eq i8 %1708, %1709
  %1711 = zext i1 %1710 to i32
  %1712 = getelementptr i8, ptr %1704, i32 %1711
  br label %1713

1713:                                             ; preds = %1707, %1703
  %1714 = phi ptr [ %1704, %1703 ], [ %1712, %1707 ]
  %1715 = ptrtoint ptr %1714 to i32
  %1716 = ptrtoint ptr %1664 to i32
  %1717 = sub i32 %1715, %1716
  br label %1718

1718:                                             ; preds = %1713, %1685, %1671
  %1719 = phi i32 [ %1717, %1713 ], [ %1673, %1671 ], [ %1691, %1685 ]
  %1720 = add i32 %1719, %1660
  br label %1721

1721:                                             ; preds = %1718, %1659
  %1722 = phi i32 [ %1720, %1718 ], [ %1660, %1659 ]
  %1723 = add i32 %1722, %1529
  %1724 = add i32 %1723, %1521
  %1725 = icmp ult i32 %1724, %1493
  %1726 = getelementptr i8, ptr %1491, i32 %1521
  %1727 = select i1 %1725, ptr %1596, ptr %1726
  br label %1728

1728:                                             ; preds = %1721, %1592
  %1729 = phi ptr [ %1536, %1592 ], [ %1727, %1721 ]
  %1730 = phi i32 [ %1594, %1592 ], [ %1723, %1721 ]
  %1731 = getelementptr i8, ptr %1496, i32 %1730
  %1732 = icmp eq ptr %1731, %1498
  br i1 %1732, label %1755, label %1733

1733:                                             ; preds = %1728
  %1734 = getelementptr i8, ptr %1729, i32 %1730
  %1735 = load i8, ptr %1734, align 1
  %1736 = load i8, ptr %1731, align 1
  %1737 = icmp ult i8 %1735, %1736
  br i1 %1737, label %1738, label %1742

1738:                                             ; preds = %1733
  store i32 %1521, ptr %1523, align 4
  %1739 = icmp ugt i32 %1521, %1447
  br i1 %1739, label %1740, label %1755

1740:                                             ; preds = %1738
  %1741 = getelementptr i32, ptr %1528, i32 1
  br label %1744

1742:                                             ; preds = %1733
  store i32 %1521, ptr %1522, align 4
  %1743 = icmp ugt i32 %1521, %1447
  br i1 %1743, label %1744, label %1755

1744:                                             ; preds = %1742, %1740
  %1745 = phi i32 [ %1730, %1740 ], [ %1525, %1742 ]
  %1746 = phi i32 [ %1524, %1740 ], [ %1730, %1742 ]
  %1747 = phi ptr [ %1741, %1740 ], [ %1523, %1742 ]
  %1748 = phi ptr [ %1522, %1740 ], [ %1528, %1742 ]
  %1749 = phi ptr [ %1741, %1740 ], [ %1528, %1742 ]
  %1750 = load i32, ptr %1749, align 4
  %1751 = add i32 %1520, -1
  %1752 = icmp ne i32 %1751, 0
  %1753 = icmp ugt i32 %1750, %1511
  %1754 = select i1 %1752, i1 %1753, i1 false
  br i1 %1754, label %1519, label %1755

1755:                                             ; preds = %1744, %1742, %1738, %1728, %1479
  %1756 = phi ptr [ %1502, %1479 ], [ %1747, %1744 ], [ %1523, %1728 ], [ %5, %1738 ], [ %1523, %1742 ]
  %1757 = phi ptr [ %1503, %1479 ], [ %1748, %1744 ], [ %1522, %1728 ], [ %1522, %1738 ], [ %5, %1742 ]
  store i32 0, ptr %1757, align 4
  store i32 0, ptr %1756, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5)
  %1758 = add i32 %1481, 1
  %1759 = icmp eq i32 %1485, 0
  br i1 %1759, label %1760, label %1479

1760:                                             ; preds = %1755, %1471, %1418
  %1761 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 2
  %1762 = load ptr, ptr %1761, align 4
  %1763 = getelementptr inbounds %struct.ZSTD_window_t, ptr %0, i32 0, i32 3
  %1764 = load i32, ptr %1763, align 4
  %1765 = getelementptr i8, ptr %1762, i32 %1764
  %1766 = getelementptr i8, ptr %1422, i32 %1764
  %1767 = and i32 %1420, %1419
  %1768 = shl i32 %1767, 1
  %1769 = getelementptr i32, ptr %1421, i32 %1768
  %1770 = getelementptr i32, ptr %1769, i32 1
  %1771 = add i32 %1420, 9
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6)
  store i32 0, ptr %6, align 4
  %1772 = load i32, ptr %1433, align 4
  store i32 %1420, ptr %1433, align 4
  %1773 = icmp ugt i32 %1772, %1445
  br i1 %1773, label %1774, label %2040

1774:                                             ; preds = %1760
  %1775 = getelementptr i8, ptr %2, i32 -3
  %1776 = getelementptr i8, ptr %2, i32 -1
  %1777 = ptrtoint ptr %1765 to i32
  %1778 = add i32 %1420, 1
  %1779 = add i32 %1420, 2
  br label %1780

1780:                                             ; preds = %2029, %1774
  %1781 = phi i32 [ 0, %1774 ], [ %2016, %2029 ]
  %1782 = phi i32 [ %1771, %1774 ], [ %2015, %2029 ]
  %1783 = phi ptr [ %1770, %1774 ], [ %2034, %2029 ]
  %1784 = phi ptr [ %1769, %1774 ], [ %2033, %2029 ]
  %1785 = phi i32 [ 0, %1774 ], [ %2032, %2029 ]
  %1786 = phi i32 [ 0, %1774 ], [ %2031, %2029 ]
  %1787 = phi i32 [ %1772, %1774 ], [ %2035, %2029 ]
  %1788 = phi i32 [ %1450, %1774 ], [ %2036, %2029 ]
  %1789 = and i32 %1787, %1419
  %1790 = shl i32 %1789, 1
  %1791 = getelementptr i32, ptr %1421, i32 %1790
  %1792 = tail call i32 @llvm.umin.i32(i32 %1786, i32 %1785) #7
  %1793 = add i32 %1792, %1787
  %1794 = icmp ult i32 %1793, %1764
  br i1 %1794, label %1855, label %1795

1795:                                             ; preds = %1780
  %1796 = getelementptr i8, ptr %1422, i32 %1787
  %1797 = getelementptr i8, ptr %1, i32 %1792
  %1798 = getelementptr i8, ptr %1796, i32 %1792
  %1799 = icmp ugt ptr %1775, %1797
  br i1 %1799, label %1800, label %1826

1800:                                             ; preds = %1795
  %1801 = load i32, ptr %1798, align 1
  %1802 = load i32, ptr %1797, align 1
  %1803 = xor i32 %1802, %1801
  %1804 = icmp eq i32 %1803, 0
  br i1 %1804, label %1808, label %1805

1805:                                             ; preds = %1800
  %1806 = tail call i32 @llvm.cttz.i32(i32 %1803, i1 true) #7, !range !8
  %1807 = lshr i32 %1806, 3
  br label %1852

1808:                                             ; preds = %1814, %1800
  %1809 = phi ptr [ %1812, %1814 ], [ %1797, %1800 ]
  %1810 = phi ptr [ %1811, %1814 ], [ %1798, %1800 ]
  %1811 = getelementptr i8, ptr %1810, i32 4
  %1812 = getelementptr i8, ptr %1809, i32 4
  %1813 = icmp ult ptr %1812, %1775
  br i1 %1813, label %1814, label %1826

1814:                                             ; preds = %1808
  %1815 = load i32, ptr %1811, align 1
  %1816 = load i32, ptr %1812, align 1
  %1817 = xor i32 %1816, %1815
  %1818 = icmp eq i32 %1817, 0
  br i1 %1818, label %1808, label %1819

1819:                                             ; preds = %1814
  %1820 = tail call i32 @llvm.cttz.i32(i32 %1817, i1 true) #7, !range !8
  %1821 = lshr i32 %1820, 3
  %1822 = getelementptr i8, ptr %1812, i32 %1821
  %1823 = ptrtoint ptr %1822 to i32
  %1824 = ptrtoint ptr %1797 to i32
  %1825 = sub i32 %1823, %1824
  br label %1852

1826:                                             ; preds = %1808, %1795
  %1827 = phi ptr [ %1797, %1795 ], [ %1812, %1808 ]
  %1828 = phi ptr [ %1798, %1795 ], [ %1811, %1808 ]
  %1829 = icmp ult ptr %1827, %1776
  br i1 %1829, label %1830, label %1837

1830:                                             ; preds = %1826
  %1831 = load i16, ptr %1828, align 1
  %1832 = load i16, ptr %1827, align 1
  %1833 = icmp eq i16 %1831, %1832
  br i1 %1833, label %1834, label %1837

1834:                                             ; preds = %1830
  %1835 = getelementptr i8, ptr %1827, i32 2
  %1836 = getelementptr i8, ptr %1828, i32 2
  br label %1837

1837:                                             ; preds = %1834, %1830, %1826
  %1838 = phi ptr [ %1835, %1834 ], [ %1827, %1830 ], [ %1827, %1826 ]
  %1839 = phi ptr [ %1836, %1834 ], [ %1828, %1830 ], [ %1828, %1826 ]
  %1840 = icmp ult ptr %1838, %2
  br i1 %1840, label %1841, label %1847

1841:                                             ; preds = %1837
  %1842 = load i8, ptr %1839, align 1
  %1843 = load i8, ptr %1838, align 1
  %1844 = icmp eq i8 %1842, %1843
  %1845 = zext i1 %1844 to i32
  %1846 = getelementptr i8, ptr %1838, i32 %1845
  br label %1847

1847:                                             ; preds = %1841, %1837
  %1848 = phi ptr [ %1838, %1837 ], [ %1846, %1841 ]
  %1849 = ptrtoint ptr %1848 to i32
  %1850 = ptrtoint ptr %1797 to i32
  %1851 = sub i32 %1849, %1850
  br label %1852

1852:                                             ; preds = %1847, %1819, %1805
  %1853 = phi i32 [ %1851, %1847 ], [ %1807, %1805 ], [ %1825, %1819 ]
  %1854 = add i32 %1853, %1792
  br label %1987

1855:                                             ; preds = %1780
  %1856 = getelementptr i8, ptr %1762, i32 %1787
  %1857 = getelementptr i8, ptr %1, i32 %1792
  %1858 = getelementptr i8, ptr %1856, i32 %1792
  %1859 = ptrtoint ptr %1858 to i32
  %1860 = sub i32 %1777, %1859
  %1861 = getelementptr i8, ptr %1857, i32 %1860
  %1862 = icmp ult ptr %1861, %2
  %1863 = select i1 %1862, ptr %1861, ptr %2
  %1864 = getelementptr i8, ptr %1863, i32 -3
  %1865 = icmp ugt ptr %1864, %1857
  br i1 %1865, label %1866, label %1892

1866:                                             ; preds = %1855
  %1867 = load i32, ptr %1858, align 1
  %1868 = load i32, ptr %1857, align 1
  %1869 = xor i32 %1868, %1867
  %1870 = icmp eq i32 %1869, 0
  br i1 %1870, label %1874, label %1871

1871:                                             ; preds = %1866
  %1872 = tail call i32 @llvm.cttz.i32(i32 %1869, i1 true) #7, !range !8
  %1873 = lshr i32 %1872, 3
  br label %1919

1874:                                             ; preds = %1880, %1866
  %1875 = phi ptr [ %1878, %1880 ], [ %1857, %1866 ]
  %1876 = phi ptr [ %1877, %1880 ], [ %1858, %1866 ]
  %1877 = getelementptr i8, ptr %1876, i32 4
  %1878 = getelementptr i8, ptr %1875, i32 4
  %1879 = icmp ult ptr %1878, %1864
  br i1 %1879, label %1880, label %1892

1880:                                             ; preds = %1874
  %1881 = load i32, ptr %1877, align 1
  %1882 = load i32, ptr %1878, align 1
  %1883 = xor i32 %1882, %1881
  %1884 = icmp eq i32 %1883, 0
  br i1 %1884, label %1874, label %1885

1885:                                             ; preds = %1880
  %1886 = tail call i32 @llvm.cttz.i32(i32 %1883, i1 true) #7, !range !8
  %1887 = lshr i32 %1886, 3
  %1888 = getelementptr i8, ptr %1878, i32 %1887
  %1889 = ptrtoint ptr %1888 to i32
  %1890 = ptrtoint ptr %1857 to i32
  %1891 = sub i32 %1889, %1890
  br label %1919

1892:                                             ; preds = %1874, %1855
  %1893 = phi ptr [ %1857, %1855 ], [ %1878, %1874 ]
  %1894 = phi ptr [ %1858, %1855 ], [ %1877, %1874 ]
  %1895 = getelementptr i8, ptr %1863, i32 -1
  %1896 = icmp ult ptr %1893, %1895
  br i1 %1896, label %1897, label %1904

1897:                                             ; preds = %1892
  %1898 = load i16, ptr %1894, align 1
  %1899 = load i16, ptr %1893, align 1
  %1900 = icmp eq i16 %1898, %1899
  br i1 %1900, label %1901, label %1904

1901:                                             ; preds = %1897
  %1902 = getelementptr i8, ptr %1893, i32 2
  %1903 = getelementptr i8, ptr %1894, i32 2
  br label %1904

1904:                                             ; preds = %1901, %1897, %1892
  %1905 = phi ptr [ %1902, %1901 ], [ %1893, %1897 ], [ %1893, %1892 ]
  %1906 = phi ptr [ %1903, %1901 ], [ %1894, %1897 ], [ %1894, %1892 ]
  %1907 = icmp ult ptr %1905, %1863
  br i1 %1907, label %1908, label %1914

1908:                                             ; preds = %1904
  %1909 = load i8, ptr %1906, align 1
  %1910 = load i8, ptr %1905, align 1
  %1911 = icmp eq i8 %1909, %1910
  %1912 = zext i1 %1911 to i32
  %1913 = getelementptr i8, ptr %1905, i32 %1912
  br label %1914

1914:                                             ; preds = %1908, %1904
  %1915 = phi ptr [ %1905, %1904 ], [ %1913, %1908 ]
  %1916 = ptrtoint ptr %1915 to i32
  %1917 = ptrtoint ptr %1857 to i32
  %1918 = sub i32 %1916, %1917
  br label %1919

1919:                                             ; preds = %1914, %1885, %1871
  %1920 = phi i32 [ %1918, %1914 ], [ %1873, %1871 ], [ %1891, %1885 ]
  %1921 = getelementptr i8, ptr %1858, i32 %1920
  %1922 = icmp eq ptr %1921, %1765
  br i1 %1922, label %1923, label %1981

1923:                                             ; preds = %1919
  %1924 = getelementptr i8, ptr %1857, i32 %1920
  %1925 = icmp ugt ptr %1775, %1924
  br i1 %1925, label %1926, label %1952

1926:                                             ; preds = %1923
  %1927 = load i32, ptr %1766, align 1
  %1928 = load i32, ptr %1924, align 1
  %1929 = xor i32 %1928, %1927
  %1930 = icmp eq i32 %1929, 0
  br i1 %1930, label %1934, label %1931

1931:                                             ; preds = %1926
  %1932 = tail call i32 @llvm.cttz.i32(i32 %1929, i1 true) #7, !range !8
  %1933 = lshr i32 %1932, 3
  br label %1978

1934:                                             ; preds = %1940, %1926
  %1935 = phi ptr [ %1938, %1940 ], [ %1924, %1926 ]
  %1936 = phi ptr [ %1937, %1940 ], [ %1766, %1926 ]
  %1937 = getelementptr i8, ptr %1936, i32 4
  %1938 = getelementptr i8, ptr %1935, i32 4
  %1939 = icmp ult ptr %1938, %1775
  br i1 %1939, label %1940, label %1952

1940:                                             ; preds = %1934
  %1941 = load i32, ptr %1937, align 1
  %1942 = load i32, ptr %1938, align 1
  %1943 = xor i32 %1942, %1941
  %1944 = icmp eq i32 %1943, 0
  br i1 %1944, label %1934, label %1945

1945:                                             ; preds = %1940
  %1946 = tail call i32 @llvm.cttz.i32(i32 %1943, i1 true) #7, !range !8
  %1947 = lshr i32 %1946, 3
  %1948 = getelementptr i8, ptr %1938, i32 %1947
  %1949 = ptrtoint ptr %1948 to i32
  %1950 = ptrtoint ptr %1924 to i32
  %1951 = sub i32 %1949, %1950
  br label %1978

1952:                                             ; preds = %1934, %1923
  %1953 = phi ptr [ %1924, %1923 ], [ %1938, %1934 ]
  %1954 = phi ptr [ %1766, %1923 ], [ %1937, %1934 ]
  %1955 = icmp ult ptr %1953, %1776
  br i1 %1955, label %1956, label %1963

1956:                                             ; preds = %1952
  %1957 = load i16, ptr %1954, align 1
  %1958 = load i16, ptr %1953, align 1
  %1959 = icmp eq i16 %1957, %1958
  br i1 %1959, label %1960, label %1963

1960:                                             ; preds = %1956
  %1961 = getelementptr i8, ptr %1953, i32 2
  %1962 = getelementptr i8, ptr %1954, i32 2
  br label %1963

1963:                                             ; preds = %1960, %1956, %1952
  %1964 = phi ptr [ %1961, %1960 ], [ %1953, %1956 ], [ %1953, %1952 ]
  %1965 = phi ptr [ %1962, %1960 ], [ %1954, %1956 ], [ %1954, %1952 ]
  %1966 = icmp ult ptr %1964, %2
  br i1 %1966, label %1967, label %1973

1967:                                             ; preds = %1963
  %1968 = load i8, ptr %1965, align 1
  %1969 = load i8, ptr %1964, align 1
  %1970 = icmp eq i8 %1968, %1969
  %1971 = zext i1 %1970 to i32
  %1972 = getelementptr i8, ptr %1964, i32 %1971
  br label %1973

1973:                                             ; preds = %1967, %1963
  %1974 = phi ptr [ %1964, %1963 ], [ %1972, %1967 ]
  %1975 = ptrtoint ptr %1974 to i32
  %1976 = ptrtoint ptr %1924 to i32
  %1977 = sub i32 %1975, %1976
  br label %1978

1978:                                             ; preds = %1973, %1945, %1931
  %1979 = phi i32 [ %1977, %1973 ], [ %1933, %1931 ], [ %1951, %1945 ]
  %1980 = add i32 %1979, %1920
  br label %1981

1981:                                             ; preds = %1978, %1919
  %1982 = phi i32 [ %1980, %1978 ], [ %1920, %1919 ]
  %1983 = add i32 %1982, %1792
  %1984 = add i32 %1983, %1787
  %1985 = icmp ult i32 %1984, %1764
  %1986 = select i1 %1985, ptr %1762, ptr %1422
  br label %1987

1987:                                             ; preds = %1981, %1852
  %1988 = phi i32 [ %1854, %1852 ], [ %1983, %1981 ]
  %1989 = phi ptr [ %1422, %1852 ], [ %1986, %1981 ]
  %1990 = icmp ugt i32 %1988, %1781
  br i1 %1990, label %1991, label %2014

1991:                                             ; preds = %1987
  %1992 = sub i32 %1782, %1787
  %1993 = icmp ugt i32 %1988, %1992
  %1994 = add i32 %1988, %1787
  %1995 = select i1 %1993, i32 %1994, i32 %1782
  %1996 = sub i32 %1988, %1781
  %1997 = shl i32 %1996, 2
  %1998 = sub i32 %1778, %1787
  %1999 = tail call i32 @llvm.ctlz.i32(i32 %1998, i1 false) #7, !range !8
  %2000 = xor i32 %1999, 31
  %2001 = load i32, ptr %3, align 4
  %2002 = add i32 %2001, 1
  %2003 = tail call i32 @llvm.ctlz.i32(i32 %2002, i1 false) #7, !range !8
  %2004 = xor i32 %2003, -32
  %2005 = add nuw nsw i32 %2000, 1
  %2006 = add nsw i32 %2005, %2004
  %2007 = icmp sgt i32 %1997, %2006
  br i1 %2007, label %2008, label %2010

2008:                                             ; preds = %1991
  %2009 = sub i32 %1779, %1787
  store i32 %2009, ptr %3, align 4
  br label %2010

2010:                                             ; preds = %2008, %1991
  %2011 = phi i32 [ %1988, %2008 ], [ %1781, %1991 ]
  %2012 = getelementptr i8, ptr %1, i32 %1988
  %2013 = icmp eq ptr %2012, %2
  br i1 %2013, label %2040, label %2014

2014:                                             ; preds = %2010, %1987
  %2015 = phi i32 [ %1995, %2010 ], [ %1782, %1987 ]
  %2016 = phi i32 [ %2011, %2010 ], [ %1781, %1987 ]
  %2017 = getelementptr i8, ptr %1989, i32 %1787
  %2018 = getelementptr i8, ptr %2017, i32 %1988
  %2019 = load i8, ptr %2018, align 1
  %2020 = getelementptr i8, ptr %1, i32 %1988
  %2021 = load i8, ptr %2020, align 1
  %2022 = icmp ult i8 %2019, %2021
  br i1 %2022, label %2023, label %2027

2023:                                             ; preds = %2014
  store i32 %1787, ptr %1784, align 4
  %2024 = icmp ugt i32 %1787, %1446
  br i1 %2024, label %2025, label %2040

2025:                                             ; preds = %2023
  %2026 = getelementptr i32, ptr %1791, i32 1
  br label %2029

2027:                                             ; preds = %2014
  store i32 %1787, ptr %1783, align 4
  %2028 = icmp ugt i32 %1787, %1446
  br i1 %2028, label %2029, label %2040

2029:                                             ; preds = %2027, %2025
  %2030 = phi ptr [ %2026, %2025 ], [ %1791, %2027 ]
  %2031 = phi i32 [ %1988, %2025 ], [ %1786, %2027 ]
  %2032 = phi i32 [ %1785, %2025 ], [ %1988, %2027 ]
  %2033 = phi ptr [ %2026, %2025 ], [ %1784, %2027 ]
  %2034 = phi ptr [ %1783, %2025 ], [ %1791, %2027 ]
  %2035 = load i32, ptr %2030, align 4
  %2036 = add i32 %1788, -1
  %2037 = icmp ne i32 %2036, 0
  %2038 = icmp ugt i32 %2035, %1445
  %2039 = select i1 %2037, i1 %2038, i1 false
  br i1 %2039, label %1780, label %2040

2040:                                             ; preds = %2029, %2027, %2023, %2010, %1760
  %2041 = phi ptr [ %1769, %1760 ], [ %1784, %2010 ], [ %2033, %2029 ], [ %6, %2023 ], [ %1784, %2027 ]
  %2042 = phi ptr [ %1770, %1760 ], [ %1783, %2010 ], [ %2034, %2029 ], [ %1783, %2023 ], [ %6, %2027 ]
  %2043 = phi i32 [ %1771, %1760 ], [ %1995, %2010 ], [ %2015, %2029 ], [ %2015, %2023 ], [ %2015, %2027 ]
  %2044 = phi i32 [ 0, %1760 ], [ %2011, %2010 ], [ %2016, %2029 ], [ %2016, %2023 ], [ %2016, %2027 ]
  store i32 0, ptr %2042, align 4
  store i32 0, ptr %2041, align 4
  %2045 = add i32 %2043, -8
  store i32 %2045, ptr %1370, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6)
  br label %2046

2046:                                             ; preds = %2040, %1367, %1361, %688, %682, %13
  %2047 = phi i32 [ %686, %682 ], [ 0, %13 ], [ %1365, %1361 ], [ 0, %688 ], [ %2044, %2040 ], [ 0, %1367 ]
  ret i32 %2047
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #6

attributes #0 = { nofree norecurse nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind null_pointer_is_valid sspstrong uwtable(sync) "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+armv7-a,+dsp,+read-tp-hard,+soft-float,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 1, !"min_enum_size", i32 4}
!2 = !{i32 8, !"branch-target-enforcement", i32 0}
!3 = !{i32 8, !"sign-return-address", i32 0}
!4 = !{i32 8, !"sign-return-address-all", i32 0}
!5 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!6 = !{i32 7, !"uwtable", i32 1}
!7 = !{!"clang version 15.0.0 (/llk/llvm-project-main/clang 126a1f78513fb688819156df98cf7ea83b5e8c18)"}
!8 = !{i32 0, i32 33}
!9 = distinct !{ptr @ZSTD_BtFindBestMatch_extDict_selectMLS, null}
